YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Bgx9u.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

div(g,g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) BuiltinConflictTransformerProof [EQUIVALENT, 0 ms]
(2) Prolog
(3) PrologToDTProblemTransformerProof [SOUND, 23 ms]
(4) TRIPLES
(5) TriplesToPiDPProof [SOUND, 0 ms]
(6) PiDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) PiDP
        (10) UsableRulesProof [EQUIVALENT, 0 ms]
        (11) PiDP
        (12) PiDPToQDPProof [SOUND, 0 ms]
        (13) QDP
        (14) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (15) YES
    (16) PiDP
        (17) PiDPToQDPProof [SOUND, 0 ms]
        (18) QDP
        (19) QDPQMonotonicMRRProof [EQUIVALENT, 5 ms]
        (20) QDP
        (21) DependencyGraphProof [EQUIVALENT, 0 ms]
        (22) TRUE


----------------------------------------

(0)
Obligation:
Clauses:

div(X, 0, Z) :- ','(!, fail).
div(0, Y, Z) :- ','(!, =(Z, 0)).
div(X, Y, s(Z)) :- ','(minus(X, Y, U), div(U, Y, Z)).
minus(0, Y, 0).
minus(X, 0, X).
minus(s(X), s(Y), Z) :- minus(X, Y, Z).
=(X, X).


Query: div(g,g,a)
----------------------------------------

(1) BuiltinConflictTransformerProof (EQUIVALENT)
Renamed defined predicates conflicting with built-in predicates [PROLOG].
----------------------------------------

(2)
Obligation:
Clauses:

div(X, 0, Z) :- ','(!, fail).
div(0, Y, Z) :- ','(!, user_defined_=(Z, 0)).
div(X, Y, s(Z)) :- ','(minus(X, Y, U), div(U, Y, Z)).
minus(0, Y, 0).
minus(X, 0, X).
minus(s(X), s(Y), Z) :- minus(X, Y, Z).
user_defined_=(X, X).


Query: div(g,g,a)
----------------------------------------

(3) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(div X (0) Z)",
                "(',' (!) (fail))"
            ],
            [
                "(div (0) Y Z)",
                "(',' (!) (user_defined_= Z (0)))"
            ],
            [
                "(div X Y (s Z))",
                "(',' (minus X Y U) (div U Y Z))"
            ],
            [
                "(minus (0) Y (0))",
                null
            ],
            [
                "(minus X (0) X)",
                null
            ],
            [
                "(minus (s X) (s Y) Z)",
                "(minus X Y Z)"
            ],
            [
                "(user_defined_= X X)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "172": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(',' (minus T19 T20 X18) (div X18 T20 T22))"
                    },
                    {
                        "clause": 5,
                        "scope": 3,
                        "term": "(',' (minus T19 T20 X18) (div X18 T20 T22))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(div T19 T20 T3)",
                            "(div X3 (0) X4)"
                        ],
                        [
                            "(div T19 T20 T3)",
                            "(div (0) X7 X8)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T19",
                        "T20"
                    ],
                    "free": [
                        "X3",
                        "X4",
                        "X7",
                        "X8",
                        "X18"
                    ],
                    "exprvars": []
                }
            },
            "173": {
                "goal": [{
                    "clause": 5,
                    "scope": 3,
                    "term": "(',' (minus T19 T20 X18) (div X18 T20 T22))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(div T19 T20 T3)",
                            "(div X3 (0) X4)"
                        ],
                        [
                            "(div T19 T20 T3)",
                            "(div (0) X7 X8)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T19",
                        "T20"
                    ],
                    "free": [
                        "X3",
                        "X4",
                        "X7",
                        "X8",
                        "X18"
                    ],
                    "exprvars": []
                }
            },
            "174": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (minus T29 T30 X32) (div X32 (s T30) T22))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T29",
                        "T30"
                    ],
                    "free": ["X32"],
                    "exprvars": []
                }
            },
            "175": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "154": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "155": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "177": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(minus T29 T30 X32)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T29",
                        "T30"
                    ],
                    "free": ["X32"],
                    "exprvars": []
                }
            },
            "310": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(minus T29 T30 X32)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T29",
                        "T30"
                    ],
                    "free": ["X32"],
                    "exprvars": []
                }
            },
            "157": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "179": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(div T33 (s T30) T22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T33"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "311": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(minus T29 T30 X32)"
                    },
                    {
                        "clause": 5,
                        "scope": 4,
                        "term": "(minus T29 T30 X32)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T29",
                        "T30"
                    ],
                    "free": ["X32"],
                    "exprvars": []
                }
            },
            "312": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "313": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "314": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "316": {
                "goal": [{
                    "clause": 4,
                    "scope": 4,
                    "term": "(minus T29 T30 X32)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T29",
                        "T30"
                    ],
                    "free": ["X32"],
                    "exprvars": []
                }
            },
            "317": {
                "goal": [{
                    "clause": 5,
                    "scope": 4,
                    "term": "(minus T29 T30 X32)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T29",
                        "T30"
                    ],
                    "free": ["X32"],
                    "exprvars": []
                }
            },
            "319": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "141": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(div T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(div T1 T2 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(div T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "142": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (fail))"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(div T6 (0) T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(div T6 (0) T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [],
                    "exprvars": []
                }
            },
            "164": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (minus T19 T20 X18) (div X18 T20 T22))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(div T19 T20 T3)",
                            "(div X3 (0) X4)"
                        ],
                        [
                            "(div T19 T20 T3)",
                            "(div (0) X7 X8)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T19",
                        "T20"
                    ],
                    "free": [
                        "X3",
                        "X4",
                        "X7",
                        "X8",
                        "X18"
                    ],
                    "exprvars": []
                }
            },
            "143": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(div T1 T2 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(div T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(div T1 T2 T3)",
                        "(div X3 (0) X4)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [
                        "X3",
                        "X4"
                    ],
                    "exprvars": []
                }
            },
            "144": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(fail)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "320": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(div T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "145": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "167": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "321": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "146": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (user_defined_= T12 (0)))"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(div (0) T10 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(div (0) T10 T3)",
                        "(div X3 (0) X4)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X3",
                        "X4"
                    ],
                    "exprvars": []
                }
            },
            "147": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(div T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(div T1 T2 T3)",
                            "(div X3 (0) X4)"
                        ],
                        [
                            "(div T1 T2 T3)",
                            "(div (0) X7 X8)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [
                        "X3",
                        "X4",
                        "X7",
                        "X8"
                    ],
                    "exprvars": []
                }
            },
            "169": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(',' (minus T19 T20 X18) (div X18 T20 T22))"
                    },
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(',' (minus T19 T20 X18) (div X18 T20 T22))"
                    },
                    {
                        "clause": 5,
                        "scope": 3,
                        "term": "(',' (minus T19 T20 X18) (div X18 T20 T22))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(div T19 T20 T3)",
                            "(div X3 (0) X4)"
                        ],
                        [
                            "(div T19 T20 T3)",
                            "(div (0) X7 X8)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T19",
                        "T20"
                    ],
                    "free": [
                        "X3",
                        "X4",
                        "X7",
                        "X8",
                        "X18"
                    ],
                    "exprvars": []
                }
            },
            "148": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(user_defined_= T12 (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "149": {
                "goal": [{
                    "clause": 6,
                    "scope": 2,
                    "term": "(user_defined_= T12 (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "325": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(minus T50 T51 X58)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T50",
                        "T51"
                    ],
                    "free": ["X58"],
                    "exprvars": []
                }
            },
            "326": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "309": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(minus T29 T30 X32)"
                    },
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(minus T29 T30 X32)"
                    },
                    {
                        "clause": 5,
                        "scope": 4,
                        "term": "(minus T29 T30 X32)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T29",
                        "T30"
                    ],
                    "free": ["X32"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 141,
                "label": "CASE"
            },
            {
                "from": 141,
                "to": 142,
                "label": "EVAL with clause\ndiv(X3, 0, X4) :- ','(!_1, fail).\nand substitutionT1 -> T6,\nX3 -> T6,\nT2 -> 0,\nT3 -> T7,\nX4 -> T7"
            },
            {
                "from": 141,
                "to": 143,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 142,
                "to": 144,
                "label": "CUT"
            },
            {
                "from": 143,
                "to": 146,
                "label": "EVAL with clause\ndiv(0, X7, X8) :- ','(!_1, user_defined_=(X8, 0)).\nand substitutionT1 -> 0,\nT2 -> T10,\nX7 -> T10,\nT3 -> T12,\nX8 -> T12,\nT11 -> T12"
            },
            {
                "from": 143,
                "to": 147,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 144,
                "to": 145,
                "label": "FAILURE"
            },
            {
                "from": 146,
                "to": 148,
                "label": "CUT"
            },
            {
                "from": 147,
                "to": 164,
                "label": "EVAL with clause\ndiv(X15, X16, s(X17)) :- ','(minus(X15, X16, X18), div(X18, X16, X17)).\nand substitutionT1 -> T19,\nX15 -> T19,\nT2 -> T20,\nX16 -> T20,\nX17 -> T22,\nT3 -> s(T22),\nT21 -> T22"
            },
            {
                "from": 147,
                "to": 167,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 148,
                "to": 149,
                "label": "CASE"
            },
            {
                "from": 149,
                "to": 154,
                "label": "EVAL with clause\nuser_defined_=(X11, X11).\nand substitutionT12 -> 0,\nX11 -> 0,\nT15 -> 0"
            },
            {
                "from": 149,
                "to": 155,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 154,
                "to": 157,
                "label": "SUCCESS"
            },
            {
                "from": 164,
                "to": 169,
                "label": "CASE"
            },
            {
                "from": 169,
                "to": 172,
                "label": "BACKTRACK\nfor clause: minus(0, Y, 0)\nwith clash: (div(T19, T20, T3), div(0, X7, X8))"
            },
            {
                "from": 172,
                "to": 173,
                "label": "BACKTRACK\nfor clause: minus(X, 0, X)\nwith clash: (div(T19, T20, T3), div(X3, 0, X4))"
            },
            {
                "from": 173,
                "to": 174,
                "label": "EVAL with clause\nminus(s(X29), s(X30), X31) :- minus(X29, X30, X31).\nand substitutionX29 -> T29,\nT19 -> s(T29),\nX30 -> T30,\nT20 -> s(T30),\nX18 -> X32,\nX31 -> X32"
            },
            {
                "from": 173,
                "to": 175,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 174,
                "to": 177,
                "label": "SPLIT 1"
            },
            {
                "from": 174,
                "to": 179,
                "label": "SPLIT 2\nnew knowledge:\nT29 is ground\nT30 is ground\nT33 is ground\nreplacements:X32 -> T33"
            },
            {
                "from": 177,
                "to": 309,
                "label": "CASE"
            },
            {
                "from": 179,
                "to": 2,
                "label": "INSTANCE with matching:\nT1 -> T33\nT2 -> s(T30)\nT3 -> T22"
            },
            {
                "from": 309,
                "to": 310,
                "label": "PARALLEL"
            },
            {
                "from": 309,
                "to": 311,
                "label": "PARALLEL"
            },
            {
                "from": 310,
                "to": 312,
                "label": "EVAL with clause\nminus(0, X41, 0).\nand substitutionT29 -> 0,\nT30 -> T40,\nX41 -> T40,\nX32 -> 0"
            },
            {
                "from": 310,
                "to": 313,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 311,
                "to": 316,
                "label": "PARALLEL"
            },
            {
                "from": 311,
                "to": 317,
                "label": "PARALLEL"
            },
            {
                "from": 312,
                "to": 314,
                "label": "SUCCESS"
            },
            {
                "from": 316,
                "to": 319,
                "label": "EVAL with clause\nminus(X46, 0, X46).\nand substitutionT29 -> T45,\nX46 -> T45,\nT30 -> 0,\nX32 -> T45"
            },
            {
                "from": 316,
                "to": 320,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 317,
                "to": 325,
                "label": "EVAL with clause\nminus(s(X55), s(X56), X57) :- minus(X55, X56, X57).\nand substitutionX55 -> T50,\nT29 -> s(T50),\nX56 -> T51,\nT30 -> s(T51),\nX32 -> X58,\nX57 -> X58"
            },
            {
                "from": 317,
                "to": 326,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 319,
                "to": 321,
                "label": "SUCCESS"
            },
            {
                "from": 325,
                "to": 177,
                "label": "INSTANCE with matching:\nT29 -> T50\nT30 -> T51\nX32 -> X58"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(4)
Obligation:
Triples:

minusB(s(X1), s(X2), X3) :- minusB(X1, X2, X3).
divA(s(X1), s(X2), s(X3)) :- minusB(X1, X2, X4).
divA(s(X1), s(X2), s(X3)) :- ','(minuscB(X1, X2, X4), divA(X4, s(X2), X3)).

Clauses:

divcA(0, X1, 0).
divcA(s(X1), s(X2), s(X3)) :- ','(minuscB(X1, X2, X4), divcA(X4, s(X2), X3)).
minuscB(0, X1, 0).
minuscB(X1, 0, X1).
minuscB(s(X1), s(X2), X3) :- minuscB(X1, X2, X3).

Afs:

divA(x1, x2, x3)  =  divA(x1, x2)


----------------------------------------

(5) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

divA_in_3: (b,b,f)

minusB_in_3: (b,b,f)

minuscB_in_3: (b,b,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   DIVA_IN_GGA(s(X1), s(X2), s(X3)) -> U2_GGA(X1, X2, X3, minusB_in_gga(X1, X2, X4))
   DIVA_IN_GGA(s(X1), s(X2), s(X3)) -> MINUSB_IN_GGA(X1, X2, X4)
   MINUSB_IN_GGA(s(X1), s(X2), X3) -> U1_GGA(X1, X2, X3, minusB_in_gga(X1, X2, X3))
   MINUSB_IN_GGA(s(X1), s(X2), X3) -> MINUSB_IN_GGA(X1, X2, X3)
   DIVA_IN_GGA(s(X1), s(X2), s(X3)) -> U3_GGA(X1, X2, X3, minuscB_in_gga(X1, X2, X4))
   U3_GGA(X1, X2, X3, minuscB_out_gga(X1, X2, X4)) -> U4_GGA(X1, X2, X3, divA_in_gga(X4, s(X2), X3))
   U3_GGA(X1, X2, X3, minuscB_out_gga(X1, X2, X4)) -> DIVA_IN_GGA(X4, s(X2), X3)

The TRS R consists of the following rules:

   minuscB_in_gga(0, X1, 0) -> minuscB_out_gga(0, X1, 0)
   minuscB_in_gga(X1, 0, X1) -> minuscB_out_gga(X1, 0, X1)
   minuscB_in_gga(s(X1), s(X2), X3) -> U8_gga(X1, X2, X3, minuscB_in_gga(X1, X2, X3))
   U8_gga(X1, X2, X3, minuscB_out_gga(X1, X2, X3)) -> minuscB_out_gga(s(X1), s(X2), X3)

The argument filtering Pi contains the following mapping:
divA_in_gga(x1, x2, x3)  =  divA_in_gga(x1, x2)

s(x1)  =  s(x1)

minusB_in_gga(x1, x2, x3)  =  minusB_in_gga(x1, x2)

minuscB_in_gga(x1, x2, x3)  =  minuscB_in_gga(x1, x2)

0  =  0

minuscB_out_gga(x1, x2, x3)  =  minuscB_out_gga(x1, x2, x3)

U8_gga(x1, x2, x3, x4)  =  U8_gga(x1, x2, x4)

DIVA_IN_GGA(x1, x2, x3)  =  DIVA_IN_GGA(x1, x2)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x2, x4)

MINUSB_IN_GGA(x1, x2, x3)  =  MINUSB_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3, x4)  =  U1_GGA(x1, x2, x4)

U3_GGA(x1, x2, x3, x4)  =  U3_GGA(x1, x2, x4)

U4_GGA(x1, x2, x3, x4)  =  U4_GGA(x1, x2, x4)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DIVA_IN_GGA(s(X1), s(X2), s(X3)) -> U2_GGA(X1, X2, X3, minusB_in_gga(X1, X2, X4))
   DIVA_IN_GGA(s(X1), s(X2), s(X3)) -> MINUSB_IN_GGA(X1, X2, X4)
   MINUSB_IN_GGA(s(X1), s(X2), X3) -> U1_GGA(X1, X2, X3, minusB_in_gga(X1, X2, X3))
   MINUSB_IN_GGA(s(X1), s(X2), X3) -> MINUSB_IN_GGA(X1, X2, X3)
   DIVA_IN_GGA(s(X1), s(X2), s(X3)) -> U3_GGA(X1, X2, X3, minuscB_in_gga(X1, X2, X4))
   U3_GGA(X1, X2, X3, minuscB_out_gga(X1, X2, X4)) -> U4_GGA(X1, X2, X3, divA_in_gga(X4, s(X2), X3))
   U3_GGA(X1, X2, X3, minuscB_out_gga(X1, X2, X4)) -> DIVA_IN_GGA(X4, s(X2), X3)

The TRS R consists of the following rules:

   minuscB_in_gga(0, X1, 0) -> minuscB_out_gga(0, X1, 0)
   minuscB_in_gga(X1, 0, X1) -> minuscB_out_gga(X1, 0, X1)
   minuscB_in_gga(s(X1), s(X2), X3) -> U8_gga(X1, X2, X3, minuscB_in_gga(X1, X2, X3))
   U8_gga(X1, X2, X3, minuscB_out_gga(X1, X2, X3)) -> minuscB_out_gga(s(X1), s(X2), X3)

The argument filtering Pi contains the following mapping:
divA_in_gga(x1, x2, x3)  =  divA_in_gga(x1, x2)

s(x1)  =  s(x1)

minusB_in_gga(x1, x2, x3)  =  minusB_in_gga(x1, x2)

minuscB_in_gga(x1, x2, x3)  =  minuscB_in_gga(x1, x2)

0  =  0

minuscB_out_gga(x1, x2, x3)  =  minuscB_out_gga(x1, x2, x3)

U8_gga(x1, x2, x3, x4)  =  U8_gga(x1, x2, x4)

DIVA_IN_GGA(x1, x2, x3)  =  DIVA_IN_GGA(x1, x2)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x2, x4)

MINUSB_IN_GGA(x1, x2, x3)  =  MINUSB_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3, x4)  =  U1_GGA(x1, x2, x4)

U3_GGA(x1, x2, x3, x4)  =  U3_GGA(x1, x2, x4)

U4_GGA(x1, x2, x3, x4)  =  U4_GGA(x1, x2, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 2 SCCs with 4 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MINUSB_IN_GGA(s(X1), s(X2), X3) -> MINUSB_IN_GGA(X1, X2, X3)

The TRS R consists of the following rules:

   minuscB_in_gga(0, X1, 0) -> minuscB_out_gga(0, X1, 0)
   minuscB_in_gga(X1, 0, X1) -> minuscB_out_gga(X1, 0, X1)
   minuscB_in_gga(s(X1), s(X2), X3) -> U8_gga(X1, X2, X3, minuscB_in_gga(X1, X2, X3))
   U8_gga(X1, X2, X3, minuscB_out_gga(X1, X2, X3)) -> minuscB_out_gga(s(X1), s(X2), X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

minuscB_in_gga(x1, x2, x3)  =  minuscB_in_gga(x1, x2)

0  =  0

minuscB_out_gga(x1, x2, x3)  =  minuscB_out_gga(x1, x2, x3)

U8_gga(x1, x2, x3, x4)  =  U8_gga(x1, x2, x4)

MINUSB_IN_GGA(x1, x2, x3)  =  MINUSB_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(11)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MINUSB_IN_GGA(s(X1), s(X2), X3) -> MINUSB_IN_GGA(X1, X2, X3)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

MINUSB_IN_GGA(x1, x2, x3)  =  MINUSB_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(12) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MINUSB_IN_GGA(s(X1), s(X2)) -> MINUSB_IN_GGA(X1, X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(14) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MINUSB_IN_GGA(s(X1), s(X2)) -> MINUSB_IN_GGA(X1, X2)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(15)
YES

----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DIVA_IN_GGA(s(X1), s(X2), s(X3)) -> U3_GGA(X1, X2, X3, minuscB_in_gga(X1, X2, X4))
   U3_GGA(X1, X2, X3, minuscB_out_gga(X1, X2, X4)) -> DIVA_IN_GGA(X4, s(X2), X3)

The TRS R consists of the following rules:

   minuscB_in_gga(0, X1, 0) -> minuscB_out_gga(0, X1, 0)
   minuscB_in_gga(X1, 0, X1) -> minuscB_out_gga(X1, 0, X1)
   minuscB_in_gga(s(X1), s(X2), X3) -> U8_gga(X1, X2, X3, minuscB_in_gga(X1, X2, X3))
   U8_gga(X1, X2, X3, minuscB_out_gga(X1, X2, X3)) -> minuscB_out_gga(s(X1), s(X2), X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

minuscB_in_gga(x1, x2, x3)  =  minuscB_in_gga(x1, x2)

0  =  0

minuscB_out_gga(x1, x2, x3)  =  minuscB_out_gga(x1, x2, x3)

U8_gga(x1, x2, x3, x4)  =  U8_gga(x1, x2, x4)

DIVA_IN_GGA(x1, x2, x3)  =  DIVA_IN_GGA(x1, x2)

U3_GGA(x1, x2, x3, x4)  =  U3_GGA(x1, x2, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DIVA_IN_GGA(s(X1), s(X2)) -> U3_GGA(X1, X2, minuscB_in_gga(X1, X2))
   U3_GGA(X1, X2, minuscB_out_gga(X1, X2, X4)) -> DIVA_IN_GGA(X4, s(X2))

The TRS R consists of the following rules:

   minuscB_in_gga(0, X1) -> minuscB_out_gga(0, X1, 0)
   minuscB_in_gga(X1, 0) -> minuscB_out_gga(X1, 0, X1)
   minuscB_in_gga(s(X1), s(X2)) -> U8_gga(X1, X2, minuscB_in_gga(X1, X2))
   U8_gga(X1, X2, minuscB_out_gga(X1, X2, X3)) -> minuscB_out_gga(s(X1), s(X2), X3)

The set Q consists of the following terms:

   minuscB_in_gga(x0, x1)
   U8_gga(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(19) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   U3_GGA(X1, X2, minuscB_out_gga(X1, X2, X4)) -> DIVA_IN_GGA(X4, s(X2))

Strictly oriented rules of the TRS R:

   U8_gga(X1, X2, minuscB_out_gga(X1, X2, X3)) -> minuscB_out_gga(s(X1), s(X2), X3)

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(DIVA_IN_GGA(x_1, x_2)) = x_1
   POL(U3_GGA(x_1, x_2, x_3)) = 2 + x_3
   POL(U8_gga(x_1, x_2, x_3)) = 2 + x_3
   POL(minuscB_in_gga(x_1, x_2)) = x_1
   POL(minuscB_out_gga(x_1, x_2, x_3)) = x_3
   POL(s(x_1)) = 2 + 2*x_1


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DIVA_IN_GGA(s(X1), s(X2)) -> U3_GGA(X1, X2, minuscB_in_gga(X1, X2))

The TRS R consists of the following rules:

   minuscB_in_gga(0, X1) -> minuscB_out_gga(0, X1, 0)
   minuscB_in_gga(X1, 0) -> minuscB_out_gga(X1, 0, X1)
   minuscB_in_gga(s(X1), s(X2)) -> U8_gga(X1, X2, minuscB_in_gga(X1, X2))

The set Q consists of the following terms:

   minuscB_in_gga(x0, x1)
   U8_gga(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(21) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(22)
TRUE
