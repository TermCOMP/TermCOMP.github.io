NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/N2q2Y.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCNonTerm [COMPLETE, 187 ms]
(4) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
package simple.flip2;

public class Flip {
	
	/* inspired by this example:
	 * http://www.lri.fr/~marche/termination-competition/2006/webform.cgi?command=viewpb&id=TRS.HM.n007.trs
	 * (VAR x y)
(RULES
f(x,y) -> f(x,x)
f(s(x),y) -> f(y,x)
)
(COMMENT
Non-terminating.
)
	 */

	public static void flip(int i, int j) {
		int t = 0;
		while (i > 0 && j > 0) {
			if (i < j) {
				t = i;
				i = j;
				j = t;
			} else {
				if (i > j) {
					j = i;
				} else {
					i--;
				}
			}
		}
	}
}


package simple.flip2;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		Flip.flip(args[0].length(),args[1].length());

	}

}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
package simple.flip2;

public class Flip {
	
	/* inspired by this example:
	 * http://www.lri.fr/~marche/termination-competition/2006/webform.cgi?command=viewpb&id=TRS.HM.n007.trs
	 * (VAR x y)
(RULES
f(x,y) -> f(x,x)
f(s(x),y) -> f(y,x)
)
(COMMENT
Non-terminating.
)
	 */

	public static void flip(int i, int j) {
		int t = 0;
		while (i > 0 && j > 0) {
			if (i < j) {
				t = i;
				i = j;
				j = t;
			} else {
				if (i > j) {
					j = i;
				} else {
					i--;
				}
			}
		}
	}
}


package simple.flip2;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		Flip.flip(args[0].length(),args[1].length());

	}

}



----------------------------------------

(3) JBCNonTerm (COMPLETE)
Constructed a run with a repetition. States 17 and 56 are repetitions (when considering only the interesting positions [lv_0_0, lv_0_1]).

0:<simple.flip2.Main.main||0: load ADDR args||args: a2|| ->
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o15, o35} -->{java.lang.Object...}
	o15!: String(count=3, hash=#, offset=[0,+inf), value=o16?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a2-><-o37
a2-><-o35
a2-><-o16
a2-><-o15
YES:  (JL1)
1:<simple.flip2.Main.main||1: push 0||args: a2||a2>
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o15, o35} -->{java.lang.Object...}
	o15!: String(count=3, hash=#, offset=[0,+inf), value=o16?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a2-><-o37
a2-><-o35
a2-><-o16
a2-><-o15
YES:  (JL1)
2:<simple.flip2.Main.main||2: Read ADDR from array||args: a2||a2, 0>
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o15, o35} -->{java.lang.Object...}
	o15!: String(count=3, hash=#, offset=[0,+inf), value=o16?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a2-><-o37
a2-><-o35
a2-><-o16
a2-><-o15
YES:  (JL1)
3:<simple.flip2.Main.main||3: java.lang.String.length()I||args: a2||o15>
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o15, o35} -->{java.lang.Object...}
	o15!: String(count=3, hash=#, offset=[0,+inf), value=o16?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a2-><-o37
a2-><-o35
a2-><-o16
a2-><-o15
YES:  (JL1)
4:<java.lang.String.length||0: load ADDR this||this: o15|| ->
<simple.flip2.Main.main||3: java.lang.String.length||args: a2|| ->
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o15, o35} -->{java.lang.Object...}
	o15!: String(count=3, hash=#, offset=[0,+inf), value=o16?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a2-><-o37
a2-><-o35
a2-><-o16
a2-><-o15
YES:  (JL1)
5:<java.lang.String.length||1: Read from count|| - ||o15>
<simple.flip2.Main.main||3: java.lang.String.length||args: a2|| ->
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o15, o35} -->{java.lang.Object...}
	o15!: String(count=3, hash=#, offset=[0,+inf), value=o16?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a2-><-o37
a2-><-o35
a2-><-o16
a2-><-o15
YES:  (JL1)
6:<java.lang.String.length||4: return INT|| - ||3>
<simple.flip2.Main.main||3: java.lang.String.length||args: a2|| ->
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o15, o35} -->{java.lang.Object...}
	o15!: String(count=3, hash=#, offset=[0,+inf), value=o16?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a2-><-o37
a2-><-o35
a2-><-o16
a2-><-o15
YES:  (JL1)
7:<simple.flip2.Main.main||6: load ADDR args||args: a2||3>
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o15, o35} -->{java.lang.Object...}
	o15!: String(count=3, hash=#, offset=[0,+inf), value=o16?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a2-><-o37
a2-><-o35
a2-><-o16
a2-><-o15
YES:  (JL1)
8:<simple.flip2.Main.main||7: push 1|| - ||3, a2>
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o15, o35} -->{java.lang.Object...}
	o15!: String(count=3, hash=#, offset=[0,+inf), value=o16?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a2-><-o37
a2-><-o35
a2-><-o16
a2-><-o15
YES:  (JL1)
9:<simple.flip2.Main.main||8: Read ADDR from array|| - ||3, a2, 1>
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o15, o35} -->{java.lang.Object...}
	o15!: String(count=3, hash=#, offset=[0,+inf), value=o16?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a2-><-o37
a2-><-o35
a2-><-o16
a2-><-o15
YES:  (JL1)
10:<simple.flip2.Main.main||9: java.lang.String.length()I|| - ||3, o35>
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
11:<java.lang.String.length||0: load ADDR this||this: o35|| ->
<simple.flip2.Main.main||9: java.lang.String.length|| - ||3>
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
12:<java.lang.String.length||1: Read from count|| - ||o35>
<simple.flip2.Main.main||9: java.lang.String.length|| - ||3>
	o35!: String(count=3, hash=#, offset=[0,+inf), value=o37?) -->{java.lang.Object...}
o37:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
13:<java.lang.String.length||4: return INT|| - ||3>
<simple.flip2.Main.main||9: java.lang.String.length|| - ||3>
YES:  (JL1)
14:<simple.flip2.Main.main||12: simple.flip2.Flip.flip(II)V|| - ||3, 3>
YES:  (JL1)
15:<simple.flip2.Flip.flip||0: push 0||i: 3, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
16:<simple.flip2.Flip.flip||1: store INT to t||i: 3, j: 3||0>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
17:<simple.flip2.Flip.flip||2: load INT i||i: 3, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
18:<simple.flip2.Flip.flip||3: LE 0||i: 3, j: 3||3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
19:<simple.flip2.Flip.flip||6: load INT j||i: 3, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
20:<simple.flip2.Flip.flip||7: LE 0||i: 3, j: 3||3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
21:<simple.flip2.Flip.flip||10: load INT i||i: 3, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
22:<simple.flip2.Flip.flip||11: load INT j||i: 3, j: 3||3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
23:<simple.flip2.Flip.flip||12: GE||i: 3, j: 3||3, 3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
24:<simple.flip2.Flip.flip||24: load INT i||i: 3, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
25:<simple.flip2.Flip.flip||25: load INT j||i: 3, j: 3||3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
26:<simple.flip2.Flip.flip||26: LE||i: 3, j: 3||3, 3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
27:<simple.flip2.Flip.flip||34: increment i by -1||i: 3, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
28:<simple.flip2.Flip.flip||37: jmp||i: 2, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
29:<simple.flip2.Flip.flip||2: load INT i||i: 2, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
30:<simple.flip2.Flip.flip||3: LE 0||i: 2, j: 3||2>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
31:<simple.flip2.Flip.flip||6: load INT j||i: 2, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
32:<simple.flip2.Flip.flip||7: LE 0||i: 2, j: 3||3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
33:<simple.flip2.Flip.flip||10: load INT i||i: 2, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
34:<simple.flip2.Flip.flip||11: load INT j||i: 2, j: 3||2>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
35:<simple.flip2.Flip.flip||12: GE||i: 2, j: 3||2, 3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
36:<simple.flip2.Flip.flip||15: load INT i||i: 2, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
37:<simple.flip2.Flip.flip||16: store INT to t||j: 3||2>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
38:<simple.flip2.Flip.flip||17: load INT j||j: 3, t: 2|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
39:<simple.flip2.Flip.flip||18: store INT to i||t: 2||3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
40:<simple.flip2.Flip.flip||19: load INT t||i: 3, t: 2|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
41:<simple.flip2.Flip.flip||20: store INT to j||i: 3||2>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
42:<simple.flip2.Flip.flip||21: jmp||i: 3, j: 2|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
43:<simple.flip2.Flip.flip||2: load INT i||i: 3, j: 2|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
44:<simple.flip2.Flip.flip||3: LE 0||i: 3, j: 2||3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
45:<simple.flip2.Flip.flip||6: load INT j||i: 3, j: 2|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
46:<simple.flip2.Flip.flip||7: LE 0||i: 3, j: 2||2>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
47:<simple.flip2.Flip.flip||10: load INT i||i: 3, j: 2|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
48:<simple.flip2.Flip.flip||11: load INT j||i: 3, j: 2||3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
49:<simple.flip2.Flip.flip||12: GE||i: 3, j: 2||3, 2>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
50:<simple.flip2.Flip.flip||24: load INT i||i: 3, j: 2|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
51:<simple.flip2.Flip.flip||25: load INT j||i: 3, j: 2||3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
52:<simple.flip2.Flip.flip||26: LE||i: 3, j: 2||3, 2>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
53:<simple.flip2.Flip.flip||29: load INT i||i: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
54:<simple.flip2.Flip.flip||30: store INT to j||i: 3||3>
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
55:<simple.flip2.Flip.flip||31: jmp||i: 3, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)
56:<simple.flip2.Flip.flip||2: load INT i||i: 3, j: 3|| ->
<simple.flip2.Main.main||12: simple.flip2.Flip.flip|| - || ->
YES:  (JL1)

----------------------------------------

(4)
NO
