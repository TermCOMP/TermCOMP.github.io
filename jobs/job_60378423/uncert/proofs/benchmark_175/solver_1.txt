NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/jq43R.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCNonTerm [COMPLETE, 111 ms]
(4) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
/**
 * An infinite loop continously throwing and catching an exception.
 * Since the exception is thrown before the statement that makes the loop
 * progress, that loop diverges.
 *
 * The call to <tt>main()</tt> diverges.
 *
 * Julia + BinTerm cannot prove that the call to <tt>main()</tt> terminates.
 *
 * @author <A HREF="mailto:fausto.spoto@univr.it">Fausto Spoto</A>
 */

public class Exc1 {
    public static void main(String[] args) {
	int i = 0;

	while (true) {
	    try {
		if (i > 10) throw null;
		i++;
	    }
	    catch (NullPointerException e) {}
	}
    }
}


----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
/**
 * An infinite loop continously throwing and catching an exception.
 * Since the exception is thrown before the statement that makes the loop
 * progress, that loop diverges.
 *
 * The call to <tt>main()</tt> diverges.
 *
 * Julia + BinTerm cannot prove that the call to <tt>main()</tt> terminates.
 *
 * @author <A HREF="mailto:fausto.spoto@univr.it">Fausto Spoto</A>
 */

public class Exc1 {
    public static void main(String[] args) {
	int i = 0;

	while (true) {
	    try {
		if (i > 10) throw null;
		i++;
	    }
	    catch (NullPointerException e) {}
	}
    }
}


----------------------------------------

(3) JBCNonTerm (COMPLETE)
Symbolic evaluation of method public static main([Ljava/lang/String;)V never reaches a method end (by explicit return or exception).

As this is the main method, we can conclude non-termination of the input program.
----------------------------------------

(4)
NO
