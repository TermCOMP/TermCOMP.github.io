YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/WlWfh.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 86 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) TRUE


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
package example_3;

public class Test {
	int i;
	
	/**
	 * Same simple arithmetic loop, but the loop counter
	 * is a numeric field.
	 */
	public void m(int n) {
		while (i < n) {
			i++;
		}
	}
	
	public static void main(String[] args) {
		Test o = new Test();
		o.m(10);
	}

}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
package example_3;

public class Test {
	int i;
	
	/**
	 * Same simple arithmetic loop, but the loop counter
	 * is a numeric field.
	 */
	public void m(int n) {
		while (i < n) {
			i++;
		}
	}
	
	public static void main(String[] args) {
		Test o = new Test();
		o.m(10);
	}

}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
example_3.Test.main([Ljava/lang/String;)V: Graph of 127 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Proven termination by absence of SCCs
----------------------------------------

(6)
TRUE
