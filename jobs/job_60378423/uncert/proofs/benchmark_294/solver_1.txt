YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/hc5jR.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 411 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) JBCTerminationSCC
        (8) SCCToIRSProof [SOUND, 14 ms]
        (9) IRSwT
        (10) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (11) IRSwT
        (12) IRSwTTerminationDigraphProof [EQUIVALENT, 1 ms]
        (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) TempFilterProof [SOUND, 18 ms]
        (17) IntTRS
        (18) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (19) YES
    (20) JBCTerminationSCC
        (21) SCCToIRSProof [SOUND, 11 ms]
        (22) IRSwT
        (23) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (24) IRSwT
        (25) IRSwTTerminationDigraphProof [EQUIVALENT, 5 ms]
        (26) IRSwT
        (27) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (28) IRSwT
        (29) TempFilterProof [SOUND, 3 ms]
        (30) IntTRS
        (31) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (32) YES
    (33) JBCTerminationSCC
        (34) SCCToIRSProof [SOUND, 25 ms]
        (35) IRSwT
        (36) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (37) IRSwT
        (38) IRSwTTerminationDigraphProof [EQUIVALENT, 8 ms]
        (39) IRSwT
        (40) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (41) IRSwT
        (42) TempFilterProof [SOUND, 0 ms]
        (43) IntTRS
        (44) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (45) YES
    (46) JBCTerminationSCC
        (47) SCCToIRSProof [SOUND, 54 ms]
        (48) IRSwT
        (49) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (50) IRSwT
        (51) IRSwTTerminationDigraphProof [EQUIVALENT, 15 ms]
        (52) IRSwT
        (53) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (54) IRSwT
        (55) TempFilterProof [SOUND, 4 ms]
        (56) IntTRS
        (57) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (58) YES
    (59) JBCTerminationSCC
        (60) SCCToIRSProof [SOUND, 65 ms]
        (61) IRSwT
        (62) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (63) IRSwT
        (64) IRSwTTerminationDigraphProof [EQUIVALENT, 21 ms]
        (65) IRSwT
        (66) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (67) IRSwT
        (68) TempFilterProof [SOUND, 2 ms]
        (69) IntTRS
        (70) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (71) YES
    (72) JBCTerminationSCC
        (73) SCCToIRSProof [SOUND, 61 ms]
        (74) IRSwT
        (75) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (76) IRSwT
        (77) IRSwTTerminationDigraphProof [EQUIVALENT, 163 ms]
        (78) IRSwT
        (79) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (80) IRSwT
        (81) TempFilterProof [SOUND, 51 ms]
        (82) IntTRS
        (83) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (84) IntTRS
        (85) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (86) IntTRS
        (87) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (88) IntTRS
        (89) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (90) IntTRS
        (91) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (92) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class TaylorSeriesIte {
    
    public static int power(int a, int b) {
	int p = 1;
	for (int i = 1; i <= b; i++) p *= a;
	return p;
    }

    public static int fact(int n) {
	int p = 1;
	for (int i = 1; i <= n; i++) p *= i;
	return p;
    }

    public static int sin(int x, int n) {
	int s = x;
	for (int i = 3; i <= n; i += 2)
	    s += power(-1, i/2) * power(x, i) / fact(i);
	return s;
    }

    public static int cos(int x, int n) {
	int s = 1;
	for (int i = 2; i <= n; i += 2)
	    s += power(-1, i/2) * power(x, i) / fact(i);
	return s;
    }

    public static int exp(int x, int n) {
	int s = 0;
	for (int i = 0; i <= n; i++)
	    s += power(x, i) / fact(i);
	return s;	
    }

    public static void main(String args[]) {
	for (int i = 0; i < args.length; i++)
	    if (i % 2 == 0) sin(args.length, i);
	    else if (i % 3 == 0) cos(args.length, i);
	    else if (i % 5 == 0) exp(args.length, i);
	    else for (int j = 0; j < 100; j++);
    }
}


----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class TaylorSeriesIte {
    
    public static int power(int a, int b) {
	int p = 1;
	for (int i = 1; i <= b; i++) p *= a;
	return p;
    }

    public static int fact(int n) {
	int p = 1;
	for (int i = 1; i <= n; i++) p *= i;
	return p;
    }

    public static int sin(int x, int n) {
	int s = x;
	for (int i = 3; i <= n; i += 2)
	    s += power(-1, i/2) * power(x, i) / fact(i);
	return s;
    }

    public static int cos(int x, int n) {
	int s = 1;
	for (int i = 2; i <= n; i += 2)
	    s += power(-1, i/2) * power(x, i) / fact(i);
	return s;
    }

    public static int exp(int x, int n) {
	int s = 0;
	for (int i = 0; i <= n; i++)
	    s += power(x, i) / fact(i);
	return s;	
    }

    public static void main(String args[]) {
	for (int i = 0; i < args.length; i++)
	    if (i % 2 == 0) sin(args.length, i);
	    else if (i % 3 == 0) cos(args.length, i);
	    else if (i % 5 == 0) exp(args.length, i);
	    else for (int j = 0; j < 100; j++);
    }
}


----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
TaylorSeriesIte.main([Ljava/lang/String;)V: Graph of 82 nodes with 1 SCC.



TaylorSeriesIte.sin(II)I: Graph of 42 nodes with 1 SCC.



TaylorSeriesIte.cos(II)I: Graph of 42 nodes with 1 SCC.



TaylorSeriesIte.exp(II)I: Graph of 35 nodes with 1 SCC.



TaylorSeriesIte.power(II)I: Graph of 22 nodes with 1 SCC.



TaylorSeriesIte.fact(I)I: Graph of 22 nodes with 1 SCC.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 6 SCCss.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: TaylorSeriesIte.fact(I)I
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(8) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 11 IRulesP rules:
f15361_0_fact_Load(EOS(STATIC_15361), i1405, i1407, i1407) -> f15369_0_fact_GT(EOS(STATIC_15369), i1405, i1407, i1407, i1405) :|: TRUE
f15369_0_fact_GT(EOS(STATIC_15369), i1405, i1407, i1407, i1405) -> f15387_0_fact_GT(EOS(STATIC_15387), i1405, i1407, i1407, i1405) :|: i1407 <= i1405
f15387_0_fact_GT(EOS(STATIC_15387), i1405, i1407, i1407, i1405) -> f15430_0_fact_Load(EOS(STATIC_15430), i1405, i1407) :|: i1407 <= i1405
f15430_0_fact_Load(EOS(STATIC_15430), i1405, i1407) -> f15443_0_fact_Load(EOS(STATIC_15443), i1405, i1407) :|: TRUE
f15443_0_fact_Load(EOS(STATIC_15443), i1405, i1407) -> f15447_0_fact_IntArithmetic(EOS(STATIC_15447), i1405, i1407, i1407) :|: TRUE
f15447_0_fact_IntArithmetic(EOS(STATIC_15447), i1405, i1407, i1407) -> f15469_0_fact_Store(EOS(STATIC_15469), i1405, i1407) :|: i1407 >= 1
f15469_0_fact_Store(EOS(STATIC_15469), i1405, i1407) -> f15557_0_fact_Inc(EOS(STATIC_15557), i1405, i1407) :|: TRUE
f15557_0_fact_Inc(EOS(STATIC_15557), i1405, i1407) -> f15562_0_fact_JMP(EOS(STATIC_15562), i1405, i1407 + 1) :|: TRUE
f15562_0_fact_JMP(EOS(STATIC_15562), i1405, i1458) -> f15580_0_fact_Load(EOS(STATIC_15580), i1405, i1458) :|: TRUE
f15580_0_fact_Load(EOS(STATIC_15580), i1405, i1458) -> f15350_0_fact_Load(EOS(STATIC_15350), i1405, i1458) :|: TRUE
f15350_0_fact_Load(EOS(STATIC_15350), i1405, i1407) -> f15361_0_fact_Load(EOS(STATIC_15361), i1405, i1407, i1407) :|: TRUE
Combined rules. Obtained 1 IRulesP rules:
f15361_0_fact_Load(EOS(STATIC_15361), i1405:0, i1407:0, i1407:0) -> f15361_0_fact_Load(EOS(STATIC_15361), i1405:0, i1407:0 + 1, i1407:0 + 1) :|: i1407:0 <= i1405:0 && i1407:0 > 0
Filtered constant ground arguments:
   f15361_0_fact_Load(x1, x2, x3, x4) -> f15361_0_fact_Load(x2, x3, x4)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f15361_0_fact_Load(x1, x2, x3) -> f15361_0_fact_Load(x1, x3)
Finished conversion. Obtained 1 rules.P rules:
f15361_0_fact_Load(i1405:0, i1407:0) -> f15361_0_fact_Load(i1405:0, i1407:0 + 1) :|: i1407:0 <= i1405:0 && i1407:0 > 0

----------------------------------------

(9)
Obligation:
Rules:
f15361_0_fact_Load(i1405:0, i1407:0) -> f15361_0_fact_Load(i1405:0, i1407:0 + 1) :|: i1407:0 <= i1405:0 && i1407:0 > 0

----------------------------------------

(10) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(11)
Obligation:
Rules:
f15361_0_fact_Load(i1405:0, i1407:0) -> f15361_0_fact_Load(i1405:0, arith) :|: i1407:0 <= i1405:0 && i1407:0 > 0 && arith = i1407:0 + 1

----------------------------------------

(12) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f15361_0_fact_Load(i1405:0, i1407:0) -> f15361_0_fact_Load(i1405:0, arith) :|: i1407:0 <= i1405:0 && i1407:0 > 0 && arith = i1407:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f15361_0_fact_Load(i1405:0, i1407:0) -> f15361_0_fact_Load(i1405:0, arith) :|: i1407:0 <= i1405:0 && i1407:0 > 0 && arith = i1407:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f15361_0_fact_Load(i1405:0:0, i1407:0:0) -> f15361_0_fact_Load(i1405:0:0, i1407:0:0 + 1) :|: i1407:0:0 <= i1405:0:0 && i1407:0:0 > 0

----------------------------------------

(16) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f15361_0_fact_Load(INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(17)
Obligation:
Rules:
f15361_0_fact_Load(i1405:0:0, i1407:0:0) -> f15361_0_fact_Load(i1405:0:0, c) :|: c = i1407:0:0 + 1 && (i1407:0:0 <= i1405:0:0 && i1407:0:0 > 0)

----------------------------------------

(18) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f15361_0_fact_Load ] = -1*f15361_0_fact_Load_2 + f15361_0_fact_Load_1

The following rules are decreasing:
f15361_0_fact_Load(i1405:0:0, i1407:0:0) -> f15361_0_fact_Load(i1405:0:0, c) :|: c = i1407:0:0 + 1 && (i1407:0:0 <= i1405:0:0 && i1407:0:0 > 0)

The following rules are bounded:
f15361_0_fact_Load(i1405:0:0, i1407:0:0) -> f15361_0_fact_Load(i1405:0:0, c) :|: c = i1407:0:0 + 1 && (i1407:0:0 <= i1405:0:0 && i1407:0:0 > 0)


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: TaylorSeriesIte.power(II)I
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(21) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 11 IRulesP rules:
f14708_0_power_Load(EOS(STATIC_14708), i1267, i1269, i1269) -> f14714_0_power_GT(EOS(STATIC_14714), i1267, i1269, i1269, i1267) :|: TRUE
f14714_0_power_GT(EOS(STATIC_14714), i1267, i1269, i1269, i1267) -> f14800_0_power_GT(EOS(STATIC_14800), i1267, i1269, i1269, i1267) :|: i1269 <= i1267
f14800_0_power_GT(EOS(STATIC_14800), i1267, i1269, i1269, i1267) -> f14821_0_power_Load(EOS(STATIC_14821), i1267, i1269) :|: i1269 <= i1267
f14821_0_power_Load(EOS(STATIC_14821), i1267, i1269) -> f14828_0_power_Load(EOS(STATIC_14828), i1267, i1269) :|: TRUE
f14828_0_power_Load(EOS(STATIC_14828), i1267, i1269) -> f14887_0_power_IntArithmetic(EOS(STATIC_14887), i1267, i1269) :|: TRUE
f14887_0_power_IntArithmetic(EOS(STATIC_14887), i1267, i1269) -> f14981_0_power_Store(EOS(STATIC_14981), i1267, i1269) :|: TRUE
f14981_0_power_Store(EOS(STATIC_14981), i1267, i1269) -> f15042_0_power_Inc(EOS(STATIC_15042), i1267, i1269) :|: TRUE
f15042_0_power_Inc(EOS(STATIC_15042), i1267, i1269) -> f15076_0_power_JMP(EOS(STATIC_15076), i1267, i1269 + 1) :|: TRUE
f15076_0_power_JMP(EOS(STATIC_15076), i1267, i1335) -> f15127_0_power_Load(EOS(STATIC_15127), i1267, i1335) :|: TRUE
f15127_0_power_Load(EOS(STATIC_15127), i1267, i1335) -> f14703_0_power_Load(EOS(STATIC_14703), i1267, i1335) :|: TRUE
f14703_0_power_Load(EOS(STATIC_14703), i1267, i1269) -> f14708_0_power_Load(EOS(STATIC_14708), i1267, i1269, i1269) :|: TRUE
Combined rules. Obtained 1 IRulesP rules:
f14708_0_power_Load(EOS(STATIC_14708), i1267:0, i1269:0, i1269:0) -> f14708_0_power_Load(EOS(STATIC_14708), i1267:0, i1269:0 + 1, i1269:0 + 1) :|: i1269:0 <= i1267:0
Filtered constant ground arguments:
   f14708_0_power_Load(x1, x2, x3, x4) -> f14708_0_power_Load(x2, x3, x4)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f14708_0_power_Load(x1, x2, x3) -> f14708_0_power_Load(x1, x3)
Finished conversion. Obtained 1 rules.P rules:
f14708_0_power_Load(i1267:0, i1269:0) -> f14708_0_power_Load(i1267:0, i1269:0 + 1) :|: i1269:0 <= i1267:0

----------------------------------------

(22)
Obligation:
Rules:
f14708_0_power_Load(i1267:0, i1269:0) -> f14708_0_power_Load(i1267:0, i1269:0 + 1) :|: i1269:0 <= i1267:0

----------------------------------------

(23) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(24)
Obligation:
Rules:
f14708_0_power_Load(i1267:0, i1269:0) -> f14708_0_power_Load(i1267:0, arith) :|: i1269:0 <= i1267:0 && arith = i1269:0 + 1

----------------------------------------

(25) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f14708_0_power_Load(i1267:0, i1269:0) -> f14708_0_power_Load(i1267:0, arith) :|: i1269:0 <= i1267:0 && arith = i1269:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(26)
Obligation:

Termination digraph:
Nodes:
(1) f14708_0_power_Load(i1267:0, i1269:0) -> f14708_0_power_Load(i1267:0, arith) :|: i1269:0 <= i1267:0 && arith = i1269:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(27) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(28)
Obligation:
Rules:
f14708_0_power_Load(i1267:0:0, i1269:0:0) -> f14708_0_power_Load(i1267:0:0, i1269:0:0 + 1) :|: i1269:0:0 <= i1267:0:0

----------------------------------------

(29) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f14708_0_power_Load(INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(30)
Obligation:
Rules:
f14708_0_power_Load(i1267:0:0, i1269:0:0) -> f14708_0_power_Load(i1267:0:0, c) :|: c = i1269:0:0 + 1 && i1269:0:0 <= i1267:0:0

----------------------------------------

(31) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f14708_0_power_Load ] = -1*f14708_0_power_Load_2 + f14708_0_power_Load_1

The following rules are decreasing:
f14708_0_power_Load(i1267:0:0, i1269:0:0) -> f14708_0_power_Load(i1267:0:0, c) :|: c = i1269:0:0 + 1 && i1269:0:0 <= i1267:0:0

The following rules are bounded:
f14708_0_power_Load(i1267:0:0, i1269:0:0) -> f14708_0_power_Load(i1267:0:0, c) :|: c = i1269:0:0 + 1 && i1269:0:0 <= i1267:0:0


----------------------------------------

(32)
YES

----------------------------------------

(33)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: TaylorSeriesIte.exp(II)I
SCC calls the following helper methods: TaylorSeriesIte.power(II)I, TaylorSeriesIte.fact(I)I
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(34) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 26 IRulesP rules:
f14191_0_exp_Load(EOS(STATIC_14191), i1051, i66, i1051, i66, i1053, i1053) -> f14192_0_exp_GT(EOS(STATIC_14192), i1051, i66, i1051, i66, i1053, i1053, i66) :|: TRUE
f14192_0_exp_GT(EOS(STATIC_14192), i1051, i66, i1051, i66, i1053, i1053, i66) -> f14195_0_exp_GT(EOS(STATIC_14195), i1051, i66, i1051, i66, i1053, i1053, i66) :|: i1053 <= i66
f14195_0_exp_GT(EOS(STATIC_14195), i1051, i66, i1051, i66, i1053, i1053, i66) -> f14198_0_exp_Load(EOS(STATIC_14198), i1051, i66, i1051, i66, i1053) :|: i1053 <= i66
f14198_0_exp_Load(EOS(STATIC_14198), i1051, i66, i1051, i66, i1053) -> f14201_0_exp_Load(EOS(STATIC_14201), i1051, i66, i1051, i66, i1053) :|: TRUE
f14201_0_exp_Load(EOS(STATIC_14201), i1051, i66, i1051, i66, i1053) -> f14204_0_exp_Load(EOS(STATIC_14204), i1051, i66, i1051, i66, i1053, i1051) :|: TRUE
f14204_0_exp_Load(EOS(STATIC_14204), i1051, i66, i1051, i66, i1053, i1051) -> f14206_0_exp_InvokeMethod(EOS(STATIC_14206), i1051, i66, i1051, i66, i1053, i1051, i1053) :|: TRUE
f14206_0_exp_InvokeMethod(EOS(STATIC_14206), i1051, i66, i1051, i66, i1053, i1051, i1053) -> f14209_0_power_ConstantStackPush(EOS(STATIC_14209), i1051, i1053, i1051, i1053) :|: i1051 >= 1 && i1051 > i66 && i1053 <= i66
f14206_0_exp_InvokeMethod(EOS(STATIC_14206), i1051, i66, i1051, i66, i1053, i1051, i1053) -> f14209_1_power_ConstantStackPush(EOS(STATIC_14209), i1051, i66, i1051, i66, i1053, i1051, i1053) :|: i1051 >= 1 && i1051 > i66 && i1053 <= i66
f14209_0_power_ConstantStackPush(EOS(STATIC_14209), i1051, i1053, i1051, i1053) -> f16927_0_power_ConstantStackPush(EOS(STATIC_16927), i1051, i1053, i1051, i1053) :|: TRUE
f15037_0_power_Return(EOS(STATIC_15037), i1318, i66, i1318, i66, i1320, i1316) -> f14534_0_power_Return(EOS(STATIC_14534), i1318, i66, i1318, i66, i1320, i1316) :|: TRUE
f14534_0_power_Return(EOS(STATIC_14534), i1178, i66, i1178, i66, i1179, i1177) -> f14543_0_exp_Load(EOS(STATIC_14543), i1178, i66, i1178, i66, i1179, i1177) :|: TRUE
f14543_0_exp_Load(EOS(STATIC_14543), i1178, i66, i1178, i66, i1179, i1177) -> f14553_0_exp_InvokeMethod(EOS(STATIC_14553), i1178, i66, i1178, i66, i1179, i1177, i1179) :|: TRUE
f14553_0_exp_InvokeMethod(EOS(STATIC_14553), i1178, i66, i1178, i66, i1179, i1177, i1179) -> f14580_0_fact_ConstantStackPush(EOS(STATIC_14580), i1179, i1179) :|: i1178 >= 1 && i66 < i1178 && i66 >= i1179
f14553_0_exp_InvokeMethod(EOS(STATIC_14553), i1178, i66, i1178, i66, i1179, i1177, i1179) -> f14580_1_fact_ConstantStackPush(EOS(STATIC_14580), i1178, i66, i1178, i66, i1179, i1177, i1179) :|: i1178 >= 1 && i66 < i1178 && i66 >= i1179
f14580_0_fact_ConstantStackPush(EOS(STATIC_14580), i1179, i1179) -> f16945_0_fact_ConstantStackPush(EOS(STATIC_16945), i1179, i1179) :|: TRUE
f15552_0_fact_Return(EOS(STATIC_15552), i1178, i66, i1178, i66, i1423, i1177, i1421) -> f15228_0_fact_Return(EOS(STATIC_15228), i1178, i66, i1178, i66, i1423, i1177, i1421) :|: TRUE
f15228_0_fact_Return(EOS(STATIC_15228), i1178, i66, i1178, i66, i1373, i1177, i1372) -> f15309_0_exp_IntArithmetic(EOS(STATIC_15309), i1178, i66, i1178, i66, i1373, i1177, i1372) :|: TRUE
f15309_0_exp_IntArithmetic(EOS(STATIC_15309), i1178, i66, i1178, i66, i1373, i1177, i1372) -> f15319_0_exp_IntArithmetic(EOS(STATIC_15319), i1178, i66, i1178, i66, i1373) :|: i1403 = i1177 / i1372 && i1372 >= 1
f15319_0_exp_IntArithmetic(EOS(STATIC_15319), i1178, i66, i1178, i66, i1373) -> f15359_0_exp_Store(EOS(STATIC_15359), i1178, i66, i1178, i66, i1373) :|: TRUE
f15359_0_exp_Store(EOS(STATIC_15359), i1178, i66, i1178, i66, i1373) -> f15367_0_exp_Inc(EOS(STATIC_15367), i1178, i66, i1178, i66, i1373) :|: TRUE
f15367_0_exp_Inc(EOS(STATIC_15367), i1178, i66, i1178, i66, i1373) -> f15374_0_exp_JMP(EOS(STATIC_15374), i1178, i66, i1178, i66, i1373 + 1) :|: TRUE
f15374_0_exp_JMP(EOS(STATIC_15374), i1178, i66, i1178, i66, i1413) -> f15414_0_exp_Load(EOS(STATIC_15414), i1178, i66, i1178, i66, i1413) :|: TRUE
f15414_0_exp_Load(EOS(STATIC_15414), i1178, i66, i1178, i66, i1413) -> f14190_0_exp_Load(EOS(STATIC_14190), i1178, i66, i1178, i66, i1413) :|: TRUE
f14190_0_exp_Load(EOS(STATIC_14190), i1051, i66, i1051, i66, i1053) -> f14191_0_exp_Load(EOS(STATIC_14191), i1051, i66, i1051, i66, i1053, i1053) :|: TRUE
f14209_1_power_ConstantStackPush(EOS(STATIC_14209), i1318, i66, i1318, i66, i1320, i1318, i1320) -> f15037_0_power_Return(EOS(STATIC_15037), i1318, i66, i1318, i66, i1320, i1316) :|: TRUE
f14580_1_fact_ConstantStackPush(EOS(STATIC_14580), i1178, i66, i1178, i66, i1423, i1177, i1423) -> f15552_0_fact_Return(EOS(STATIC_15552), i1178, i66, i1178, i66, i1423, i1177, i1421) :|: TRUE
Combined rules. Obtained 4 IRulesP rules:
f15552_0_fact_Return(EOS(STATIC_15552), i1178:0, i66:0, i1178:0, i66:0, i1423:0, i1177:0, i1421:0) -> f15552_0_fact_Return'(EOS(STATIC_15552), i1178:0, i66:0, i1178:0, i66:0, i1423:0, i1177:0, i1421:0) :|: i1421:0 > 0 && i66:0 >= i1423:0 + 1 && i66:0 < i1178:0 && i1178:0 > 0
f15552_0_fact_Return'(EOS(STATIC_15552), i1178:0, i66:0, i1178:0, i66:0, i1423:0, i1177:0, i1421:0) -> f15552_0_fact_Return(EOS(STATIC_15552), i1178:0, i66:0, i1178:0, i66:0, i1423:0 + 1, i1316:0, i1421:1) :|: i1421:0 > 0 && i66:0 >= i1423:0 + 1 && i66:0 < i1178:0 && i1178:0 > 0 && i1421:0 > i1177:0 - i1421:0 * div && i1177:0 - i1421:0 * div + i1421:0 > 0
Removed following non-SCC rules:
f15552_0_fact_Return'(EOS(STATIC_15552), i1178:0, i66:0, i1178:0, i66:0, i1423:0, i1177:0, i1421:0) -> f16927_0_power_ConstantStackPush(EOS(STATIC_16927), i1178:0, i1423:0 + 1, i1178:0, i1423:0 + 1) :|: i1421:0 > 0 && i66:0 >= i1423:0 + 1 && i66:0 < i1178:0 && i1178:0 > 0 && i1421:0 > i1177:0 - i1421:0 * div && i1177:0 - i1421:0 * div + i1421:0 > 0
f15552_0_fact_Return'(EOS(STATIC_15552), i1178:0, i66:0, i1178:0, i66:0, i1423:0, i1177:0, i1421:0) -> f16945_0_fact_ConstantStackPush(EOS(STATIC_16945), i1423:0 + 1, i1423:0 + 1) :|: i1421:0 > 0 && i66:0 >= i1423:0 + 1 && i66:0 < i1178:0 && i1178:0 > 0 && i1421:0 > i1177:0 - i1421:0 * div && i1177:0 - i1421:0 * div + i1421:0 > 0
Filtered constant ground arguments:
   f15552_0_fact_Return(x1, x2, x3, x4, x5, x6, x7, x8) -> f15552_0_fact_Return(x2, x3, x4, x5, x6, x7, x8)
   f15552_0_fact_Return'(x1, x2, x3, x4, x5, x6, x7, x8) -> f15552_0_fact_Return'(x2, x3, x4, x5, x6, x7, x8)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f15552_0_fact_Return(x1, x2, x3, x4, x5, x6, x7) -> f15552_0_fact_Return(x3, x4, x5, x6, x7)
   f15552_0_fact_Return'(x1, x2, x3, x4, x5, x6, x7) -> f15552_0_fact_Return'(x3, x4, x5, x6, x7)
Finished conversion. Obtained 2 rules.P rules:
f15552_0_fact_Return(i1178:0, i66:0, i1423:0, i1177:0, i1421:0) -> f15552_0_fact_Return'(i1178:0, i66:0, i1423:0, i1177:0, i1421:0) :|: i66:0 >= i1423:0 + 1 && i1421:0 > 0 && i1178:0 > 0 && i66:0 < i1178:0
f15552_0_fact_Return'(i1178:0, i66:0, i1423:0, i1177:0, i1421:0) -> f15552_0_fact_Return(i1178:0, i66:0, i1423:0 + 1, i1316:0, i1421:1) :|: i66:0 >= i1423:0 + 1 && i1421:0 > 0 && i66:0 < i1178:0 && i1178:0 > 0 && i1177:0 - i1421:0 * div + i1421:0 > 0 && i1421:0 > i1177:0 - i1421:0 * div

----------------------------------------

(35)
Obligation:
Rules:
f15552_0_fact_Return(i1178:0, i66:0, i1423:0, i1177:0, i1421:0) -> f15552_0_fact_Return'(i1178:0, i66:0, i1423:0, i1177:0, i1421:0) :|: i66:0 >= i1423:0 + 1 && i1421:0 > 0 && i1178:0 > 0 && i66:0 < i1178:0
f15552_0_fact_Return'(x, x1, x2, x3, x4) -> f15552_0_fact_Return(x, x1, x2 + 1, x5, x6) :|: x1 >= x2 + 1 && x4 > 0 && x1 < x && x > 0 && x3 - x4 * x7 + x4 > 0 && x4 > x3 - x4 * x7

----------------------------------------

(36) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(37)
Obligation:
Rules:
f15552_0_fact_Return(i1178:0, i66:0, i1423:0, i1177:0, i1421:0) -> f15552_0_fact_Return'(i1178:0, i66:0, i1423:0, i1177:0, i1421:0) :|: i66:0 >= i1423:0 + 1 && i1421:0 > 0 && i1178:0 > 0 && i66:0 < i1178:0
f15552_0_fact_Return'(x, x1, x2, x3, x4) -> f15552_0_fact_Return(x, x1, arith, x5, x6) :|: x1 >= x2 + 1 && x4 > 0 && x1 < x && x > 0 && x3 - x4 * x7 + x4 > 0 && x4 > x3 - x4 * x7 && arith = x2 + 1

----------------------------------------

(38) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f15552_0_fact_Return(i1178:0, i66:0, i1423:0, i1177:0, i1421:0) -> f15552_0_fact_Return'(i1178:0, i66:0, i1423:0, i1177:0, i1421:0) :|: i66:0 >= i1423:0 + 1 && i1421:0 > 0 && i1178:0 > 0 && i66:0 < i1178:0
(2) f15552_0_fact_Return'(x, x1, x2, x3, x4) -> f15552_0_fact_Return(x, x1, arith, x5, x6) :|: x1 >= x2 + 1 && x4 > 0 && x1 < x && x > 0 && x3 - x4 * x7 + x4 > 0 && x4 > x3 - x4 * x7 && arith = x2 + 1

Arcs:
(1) -> (2)
(2) -> (1)

This digraph is fully evaluated!
----------------------------------------

(39)
Obligation:

Termination digraph:
Nodes:
(1) f15552_0_fact_Return(i1178:0, i66:0, i1423:0, i1177:0, i1421:0) -> f15552_0_fact_Return'(i1178:0, i66:0, i1423:0, i1177:0, i1421:0) :|: i66:0 >= i1423:0 + 1 && i1421:0 > 0 && i1178:0 > 0 && i66:0 < i1178:0
(2) f15552_0_fact_Return'(x, x1, x2, x3, x4) -> f15552_0_fact_Return(x, x1, arith, x5, x6) :|: x1 >= x2 + 1 && x4 > 0 && x1 < x && x > 0 && x3 - x4 * x7 + x4 > 0 && x4 > x3 - x4 * x7 && arith = x2 + 1

Arcs:
(1) -> (2)
(2) -> (1)

This digraph is fully evaluated!

----------------------------------------

(40) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(41)
Obligation:
Rules:
f15552_0_fact_Return(i1178:0:0, i66:0:0, i1423:0:0, i1177:0:0, i1421:0:0) -> f15552_0_fact_Return(i1178:0:0, i66:0:0, i1423:0:0 + 1, x5:0, x6:0) :|: i1421:0:0 > i1177:0:0 - i1421:0:0 * x7:0 && i1177:0:0 - i1421:0:0 * x7:0 + i1421:0:0 > 0 && i1178:0:0 > 0 && i66:0:0 < i1178:0:0 && i1421:0:0 > 0 && i66:0:0 >= i1423:0:0 + 1

----------------------------------------

(42) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f15552_0_fact_Return(INTEGER, INTEGER, INTEGER, VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(43)
Obligation:
Rules:
f15552_0_fact_Return(i1178:0:0, i66:0:0, i1423:0:0, i1177:0:0, i1421:0:0) -> f15552_0_fact_Return(i1178:0:0, i66:0:0, c, x5:0, x6:0) :|: c = i1423:0:0 + 1 && (i1421:0:0 > i1177:0:0 - i1421:0:0 * x7:0 && i1177:0:0 - i1421:0:0 * x7:0 + i1421:0:0 > 0 && i1178:0:0 > 0 && i66:0:0 < i1178:0:0 && i1421:0:0 > 0 && i66:0:0 >= i1423:0:0 + 1)

----------------------------------------

(44) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f15552_0_fact_Return(x, x1, x2, x3, x4)] = x1 - x2

The following rules are decreasing:
f15552_0_fact_Return(i1178:0:0, i66:0:0, i1423:0:0, i1177:0:0, i1421:0:0) -> f15552_0_fact_Return(i1178:0:0, i66:0:0, c, x5:0, x6:0) :|: c = i1423:0:0 + 1 && (i1421:0:0 > i1177:0:0 - i1421:0:0 * x7:0 && i1177:0:0 - i1421:0:0 * x7:0 + i1421:0:0 > 0 && i1178:0:0 > 0 && i66:0:0 < i1178:0:0 && i1421:0:0 > 0 && i66:0:0 >= i1423:0:0 + 1)
The following rules are bounded:
f15552_0_fact_Return(i1178:0:0, i66:0:0, i1423:0:0, i1177:0:0, i1421:0:0) -> f15552_0_fact_Return(i1178:0:0, i66:0:0, c, x5:0, x6:0) :|: c = i1423:0:0 + 1 && (i1421:0:0 > i1177:0:0 - i1421:0:0 * x7:0 && i1177:0:0 - i1421:0:0 * x7:0 + i1421:0:0 > 0 && i1178:0:0 > 0 && i66:0:0 < i1178:0:0 && i1421:0:0 > 0 && i66:0:0 >= i1423:0:0 + 1)

----------------------------------------

(45)
YES

----------------------------------------

(46)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: TaylorSeriesIte.cos(II)I
SCC calls the following helper methods: TaylorSeriesIte.power(II)I, TaylorSeriesIte.fact(I)I
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(47) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 34 IRulesP rules:
f15681_0_cos_Load(EOS(STATIC_15681), i1503, i1504, i1503, i1504, i1506, i1506) -> f15683_0_cos_GT(EOS(STATIC_15683), i1503, i1504, i1503, i1504, i1506, i1506, i1504) :|: TRUE
f15683_0_cos_GT(EOS(STATIC_15683), i1503, i1504, i1503, i1504, i1506, i1506, i1504) -> f15687_0_cos_GT(EOS(STATIC_15687), i1503, i1504, i1503, i1504, i1506, i1506, i1504) :|: i1506 <= i1504
f15687_0_cos_GT(EOS(STATIC_15687), i1503, i1504, i1503, i1504, i1506, i1506, i1504) -> f15691_0_cos_Load(EOS(STATIC_15691), i1503, i1504, i1503, i1504, i1506) :|: i1506 <= i1504
f15691_0_cos_Load(EOS(STATIC_15691), i1503, i1504, i1503, i1504, i1506) -> f15695_0_cos_ConstantStackPush(EOS(STATIC_15695), i1503, i1504, i1503, i1504, i1506) :|: TRUE
f15695_0_cos_ConstantStackPush(EOS(STATIC_15695), i1503, i1504, i1503, i1504, i1506) -> f15699_0_cos_Load(EOS(STATIC_15699), i1503, i1504, i1503, i1504, i1506, -1) :|: TRUE
f15699_0_cos_Load(EOS(STATIC_15699), i1503, i1504, i1503, i1504, i1506, matching1) -> f16281_0_cos_ConstantStackPush(EOS(STATIC_16281), i1503, i1504, i1503, i1504, i1506, -1, i1506) :|: TRUE && matching1 = -1
f16281_0_cos_ConstantStackPush(EOS(STATIC_16281), i1503, i1504, i1503, i1504, i1506, matching1, i1506) -> f16365_0_cos_IntArithmetic(EOS(STATIC_16365), i1503, i1504, i1503, i1504, i1506, -1, i1506, 2) :|: TRUE && matching1 = -1
f16365_0_cos_IntArithmetic(EOS(STATIC_16365), i1503, i1504, i1503, i1504, i1506, matching1, i1506, matching2) -> f16370_0_cos_InvokeMethod(EOS(STATIC_16370), i1503, i1504, i1503, i1504, i1506, -1, i1572) :|: i1572 = i1506 / 2 && i1506 > 1 && i1572 < i1506 && matching1 = -1 && matching2 = 2
f16370_0_cos_InvokeMethod(EOS(STATIC_16370), i1503, i1504, i1503, i1504, i1506, matching1, i1572) -> f16377_0_power_ConstantStackPush(EOS(STATIC_16377), -1, i1572, -1, i1572) :|: i1503 >= 1 && i1504 > 1 && i1572 >= 1 && i1506 > 1 && i1503 > i1504 && i1506 <= i1504 && matching1 = -1
f16370_0_cos_InvokeMethod(EOS(STATIC_16370), i1503, i1504, i1503, i1504, i1506, matching1, i1572) -> f16377_1_power_ConstantStackPush(EOS(STATIC_16377), i1503, i1504, i1503, i1504, i1506, -1, i1572) :|: i1503 >= 1 && i1504 > 1 && i1572 >= 1 && i1506 > 1 && i1503 > i1504 && i1506 <= i1504 && matching1 = -1
f16377_0_power_ConstantStackPush(EOS(STATIC_16377), matching1, i1572, matching2, i1572) -> f17079_0_power_ConstantStackPush(EOS(STATIC_17079), -1, i1572, -1, i1572) :|: TRUE && matching1 = -1 && matching2 = -1
f16472_0_power_Return(EOS(STATIC_16472), i1503, i1504, i1503, i1504, i1506, i1593) -> f16477_0_cos_Load(EOS(STATIC_16477), i1503, i1504, i1503, i1504, i1506, i1593) :|: TRUE
f16477_0_cos_Load(EOS(STATIC_16477), i1503, i1504, i1503, i1504, i1506, i1593) -> f16479_0_cos_Load(EOS(STATIC_16479), i1503, i1504, i1503, i1504, i1506, i1593, i1503) :|: TRUE
f16479_0_cos_Load(EOS(STATIC_16479), i1503, i1504, i1503, i1504, i1506, i1593, i1503) -> f16482_0_cos_InvokeMethod(EOS(STATIC_16482), i1503, i1504, i1503, i1504, i1506, i1593, i1503, i1506) :|: TRUE
f16482_0_cos_InvokeMethod(EOS(STATIC_16482), i1503, i1504, i1503, i1504, i1506, i1593, i1503, i1506) -> f16486_0_power_ConstantStackPush(EOS(STATIC_16486), i1503, i1506, i1503, i1506) :|: i1503 >= 1 && i1504 > 1 && i1506 > 1 && i1504 < i1503 && i1506 <= i1504
f16482_0_cos_InvokeMethod(EOS(STATIC_16482), i1503, i1504, i1503, i1504, i1506, i1593, i1503, i1506) -> f16486_1_power_ConstantStackPush(EOS(STATIC_16486), i1503, i1504, i1503, i1504, i1506, i1593, i1503, i1506) :|: i1503 >= 1 && i1504 > 1 && i1506 > 1 && i1504 < i1503 && i1506 <= i1504
f16486_0_power_ConstantStackPush(EOS(STATIC_16486), i1503, i1506, i1503, i1506) -> f17097_0_power_ConstantStackPush(EOS(STATIC_17097), i1503, i1506, i1503, i1506) :|: TRUE
f16622_0_power_Return(EOS(STATIC_16622), i1619, i1504, i1619, i1504, i1621, i1593, i1617) -> f16626_0_cos_IntArithmetic(EOS(STATIC_16626), i1619, i1504, i1619, i1504, i1621, i1593, i1617) :|: TRUE
f16626_0_cos_IntArithmetic(EOS(STATIC_16626), i1619, i1504, i1619, i1504, i1621, i1593, i1617) -> f16631_0_cos_Load(EOS(STATIC_16631), i1619, i1504, i1619, i1504, i1621) :|: TRUE
f16631_0_cos_Load(EOS(STATIC_16631), i1619, i1504, i1619, i1504, i1621) -> f16636_0_cos_InvokeMethod(EOS(STATIC_16636), i1619, i1504, i1619, i1504, i1621, i1621) :|: TRUE
f16636_0_cos_InvokeMethod(EOS(STATIC_16636), i1619, i1504, i1619, i1504, i1621, i1621) -> f16638_0_fact_ConstantStackPush(EOS(STATIC_16638), i1621, i1621) :|: i1619 >= 1 && i1504 > 1 && i1621 > 1 && i1504 < i1619 && i1621 <= i1504
f16636_0_cos_InvokeMethod(EOS(STATIC_16636), i1619, i1504, i1619, i1504, i1621, i1621) -> f16638_1_fact_ConstantStackPush(EOS(STATIC_16638), i1619, i1504, i1619, i1504, i1621, i1621) :|: i1619 >= 1 && i1504 > 1 && i1621 > 1 && i1504 < i1619 && i1621 <= i1504
f16638_0_fact_ConstantStackPush(EOS(STATIC_16638), i1621, i1621) -> f17115_0_fact_ConstantStackPush(EOS(STATIC_17115), i1621, i1621) :|: TRUE
f16696_0_fact_Return(EOS(STATIC_16696), i1619, i1504, i1619, i1504, i1642, i1639) -> f16701_0_cos_IntArithmetic(EOS(STATIC_16701), i1619, i1504, i1619, i1504, i1642, i1639) :|: TRUE
f16701_0_cos_IntArithmetic(EOS(STATIC_16701), i1619, i1504, i1619, i1504, i1642, i1639) -> f16706_0_cos_IntArithmetic(EOS(STATIC_16706), i1619, i1504, i1619, i1504, i1642) :|: i1646 = i1623 / i1639 && i1639 >= 1
f16706_0_cos_IntArithmetic(EOS(STATIC_16706), i1619, i1504, i1619, i1504, i1642) -> f16711_0_cos_Store(EOS(STATIC_16711), i1619, i1504, i1619, i1504, i1642) :|: TRUE
f16711_0_cos_Store(EOS(STATIC_16711), i1619, i1504, i1619, i1504, i1642) -> f16713_0_cos_Inc(EOS(STATIC_16713), i1619, i1504, i1619, i1504, i1642) :|: TRUE
f16713_0_cos_Inc(EOS(STATIC_16713), i1619, i1504, i1619, i1504, i1642) -> f16718_0_cos_JMP(EOS(STATIC_16718), i1619, i1504, i1619, i1504, i1642 + 2) :|: TRUE
f16718_0_cos_JMP(EOS(STATIC_16718), i1619, i1504, i1619, i1504, i1650) -> f16771_0_cos_Load(EOS(STATIC_16771), i1619, i1504, i1619, i1504, i1650) :|: TRUE
f16771_0_cos_Load(EOS(STATIC_16771), i1619, i1504, i1619, i1504, i1650) -> f15679_0_cos_Load(EOS(STATIC_15679), i1619, i1504, i1619, i1504, i1650) :|: TRUE
f15679_0_cos_Load(EOS(STATIC_15679), i1503, i1504, i1503, i1504, i1506) -> f15681_0_cos_Load(EOS(STATIC_15681), i1503, i1504, i1503, i1504, i1506, i1506) :|: TRUE
f16377_1_power_ConstantStackPush(EOS(STATIC_16377), i1503, i1504, i1503, i1504, i1506, matching1, i1572) -> f16472_0_power_Return(EOS(STATIC_16472), i1503, i1504, i1503, i1504, i1506, i1593) :|: TRUE && matching1 = -1
f16486_1_power_ConstantStackPush(EOS(STATIC_16486), i1619, i1504, i1619, i1504, i1621, i1593, i1619, i1621) -> f16622_0_power_Return(EOS(STATIC_16622), i1619, i1504, i1619, i1504, i1621, i1593, i1617) :|: TRUE
f16638_1_fact_ConstantStackPush(EOS(STATIC_16638), i1619, i1504, i1619, i1504, i1642, i1642) -> f16696_0_fact_Return(EOS(STATIC_16696), i1619, i1504, i1619, i1504, i1642, i1639) :|: TRUE
Combined rules. Obtained 5 IRulesP rules:
f16696_0_fact_Return(EOS(STATIC_16696), i1619:0, i1504:0, i1619:0, i1504:0, i1642:0, i1639:0) -> f16696_0_fact_Return'(EOS(STATIC_16696), i1619:0, i1504:0, i1619:0, i1504:0, i1642:0, i1639:0) :|: i1642:0 + 2 <= i1504:0 && i1504:0 > 1 && i1619:0 > 0 && i1639:0 > 0 && div1 > 0 && i1642:0 > -1 && i1642:0 + 2 > div1 && i1619:0 > i1504:0
f16696_0_fact_Return'(EOS(STATIC_16696), i1619:0, i1504:0, i1619:0, i1504:0, i1642:0, i1639:0) -> f16696_0_fact_Return(EOS(STATIC_16696), i1619:0, i1504:0, i1619:0, i1504:0, i1642:0 + 2, i1639:1) :|: i1642:0 + 2 <= i1504:0 && i1504:0 > 1 && i1619:0 > 0 && i1639:0 > 0 && div1 > 0 && i1642:0 > -1 && i1642:0 + 2 > div1 && i1619:0 > i1504:0 && i1623:0 - i1639:0 * div + i1639:0 > 0 && i1639:0 > i1623:0 - i1639:0 * div && i1642:0 + 2 - 2 * div1 < 2 && i1642:0 + 2 - 2 * div1 > -2
Removed following non-SCC rules:
f16696_0_fact_Return'(EOS(STATIC_16696), i1619:0, i1504:0, i1619:0, i1504:0, i1642:0, i1639:0) -> f17115_0_fact_ConstantStackPush(EOS(STATIC_17115), i1642:0 + 2, i1642:0 + 2) :|: i1642:0 + 2 <= i1504:0 && i1504:0 > 1 && i1619:0 > 0 && i1639:0 > 0 && div1 > 0 && i1642:0 > -1 && i1642:0 + 2 > div1 && i1619:0 > i1504:0 && i1623:0 - i1639:0 * div + i1639:0 > 0 && i1639:0 > i1623:0 - i1639:0 * div && i1642:0 + 2 - 2 * div1 < 2 && i1642:0 + 2 - 2 * div1 > -2
f16696_0_fact_Return'(EOS(STATIC_16696), i1619:0, i1504:0, i1619:0, i1504:0, i1642:0, i1639:0) -> f17097_0_power_ConstantStackPush(EOS(STATIC_17097), i1619:0, i1642:0 + 2, i1619:0, i1642:0 + 2) :|: i1642:0 + 2 <= i1504:0 && i1504:0 > 1 && i1619:0 > 0 && i1639:0 > 0 && div1 > 0 && i1642:0 > -1 && i1642:0 + 2 > div1 && i1619:0 > i1504:0 && i1623:0 - i1639:0 * div + i1639:0 > 0 && i1639:0 > i1623:0 - i1639:0 * div && i1642:0 + 2 - 2 * div1 < 2 && i1642:0 + 2 - 2 * div1 > -2
f16696_0_fact_Return'(EOS(STATIC_16696), i1619:0, i1504:0, i1619:0, i1504:0, i1642:0, i1639:0) -> f17079_0_power_ConstantStackPush(EOS(STATIC_17079), -1, div1, -1, div1) :|: i1642:0 + 2 <= i1504:0 && i1504:0 > 1 && i1619:0 > 0 && i1639:0 > 0 && div1 > 0 && i1642:0 > -1 && i1642:0 + 2 > div1 && i1619:0 > i1504:0 && i1623:0 - i1639:0 * div + i1639:0 > 0 && i1639:0 > i1623:0 - i1639:0 * div && i1642:0 + 2 - 2 * div1 < 2 && i1642:0 + 2 - 2 * div1 > -2
Filtered constant ground arguments:
   f16696_0_fact_Return(x1, x2, x3, x4, x5, x6, x7) -> f16696_0_fact_Return(x2, x3, x4, x5, x6, x7)
   f16696_0_fact_Return'(x1, x2, x3, x4, x5, x6, x7) -> f16696_0_fact_Return'(x2, x3, x4, x5, x6, x7)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f16696_0_fact_Return(x1, x2, x3, x4, x5, x6) -> f16696_0_fact_Return(x3, x4, x5, x6)
   f16696_0_fact_Return'(x1, x2, x3, x4, x5, x6) -> f16696_0_fact_Return'(x3, x4, x5, x6)
Finished conversion. Obtained 2 rules.P rules:
f16696_0_fact_Return(i1619:0, i1504:0, i1642:0, i1639:0) -> f16696_0_fact_Return'(i1619:0, i1504:0, i1642:0, i1639:0) :|: i1504:0 > 1 && i1642:0 + 2 <= i1504:0 && i1619:0 > 0 && i1639:0 > 0 && div1 > 0 && i1642:0 > -1 && i1619:0 > i1504:0 && i1642:0 + 2 > div1
f16696_0_fact_Return'(i1619:0, i1504:0, i1642:0, i1639:0) -> f16696_0_fact_Return(i1619:0, i1504:0, i1642:0 + 2, i1639:1) :|: i1504:0 > 1 && i1642:0 + 2 <= i1504:0 && i1619:0 > 0 && i1639:0 > 0 && div1 > 0 && i1642:0 > -1 && i1642:0 + 2 > div1 && i1619:0 > i1504:0 && i1623:0 - i1639:0 * div + i1639:0 > 0 && i1639:0 > i1623:0 - i1639:0 * div && i1642:0 + 2 - 2 * div1 > -2 && i1642:0 + 2 - 2 * div1 < 2

----------------------------------------

(48)
Obligation:
Rules:
f16696_0_fact_Return(x, x1, x2, x3) -> f16696_0_fact_Return'(x, x1, x2, x3) :|: x1 > 1 && x2 + 2 <= x1 && x > 0 && x3 > 0 && x4 > 0 && x2 > -1 && x > x1 && x2 + 2 > x4
f16696_0_fact_Return'(x5, x6, x7, x8) -> f16696_0_fact_Return(x5, x6, x7 + 2, x9) :|: x6 > 1 && x7 + 2 <= x6 && x5 > 0 && x8 > 0 && x10 > 0 && x7 > -1 && x7 + 2 > x10 && x5 > x6 && x11 - x8 * x12 + x8 > 0 && x8 > x11 - x8 * x12 && x7 + 2 - 2 * x10 > -2 && x7 + 2 - 2 * x10 < 2

----------------------------------------

(49) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(50)
Obligation:
Rules:
f16696_0_fact_Return(x, x1, x2, x3) -> f16696_0_fact_Return'(x, x1, x2, x3) :|: x1 > 1 && x2 + 2 <= x1 && x > 0 && x3 > 0 && x4 > 0 && x2 > -1 && x > x1 && x2 + 2 > x4
f16696_0_fact_Return'(x5, x6, x7, x8) -> f16696_0_fact_Return(x5, x6, arith, x9) :|: x6 > 1 && x7 + 2 <= x6 && x5 > 0 && x8 > 0 && x10 > 0 && x7 > -1 && x7 + 2 > x10 && x5 > x6 && x11 - x8 * x12 + x8 > 0 && x8 > x11 - x8 * x12 && x7 + 2 - 2 * x10 > -2 && x7 + 2 - 2 * x10 < 2 && arith = x7 + 2

----------------------------------------

(51) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f16696_0_fact_Return(x, x1, x2, x3) -> f16696_0_fact_Return'(x, x1, x2, x3) :|: x1 > 1 && x2 + 2 <= x1 && x > 0 && x3 > 0 && x4 > 0 && x2 > -1 && x > x1 && x2 + 2 > x4
(2) f16696_0_fact_Return'(x5, x6, x7, x8) -> f16696_0_fact_Return(x5, x6, arith, x9) :|: x6 > 1 && x7 + 2 <= x6 && x5 > 0 && x8 > 0 && x10 > 0 && x7 > -1 && x7 + 2 > x10 && x5 > x6 && x11 - x8 * x12 + x8 > 0 && x8 > x11 - x8 * x12 && x7 + 2 - 2 * x10 > -2 && x7 + 2 - 2 * x10 < 2 && arith = x7 + 2

Arcs:
(1) -> (2)
(2) -> (1)

This digraph is fully evaluated!
----------------------------------------

(52)
Obligation:

Termination digraph:
Nodes:
(1) f16696_0_fact_Return(x, x1, x2, x3) -> f16696_0_fact_Return'(x, x1, x2, x3) :|: x1 > 1 && x2 + 2 <= x1 && x > 0 && x3 > 0 && x4 > 0 && x2 > -1 && x > x1 && x2 + 2 > x4
(2) f16696_0_fact_Return'(x5, x6, x7, x8) -> f16696_0_fact_Return(x5, x6, arith, x9) :|: x6 > 1 && x7 + 2 <= x6 && x5 > 0 && x8 > 0 && x10 > 0 && x7 > -1 && x7 + 2 > x10 && x5 > x6 && x11 - x8 * x12 + x8 > 0 && x8 > x11 - x8 * x12 && x7 + 2 - 2 * x10 > -2 && x7 + 2 - 2 * x10 < 2 && arith = x7 + 2

Arcs:
(1) -> (2)
(2) -> (1)

This digraph is fully evaluated!

----------------------------------------

(53) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(54)
Obligation:
Rules:
f16696_0_fact_Return(x:0, x1:0, x2:0, x3:0) -> f16696_0_fact_Return(x:0, x1:0, x2:0 + 2, x9:0) :|: x4:0 < x2:0 + 2 && x2:0 + 2 - 2 * x10:0 < 2 && x2:0 + 2 - 2 * x10:0 > -2 && x4:0 > 0 && x3:0 > x11:0 - x3:0 * x12:0 && x11:0 - x3:0 * x12:0 + x3:0 > 0 && x:0 > x1:0 && x2:0 + 2 > x10:0 && x2:0 > -1 && x10:0 > 0 && x3:0 > 0 && x:0 > 0 && x2:0 + 2 <= x1:0 && x1:0 > 1

----------------------------------------

(55) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f16696_0_fact_Return(INTEGER, INTEGER, INTEGER, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(56)
Obligation:
Rules:
f16696_0_fact_Return(x:0, x1:0, x2:0, x3:0) -> f16696_0_fact_Return(x:0, x1:0, c, x9:0) :|: c = x2:0 + 2 && (x4:0 < x2:0 + 2 && x2:0 + 2 - 2 * x10:0 < 2 && x2:0 + 2 - 2 * x10:0 > -2 && x4:0 > 0 && x3:0 > x11:0 - x3:0 * x12:0 && x11:0 - x3:0 * x12:0 + x3:0 > 0 && x:0 > x1:0 && x2:0 + 2 > x10:0 && x2:0 > -1 && x10:0 > 0 && x3:0 > 0 && x:0 > 0 && x2:0 + 2 <= x1:0 && x1:0 > 1)

----------------------------------------

(57) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f16696_0_fact_Return ] = -1/2*f16696_0_fact_Return_3 + 1/2*f16696_0_fact_Return_2

The following rules are decreasing:
f16696_0_fact_Return(x:0, x1:0, x2:0, x3:0) -> f16696_0_fact_Return(x:0, x1:0, c, x9:0) :|: c = x2:0 + 2 && (x4:0 < x2:0 + 2 && x2:0 + 2 - 2 * x10:0 < 2 && x2:0 + 2 - 2 * x10:0 > -2 && x4:0 > 0 && x3:0 > x11:0 - x3:0 * x12:0 && x11:0 - x3:0 * x12:0 + x3:0 > 0 && x:0 > x1:0 && x2:0 + 2 > x10:0 && x2:0 > -1 && x10:0 > 0 && x3:0 > 0 && x:0 > 0 && x2:0 + 2 <= x1:0 && x1:0 > 1)

The following rules are bounded:
f16696_0_fact_Return(x:0, x1:0, x2:0, x3:0) -> f16696_0_fact_Return(x:0, x1:0, c, x9:0) :|: c = x2:0 + 2 && (x4:0 < x2:0 + 2 && x2:0 + 2 - 2 * x10:0 < 2 && x2:0 + 2 - 2 * x10:0 > -2 && x4:0 > 0 && x3:0 > x11:0 - x3:0 * x12:0 && x11:0 - x3:0 * x12:0 + x3:0 > 0 && x:0 > x1:0 && x2:0 + 2 > x10:0 && x2:0 > -1 && x10:0 > 0 && x3:0 > 0 && x:0 > 0 && x2:0 + 2 <= x1:0 && x1:0 > 1)


----------------------------------------

(58)
YES

----------------------------------------

(59)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: TaylorSeriesIte.sin(II)I
SCC calls the following helper methods: TaylorSeriesIte.power(II)I, TaylorSeriesIte.fact(I)I
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(60) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 34 IRulesP rules:
f15680_0_sin_Load(EOS(STATIC_15680), i1489, i1490, i1489, i1490, i1492, i1492) -> f15682_0_sin_GT(EOS(STATIC_15682), i1489, i1490, i1489, i1490, i1492, i1492, i1490) :|: TRUE
f15682_0_sin_GT(EOS(STATIC_15682), i1489, i1490, i1489, i1490, i1492, i1492, i1490) -> f15685_0_sin_GT(EOS(STATIC_15685), i1489, i1490, i1489, i1490, i1492, i1492, i1490) :|: i1492 <= i1490
f15685_0_sin_GT(EOS(STATIC_15685), i1489, i1490, i1489, i1490, i1492, i1492, i1490) -> f15689_0_sin_Load(EOS(STATIC_15689), i1489, i1490, i1489, i1490, i1492) :|: i1492 <= i1490
f15689_0_sin_Load(EOS(STATIC_15689), i1489, i1490, i1489, i1490, i1492) -> f15693_0_sin_ConstantStackPush(EOS(STATIC_15693), i1489, i1490, i1489, i1490, i1492) :|: TRUE
f15693_0_sin_ConstantStackPush(EOS(STATIC_15693), i1489, i1490, i1489, i1490, i1492) -> f15697_0_sin_Load(EOS(STATIC_15697), i1489, i1490, i1489, i1490, i1492, -1) :|: TRUE
f15697_0_sin_Load(EOS(STATIC_15697), i1489, i1490, i1489, i1490, i1492, matching1) -> f15738_0_sin_ConstantStackPush(EOS(STATIC_15738), i1489, i1490, i1489, i1490, i1492, -1, i1492) :|: TRUE && matching1 = -1
f15738_0_sin_ConstantStackPush(EOS(STATIC_15738), i1489, i1490, i1489, i1490, i1492, matching1, i1492) -> f16323_0_sin_IntArithmetic(EOS(STATIC_16323), i1489, i1490, i1489, i1490, i1492, -1, i1492, 2) :|: TRUE && matching1 = -1
f16323_0_sin_IntArithmetic(EOS(STATIC_16323), i1489, i1490, i1489, i1490, i1492, matching1, i1492, matching2) -> f16367_0_sin_InvokeMethod(EOS(STATIC_16367), i1489, i1490, i1489, i1490, i1492, -1, i1571) :|: i1571 = i1492 / 2 && i1492 > 1 && i1571 < i1492 && matching1 = -1 && matching2 = 2
f16367_0_sin_InvokeMethod(EOS(STATIC_16367), i1489, i1490, i1489, i1490, i1492, matching1, i1571) -> f16374_0_power_ConstantStackPush(EOS(STATIC_16374), -1, i1571, -1, i1571) :|: i1489 >= 1 && i1490 > 1 && i1571 >= 1 && i1492 > 1 && i1489 > i1490 && i1492 <= i1490 && matching1 = -1
f16367_0_sin_InvokeMethod(EOS(STATIC_16367), i1489, i1490, i1489, i1490, i1492, matching1, i1571) -> f16374_1_power_ConstantStackPush(EOS(STATIC_16374), i1489, i1490, i1489, i1490, i1492, -1, i1571) :|: i1489 >= 1 && i1490 > 1 && i1571 >= 1 && i1492 > 1 && i1489 > i1490 && i1492 <= i1490 && matching1 = -1
f16374_0_power_ConstantStackPush(EOS(STATIC_16374), matching1, i1571, matching2, i1571) -> f17247_0_power_ConstantStackPush(EOS(STATIC_17247), -1, i1571, -1, i1571) :|: TRUE && matching1 = -1 && matching2 = -1
f16471_0_power_Return(EOS(STATIC_16471), i1489, i1490, i1489, i1490, i1492, i1583) -> f16475_0_sin_Load(EOS(STATIC_16475), i1489, i1490, i1489, i1490, i1492, i1583) :|: TRUE
f16475_0_sin_Load(EOS(STATIC_16475), i1489, i1490, i1489, i1490, i1492, i1583) -> f16478_0_sin_Load(EOS(STATIC_16478), i1489, i1490, i1489, i1490, i1492, i1583, i1489) :|: TRUE
f16478_0_sin_Load(EOS(STATIC_16478), i1489, i1490, i1489, i1490, i1492, i1583, i1489) -> f16481_0_sin_InvokeMethod(EOS(STATIC_16481), i1489, i1490, i1489, i1490, i1492, i1583, i1489, i1492) :|: TRUE
f16481_0_sin_InvokeMethod(EOS(STATIC_16481), i1489, i1490, i1489, i1490, i1492, i1583, i1489, i1492) -> f16484_0_power_ConstantStackPush(EOS(STATIC_16484), i1489, i1492, i1489, i1492) :|: i1489 >= 1 && i1490 > 1 && i1492 > 1 && i1490 < i1489 && i1492 <= i1490
f16481_0_sin_InvokeMethod(EOS(STATIC_16481), i1489, i1490, i1489, i1490, i1492, i1583, i1489, i1492) -> f16484_1_power_ConstantStackPush(EOS(STATIC_16484), i1489, i1490, i1489, i1490, i1492, i1583, i1489, i1492) :|: i1489 >= 1 && i1490 > 1 && i1492 > 1 && i1490 < i1489 && i1492 <= i1490
f16484_0_power_ConstantStackPush(EOS(STATIC_16484), i1489, i1492, i1489, i1492) -> f17265_0_power_ConstantStackPush(EOS(STATIC_17265), i1489, i1492, i1489, i1492) :|: TRUE
f16620_0_power_Return(EOS(STATIC_16620), i1605, i1490, i1605, i1490, i1607, i1583, i1603) -> f16624_0_sin_IntArithmetic(EOS(STATIC_16624), i1605, i1490, i1605, i1490, i1607, i1583, i1603) :|: TRUE
f16624_0_sin_IntArithmetic(EOS(STATIC_16624), i1605, i1490, i1605, i1490, i1607, i1583, i1603) -> f16629_0_sin_Load(EOS(STATIC_16629), i1605, i1490, i1605, i1490, i1607) :|: TRUE
f16629_0_sin_Load(EOS(STATIC_16629), i1605, i1490, i1605, i1490, i1607) -> f16633_0_sin_InvokeMethod(EOS(STATIC_16633), i1605, i1490, i1605, i1490, i1607, i1607) :|: TRUE
f16633_0_sin_InvokeMethod(EOS(STATIC_16633), i1605, i1490, i1605, i1490, i1607, i1607) -> f16637_0_fact_ConstantStackPush(EOS(STATIC_16637), i1607, i1607) :|: i1605 >= 1 && i1490 > 1 && i1607 > 1 && i1490 < i1605 && i1607 <= i1490
f16633_0_sin_InvokeMethod(EOS(STATIC_16633), i1605, i1490, i1605, i1490, i1607, i1607) -> f16637_1_fact_ConstantStackPush(EOS(STATIC_16637), i1605, i1490, i1605, i1490, i1607, i1607) :|: i1605 >= 1 && i1490 > 1 && i1607 > 1 && i1490 < i1605 && i1607 <= i1490
f16637_0_fact_ConstantStackPush(EOS(STATIC_16637), i1607, i1607) -> f17283_0_fact_ConstantStackPush(EOS(STATIC_17283), i1607, i1607) :|: TRUE
f16695_0_fact_Return(EOS(STATIC_16695), i1605, i1490, i1605, i1490, i1633, i1631) -> f16698_0_sin_IntArithmetic(EOS(STATIC_16698), i1605, i1490, i1605, i1490, i1633, i1631) :|: TRUE
f16698_0_sin_IntArithmetic(EOS(STATIC_16698), i1605, i1490, i1605, i1490, i1633, i1631) -> f16704_0_sin_IntArithmetic(EOS(STATIC_16704), i1605, i1490, i1605, i1490, i1633) :|: i1645 = i1622 / i1631 && i1631 >= 1
f16704_0_sin_IntArithmetic(EOS(STATIC_16704), i1605, i1490, i1605, i1490, i1633) -> f16709_0_sin_Store(EOS(STATIC_16709), i1605, i1490, i1605, i1490, i1633) :|: TRUE
f16709_0_sin_Store(EOS(STATIC_16709), i1605, i1490, i1605, i1490, i1633) -> f16712_0_sin_Inc(EOS(STATIC_16712), i1605, i1490, i1605, i1490, i1633) :|: TRUE
f16712_0_sin_Inc(EOS(STATIC_16712), i1605, i1490, i1605, i1490, i1633) -> f16716_0_sin_JMP(EOS(STATIC_16716), i1605, i1490, i1605, i1490, i1633 + 2) :|: TRUE
f16716_0_sin_JMP(EOS(STATIC_16716), i1605, i1490, i1605, i1490, i1649) -> f16754_0_sin_Load(EOS(STATIC_16754), i1605, i1490, i1605, i1490, i1649) :|: TRUE
f16754_0_sin_Load(EOS(STATIC_16754), i1605, i1490, i1605, i1490, i1649) -> f15677_0_sin_Load(EOS(STATIC_15677), i1605, i1490, i1605, i1490, i1649) :|: TRUE
f15677_0_sin_Load(EOS(STATIC_15677), i1489, i1490, i1489, i1490, i1492) -> f15680_0_sin_Load(EOS(STATIC_15680), i1489, i1490, i1489, i1490, i1492, i1492) :|: TRUE
f16374_1_power_ConstantStackPush(EOS(STATIC_16374), i1489, i1490, i1489, i1490, i1492, matching1, i1571) -> f16471_0_power_Return(EOS(STATIC_16471), i1489, i1490, i1489, i1490, i1492, i1583) :|: TRUE && matching1 = -1
f16484_1_power_ConstantStackPush(EOS(STATIC_16484), i1605, i1490, i1605, i1490, i1607, i1583, i1605, i1607) -> f16620_0_power_Return(EOS(STATIC_16620), i1605, i1490, i1605, i1490, i1607, i1583, i1603) :|: TRUE
f16637_1_fact_ConstantStackPush(EOS(STATIC_16637), i1605, i1490, i1605, i1490, i1633, i1633) -> f16695_0_fact_Return(EOS(STATIC_16695), i1605, i1490, i1605, i1490, i1633, i1631) :|: TRUE
Combined rules. Obtained 5 IRulesP rules:
f16695_0_fact_Return(EOS(STATIC_16695), i1605:0, i1490:0, i1605:0, i1490:0, i1633:0, i1631:0) -> f16695_0_fact_Return'(EOS(STATIC_16695), i1605:0, i1490:0, i1605:0, i1490:0, i1633:0, i1631:0) :|: i1633:0 + 2 <= i1490:0 && i1490:0 > 1 && i1605:0 > 0 && i1631:0 > 0 && div1 > 0 && i1633:0 > -1 && i1633:0 + 2 > div1 && i1605:0 > i1490:0
f16695_0_fact_Return'(EOS(STATIC_16695), i1605:0, i1490:0, i1605:0, i1490:0, i1633:0, i1631:0) -> f16695_0_fact_Return(EOS(STATIC_16695), i1605:0, i1490:0, i1605:0, i1490:0, i1633:0 + 2, i1631:1) :|: i1633:0 + 2 <= i1490:0 && i1490:0 > 1 && i1605:0 > 0 && i1631:0 > 0 && div1 > 0 && i1633:0 > -1 && i1633:0 + 2 > div1 && i1605:0 > i1490:0 && i1622:0 - i1631:0 * div + i1631:0 > 0 && i1631:0 > i1622:0 - i1631:0 * div && i1633:0 + 2 - 2 * div1 < 2 && i1633:0 + 2 - 2 * div1 > -2
Removed following non-SCC rules:
f16695_0_fact_Return'(EOS(STATIC_16695), i1605:0, i1490:0, i1605:0, i1490:0, i1633:0, i1631:0) -> f17283_0_fact_ConstantStackPush(EOS(STATIC_17283), i1633:0 + 2, i1633:0 + 2) :|: i1633:0 + 2 <= i1490:0 && i1490:0 > 1 && i1605:0 > 0 && i1631:0 > 0 && div1 > 0 && i1633:0 > -1 && i1633:0 + 2 > div1 && i1605:0 > i1490:0 && i1622:0 - i1631:0 * div + i1631:0 > 0 && i1631:0 > i1622:0 - i1631:0 * div && i1633:0 + 2 - 2 * div1 < 2 && i1633:0 + 2 - 2 * div1 > -2
f16695_0_fact_Return'(EOS(STATIC_16695), i1605:0, i1490:0, i1605:0, i1490:0, i1633:0, i1631:0) -> f17265_0_power_ConstantStackPush(EOS(STATIC_17265), i1605:0, i1633:0 + 2, i1605:0, i1633:0 + 2) :|: i1633:0 + 2 <= i1490:0 && i1490:0 > 1 && i1605:0 > 0 && i1631:0 > 0 && div1 > 0 && i1633:0 > -1 && i1633:0 + 2 > div1 && i1605:0 > i1490:0 && i1622:0 - i1631:0 * div + i1631:0 > 0 && i1631:0 > i1622:0 - i1631:0 * div && i1633:0 + 2 - 2 * div1 < 2 && i1633:0 + 2 - 2 * div1 > -2
f16695_0_fact_Return'(EOS(STATIC_16695), i1605:0, i1490:0, i1605:0, i1490:0, i1633:0, i1631:0) -> f17247_0_power_ConstantStackPush(EOS(STATIC_17247), -1, div1, -1, div1) :|: i1633:0 + 2 <= i1490:0 && i1490:0 > 1 && i1605:0 > 0 && i1631:0 > 0 && div1 > 0 && i1633:0 > -1 && i1633:0 + 2 > div1 && i1605:0 > i1490:0 && i1622:0 - i1631:0 * div + i1631:0 > 0 && i1631:0 > i1622:0 - i1631:0 * div && i1633:0 + 2 - 2 * div1 < 2 && i1633:0 + 2 - 2 * div1 > -2
Filtered constant ground arguments:
   f16695_0_fact_Return(x1, x2, x3, x4, x5, x6, x7) -> f16695_0_fact_Return(x2, x3, x4, x5, x6, x7)
   f16695_0_fact_Return'(x1, x2, x3, x4, x5, x6, x7) -> f16695_0_fact_Return'(x2, x3, x4, x5, x6, x7)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f16695_0_fact_Return(x1, x2, x3, x4, x5, x6) -> f16695_0_fact_Return(x3, x4, x5, x6)
   f16695_0_fact_Return'(x1, x2, x3, x4, x5, x6) -> f16695_0_fact_Return'(x3, x4, x5, x6)
Finished conversion. Obtained 2 rules.P rules:
f16695_0_fact_Return(i1605:0, i1490:0, i1633:0, i1631:0) -> f16695_0_fact_Return'(i1605:0, i1490:0, i1633:0, i1631:0) :|: i1490:0 > 1 && i1633:0 + 2 <= i1490:0 && i1605:0 > 0 && i1631:0 > 0 && div1 > 0 && i1633:0 > -1 && i1605:0 > i1490:0 && i1633:0 + 2 > div1
f16695_0_fact_Return'(i1605:0, i1490:0, i1633:0, i1631:0) -> f16695_0_fact_Return(i1605:0, i1490:0, i1633:0 + 2, i1631:1) :|: i1490:0 > 1 && i1633:0 + 2 <= i1490:0 && i1605:0 > 0 && i1631:0 > 0 && div1 > 0 && i1633:0 > -1 && i1633:0 + 2 > div1 && i1605:0 > i1490:0 && i1622:0 - i1631:0 * div + i1631:0 > 0 && i1631:0 > i1622:0 - i1631:0 * div && i1633:0 + 2 - 2 * div1 > -2 && i1633:0 + 2 - 2 * div1 < 2

----------------------------------------

(61)
Obligation:
Rules:
f16695_0_fact_Return(x, x1, x2, x3) -> f16695_0_fact_Return'(x, x1, x2, x3) :|: x1 > 1 && x2 + 2 <= x1 && x > 0 && x3 > 0 && x4 > 0 && x2 > -1 && x > x1 && x2 + 2 > x4
f16695_0_fact_Return'(x5, x6, x7, x8) -> f16695_0_fact_Return(x5, x6, x7 + 2, x9) :|: x6 > 1 && x7 + 2 <= x6 && x5 > 0 && x8 > 0 && x10 > 0 && x7 > -1 && x7 + 2 > x10 && x5 > x6 && x11 - x8 * x12 + x8 > 0 && x8 > x11 - x8 * x12 && x7 + 2 - 2 * x10 > -2 && x7 + 2 - 2 * x10 < 2

----------------------------------------

(62) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(63)
Obligation:
Rules:
f16695_0_fact_Return(x, x1, x2, x3) -> f16695_0_fact_Return'(x, x1, x2, x3) :|: x1 > 1 && x2 + 2 <= x1 && x > 0 && x3 > 0 && x4 > 0 && x2 > -1 && x > x1 && x2 + 2 > x4
f16695_0_fact_Return'(x5, x6, x7, x8) -> f16695_0_fact_Return(x5, x6, arith, x9) :|: x6 > 1 && x7 + 2 <= x6 && x5 > 0 && x8 > 0 && x10 > 0 && x7 > -1 && x7 + 2 > x10 && x5 > x6 && x11 - x8 * x12 + x8 > 0 && x8 > x11 - x8 * x12 && x7 + 2 - 2 * x10 > -2 && x7 + 2 - 2 * x10 < 2 && arith = x7 + 2

----------------------------------------

(64) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f16695_0_fact_Return(x, x1, x2, x3) -> f16695_0_fact_Return'(x, x1, x2, x3) :|: x1 > 1 && x2 + 2 <= x1 && x > 0 && x3 > 0 && x4 > 0 && x2 > -1 && x > x1 && x2 + 2 > x4
(2) f16695_0_fact_Return'(x5, x6, x7, x8) -> f16695_0_fact_Return(x5, x6, arith, x9) :|: x6 > 1 && x7 + 2 <= x6 && x5 > 0 && x8 > 0 && x10 > 0 && x7 > -1 && x7 + 2 > x10 && x5 > x6 && x11 - x8 * x12 + x8 > 0 && x8 > x11 - x8 * x12 && x7 + 2 - 2 * x10 > -2 && x7 + 2 - 2 * x10 < 2 && arith = x7 + 2

Arcs:
(1) -> (2)
(2) -> (1)

This digraph is fully evaluated!
----------------------------------------

(65)
Obligation:

Termination digraph:
Nodes:
(1) f16695_0_fact_Return(x, x1, x2, x3) -> f16695_0_fact_Return'(x, x1, x2, x3) :|: x1 > 1 && x2 + 2 <= x1 && x > 0 && x3 > 0 && x4 > 0 && x2 > -1 && x > x1 && x2 + 2 > x4
(2) f16695_0_fact_Return'(x5, x6, x7, x8) -> f16695_0_fact_Return(x5, x6, arith, x9) :|: x6 > 1 && x7 + 2 <= x6 && x5 > 0 && x8 > 0 && x10 > 0 && x7 > -1 && x7 + 2 > x10 && x5 > x6 && x11 - x8 * x12 + x8 > 0 && x8 > x11 - x8 * x12 && x7 + 2 - 2 * x10 > -2 && x7 + 2 - 2 * x10 < 2 && arith = x7 + 2

Arcs:
(1) -> (2)
(2) -> (1)

This digraph is fully evaluated!

----------------------------------------

(66) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(67)
Obligation:
Rules:
f16695_0_fact_Return(x:0, x1:0, x2:0, x3:0) -> f16695_0_fact_Return(x:0, x1:0, x2:0 + 2, x9:0) :|: x4:0 < x2:0 + 2 && x2:0 + 2 - 2 * x10:0 < 2 && x2:0 + 2 - 2 * x10:0 > -2 && x4:0 > 0 && x3:0 > x11:0 - x3:0 * x12:0 && x11:0 - x3:0 * x12:0 + x3:0 > 0 && x:0 > x1:0 && x2:0 + 2 > x10:0 && x2:0 > -1 && x10:0 > 0 && x3:0 > 0 && x:0 > 0 && x2:0 + 2 <= x1:0 && x1:0 > 1

----------------------------------------

(68) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f16695_0_fact_Return(INTEGER, INTEGER, INTEGER, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(69)
Obligation:
Rules:
f16695_0_fact_Return(x:0, x1:0, x2:0, x3:0) -> f16695_0_fact_Return(x:0, x1:0, c, x9:0) :|: c = x2:0 + 2 && (x4:0 < x2:0 + 2 && x2:0 + 2 - 2 * x10:0 < 2 && x2:0 + 2 - 2 * x10:0 > -2 && x4:0 > 0 && x3:0 > x11:0 - x3:0 * x12:0 && x11:0 - x3:0 * x12:0 + x3:0 > 0 && x:0 > x1:0 && x2:0 + 2 > x10:0 && x2:0 > -1 && x10:0 > 0 && x3:0 > 0 && x:0 > 0 && x2:0 + 2 <= x1:0 && x1:0 > 1)

----------------------------------------

(70) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f16695_0_fact_Return(x, x1, x2, x3)] = -1 + x1 - x2

The following rules are decreasing:
f16695_0_fact_Return(x:0, x1:0, x2:0, x3:0) -> f16695_0_fact_Return(x:0, x1:0, c, x9:0) :|: c = x2:0 + 2 && (x4:0 < x2:0 + 2 && x2:0 + 2 - 2 * x10:0 < 2 && x2:0 + 2 - 2 * x10:0 > -2 && x4:0 > 0 && x3:0 > x11:0 - x3:0 * x12:0 && x11:0 - x3:0 * x12:0 + x3:0 > 0 && x:0 > x1:0 && x2:0 + 2 > x10:0 && x2:0 > -1 && x10:0 > 0 && x3:0 > 0 && x:0 > 0 && x2:0 + 2 <= x1:0 && x1:0 > 1)
The following rules are bounded:
f16695_0_fact_Return(x:0, x1:0, x2:0, x3:0) -> f16695_0_fact_Return(x:0, x1:0, c, x9:0) :|: c = x2:0 + 2 && (x4:0 < x2:0 + 2 && x2:0 + 2 - 2 * x10:0 < 2 && x2:0 + 2 - 2 * x10:0 > -2 && x4:0 > 0 && x3:0 > x11:0 - x3:0 * x12:0 && x11:0 - x3:0 * x12:0 + x3:0 > 0 && x:0 > x1:0 && x2:0 + 2 > x10:0 && x2:0 > -1 && x10:0 > 0 && x3:0 > 0 && x:0 > 0 && x2:0 + 2 <= x1:0 && x1:0 > 1)

----------------------------------------

(71)
YES

----------------------------------------

(72)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: TaylorSeriesIte.main([Ljava/lang/String;)V
SCC calls the following helper methods: TaylorSeriesIte.exp(II)I, TaylorSeriesIte.cos(II)I, TaylorSeriesIte.sin(II)I, TaylorSeriesIte.power(II)I, TaylorSeriesIte.fact(I)I
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(73) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 81 IRulesP rules:
f1170_0_main_Load(EOS(STATIC_1170), java.lang.Object(o12sub), java.lang.Object(o12sub), i101, i101) -> f1221_0_main_ArrayLength(EOS(STATIC_1221), java.lang.Object(o12sub), java.lang.Object(o12sub), i101, i101, java.lang.Object(o12sub)) :|: TRUE
f1221_0_main_ArrayLength(EOS(STATIC_1221), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, java.lang.Object(ARRAY(i109))) -> f1233_0_main_ArrayLength(EOS(STATIC_1233), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, java.lang.Object(ARRAY(i109))) :|: i109 >= 0
f1233_0_main_ArrayLength(EOS(STATIC_1233), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, java.lang.Object(ARRAY(i109))) -> f1240_0_main_GE(EOS(STATIC_1240), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, i109) :|: i109 >= 0
f1240_0_main_GE(EOS(STATIC_1240), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, i109) -> f1259_0_main_GE(EOS(STATIC_1259), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, i109) :|: i101 < i109
f1259_0_main_GE(EOS(STATIC_1259), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, i109) -> f1317_0_main_Load(EOS(STATIC_1317), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) :|: i101 < i109
f1317_0_main_Load(EOS(STATIC_1317), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) -> f4352_0_main_ConstantStackPush(EOS(STATIC_4352), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101) :|: TRUE
f4352_0_main_ConstantStackPush(EOS(STATIC_4352), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101) -> f4389_0_main_IntArithmetic(EOS(STATIC_4389), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, 2) :|: TRUE
f4389_0_main_IntArithmetic(EOS(STATIC_4389), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, matching1) -> f5970_0_main_NE(EOS(STATIC_5970), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101 % 2) :|: TRUE && matching1 = 2
f5970_0_main_NE(EOS(STATIC_5970), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, matching1) -> f5990_0_main_NE(EOS(STATIC_5990), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, 1) :|: TRUE && matching1 = 1
f5970_0_main_NE(EOS(STATIC_5970), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, matching1) -> f5991_0_main_NE(EOS(STATIC_5991), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, 0) :|: TRUE && matching1 = 0
f5990_0_main_NE(EOS(STATIC_5990), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, matching1) -> f5998_0_main_Load(EOS(STATIC_5998), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) :|: 1 > 0 && matching1 = 1
f5998_0_main_Load(EOS(STATIC_5998), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) -> f6007_0_main_ConstantStackPush(EOS(STATIC_6007), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101) :|: TRUE
f6007_0_main_ConstantStackPush(EOS(STATIC_6007), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101) -> f6070_0_main_IntArithmetic(EOS(STATIC_6070), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, 3) :|: TRUE
f6070_0_main_IntArithmetic(EOS(STATIC_6070), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, matching1) -> f6081_0_main_NE(EOS(STATIC_6081), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101 % 3) :|: TRUE && matching1 = 3
f6081_0_main_NE(EOS(STATIC_6081), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i318) -> f6096_0_main_NE(EOS(STATIC_6096), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i318) :|: TRUE
f6081_0_main_NE(EOS(STATIC_6081), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, matching1) -> f6098_0_main_NE(EOS(STATIC_6098), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, 0) :|: TRUE && matching1 = 0
f6096_0_main_NE(EOS(STATIC_6096), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i318) -> f6133_0_main_Load(EOS(STATIC_6133), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) :|: i318 > 0
f6133_0_main_Load(EOS(STATIC_6133), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) -> f6140_0_main_ConstantStackPush(EOS(STATIC_6140), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101) :|: TRUE
f6140_0_main_ConstantStackPush(EOS(STATIC_6140), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101) -> f6146_0_main_IntArithmetic(EOS(STATIC_6146), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, 5) :|: TRUE
f6146_0_main_IntArithmetic(EOS(STATIC_6146), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101, matching1) -> f6152_0_main_NE(EOS(STATIC_6152), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i101 % 5) :|: TRUE && matching1 = 5
f6152_0_main_NE(EOS(STATIC_6152), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i338) -> f6157_0_main_NE(EOS(STATIC_6157), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i338) :|: TRUE
f6152_0_main_NE(EOS(STATIC_6152), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, matching1) -> f6158_0_main_NE(EOS(STATIC_6158), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, 0) :|: TRUE && matching1 = 0
f6157_0_main_NE(EOS(STATIC_6157), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i338) -> f7490_0_main_ConstantStackPush(EOS(STATIC_7490), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) :|: i338 > 0
f7490_0_main_ConstantStackPush(EOS(STATIC_7490), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) -> f8457_0_main_Store(EOS(STATIC_8457), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, 0) :|: TRUE
f8457_0_main_Store(EOS(STATIC_8457), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, matching1) -> f9449_0_main_Load(EOS(STATIC_9449), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, 0) :|: TRUE && matching1 = 0
f9449_0_main_Load(EOS(STATIC_9449), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, matching1) -> f10247_0_main_Load(EOS(STATIC_10247), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, 0) :|: TRUE && matching1 = 0
f10247_0_main_Load(EOS(STATIC_10247), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i537) -> f10798_0_main_Load(EOS(STATIC_10798), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i537) :|: TRUE
f10798_0_main_Load(EOS(STATIC_10798), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i598) -> f11175_0_main_Load(EOS(STATIC_11175), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i598) :|: TRUE
f11175_0_main_Load(EOS(STATIC_11175), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i634) -> f11249_0_main_ConstantStackPush(EOS(STATIC_11249), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i634, i634) :|: TRUE
f11249_0_main_ConstantStackPush(EOS(STATIC_11249), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i634, i634) -> f11291_0_main_GE(EOS(STATIC_11291), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i634, i634, 100) :|: TRUE
f11291_0_main_GE(EOS(STATIC_11291), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i653, i653, matching1) -> f11332_0_main_GE(EOS(STATIC_11332), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i653, i653, 100) :|: TRUE && matching1 = 100
f11291_0_main_GE(EOS(STATIC_11291), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i654, i654, matching1) -> f11334_0_main_GE(EOS(STATIC_11334), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i654, i654, 100) :|: TRUE && matching1 = 100
f11332_0_main_GE(EOS(STATIC_11332), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i653, i653, matching1) -> f11373_0_main_Inc(EOS(STATIC_11373), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i653) :|: i653 < 100 && matching1 = 100
f11373_0_main_Inc(EOS(STATIC_11373), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i653) -> f11666_0_main_JMP(EOS(STATIC_11666), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i653 + 1) :|: TRUE
f11666_0_main_JMP(EOS(STATIC_11666), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i690) -> f11919_0_main_Load(EOS(STATIC_11919), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i690) :|: TRUE
f11919_0_main_Load(EOS(STATIC_11919), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i690) -> f11175_0_main_Load(EOS(STATIC_11175), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i690) :|: TRUE
f11334_0_main_GE(EOS(STATIC_11334), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i654, i654, matching1) -> f11392_0_main_Inc(EOS(STATIC_11392), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) :|: i654 >= 100 && matching1 = 100
f11392_0_main_Inc(EOS(STATIC_11392), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) -> f11238_0_main_Inc(EOS(STATIC_11238), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) :|: TRUE
f11238_0_main_Inc(EOS(STATIC_11238), java.lang.Object(ARRAY(i614)), java.lang.Object(ARRAY(i614)), i612) -> f11269_0_main_JMP(EOS(STATIC_11269), java.lang.Object(ARRAY(i614)), java.lang.Object(ARRAY(i614)), i612 + 1) :|: TRUE
f11269_0_main_JMP(EOS(STATIC_11269), java.lang.Object(ARRAY(i614)), java.lang.Object(ARRAY(i614)), i646) -> f11318_0_main_Load(EOS(STATIC_11318), java.lang.Object(ARRAY(i614)), java.lang.Object(ARRAY(i614)), i646) :|: TRUE
f11318_0_main_Load(EOS(STATIC_11318), java.lang.Object(ARRAY(i614)), java.lang.Object(ARRAY(i614)), i646) -> f1160_0_main_Load(EOS(STATIC_1160), java.lang.Object(ARRAY(i614)), java.lang.Object(ARRAY(i614)), i646) :|: TRUE
f1160_0_main_Load(EOS(STATIC_1160), java.lang.Object(o12sub), java.lang.Object(o12sub), i101) -> f1170_0_main_Load(EOS(STATIC_1170), java.lang.Object(o12sub), java.lang.Object(o12sub), i101, i101) :|: TRUE
f6158_0_main_NE(EOS(STATIC_6158), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, matching1) -> f7492_0_main_Load(EOS(STATIC_7492), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) :|: TRUE && matching1 = 0
f7492_0_main_Load(EOS(STATIC_7492), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) -> f8459_0_main_ArrayLength(EOS(STATIC_8459), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, java.lang.Object(ARRAY(i109))) :|: TRUE
f8459_0_main_ArrayLength(EOS(STATIC_8459), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, java.lang.Object(ARRAY(i109))) -> f9450_0_main_Load(EOS(STATIC_9450), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109) :|: i109 >= 0
f9450_0_main_Load(EOS(STATIC_9450), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109) -> f9455_0_main_InvokeMethod(EOS(STATIC_9455), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) :|: TRUE
f9455_0_main_InvokeMethod(EOS(STATIC_9455), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) -> f9600_0_exp_ConstantStackPush(EOS(STATIC_9600), i109, i101, i109, i101) :|: i109 >= 1 && i101 < i109
f9455_0_main_InvokeMethod(EOS(STATIC_9455), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) -> f9600_1_exp_ConstantStackPush(EOS(STATIC_9600), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) :|: i109 >= 1 && i101 < i109
f9600_0_exp_ConstantStackPush(EOS(STATIC_9600), i109, i101, i109, i101) -> f17491_0_exp_ConstantStackPush(EOS(STATIC_17491), i109, i101, i109, i101) :|: TRUE
f14208_0_exp_Return(EOS(STATIC_14208), java.lang.Object(ARRAY(i1075)), java.lang.Object(ARRAY(i1075)), i1073, i1071) -> f13254_0_exp_Return(EOS(STATIC_13254), java.lang.Object(ARRAY(i1075)), java.lang.Object(ARRAY(i1075)), i1073, i1071) :|: TRUE
f13254_0_exp_Return(EOS(STATIC_13254), java.lang.Object(ARRAY(i897)), java.lang.Object(ARRAY(i897)), i898, i896) -> f13275_0_main_StackPop(EOS(STATIC_13275), java.lang.Object(ARRAY(i897)), java.lang.Object(ARRAY(i897)), i898, i896) :|: TRUE
f13275_0_main_StackPop(EOS(STATIC_13275), java.lang.Object(ARRAY(i897)), java.lang.Object(ARRAY(i897)), i898, i896) -> f13478_0_main_JMP(EOS(STATIC_13478), java.lang.Object(ARRAY(i897)), java.lang.Object(ARRAY(i897)), i898) :|: TRUE
f13478_0_main_JMP(EOS(STATIC_13478), java.lang.Object(ARRAY(i897)), java.lang.Object(ARRAY(i897)), i898) -> f13696_0_main_Inc(EOS(STATIC_13696), java.lang.Object(ARRAY(i897)), java.lang.Object(ARRAY(i897)), i898) :|: TRUE
f13696_0_main_Inc(EOS(STATIC_13696), java.lang.Object(ARRAY(i897)), java.lang.Object(ARRAY(i897)), i898) -> f11238_0_main_Inc(EOS(STATIC_11238), java.lang.Object(ARRAY(i897)), java.lang.Object(ARRAY(i897)), i898) :|: TRUE
f6098_0_main_NE(EOS(STATIC_6098), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, matching1) -> f6134_0_main_Load(EOS(STATIC_6134), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) :|: TRUE && matching1 = 0
f6134_0_main_Load(EOS(STATIC_6134), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) -> f6141_0_main_ArrayLength(EOS(STATIC_6141), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, java.lang.Object(ARRAY(i109))) :|: TRUE
f6141_0_main_ArrayLength(EOS(STATIC_6141), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, java.lang.Object(ARRAY(i109))) -> f6147_0_main_Load(EOS(STATIC_6147), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109) :|: i109 >= 0
f6147_0_main_Load(EOS(STATIC_6147), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109) -> f6154_0_main_InvokeMethod(EOS(STATIC_6154), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) :|: TRUE
f6154_0_main_InvokeMethod(EOS(STATIC_6154), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) -> f6159_0_cos_ConstantStackPush(EOS(STATIC_6159), i109, i101, i109, i101) :|: i109 >= 1 && i101 < i109
f6154_0_main_InvokeMethod(EOS(STATIC_6154), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) -> f6159_1_cos_ConstantStackPush(EOS(STATIC_6159), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) :|: i109 >= 1 && i101 < i109
f6159_0_cos_ConstantStackPush(EOS(STATIC_6159), i109, i101, i109, i101) -> f17521_0_cos_ConstantStackPush(EOS(STATIC_17521), i109, i101, i109, i101) :|: TRUE
f16359_0_cos_Return(EOS(STATIC_16359), java.lang.Object(ARRAY(i1555)), java.lang.Object(ARRAY(i1555)), i1553) -> f14014_0_cos_Return(EOS(STATIC_14014), java.lang.Object(ARRAY(i1555)), java.lang.Object(ARRAY(i1555)), i1553) :|: TRUE
f14014_0_cos_Return(EOS(STATIC_14014), java.lang.Object(ARRAY(i994)), java.lang.Object(ARRAY(i994)), i995) -> f14033_0_main_StackPop(EOS(STATIC_14033), java.lang.Object(ARRAY(i994)), java.lang.Object(ARRAY(i994)), i995) :|: TRUE
f14033_0_main_StackPop(EOS(STATIC_14033), java.lang.Object(ARRAY(i994)), java.lang.Object(ARRAY(i994)), i995) -> f14065_0_main_JMP(EOS(STATIC_14065), java.lang.Object(ARRAY(i994)), java.lang.Object(ARRAY(i994)), i995) :|: TRUE
f14065_0_main_JMP(EOS(STATIC_14065), java.lang.Object(ARRAY(i994)), java.lang.Object(ARRAY(i994)), i995) -> f14155_0_main_Inc(EOS(STATIC_14155), java.lang.Object(ARRAY(i994)), java.lang.Object(ARRAY(i994)), i995) :|: TRUE
f14155_0_main_Inc(EOS(STATIC_14155), java.lang.Object(ARRAY(i994)), java.lang.Object(ARRAY(i994)), i995) -> f11238_0_main_Inc(EOS(STATIC_11238), java.lang.Object(ARRAY(i994)), java.lang.Object(ARRAY(i994)), i995) :|: TRUE
f5991_0_main_NE(EOS(STATIC_5991), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, matching1) -> f6000_0_main_Load(EOS(STATIC_6000), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) :|: TRUE && matching1 = 0
f6000_0_main_Load(EOS(STATIC_6000), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101) -> f6008_0_main_ArrayLength(EOS(STATIC_6008), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, java.lang.Object(ARRAY(i109))) :|: TRUE
f6008_0_main_ArrayLength(EOS(STATIC_6008), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, java.lang.Object(ARRAY(i109))) -> f6071_0_main_Load(EOS(STATIC_6071), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109) :|: i109 >= 0
f6071_0_main_Load(EOS(STATIC_6071), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109) -> f6082_0_main_InvokeMethod(EOS(STATIC_6082), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) :|: TRUE
f6082_0_main_InvokeMethod(EOS(STATIC_6082), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) -> f6099_0_sin_Load(EOS(STATIC_6099), i109, i101, i109, i101) :|: i109 >= 1 && i101 < i109
f6082_0_main_InvokeMethod(EOS(STATIC_6082), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) -> f6099_1_sin_Load(EOS(STATIC_6099), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i101, i109, i101) :|: i109 >= 1 && i101 < i109
f6099_0_sin_Load(EOS(STATIC_6099), i109, i101, i109, i101) -> f17551_0_sin_Load(EOS(STATIC_17551), i109, i101, i109, i101) :|: TRUE
f16317_0_sin_Return(EOS(STATIC_16317), java.lang.Object(ARRAY(i1520)), java.lang.Object(ARRAY(i1520)), i1518, i1516) -> f13967_0_sin_Return(EOS(STATIC_13967), java.lang.Object(ARRAY(i1520)), java.lang.Object(ARRAY(i1520)), i1518, i1516) :|: TRUE
f13967_0_sin_Return(EOS(STATIC_13967), java.lang.Object(ARRAY(i986)), java.lang.Object(ARRAY(i986)), i987, i985) -> f14029_0_main_StackPop(EOS(STATIC_14029), java.lang.Object(ARRAY(i986)), java.lang.Object(ARRAY(i986)), i987, i985) :|: TRUE
f14029_0_main_StackPop(EOS(STATIC_14029), java.lang.Object(ARRAY(i986)), java.lang.Object(ARRAY(i986)), i987, i985) -> f14058_0_main_JMP(EOS(STATIC_14058), java.lang.Object(ARRAY(i986)), java.lang.Object(ARRAY(i986)), i987) :|: TRUE
f14058_0_main_JMP(EOS(STATIC_14058), java.lang.Object(ARRAY(i986)), java.lang.Object(ARRAY(i986)), i987) -> f14123_0_main_Inc(EOS(STATIC_14123), java.lang.Object(ARRAY(i986)), java.lang.Object(ARRAY(i986)), i987) :|: TRUE
f14123_0_main_Inc(EOS(STATIC_14123), java.lang.Object(ARRAY(i986)), java.lang.Object(ARRAY(i986)), i987) -> f11238_0_main_Inc(EOS(STATIC_11238), java.lang.Object(ARRAY(i986)), java.lang.Object(ARRAY(i986)), i987) :|: TRUE
f9600_1_exp_ConstantStackPush(EOS(STATIC_9600), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i1073, i1075, i1073) -> f14208_0_exp_Return(EOS(STATIC_14208), java.lang.Object(ARRAY(i1075)), java.lang.Object(ARRAY(i1075)), i1073, i1071) :|: TRUE
f6159_1_cos_ConstantStackPush(EOS(STATIC_6159), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i1553, i1555, i1553) -> f16359_0_cos_Return(EOS(STATIC_16359), java.lang.Object(ARRAY(i1555)), java.lang.Object(ARRAY(i1555)), i1553) :|: TRUE
f6099_1_sin_Load(EOS(STATIC_6099), java.lang.Object(ARRAY(i109)), java.lang.Object(ARRAY(i109)), i1518, i1520, i1518) -> f16317_0_sin_Return(EOS(STATIC_16317), java.lang.Object(ARRAY(i1520)), java.lang.Object(ARRAY(i1520)), i1518, i1516) :|: TRUE
Combined rules. Obtained 13 IRulesP rules:
f1170_0_main_Load(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) -> f1170_0_main_Load'(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) :|: i109:0 > 0 && i109:0 > i101:0 && i101:0 - 2 * div = 1 && i101:0 - 3 * div1 = 0
f1170_0_main_Load(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) -> f1170_0_main_Load'(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) :|: i109:0 > 0 && i109:0 > i101:0 && i101:0 - 2 * div = 1 && i101:0 - 3 * div1 > 0 && i101:0 - 5 * div2 = 0
f11291_0_main_GE(EOS(STATIC_11291), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i654:0, i654:0, 100) -> f1170_0_main_Load(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0 + 1, i101:0 + 1) :|: i654:0 > 99
f1170_0_main_Load(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) -> f1170_0_main_Load'(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) :|: i109:0 > 0 && i109:0 > i101:0 && i101:0 - 2 * div = 0
f1170_0_main_Load'(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) -> f1170_0_main_Load(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0 + 1, i101:0 + 1) :|: i101:0 - 3 * div1 > 0 && i109:0 > 0 && i109:0 > i101:0 && i101:0 - 2 * div = 1 && i101:0 - 5 * div2 = 0 && i101:0 - 2 * div > -2 && i101:0 - 2 * div < 2 && i101:0 - 3 * div1 < 3 && i101:0 - 5 * div2 < 5 && i101:0 - 5 * div2 > -5
f1170_0_main_Load(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) -> f1170_0_main_Load'(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) :|: i109:0 > -1 && i109:0 > i101:0 && i101:0 - 2 * div = 1 && i101:0 - 5 * div2 > 0 && i101:0 - 3 * div1 > 0
f1170_0_main_Load'(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) -> f11291_0_main_GE(EOS(STATIC_11291), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, 0, 0, 100) :|: i101:0 - 3 * div1 > 0 && i101:0 - 5 * div2 > 0 && i109:0 > -1 && i109:0 > i101:0 && i101:0 - 2 * div = 1 && i101:0 - 2 * div > -2 && i101:0 - 2 * div < 2 && i101:0 - 5 * div2 < 5 && i101:0 - 3 * div1 < 3
f11291_0_main_GE(EOS(STATIC_11291), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i653:0, i653:0, 100) -> f11291_0_main_GE(EOS(STATIC_11291), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i653:0 + 1, i653:0 + 1, 100) :|: i653:0 < 100
f1170_0_main_Load'(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) -> f1170_0_main_Load(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0 + 1, i101:0 + 1) :|: i109:0 > 0 && i109:0 > i101:0 && i101:0 - 2 * div = 1 && i101:0 - 3 * div1 = 0 && i101:0 - 2 * div > -2 && i101:0 - 2 * div < 2 && i101:0 - 3 * div1 < 3 && i101:0 - 3 * div1 > -3
f1170_0_main_Load'(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) -> f1170_0_main_Load(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0 + 1, i101:0 + 1) :|: i109:0 > 0 && i109:0 > i101:0 && i101:0 - 2 * div = 0 && i101:0 - 2 * div < 2 && i101:0 - 2 * div > -2
Removed following non-SCC rules:
f1170_0_main_Load'(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) -> f17521_0_cos_ConstantStackPush(EOS(STATIC_17521), i109:0, i101:0, i109:0, i101:0) :|: i109:0 > 0 && i109:0 > i101:0 && i101:0 - 2 * div = 1 && i101:0 - 3 * div1 = 0 && i101:0 - 2 * div > -2 && i101:0 - 2 * div < 2 && i101:0 - 3 * div1 < 3 && i101:0 - 3 * div1 > -3
f1170_0_main_Load'(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) -> f17491_0_exp_ConstantStackPush(EOS(STATIC_17491), i109:0, i101:0, i109:0, i101:0) :|: i101:0 - 3 * div1 > 0 && i109:0 > 0 && i109:0 > i101:0 && i101:0 - 2 * div = 1 && i101:0 - 5 * div2 = 0 && i101:0 - 2 * div > -2 && i101:0 - 2 * div < 2 && i101:0 - 3 * div1 < 3 && i101:0 - 5 * div2 < 5 && i101:0 - 5 * div2 > -5
f1170_0_main_Load'(EOS(STATIC_1170), java.lang.Object(ARRAY(i109:0)), java.lang.Object(ARRAY(i109:0)), i101:0, i101:0) -> f17551_0_sin_Load(EOS(STATIC_17551), i109:0, i101:0, i109:0, i101:0) :|: i109:0 > 0 && i109:0 > i101:0 && i101:0 - 2 * div = 0 && i101:0 - 2 * div < 2 && i101:0 - 2 * div > -2
Filtered constant ground arguments:
   f1170_0_main_Load(x1, x2, x3, x4, x5) -> f1170_0_main_Load(x2, x3, x4, x5)
   f1170_0_main_Load'(x1, x2, x3, x4, x5) -> f1170_0_main_Load'(x2, x3, x4, x5)
   f11291_0_main_GE(x1, x2, x3, x4, x5, x6, x7) -> f11291_0_main_GE(x2, x3, x4, x5, x6)
Filtered duplicate arguments:
   f1170_0_main_Load(x1, x2, x3, x4) -> f1170_0_main_Load(x2, x4)
   f1170_0_main_Load'(x1, x2, x3, x4) -> f1170_0_main_Load'(x2, x4)
   f11291_0_main_GE(x1, x2, x3, x4, x5) -> f11291_0_main_GE(x2, x3, x5)
Finished conversion. Obtained 10 rules.P rules:
f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) -> f1170_0_main_Load'(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) :|: i109:0 > i101:0 && i109:0 > 0 && i101:0 - 3 * div1 = 0 && i101:0 - 2 * div = 1
f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) -> f1170_0_main_Load'(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) :|: i109:0 > i101:0 && i109:0 > 0 && i101:0 - 2 * div = 1 && i101:0 - 5 * div2 = 0 && i101:0 - 3 * div1 > 0
f11291_0_main_GE(java.lang.Object(ARRAY(i109:0)), i101:0, i654:0, i109:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), i101:0 + 1, i109:0) :|: i654:0 > 99
f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) -> f1170_0_main_Load'(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) :|: i109:0 > i101:0 && i101:0 - 2 * div = 0 && i109:0 > 0
f1170_0_main_Load'(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), i101:0 + 1, i109:0) :|: i109:0 > 0 && i101:0 - 3 * div1 > 0 && i109:0 > i101:0 && i101:0 - 2 * div = 1 && i101:0 - 5 * div2 = 0 && i101:0 - 2 * div > -2 && i101:0 - 2 * div < 2 && i101:0 - 3 * div1 < 3 && i101:0 - 5 * div2 > -5 && i101:0 - 5 * div2 < 5
f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) -> f1170_0_main_Load'(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) :|: i109:0 > i101:0 && i109:0 > -1 && i101:0 - 2 * div = 1 && i101:0 - 3 * div1 > 0 && i101:0 - 5 * div2 > 0
f1170_0_main_Load'(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) -> f11291_0_main_GE(java.lang.Object(ARRAY(i109:0)), i101:0, 0, i109:0) :|: i101:0 - 5 * div2 > 0 && i101:0 - 3 * div1 > 0 && i109:0 > -1 && i109:0 > i101:0 && i101:0 - 2 * div = 1 && i101:0 - 2 * div > -2 && i101:0 - 2 * div < 2 && i101:0 - 3 * div1 < 3 && i101:0 - 5 * div2 < 5
f11291_0_main_GE(java.lang.Object(ARRAY(i109:0)), i101:0, i653:0, i109:0) -> f11291_0_main_GE(java.lang.Object(ARRAY(i109:0)), i101:0, i653:0 + 1, i109:0) :|: i653:0 < 100
f1170_0_main_Load'(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), i101:0 + 1, i109:0) :|: i109:0 > i101:0 && i109:0 > 0 && i101:0 - 2 * div = 1 && i101:0 - 3 * div1 = 0 && i101:0 - 2 * div > -2 && i101:0 - 2 * div < 2 && i101:0 - 3 * div1 > -3 && i101:0 - 3 * div1 < 3
f1170_0_main_Load'(java.lang.Object(ARRAY(i109:0)), i101:0, i109:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), i101:0 + 1, i109:0) :|: i109:0 > i101:0 && i109:0 > 0 && i101:0 - 2 * div = 0 && i101:0 - 2 * div > -2 && i101:0 - 2 * div < 2

----------------------------------------

(74)
Obligation:
Rules:
f1170_0_main_Load(java.lang.Object(ARRAY(x)), x1, x) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x)), x1, x) :|: x > x1 && x > 0 && x1 - 3 * x2 = 0 && x1 - 2 * x3 = 1
f1170_0_main_Load(java.lang.Object(ARRAY(x4)), x5, x4) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x4)), x5, x4) :|: x4 > x5 && x4 > 0 && x5 - 2 * x6 = 1 && x5 - 5 * x7 = 0 && x5 - 3 * x8 > 0
f11291_0_main_GE(java.lang.Object(ARRAY(i109:0)), i101:0, i654:0, i109:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), i101:0 + 1, i109:0) :|: i654:0 > 99
f1170_0_main_Load(java.lang.Object(ARRAY(x9)), x10, x9) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x9)), x10, x9) :|: x9 > x10 && x10 - 2 * x11 = 0 && x9 > 0
f1170_0_main_Load'(java.lang.Object(ARRAY(x12)), x13, x12) -> f1170_0_main_Load(java.lang.Object(ARRAY(x12)), x13 + 1, x12) :|: x12 > 0 && x13 - 3 * x14 > 0 && x12 > x13 && x13 - 2 * x15 = 1 && x13 - 5 * x16 = 0 && x13 - 2 * x15 > -2 && x13 - 2 * x15 < 2 && x13 - 3 * x14 < 3 && x13 - 5 * x16 > -5 && x13 - 5 * x16 < 5
f1170_0_main_Load(java.lang.Object(ARRAY(x17)), x18, x17) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x17)), x18, x17) :|: x17 > x18 && x17 > -1 && x18 - 2 * x19 = 1 && x18 - 3 * x20 > 0 && x18 - 5 * x21 > 0
f1170_0_main_Load'(java.lang.Object(ARRAY(x22)), x23, x22) -> f11291_0_main_GE(java.lang.Object(ARRAY(x22)), x23, 0, x22) :|: x23 - 5 * x24 > 0 && x23 - 3 * x25 > 0 && x22 > -1 && x22 > x23 && x23 - 2 * x26 = 1 && x23 - 2 * x26 > -2 && x23 - 2 * x26 < 2 && x23 - 3 * x25 < 3 && x23 - 5 * x24 < 5
f11291_0_main_GE(java.lang.Object(ARRAY(x27)), x28, x29, x27) -> f11291_0_main_GE(java.lang.Object(ARRAY(x27)), x28, x29 + 1, x27) :|: x29 < 100
f1170_0_main_Load'(java.lang.Object(ARRAY(x30)), x31, x30) -> f1170_0_main_Load(java.lang.Object(ARRAY(x30)), x31 + 1, x30) :|: x30 > x31 && x30 > 0 && x31 - 2 * x32 = 1 && x31 - 3 * x33 = 0 && x31 - 2 * x32 > -2 && x31 - 2 * x32 < 2 && x31 - 3 * x33 > -3 && x31 - 3 * x33 < 3
f1170_0_main_Load'(java.lang.Object(ARRAY(x34)), x35, x34) -> f1170_0_main_Load(java.lang.Object(ARRAY(x34)), x35 + 1, x34) :|: x34 > x35 && x34 > 0 && x35 - 2 * x36 = 0 && x35 - 2 * x36 > -2 && x35 - 2 * x36 < 2

----------------------------------------

(75) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(76)
Obligation:
Rules:
f1170_0_main_Load(java.lang.Object(ARRAY(x)), x1, x) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x)), x1, x) :|: x > x1 && x > 0 && x1 - 3 * x2 = 0 && x1 - 2 * x3 = 1
f1170_0_main_Load(java.lang.Object(ARRAY(x4)), x5, x4) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x4)), x5, x4) :|: x4 > x5 && x4 > 0 && x5 - 2 * x6 = 1 && x5 - 5 * x7 = 0 && x5 - 3 * x8 > 0
f11291_0_main_GE(java.lang.Object(ARRAY(i109:0)), i101:0, i654:0, i109:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), arith, i109:0) :|: i654:0 > 99 && arith = i101:0 + 1
f1170_0_main_Load(java.lang.Object(ARRAY(x9)), x10, x9) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x9)), x10, x9) :|: x9 > x10 && x10 - 2 * x11 = 0 && x9 > 0
f1170_0_main_Load'(java.lang.Object(ARRAY(x37)), x38, x37) -> f1170_0_main_Load(java.lang.Object(ARRAY(x37)), x39, x37) :|: x37 > 0 && x38 - 3 * x40 > 0 && x37 > x38 && x38 - 2 * x41 = 1 && x38 - 5 * x42 = 0 && x38 - 2 * x41 > -2 && x38 - 2 * x41 < 2 && x38 - 3 * x40 < 3 && x38 - 5 * x42 > -5 && x38 - 5 * x42 < 5 && x39 = x38 + 1
f1170_0_main_Load(java.lang.Object(ARRAY(x17)), x18, x17) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x17)), x18, x17) :|: x17 > x18 && x17 > -1 && x18 - 2 * x19 = 1 && x18 - 3 * x20 > 0 && x18 - 5 * x21 > 0
f1170_0_main_Load'(java.lang.Object(ARRAY(x22)), x23, x22) -> f11291_0_main_GE(java.lang.Object(ARRAY(x22)), x23, 0, x22) :|: x23 - 5 * x24 > 0 && x23 - 3 * x25 > 0 && x22 > -1 && x22 > x23 && x23 - 2 * x26 = 1 && x23 - 2 * x26 > -2 && x23 - 2 * x26 < 2 && x23 - 3 * x25 < 3 && x23 - 5 * x24 < 5
f11291_0_main_GE(java.lang.Object(ARRAY(x43)), x44, x45, x43) -> f11291_0_main_GE(java.lang.Object(ARRAY(x43)), x44, x46, x43) :|: x45 < 100 && x46 = x45 + 1
f1170_0_main_Load'(java.lang.Object(ARRAY(x47)), x48, x47) -> f1170_0_main_Load(java.lang.Object(ARRAY(x47)), x49, x47) :|: x47 > x48 && x47 > 0 && x48 - 2 * x50 = 1 && x48 - 3 * x51 = 0 && x48 - 2 * x50 > -2 && x48 - 2 * x50 < 2 && x48 - 3 * x51 > -3 && x48 - 3 * x51 < 3 && x49 = x48 + 1
f1170_0_main_Load'(java.lang.Object(ARRAY(x52)), x53, x52) -> f1170_0_main_Load(java.lang.Object(ARRAY(x52)), x54, x52) :|: x52 > x53 && x52 > 0 && x53 - 2 * x55 = 0 && x53 - 2 * x55 > -2 && x53 - 2 * x55 < 2 && x54 = x53 + 1

----------------------------------------

(77) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f1170_0_main_Load(java.lang.Object(ARRAY(x)), x1, x) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x)), x1, x) :|: x > x1 && x > 0 && x1 - 3 * x2 = 0 && x1 - 2 * x3 = 1
(2) f1170_0_main_Load(java.lang.Object(ARRAY(x4)), x5, x4) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x4)), x5, x4) :|: x4 > x5 && x4 > 0 && x5 - 2 * x6 = 1 && x5 - 5 * x7 = 0 && x5 - 3 * x8 > 0
(3) f11291_0_main_GE(java.lang.Object(ARRAY(i109:0)), i101:0, i654:0, i109:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), arith, i109:0) :|: i654:0 > 99 && arith = i101:0 + 1
(4) f1170_0_main_Load(java.lang.Object(ARRAY(x9)), x10, x9) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x9)), x10, x9) :|: x9 > x10 && x10 - 2 * x11 = 0 && x9 > 0
(5) f1170_0_main_Load'(java.lang.Object(ARRAY(x37)), x38, x37) -> f1170_0_main_Load(java.lang.Object(ARRAY(x37)), x39, x37) :|: x37 > 0 && x38 - 3 * x40 > 0 && x37 > x38 && x38 - 2 * x41 = 1 && x38 - 5 * x42 = 0 && x38 - 2 * x41 > -2 && x38 - 2 * x41 < 2 && x38 - 3 * x40 < 3 && x38 - 5 * x42 > -5 && x38 - 5 * x42 < 5 && x39 = x38 + 1
(6) f1170_0_main_Load(java.lang.Object(ARRAY(x17)), x18, x17) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x17)), x18, x17) :|: x17 > x18 && x17 > -1 && x18 - 2 * x19 = 1 && x18 - 3 * x20 > 0 && x18 - 5 * x21 > 0
(7) f1170_0_main_Load'(java.lang.Object(ARRAY(x22)), x23, x22) -> f11291_0_main_GE(java.lang.Object(ARRAY(x22)), x23, 0, x22) :|: x23 - 5 * x24 > 0 && x23 - 3 * x25 > 0 && x22 > -1 && x22 > x23 && x23 - 2 * x26 = 1 && x23 - 2 * x26 > -2 && x23 - 2 * x26 < 2 && x23 - 3 * x25 < 3 && x23 - 5 * x24 < 5
(8) f11291_0_main_GE(java.lang.Object(ARRAY(x43)), x44, x45, x43) -> f11291_0_main_GE(java.lang.Object(ARRAY(x43)), x44, x46, x43) :|: x45 < 100 && x46 = x45 + 1
(9) f1170_0_main_Load'(java.lang.Object(ARRAY(x47)), x48, x47) -> f1170_0_main_Load(java.lang.Object(ARRAY(x47)), x49, x47) :|: x47 > x48 && x47 > 0 && x48 - 2 * x50 = 1 && x48 - 3 * x51 = 0 && x48 - 2 * x50 > -2 && x48 - 2 * x50 < 2 && x48 - 3 * x51 > -3 && x48 - 3 * x51 < 3 && x49 = x48 + 1
(10) f1170_0_main_Load'(java.lang.Object(ARRAY(x52)), x53, x52) -> f1170_0_main_Load(java.lang.Object(ARRAY(x52)), x54, x52) :|: x52 > x53 && x52 > 0 && x53 - 2 * x55 = 0 && x53 - 2 * x55 > -2 && x53 - 2 * x55 < 2 && x54 = x53 + 1

Arcs:
(1) -> (9)
(2) -> (5), (9)
(3) -> (1), (2), (4), (6)
(4) -> (10)
(5) -> (4)
(6) -> (5), (7), (9)
(7) -> (8)
(8) -> (3), (8)
(9) -> (4)
(10) -> (1), (2), (6)

This digraph is fully evaluated!
----------------------------------------

(78)
Obligation:

Termination digraph:
Nodes:
(1) f1170_0_main_Load(java.lang.Object(ARRAY(x)), x1, x) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x)), x1, x) :|: x > x1 && x > 0 && x1 - 3 * x2 = 0 && x1 - 2 * x3 = 1
(2) f11291_0_main_GE(java.lang.Object(ARRAY(i109:0)), i101:0, i654:0, i109:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(i109:0)), arith, i109:0) :|: i654:0 > 99 && arith = i101:0 + 1
(3) f11291_0_main_GE(java.lang.Object(ARRAY(x43)), x44, x45, x43) -> f11291_0_main_GE(java.lang.Object(ARRAY(x43)), x44, x46, x43) :|: x45 < 100 && x46 = x45 + 1
(4) f1170_0_main_Load'(java.lang.Object(ARRAY(x22)), x23, x22) -> f11291_0_main_GE(java.lang.Object(ARRAY(x22)), x23, 0, x22) :|: x23 - 5 * x24 > 0 && x23 - 3 * x25 > 0 && x22 > -1 && x22 > x23 && x23 - 2 * x26 = 1 && x23 - 2 * x26 > -2 && x23 - 2 * x26 < 2 && x23 - 3 * x25 < 3 && x23 - 5 * x24 < 5
(5) f1170_0_main_Load(java.lang.Object(ARRAY(x17)), x18, x17) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x17)), x18, x17) :|: x17 > x18 && x17 > -1 && x18 - 2 * x19 = 1 && x18 - 3 * x20 > 0 && x18 - 5 * x21 > 0
(6) f1170_0_main_Load'(java.lang.Object(ARRAY(x52)), x53, x52) -> f1170_0_main_Load(java.lang.Object(ARRAY(x52)), x54, x52) :|: x52 > x53 && x52 > 0 && x53 - 2 * x55 = 0 && x53 - 2 * x55 > -2 && x53 - 2 * x55 < 2 && x54 = x53 + 1
(7) f1170_0_main_Load(java.lang.Object(ARRAY(x9)), x10, x9) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x9)), x10, x9) :|: x9 > x10 && x10 - 2 * x11 = 0 && x9 > 0
(8) f1170_0_main_Load'(java.lang.Object(ARRAY(x47)), x48, x47) -> f1170_0_main_Load(java.lang.Object(ARRAY(x47)), x49, x47) :|: x47 > x48 && x47 > 0 && x48 - 2 * x50 = 1 && x48 - 3 * x51 = 0 && x48 - 2 * x50 > -2 && x48 - 2 * x50 < 2 && x48 - 3 * x51 > -3 && x48 - 3 * x51 < 3 && x49 = x48 + 1
(9) f1170_0_main_Load'(java.lang.Object(ARRAY(x37)), x38, x37) -> f1170_0_main_Load(java.lang.Object(ARRAY(x37)), x39, x37) :|: x37 > 0 && x38 - 3 * x40 > 0 && x37 > x38 && x38 - 2 * x41 = 1 && x38 - 5 * x42 = 0 && x38 - 2 * x41 > -2 && x38 - 2 * x41 < 2 && x38 - 3 * x40 < 3 && x38 - 5 * x42 > -5 && x38 - 5 * x42 < 5 && x39 = x38 + 1
(10) f1170_0_main_Load(java.lang.Object(ARRAY(x4)), x5, x4) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x4)), x5, x4) :|: x4 > x5 && x4 > 0 && x5 - 2 * x6 = 1 && x5 - 5 * x7 = 0 && x5 - 3 * x8 > 0

Arcs:
(1) -> (8)
(2) -> (1), (5), (7), (10)
(3) -> (2), (3)
(4) -> (3)
(5) -> (4), (8), (9)
(6) -> (1), (5), (10)
(7) -> (6)
(8) -> (7)
(9) -> (7)
(10) -> (8), (9)

This digraph is fully evaluated!

----------------------------------------

(79) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(80)
Obligation:
Rules:
f1170_0_main_Load'(java.lang.Object(ARRAY(x22:0)), x23:0, x22:0) -> f11291_0_main_GE(java.lang.Object(ARRAY(x22:0)), x23:0, 0, x22:0) :|: x23:0 - 3 * x25:0 < 3 && x23:0 - 5 * x24:0 < 5 && x23:0 - 2 * x26:0 < 2 && x23:0 - 2 * x26:0 > -2 && x23:0 - 2 * x26:0 = 1 && x23:0 < x22:0 && x22:0 > -1 && x23:0 - 3 * x25:0 > 0 && x23:0 - 5 * x24:0 > 0
f1170_0_main_Load(java.lang.Object(ARRAY(x9:0)), x10:0, x9:0) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x9:0)), x10:0, x9:0) :|: x9:0 > x10:0 && x10:0 - 2 * x11:0 = 0 && x9:0 > 0
f1170_0_main_Load'(java.lang.Object(ARRAY(x37:0)), x38:0, x37:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(x37:0)), x38:0 + 1, x37:0) :|: x38:0 - 5 * x42:0 > -5 && x38:0 - 5 * x42:0 < 5 && x38:0 - 3 * x40:0 < 3 && x38:0 - 2 * x41:0 < 2 && x38:0 - 2 * x41:0 > -2 && x38:0 - 5 * x42:0 = 0 && x38:0 - 2 * x41:0 = 1 && x38:0 < x37:0 && x38:0 - 3 * x40:0 > 0 && x37:0 > 0
f1170_0_main_Load(java.lang.Object(ARRAY(x4:0)), x5:0, x4:0) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x4:0)), x5:0, x4:0) :|: x5:0 - 5 * x7:0 = 0 && x5:0 - 3 * x8:0 > 0 && x5:0 - 2 * x6:0 = 1 && x4:0 > 0 && x5:0 < x4:0
f11291_0_main_GE(java.lang.Object(ARRAY(x43:0)), x44:0, x45:0, x43:0) -> f11291_0_main_GE(java.lang.Object(ARRAY(x43:0)), x44:0, x45:0 + 1, x43:0) :|: x45:0 < 100
f11291_0_main_GE(java.lang.Object(ARRAY(i109:0:0)), i101:0:0, i654:0:0, i109:0:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(i109:0:0)), i101:0:0 + 1, i109:0:0) :|: i654:0:0 > 99
f1170_0_main_Load'(java.lang.Object(ARRAY(x47:0)), x48:0, x47:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(x47:0)), x48:0 + 1, x47:0) :|: x48:0 - 3 * x51:0 > -3 && x48:0 - 3 * x51:0 < 3 && x48:0 - 2 * x50:0 < 2 && x48:0 - 2 * x50:0 > -2 && x48:0 - 3 * x51:0 = 0 && x48:0 - 2 * x50:0 = 1 && x47:0 > 0 && x48:0 < x47:0
f1170_0_main_Load(java.lang.Object(ARRAY(x:0)), x1:0, x:0) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x:0)), x1:0, x:0) :|: x1:0 - 3 * x2:0 = 0 && x1:0 - 2 * x3:0 = 1 && x:0 > 0 && x:0 > x1:0
f1170_0_main_Load(java.lang.Object(ARRAY(x17:0)), x18:0, x17:0) -> f1170_0_main_Load'(java.lang.Object(ARRAY(x17:0)), x18:0, x17:0) :|: x18:0 - 3 * x20:0 > 0 && x18:0 - 5 * x21:0 > 0 && x18:0 - 2 * x19:0 = 1 && x17:0 > -1 && x18:0 < x17:0
f1170_0_main_Load'(java.lang.Object(ARRAY(x52:0)), x53:0, x52:0) -> f1170_0_main_Load(java.lang.Object(ARRAY(x52:0)), x53:0 + 1, x52:0) :|: x53:0 - 2 * x55:0 > -2 && x53:0 - 2 * x55:0 < 2 && x53:0 - 2 * x55:0 = 0 && x52:0 > 0 && x53:0 < x52:0

----------------------------------------

(81) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f1170_0_main_Load'(VARIABLE, INTEGER, INTEGER)
java.lang.Object(VARIABLE)
ARRAY(VARIABLE)
f11291_0_main_GE(VARIABLE, VARIABLE, VARIABLE, VARIABLE)
f1170_0_main_Load(VARIABLE, INTEGER, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(82)
Obligation:
Rules:
f1170_0_main_Load'(c, x23:0, x22:0) -> f11291_0_main_GE(c1, x23:0, c2, x22:0) :|: c2 = 0 && (c1 = 0 && c = 0) && (x23:0 - 3 * x25:0 < 3 && x23:0 - 5 * x24:0 < 5 && x23:0 - 2 * x26:0 < 2 && x23:0 - 2 * x26:0 > -2 && x23:0 - 2 * x26:0 = 1 && x23:0 < x22:0 && x22:0 > -1 && x23:0 - 3 * x25:0 > 0 && x23:0 - 5 * x24:0 > 0)
f1170_0_main_Load(c3, x10:0, x9:0) -> f1170_0_main_Load'(c4, x10:0, x9:0) :|: c4 = 0 && c3 = 0 && (x9:0 > x10:0 && x10:0 - 2 * x11:0 = 0 && x9:0 > 0)
f1170_0_main_Load'(c5, x38:0, x37:0) -> f1170_0_main_Load(c6, c7, x37:0) :|: c7 = x38:0 + 1 && (c6 = 0 && c5 = 0) && (x38:0 - 5 * x42:0 > -5 && x38:0 - 5 * x42:0 < 5 && x38:0 - 3 * x40:0 < 3 && x38:0 - 2 * x41:0 < 2 && x38:0 - 2 * x41:0 > -2 && x38:0 - 5 * x42:0 = 0 && x38:0 - 2 * x41:0 = 1 && x38:0 < x37:0 && x38:0 - 3 * x40:0 > 0 && x37:0 > 0)
f1170_0_main_Load(c8, x5:0, x4:0) -> f1170_0_main_Load'(c9, x5:0, x4:0) :|: c9 = 0 && c8 = 0 && (x5:0 - 5 * x7:0 = 0 && x5:0 - 3 * x8:0 > 0 && x5:0 - 2 * x6:0 = 1 && x4:0 > 0 && x5:0 < x4:0)
f11291_0_main_GE(c10, x44:0, x45:0, x43:0) -> f11291_0_main_GE(c11, x44:0, c12, x43:0) :|: c12 = x45:0 + 1 && (c11 = 0 && c10 = 0) && x45:0 < 100
f11291_0_main_GE(c13, i101:0:0, i654:0:0, i109:0:0) -> f1170_0_main_Load(c14, c15, i109:0:0) :|: c15 = i101:0:0 + 1 && (c14 = 0 && c13 = 0) && i654:0:0 > 99
f1170_0_main_Load'(c16, x48:0, x47:0) -> f1170_0_main_Load(c17, c18, x47:0) :|: c18 = x48:0 + 1 && (c17 = 0 && c16 = 0) && (x48:0 - 3 * x51:0 > -3 && x48:0 - 3 * x51:0 < 3 && x48:0 - 2 * x50:0 < 2 && x48:0 - 2 * x50:0 > -2 && x48:0 - 3 * x51:0 = 0 && x48:0 - 2 * x50:0 = 1 && x47:0 > 0 && x48:0 < x47:0)
f1170_0_main_Load(c19, x1:0, x:0) -> f1170_0_main_Load'(c20, x1:0, x:0) :|: c20 = 0 && c19 = 0 && (x1:0 - 3 * x2:0 = 0 && x1:0 - 2 * x3:0 = 1 && x:0 > 0 && x:0 > x1:0)
f1170_0_main_Load(c21, x18:0, x17:0) -> f1170_0_main_Load'(c22, x18:0, x17:0) :|: c22 = 0 && c21 = 0 && (x18:0 - 3 * x20:0 > 0 && x18:0 - 5 * x21:0 > 0 && x18:0 - 2 * x19:0 = 1 && x17:0 > -1 && x18:0 < x17:0)
f1170_0_main_Load'(c23, x53:0, x52:0) -> f1170_0_main_Load(c24, c25, x52:0) :|: c25 = x53:0 + 1 && (c24 = 0 && c23 = 0) && (x53:0 - 2 * x55:0 > -2 && x53:0 - 2 * x55:0 < 2 && x53:0 - 2 * x55:0 = 0 && x52:0 > 0 && x53:0 < x52:0)

----------------------------------------

(83) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f1170_0_main_Load'(x, x1, x2)] = -1 + c*x - x1 + x2
[f11291_0_main_GE(x3, x4, x5, x6)] = -1 + c3*x3 - x4 + x6
[f1170_0_main_Load(x7, x8, x9)] = c7*x7 - x8 + x9

The following rules are decreasing:
f1170_0_main_Load(c3, x10:0, x9:0) -> f1170_0_main_Load'(c4, x10:0, x9:0) :|: c4 = 0 && c3 = 0 && (x9:0 > x10:0 && x10:0 - 2 * x11:0 = 0 && x9:0 > 0)
f1170_0_main_Load(c8, x5:0, x4:0) -> f1170_0_main_Load'(c9, x5:0, x4:0) :|: c9 = 0 && c8 = 0 && (x5:0 - 5 * x7:0 = 0 && x5:0 - 3 * x8:0 > 0 && x5:0 - 2 * x6:0 = 1 && x4:0 > 0 && x5:0 < x4:0)
f1170_0_main_Load(c19, x1:0, x:0) -> f1170_0_main_Load'(c20, x1:0, x:0) :|: c20 = 0 && c19 = 0 && (x1:0 - 3 * x2:0 = 0 && x1:0 - 2 * x3:0 = 1 && x:0 > 0 && x:0 > x1:0)
f1170_0_main_Load(c21, x18:0, x17:0) -> f1170_0_main_Load'(c22, x18:0, x17:0) :|: c22 = 0 && c21 = 0 && (x18:0 - 3 * x20:0 > 0 && x18:0 - 5 * x21:0 > 0 && x18:0 - 2 * x19:0 = 1 && x17:0 > -1 && x18:0 < x17:0)
The following rules are bounded:
f1170_0_main_Load'(c, x23:0, x22:0) -> f11291_0_main_GE(c1, x23:0, c2, x22:0) :|: c2 = 0 && (c1 = 0 && c = 0) && (x23:0 - 3 * x25:0 < 3 && x23:0 - 5 * x24:0 < 5 && x23:0 - 2 * x26:0 < 2 && x23:0 - 2 * x26:0 > -2 && x23:0 - 2 * x26:0 = 1 && x23:0 < x22:0 && x22:0 > -1 && x23:0 - 3 * x25:0 > 0 && x23:0 - 5 * x24:0 > 0)
f1170_0_main_Load(c3, x10:0, x9:0) -> f1170_0_main_Load'(c4, x10:0, x9:0) :|: c4 = 0 && c3 = 0 && (x9:0 > x10:0 && x10:0 - 2 * x11:0 = 0 && x9:0 > 0)
f1170_0_main_Load'(c5, x38:0, x37:0) -> f1170_0_main_Load(c6, c7, x37:0) :|: c7 = x38:0 + 1 && (c6 = 0 && c5 = 0) && (x38:0 - 5 * x42:0 > -5 && x38:0 - 5 * x42:0 < 5 && x38:0 - 3 * x40:0 < 3 && x38:0 - 2 * x41:0 < 2 && x38:0 - 2 * x41:0 > -2 && x38:0 - 5 * x42:0 = 0 && x38:0 - 2 * x41:0 = 1 && x38:0 < x37:0 && x38:0 - 3 * x40:0 > 0 && x37:0 > 0)
f1170_0_main_Load(c8, x5:0, x4:0) -> f1170_0_main_Load'(c9, x5:0, x4:0) :|: c9 = 0 && c8 = 0 && (x5:0 - 5 * x7:0 = 0 && x5:0 - 3 * x8:0 > 0 && x5:0 - 2 * x6:0 = 1 && x4:0 > 0 && x5:0 < x4:0)
f1170_0_main_Load'(c16, x48:0, x47:0) -> f1170_0_main_Load(c17, c18, x47:0) :|: c18 = x48:0 + 1 && (c17 = 0 && c16 = 0) && (x48:0 - 3 * x51:0 > -3 && x48:0 - 3 * x51:0 < 3 && x48:0 - 2 * x50:0 < 2 && x48:0 - 2 * x50:0 > -2 && x48:0 - 3 * x51:0 = 0 && x48:0 - 2 * x50:0 = 1 && x47:0 > 0 && x48:0 < x47:0)
f1170_0_main_Load(c19, x1:0, x:0) -> f1170_0_main_Load'(c20, x1:0, x:0) :|: c20 = 0 && c19 = 0 && (x1:0 - 3 * x2:0 = 0 && x1:0 - 2 * x3:0 = 1 && x:0 > 0 && x:0 > x1:0)
f1170_0_main_Load(c21, x18:0, x17:0) -> f1170_0_main_Load'(c22, x18:0, x17:0) :|: c22 = 0 && c21 = 0 && (x18:0 - 3 * x20:0 > 0 && x18:0 - 5 * x21:0 > 0 && x18:0 - 2 * x19:0 = 1 && x17:0 > -1 && x18:0 < x17:0)
f1170_0_main_Load'(c23, x53:0, x52:0) -> f1170_0_main_Load(c24, c25, x52:0) :|: c25 = x53:0 + 1 && (c24 = 0 && c23 = 0) && (x53:0 - 2 * x55:0 > -2 && x53:0 - 2 * x55:0 < 2 && x53:0 - 2 * x55:0 = 0 && x52:0 > 0 && x53:0 < x52:0)

----------------------------------------

(84)
Obligation:
Rules:
f1170_0_main_Load'(c, x23:0, x22:0) -> f11291_0_main_GE(c1, x23:0, c2, x22:0) :|: c2 = 0 && (c1 = 0 && c = 0) && (x23:0 - 3 * x25:0 < 3 && x23:0 - 5 * x24:0 < 5 && x23:0 - 2 * x26:0 < 2 && x23:0 - 2 * x26:0 > -2 && x23:0 - 2 * x26:0 = 1 && x23:0 < x22:0 && x22:0 > -1 && x23:0 - 3 * x25:0 > 0 && x23:0 - 5 * x24:0 > 0)
f1170_0_main_Load'(c5, x38:0, x37:0) -> f1170_0_main_Load(c6, c7, x37:0) :|: c7 = x38:0 + 1 && (c6 = 0 && c5 = 0) && (x38:0 - 5 * x42:0 > -5 && x38:0 - 5 * x42:0 < 5 && x38:0 - 3 * x40:0 < 3 && x38:0 - 2 * x41:0 < 2 && x38:0 - 2 * x41:0 > -2 && x38:0 - 5 * x42:0 = 0 && x38:0 - 2 * x41:0 = 1 && x38:0 < x37:0 && x38:0 - 3 * x40:0 > 0 && x37:0 > 0)
f11291_0_main_GE(c10, x44:0, x45:0, x43:0) -> f11291_0_main_GE(c11, x44:0, c12, x43:0) :|: c12 = x45:0 + 1 && (c11 = 0 && c10 = 0) && x45:0 < 100
f11291_0_main_GE(c13, i101:0:0, i654:0:0, i109:0:0) -> f1170_0_main_Load(c14, c15, i109:0:0) :|: c15 = i101:0:0 + 1 && (c14 = 0 && c13 = 0) && i654:0:0 > 99
f1170_0_main_Load'(c16, x48:0, x47:0) -> f1170_0_main_Load(c17, c18, x47:0) :|: c18 = x48:0 + 1 && (c17 = 0 && c16 = 0) && (x48:0 - 3 * x51:0 > -3 && x48:0 - 3 * x51:0 < 3 && x48:0 - 2 * x50:0 < 2 && x48:0 - 2 * x50:0 > -2 && x48:0 - 3 * x51:0 = 0 && x48:0 - 2 * x50:0 = 1 && x47:0 > 0 && x48:0 < x47:0)
f1170_0_main_Load'(c23, x53:0, x52:0) -> f1170_0_main_Load(c24, c25, x52:0) :|: c25 = x53:0 + 1 && (c24 = 0 && c23 = 0) && (x53:0 - 2 * x55:0 > -2 && x53:0 - 2 * x55:0 < 2 && x53:0 - 2 * x55:0 = 0 && x52:0 > 0 && x53:0 < x52:0)

----------------------------------------

(85) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f1170_0_main_Load'(x, x1, x2)] = c*x + x2
[f11291_0_main_GE(x3, x4, x5, x6)] = c3*x3
[f1170_0_main_Load(x7, x8, x9)] = c7*x7

The following rules are decreasing:
f1170_0_main_Load'(c5, x38:0, x37:0) -> f1170_0_main_Load(c6, c7, x37:0) :|: c7 = x38:0 + 1 && (c6 = 0 && c5 = 0) && (x38:0 - 5 * x42:0 > -5 && x38:0 - 5 * x42:0 < 5 && x38:0 - 3 * x40:0 < 3 && x38:0 - 2 * x41:0 < 2 && x38:0 - 2 * x41:0 > -2 && x38:0 - 5 * x42:0 = 0 && x38:0 - 2 * x41:0 = 1 && x38:0 < x37:0 && x38:0 - 3 * x40:0 > 0 && x37:0 > 0)
f1170_0_main_Load'(c16, x48:0, x47:0) -> f1170_0_main_Load(c17, c18, x47:0) :|: c18 = x48:0 + 1 && (c17 = 0 && c16 = 0) && (x48:0 - 3 * x51:0 > -3 && x48:0 - 3 * x51:0 < 3 && x48:0 - 2 * x50:0 < 2 && x48:0 - 2 * x50:0 > -2 && x48:0 - 3 * x51:0 = 0 && x48:0 - 2 * x50:0 = 1 && x47:0 > 0 && x48:0 < x47:0)
f1170_0_main_Load'(c23, x53:0, x52:0) -> f1170_0_main_Load(c24, c25, x52:0) :|: c25 = x53:0 + 1 && (c24 = 0 && c23 = 0) && (x53:0 - 2 * x55:0 > -2 && x53:0 - 2 * x55:0 < 2 && x53:0 - 2 * x55:0 = 0 && x52:0 > 0 && x53:0 < x52:0)
The following rules are bounded:
f1170_0_main_Load'(c, x23:0, x22:0) -> f11291_0_main_GE(c1, x23:0, c2, x22:0) :|: c2 = 0 && (c1 = 0 && c = 0) && (x23:0 - 3 * x25:0 < 3 && x23:0 - 5 * x24:0 < 5 && x23:0 - 2 * x26:0 < 2 && x23:0 - 2 * x26:0 > -2 && x23:0 - 2 * x26:0 = 1 && x23:0 < x22:0 && x22:0 > -1 && x23:0 - 3 * x25:0 > 0 && x23:0 - 5 * x24:0 > 0)
f1170_0_main_Load'(c5, x38:0, x37:0) -> f1170_0_main_Load(c6, c7, x37:0) :|: c7 = x38:0 + 1 && (c6 = 0 && c5 = 0) && (x38:0 - 5 * x42:0 > -5 && x38:0 - 5 * x42:0 < 5 && x38:0 - 3 * x40:0 < 3 && x38:0 - 2 * x41:0 < 2 && x38:0 - 2 * x41:0 > -2 && x38:0 - 5 * x42:0 = 0 && x38:0 - 2 * x41:0 = 1 && x38:0 < x37:0 && x38:0 - 3 * x40:0 > 0 && x37:0 > 0)
f11291_0_main_GE(c10, x44:0, x45:0, x43:0) -> f11291_0_main_GE(c11, x44:0, c12, x43:0) :|: c12 = x45:0 + 1 && (c11 = 0 && c10 = 0) && x45:0 < 100
f11291_0_main_GE(c13, i101:0:0, i654:0:0, i109:0:0) -> f1170_0_main_Load(c14, c15, i109:0:0) :|: c15 = i101:0:0 + 1 && (c14 = 0 && c13 = 0) && i654:0:0 > 99
f1170_0_main_Load'(c16, x48:0, x47:0) -> f1170_0_main_Load(c17, c18, x47:0) :|: c18 = x48:0 + 1 && (c17 = 0 && c16 = 0) && (x48:0 - 3 * x51:0 > -3 && x48:0 - 3 * x51:0 < 3 && x48:0 - 2 * x50:0 < 2 && x48:0 - 2 * x50:0 > -2 && x48:0 - 3 * x51:0 = 0 && x48:0 - 2 * x50:0 = 1 && x47:0 > 0 && x48:0 < x47:0)
f1170_0_main_Load'(c23, x53:0, x52:0) -> f1170_0_main_Load(c24, c25, x52:0) :|: c25 = x53:0 + 1 && (c24 = 0 && c23 = 0) && (x53:0 - 2 * x55:0 > -2 && x53:0 - 2 * x55:0 < 2 && x53:0 - 2 * x55:0 = 0 && x52:0 > 0 && x53:0 < x52:0)

----------------------------------------

(86)
Obligation:
Rules:
f1170_0_main_Load'(c, x23:0, x22:0) -> f11291_0_main_GE(c1, x23:0, c2, x22:0) :|: c2 = 0 && (c1 = 0 && c = 0) && (x23:0 - 3 * x25:0 < 3 && x23:0 - 5 * x24:0 < 5 && x23:0 - 2 * x26:0 < 2 && x23:0 - 2 * x26:0 > -2 && x23:0 - 2 * x26:0 = 1 && x23:0 < x22:0 && x22:0 > -1 && x23:0 - 3 * x25:0 > 0 && x23:0 - 5 * x24:0 > 0)
f11291_0_main_GE(c10, x44:0, x45:0, x43:0) -> f11291_0_main_GE(c11, x44:0, c12, x43:0) :|: c12 = x45:0 + 1 && (c11 = 0 && c10 = 0) && x45:0 < 100
f11291_0_main_GE(c13, i101:0:0, i654:0:0, i109:0:0) -> f1170_0_main_Load(c14, c15, i109:0:0) :|: c15 = i101:0:0 + 1 && (c14 = 0 && c13 = 0) && i654:0:0 > 99

----------------------------------------

(87) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f1170_0_main_Load'(x, x1, x2)] = 1 + c*x
[f11291_0_main_GE(x3, x4, x5, x6)] = c3*x3
[f1170_0_main_Load(x7, x8, x9)] = c7*x7

The following rules are decreasing:
f1170_0_main_Load'(c, x23:0, x22:0) -> f11291_0_main_GE(c1, x23:0, c2, x22:0) :|: c2 = 0 && (c1 = 0 && c = 0) && (x23:0 - 3 * x25:0 < 3 && x23:0 - 5 * x24:0 < 5 && x23:0 - 2 * x26:0 < 2 && x23:0 - 2 * x26:0 > -2 && x23:0 - 2 * x26:0 = 1 && x23:0 < x22:0 && x22:0 > -1 && x23:0 - 3 * x25:0 > 0 && x23:0 - 5 * x24:0 > 0)
The following rules are bounded:
f1170_0_main_Load'(c, x23:0, x22:0) -> f11291_0_main_GE(c1, x23:0, c2, x22:0) :|: c2 = 0 && (c1 = 0 && c = 0) && (x23:0 - 3 * x25:0 < 3 && x23:0 - 5 * x24:0 < 5 && x23:0 - 2 * x26:0 < 2 && x23:0 - 2 * x26:0 > -2 && x23:0 - 2 * x26:0 = 1 && x23:0 < x22:0 && x22:0 > -1 && x23:0 - 3 * x25:0 > 0 && x23:0 - 5 * x24:0 > 0)
f11291_0_main_GE(c10, x44:0, x45:0, x43:0) -> f11291_0_main_GE(c11, x44:0, c12, x43:0) :|: c12 = x45:0 + 1 && (c11 = 0 && c10 = 0) && x45:0 < 100
f11291_0_main_GE(c13, i101:0:0, i654:0:0, i109:0:0) -> f1170_0_main_Load(c14, c15, i109:0:0) :|: c15 = i101:0:0 + 1 && (c14 = 0 && c13 = 0) && i654:0:0 > 99

----------------------------------------

(88)
Obligation:
Rules:
f11291_0_main_GE(c10, x44:0, x45:0, x43:0) -> f11291_0_main_GE(c11, x44:0, c12, x43:0) :|: c12 = x45:0 + 1 && (c11 = 0 && c10 = 0) && x45:0 < 100
f11291_0_main_GE(c13, i101:0:0, i654:0:0, i109:0:0) -> f1170_0_main_Load(c14, c15, i109:0:0) :|: c15 = i101:0:0 + 1 && (c14 = 0 && c13 = 0) && i654:0:0 > 99

----------------------------------------

(89) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f11291_0_main_GE(x, x1, x2, x3)] = 1 + c*x
[f1170_0_main_Load(x4, x5, x6)] = c4*x4

The following rules are decreasing:
f11291_0_main_GE(c13, i101:0:0, i654:0:0, i109:0:0) -> f1170_0_main_Load(c14, c15, i109:0:0) :|: c15 = i101:0:0 + 1 && (c14 = 0 && c13 = 0) && i654:0:0 > 99
The following rules are bounded:
f11291_0_main_GE(c10, x44:0, x45:0, x43:0) -> f11291_0_main_GE(c11, x44:0, c12, x43:0) :|: c12 = x45:0 + 1 && (c11 = 0 && c10 = 0) && x45:0 < 100
f11291_0_main_GE(c13, i101:0:0, i654:0:0, i109:0:0) -> f1170_0_main_Load(c14, c15, i109:0:0) :|: c15 = i101:0:0 + 1 && (c14 = 0 && c13 = 0) && i654:0:0 > 99

----------------------------------------

(90)
Obligation:
Rules:
f11291_0_main_GE(c10, x44:0, x45:0, x43:0) -> f11291_0_main_GE(c11, x44:0, c12, x43:0) :|: c12 = x45:0 + 1 && (c11 = 0 && c10 = 0) && x45:0 < 100

----------------------------------------

(91) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f11291_0_main_GE(x, x1, x2, x3)] = 99 + c*x - x2

The following rules are decreasing:
f11291_0_main_GE(c10, x44:0, x45:0, x43:0) -> f11291_0_main_GE(c11, x44:0, c12, x43:0) :|: c12 = x45:0 + 1 && (c11 = 0 && c10 = 0) && x45:0 < 100
The following rules are bounded:
f11291_0_main_GE(c10, x44:0, x45:0, x43:0) -> f11291_0_main_GE(c11, x44:0, c12, x43:0) :|: c12 = x45:0 + 1 && (c11 = 0 && c10 = 0) && x45:0 < 100

----------------------------------------

(92)
YES
