YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/l3EDy.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 52 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 2271 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) JBCTerminationSCC
        (8) SCCToIRSProof [SOUND, 182 ms]
        (9) IRSwT
        (10) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (11) IRSwT
        (12) IRSwTTerminationDigraphProof [EQUIVALENT, 29 ms]
        (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) TempFilterProof [SOUND, 24 ms]
        (17) IntTRS
        (18) PolynomialOrderProcessor [EQUIVALENT, 6 ms]
        (19) IntTRS
        (20) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (21) YES
    (22) JBCTerminationSCC
        (23) SCCToIRSProof [SOUND, 150 ms]
        (24) IRSwT
        (25) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (26) IRSwT
        (27) IRSwTTerminationDigraphProof [EQUIVALENT, 134 ms]
        (28) IRSwT
        (29) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (30) IRSwT
        (31) TempFilterProof [SOUND, 7 ms]
        (32) IntTRS
        (33) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (34) YES
    (35) JBCTerminationSCC
        (36) SCCToIRSProof [SOUND, 131 ms]
        (37) IRSwT
        (38) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (39) IRSwT
        (40) IRSwTTerminationDigraphProof [EQUIVALENT, 141 ms]
        (41) IRSwT
        (42) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (43) IRSwT
        (44) TempFilterProof [SOUND, 17 ms]
        (45) IntTRS
        (46) RankingReductionPairProof [EQUIVALENT, 10 ms]
        (47) YES
    (48) JBCTerminationSCC
        (49) SCCToIRSProof [SOUND, 127 ms]
        (50) IRSwT
        (51) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (52) IRSwT
        (53) IRSwTTerminationDigraphProof [EQUIVALENT, 121 ms]
        (54) IRSwT
        (55) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (56) IRSwT
        (57) TempFilterProof [SOUND, 15 ms]
        (58) IntTRS
        (59) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (60) IntTRS
        (61) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (62) YES
    (63) JBCTerminationSCC
        (64) SCCToIRSProof [SOUND, 142 ms]
        (65) IRSwT
        (66) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (67) IRSwT
        (68) IRSwTTerminationDigraphProof [EQUIVALENT, 100 ms]
        (69) IRSwT
        (70) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (71) IRSwT
        (72) TempFilterProof [SOUND, 15 ms]
        (73) IntTRS
        (74) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (75) IntTRS
        (76) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (77) YES
    (78) JBCTerminationSCC
        (79) SCCToIRSProof [SOUND, 74 ms]
        (80) IRSwT
        (81) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (82) IRSwT
        (83) IRSwTTerminationDigraphProof [EQUIVALENT, 17 ms]
        (84) IRSwT
        (85) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (86) IRSwT
        (87) TempFilterProof [SOUND, 36 ms]
        (88) IntTRS
        (89) PolynomialOrderProcessor [EQUIVALENT, 10 ms]
        (90) IntTRS
        (91) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (92) YES
    (93) JBCTerminationSCC
        (94) SCCToIRSProof [SOUND, 65 ms]
        (95) IRSwT
        (96) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (97) IRSwT
        (98) IRSwTTerminationDigraphProof [EQUIVALENT, 18 ms]
        (99) IRSwT
        (100) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (101) IRSwT
        (102) TempFilterProof [SOUND, 15 ms]
        (103) IntTRS
        (104) RankingReductionPairProof [EQUIVALENT, 6 ms]
        (105) YES
    (106) JBCTerminationSCC
        (107) SCCToIRSProof [SOUND, 58 ms]
        (108) IRSwT
        (109) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (110) IRSwT
        (111) IRSwTTerminationDigraphProof [EQUIVALENT, 126 ms]
        (112) IRSwT
        (113) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (114) IRSwT
        (115) TempFilterProof [SOUND, 8 ms]
        (116) IntTRS
        (117) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (118) YES
    (119) JBCTerminationSCC
        (120) SCCToIRSProof [SOUND, 53 ms]
        (121) IRSwT
        (122) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (123) IRSwT
        (124) IRSwTTerminationDigraphProof [EQUIVALENT, 118 ms]
        (125) IRSwT
        (126) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (127) IRSwT
        (128) TempFilterProof [SOUND, 27 ms]
        (129) IntTRS
        (130) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (131) IntTRS
        (132) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
        (133) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Collection</tt>
 * interface, to minimize the effort required to implement this interface. <p>
 *
 * To implement an unmodifiable collection, the programmer needs only to
 * extend this class and provide implementations for the <tt>iterator</tt> and
 * <tt>size</tt> methods.  (The iterator returned by the <tt>iterator</tt>
 * method must implement <tt>hasNext</tt> and <tt>next</tt>.)<p>
 *
 * To implement a modifiable collection, the programmer must additionally
 * override this class's <tt>add</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by the
 * <tt>iterator</tt> method must additionally implement its <tt>remove</tt>
 * method.<p>
 *
 * The programmer should generally provide a void (no argument) and
 * <tt>Collection</tt> constructor, as per the recommendation in the
 * <tt>Collection</tt> interface specification.<p>
 *
 * The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if
 * the collection being implemented admits a more efficient implementation.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractCollection<E> implements Collection<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractCollection() {
    }

    // Query Operations

    /**
     * Returns an iterator over the elements contained in this collection.
     *
     * @return an iterator over the elements contained in this collection
     */
    public abstract Iterator<E> iterator();

    public abstract int size();

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the elements in the collection,
     * checking each element in turn for equality with the specified element.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean contains(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return true;
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return true;
        }
        return false;
    }

    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     */
    public boolean add(E e) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the collection looking for the
     * specified element.  If it finds the element, it removes the element
     * from the collection using the iterator's remove method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's iterator method does not implement the <tt>remove</tt>
     * method and this collection contains the specified object.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public boolean remove(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext()) {
                if (e.next()==null) {
                    e.remove();
                    return true;
                }
            }
        } else {
            while (e.hasNext()) {
                if (o.equals(e.next())) {
                    e.remove();
                    return true;
                }
            }
        }
        return false;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection,
     * checking each element returned by the iterator in turn to see
     * if it's contained in this collection.  If all elements are so
     * contained <tt>true</tt> is returned, otherwise <tt>false</tt>.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @see #contains(Object)
     */
    public boolean containsAll(Collection<?> c) {
        Iterator<?> e = c.iterator();
        while (e.hasNext())
            if (!contains(e.next()))
                return false;
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection, and adds
     * each object returned by the iterator to this collection, in turn.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> unless <tt>add</tt> is
     * overridden (assuming the specified collection is non-empty).
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     *
     * @see #add(Object)
     */
    public boolean addAll(Collection<? extends E> c) {
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            if (add(e.next()))
                modified = true;
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's so contained, it's removed from
     * this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements in common with the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;
        Iterator<?> e = iterator();
        while (e.hasNext()) {
            if (c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's not so contained, it's removed
     * from this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements not present in the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean retainAll(Collection<?> c) {
        boolean modified = false;
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            if (!c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, removing each
     * element using the <tt>Iterator.remove</tt> operation.  Most
     * implementations will probably choose to override this method for
     * efficiency.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's <tt>iterator</tt> method does not implement the
     * <tt>remove</tt> method and this collection is non-empty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            e.next();
            e.remove();
        }
    }


    //  String conversion

    /**
     * Returns a string representation of this collection.  The string
     * representation consists of a list of the collection's elements in the
     * order they are returned by its iterator, enclosed in square brackets
     * (<tt>"[]"</tt>).  Adjacent elements are separated by the characters
     * <tt>", "</tt> (comma and space).  Elements are converted to strings as
     * by {@link String#valueOf(Object)}.
     *
     * @return a string representation of this collection
     */
    public String toString() {
        Iterator<E> i = iterator();
        if (! i.hasNext())
            return "[]";

        String sb = "";
        sb = sb + "[";
        for (;;) {
            E e = i.next();
            sb = sb + (e == this ? "(this Collection)" : e);
            if (! i.hasNext()) {
                sb = sb + "]";
		return sb;
            }
            sb = sb + ", ";
        }
    }

}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the {@link List}
 * interface to minimize the effort required to implement this interface
 * backed by a "random access" data store (such as an array).  For sequential
 * access data (such as a linked list), {@link AbstractSequentialList} should
 * be used in preference to this class.
 *
 * <p>To implement an unmodifiable list, the programmer needs only to extend
 * this class and provide implementations for the {@link #get(int)} and
 * {@link List#size() size()} methods.
 *
 * <p>To implement a modifiable list, the programmer must additionally
 * override the {@link #set(int, Object) set(int, E)} method (which otherwise
 * throws an {@code UnsupportedOperationException}).  If the list is
 * variable-size the programmer must additionally override the
 * {@link #add(int, Object) add(int, E)} and {@link #remove(int)} methods.
 *
 * <p>The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the {@link Collection} interface
 * specification.
 *
 * <p>Unlike the other abstract collection implementations, the programmer does
 * <i>not</i> have to provide an iterator implementation; the iterator and
 * list iterator are implemented by this class, on top of the "random access"
 * methods:
 * {@link #get(int)},
 * {@link #set(int, Object) set(int, E)},
 * {@link #add(int, Object) add(int, E)} and
 * {@link #remove(int)}.
 *
 * <p>The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if the
 * collection being implemented admits a more efficient implementation.
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @since 1.2
 */

public abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractList() {
    }

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * <p>This implementation calls {@code add(size(), e)}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @param e element to be appended to this list
     * @return {@code true} (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the {@code add} operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    public boolean add(E e) {
        add(size(), e);
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    abstract public E get(int index);

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        throw new UnsupportedOperationException();
    }


    // Search Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator (with
     * {@code listIterator()}).  Then, it iterates over the list until the
     * specified element is found or the end of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int indexOf(Object o) {
        ListIterator<E> e = listIterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return e.previousIndex();
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return e.previousIndex();
        }
        return -1;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator that points to the end
     * of the list (with {@code listIterator(size())}).  Then, it iterates
     * backwards over the list until the specified element is found, or the
     * beginning of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int lastIndexOf(Object o) {
        ListIterator<E> e = listIterator(size());
        if (o==null) {
            while (e.hasPrevious())
                if (e.previous()==null)
                    return e.nextIndex();
        } else {
            while (e.hasPrevious())
                if (o.equals(e.previous()))
                    return e.nextIndex();
        }
        return -1;
    }


    // Bulk Operations

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * <p>This implementation calls {@code removeRange(0, size())}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless {@code remove(int
     * index)} or {@code removeRange(int fromIndex, int toIndex)} is
     * overridden.
     *
     * @throws UnsupportedOperationException if the {@code clear} operation
     *         is not supported by this list
     */
    public void clear() {
        removeRange(0, size());
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation gets an iterator over the specified collection
     * and iterates over it, inserting the elements obtained from the
     * iterator into this list at the appropriate position, one at a time,
     * using {@code add(int, E)}.
     * Many implementations will override this method for efficiency.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            add(index++, e.next());
            modified = true;
        }
        return modified;
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * <p>This implementation returns a straightforward implementation of the
     * iterator interface, relying on the backing list's {@code size()},
     * {@code get(int)}, and {@code remove(int)} methods.
     *
     * <p>Note that the iterator returned by this method will throw an
     * {@link UnsupportedOperationException} in response to its
     * {@code remove} method unless the list's {@code remove(int)} method is
     * overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification
     * for the (protected) {@link #modCount} field.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    public Iterator<E> iterator() {
        return new Itr();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns {@code listIterator(0)}.
     *
     * @see #listIterator(int)
     */
    public ListIterator<E> listIterator() {
        return listIterator(0);
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a straightforward implementation of the
     * {@code ListIterator} interface that extends the implementation of the
     * {@code Iterator} interface returned by the {@code iterator()} method.
     * The {@code ListIterator} implementation relies on the backing list's
     * {@code get(int)}, {@code set(int, E)}, {@code add(int, E)}
     * and {@code remove(int)} methods.
     *
     * <p>Note that the list iterator returned by this implementation will
     * throw an {@link UnsupportedOperationException} in response to its
     * {@code remove}, {@code set} and {@code add} methods unless the
     * list's {@code remove(int)}, {@code set(int, E)}, and
     * {@code add(int, E)} methods are overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification for
     * the (protected) {@link #modCount} field.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public ListIterator<E> listIterator(final int index) {
        rangeCheckForAdd(index);

        return new ListItr(index);
    }

    private class Itr implements Iterator<E> {
        /**
         * Index of element to be returned by subsequent call to next.
         */
        int cursor = 0;

        /**
         * Index of element returned by most recent call to next or
         * previous.  Reset to -1 if this element is deleted by a call
         * to remove.
         */
        int lastRet = -1;

        /**
         * The modCount value that the iterator believes that the backing
         * List should have.  If this expectation is violated, the iterator
         * has detected concurrent modification.
         */
        int expectedModCount = modCount;

        public boolean hasNext() {
            return cursor != size();
        }

        public E next() {
            checkForComodification();
            try {
                int i = cursor;
                E next = get(i);
                lastRet = i;
                cursor = i + 1;
                return next;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public void remove() {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.remove(lastRet);
                if (lastRet < cursor)
                    cursor--;
                lastRet = -1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException e) {
                throw new ConcurrentModificationException();
            }
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private class ListItr extends Itr implements ListIterator<E> {
        ListItr(int index) {
            cursor = index;
        }

        public boolean hasPrevious() {
            return cursor != 0;
        }

        public E previous() {
            checkForComodification();
            try {
                int i = cursor - 1;
                E previous = get(i);
                lastRet = cursor = i;
                return previous;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public int nextIndex() {
            return cursor;
        }

        public int previousIndex() {
            return cursor-1;
        }

        public void set(E e) {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.set(lastRet, e);
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }

        public void add(E e) {
            checkForComodification();

            try {
                int i = cursor;
                AbstractList.this.add(i, e);
                lastRet = -1;
                cursor = i + 1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a list that subclasses
     * {@code AbstractList}.  The subclass stores, in private fields, the
     * offset of the subList within the backing list, the size of the subList
     * (which can change over its lifetime), and the expected
     * {@code modCount} value of the backing list.  There are two variants
     * of the subclass, one of which implements {@code RandomAccess}.
     * If this list implements {@code RandomAccess} the returned list will
     * be an instance of the subclass that implements {@code RandomAccess}.
     *
     * <p>The subclass's {@code set(int, E)}, {@code get(int)},
     * {@code add(int, E)}, {@code remove(int)}, {@code addAll(int,
     * Collection)} and {@code removeRange(int, int)} methods all
     * delegate to the corresponding methods on the backing abstract list,
     * after bounds-checking the index and adjusting for the offset.  The
     * {@code addAll(Collection c)} method merely returns {@code addAll(size,
     * c)}.
     *
     * <p>The {@code listIterator(int)} method returns a "wrapper object"
     * over a list iterator on the backing list, which is created with the
     * corresponding method on the backing list.  The {@code iterator} method
     * merely returns {@code listIterator()}, and the {@code size} method
     * merely returns the subclass's {@code size} field.
     *
     * <p>All methods first check to see if the actual {@code modCount} of
     * the backing list is equal to its expected value, and throw a
     * {@code ConcurrentModificationException} if it is not.
     *
     * @throws IndexOutOfBoundsException if an endpoint index value is out of range
     *         {@code (fromIndex < 0 || toIndex > size)}
     * @throws IllegalArgumentException if the endpoint indices are out of order
     *         {@code (fromIndex > toIndex)}
     */
    public List<E> subList(int fromIndex, int toIndex) {
        return (this instanceof RandomAccess ?
                new RandomAccessSubList<E>(this, fromIndex, toIndex) :
                new SubList<E>(this, fromIndex, toIndex));
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * {@code true} if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements {@code e1} and
     * {@code e2} are <i>equal</i> if {@code (e1==null ? e2==null :
     * e1.equals(e2))}.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.<p>
     *
     * This implementation first checks if the specified object is this
     * list. If so, it returns {@code true}; if not, it checks if the
     * specified object is a list. If not, it returns {@code false}; if so,
     * it iterates over both lists, comparing corresponding pairs of elements.
     * If any comparison returns {@code false}, this method returns
     * {@code false}.  If either iterator runs out of elements before the
     * other it returns {@code false} (as the lists are of unequal length);
     * otherwise it returns {@code true} when the iterations complete.
     *
     * @param o the object to be compared for equality with this list
     * @return {@code true} if the specified object is equal to this list
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;
        if (!(o instanceof List))
            return false;

        ListIterator<E> e1 = listIterator();
        ListIterator e2 = ((List) o).listIterator();
        while(e1.hasNext() && e2.hasNext()) {
            E o1 = e1.next();
            Object o2 = e2.next();
            if (!(o1==null ? o2==null : o1.equals(o2)))
                return false;
        }
        return !(e1.hasNext() || e2.hasNext());
    }

    /**
     * Returns the hash code value for this list.
     *
     * <p>This implementation uses exactly the code that is used to define the
     * list hash function in the documentation for the {@link List#hashCode}
     * method.
     *
     * @return the hash code value for this list
     */
    public int hashCode() {
        int hashCode = 1;
        Iterator<E> it = this.iterator();
        while (it.hasNext()) {
            E e = it.next();
            hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
        }
        return hashCode;
    }

    /**
     * Removes from this list all of the elements whose index is between
     * {@code fromIndex}, inclusive, and {@code toIndex}, exclusive.
     * Shifts any succeeding elements to the left (reduces their index).
     * This call shortens the list by {@code (toIndex - fromIndex)} elements.
     * (If {@code toIndex==fromIndex}, this operation has no effect.)
     *
     * <p>This method is called by the {@code clear} operation on this list
     * and its subLists.  Overriding this method to take advantage of
     * the internals of the list implementation can <i>substantially</i>
     * improve the performance of the {@code clear} operation on this list
     * and its subLists.
     *
     * <p>This implementation gets a list iterator positioned before
     * {@code fromIndex}, and repeatedly calls {@code ListIterator.next}
     * followed by {@code ListIterator.remove} until the entire range has
     * been removed.  <b>Note: if {@code ListIterator.remove} requires linear
     * time, this implementation requires quadratic time.</b>
     *
     * @param fromIndex index of first element to be removed
     * @param toIndex index after last element to be removed
     */
    protected void removeRange(int fromIndex, int toIndex) {
        ListIterator<E> it = listIterator(fromIndex);
        for (int i=0, n=toIndex-fromIndex; i<n; i++) {
            it.next();
            it.remove();
        }
    }

    /**
     * The number of times this list has been <i>structurally modified</i>.
     * Structural modifications are those that change the size of the
     * list, or otherwise perturb it in such a fashion that iterations in
     * progress may yield incorrect results.
     *
     * <p>This field is used by the iterator and list iterator implementation
     * returned by the {@code iterator} and {@code listIterator} methods.
     * If the value of this field changes unexpectedly, the iterator (or list
     * iterator) will throw a {@code ConcurrentModificationException} in
     * response to the {@code next}, {@code remove}, {@code previous},
     * {@code set} or {@code add} operations.  This provides
     * <i>fail-fast</i> behavior, rather than non-deterministic behavior in
     * the face of concurrent modification during iteration.
     *
     * <p><b>Use of this field by subclasses is optional.</b> If a subclass
     * wishes to provide fail-fast iterators (and list iterators), then it
     * merely has to increment this field in its {@code add(int, E)} and
     * {@code remove(int)} methods (and any other methods that it overrides
     * that result in structural modifications to the list).  A single call to
     * {@code add(int, E)} or {@code remove(int)} must add no more than
     * one to this field, or the iterators (and list iterators) will throw
     * bogus {@code ConcurrentModificationExceptions}.  If an implementation
     * does not wish to provide fail-fast iterators, this field may be
     * ignored.
     */
    protected transient int modCount = 0;

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size())
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }
}

class SubList<E> extends AbstractList<E> {
    private final AbstractList<E> l;
    private final int offset;
    private int size;

    SubList(AbstractList<E> list, int fromIndex, int toIndex) {
        if (fromIndex < 0)
            throw new IndexOutOfBoundsException();
        if (toIndex > list.size())
            throw new IndexOutOfBoundsException();
        if (fromIndex > toIndex)
            throw new IllegalArgumentException();
        l = list;
        offset = fromIndex;
        size = toIndex - fromIndex;
        this.modCount = l.modCount;
    }

    public E set(int index, E element) {
        rangeCheck(index);
        checkForComodification();
        return l.set(index+offset, element);
    }

    public E get(int index) {
        rangeCheck(index);
        checkForComodification();
        return l.get(index+offset);
    }

    public int size() {
        checkForComodification();
        return size;
    }

    public void add(int index, E element) {
        rangeCheckForAdd(index);
        checkForComodification();
        l.add(index+offset, element);
        this.modCount = l.modCount;
        size++;
    }

    public E remove(int index) {
        rangeCheck(index);
        checkForComodification();
        E result = l.remove(index+offset);
        this.modCount = l.modCount;
        size--;
        return result;
    }

    protected void removeRange(int fromIndex, int toIndex) {
        checkForComodification();
        l.removeRange(fromIndex+offset, toIndex+offset);
        this.modCount = l.modCount;
        size -= (toIndex-fromIndex);
    }

    public boolean addAll(Collection<? extends E> c) {
        return addAll(size, c);
    }

    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        int cSize = c.size();
        if (cSize==0)
            return false;

        checkForComodification();
        l.addAll(offset+index, c);
        this.modCount = l.modCount;
        size += cSize;
        return true;
    }

    public Iterator<E> iterator() {
        return listIterator();
    }

    public ListIterator<E> listIterator(final int index) {
        checkForComodification();
        rangeCheckForAdd(index);

        return new ListIterator<E>() {
            private final ListIterator<E> i = l.listIterator(index+offset);

            public boolean hasNext() {
                return nextIndex() < size;
            }

            public E next() {
                if (hasNext())
                    return i.next();
                else
                    throw new NoSuchElementException();
            }

            public boolean hasPrevious() {
                return previousIndex() >= 0;
            }

            public E previous() {
                if (hasPrevious())
                    return i.previous();
                else
                    throw new NoSuchElementException();
            }

            public int nextIndex() {
                return i.nextIndex() - offset;
            }

            public int previousIndex() {
                return i.previousIndex() - offset;
            }

            public void remove() {
                i.remove();
                SubList.this.modCount = l.modCount;
                size--;
            }

            public void set(E e) {
                i.set(e);
            }

            public void add(E e) {
                i.add(e);
                SubList.this.modCount = l.modCount;
                size++;
            }
        };
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new SubList<E>(this, fromIndex, toIndex);
    }

    private void rangeCheck(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }

    private void checkForComodification() {
        if (this.modCount != l.modCount)
            throw new ConcurrentModificationException();
    }
}

class RandomAccessSubList<E> extends SubList<E> implements RandomAccess {
    RandomAccessSubList(AbstractList<E> list, int fromIndex, int toIndex) {
        super(list, fromIndex, toIndex);
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new RandomAccessSubList<E>(this, fromIndex, toIndex);
    }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>List</tt>
 * interface to minimize the effort required to implement this interface
 * backed by a "sequential access" data store (such as a linked list).  For
 * random access data (such as an array), <tt>AbstractList</tt> should be used
 * in preference to this class.<p>
 *
 * This class is the opposite of the <tt>AbstractList</tt> class in the sense
 * that it implements the "random access" methods (<tt>get(int index)</tt>,
 * <tt>set(int index, E element)</tt>, <tt>add(int index, E element)</tt> and
 * <tt>remove(int index)</tt>) on top of the list's list iterator, instead of
 * the other way around.<p>
 *
 * To implement a list the programmer needs only to extend this class and
 * provide implementations for the <tt>listIterator</tt> and <tt>size</tt>
 * methods.  For an unmodifiable list, the programmer need only implement the
 * list iterator's <tt>hasNext</tt>, <tt>next</tt>, <tt>hasPrevious</tt>,
 * <tt>previous</tt> and <tt>index</tt> methods.<p>
 *
 * For a modifiable list the programmer should additionally implement the list
 * iterator's <tt>set</tt> method.  For a variable-size list the programmer
 * should additionally implement the list iterator's <tt>remove</tt> and
 * <tt>add</tt> methods.<p>
 *
 * The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the <tt>Collection</tt> interface
 * specification.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see List
 * @see AbstractList
 * @see AbstractCollection
 * @since 1.2
 */

public abstract class AbstractSequentialList<E> extends AbstractList<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractSequentialList() {
    }

    /**
     * Returns the element at the specified position in this list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the element using <tt>ListIterator.next</tt> and returns it.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        try {
            return listIterator(index).next();
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the current element using <tt>ListIterator.next</tt> and replaces it
     * with <tt>ListIterator.set</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>set</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        try {
            ListIterator<E> e = listIterator(index);
            E oldVal = e.next();
            e.set(element);
            return oldVal;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it
     * inserts the specified element with <tt>ListIterator.add</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>add</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        try {
            listIterator(index).add(element);
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it removes
     * the element with <tt>ListIterator.remove</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>remove</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        try {
            ListIterator<E> e = listIterator(index);
            E outCast = e.next();
            e.remove();
            return outCast;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Bulk Operations

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * <p>This implementation gets an iterator over the specified collection and
     * a list iterator over this list pointing to the indexed element (with
     * <tt>listIterator(index)</tt>).  Then, it iterates over the specified
     * collection, inserting the elements obtained from the iterator into this
     * list, one at a time, using <tt>ListIterator.add</tt> followed by
     * <tt>ListIterator.next</tt> (to skip over the added element).
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator returned by
     * the <tt>listIterator</tt> method does not implement the <tt>add</tt>
     * operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        try {
            boolean modified = false;
            ListIterator<E> e1 = listIterator(index);
            Iterator<? extends E> e2 = c.iterator();
            while (e2.hasNext()) {
                e1.add(e2.next());
                modified = true;
            }
            return modified;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list (in proper
     * sequence).<p>
     *
     * This implementation merely returns a list iterator over the list.
     *
     * @return an iterator over the elements in this list (in proper sequence)
     */
    public Iterator<E> iterator() {
        return listIterator();
    }

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @param  index index of first element to be returned from the list
     *         iterator (by a call to the <code>next</code> method)
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public abstract ListIterator<E> listIterator(int index);
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * The root interface in the <i>collection hierarchy</i>.  A collection
 * represents a group of objects, known as its <i>elements</i>.  Some
 * collections allow duplicate elements and others do not.  Some are ordered
 * and others unordered.  The JDK does not provide any <i>direct</i>
 * implementations of this interface: it provides implementations of more
 * specific subinterfaces like <tt>Set</tt> and <tt>List</tt>.  This interface
 * is typically used to pass collections around and manipulate them where
 * maximum generality is desired.
 *
 * <p><i>Bags</i> or <i>multisets</i> (unordered collections that may contain
 * duplicate elements) should implement this interface directly.
 *
 * <p>All general-purpose <tt>Collection</tt> implementation classes (which
 * typically implement <tt>Collection</tt> indirectly through one of its
 * subinterfaces) should provide two "standard" constructors: a void (no
 * arguments) constructor, which creates an empty collection, and a
 * constructor with a single argument of type <tt>Collection</tt>, which
 * creates a new collection with the same elements as its argument.  In
 * effect, the latter constructor allows the user to copy any collection,
 * producing an equivalent collection of the desired implementation type.
 * There is no way to enforce this convention (as interfaces cannot contain
 * constructors) but all of the general-purpose <tt>Collection</tt>
 * implementations in the Java platform libraries comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the collection on which they operate, are specified to
 * throw <tt>UnsupportedOperationException</tt> if this collection does not
 * support the operation.  If this is the case, these methods may, but are not
 * required to, throw an <tt>UnsupportedOperationException</tt> if the
 * invocation would have no effect on the collection.  For example, invoking
 * the {@link #addAll(Collection)} method on an unmodifiable collection may,
 * but is not required to, throw the exception if the collection to be added
 * is empty.
 *
 * <p>Some collection implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the collection may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>It is up to each collection to determine its own synchronization
 * policy.  In the absence of a stronger guarantee by the
 * implementation, undefined behavior may result from the invocation
 * of any method on a collection that is being mutated by another
 * thread; this includes direct invocations, passing the collection to
 * a method that might perform invocations, and using an existing
 * iterator to examine the collection.
 *
 * <p>Many methods in Collections Framework interfaces are defined in
 * terms of the {@link Object#equals(Object) equals} method.  For example,
 * the specification for the {@link #contains(Object) contains(Object o)}
 * method says: "returns <tt>true</tt> if and only if this collection
 * contains at least one element <tt>e</tt> such that
 * <tt>(o==null ? e==null : o.equals(e))</tt>."  This specification should
 * <i>not</i> be construed to imply that invoking <tt>Collection.contains</tt>
 * with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be
 * invoked for any element <tt>e</tt>.  Implementations are free to implement
 * optimizations whereby the <tt>equals</tt> invocation is avoided, for
 * example, by first comparing the hash codes of the two elements.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see     Set
 * @see     List
 * @see     Map
 * @see     SortedSet
 * @see     SortedMap
 * @see     HashSet
 * @see     TreeSet
 * @see     ArrayList
 * @see     LinkedList
 * @see     Vector
 * @see     Collections
 * @see     Arrays
 * @see     AbstractCollection
 * @since 1.2
 */

public interface Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this collection.  If this collection
     * contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this collection
     */
    int size();

    /**
     * Returns <tt>true</tt> if this collection contains no elements.
     *
     * @return <tt>true</tt> if this collection contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this collection contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this collection
     * contains at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this collection is to be tested
     * @return <tt>true</tt> if this collection contains the specified
     *         element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this collection.  There are no
     * guarantees concerning the order in which the elements are returned
     * (unless this collection is an instance of some class that provides a
     * guarantee).
     *
     * @return an <tt>Iterator</tt> over the elements in this collection
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Ensures that this collection contains the specified element (optional
     * operation).  Returns <tt>true</tt> if this collection changed as a
     * result of the call.  (Returns <tt>false</tt> if this collection does
     * not permit duplicates and already contains the specified element.)<p>
     *
     * Collections that support this operation may place limitations on what
     * elements may be added to this collection.  In particular, some
     * collections will refuse to add <tt>null</tt> elements, and others will
     * impose restrictions on the type of elements that may be added.
     * Collection classes should clearly specify in their documentation any
     * restrictions on what elements may be added.<p>
     *
     * If a collection refuses to add a particular element for any reason
     * other than that it already contains the element, it <i>must</i> throw
     * an exception (rather than returning <tt>false</tt>).  This preserves
     * the invariant that a collection always contains the specified element
     * after this call returns.
     *
     * @param e element whose presence in this collection is to be ensured
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this collection
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements
     * @throws IllegalArgumentException if some property of the element
     *         prevents it from being added to this collection
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to insertion restrictions
     */
    boolean add(E e);

    /**
     * Removes a single instance of the specified element from this
     * collection, if it is present (optional operation).  More formally,
     * removes an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this collection contains one or more such elements.  Returns
     * <tt>true</tt> if this collection contained the specified element (or
     * equivalently, if this collection changed as a result of the call).
     *
     * @param o element to be removed from this collection, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this collection
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this collection contains all of the elements
     * in the specified collection.
     *
     * @param  c collection to be checked for containment in this collection
     * @return <tt>true</tt> if this collection contains all of the elements
     *         in the specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         collection (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this collection
     * (optional operation).  The behavior of this operation is undefined if
     * the specified collection is modified while the operation is in progress.
     * (This implies that the behavior of this call is undefined if the
     * specified collection is this collection, and this collection is
     * nonempty.)
     *
     * @param c collection containing elements to be added to this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this collection
     * @throws NullPointerException if the specified collection contains a
     *         null element and this collection does not permit null elements,
     *         or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this
     *         collection
     * @throws IllegalStateException if not all the elements can be added at
     *         this time due to insertion restrictions
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Removes all of this collection's elements that are also contained in the
     * specified collection (optional operation).  After this call returns,
     * this collection will contain no elements in common with the specified
     * collection.
     *
     * @param c collection containing elements to be removed from this collection
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> method
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not support
     *         null elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this collection that are contained in the
     * specified collection (optional operation).  In other words, removes from
     * this collection all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this collection (optional operation).
     * The collection will be empty after this method returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this collection
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this collection for equality. <p>
     *
     * While the <tt>Collection</tt> interface adds no stipulations to the
     * general contract for the <tt>Object.equals</tt>, programmers who
     * implement the <tt>Collection</tt> interface "directly" (in other words,
     * create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt>
     * or a <tt>List</tt>) must exercise care if they choose to override the
     * <tt>Object.equals</tt>.  It is not necessary to do so, and the simplest
     * course of action is to rely on <tt>Object</tt>'s implementation, but
     * the implementor may wish to implement a "value comparison" in place of
     * the default "reference comparison."  (The <tt>List</tt> and
     * <tt>Set</tt> interfaces mandate such value comparisons.)<p>
     *
     * The general contract for the <tt>Object.equals</tt> method states that
     * equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and
     * only if <tt>b.equals(a)</tt>).  The contracts for <tt>List.equals</tt>
     * and <tt>Set.equals</tt> state that lists are only equal to other lists,
     * and sets to other sets.  Thus, a custom <tt>equals</tt> method for a
     * collection class that implements neither the <tt>List</tt> nor
     * <tt>Set</tt> interface must return <tt>false</tt> when this collection
     * is compared to any list or set.  (By the same logic, it is not possible
     * to write a class that correctly implements both the <tt>Set</tt> and
     * <tt>List</tt> interfaces.)
     *
     * @param o object to be compared for equality with this collection
     * @return <tt>true</tt> if the specified object is equal to this
     * collection
     *
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     * @see List#equals(Object)
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this collection.  While the
     * <tt>Collection</tt> interface adds no stipulations to the general
     * contract for the <tt>Object.hashCode</tt> method, programmers should
     * take note that any class that overrides the <tt>Object.equals</tt>
     * method must also override the <tt>Object.hashCode</tt> method in order
     * to satisfy the general contract for the <tt>Object.hashCode</tt>method.
     * In particular, <tt>c1.equals(c2)</tt> implies that
     * <tt>c1.hashCode()==c2.hashCode()</tt>.
     *
     * @return the hash code value for this collection
     *
     * @see Object#hashCode()
     * @see Object#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This exception may be thrown by methods that have detected concurrent
 * modification of an object when such modification is not permissible.
 * <p>
 * For example, it is not generally permissible for one thread to modify a Collection
 * while another thread is iterating over it.  In general, the results of the
 * iteration are undefined under these circumstances.  Some Iterator
 * implementations (including those of all the general purpose collection implementations
 * provided by the JRE) may choose to throw this exception if this behavior is
 * detected.  Iterators that do this are known as <i>fail-fast</i> iterators,
 * as they fail quickly and cleanly, rather that risking arbitrary,
 * non-deterministic behavior at an undetermined time in the future.
 * <p>
 * Note that this exception does not always indicate that an object has
 * been concurrently modified by a <i>different</i> thread.  If a single
 * thread issues a sequence of method invocations that violates the
 * contract of an object, the object may throw this exception.  For
 * example, if a thread modifies a collection directly while it is
 * iterating over the collection with a fail-fast iterator, the iterator
 * will throw this exception.
 *
 * <p>Note that fail-fast behavior cannot be guaranteed as it is, generally
 * speaking, impossible to make any hard guarantees in the presence of
 * unsynchronized concurrent modification.  Fail-fast operations
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i><tt>ConcurrentModificationException</tt>
 * should be used only to detect bugs.</i>
 *
 * @author  Josh Bloch
 * @see     Collection
 * @see     Iterator
 * @see     ListIterator
 * @see     Vector
 * @see     LinkedList
 * @see     HashSet
 * @see     Hashtable
 * @see     TreeMap
 * @see     AbstractList
 * @since   1.2
 */
public class ConcurrentModificationException extends RuntimeException {
    /**
     * Constructs a ConcurrentModificationException with no
     * detail message.
     */
    public ConcurrentModificationException() {
    }

    /**
     * Constructs a <tt>ConcurrentModificationException</tt> with the
     * specified detail message.
     *
     * @param message the detail message pertaining to this exception.
     */
    public ConcurrentModificationException(String message) {
        super(message);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea and Josh Bloch with assistance from members of
 * JCP JSR-166 Expert Group and released to the public domain, as explained
 * at http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A linear collection that supports element insertion and removal at
 * both ends.  The name <i>deque</i> is short for "double ended queue"
 * and is usually pronounced "deck".  Most <tt>Deque</tt>
 * implementations place no fixed limits on the number of elements
 * they may contain, but this interface supports capacity-restricted
 * deques as well as those with no fixed size limit.
 *
 * <p>This interface defines methods to access the elements at both
 * ends of the deque.  Methods are provided to insert, remove, and
 * examine the element.  Each of these methods exists in two forms:
 * one throws an exception if the operation fails, the other returns a
 * special value (either <tt>null</tt> or <tt>false</tt>, depending on
 * the operation).  The latter form of the insert operation is
 * designed specifically for use with capacity-restricted
 * <tt>Deque</tt> implementations; in most implementations, insert
 * operations cannot fail.
 *
 * <p>The twelve methods described above are summarized in the
 * following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>First Element (Head)</b></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>Last Element (Tail)</b></td>
 *  </tr>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *    <td>{@link #offerFirst offerFirst(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *    <td>{@link #removeLast removeLast()}</td>
 *    <td>{@link #pollLast pollLast()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #getFirst getFirst()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *    <td>{@link #getLast getLast()}</td>
 *    <td>{@link #peekLast peekLast()}</td>
 *  </tr>
 * </table>
 *
 * <p>This interface extends the {@link Queue} interface.  When a deque is
 * used as a queue, FIFO (First-In-First-Out) behavior results.  Elements are
 * added at the end of the deque and removed from the beginning.  The methods
 * inherited from the <tt>Queue</tt> interface are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b><tt>Queue</tt> Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#add add(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#offer offer(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#remove remove()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#poll poll()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#element element()}</td>
 *    <td>{@link #getFirst getFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#peek peek()}</td>
 *    <td>{@link #peek peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Deques can also be used as LIFO (Last-In-First-Out) stacks.  This
 * interface should be used in preference to the legacy {@link Stack} class.
 * When a deque is used as a stack, elements are pushed and popped from the
 * beginning of the deque.  Stack methods are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the table below:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b>Stack Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link #push push(e)}</td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #pop pop()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #peek peek()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Note that the {@link #peek peek} method works equally well when
 * a deque is used as a queue or a stack; in either case, elements are
 * drawn from the beginning of the deque.
 *
 * <p>This interface provides two methods to remove interior
 * elements, {@link #removeFirstOccurrence removeFirstOccurrence} and
 * {@link #removeLastOccurrence removeLastOccurrence}.
 *
 * <p>Unlike the {@link List} interface, this interface does not
 * provide support for indexed access to elements.
 *
 * <p>While <tt>Deque</tt> implementations are not strictly required
 * to prohibit the insertion of null elements, they are strongly
 * encouraged to do so.  Users of any <tt>Deque</tt> implementations
 * that do allow null elements are strongly encouraged <i>not</i> to
 * take advantage of the ability to insert nulls.  This is so because
 * <tt>null</tt> is used as a special return value by various methods
 * to indicated that the deque is empty.
 *
 * <p><tt>Deque</tt> implementations generally do not define
 * element-based versions of the <tt>equals</tt> and <tt>hashCode</tt>
 * methods, but instead inherit the identity-based versions from class
 * <tt>Object</tt>.
 *
 * <p>This interface is a member of the <a
 * href="{@docRoot}/../technotes/guides/collections/index.html"> Java Collections
 * Framework</a>.
 *
 * @author Doug Lea
 * @author Josh Bloch
 * @since  1.6
 * @param <E> the type of elements held in this collection
 */

public interface Deque<E> extends Queue<E> {
    /**
     * Inserts the specified element at the front of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerFirst}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addFirst(E e);

    /**
     * Inserts the specified element at the end of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerLast}.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addLast(E e);

    /**
     * Inserts the specified element at the front of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addFirst} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerFirst(E e);

    /**
     * Inserts the specified element at the end of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addLast} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerLast(E e);

    /**
     * Retrieves and removes the first element of this deque.  This method
     * differs from {@link #pollFirst pollFirst} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeFirst();

    /**
     * Retrieves and removes the last element of this deque.  This method
     * differs from {@link #pollLast pollLast} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeLast();

    /**
     * Retrieves and removes the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollFirst();

    /**
     * Retrieves and removes the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollLast();

    /**
     * Retrieves, but does not remove, the first element of this deque.
     *
     * This method differs from {@link #peekFirst peekFirst} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque.
     * This method differs from {@link #peekLast peekLast} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getLast();

    /**
     * Retrieves, but does not remove, the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekLast();

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeFirstOccurrence(Object o);

    /**
     * Removes the last occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the last element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeLastOccurrence(Object o);

    // *** Queue methods ***

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     * When using a capacity-restricted deque, it is generally preferable to
     * use {@link #offer(Object) offer}.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean add(E e);

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and <tt>false</tt> if no space is currently
     * available.  When using a capacity-restricted deque, this method is
     * generally preferable to the {@link #add} method, which can fail to
     * insert an element only by throwing an exception.
     *
     * <p>This method is equivalent to {@link #offerLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque).
     * This method differs from {@link #poll poll} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque), or returns
     * <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #pollFirst()}.
     *
     * @return the first element of this deque, or <tt>null</tt> if
     *         this deque is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque).
     * This method differs from {@link #peek peek} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #getFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque), or
     * returns <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #peekFirst()}.
     *
     * @return the head of the queue represented by this deque, or
     *         <tt>null</tt> if this deque is empty
     */
    E peek();


    // *** Stack methods ***

    /**
     * Pushes an element onto the stack represented by this deque (in other
     * words, at the head of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void push(E e);

    /**
     * Pops an element from the stack represented by this deque.  In other
     * words, removes and returns the first element of this deque.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this deque (which is the top
     *         of the stack represented by this deque)
     * @throws NoSuchElementException if this deque is empty
     */
    E pop();


    // *** Collection methods ***

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * <p>This method is equivalent to {@link #removeFirstOccurrence}.
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean remove(Object o);

    /**
     * Returns <tt>true</tt> if this deque contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this deque contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this deque is to be tested
     * @return <tt>true</tt> if this deque contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns the number of elements in this deque.
     *
     * @return the number of elements in this deque
     */
    public int size();

    /**
     * Returns an iterator over the elements in this deque in proper sequence.
     * The elements will be returned in order from first (head) to last (tail).
     *
     * @return an iterator over the elements in this deque in proper sequence
     */
    Iterator<E> iterator();

    /**
     * Returns an iterator over the elements in this deque in reverse
     * sequential order.  The elements will be returned in order from
     * last (tail) to first (head).
     *
     * @return an iterator over the elements in this deque in reverse
     * sequence
     */
    Iterator<E> descendingIterator();

}


/*
 * Copyright 1994-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that a method has been passed an illegal or
 * inappropriate argument.
 *
 * @author  unascribed
 * @see     java.lang.Thread#setPriority(int)
 * @since   JDK1.0
 */
public
class IllegalArgumentException extends RuntimeException {
    /**
     * Constructs an <code>IllegalArgumentException</code> with no
     * detail message.
     */
    public IllegalArgumentException() {
        super();
    }

    /**
     * Constructs an <code>IllegalArgumentException</code> with the
     * specified detail message.
     *
     * @param   s   the detail message.
     */
    public IllegalArgumentException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalArgumentException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalArgumentException(Throwable cause) {
        super(cause);
    }

    private static final long serialVersionUID = -5365630128856068164L;
}


/*
 * Copyright 1996-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Signals that a method has been invoked at an illegal or
 * inappropriate time.  In other words, the Java environment or
 * Java application is not in an appropriate state for the requested
 * operation.
 *
 * @author  Jonni Kanerva
 * @since   JDK1.1
 */
public
class IllegalStateException extends RuntimeException {
    /**
     * Constructs an IllegalStateException with no detail message.
     * A detail message is a String that describes this particular exception.
     */
    public IllegalStateException() {
        super();
    }

    /**
     * Constructs an IllegalStateException with the specified detail
     * message.  A detail message is a String that describes this particular
     * exception.
     *
     * @param s the String that contains a detailed message
     */
    public IllegalStateException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalStateException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalStateException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1848914673093119416L;
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator over a collection.  {@code Iterator} takes the place of
 * {@link Enumeration} in the Java Collections Framework.  Iterators
 * differ from enumerations in two ways:
 *
 * <ul>
 *      <li> Iterators allow the caller to remove elements from the
 *           underlying collection during the iteration with well-defined
 *           semantics.
 *      <li> Method names have been improved.
 * </ul>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see ListIterator
 * @see Iterable
 * @since 1.2
 */
public interface Iterator<E> {
    /**
     * Returns {@code true} if the iteration has more elements.
     * (In other words, returns {@code true} if {@link #next} would
     * return an element rather than throwing an exception.)
     *
     * @return {@code true} if the iteration has more elements
     */
    boolean hasNext();

    /**
     * Returns the next element in the iteration.
     *
     * @return the next element in the iteration
     * @throws NoSuchElementException if the iteration has no more elements
     */
    E next();

    /**
     * Removes from the underlying collection the last element returned
     * by this iterator (optional operation).  This method can be called
     * only once per call to {@link #next}.  The behavior of an iterator
     * is unspecified if the underlying collection is modified while the
     * iteration is in progress in any way other than by calling this
     * method.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this iterator
     *
     * @throws IllegalStateException if the {@code next} method has not
     *         yet been called, or the {@code remove} method has already
     *         been called after the last call to the {@code next}
     *         method
     */
    void remove();
}


package javaUtilEx;

public class juLinkedListCreateContains {
	public static void main(String[] args) {
		Random.args = args;

		LinkedList<Content> l = createList(Random.random());
		Content c = new Content(Random.random());
		if (Random.random() < 42) {
			c = l.get(Random.random());
		}
		l.contains(c);
	}

	public static LinkedList<Content> createList(int n) {
		LinkedList<Content> l = new LinkedList<Content>();
		while (n > 0) {
			l.addLast(new Content(Random.random()));
			n--;
		}
		return l;
	}
}

final class Content {
	int val;

	public Content(int v) {
		this.val = v;
	}

	public int hashCode() {
		return val^31;
	}

	public boolean equals(Object o) {
		if (o instanceof Content) {
			return this.val == ((Content) o).val;
		}
		return false;
	}
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Linked list implementation of the <tt>List</tt> interface.  Implements all
 * optional list operations, and permits all elements (including
 * <tt>null</tt>).  In addition to implementing the <tt>List</tt> interface,
 * the <tt>LinkedList</tt> class provides uniformly named methods to
 * <tt>get</tt>, <tt>remove</tt> and <tt>insert</tt> an element at the
 * beginning and end of the list.  These operations allow linked lists to be
 * used as a stack, {@linkplain Queue queue}, or {@linkplain Deque
 * double-ended queue}. <p>
 *
 * The class implements the <tt>Deque</tt> interface, providing
 * first-in-first-out queue operations for <tt>add</tt>,
 * <tt>poll</tt>, along with other stack and deque operations.<p>
 *
 * All of the operations perform as could be expected for a doubly-linked
 * list.  Operations that index into the list will traverse the list from
 * the beginning or the end, whichever is closer to the specified index.<p>
 *
 * <p><strong>Note that this implementation is not synchronized.</strong>
 * If multiple threads access a linked list concurrently, and at least
 * one of the threads modifies the list structurally, it <i>must</i> be
 * synchronized externally.  (A structural modification is any operation
 * that adds or deletes one or more elements; merely setting the value of
 * an element is not a structural modification.)  This is typically
 * accomplished by synchronizing on some object that naturally
 * encapsulates the list.
 *
 * If no such object exists, the list should be "wrapped" using the
 * {@link Collections#synchronizedList Collections.synchronizedList}
 * method.  This is best done at creation time, to prevent accidental
 * unsynchronized access to the list:<pre>
 *   List list = Collections.synchronizedList(new LinkedList(...));</pre>
 *
 * <p>The iterators returned by this class's <tt>iterator</tt> and
 * <tt>listIterator</tt> methods are <i>fail-fast</i>: if the list is
 * structurally modified at any time after the iterator is created, in
 * any way except through the Iterator's own <tt>remove</tt> or
 * <tt>add</tt> methods, the iterator will throw a {@link
 * ConcurrentModificationException}.  Thus, in the face of concurrent
 * modification, the iterator fails quickly and cleanly, rather than
 * risking arbitrary, non-deterministic behavior at an undetermined
 * time in the future.
 *
 * <p>Note that the fail-fast behavior of an iterator cannot be guaranteed
 * as it is, generally speaking, impossible to make any hard guarantees in the
 * presence of unsynchronized concurrent modification.  Fail-fast iterators
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness:   <i>the fail-fast behavior of iterators
 * should be used only to detect bugs.</i>
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see     List
 * @see     ArrayList
 * @see     Vector
 * @since 1.2
 * @param <E> the type of elements held in this collection
 */

public class LinkedList<E>
    extends AbstractSequentialList<E>
    implements List<E>, Deque<E>
{
    private transient Entry<E> header = new Entry<E>(null, null, null);
    private transient int size = 0;

    /**
     * Constructs an empty list.
     */
    public LinkedList() {
        header.next = header.previous = header;
    }

    /**
     * Constructs a list containing the elements of the specified
     * collection, in the order they are returned by the collection's
     * iterator.
     *
     * @param  c the collection whose elements are to be placed into this list
     * @throws NullPointerException if the specified collection is null
     */
    public LinkedList(Collection<? extends E> c) {
        this();
        addAll(c);
    }

    /**
     * Returns the first element in this list.
     *
     * @return the first element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getFirst() {
        if (size==0)
            throw new NoSuchElementException();

        return header.next.element;
    }

    /**
     * Returns the last element in this list.
     *
     * @return the last element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getLast()  {
        if (size==0)
            throw new NoSuchElementException();

        return header.previous.element;
    }

    /**
     * Removes and returns the first element from this list.
     *
     * @return the first element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeFirst() {
        return remove(header.next);
    }

    /**
     * Removes and returns the last element from this list.
     *
     * @return the last element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeLast() {
        return remove(header.previous);
    }

    /**
     * Inserts the specified element at the beginning of this list.
     *
     * @param e the element to add
     */
    public void addFirst(E e) {
        addBefore(e, header.next);
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     */
    public void addLast(E e) {
        addBefore(e, header);
    }

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     */
    public boolean contains(Object o) {
        return indexOf(o) != -1;
    }

    /**
     * Returns the number of elements in this list.
     *
     * @return the number of elements in this list
     */
    public int size() {
        return size;
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     */
    public boolean add(E e) {
        addBefore(e, header);
        return true;
    }

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present.  If this list does not contain the element, it is
     * unchanged.  More formally, removes the element with the lowest index
     * <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list
     * changed as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     */
    public boolean remove(Object o) {
        if (o==null) {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }
    /**
     * Removes all of the elements from this list.
     */
    public void clear() {
        Entry<E> e = header.next;
        while (e != header) {
            Entry<E> next = e.next;
            e.next = e.previous = null;
            e.element = null;
            e = next;
        }
        header.next = header.previous = header;
        size = 0;
        modCount++;
    }


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        return entry(index).element;
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element.
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E set(int index, E element) {
        Entry<E> e = entry(index);
        E oldVal = e.element;
        e.element = element;
        return oldVal;
    }

    /**
     * Inserts the specified element at the specified position in this list.
     * Shifts the element currently at that position (if any) and any
     * subsequent elements to the right (adds one to their indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public void add(int index, E element) {
        addBefore(element, (index==size ? header : entry(index)));
    }

    /**
     * Removes the element at the specified position in this list.  Shifts any
     * subsequent elements to the left (subtracts one from their indices).
     * Returns the element that was removed from the list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E remove(int index) {
        return remove(entry(index));
    }

    /**
     * Returns the indexed entry.
     */
    private Entry<E> entry(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException();
        Entry<E> e = header;
        if (index < (size >> 1)) {
            for (int i = 0; i <= index; i++)
                e = e.next;
        } else {
            for (int i = size; i > index; i--)
                e = e.previous;
        }
        return e;
    }


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int indexOf(Object o) {
        int index = 0;
        if (o==null) {
            for (Entry e = header.next; e != header; e = e.next) {
                if (e.element==null)
                    return index;
                index++;
            }
        } else {
            for (Entry e = header.next; e != header; e = e.next) {
                if (o.equals(e.element))
                    return index;
                index++;
            }
        }
        return -1;
    }

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int lastIndexOf(Object o) {
        int index = size;
        if (o==null) {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (e.element==null)
                    return index;
            }
        } else {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (o.equals(e.element))
                    return index;
            }
        }
        return -1;
    }

    // Queue operations.

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E peek() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E element() {
        return getFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E poll() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list.
     *
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E remove() {
        return removeFirst();
    }

    /**
     * Adds the specified element as the tail (last element) of this list.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Queue#offer})
     * @since 1.5
     */
    public boolean offer(E e) {
        return add(e);
    }

    // Deque operations
    /**
     * Inserts the specified element at the front of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerFirst})
     * @since 1.6
     */
    public boolean offerFirst(E e) {
        addFirst(e);
        return true;
    }

    /**
     * Inserts the specified element at the end of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerLast})
     * @since 1.6
     */
    public boolean offerLast(E e) {
        addLast(e);
        return true;
    }

    /**
     * Retrieves, but does not remove, the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekFirst() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekLast() {
        if (size==0)
            return null;
        return getLast();
    }

    /**
     * Retrieves and removes the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollFirst() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollLast() {
        if (size==0)
            return null;
        return removeLast();
    }

    /**
     * Pushes an element onto the stack represented by this list.  In other
     * words, inserts the element at the front of this list.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @since 1.6
     */
    public void push(E e) {
        addFirst(e);
    }

    /**
     * Pops an element from the stack represented by this list.  In other
     * words, removes and returns the first element of this list.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this list (which is the top
     *         of the stack represented by this list)
     * @throws NoSuchElementException if this list is empty
     * @since 1.6
     */
    public E pop() {
        return removeFirst();
    }

    /**
     * Removes the first occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeFirstOccurrence(Object o) {
        return remove(o);
    }

    /**
     * Removes the last occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeLastOccurrence(Object o) {
        if (o==null) {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * Returns a list-iterator of the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * Obeys the general contract of <tt>List.listIterator(int)</tt>.<p>
     *
     * The list-iterator is <i>fail-fast</i>: if the list is structurally
     * modified at any time after the Iterator is created, in any way except
     * through the list-iterator's own <tt>remove</tt> or <tt>add</tt>
     * methods, the list-iterator will throw a
     * <tt>ConcurrentModificationException</tt>.  Thus, in the face of
     * concurrent modification, the iterator fails quickly and cleanly, rather
     * than risking arbitrary, non-deterministic behavior at an undetermined
     * time in the future.
     *
     * @param index index of the first element to be returned from the
     *              list-iterator (by a call to <tt>next</tt>)
     * @return a ListIterator of the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     * @see List#listIterator(int)
     */
    public ListIterator<E> listIterator(int index) {
        return new ListItr(index);
    }

    private class ListItr implements ListIterator<E> {
        private Entry<E> lastReturned = header;
        private Entry<E> next;
        private int nextIndex;
        private int expectedModCount = modCount;

        ListItr(int index) {
            if (index < 0 || index > size)
                throw new IndexOutOfBoundsException();
            if (index < (size >> 1)) {
                next = header.next;
                for (nextIndex=0; nextIndex<index; nextIndex++)
                    next = next.next;
            } else {
                next = header;
                for (nextIndex=size; nextIndex>index; nextIndex--)
                    next = next.previous;
            }
        }

        public boolean hasNext() {
            return nextIndex != size;
        }

        public E next() {
            checkForComodification();
            if (nextIndex == size)
                throw new NoSuchElementException();

            lastReturned = next;
            next = next.next;
            nextIndex++;
            return lastReturned.element;
        }

        public boolean hasPrevious() {
            return nextIndex != 0;
        }

        public E previous() {
            if (nextIndex == 0)
                throw new NoSuchElementException();

            lastReturned = next = next.previous;
            nextIndex--;
            checkForComodification();
            return lastReturned.element;
        }

        public int nextIndex() {
            return nextIndex;
        }

        public int previousIndex() {
            return nextIndex-1;
        }

        public void remove() {
            checkForComodification();
            Entry<E> lastNext = lastReturned.next;
            try {
                LinkedList.this.remove(lastReturned);
            } catch (NoSuchElementException e) {
                throw new IllegalStateException();
            }
            if (next==lastReturned)
                next = lastNext;
            else
                nextIndex--;
            lastReturned = header;
            expectedModCount++;
        }

        public void set(E e) {
            if (lastReturned == header)
                throw new IllegalStateException();
            checkForComodification();
            lastReturned.element = e;
        }

        public void add(E e) {
            checkForComodification();
            lastReturned = header;
            addBefore(e, next);
            nextIndex++;
            expectedModCount++;
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private static class Entry<E> {
        E element;
        Entry<E> next;
        Entry<E> previous;

        Entry(E element, Entry<E> next, Entry<E> previous) {
            this.element = element;
            this.next = next;
            this.previous = previous;
        }
    }

    private Entry<E> addBefore(E e, Entry<E> entry) {
        Entry<E> newEntry = new Entry<E>(e, entry, entry.previous);
        newEntry.previous.next = newEntry;
        newEntry.next.previous = newEntry;
        size++;
        modCount++;
        return newEntry;
    }

    private E remove(Entry<E> e) {
        if (e == header)
            throw new NoSuchElementException();

        E result = e.element;
        e.previous.next = e.next;
        e.next.previous = e.previous;
        e.next = e.previous = null;
        e.element = null;
        size--;
        modCount++;
        return result;
    }

    /**
     * @since 1.6
     */
    public Iterator<E> descendingIterator() {
        return new DescendingIterator();
    }

    /** Adapter to provide descending iterators via ListItr.previous */
    private class DescendingIterator implements Iterator {
        final ListItr itr = new ListItr(size());
        public boolean hasNext() {
            return itr.hasPrevious();
        }
        public E next() {
            return itr.previous();
        }
        public void remove() {
            itr.remove();
        }
    }

    /**
     * Returns an array containing all of the elements in this list
     * in proper sequence (from first to last element).
     *
     * <p>The returned array will be "safe" in that no references to it are
     * maintained by this list.  (In other words, this method must allocate
     * a new array).  The caller is thus free to modify the returned array.
     *
     * <p>This method acts as bridge between array-based and collection-based
     * APIs.
     *
     * @return an array containing all of the elements in this list
     *         in proper sequence
     */
    public Object[] toArray() {
        Object[] result = new Object[size];
        int i = 0;
        for (Entry<E> e = header.next; e != header; e = e.next)
            result[i++] = e.element;
        return result;
    }

    private static final long serialVersionUID = 876323262645176354L;
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator for lists that allows the programmer
 * to traverse the list in either direction, modify
 * the list during iteration, and obtain the iterator's
 * current position in the list. A {@code ListIterator}
 * has no current element; its <I>cursor position</I> always
 * lies between the element that would be returned by a call
 * to {@code previous()} and the element that would be
 * returned by a call to {@code next()}.
 * An iterator for a list of length {@code n} has {@code n+1} possible
 * cursor positions, as illustrated by the carets ({@code ^}) below:
 * <PRE>
 *                      Element(0)   Element(1)   Element(2)   ... Element(n-1)
 * cursor positions:  ^            ^            ^            ^                  ^
 * </PRE>
 * Note that the {@link #remove} and {@link #set(Object)} methods are
 * <i>not</i> defined in terms of the cursor position;  they are defined to
 * operate on the last element returned by a call to {@link #next} or
 * {@link #previous()}.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see List
 * @see Iterator
 * @see Enumeration
 * @see List#listIterator()
 * @since   1.2
 */
public interface ListIterator<E> extends Iterator<E> {
    // Query Operations

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the forward direction. (In other words,
     * returns {@code true} if {@link #next} would return an element rather
     * than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the forward direction
     */
    boolean hasNext();

    /**
     * Returns the next element in the list and advances the cursor position.
     * This method may be called repeatedly to iterate through the list,
     * or intermixed with calls to {@link #previous} to go back and forth.
     * (Note that alternating calls to {@code next} and {@code previous}
     * will return the same element repeatedly.)
     *
     * @return the next element in the list
     * @throws NoSuchElementException if the iteration has no next element
     */
    E next();

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the reverse direction.  (In other words,
     * returns {@code true} if {@link #previous} would return an element
     * rather than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the reverse direction
     */
    boolean hasPrevious();

    /**
     * Returns the previous element in the list and moves the cursor
     * position backwards.  This method may be called repeatedly to
     * iterate through the list backwards, or intermixed with calls to
     * {@link #next} to go back and forth.  (Note that alternating calls
     * to {@code next} and {@code previous} will return the same
     * element repeatedly.)
     *
     * @return the previous element in the list
     * @throws NoSuchElementException if the iteration has no previous
     *         element
     */
    E previous();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #next}. (Returns list size if the list
     * iterator is at the end of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code next}, or list size if the list
     *         iterator is at the end of the list
     */
    int nextIndex();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #previous}. (Returns -1 if the list
     * iterator is at the beginning of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code previous}, or -1 if the list
     *         iterator is at the beginning of the list
     */
    int previousIndex();


    // Modification Operations

    /**
     * Removes from the list the last element that was returned by {@link
     * #next} or {@link #previous} (optional operation).  This call can
     * only be made once per call to {@code next} or {@code previous}.
     * It can be made only if {@link #add} has not been
     * called after the last call to {@code next} or {@code previous}.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this list iterator
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void remove();

    /**
     * Replaces the last element returned by {@link #next} or
     * {@link #previous} with the specified element (optional operation).
     * This call can be made only if neither {@link #remove} nor {@link
     * #add} have been called after the last call to {@code next} or
     * {@code previous}.
     *
     * @param e the element with which to replace the last element returned by
     *          {@code next} or {@code previous}
     * @throws UnsupportedOperationException if the {@code set} operation
     *         is not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of the specified
     *         element prevents it from being added to this list
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void set(E e);

    /**
     * Inserts the specified element into the list (optional operation).
     * The element is inserted immediately before the next element that
     * would be returned by {@link #next}, if any, and after the next
     * element that would be returned by {@link #previous}, if any.  (If the
     * list contains no elements, the new element becomes the sole element
     * on the list.)  The new element is inserted before the implicit
     * cursor: a subsequent call to {@code next} would be unaffected, and a
     * subsequent call to {@code previous} would return the new element.
     * (This call increases by one the value that would be returned by a
     * call to {@code nextIndex} or {@code previousIndex}.)
     *
     * @param e the element to insert
     * @throws UnsupportedOperationException if the {@code add} method is
     *         not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of this element
     *         prevents it from being added to this list
     */
    void add(E e);
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An ordered collection (also known as a <i>sequence</i>).  The user of this
 * interface has precise control over where in the list each element is
 * inserted.  The user can access elements by their integer index (position in
 * the list), and search for elements in the list.<p>
 *
 * Unlike sets, lists typically allow duplicate elements.  More formally,
 * lists typically allow pairs of elements <tt>e1</tt> and <tt>e2</tt>
 * such that <tt>e1.equals(e2)</tt>, and they typically allow multiple
 * null elements if they allow null elements at all.  It is not inconceivable
 * that someone might wish to implement a list that prohibits duplicates, by
 * throwing runtime exceptions when the user attempts to insert them, but we
 * expect this usage to be rare.<p>
 *
 * The <tt>List</tt> interface places additional stipulations, beyond those
 * specified in the <tt>Collection</tt> interface, on the contracts of the
 * <tt>iterator</tt>, <tt>add</tt>, <tt>remove</tt>, <tt>equals</tt>, and
 * <tt>hashCode</tt> methods.  Declarations for other inherited methods are
 * also included here for convenience.<p>
 *
 * The <tt>List</tt> interface provides four methods for positional (indexed)
 * access to list elements.  Lists (like Java arrays) are zero based.  Note
 * that these operations may execute in time proportional to the index value
 * for some implementations (the <tt>LinkedList</tt> class, for
 * example). Thus, iterating over the elements in a list is typically
 * preferable to indexing through it if the caller does not know the
 * implementation.<p>
 *
 * The <tt>List</tt> interface provides a special iterator, called a
 * <tt>ListIterator</tt>, that allows element insertion and replacement, and
 * bidirectional access in addition to the normal operations that the
 * <tt>Iterator</tt> interface provides.  A method is provided to obtain a
 * list iterator that starts at a specified position in the list.<p>
 *
 * The <tt>List</tt> interface provides two methods to search for a specified
 * object.  From a performance standpoint, these methods should be used with
 * caution.  In many implementations they will perform costly linear
 * searches.<p>
 *
 * The <tt>List</tt> interface provides two methods to efficiently insert and
 * remove multiple elements at an arbitrary point in the list.<p>
 *
 * Note: While it is permissible for lists to contain themselves as elements,
 * extreme caution is advised: the <tt>equals</tt> and <tt>hashCode</tt>
 * methods are no longer well defined on such a list.
 *
 * <p>Some list implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the list may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see Set
 * @see ArrayList
 * @see LinkedList
 * @see Vector
 * @see Arrays#asList(Object[])
 * @see Collections#nCopies(int, Object)
 * @see Collections#EMPTY_LIST
 * @see AbstractList
 * @see AbstractSequentialList
 * @since 1.2
 */

public interface List<E> extends Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this list.  If this list contains
     * more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this list
     */
    int size();

    /**
     * Returns <tt>true</tt> if this list contains no elements.
     *
     * @return <tt>true</tt> if this list contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    boolean add(E e);

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present (optional operation).  If this list does not contain
     * the element, it is unchanged.  More formally, removes the element with
     * the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list changed
     * as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     */
    boolean remove(Object o);


    // Bulk Modification Operations

    /**
     * Returns <tt>true</tt> if this list contains all of the elements of the
     * specified collection.
     *
     * @param  c collection to be checked for containment in this list
     * @return <tt>true</tt> if this list contains all of the elements of the
     *         specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         list (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Appends all of the elements in the specified collection to the end of
     * this list, in the order that they are returned by the specified
     * collection's iterator (optional operation).  The behavior of this
     * operation is undefined if the specified collection is modified while
     * the operation is in progress.  (Note that this will occur if the
     * specified collection is this list, and it's nonempty.)
     *
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * @param index index at which to insert the first element from the
     *              specified collection
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    boolean addAll(int index, Collection<? extends E> c);

    /**
     * Removes from this list all of its elements that are contained in the
     * specified collection (optional operation).
     *
     * @param c collection containing elements to be removed from this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this list that are contained in the
     * specified collection (optional operation).  In other words, removes
     * from this list all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this list
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * <tt>true</tt> if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements <tt>e1</tt> and
     * <tt>e2</tt> are <i>equal</i> if <tt>(e1==null ? e2==null :
     * e1.equals(e2))</tt>.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.  This
     * definition ensures that the equals method works properly across
     * different implementations of the <tt>List</tt> interface.
     *
     * @param o the object to be compared for equality with this list
     * @return <tt>true</tt> if the specified object is equal to this list
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this list.  The hash code of a list
     * is defined to be the result of the following calculation:
     * <pre>
     *  int hashCode = 1;
     *  for (E e : list)
     *      hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
     * </pre>
     * This ensures that <tt>list1.equals(list2)</tt> implies that
     * <tt>list1.hashCode()==list2.hashCode()</tt> for any two lists,
     * <tt>list1</tt> and <tt>list2</tt>, as required by the general
     * contract of {@link Object#hashCode}.
     *
     * @return the hash code value for this list
     * @see Object#equals(Object)
     * @see #equals(Object)
     */
    int hashCode();


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E get(int index);

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>set</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E set(int index, E element);

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    void add(int index, E element);

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E remove(int index);


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int indexOf(Object o);

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int lastIndexOf(Object o);


    // List Iterators

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     */
    ListIterator<E> listIterator();

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * The specified index indicates the first element that would be
     * returned by an initial call to {@link ListIterator#next next}.
     * An initial call to {@link ListIterator#previous previous} would
     * return the element with the specified index minus one.
     *
     * @param index index of the first element to be returned from the
     *        list iterator (by a call to {@link ListIterator#next next})
     * @return a list iterator over the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         ({@code index < 0 || index > size()})
     */
    ListIterator<E> listIterator(int index);

    // View

    /**
     * Returns a view of the portion of this list between the specified
     * <tt>fromIndex</tt>, inclusive, and <tt>toIndex</tt>, exclusive.  (If
     * <tt>fromIndex</tt> and <tt>toIndex</tt> are equal, the returned list is
     * empty.)  The returned list is backed by this list, so non-structural
     * changes in the returned list are reflected in this list, and vice-versa.
     * The returned list supports all of the optional list operations supported
     * by this list.<p>
     *
     * This method eliminates the need for explicit range operations (of
     * the sort that commonly exist for arrays).  Any operation that expects
     * a list can be used as a range operation by passing a subList view
     * instead of a whole list.  For example, the following idiom
     * removes a range of elements from a list:
     * <pre>
     *      list.subList(from, to).clear();
     * </pre>
     * Similar idioms may be constructed for <tt>indexOf</tt> and
     * <tt>lastIndexOf</tt>, and all of the algorithms in the
     * <tt>Collections</tt> class can be applied to a subList.<p>
     *
     * The semantics of the list returned by this method become undefined if
     * the backing list (i.e., this list) is <i>structurally modified</i> in
     * any way other than via the returned list.  (Structural modifications are
     * those that change the size of this list, or otherwise perturb it in such
     * a fashion that iterations in progress may yield incorrect results.)
     *
     * @param fromIndex low endpoint (inclusive) of the subList
     * @param toIndex high endpoint (exclusive) of the subList
     * @return a view of the specified range within this list
     * @throws IndexOutOfBoundsException for an illegal endpoint index value
     *         (<tt>fromIndex &lt; 0 || toIndex &gt; size ||
     *         fromIndex &gt; toIndex</tt>)
     */
    List<E> subList(int fromIndex, int toIndex);
}


/*
 * Copyright 1994-1998 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown by the <code>nextElement</code> method of an
 * <code>Enumeration</code> to indicate that there are no more
 * elements in the enumeration.
 *
 * @author  unascribed
 * @see     java.util.Enumeration
 * @see     java.util.Enumeration#nextElement()
 * @since   JDK1.0
 */
public
class NoSuchElementException extends RuntimeException {
    /**
     * Constructs a <code>NoSuchElementException</code> with <tt>null</tt>
     * as its error message string.
     */
    public NoSuchElementException() {
        super();
    }

    /**
     * Constructs a <code>NoSuchElementException</code>, saving a reference
     * to the error message string <tt>s</tt> for later retrieval by the
     * <tt>getMessage</tt> method.
     *
     * @param   s   the detail message.
     */
    public NoSuchElementException(String s) {
        super(s);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea with assistance from members of JCP JSR-166
 * Expert Group and released to the public domain, as explained at
 * http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A collection designed for holding elements prior to processing.
 * Besides basic {@link java.util.Collection Collection} operations,
 * queues provide additional insertion, extraction, and inspection
 * operations.  Each of these methods exists in two forms: one throws
 * an exception if the operation fails, the other returns a special
 * value (either <tt>null</tt> or <tt>false</tt>, depending on the
 * operation).  The latter form of the insert operation is designed
 * specifically for use with capacity-restricted <tt>Queue</tt>
 * implementations; in most implementations, insert operations cannot
 * fail.
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Returns special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #add add(e)}</td>
 *    <td>{@link #offer offer(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #remove remove()}</td>
 *    <td>{@link #poll poll()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #element element()}</td>
 *    <td>{@link #peek peek()}</td>
 *  </tr>
 * </table>
 *
 * <p>Queues typically, but do not necessarily, order elements in a
 * FIFO (first-in-first-out) manner.  Among the exceptions are
 * priority queues, which order elements according to a supplied
 * comparator, or the elements' natural ordering, and LIFO queues (or
 * stacks) which order the elements LIFO (last-in-first-out).
 * Whatever the ordering used, the <em>head</em> of the queue is that
 * element which would be removed by a call to {@link #remove() } or
 * {@link #poll()}.  In a FIFO queue, all new elements are inserted at
 * the <em> tail</em> of the queue. Other kinds of queues may use
 * different placement rules.  Every <tt>Queue</tt> implementation
 * must specify its ordering properties.
 *
 * <p>The {@link #offer offer} method inserts an element if possible,
 * otherwise returning <tt>false</tt>.  This differs from the {@link
 * java.util.Collection#add Collection.add} method, which can fail to
 * add an element only by throwing an unchecked exception.  The
 * <tt>offer</tt> method is designed for use when failure is a normal,
 * rather than exceptional occurrence, for example, in fixed-capacity
 * (or &quot;bounded&quot;) queues.
 *
 * <p>The {@link #remove()} and {@link #poll()} methods remove and
 * return the head of the queue.
 * Exactly which element is removed from the queue is a
 * function of the queue's ordering policy, which differs from
 * implementation to implementation. The <tt>remove()</tt> and
 * <tt>poll()</tt> methods differ only in their behavior when the
 * queue is empty: the <tt>remove()</tt> method throws an exception,
 * while the <tt>poll()</tt> method returns <tt>null</tt>.
 *
 * <p>The {@link #element()} and {@link #peek()} methods return, but do
 * not remove, the head of the queue.
 *
 * <p>The <tt>Queue</tt> interface does not define the <i>blocking queue
 * methods</i>, which are common in concurrent programming.  These methods,
 * which wait for elements to appear or for space to become available, are
 * defined in the {@link java.util.concurrent.BlockingQueue} interface, which
 * extends this interface.
 *
 * <p><tt>Queue</tt> implementations generally do not allow insertion
 * of <tt>null</tt> elements, although some implementations, such as
 * {@link LinkedList}, do not prohibit insertion of <tt>null</tt>.
 * Even in the implementations that permit it, <tt>null</tt> should
 * not be inserted into a <tt>Queue</tt>, as <tt>null</tt> is also
 * used as a special return value by the <tt>poll</tt> method to
 * indicate that the queue contains no elements.
 *
 * <p><tt>Queue</tt> implementations generally do not define
 * element-based versions of methods <tt>equals</tt> and
 * <tt>hashCode</tt> but instead inherit the identity based versions
 * from class <tt>Object</tt>, because element-based equality is not
 * always well-defined for queues with the same elements but different
 * ordering properties.
 *
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @see java.util.Collection
 * @see LinkedList
 * @see PriorityQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.BlockingQueue
 * @see java.util.concurrent.ArrayBlockingQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.PriorityBlockingQueue
 * @since 1.5
 * @author Doug Lea
 * @param <E> the type of elements held in this collection
 */
public interface Queue<E> extends Collection<E> {
    /**
     * Inserts the specified element into this queue if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt>
     * if no space is currently available.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean add(E e);

    /**
     * Inserts the specified element into this queue if it is possible to do
     * so immediately without violating capacity restrictions.
     * When using a capacity-restricted queue, this method is generally
     * preferable to {@link #add}, which can fail to insert an element only
     * by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this queue, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of this queue.  This method differs
     * from {@link #poll poll} only in that it throws an exception if this
     * queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of this queue.  This method
     * differs from {@link #peek peek} only in that it throws an exception
     * if this queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E peek();
}


/*
 * Copyright 2000-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Marker interface used by <tt>List</tt> implementations to indicate that
 * they support fast (generally constant time) random access.  The primary
 * purpose of this interface is to allow generic algorithms to alter their
 * behavior to provide good performance when applied to either random or
 * sequential access lists.
 *
 * <p>The best algorithms for manipulating random access lists (such as
 * <tt>ArrayList</tt>) can produce quadratic behavior when applied to
 * sequential access lists (such as <tt>LinkedList</tt>).  Generic list
 * algorithms are encouraged to check whether the given list is an
 * <tt>instanceof</tt> this interface before applying an algorithm that would
 * provide poor performance if it were applied to a sequential access list,
 * and to alter their behavior if necessary to guarantee acceptable
 * performance.
 *
 * <p>It is recognized that the distinction between random and sequential
 * access is often fuzzy.  For example, some <tt>List</tt> implementations
 * provide asymptotically linear access times if they get huge, but constant
 * access times in practice.  Such a <tt>List</tt> implementation
 * should generally implement this interface.  As a rule of thumb, a
 * <tt>List</tt> implementation should implement this interface if,
 * for typical instances of the class, this loop:
 * <pre>
 *     for (int i=0, n=list.size(); i &lt; n; i++)
 *         list.get(i);
 * </pre>
 * runs faster than this loop:
 * <pre>
 *     for (Iterator i=list.iterator(); i.hasNext(); )
 *         i.next();
 * </pre>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @since 1.4
 */
public interface RandomAccess {
}


package javaUtilEx;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that the requested operation is not supported.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @since   1.2
 */
public class UnsupportedOperationException extends RuntimeException {
    /**
     * Constructs an UnsupportedOperationException with no detail message.
     */
    public UnsupportedOperationException() {
    }

    /**
     * Constructs an UnsupportedOperationException with the specified
     * detail message.
     *
     * @param message the detail message
     */
    public UnsupportedOperationException(String message) {
        super(message);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public UnsupportedOperationException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public UnsupportedOperationException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1242599979055084673L;
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Collection</tt>
 * interface, to minimize the effort required to implement this interface. <p>
 *
 * To implement an unmodifiable collection, the programmer needs only to
 * extend this class and provide implementations for the <tt>iterator</tt> and
 * <tt>size</tt> methods.  (The iterator returned by the <tt>iterator</tt>
 * method must implement <tt>hasNext</tt> and <tt>next</tt>.)<p>
 *
 * To implement a modifiable collection, the programmer must additionally
 * override this class's <tt>add</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by the
 * <tt>iterator</tt> method must additionally implement its <tt>remove</tt>
 * method.<p>
 *
 * The programmer should generally provide a void (no argument) and
 * <tt>Collection</tt> constructor, as per the recommendation in the
 * <tt>Collection</tt> interface specification.<p>
 *
 * The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if
 * the collection being implemented admits a more efficient implementation.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractCollection<E> implements Collection<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractCollection() {
    }

    // Query Operations

    /**
     * Returns an iterator over the elements contained in this collection.
     *
     * @return an iterator over the elements contained in this collection
     */
    public abstract Iterator<E> iterator();

    public abstract int size();

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the elements in the collection,
     * checking each element in turn for equality with the specified element.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean contains(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return true;
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return true;
        }
        return false;
    }

    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     */
    public boolean add(E e) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the collection looking for the
     * specified element.  If it finds the element, it removes the element
     * from the collection using the iterator's remove method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's iterator method does not implement the <tt>remove</tt>
     * method and this collection contains the specified object.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public boolean remove(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext()) {
                if (e.next()==null) {
                    e.remove();
                    return true;
                }
            }
        } else {
            while (e.hasNext()) {
                if (o.equals(e.next())) {
                    e.remove();
                    return true;
                }
            }
        }
        return false;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection,
     * checking each element returned by the iterator in turn to see
     * if it's contained in this collection.  If all elements are so
     * contained <tt>true</tt> is returned, otherwise <tt>false</tt>.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @see #contains(Object)
     */
    public boolean containsAll(Collection<?> c) {
        Iterator<?> e = c.iterator();
        while (e.hasNext())
            if (!contains(e.next()))
                return false;
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection, and adds
     * each object returned by the iterator to this collection, in turn.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> unless <tt>add</tt> is
     * overridden (assuming the specified collection is non-empty).
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     *
     * @see #add(Object)
     */
    public boolean addAll(Collection<? extends E> c) {
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            if (add(e.next()))
                modified = true;
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's so contained, it's removed from
     * this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements in common with the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;
        Iterator<?> e = iterator();
        while (e.hasNext()) {
            if (c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's not so contained, it's removed
     * from this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements not present in the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean retainAll(Collection<?> c) {
        boolean modified = false;
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            if (!c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, removing each
     * element using the <tt>Iterator.remove</tt> operation.  Most
     * implementations will probably choose to override this method for
     * efficiency.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's <tt>iterator</tt> method does not implement the
     * <tt>remove</tt> method and this collection is non-empty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            e.next();
            e.remove();
        }
    }


    //  String conversion

    /**
     * Returns a string representation of this collection.  The string
     * representation consists of a list of the collection's elements in the
     * order they are returned by its iterator, enclosed in square brackets
     * (<tt>"[]"</tt>).  Adjacent elements are separated by the characters
     * <tt>", "</tt> (comma and space).  Elements are converted to strings as
     * by {@link String#valueOf(Object)}.
     *
     * @return a string representation of this collection
     */
    public String toString() {
        Iterator<E> i = iterator();
        if (! i.hasNext())
            return "[]";

        String sb = "";
        sb = sb + "[";
        for (;;) {
            E e = i.next();
            sb = sb + (e == this ? "(this Collection)" : e);
            if (! i.hasNext()) {
                sb = sb + "]";
		return sb;
            }
            sb = sb + ", ";
        }
    }

}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the {@link List}
 * interface to minimize the effort required to implement this interface
 * backed by a "random access" data store (such as an array).  For sequential
 * access data (such as a linked list), {@link AbstractSequentialList} should
 * be used in preference to this class.
 *
 * <p>To implement an unmodifiable list, the programmer needs only to extend
 * this class and provide implementations for the {@link #get(int)} and
 * {@link List#size() size()} methods.
 *
 * <p>To implement a modifiable list, the programmer must additionally
 * override the {@link #set(int, Object) set(int, E)} method (which otherwise
 * throws an {@code UnsupportedOperationException}).  If the list is
 * variable-size the programmer must additionally override the
 * {@link #add(int, Object) add(int, E)} and {@link #remove(int)} methods.
 *
 * <p>The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the {@link Collection} interface
 * specification.
 *
 * <p>Unlike the other abstract collection implementations, the programmer does
 * <i>not</i> have to provide an iterator implementation; the iterator and
 * list iterator are implemented by this class, on top of the "random access"
 * methods:
 * {@link #get(int)},
 * {@link #set(int, Object) set(int, E)},
 * {@link #add(int, Object) add(int, E)} and
 * {@link #remove(int)}.
 *
 * <p>The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if the
 * collection being implemented admits a more efficient implementation.
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @since 1.2
 */

public abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractList() {
    }

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * <p>This implementation calls {@code add(size(), e)}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @param e element to be appended to this list
     * @return {@code true} (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the {@code add} operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    public boolean add(E e) {
        add(size(), e);
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    abstract public E get(int index);

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        throw new UnsupportedOperationException();
    }


    // Search Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator (with
     * {@code listIterator()}).  Then, it iterates over the list until the
     * specified element is found or the end of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int indexOf(Object o) {
        ListIterator<E> e = listIterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return e.previousIndex();
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return e.previousIndex();
        }
        return -1;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator that points to the end
     * of the list (with {@code listIterator(size())}).  Then, it iterates
     * backwards over the list until the specified element is found, or the
     * beginning of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int lastIndexOf(Object o) {
        ListIterator<E> e = listIterator(size());
        if (o==null) {
            while (e.hasPrevious())
                if (e.previous()==null)
                    return e.nextIndex();
        } else {
            while (e.hasPrevious())
                if (o.equals(e.previous()))
                    return e.nextIndex();
        }
        return -1;
    }


    // Bulk Operations

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * <p>This implementation calls {@code removeRange(0, size())}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless {@code remove(int
     * index)} or {@code removeRange(int fromIndex, int toIndex)} is
     * overridden.
     *
     * @throws UnsupportedOperationException if the {@code clear} operation
     *         is not supported by this list
     */
    public void clear() {
        removeRange(0, size());
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation gets an iterator over the specified collection
     * and iterates over it, inserting the elements obtained from the
     * iterator into this list at the appropriate position, one at a time,
     * using {@code add(int, E)}.
     * Many implementations will override this method for efficiency.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            add(index++, e.next());
            modified = true;
        }
        return modified;
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * <p>This implementation returns a straightforward implementation of the
     * iterator interface, relying on the backing list's {@code size()},
     * {@code get(int)}, and {@code remove(int)} methods.
     *
     * <p>Note that the iterator returned by this method will throw an
     * {@link UnsupportedOperationException} in response to its
     * {@code remove} method unless the list's {@code remove(int)} method is
     * overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification
     * for the (protected) {@link #modCount} field.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    public Iterator<E> iterator() {
        return new Itr();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns {@code listIterator(0)}.
     *
     * @see #listIterator(int)
     */
    public ListIterator<E> listIterator() {
        return listIterator(0);
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a straightforward implementation of the
     * {@code ListIterator} interface that extends the implementation of the
     * {@code Iterator} interface returned by the {@code iterator()} method.
     * The {@code ListIterator} implementation relies on the backing list's
     * {@code get(int)}, {@code set(int, E)}, {@code add(int, E)}
     * and {@code remove(int)} methods.
     *
     * <p>Note that the list iterator returned by this implementation will
     * throw an {@link UnsupportedOperationException} in response to its
     * {@code remove}, {@code set} and {@code add} methods unless the
     * list's {@code remove(int)}, {@code set(int, E)}, and
     * {@code add(int, E)} methods are overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification for
     * the (protected) {@link #modCount} field.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public ListIterator<E> listIterator(final int index) {
        rangeCheckForAdd(index);

        return new ListItr(index);
    }

    private class Itr implements Iterator<E> {
        /**
         * Index of element to be returned by subsequent call to next.
         */
        int cursor = 0;

        /**
         * Index of element returned by most recent call to next or
         * previous.  Reset to -1 if this element is deleted by a call
         * to remove.
         */
        int lastRet = -1;

        /**
         * The modCount value that the iterator believes that the backing
         * List should have.  If this expectation is violated, the iterator
         * has detected concurrent modification.
         */
        int expectedModCount = modCount;

        public boolean hasNext() {
            return cursor != size();
        }

        public E next() {
            checkForComodification();
            try {
                int i = cursor;
                E next = get(i);
                lastRet = i;
                cursor = i + 1;
                return next;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public void remove() {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.remove(lastRet);
                if (lastRet < cursor)
                    cursor--;
                lastRet = -1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException e) {
                throw new ConcurrentModificationException();
            }
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private class ListItr extends Itr implements ListIterator<E> {
        ListItr(int index) {
            cursor = index;
        }

        public boolean hasPrevious() {
            return cursor != 0;
        }

        public E previous() {
            checkForComodification();
            try {
                int i = cursor - 1;
                E previous = get(i);
                lastRet = cursor = i;
                return previous;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public int nextIndex() {
            return cursor;
        }

        public int previousIndex() {
            return cursor-1;
        }

        public void set(E e) {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.set(lastRet, e);
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }

        public void add(E e) {
            checkForComodification();

            try {
                int i = cursor;
                AbstractList.this.add(i, e);
                lastRet = -1;
                cursor = i + 1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a list that subclasses
     * {@code AbstractList}.  The subclass stores, in private fields, the
     * offset of the subList within the backing list, the size of the subList
     * (which can change over its lifetime), and the expected
     * {@code modCount} value of the backing list.  There are two variants
     * of the subclass, one of which implements {@code RandomAccess}.
     * If this list implements {@code RandomAccess} the returned list will
     * be an instance of the subclass that implements {@code RandomAccess}.
     *
     * <p>The subclass's {@code set(int, E)}, {@code get(int)},
     * {@code add(int, E)}, {@code remove(int)}, {@code addAll(int,
     * Collection)} and {@code removeRange(int, int)} methods all
     * delegate to the corresponding methods on the backing abstract list,
     * after bounds-checking the index and adjusting for the offset.  The
     * {@code addAll(Collection c)} method merely returns {@code addAll(size,
     * c)}.
     *
     * <p>The {@code listIterator(int)} method returns a "wrapper object"
     * over a list iterator on the backing list, which is created with the
     * corresponding method on the backing list.  The {@code iterator} method
     * merely returns {@code listIterator()}, and the {@code size} method
     * merely returns the subclass's {@code size} field.
     *
     * <p>All methods first check to see if the actual {@code modCount} of
     * the backing list is equal to its expected value, and throw a
     * {@code ConcurrentModificationException} if it is not.
     *
     * @throws IndexOutOfBoundsException if an endpoint index value is out of range
     *         {@code (fromIndex < 0 || toIndex > size)}
     * @throws IllegalArgumentException if the endpoint indices are out of order
     *         {@code (fromIndex > toIndex)}
     */
    public List<E> subList(int fromIndex, int toIndex) {
        return (this instanceof RandomAccess ?
                new RandomAccessSubList<E>(this, fromIndex, toIndex) :
                new SubList<E>(this, fromIndex, toIndex));
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * {@code true} if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements {@code e1} and
     * {@code e2} are <i>equal</i> if {@code (e1==null ? e2==null :
     * e1.equals(e2))}.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.<p>
     *
     * This implementation first checks if the specified object is this
     * list. If so, it returns {@code true}; if not, it checks if the
     * specified object is a list. If not, it returns {@code false}; if so,
     * it iterates over both lists, comparing corresponding pairs of elements.
     * If any comparison returns {@code false}, this method returns
     * {@code false}.  If either iterator runs out of elements before the
     * other it returns {@code false} (as the lists are of unequal length);
     * otherwise it returns {@code true} when the iterations complete.
     *
     * @param o the object to be compared for equality with this list
     * @return {@code true} if the specified object is equal to this list
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;
        if (!(o instanceof List))
            return false;

        ListIterator<E> e1 = listIterator();
        ListIterator e2 = ((List) o).listIterator();
        while(e1.hasNext() && e2.hasNext()) {
            E o1 = e1.next();
            Object o2 = e2.next();
            if (!(o1==null ? o2==null : o1.equals(o2)))
                return false;
        }
        return !(e1.hasNext() || e2.hasNext());
    }

    /**
     * Returns the hash code value for this list.
     *
     * <p>This implementation uses exactly the code that is used to define the
     * list hash function in the documentation for the {@link List#hashCode}
     * method.
     *
     * @return the hash code value for this list
     */
    public int hashCode() {
        int hashCode = 1;
        Iterator<E> it = this.iterator();
        while (it.hasNext()) {
            E e = it.next();
            hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
        }
        return hashCode;
    }

    /**
     * Removes from this list all of the elements whose index is between
     * {@code fromIndex}, inclusive, and {@code toIndex}, exclusive.
     * Shifts any succeeding elements to the left (reduces their index).
     * This call shortens the list by {@code (toIndex - fromIndex)} elements.
     * (If {@code toIndex==fromIndex}, this operation has no effect.)
     *
     * <p>This method is called by the {@code clear} operation on this list
     * and its subLists.  Overriding this method to take advantage of
     * the internals of the list implementation can <i>substantially</i>
     * improve the performance of the {@code clear} operation on this list
     * and its subLists.
     *
     * <p>This implementation gets a list iterator positioned before
     * {@code fromIndex}, and repeatedly calls {@code ListIterator.next}
     * followed by {@code ListIterator.remove} until the entire range has
     * been removed.  <b>Note: if {@code ListIterator.remove} requires linear
     * time, this implementation requires quadratic time.</b>
     *
     * @param fromIndex index of first element to be removed
     * @param toIndex index after last element to be removed
     */
    protected void removeRange(int fromIndex, int toIndex) {
        ListIterator<E> it = listIterator(fromIndex);
        for (int i=0, n=toIndex-fromIndex; i<n; i++) {
            it.next();
            it.remove();
        }
    }

    /**
     * The number of times this list has been <i>structurally modified</i>.
     * Structural modifications are those that change the size of the
     * list, or otherwise perturb it in such a fashion that iterations in
     * progress may yield incorrect results.
     *
     * <p>This field is used by the iterator and list iterator implementation
     * returned by the {@code iterator} and {@code listIterator} methods.
     * If the value of this field changes unexpectedly, the iterator (or list
     * iterator) will throw a {@code ConcurrentModificationException} in
     * response to the {@code next}, {@code remove}, {@code previous},
     * {@code set} or {@code add} operations.  This provides
     * <i>fail-fast</i> behavior, rather than non-deterministic behavior in
     * the face of concurrent modification during iteration.
     *
     * <p><b>Use of this field by subclasses is optional.</b> If a subclass
     * wishes to provide fail-fast iterators (and list iterators), then it
     * merely has to increment this field in its {@code add(int, E)} and
     * {@code remove(int)} methods (and any other methods that it overrides
     * that result in structural modifications to the list).  A single call to
     * {@code add(int, E)} or {@code remove(int)} must add no more than
     * one to this field, or the iterators (and list iterators) will throw
     * bogus {@code ConcurrentModificationExceptions}.  If an implementation
     * does not wish to provide fail-fast iterators, this field may be
     * ignored.
     */
    protected transient int modCount = 0;

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size())
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }
}

class SubList<E> extends AbstractList<E> {
    private final AbstractList<E> l;
    private final int offset;
    private int size;

    SubList(AbstractList<E> list, int fromIndex, int toIndex) {
        if (fromIndex < 0)
            throw new IndexOutOfBoundsException();
        if (toIndex > list.size())
            throw new IndexOutOfBoundsException();
        if (fromIndex > toIndex)
            throw new IllegalArgumentException();
        l = list;
        offset = fromIndex;
        size = toIndex - fromIndex;
        this.modCount = l.modCount;
    }

    public E set(int index, E element) {
        rangeCheck(index);
        checkForComodification();
        return l.set(index+offset, element);
    }

    public E get(int index) {
        rangeCheck(index);
        checkForComodification();
        return l.get(index+offset);
    }

    public int size() {
        checkForComodification();
        return size;
    }

    public void add(int index, E element) {
        rangeCheckForAdd(index);
        checkForComodification();
        l.add(index+offset, element);
        this.modCount = l.modCount;
        size++;
    }

    public E remove(int index) {
        rangeCheck(index);
        checkForComodification();
        E result = l.remove(index+offset);
        this.modCount = l.modCount;
        size--;
        return result;
    }

    protected void removeRange(int fromIndex, int toIndex) {
        checkForComodification();
        l.removeRange(fromIndex+offset, toIndex+offset);
        this.modCount = l.modCount;
        size -= (toIndex-fromIndex);
    }

    public boolean addAll(Collection<? extends E> c) {
        return addAll(size, c);
    }

    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        int cSize = c.size();
        if (cSize==0)
            return false;

        checkForComodification();
        l.addAll(offset+index, c);
        this.modCount = l.modCount;
        size += cSize;
        return true;
    }

    public Iterator<E> iterator() {
        return listIterator();
    }

    public ListIterator<E> listIterator(final int index) {
        checkForComodification();
        rangeCheckForAdd(index);

        return new ListIterator<E>() {
            private final ListIterator<E> i = l.listIterator(index+offset);

            public boolean hasNext() {
                return nextIndex() < size;
            }

            public E next() {
                if (hasNext())
                    return i.next();
                else
                    throw new NoSuchElementException();
            }

            public boolean hasPrevious() {
                return previousIndex() >= 0;
            }

            public E previous() {
                if (hasPrevious())
                    return i.previous();
                else
                    throw new NoSuchElementException();
            }

            public int nextIndex() {
                return i.nextIndex() - offset;
            }

            public int previousIndex() {
                return i.previousIndex() - offset;
            }

            public void remove() {
                i.remove();
                SubList.this.modCount = l.modCount;
                size--;
            }

            public void set(E e) {
                i.set(e);
            }

            public void add(E e) {
                i.add(e);
                SubList.this.modCount = l.modCount;
                size++;
            }
        };
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new SubList<E>(this, fromIndex, toIndex);
    }

    private void rangeCheck(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }

    private void checkForComodification() {
        if (this.modCount != l.modCount)
            throw new ConcurrentModificationException();
    }
}

class RandomAccessSubList<E> extends SubList<E> implements RandomAccess {
    RandomAccessSubList(AbstractList<E> list, int fromIndex, int toIndex) {
        super(list, fromIndex, toIndex);
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new RandomAccessSubList<E>(this, fromIndex, toIndex);
    }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>List</tt>
 * interface to minimize the effort required to implement this interface
 * backed by a "sequential access" data store (such as a linked list).  For
 * random access data (such as an array), <tt>AbstractList</tt> should be used
 * in preference to this class.<p>
 *
 * This class is the opposite of the <tt>AbstractList</tt> class in the sense
 * that it implements the "random access" methods (<tt>get(int index)</tt>,
 * <tt>set(int index, E element)</tt>, <tt>add(int index, E element)</tt> and
 * <tt>remove(int index)</tt>) on top of the list's list iterator, instead of
 * the other way around.<p>
 *
 * To implement a list the programmer needs only to extend this class and
 * provide implementations for the <tt>listIterator</tt> and <tt>size</tt>
 * methods.  For an unmodifiable list, the programmer need only implement the
 * list iterator's <tt>hasNext</tt>, <tt>next</tt>, <tt>hasPrevious</tt>,
 * <tt>previous</tt> and <tt>index</tt> methods.<p>
 *
 * For a modifiable list the programmer should additionally implement the list
 * iterator's <tt>set</tt> method.  For a variable-size list the programmer
 * should additionally implement the list iterator's <tt>remove</tt> and
 * <tt>add</tt> methods.<p>
 *
 * The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the <tt>Collection</tt> interface
 * specification.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see List
 * @see AbstractList
 * @see AbstractCollection
 * @since 1.2
 */

public abstract class AbstractSequentialList<E> extends AbstractList<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractSequentialList() {
    }

    /**
     * Returns the element at the specified position in this list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the element using <tt>ListIterator.next</tt> and returns it.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        try {
            return listIterator(index).next();
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the current element using <tt>ListIterator.next</tt> and replaces it
     * with <tt>ListIterator.set</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>set</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        try {
            ListIterator<E> e = listIterator(index);
            E oldVal = e.next();
            e.set(element);
            return oldVal;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it
     * inserts the specified element with <tt>ListIterator.add</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>add</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        try {
            listIterator(index).add(element);
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it removes
     * the element with <tt>ListIterator.remove</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>remove</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        try {
            ListIterator<E> e = listIterator(index);
            E outCast = e.next();
            e.remove();
            return outCast;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Bulk Operations

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * <p>This implementation gets an iterator over the specified collection and
     * a list iterator over this list pointing to the indexed element (with
     * <tt>listIterator(index)</tt>).  Then, it iterates over the specified
     * collection, inserting the elements obtained from the iterator into this
     * list, one at a time, using <tt>ListIterator.add</tt> followed by
     * <tt>ListIterator.next</tt> (to skip over the added element).
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator returned by
     * the <tt>listIterator</tt> method does not implement the <tt>add</tt>
     * operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        try {
            boolean modified = false;
            ListIterator<E> e1 = listIterator(index);
            Iterator<? extends E> e2 = c.iterator();
            while (e2.hasNext()) {
                e1.add(e2.next());
                modified = true;
            }
            return modified;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list (in proper
     * sequence).<p>
     *
     * This implementation merely returns a list iterator over the list.
     *
     * @return an iterator over the elements in this list (in proper sequence)
     */
    public Iterator<E> iterator() {
        return listIterator();
    }

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @param  index index of first element to be returned from the list
     *         iterator (by a call to the <code>next</code> method)
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public abstract ListIterator<E> listIterator(int index);
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * The root interface in the <i>collection hierarchy</i>.  A collection
 * represents a group of objects, known as its <i>elements</i>.  Some
 * collections allow duplicate elements and others do not.  Some are ordered
 * and others unordered.  The JDK does not provide any <i>direct</i>
 * implementations of this interface: it provides implementations of more
 * specific subinterfaces like <tt>Set</tt> and <tt>List</tt>.  This interface
 * is typically used to pass collections around and manipulate them where
 * maximum generality is desired.
 *
 * <p><i>Bags</i> or <i>multisets</i> (unordered collections that may contain
 * duplicate elements) should implement this interface directly.
 *
 * <p>All general-purpose <tt>Collection</tt> implementation classes (which
 * typically implement <tt>Collection</tt> indirectly through one of its
 * subinterfaces) should provide two "standard" constructors: a void (no
 * arguments) constructor, which creates an empty collection, and a
 * constructor with a single argument of type <tt>Collection</tt>, which
 * creates a new collection with the same elements as its argument.  In
 * effect, the latter constructor allows the user to copy any collection,
 * producing an equivalent collection of the desired implementation type.
 * There is no way to enforce this convention (as interfaces cannot contain
 * constructors) but all of the general-purpose <tt>Collection</tt>
 * implementations in the Java platform libraries comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the collection on which they operate, are specified to
 * throw <tt>UnsupportedOperationException</tt> if this collection does not
 * support the operation.  If this is the case, these methods may, but are not
 * required to, throw an <tt>UnsupportedOperationException</tt> if the
 * invocation would have no effect on the collection.  For example, invoking
 * the {@link #addAll(Collection)} method on an unmodifiable collection may,
 * but is not required to, throw the exception if the collection to be added
 * is empty.
 *
 * <p>Some collection implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the collection may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>It is up to each collection to determine its own synchronization
 * policy.  In the absence of a stronger guarantee by the
 * implementation, undefined behavior may result from the invocation
 * of any method on a collection that is being mutated by another
 * thread; this includes direct invocations, passing the collection to
 * a method that might perform invocations, and using an existing
 * iterator to examine the collection.
 *
 * <p>Many methods in Collections Framework interfaces are defined in
 * terms of the {@link Object#equals(Object) equals} method.  For example,
 * the specification for the {@link #contains(Object) contains(Object o)}
 * method says: "returns <tt>true</tt> if and only if this collection
 * contains at least one element <tt>e</tt> such that
 * <tt>(o==null ? e==null : o.equals(e))</tt>."  This specification should
 * <i>not</i> be construed to imply that invoking <tt>Collection.contains</tt>
 * with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be
 * invoked for any element <tt>e</tt>.  Implementations are free to implement
 * optimizations whereby the <tt>equals</tt> invocation is avoided, for
 * example, by first comparing the hash codes of the two elements.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see     Set
 * @see     List
 * @see     Map
 * @see     SortedSet
 * @see     SortedMap
 * @see     HashSet
 * @see     TreeSet
 * @see     ArrayList
 * @see     LinkedList
 * @see     Vector
 * @see     Collections
 * @see     Arrays
 * @see     AbstractCollection
 * @since 1.2
 */

public interface Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this collection.  If this collection
     * contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this collection
     */
    int size();

    /**
     * Returns <tt>true</tt> if this collection contains no elements.
     *
     * @return <tt>true</tt> if this collection contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this collection contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this collection
     * contains at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this collection is to be tested
     * @return <tt>true</tt> if this collection contains the specified
     *         element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this collection.  There are no
     * guarantees concerning the order in which the elements are returned
     * (unless this collection is an instance of some class that provides a
     * guarantee).
     *
     * @return an <tt>Iterator</tt> over the elements in this collection
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Ensures that this collection contains the specified element (optional
     * operation).  Returns <tt>true</tt> if this collection changed as a
     * result of the call.  (Returns <tt>false</tt> if this collection does
     * not permit duplicates and already contains the specified element.)<p>
     *
     * Collections that support this operation may place limitations on what
     * elements may be added to this collection.  In particular, some
     * collections will refuse to add <tt>null</tt> elements, and others will
     * impose restrictions on the type of elements that may be added.
     * Collection classes should clearly specify in their documentation any
     * restrictions on what elements may be added.<p>
     *
     * If a collection refuses to add a particular element for any reason
     * other than that it already contains the element, it <i>must</i> throw
     * an exception (rather than returning <tt>false</tt>).  This preserves
     * the invariant that a collection always contains the specified element
     * after this call returns.
     *
     * @param e element whose presence in this collection is to be ensured
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this collection
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements
     * @throws IllegalArgumentException if some property of the element
     *         prevents it from being added to this collection
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to insertion restrictions
     */
    boolean add(E e);

    /**
     * Removes a single instance of the specified element from this
     * collection, if it is present (optional operation).  More formally,
     * removes an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this collection contains one or more such elements.  Returns
     * <tt>true</tt> if this collection contained the specified element (or
     * equivalently, if this collection changed as a result of the call).
     *
     * @param o element to be removed from this collection, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this collection
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this collection contains all of the elements
     * in the specified collection.
     *
     * @param  c collection to be checked for containment in this collection
     * @return <tt>true</tt> if this collection contains all of the elements
     *         in the specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         collection (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this collection
     * (optional operation).  The behavior of this operation is undefined if
     * the specified collection is modified while the operation is in progress.
     * (This implies that the behavior of this call is undefined if the
     * specified collection is this collection, and this collection is
     * nonempty.)
     *
     * @param c collection containing elements to be added to this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this collection
     * @throws NullPointerException if the specified collection contains a
     *         null element and this collection does not permit null elements,
     *         or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this
     *         collection
     * @throws IllegalStateException if not all the elements can be added at
     *         this time due to insertion restrictions
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Removes all of this collection's elements that are also contained in the
     * specified collection (optional operation).  After this call returns,
     * this collection will contain no elements in common with the specified
     * collection.
     *
     * @param c collection containing elements to be removed from this collection
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> method
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not support
     *         null elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this collection that are contained in the
     * specified collection (optional operation).  In other words, removes from
     * this collection all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this collection (optional operation).
     * The collection will be empty after this method returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this collection
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this collection for equality. <p>
     *
     * While the <tt>Collection</tt> interface adds no stipulations to the
     * general contract for the <tt>Object.equals</tt>, programmers who
     * implement the <tt>Collection</tt> interface "directly" (in other words,
     * create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt>
     * or a <tt>List</tt>) must exercise care if they choose to override the
     * <tt>Object.equals</tt>.  It is not necessary to do so, and the simplest
     * course of action is to rely on <tt>Object</tt>'s implementation, but
     * the implementor may wish to implement a "value comparison" in place of
     * the default "reference comparison."  (The <tt>List</tt> and
     * <tt>Set</tt> interfaces mandate such value comparisons.)<p>
     *
     * The general contract for the <tt>Object.equals</tt> method states that
     * equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and
     * only if <tt>b.equals(a)</tt>).  The contracts for <tt>List.equals</tt>
     * and <tt>Set.equals</tt> state that lists are only equal to other lists,
     * and sets to other sets.  Thus, a custom <tt>equals</tt> method for a
     * collection class that implements neither the <tt>List</tt> nor
     * <tt>Set</tt> interface must return <tt>false</tt> when this collection
     * is compared to any list or set.  (By the same logic, it is not possible
     * to write a class that correctly implements both the <tt>Set</tt> and
     * <tt>List</tt> interfaces.)
     *
     * @param o object to be compared for equality with this collection
     * @return <tt>true</tt> if the specified object is equal to this
     * collection
     *
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     * @see List#equals(Object)
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this collection.  While the
     * <tt>Collection</tt> interface adds no stipulations to the general
     * contract for the <tt>Object.hashCode</tt> method, programmers should
     * take note that any class that overrides the <tt>Object.equals</tt>
     * method must also override the <tt>Object.hashCode</tt> method in order
     * to satisfy the general contract for the <tt>Object.hashCode</tt>method.
     * In particular, <tt>c1.equals(c2)</tt> implies that
     * <tt>c1.hashCode()==c2.hashCode()</tt>.
     *
     * @return the hash code value for this collection
     *
     * @see Object#hashCode()
     * @see Object#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This exception may be thrown by methods that have detected concurrent
 * modification of an object when such modification is not permissible.
 * <p>
 * For example, it is not generally permissible for one thread to modify a Collection
 * while another thread is iterating over it.  In general, the results of the
 * iteration are undefined under these circumstances.  Some Iterator
 * implementations (including those of all the general purpose collection implementations
 * provided by the JRE) may choose to throw this exception if this behavior is
 * detected.  Iterators that do this are known as <i>fail-fast</i> iterators,
 * as they fail quickly and cleanly, rather that risking arbitrary,
 * non-deterministic behavior at an undetermined time in the future.
 * <p>
 * Note that this exception does not always indicate that an object has
 * been concurrently modified by a <i>different</i> thread.  If a single
 * thread issues a sequence of method invocations that violates the
 * contract of an object, the object may throw this exception.  For
 * example, if a thread modifies a collection directly while it is
 * iterating over the collection with a fail-fast iterator, the iterator
 * will throw this exception.
 *
 * <p>Note that fail-fast behavior cannot be guaranteed as it is, generally
 * speaking, impossible to make any hard guarantees in the presence of
 * unsynchronized concurrent modification.  Fail-fast operations
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i><tt>ConcurrentModificationException</tt>
 * should be used only to detect bugs.</i>
 *
 * @author  Josh Bloch
 * @see     Collection
 * @see     Iterator
 * @see     ListIterator
 * @see     Vector
 * @see     LinkedList
 * @see     HashSet
 * @see     Hashtable
 * @see     TreeMap
 * @see     AbstractList
 * @since   1.2
 */
public class ConcurrentModificationException extends RuntimeException {
    /**
     * Constructs a ConcurrentModificationException with no
     * detail message.
     */
    public ConcurrentModificationException() {
    }

    /**
     * Constructs a <tt>ConcurrentModificationException</tt> with the
     * specified detail message.
     *
     * @param message the detail message pertaining to this exception.
     */
    public ConcurrentModificationException(String message) {
        super(message);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea and Josh Bloch with assistance from members of
 * JCP JSR-166 Expert Group and released to the public domain, as explained
 * at http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A linear collection that supports element insertion and removal at
 * both ends.  The name <i>deque</i> is short for "double ended queue"
 * and is usually pronounced "deck".  Most <tt>Deque</tt>
 * implementations place no fixed limits on the number of elements
 * they may contain, but this interface supports capacity-restricted
 * deques as well as those with no fixed size limit.
 *
 * <p>This interface defines methods to access the elements at both
 * ends of the deque.  Methods are provided to insert, remove, and
 * examine the element.  Each of these methods exists in two forms:
 * one throws an exception if the operation fails, the other returns a
 * special value (either <tt>null</tt> or <tt>false</tt>, depending on
 * the operation).  The latter form of the insert operation is
 * designed specifically for use with capacity-restricted
 * <tt>Deque</tt> implementations; in most implementations, insert
 * operations cannot fail.
 *
 * <p>The twelve methods described above are summarized in the
 * following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>First Element (Head)</b></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>Last Element (Tail)</b></td>
 *  </tr>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *    <td>{@link #offerFirst offerFirst(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *    <td>{@link #removeLast removeLast()}</td>
 *    <td>{@link #pollLast pollLast()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #getFirst getFirst()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *    <td>{@link #getLast getLast()}</td>
 *    <td>{@link #peekLast peekLast()}</td>
 *  </tr>
 * </table>
 *
 * <p>This interface extends the {@link Queue} interface.  When a deque is
 * used as a queue, FIFO (First-In-First-Out) behavior results.  Elements are
 * added at the end of the deque and removed from the beginning.  The methods
 * inherited from the <tt>Queue</tt> interface are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b><tt>Queue</tt> Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#add add(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#offer offer(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#remove remove()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#poll poll()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#element element()}</td>
 *    <td>{@link #getFirst getFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#peek peek()}</td>
 *    <td>{@link #peek peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Deques can also be used as LIFO (Last-In-First-Out) stacks.  This
 * interface should be used in preference to the legacy {@link Stack} class.
 * When a deque is used as a stack, elements are pushed and popped from the
 * beginning of the deque.  Stack methods are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the table below:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b>Stack Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link #push push(e)}</td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #pop pop()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #peek peek()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Note that the {@link #peek peek} method works equally well when
 * a deque is used as a queue or a stack; in either case, elements are
 * drawn from the beginning of the deque.
 *
 * <p>This interface provides two methods to remove interior
 * elements, {@link #removeFirstOccurrence removeFirstOccurrence} and
 * {@link #removeLastOccurrence removeLastOccurrence}.
 *
 * <p>Unlike the {@link List} interface, this interface does not
 * provide support for indexed access to elements.
 *
 * <p>While <tt>Deque</tt> implementations are not strictly required
 * to prohibit the insertion of null elements, they are strongly
 * encouraged to do so.  Users of any <tt>Deque</tt> implementations
 * that do allow null elements are strongly encouraged <i>not</i> to
 * take advantage of the ability to insert nulls.  This is so because
 * <tt>null</tt> is used as a special return value by various methods
 * to indicated that the deque is empty.
 *
 * <p><tt>Deque</tt> implementations generally do not define
 * element-based versions of the <tt>equals</tt> and <tt>hashCode</tt>
 * methods, but instead inherit the identity-based versions from class
 * <tt>Object</tt>.
 *
 * <p>This interface is a member of the <a
 * href="{@docRoot}/../technotes/guides/collections/index.html"> Java Collections
 * Framework</a>.
 *
 * @author Doug Lea
 * @author Josh Bloch
 * @since  1.6
 * @param <E> the type of elements held in this collection
 */

public interface Deque<E> extends Queue<E> {
    /**
     * Inserts the specified element at the front of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerFirst}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addFirst(E e);

    /**
     * Inserts the specified element at the end of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerLast}.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addLast(E e);

    /**
     * Inserts the specified element at the front of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addFirst} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerFirst(E e);

    /**
     * Inserts the specified element at the end of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addLast} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerLast(E e);

    /**
     * Retrieves and removes the first element of this deque.  This method
     * differs from {@link #pollFirst pollFirst} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeFirst();

    /**
     * Retrieves and removes the last element of this deque.  This method
     * differs from {@link #pollLast pollLast} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeLast();

    /**
     * Retrieves and removes the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollFirst();

    /**
     * Retrieves and removes the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollLast();

    /**
     * Retrieves, but does not remove, the first element of this deque.
     *
     * This method differs from {@link #peekFirst peekFirst} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque.
     * This method differs from {@link #peekLast peekLast} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getLast();

    /**
     * Retrieves, but does not remove, the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekLast();

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeFirstOccurrence(Object o);

    /**
     * Removes the last occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the last element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeLastOccurrence(Object o);

    // *** Queue methods ***

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     * When using a capacity-restricted deque, it is generally preferable to
     * use {@link #offer(Object) offer}.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean add(E e);

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and <tt>false</tt> if no space is currently
     * available.  When using a capacity-restricted deque, this method is
     * generally preferable to the {@link #add} method, which can fail to
     * insert an element only by throwing an exception.
     *
     * <p>This method is equivalent to {@link #offerLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque).
     * This method differs from {@link #poll poll} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque), or returns
     * <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #pollFirst()}.
     *
     * @return the first element of this deque, or <tt>null</tt> if
     *         this deque is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque).
     * This method differs from {@link #peek peek} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #getFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque), or
     * returns <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #peekFirst()}.
     *
     * @return the head of the queue represented by this deque, or
     *         <tt>null</tt> if this deque is empty
     */
    E peek();


    // *** Stack methods ***

    /**
     * Pushes an element onto the stack represented by this deque (in other
     * words, at the head of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void push(E e);

    /**
     * Pops an element from the stack represented by this deque.  In other
     * words, removes and returns the first element of this deque.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this deque (which is the top
     *         of the stack represented by this deque)
     * @throws NoSuchElementException if this deque is empty
     */
    E pop();


    // *** Collection methods ***

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * <p>This method is equivalent to {@link #removeFirstOccurrence}.
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean remove(Object o);

    /**
     * Returns <tt>true</tt> if this deque contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this deque contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this deque is to be tested
     * @return <tt>true</tt> if this deque contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns the number of elements in this deque.
     *
     * @return the number of elements in this deque
     */
    public int size();

    /**
     * Returns an iterator over the elements in this deque in proper sequence.
     * The elements will be returned in order from first (head) to last (tail).
     *
     * @return an iterator over the elements in this deque in proper sequence
     */
    Iterator<E> iterator();

    /**
     * Returns an iterator over the elements in this deque in reverse
     * sequential order.  The elements will be returned in order from
     * last (tail) to first (head).
     *
     * @return an iterator over the elements in this deque in reverse
     * sequence
     */
    Iterator<E> descendingIterator();

}


/*
 * Copyright 1994-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that a method has been passed an illegal or
 * inappropriate argument.
 *
 * @author  unascribed
 * @see     java.lang.Thread#setPriority(int)
 * @since   JDK1.0
 */
public
class IllegalArgumentException extends RuntimeException {
    /**
     * Constructs an <code>IllegalArgumentException</code> with no
     * detail message.
     */
    public IllegalArgumentException() {
        super();
    }

    /**
     * Constructs an <code>IllegalArgumentException</code> with the
     * specified detail message.
     *
     * @param   s   the detail message.
     */
    public IllegalArgumentException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalArgumentException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalArgumentException(Throwable cause) {
        super(cause);
    }

    private static final long serialVersionUID = -5365630128856068164L;
}


/*
 * Copyright 1996-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Signals that a method has been invoked at an illegal or
 * inappropriate time.  In other words, the Java environment or
 * Java application is not in an appropriate state for the requested
 * operation.
 *
 * @author  Jonni Kanerva
 * @since   JDK1.1
 */
public
class IllegalStateException extends RuntimeException {
    /**
     * Constructs an IllegalStateException with no detail message.
     * A detail message is a String that describes this particular exception.
     */
    public IllegalStateException() {
        super();
    }

    /**
     * Constructs an IllegalStateException with the specified detail
     * message.  A detail message is a String that describes this particular
     * exception.
     *
     * @param s the String that contains a detailed message
     */
    public IllegalStateException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalStateException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalStateException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1848914673093119416L;
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator over a collection.  {@code Iterator} takes the place of
 * {@link Enumeration} in the Java Collections Framework.  Iterators
 * differ from enumerations in two ways:
 *
 * <ul>
 *      <li> Iterators allow the caller to remove elements from the
 *           underlying collection during the iteration with well-defined
 *           semantics.
 *      <li> Method names have been improved.
 * </ul>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see ListIterator
 * @see Iterable
 * @since 1.2
 */
public interface Iterator<E> {
    /**
     * Returns {@code true} if the iteration has more elements.
     * (In other words, returns {@code true} if {@link #next} would
     * return an element rather than throwing an exception.)
     *
     * @return {@code true} if the iteration has more elements
     */
    boolean hasNext();

    /**
     * Returns the next element in the iteration.
     *
     * @return the next element in the iteration
     * @throws NoSuchElementException if the iteration has no more elements
     */
    E next();

    /**
     * Removes from the underlying collection the last element returned
     * by this iterator (optional operation).  This method can be called
     * only once per call to {@link #next}.  The behavior of an iterator
     * is unspecified if the underlying collection is modified while the
     * iteration is in progress in any way other than by calling this
     * method.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this iterator
     *
     * @throws IllegalStateException if the {@code next} method has not
     *         yet been called, or the {@code remove} method has already
     *         been called after the last call to the {@code next}
     *         method
     */
    void remove();
}


package javaUtilEx;

public class juLinkedListCreateContains {
	public static void main(String[] args) {
		Random.args = args;

		LinkedList<Content> l = createList(Random.random());
		Content c = new Content(Random.random());
		if (Random.random() < 42) {
			c = l.get(Random.random());
		}
		l.contains(c);
	}

	public static LinkedList<Content> createList(int n) {
		LinkedList<Content> l = new LinkedList<Content>();
		while (n > 0) {
			l.addLast(new Content(Random.random()));
			n--;
		}
		return l;
	}
}

final class Content {
	int val;

	public Content(int v) {
		this.val = v;
	}

	public int hashCode() {
		return val^31;
	}

	public boolean equals(Object o) {
		if (o instanceof Content) {
			return this.val == ((Content) o).val;
		}
		return false;
	}
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Linked list implementation of the <tt>List</tt> interface.  Implements all
 * optional list operations, and permits all elements (including
 * <tt>null</tt>).  In addition to implementing the <tt>List</tt> interface,
 * the <tt>LinkedList</tt> class provides uniformly named methods to
 * <tt>get</tt>, <tt>remove</tt> and <tt>insert</tt> an element at the
 * beginning and end of the list.  These operations allow linked lists to be
 * used as a stack, {@linkplain Queue queue}, or {@linkplain Deque
 * double-ended queue}. <p>
 *
 * The class implements the <tt>Deque</tt> interface, providing
 * first-in-first-out queue operations for <tt>add</tt>,
 * <tt>poll</tt>, along with other stack and deque operations.<p>
 *
 * All of the operations perform as could be expected for a doubly-linked
 * list.  Operations that index into the list will traverse the list from
 * the beginning or the end, whichever is closer to the specified index.<p>
 *
 * <p><strong>Note that this implementation is not synchronized.</strong>
 * If multiple threads access a linked list concurrently, and at least
 * one of the threads modifies the list structurally, it <i>must</i> be
 * synchronized externally.  (A structural modification is any operation
 * that adds or deletes one or more elements; merely setting the value of
 * an element is not a structural modification.)  This is typically
 * accomplished by synchronizing on some object that naturally
 * encapsulates the list.
 *
 * If no such object exists, the list should be "wrapped" using the
 * {@link Collections#synchronizedList Collections.synchronizedList}
 * method.  This is best done at creation time, to prevent accidental
 * unsynchronized access to the list:<pre>
 *   List list = Collections.synchronizedList(new LinkedList(...));</pre>
 *
 * <p>The iterators returned by this class's <tt>iterator</tt> and
 * <tt>listIterator</tt> methods are <i>fail-fast</i>: if the list is
 * structurally modified at any time after the iterator is created, in
 * any way except through the Iterator's own <tt>remove</tt> or
 * <tt>add</tt> methods, the iterator will throw a {@link
 * ConcurrentModificationException}.  Thus, in the face of concurrent
 * modification, the iterator fails quickly and cleanly, rather than
 * risking arbitrary, non-deterministic behavior at an undetermined
 * time in the future.
 *
 * <p>Note that the fail-fast behavior of an iterator cannot be guaranteed
 * as it is, generally speaking, impossible to make any hard guarantees in the
 * presence of unsynchronized concurrent modification.  Fail-fast iterators
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness:   <i>the fail-fast behavior of iterators
 * should be used only to detect bugs.</i>
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see     List
 * @see     ArrayList
 * @see     Vector
 * @since 1.2
 * @param <E> the type of elements held in this collection
 */

public class LinkedList<E>
    extends AbstractSequentialList<E>
    implements List<E>, Deque<E>
{
    private transient Entry<E> header = new Entry<E>(null, null, null);
    private transient int size = 0;

    /**
     * Constructs an empty list.
     */
    public LinkedList() {
        header.next = header.previous = header;
    }

    /**
     * Constructs a list containing the elements of the specified
     * collection, in the order they are returned by the collection's
     * iterator.
     *
     * @param  c the collection whose elements are to be placed into this list
     * @throws NullPointerException if the specified collection is null
     */
    public LinkedList(Collection<? extends E> c) {
        this();
        addAll(c);
    }

    /**
     * Returns the first element in this list.
     *
     * @return the first element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getFirst() {
        if (size==0)
            throw new NoSuchElementException();

        return header.next.element;
    }

    /**
     * Returns the last element in this list.
     *
     * @return the last element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getLast()  {
        if (size==0)
            throw new NoSuchElementException();

        return header.previous.element;
    }

    /**
     * Removes and returns the first element from this list.
     *
     * @return the first element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeFirst() {
        return remove(header.next);
    }

    /**
     * Removes and returns the last element from this list.
     *
     * @return the last element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeLast() {
        return remove(header.previous);
    }

    /**
     * Inserts the specified element at the beginning of this list.
     *
     * @param e the element to add
     */
    public void addFirst(E e) {
        addBefore(e, header.next);
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     */
    public void addLast(E e) {
        addBefore(e, header);
    }

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     */
    public boolean contains(Object o) {
        return indexOf(o) != -1;
    }

    /**
     * Returns the number of elements in this list.
     *
     * @return the number of elements in this list
     */
    public int size() {
        return size;
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     */
    public boolean add(E e) {
        addBefore(e, header);
        return true;
    }

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present.  If this list does not contain the element, it is
     * unchanged.  More formally, removes the element with the lowest index
     * <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list
     * changed as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     */
    public boolean remove(Object o) {
        if (o==null) {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }
    /**
     * Removes all of the elements from this list.
     */
    public void clear() {
        Entry<E> e = header.next;
        while (e != header) {
            Entry<E> next = e.next;
            e.next = e.previous = null;
            e.element = null;
            e = next;
        }
        header.next = header.previous = header;
        size = 0;
        modCount++;
    }


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        return entry(index).element;
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element.
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E set(int index, E element) {
        Entry<E> e = entry(index);
        E oldVal = e.element;
        e.element = element;
        return oldVal;
    }

    /**
     * Inserts the specified element at the specified position in this list.
     * Shifts the element currently at that position (if any) and any
     * subsequent elements to the right (adds one to their indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public void add(int index, E element) {
        addBefore(element, (index==size ? header : entry(index)));
    }

    /**
     * Removes the element at the specified position in this list.  Shifts any
     * subsequent elements to the left (subtracts one from their indices).
     * Returns the element that was removed from the list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E remove(int index) {
        return remove(entry(index));
    }

    /**
     * Returns the indexed entry.
     */
    private Entry<E> entry(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException();
        Entry<E> e = header;
        if (index < (size >> 1)) {
            for (int i = 0; i <= index; i++)
                e = e.next;
        } else {
            for (int i = size; i > index; i--)
                e = e.previous;
        }
        return e;
    }


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int indexOf(Object o) {
        int index = 0;
        if (o==null) {
            for (Entry e = header.next; e != header; e = e.next) {
                if (e.element==null)
                    return index;
                index++;
            }
        } else {
            for (Entry e = header.next; e != header; e = e.next) {
                if (o.equals(e.element))
                    return index;
                index++;
            }
        }
        return -1;
    }

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int lastIndexOf(Object o) {
        int index = size;
        if (o==null) {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (e.element==null)
                    return index;
            }
        } else {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (o.equals(e.element))
                    return index;
            }
        }
        return -1;
    }

    // Queue operations.

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E peek() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E element() {
        return getFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E poll() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list.
     *
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E remove() {
        return removeFirst();
    }

    /**
     * Adds the specified element as the tail (last element) of this list.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Queue#offer})
     * @since 1.5
     */
    public boolean offer(E e) {
        return add(e);
    }

    // Deque operations
    /**
     * Inserts the specified element at the front of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerFirst})
     * @since 1.6
     */
    public boolean offerFirst(E e) {
        addFirst(e);
        return true;
    }

    /**
     * Inserts the specified element at the end of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerLast})
     * @since 1.6
     */
    public boolean offerLast(E e) {
        addLast(e);
        return true;
    }

    /**
     * Retrieves, but does not remove, the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekFirst() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekLast() {
        if (size==0)
            return null;
        return getLast();
    }

    /**
     * Retrieves and removes the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollFirst() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollLast() {
        if (size==0)
            return null;
        return removeLast();
    }

    /**
     * Pushes an element onto the stack represented by this list.  In other
     * words, inserts the element at the front of this list.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @since 1.6
     */
    public void push(E e) {
        addFirst(e);
    }

    /**
     * Pops an element from the stack represented by this list.  In other
     * words, removes and returns the first element of this list.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this list (which is the top
     *         of the stack represented by this list)
     * @throws NoSuchElementException if this list is empty
     * @since 1.6
     */
    public E pop() {
        return removeFirst();
    }

    /**
     * Removes the first occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeFirstOccurrence(Object o) {
        return remove(o);
    }

    /**
     * Removes the last occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeLastOccurrence(Object o) {
        if (o==null) {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * Returns a list-iterator of the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * Obeys the general contract of <tt>List.listIterator(int)</tt>.<p>
     *
     * The list-iterator is <i>fail-fast</i>: if the list is structurally
     * modified at any time after the Iterator is created, in any way except
     * through the list-iterator's own <tt>remove</tt> or <tt>add</tt>
     * methods, the list-iterator will throw a
     * <tt>ConcurrentModificationException</tt>.  Thus, in the face of
     * concurrent modification, the iterator fails quickly and cleanly, rather
     * than risking arbitrary, non-deterministic behavior at an undetermined
     * time in the future.
     *
     * @param index index of the first element to be returned from the
     *              list-iterator (by a call to <tt>next</tt>)
     * @return a ListIterator of the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     * @see List#listIterator(int)
     */
    public ListIterator<E> listIterator(int index) {
        return new ListItr(index);
    }

    private class ListItr implements ListIterator<E> {
        private Entry<E> lastReturned = header;
        private Entry<E> next;
        private int nextIndex;
        private int expectedModCount = modCount;

        ListItr(int index) {
            if (index < 0 || index > size)
                throw new IndexOutOfBoundsException();
            if (index < (size >> 1)) {
                next = header.next;
                for (nextIndex=0; nextIndex<index; nextIndex++)
                    next = next.next;
            } else {
                next = header;
                for (nextIndex=size; nextIndex>index; nextIndex--)
                    next = next.previous;
            }
        }

        public boolean hasNext() {
            return nextIndex != size;
        }

        public E next() {
            checkForComodification();
            if (nextIndex == size)
                throw new NoSuchElementException();

            lastReturned = next;
            next = next.next;
            nextIndex++;
            return lastReturned.element;
        }

        public boolean hasPrevious() {
            return nextIndex != 0;
        }

        public E previous() {
            if (nextIndex == 0)
                throw new NoSuchElementException();

            lastReturned = next = next.previous;
            nextIndex--;
            checkForComodification();
            return lastReturned.element;
        }

        public int nextIndex() {
            return nextIndex;
        }

        public int previousIndex() {
            return nextIndex-1;
        }

        public void remove() {
            checkForComodification();
            Entry<E> lastNext = lastReturned.next;
            try {
                LinkedList.this.remove(lastReturned);
            } catch (NoSuchElementException e) {
                throw new IllegalStateException();
            }
            if (next==lastReturned)
                next = lastNext;
            else
                nextIndex--;
            lastReturned = header;
            expectedModCount++;
        }

        public void set(E e) {
            if (lastReturned == header)
                throw new IllegalStateException();
            checkForComodification();
            lastReturned.element = e;
        }

        public void add(E e) {
            checkForComodification();
            lastReturned = header;
            addBefore(e, next);
            nextIndex++;
            expectedModCount++;
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private static class Entry<E> {
        E element;
        Entry<E> next;
        Entry<E> previous;

        Entry(E element, Entry<E> next, Entry<E> previous) {
            this.element = element;
            this.next = next;
            this.previous = previous;
        }
    }

    private Entry<E> addBefore(E e, Entry<E> entry) {
        Entry<E> newEntry = new Entry<E>(e, entry, entry.previous);
        newEntry.previous.next = newEntry;
        newEntry.next.previous = newEntry;
        size++;
        modCount++;
        return newEntry;
    }

    private E remove(Entry<E> e) {
        if (e == header)
            throw new NoSuchElementException();

        E result = e.element;
        e.previous.next = e.next;
        e.next.previous = e.previous;
        e.next = e.previous = null;
        e.element = null;
        size--;
        modCount++;
        return result;
    }

    /**
     * @since 1.6
     */
    public Iterator<E> descendingIterator() {
        return new DescendingIterator();
    }

    /** Adapter to provide descending iterators via ListItr.previous */
    private class DescendingIterator implements Iterator {
        final ListItr itr = new ListItr(size());
        public boolean hasNext() {
            return itr.hasPrevious();
        }
        public E next() {
            return itr.previous();
        }
        public void remove() {
            itr.remove();
        }
    }

    /**
     * Returns an array containing all of the elements in this list
     * in proper sequence (from first to last element).
     *
     * <p>The returned array will be "safe" in that no references to it are
     * maintained by this list.  (In other words, this method must allocate
     * a new array).  The caller is thus free to modify the returned array.
     *
     * <p>This method acts as bridge between array-based and collection-based
     * APIs.
     *
     * @return an array containing all of the elements in this list
     *         in proper sequence
     */
    public Object[] toArray() {
        Object[] result = new Object[size];
        int i = 0;
        for (Entry<E> e = header.next; e != header; e = e.next)
            result[i++] = e.element;
        return result;
    }

    private static final long serialVersionUID = 876323262645176354L;
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator for lists that allows the programmer
 * to traverse the list in either direction, modify
 * the list during iteration, and obtain the iterator's
 * current position in the list. A {@code ListIterator}
 * has no current element; its <I>cursor position</I> always
 * lies between the element that would be returned by a call
 * to {@code previous()} and the element that would be
 * returned by a call to {@code next()}.
 * An iterator for a list of length {@code n} has {@code n+1} possible
 * cursor positions, as illustrated by the carets ({@code ^}) below:
 * <PRE>
 *                      Element(0)   Element(1)   Element(2)   ... Element(n-1)
 * cursor positions:  ^            ^            ^            ^                  ^
 * </PRE>
 * Note that the {@link #remove} and {@link #set(Object)} methods are
 * <i>not</i> defined in terms of the cursor position;  they are defined to
 * operate on the last element returned by a call to {@link #next} or
 * {@link #previous()}.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see List
 * @see Iterator
 * @see Enumeration
 * @see List#listIterator()
 * @since   1.2
 */
public interface ListIterator<E> extends Iterator<E> {
    // Query Operations

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the forward direction. (In other words,
     * returns {@code true} if {@link #next} would return an element rather
     * than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the forward direction
     */
    boolean hasNext();

    /**
     * Returns the next element in the list and advances the cursor position.
     * This method may be called repeatedly to iterate through the list,
     * or intermixed with calls to {@link #previous} to go back and forth.
     * (Note that alternating calls to {@code next} and {@code previous}
     * will return the same element repeatedly.)
     *
     * @return the next element in the list
     * @throws NoSuchElementException if the iteration has no next element
     */
    E next();

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the reverse direction.  (In other words,
     * returns {@code true} if {@link #previous} would return an element
     * rather than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the reverse direction
     */
    boolean hasPrevious();

    /**
     * Returns the previous element in the list and moves the cursor
     * position backwards.  This method may be called repeatedly to
     * iterate through the list backwards, or intermixed with calls to
     * {@link #next} to go back and forth.  (Note that alternating calls
     * to {@code next} and {@code previous} will return the same
     * element repeatedly.)
     *
     * @return the previous element in the list
     * @throws NoSuchElementException if the iteration has no previous
     *         element
     */
    E previous();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #next}. (Returns list size if the list
     * iterator is at the end of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code next}, or list size if the list
     *         iterator is at the end of the list
     */
    int nextIndex();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #previous}. (Returns -1 if the list
     * iterator is at the beginning of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code previous}, or -1 if the list
     *         iterator is at the beginning of the list
     */
    int previousIndex();


    // Modification Operations

    /**
     * Removes from the list the last element that was returned by {@link
     * #next} or {@link #previous} (optional operation).  This call can
     * only be made once per call to {@code next} or {@code previous}.
     * It can be made only if {@link #add} has not been
     * called after the last call to {@code next} or {@code previous}.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this list iterator
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void remove();

    /**
     * Replaces the last element returned by {@link #next} or
     * {@link #previous} with the specified element (optional operation).
     * This call can be made only if neither {@link #remove} nor {@link
     * #add} have been called after the last call to {@code next} or
     * {@code previous}.
     *
     * @param e the element with which to replace the last element returned by
     *          {@code next} or {@code previous}
     * @throws UnsupportedOperationException if the {@code set} operation
     *         is not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of the specified
     *         element prevents it from being added to this list
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void set(E e);

    /**
     * Inserts the specified element into the list (optional operation).
     * The element is inserted immediately before the next element that
     * would be returned by {@link #next}, if any, and after the next
     * element that would be returned by {@link #previous}, if any.  (If the
     * list contains no elements, the new element becomes the sole element
     * on the list.)  The new element is inserted before the implicit
     * cursor: a subsequent call to {@code next} would be unaffected, and a
     * subsequent call to {@code previous} would return the new element.
     * (This call increases by one the value that would be returned by a
     * call to {@code nextIndex} or {@code previousIndex}.)
     *
     * @param e the element to insert
     * @throws UnsupportedOperationException if the {@code add} method is
     *         not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of this element
     *         prevents it from being added to this list
     */
    void add(E e);
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An ordered collection (also known as a <i>sequence</i>).  The user of this
 * interface has precise control over where in the list each element is
 * inserted.  The user can access elements by their integer index (position in
 * the list), and search for elements in the list.<p>
 *
 * Unlike sets, lists typically allow duplicate elements.  More formally,
 * lists typically allow pairs of elements <tt>e1</tt> and <tt>e2</tt>
 * such that <tt>e1.equals(e2)</tt>, and they typically allow multiple
 * null elements if they allow null elements at all.  It is not inconceivable
 * that someone might wish to implement a list that prohibits duplicates, by
 * throwing runtime exceptions when the user attempts to insert them, but we
 * expect this usage to be rare.<p>
 *
 * The <tt>List</tt> interface places additional stipulations, beyond those
 * specified in the <tt>Collection</tt> interface, on the contracts of the
 * <tt>iterator</tt>, <tt>add</tt>, <tt>remove</tt>, <tt>equals</tt>, and
 * <tt>hashCode</tt> methods.  Declarations for other inherited methods are
 * also included here for convenience.<p>
 *
 * The <tt>List</tt> interface provides four methods for positional (indexed)
 * access to list elements.  Lists (like Java arrays) are zero based.  Note
 * that these operations may execute in time proportional to the index value
 * for some implementations (the <tt>LinkedList</tt> class, for
 * example). Thus, iterating over the elements in a list is typically
 * preferable to indexing through it if the caller does not know the
 * implementation.<p>
 *
 * The <tt>List</tt> interface provides a special iterator, called a
 * <tt>ListIterator</tt>, that allows element insertion and replacement, and
 * bidirectional access in addition to the normal operations that the
 * <tt>Iterator</tt> interface provides.  A method is provided to obtain a
 * list iterator that starts at a specified position in the list.<p>
 *
 * The <tt>List</tt> interface provides two methods to search for a specified
 * object.  From a performance standpoint, these methods should be used with
 * caution.  In many implementations they will perform costly linear
 * searches.<p>
 *
 * The <tt>List</tt> interface provides two methods to efficiently insert and
 * remove multiple elements at an arbitrary point in the list.<p>
 *
 * Note: While it is permissible for lists to contain themselves as elements,
 * extreme caution is advised: the <tt>equals</tt> and <tt>hashCode</tt>
 * methods are no longer well defined on such a list.
 *
 * <p>Some list implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the list may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see Set
 * @see ArrayList
 * @see LinkedList
 * @see Vector
 * @see Arrays#asList(Object[])
 * @see Collections#nCopies(int, Object)
 * @see Collections#EMPTY_LIST
 * @see AbstractList
 * @see AbstractSequentialList
 * @since 1.2
 */

public interface List<E> extends Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this list.  If this list contains
     * more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this list
     */
    int size();

    /**
     * Returns <tt>true</tt> if this list contains no elements.
     *
     * @return <tt>true</tt> if this list contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    boolean add(E e);

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present (optional operation).  If this list does not contain
     * the element, it is unchanged.  More formally, removes the element with
     * the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list changed
     * as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     */
    boolean remove(Object o);


    // Bulk Modification Operations

    /**
     * Returns <tt>true</tt> if this list contains all of the elements of the
     * specified collection.
     *
     * @param  c collection to be checked for containment in this list
     * @return <tt>true</tt> if this list contains all of the elements of the
     *         specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         list (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Appends all of the elements in the specified collection to the end of
     * this list, in the order that they are returned by the specified
     * collection's iterator (optional operation).  The behavior of this
     * operation is undefined if the specified collection is modified while
     * the operation is in progress.  (Note that this will occur if the
     * specified collection is this list, and it's nonempty.)
     *
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * @param index index at which to insert the first element from the
     *              specified collection
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    boolean addAll(int index, Collection<? extends E> c);

    /**
     * Removes from this list all of its elements that are contained in the
     * specified collection (optional operation).
     *
     * @param c collection containing elements to be removed from this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this list that are contained in the
     * specified collection (optional operation).  In other words, removes
     * from this list all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this list
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * <tt>true</tt> if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements <tt>e1</tt> and
     * <tt>e2</tt> are <i>equal</i> if <tt>(e1==null ? e2==null :
     * e1.equals(e2))</tt>.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.  This
     * definition ensures that the equals method works properly across
     * different implementations of the <tt>List</tt> interface.
     *
     * @param o the object to be compared for equality with this list
     * @return <tt>true</tt> if the specified object is equal to this list
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this list.  The hash code of a list
     * is defined to be the result of the following calculation:
     * <pre>
     *  int hashCode = 1;
     *  for (E e : list)
     *      hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
     * </pre>
     * This ensures that <tt>list1.equals(list2)</tt> implies that
     * <tt>list1.hashCode()==list2.hashCode()</tt> for any two lists,
     * <tt>list1</tt> and <tt>list2</tt>, as required by the general
     * contract of {@link Object#hashCode}.
     *
     * @return the hash code value for this list
     * @see Object#equals(Object)
     * @see #equals(Object)
     */
    int hashCode();


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E get(int index);

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>set</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E set(int index, E element);

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    void add(int index, E element);

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E remove(int index);


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int indexOf(Object o);

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int lastIndexOf(Object o);


    // List Iterators

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     */
    ListIterator<E> listIterator();

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * The specified index indicates the first element that would be
     * returned by an initial call to {@link ListIterator#next next}.
     * An initial call to {@link ListIterator#previous previous} would
     * return the element with the specified index minus one.
     *
     * @param index index of the first element to be returned from the
     *        list iterator (by a call to {@link ListIterator#next next})
     * @return a list iterator over the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         ({@code index < 0 || index > size()})
     */
    ListIterator<E> listIterator(int index);

    // View

    /**
     * Returns a view of the portion of this list between the specified
     * <tt>fromIndex</tt>, inclusive, and <tt>toIndex</tt>, exclusive.  (If
     * <tt>fromIndex</tt> and <tt>toIndex</tt> are equal, the returned list is
     * empty.)  The returned list is backed by this list, so non-structural
     * changes in the returned list are reflected in this list, and vice-versa.
     * The returned list supports all of the optional list operations supported
     * by this list.<p>
     *
     * This method eliminates the need for explicit range operations (of
     * the sort that commonly exist for arrays).  Any operation that expects
     * a list can be used as a range operation by passing a subList view
     * instead of a whole list.  For example, the following idiom
     * removes a range of elements from a list:
     * <pre>
     *      list.subList(from, to).clear();
     * </pre>
     * Similar idioms may be constructed for <tt>indexOf</tt> and
     * <tt>lastIndexOf</tt>, and all of the algorithms in the
     * <tt>Collections</tt> class can be applied to a subList.<p>
     *
     * The semantics of the list returned by this method become undefined if
     * the backing list (i.e., this list) is <i>structurally modified</i> in
     * any way other than via the returned list.  (Structural modifications are
     * those that change the size of this list, or otherwise perturb it in such
     * a fashion that iterations in progress may yield incorrect results.)
     *
     * @param fromIndex low endpoint (inclusive) of the subList
     * @param toIndex high endpoint (exclusive) of the subList
     * @return a view of the specified range within this list
     * @throws IndexOutOfBoundsException for an illegal endpoint index value
     *         (<tt>fromIndex &lt; 0 || toIndex &gt; size ||
     *         fromIndex &gt; toIndex</tt>)
     */
    List<E> subList(int fromIndex, int toIndex);
}


/*
 * Copyright 1994-1998 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown by the <code>nextElement</code> method of an
 * <code>Enumeration</code> to indicate that there are no more
 * elements in the enumeration.
 *
 * @author  unascribed
 * @see     java.util.Enumeration
 * @see     java.util.Enumeration#nextElement()
 * @since   JDK1.0
 */
public
class NoSuchElementException extends RuntimeException {
    /**
     * Constructs a <code>NoSuchElementException</code> with <tt>null</tt>
     * as its error message string.
     */
    public NoSuchElementException() {
        super();
    }

    /**
     * Constructs a <code>NoSuchElementException</code>, saving a reference
     * to the error message string <tt>s</tt> for later retrieval by the
     * <tt>getMessage</tt> method.
     *
     * @param   s   the detail message.
     */
    public NoSuchElementException(String s) {
        super(s);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea with assistance from members of JCP JSR-166
 * Expert Group and released to the public domain, as explained at
 * http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A collection designed for holding elements prior to processing.
 * Besides basic {@link java.util.Collection Collection} operations,
 * queues provide additional insertion, extraction, and inspection
 * operations.  Each of these methods exists in two forms: one throws
 * an exception if the operation fails, the other returns a special
 * value (either <tt>null</tt> or <tt>false</tt>, depending on the
 * operation).  The latter form of the insert operation is designed
 * specifically for use with capacity-restricted <tt>Queue</tt>
 * implementations; in most implementations, insert operations cannot
 * fail.
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Returns special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #add add(e)}</td>
 *    <td>{@link #offer offer(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #remove remove()}</td>
 *    <td>{@link #poll poll()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #element element()}</td>
 *    <td>{@link #peek peek()}</td>
 *  </tr>
 * </table>
 *
 * <p>Queues typically, but do not necessarily, order elements in a
 * FIFO (first-in-first-out) manner.  Among the exceptions are
 * priority queues, which order elements according to a supplied
 * comparator, or the elements' natural ordering, and LIFO queues (or
 * stacks) which order the elements LIFO (last-in-first-out).
 * Whatever the ordering used, the <em>head</em> of the queue is that
 * element which would be removed by a call to {@link #remove() } or
 * {@link #poll()}.  In a FIFO queue, all new elements are inserted at
 * the <em> tail</em> of the queue. Other kinds of queues may use
 * different placement rules.  Every <tt>Queue</tt> implementation
 * must specify its ordering properties.
 *
 * <p>The {@link #offer offer} method inserts an element if possible,
 * otherwise returning <tt>false</tt>.  This differs from the {@link
 * java.util.Collection#add Collection.add} method, which can fail to
 * add an element only by throwing an unchecked exception.  The
 * <tt>offer</tt> method is designed for use when failure is a normal,
 * rather than exceptional occurrence, for example, in fixed-capacity
 * (or &quot;bounded&quot;) queues.
 *
 * <p>The {@link #remove()} and {@link #poll()} methods remove and
 * return the head of the queue.
 * Exactly which element is removed from the queue is a
 * function of the queue's ordering policy, which differs from
 * implementation to implementation. The <tt>remove()</tt> and
 * <tt>poll()</tt> methods differ only in their behavior when the
 * queue is empty: the <tt>remove()</tt> method throws an exception,
 * while the <tt>poll()</tt> method returns <tt>null</tt>.
 *
 * <p>The {@link #element()} and {@link #peek()} methods return, but do
 * not remove, the head of the queue.
 *
 * <p>The <tt>Queue</tt> interface does not define the <i>blocking queue
 * methods</i>, which are common in concurrent programming.  These methods,
 * which wait for elements to appear or for space to become available, are
 * defined in the {@link java.util.concurrent.BlockingQueue} interface, which
 * extends this interface.
 *
 * <p><tt>Queue</tt> implementations generally do not allow insertion
 * of <tt>null</tt> elements, although some implementations, such as
 * {@link LinkedList}, do not prohibit insertion of <tt>null</tt>.
 * Even in the implementations that permit it, <tt>null</tt> should
 * not be inserted into a <tt>Queue</tt>, as <tt>null</tt> is also
 * used as a special return value by the <tt>poll</tt> method to
 * indicate that the queue contains no elements.
 *
 * <p><tt>Queue</tt> implementations generally do not define
 * element-based versions of methods <tt>equals</tt> and
 * <tt>hashCode</tt> but instead inherit the identity based versions
 * from class <tt>Object</tt>, because element-based equality is not
 * always well-defined for queues with the same elements but different
 * ordering properties.
 *
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @see java.util.Collection
 * @see LinkedList
 * @see PriorityQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.BlockingQueue
 * @see java.util.concurrent.ArrayBlockingQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.PriorityBlockingQueue
 * @since 1.5
 * @author Doug Lea
 * @param <E> the type of elements held in this collection
 */
public interface Queue<E> extends Collection<E> {
    /**
     * Inserts the specified element into this queue if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt>
     * if no space is currently available.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean add(E e);

    /**
     * Inserts the specified element into this queue if it is possible to do
     * so immediately without violating capacity restrictions.
     * When using a capacity-restricted queue, this method is generally
     * preferable to {@link #add}, which can fail to insert an element only
     * by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this queue, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of this queue.  This method differs
     * from {@link #poll poll} only in that it throws an exception if this
     * queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of this queue.  This method
     * differs from {@link #peek peek} only in that it throws an exception
     * if this queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E peek();
}


/*
 * Copyright 2000-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Marker interface used by <tt>List</tt> implementations to indicate that
 * they support fast (generally constant time) random access.  The primary
 * purpose of this interface is to allow generic algorithms to alter their
 * behavior to provide good performance when applied to either random or
 * sequential access lists.
 *
 * <p>The best algorithms for manipulating random access lists (such as
 * <tt>ArrayList</tt>) can produce quadratic behavior when applied to
 * sequential access lists (such as <tt>LinkedList</tt>).  Generic list
 * algorithms are encouraged to check whether the given list is an
 * <tt>instanceof</tt> this interface before applying an algorithm that would
 * provide poor performance if it were applied to a sequential access list,
 * and to alter their behavior if necessary to guarantee acceptable
 * performance.
 *
 * <p>It is recognized that the distinction between random and sequential
 * access is often fuzzy.  For example, some <tt>List</tt> implementations
 * provide asymptotically linear access times if they get huge, but constant
 * access times in practice.  Such a <tt>List</tt> implementation
 * should generally implement this interface.  As a rule of thumb, a
 * <tt>List</tt> implementation should implement this interface if,
 * for typical instances of the class, this loop:
 * <pre>
 *     for (int i=0, n=list.size(); i &lt; n; i++)
 *         list.get(i);
 * </pre>
 * runs faster than this loop:
 * <pre>
 *     for (Iterator i=list.iterator(); i.hasNext(); )
 *         i.next();
 * </pre>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @since 1.4
 */
public interface RandomAccess {
}


package javaUtilEx;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that the requested operation is not supported.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @since   1.2
 */
public class UnsupportedOperationException extends RuntimeException {
    /**
     * Constructs an UnsupportedOperationException with no detail message.
     */
    public UnsupportedOperationException() {
    }

    /**
     * Constructs an UnsupportedOperationException with the specified
     * detail message.
     *
     * @param message the detail message
     */
    public UnsupportedOperationException(String message) {
        super(message);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public UnsupportedOperationException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public UnsupportedOperationException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1242599979055084673L;
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
javaUtilEx.juLinkedListCreateContains.main([Ljava/lang/String;)V: Graph of 1059 nodes with 8 SCCs.



javaUtilEx.juLinkedListCreateContains.createList(I)LjavaUtilEx/LinkedList;: Graph of 250 nodes with 1 SCC.



javaUtilEx.Content.equals(Ljava/lang/Object;)Z: Graph of 32 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 9 SCCss.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateContains.createList(I)LjavaUtilEx/LinkedList;
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*java.lang.String: [count]
*javaUtilEx.LinkedList: [header, size]
*javaUtilEx.LinkedList$Entry: [previous, next]
*javaUtilEx.AbstractList: [modCount]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(8) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 118 IRulesP rules:
f12521_0_createList_LE(EOS(STATIC_12521(java.lang.Object(o11577sub), i4226)), i4245, i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12529_0_createList_LE(EOS(STATIC_12529(java.lang.Object(o11577sub), i4226)), i4245, i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12529_0_createList_LE(EOS(STATIC_12529(java.lang.Object(o11577sub), i4226)), i4245, i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12537_0_createList_Load(EOS(STATIC_12537(java.lang.Object(o11577sub), i4226)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: i4245 > 0
f12537_0_createList_Load(EOS(STATIC_12537(java.lang.Object(o11577sub), i4226)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12546_0_createList_New(EOS(STATIC_12546(java.lang.Object(o11577sub), i4226)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12546_0_createList_New(EOS(STATIC_12546(java.lang.Object(o11577sub), i4226)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12554_0_createList_Duplicate(EOS(STATIC_12554(java.lang.Object(o11577sub), i4226)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12554_0_createList_Duplicate(EOS(STATIC_12554(java.lang.Object(o11577sub), i4226)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12561_0_createList_InvokeMethod(EOS(STATIC_12561(java.lang.Object(o11577sub), i4226)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12561_0_createList_InvokeMethod(EOS(STATIC_12561(java.lang.Object(o11577sub), i4226)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12569_0_random_FieldAccess(EOS(STATIC_12569(java.lang.Object(o11577sub), i4226)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12569_0_random_FieldAccess(EOS(STATIC_12569(java.lang.Object(o11577sub), i4226)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12579_0_random_FieldAccess(EOS(STATIC_12579(java.lang.Object(o11577sub), i4226)), i4245, java.lang.Object(o11577sub), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12579_0_random_FieldAccess(EOS(STATIC_12579(java.lang.Object(o11577sub), i4226)), i4245, java.lang.Object(o11577sub), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12587_0_random_ArrayAccess(EOS(STATIC_12587(java.lang.Object(o11577sub), i4226)), i4245, java.lang.Object(o11577sub), i4226, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12587_0_random_ArrayAccess(EOS(STATIC_12587(java.lang.Object(ARRAY(i4277)), i4226)), i4245, java.lang.Object(ARRAY(i4277)), i4226, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12592_0_random_ArrayAccess(EOS(STATIC_12592(java.lang.Object(ARRAY(i4277)), i4226)), i4245, java.lang.Object(ARRAY(i4277)), i4226, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: i4277 >= 0
f12592_0_random_ArrayAccess(EOS(STATIC_12592(java.lang.Object(ARRAY(i4277)), i4282)), i4245, java.lang.Object(ARRAY(i4277)), i4282, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12599_0_random_ArrayAccess(EOS(STATIC_12599(java.lang.Object(ARRAY(i4277)), i4282)), i4245, java.lang.Object(ARRAY(i4277)), i4282, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12599_0_random_ArrayAccess(EOS(STATIC_12599(java.lang.Object(ARRAY(i4277)), i4282)), i4245, java.lang.Object(ARRAY(i4277)), i4282, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12607_0_random_ArrayAccess(EOS(STATIC_12607(java.lang.Object(ARRAY(i4277)), i4282)), i4245, java.lang.Object(ARRAY(i4277)), i4282, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12607_0_random_ArrayAccess(EOS(STATIC_12607(java.lang.Object(ARRAY(i4277)), i4282)), i4245, java.lang.Object(ARRAY(i4277)), i4282, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12615_0_random_Store(EOS(STATIC_12615(java.lang.Object(ARRAY(i4277)), i4282)), i4245, o11818, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: i4282 < i4277
f12615_0_random_Store(EOS(STATIC_12615(java.lang.Object(ARRAY(i4277)), i4282)), i4245, o11818, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12625_0_random_FieldAccess(EOS(STATIC_12625(java.lang.Object(ARRAY(i4277)), i4282)), i4245, o11818, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12625_0_random_FieldAccess(EOS(STATIC_12625(java.lang.Object(ARRAY(i4277)), i4282)), i4245, o11818, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12634_0_random_ConstantStackPush(EOS(STATIC_12634(java.lang.Object(ARRAY(i4277)), i4282)), i4245, o11818, i4282, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12634_0_random_ConstantStackPush(EOS(STATIC_12634(java.lang.Object(ARRAY(i4277)), i4282)), i4245, o11818, i4282, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12644_0_random_IntArithmetic(EOS(STATIC_12644(java.lang.Object(ARRAY(i4277)), i4282)), i4245, o11818, i4282, 1, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12644_0_random_IntArithmetic(EOS(STATIC_12644(java.lang.Object(ARRAY(i4277)), i4282)), i4245, o11818, i4282, matching1, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12653_0_random_FieldAccess(EOS(STATIC_12653(java.lang.Object(ARRAY(i4277)), i4282)), i4245, o11818, i4282 + 1, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: i4282 >= 0 && matching1 = 1
f12653_0_random_FieldAccess(EOS(STATIC_12653(java.lang.Object(ARRAY(i4277)), i4282)), i4245, o11818, i4341, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12660_0_random_Load(EOS(STATIC_12660(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11818, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12660_0_random_Load(EOS(STATIC_12660(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11818, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12667_0_random_InvokeMethod(EOS(STATIC_12667(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11818, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12667_0_random_InvokeMethod(EOS(STATIC_12667(java.lang.Object(ARRAY(i4277)), i4341)), i4245, java.lang.Object(o12200sub), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12677_0_random_InvokeMethod(EOS(STATIC_12677(java.lang.Object(ARRAY(i4277)), i4341)), i4245, java.lang.Object(o12200sub), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12677_0_random_InvokeMethod(EOS(STATIC_12677(java.lang.Object(ARRAY(i4277)), i4341)), i4245, java.lang.Object(o12211sub), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12688_0_random_InvokeMethod(EOS(STATIC_12688(java.lang.Object(ARRAY(i4277)), i4341)), i4245, java.lang.Object(o12211sub), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12688_0_random_InvokeMethod(EOS(STATIC_12688(java.lang.Object(ARRAY(i4277)), i4341)), i4245, java.lang.Object(o12211sub), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12700_0_length_Load(EOS(STATIC_12700(java.lang.Object(ARRAY(i4277)), i4341)), i4245, java.lang.Object(o12211sub), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12700_0_length_Load(EOS(STATIC_12700(java.lang.Object(ARRAY(i4277)), i4341)), i4245, java.lang.Object(o12211sub), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12729_0_length_FieldAccess(EOS(STATIC_12729(java.lang.Object(ARRAY(i4277)), i4341)), i4245, java.lang.Object(o12211sub), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12729_0_length_FieldAccess(EOS(STATIC_12729(java.lang.Object(ARRAY(i4277)), i4341)), i4245, java.lang.Object(java.lang.String(EOC, i4394)), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12746_0_length_FieldAccess(EOS(STATIC_12746(java.lang.Object(ARRAY(i4277)), i4341)), i4245, java.lang.Object(java.lang.String(EOC, i4394)), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12746_0_length_FieldAccess(EOS(STATIC_12746(java.lang.Object(ARRAY(i4277)), i4341)), i4245, java.lang.Object(java.lang.String(EOC, i4394)), o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12761_0_length_Return(EOS(STATIC_12761(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12761_0_length_Return(EOS(STATIC_12761(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12775_0_random_Return(EOS(STATIC_12775(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12775_0_random_Return(EOS(STATIC_12775(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12788_0_createList_InvokeMethod(EOS(STATIC_12788(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12788_0_createList_InvokeMethod(EOS(STATIC_12788(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12800_0__init__Load(EOS(STATIC_12800(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12800_0__init__Load(EOS(STATIC_12800(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12821_0__init__InvokeMethod(EOS(STATIC_12821(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12821_0__init__InvokeMethod(EOS(STATIC_12821(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12835_0__init__Load(EOS(STATIC_12835(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12835_0__init__Load(EOS(STATIC_12835(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12846_0__init__Load(EOS(STATIC_12846(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12846_0__init__Load(EOS(STATIC_12846(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12861_0__init__FieldAccess(EOS(STATIC_12861(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12861_0__init__FieldAccess(EOS(STATIC_12861(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12879_0__init__Return(EOS(STATIC_12879(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12879_0__init__Return(EOS(STATIC_12879(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12899_0_createList_InvokeMethod(EOS(STATIC_12899(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12899_0_createList_InvokeMethod(EOS(STATIC_12899(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12921_0_addLast_Load(EOS(STATIC_12921(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12921_0_addLast_Load(EOS(STATIC_12921(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12960_0_addLast_Load(EOS(STATIC_12960(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12960_0_addLast_Load(EOS(STATIC_12960(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12986_0_addLast_Load(EOS(STATIC_12986(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f12986_0_addLast_Load(EOS(STATIC_12986(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13002_0_addLast_FieldAccess(EOS(STATIC_13002(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13002_0_addLast_FieldAccess(EOS(STATIC_13002(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13016_0_addLast_InvokeMethod(EOS(STATIC_13016(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13016_0_addLast_InvokeMethod(EOS(STATIC_13016(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13029_0_addBefore_New(EOS(STATIC_13029(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13029_0_addBefore_New(EOS(STATIC_13029(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13056_0_addBefore_Duplicate(EOS(STATIC_13056(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13056_0_addBefore_Duplicate(EOS(STATIC_13056(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13074_0_addBefore_Load(EOS(STATIC_13074(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13074_0_addBefore_Load(EOS(STATIC_13074(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13091_0_addBefore_Load(EOS(STATIC_13091(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13091_0_addBefore_Load(EOS(STATIC_13091(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13104_0_addBefore_Load(EOS(STATIC_13104(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13104_0_addBefore_Load(EOS(STATIC_13104(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13110_0_addBefore_FieldAccess(EOS(STATIC_13110(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13110_0_addBefore_FieldAccess(EOS(STATIC_13110(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13116_0_addBefore_FieldAccess(EOS(STATIC_13116(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: o11582[LinkedList$Entry.next]o11582 > 0 && o11582[LinkedList$Entry.next]o11580 > 0 && o11582[LinkedList$Entry.previous]o11580 > 0 && o11582[LinkedList$Entry.previous]o11582 > 0
f13116_0_addBefore_FieldAccess(EOS(STATIC_13116(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13127_0_addBefore_FieldAccess(EOS(STATIC_13127(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: o11581[LinkedList$Entry.previous]o11581 > 0 && o11581[LinkedList$Entry.previous]o11580 > 0
f13127_0_addBefore_FieldAccess(EOS(STATIC_13127(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13138_0_addBefore_FieldAccess(EOS(STATIC_13138(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: o11583[LinkedList$Entry.previous]o11580 > 0 && o11583[LinkedList$Entry.previous]o11583 > 0
f13138_0_addBefore_FieldAccess(EOS(STATIC_13138(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13147_0_addBefore_InvokeMethod(EOS(STATIC_13147(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13147_0_addBefore_InvokeMethod(EOS(STATIC_13147(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13156_0__init__Load(EOS(STATIC_13156(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13156_0__init__Load(EOS(STATIC_13156(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13180_0__init__InvokeMethod(EOS(STATIC_13180(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13180_0__init__InvokeMethod(EOS(STATIC_13180(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13199_0__init__Load(EOS(STATIC_13199(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13199_0__init__Load(EOS(STATIC_13199(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13221_0__init__Load(EOS(STATIC_13221(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13221_0__init__Load(EOS(STATIC_13221(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13241_0__init__FieldAccess(EOS(STATIC_13241(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13241_0__init__FieldAccess(EOS(STATIC_13241(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13256_0__init__Load(EOS(STATIC_13256(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13256_0__init__Load(EOS(STATIC_13256(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13271_0__init__Load(EOS(STATIC_13271(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13271_0__init__Load(EOS(STATIC_13271(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13283_0__init__FieldAccess(EOS(STATIC_13283(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13283_0__init__FieldAccess(EOS(STATIC_13283(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13323_0__init__Load(EOS(STATIC_13323(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13323_0__init__Load(EOS(STATIC_13323(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13341_0__init__Load(EOS(STATIC_13341(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13341_0__init__Load(EOS(STATIC_13341(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13362_0__init__FieldAccess(EOS(STATIC_13362(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13362_0__init__FieldAccess(EOS(STATIC_13362(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13383_0__init__Return(EOS(STATIC_13383(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13383_0__init__Return(EOS(STATIC_13383(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13405_0_addBefore_Store(EOS(STATIC_13405(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13405_0_addBefore_Store(EOS(STATIC_13405(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13429_0_addBefore_Load(EOS(STATIC_13429(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13429_0_addBefore_Load(EOS(STATIC_13429(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13451_0_addBefore_FieldAccess(EOS(STATIC_13451(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13451_0_addBefore_FieldAccess(EOS(STATIC_13451(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13472_0_addBefore_Load(EOS(STATIC_13472(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13472_0_addBefore_Load(EOS(STATIC_13472(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13489_0_addBefore_FieldAccess(EOS(STATIC_13489(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13489_0_addBefore_FieldAccess(EOS(STATIC_13489(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f13506_0_addBefore_FieldAccess(EOS(STATIC_13506(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: o11582[LinkedList$Entry.next]o11582 > 0 && o11583[LinkedList$Entry.previous]o11582 > 0 && o11582[LinkedList$Entry.previous]o11582 > 0 && o11582[LinkedList$Entry.next]o11583 > 0 && o11582[LinkedList$Entry.previous]o11583 > 0 && o11583[LinkedList$Entry.previous]o11583 > 0
f13489_0_addBefore_FieldAccess(EOS(STATIC_13489(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.next]o11581, o16591[LinkedList$Entry.previous]o11581, o16591[LinkedList$Entry.previous]o11581, o16591[LinkedList$Entry.next]o16591, o16591[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.next]o16591, o16591[LinkedList$Entry.previous]o16591, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13507_0_addBefore_FieldAccess(EOS(STATIC_13507(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13506_0_addBefore_FieldAccess(EOS(STATIC_13506(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13516_0_addBefore_FieldAccess(EOS(STATIC_13516(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: o11583[LinkedList$Entry.previous]o11581 > 0 && o11581[LinkedList$Entry.previous]o11581 > 0 && o11581[LinkedList$Entry.previous]o11583 > 0 && o11583[LinkedList$Entry.previous]o11583 > 0
f13516_0_addBefore_FieldAccess(EOS(STATIC_13516(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13529_0_addBefore_Load(EOS(STATIC_13529(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13529_0_addBefore_Load(EOS(STATIC_13529(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13539_0_addBefore_FieldAccess(EOS(STATIC_13539(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13539_0_addBefore_FieldAccess(EOS(STATIC_13539(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13548_0_addBefore_Load(EOS(STATIC_13548(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13548_0_addBefore_Load(EOS(STATIC_13548(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13559_0_addBefore_FieldAccess(EOS(STATIC_13559(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13559_0_addBefore_FieldAccess(EOS(STATIC_13559(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13572_0_addBefore_Load(EOS(STATIC_13572(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13572_0_addBefore_Load(EOS(STATIC_13572(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13583_0_addBefore_Duplicate(EOS(STATIC_13583(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13583_0_addBefore_Duplicate(EOS(STATIC_13583(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13595_0_addBefore_FieldAccess(EOS(STATIC_13595(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13595_0_addBefore_FieldAccess(EOS(STATIC_13595(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13608_0_addBefore_ConstantStackPush(EOS(STATIC_13608(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13608_0_addBefore_ConstantStackPush(EOS(STATIC_13608(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13623_0_addBefore_IntArithmetic(EOS(STATIC_13623(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13623_0_addBefore_IntArithmetic(EOS(STATIC_13623(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13640_0_addBefore_FieldAccess(EOS(STATIC_13640(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13640_0_addBefore_FieldAccess(EOS(STATIC_13640(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13657_0_addBefore_Load(EOS(STATIC_13657(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13657_0_addBefore_Load(EOS(STATIC_13657(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13667_0_addBefore_Duplicate(EOS(STATIC_13667(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13667_0_addBefore_Duplicate(EOS(STATIC_13667(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13694_0_addBefore_FieldAccess(EOS(STATIC_13694(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13694_0_addBefore_FieldAccess(EOS(STATIC_13694(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13709_0_addBefore_ConstantStackPush(EOS(STATIC_13709(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13709_0_addBefore_ConstantStackPush(EOS(STATIC_13709(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13724_0_addBefore_IntArithmetic(EOS(STATIC_13724(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13724_0_addBefore_IntArithmetic(EOS(STATIC_13724(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13741_0_addBefore_FieldAccess(EOS(STATIC_13741(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13741_0_addBefore_FieldAccess(EOS(STATIC_13741(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13752_0_addBefore_Load(EOS(STATIC_13752(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13752_0_addBefore_Load(EOS(STATIC_13752(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13766_0_addBefore_Return(EOS(STATIC_13766(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13766_0_addBefore_Return(EOS(STATIC_13766(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13788_0_addLast_StackPop(EOS(STATIC_13788(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13788_0_addLast_StackPop(EOS(STATIC_13788(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13806_0_addLast_Return(EOS(STATIC_13806(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13806_0_addLast_Return(EOS(STATIC_13806(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13824_0_createList_Inc(EOS(STATIC_13824(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13824_0_createList_Inc(EOS(STATIC_13824(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13839_0_createList_JMP(EOS(STATIC_13839(java.lang.Object(ARRAY(i4277)), i4341)), i4245 + -1, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13839_0_createList_JMP(EOS(STATIC_13839(java.lang.Object(ARRAY(i4277)), i4341)), i6324, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f13853_0_createList_Load(EOS(STATIC_13853(java.lang.Object(ARRAY(i4277)), i4341)), i6324, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) :|: TRUE
f13853_0_createList_Load(EOS(STATIC_13853(java.lang.Object(ARRAY(i4277)), i4341)), i6324, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583, o11582[LinkedList$Entry.previous]o11583) -> f12516_0_createList_Load(EOS(STATIC_12516(java.lang.Object(ARRAY(i4277)), i4341)), i6324, o11582[LinkedList$Entry.next]o11581, o13266[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o13266[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o13266[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o13266, o11582[LinkedList$Entry.previous]o13266, o11581[LinkedList$Entry.previous]o13266, o13266[LinkedList$Entry.previous]o13266) :|: TRUE
f12516_0_createList_Load(EOS(STATIC_12516(java.lang.Object(o11577sub), i4226)), i4228, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) -> f12521_0_createList_LE(EOS(STATIC_12521(java.lang.Object(o11577sub), i4226)), i4228, i4228, o11582[LinkedList$Entry.next]o11581, o11583[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.previous]o11581, o11582[LinkedList$Entry.next]o11582, o11582[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o11583[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o11582, o11583[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.previous]o11580, o11582[LinkedList$Entry.previous]o11582, o11582[LinkedList$Entry.next]o11583, o11582[LinkedList$Entry.previous]o11583, o11581[LinkedList$Entry.previous]o11583, o11583[LinkedList$Entry.previous]o11583) :|: TRUE
f13507_0_addBefore_FieldAccess(EOS(STATIC_13507(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13518_0_addBefore_FieldAccess(EOS(STATIC_13518(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: o16591[LinkedList$Entry.previous]o11581 > 0 && o11581[LinkedList$Entry.previous]o11581 > 0 && o11581[LinkedList$Entry.previous]o16591 > 0 && o16591[LinkedList$Entry.previous]o16591 > 0
f13518_0_addBefore_FieldAccess(EOS(STATIC_13518(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13530_0_addBefore_Load(EOS(STATIC_13530(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13530_0_addBefore_Load(EOS(STATIC_13530(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13540_0_addBefore_FieldAccess(EOS(STATIC_13540(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13540_0_addBefore_FieldAccess(EOS(STATIC_13540(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13549_0_addBefore_Load(EOS(STATIC_13549(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13549_0_addBefore_Load(EOS(STATIC_13549(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13560_0_addBefore_FieldAccess(EOS(STATIC_13560(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13560_0_addBefore_FieldAccess(EOS(STATIC_13560(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13573_0_addBefore_Load(EOS(STATIC_13573(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13573_0_addBefore_Load(EOS(STATIC_13573(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13584_0_addBefore_Duplicate(EOS(STATIC_13584(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13584_0_addBefore_Duplicate(EOS(STATIC_13584(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13596_0_addBefore_FieldAccess(EOS(STATIC_13596(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13596_0_addBefore_FieldAccess(EOS(STATIC_13596(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13609_0_addBefore_ConstantStackPush(EOS(STATIC_13609(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13609_0_addBefore_ConstantStackPush(EOS(STATIC_13609(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13624_0_addBefore_IntArithmetic(EOS(STATIC_13624(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13624_0_addBefore_IntArithmetic(EOS(STATIC_13624(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13641_0_addBefore_FieldAccess(EOS(STATIC_13641(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13641_0_addBefore_FieldAccess(EOS(STATIC_13641(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13658_0_addBefore_Load(EOS(STATIC_13658(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13658_0_addBefore_Load(EOS(STATIC_13658(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13668_0_addBefore_Duplicate(EOS(STATIC_13668(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13668_0_addBefore_Duplicate(EOS(STATIC_13668(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13695_0_addBefore_FieldAccess(EOS(STATIC_13695(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13695_0_addBefore_FieldAccess(EOS(STATIC_13695(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13710_0_addBefore_ConstantStackPush(EOS(STATIC_13710(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13710_0_addBefore_ConstantStackPush(EOS(STATIC_13710(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13725_0_addBefore_IntArithmetic(EOS(STATIC_13725(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13725_0_addBefore_IntArithmetic(EOS(STATIC_13725(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13742_0_addBefore_FieldAccess(EOS(STATIC_13742(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13742_0_addBefore_FieldAccess(EOS(STATIC_13742(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13753_0_addBefore_Load(EOS(STATIC_13753(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13753_0_addBefore_Load(EOS(STATIC_13753(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13767_0_addBefore_Return(EOS(STATIC_13767(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13767_0_addBefore_Return(EOS(STATIC_13767(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13789_0_addLast_StackPop(EOS(STATIC_13789(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13789_0_addLast_StackPop(EOS(STATIC_13789(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13807_0_addLast_Return(EOS(STATIC_13807(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13807_0_addLast_Return(EOS(STATIC_13807(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13825_0_createList_Inc(EOS(STATIC_13825(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13825_0_createList_Inc(EOS(STATIC_13825(java.lang.Object(ARRAY(i4277)), i4341)), i4245, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13840_0_createList_JMP(EOS(STATIC_13840(java.lang.Object(ARRAY(i4277)), i4341)), i4245 + -1, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13840_0_createList_JMP(EOS(STATIC_13840(java.lang.Object(ARRAY(i4277)), i4341)), i6325, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f13854_0_createList_Load(EOS(STATIC_13854(java.lang.Object(ARRAY(i4277)), i4341)), i6325, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) :|: TRUE
f13854_0_createList_Load(EOS(STATIC_13854(java.lang.Object(ARRAY(i4277)), i4341)), i6325, o16591[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o16591) -> f12516_0_createList_Load(EOS(STATIC_12516(java.lang.Object(ARRAY(i4277)), i4341)), i6325, o16591[LinkedList$Entry.next]o11581, o13266[LinkedList$Entry.previous]o11581, o16591[LinkedList$Entry.previous]o11581, o16591[LinkedList$Entry.next]o16591, o16591[LinkedList$Entry.next]o11580, o11581[LinkedList$Entry.previous]o11581, o11581[LinkedList$Entry.previous]o11580, o13266[LinkedList$Entry.previous]o11580, o11581[LinkedList$Entry.previous]o16591, o13266[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.previous]o11580, o16591[LinkedList$Entry.previous]o16591, o16591[LinkedList$Entry.next]o13266, o16591[LinkedList$Entry.previous]o13266, o11581[LinkedList$Entry.previous]o13266, o13266[LinkedList$Entry.previous]o13266) :|: o16591[LinkedList$Entry.next]o16591 = 4 && o13266[LinkedList$Entry.previous]o16591 = 1 && o16591[LinkedList$Entry.next]o13266 = 1
Combined rules. Obtained 2 IRulesP rules:
f12521_0_createList_LE(EOS(STATIC_12521(java.lang.Object(ARRAY(i4277:0)), i4226:0)), i4245:0, i4245:0, o11582[LinkedList$Entry.next]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.next]o11582:0, o11582[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.next]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0) -> f12521_0_createList_LE(EOS(STATIC_12521(java.lang.Object(ARRAY(i4277:0)), i4226:0 + 1)), i4245:0 - 1, i4245:0 - 1, o16591[LinkedList$Entry.next]o11581:0, o13266[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, 4, o16591[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o13266[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, 1, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, 1, o16591[LinkedList$Entry.previous]o13266:0, o11581[LinkedList$Entry.previous]o13266:0, o13266[LinkedList$Entry.previous]o13266:0) :|: i4245:0 > 0 && i4277:0 > -1 && i4277:0 > i4226:0 && i4226:0 > -1 && o11582[LinkedList$Entry.next]o11580:0 > 0 && o11582[LinkedList$Entry.next]o11582:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0 > 0 && o11581[LinkedList$Entry.previous]o11582:0 > 0
f12521_0_createList_LE(EOS(STATIC_12521(java.lang.Object(ARRAY(i4277:0)), i4226:0)), i4245:0, i4245:0, o11582[LinkedList$Entry.next]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.next]o11582:0, o11582[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.previous]o11580:0, o11582[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.next]o11583:0, o11582[LinkedList$Entry.previous]o11583:0, o11581[LinkedList$Entry.previous]o11583:0, o11583[LinkedList$Entry.previous]o11583:0) -> f12521_0_createList_LE(EOS(STATIC_12521(java.lang.Object(ARRAY(i4277:0)), i4226:0 + 1)), i4245:0 - 1, i4245:0 - 1, o11582[LinkedList$Entry.next]o11581:0, o13266[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.next]o11582:0, o11582[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o13266[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, o13266[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.previous]o11580:0, o11582[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.next]o13266:0, o11582[LinkedList$Entry.previous]o13266:0, o11581[LinkedList$Entry.previous]o13266:0, o13266[LinkedList$Entry.previous]o13266:0) :|: i4245:0 > 0 && i4277:0 > -1 && i4277:0 > i4226:0 && i4226:0 > -1 && o11582[LinkedList$Entry.next]o11580:0 > 0 && o11582[LinkedList$Entry.next]o11582:0 > 0 && o11582[LinkedList$Entry.previous]o11580:0 > 0 && o11582[LinkedList$Entry.previous]o11582:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0 > 0 && o11583[LinkedList$Entry.previous]o11583:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0 > 0 && o11582[LinkedList$Entry.next]o11583:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0 > 0 && o11582[LinkedList$Entry.previous]o11583:0 > 0 && o11581[LinkedList$Entry.previous]o11583:0 > 0
Filtered duplicate arguments:
   f12521_0_createList_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f12521_0_createList_LE(x1, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)
Filtered unneeded arguments:
   f12521_0_createList_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f12521_0_createList_LE(x1, x2, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)
Finished conversion. Obtained 2 rules.P rules:
f12521_0_createList_LE(i4245:0, o11583[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.next]o11582:0, o11582[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.next]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, i4277:0, i4226:0) -> f12521_0_createList_LE(i4245:0 - 1, o13266[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, 4, o16591[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o13266[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, 1, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, 1, o16591[LinkedList$Entry.previous]o13266:0, o11581[LinkedList$Entry.previous]o13266:0, o13266[LinkedList$Entry.previous]o13266:0, i4277:0, i4226:0 + 1) :|: i4277:0 > -1 && i4245:0 > 0 && i4277:0 > i4226:0 && i4226:0 > -1 && o11582[LinkedList$Entry.next]o11580:0 > 0 && o11582[LinkedList$Entry.next]o11582:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0 > 0 && o11581[LinkedList$Entry.previous]o11582:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0 > 0
f12521_0_createList_LE(i4245:0, o11583[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.next]o11582:0, o11582[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.previous]o11580:0, o11582[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.next]o11583:0, o11582[LinkedList$Entry.previous]o11583:0, o11581[LinkedList$Entry.previous]o11583:0, o11583[LinkedList$Entry.previous]o11583:0, i4277:0, i4226:0) -> f12521_0_createList_LE(i4245:0 - 1, o13266[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.next]o11582:0, o11582[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o13266[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, o13266[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.previous]o11580:0, o11582[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.next]o13266:0, o11582[LinkedList$Entry.previous]o13266:0, o11581[LinkedList$Entry.previous]o13266:0, o13266[LinkedList$Entry.previous]o13266:0, i4277:0, i4226:0 + 1) :|: i4277:0 > -1 && i4245:0 > 0 && i4277:0 > i4226:0 && i4226:0 > -1 && o11582[LinkedList$Entry.next]o11580:0 > 0 && o11582[LinkedList$Entry.next]o11582:0 > 0 && o11582[LinkedList$Entry.previous]o11580:0 > 0 && o11582[LinkedList$Entry.previous]o11582:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0 > 0 && o11583[LinkedList$Entry.previous]o11583:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0 > 0 && o11582[LinkedList$Entry.next]o11583:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0 > 0 && o11581[LinkedList$Entry.previous]o11583:0 > 0 && o11582[LinkedList$Entry.previous]o11583:0 > 0

----------------------------------------

(9)
Obligation:
Rules:
f12521_0_createList_LE(i4245:0, o11583[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.next]o11582:0, o11582[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.next]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, i4277:0, i4226:0) -> f12521_0_createList_LE(i4245:0 - 1, o13266[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, 4, o16591[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o13266[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, 1, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, 1, o16591[LinkedList$Entry.previous]o13266:0, o11581[LinkedList$Entry.previous]o13266:0, o13266[LinkedList$Entry.previous]o13266:0, i4277:0, i4226:0 + 1) :|: i4277:0 > -1 && i4245:0 > 0 && i4277:0 > i4226:0 && i4226:0 > -1 && o11582[LinkedList$Entry.next]o11580:0 > 0 && o11582[LinkedList$Entry.next]o11582:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0 > 0 && o11581[LinkedList$Entry.previous]o11582:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0 > 0
f12521_0_createList_LE(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17) -> f12521_0_createList_LE(x - 1, x18, x2, x3, x4, x5, x6, x19, x8, x20, x10, x11, x21, x22, x23, x24, x16, x17 + 1) :|: x16 > -1 && x > 0 && x16 > x17 && x17 > -1 && x4 > 0 && x3 > 0 && x10 > 0 && x11 > 0 && x6 > 0 && x5 > 0 && x15 > 0 && x7 > 0 && x9 > 0 && x12 > 0 && x1 > 0 && x14 > 0 && x13 > 0

----------------------------------------

(10) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(11)
Obligation:
Rules:
f12521_0_createList_LE(i4245:0, o11583[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.next]o11582:0, o11582[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.next]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, i4277:0, i4226:0) -> f12521_0_createList_LE(arith, o13266[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, 4, o16591[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o13266[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, 1, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, 1, o16591[LinkedList$Entry.previous]o13266:0, o11581[LinkedList$Entry.previous]o13266:0, o13266[LinkedList$Entry.previous]o13266:0, i4277:0, arith1) :|: i4277:0 > -1 && i4245:0 > 0 && i4277:0 > i4226:0 && i4226:0 > -1 && o11582[LinkedList$Entry.next]o11580:0 > 0 && o11582[LinkedList$Entry.next]o11582:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0 > 0 && o11581[LinkedList$Entry.previous]o11582:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0 > 0 && arith = i4245:0 - 1 && arith1 = i4226:0 + 1
f12521_0_createList_LE(x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f12521_0_createList_LE(x43, x44, x27, x28, x29, x30, x31, x45, x33, x46, x35, x36, x47, x48, x49, x50, x41, x51) :|: x41 > -1 && x25 > 0 && x41 > x42 && x42 > -1 && x29 > 0 && x28 > 0 && x35 > 0 && x36 > 0 && x31 > 0 && x30 > 0 && x40 > 0 && x32 > 0 && x34 > 0 && x37 > 0 && x26 > 0 && x39 > 0 && x38 > 0 && x43 = x25 - 1 && x51 = x42 + 1

----------------------------------------

(12) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12521_0_createList_LE(i4245:0, o11583[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.next]o11582:0, o11582[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.next]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, i4277:0, i4226:0) -> f12521_0_createList_LE(arith, o13266[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, 4, o16591[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o13266[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, 1, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, 1, o16591[LinkedList$Entry.previous]o13266:0, o11581[LinkedList$Entry.previous]o13266:0, o13266[LinkedList$Entry.previous]o13266:0, i4277:0, arith1) :|: i4277:0 > -1 && i4245:0 > 0 && i4277:0 > i4226:0 && i4226:0 > -1 && o11582[LinkedList$Entry.next]o11580:0 > 0 && o11582[LinkedList$Entry.next]o11582:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0 > 0 && o11581[LinkedList$Entry.previous]o11582:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0 > 0 && arith = i4245:0 - 1 && arith1 = i4226:0 + 1
(2) f12521_0_createList_LE(x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f12521_0_createList_LE(x43, x44, x27, x28, x29, x30, x31, x45, x33, x46, x35, x36, x47, x48, x49, x50, x41, x51) :|: x41 > -1 && x25 > 0 && x41 > x42 && x42 > -1 && x29 > 0 && x28 > 0 && x35 > 0 && x36 > 0 && x31 > 0 && x30 > 0 && x40 > 0 && x32 > 0 && x34 > 0 && x37 > 0 && x26 > 0 && x39 > 0 && x38 > 0 && x43 = x25 - 1 && x51 = x42 + 1

Arcs:
(1) -> (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f12521_0_createList_LE(i4245:0, o11583[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, o11582[LinkedList$Entry.next]o11582:0, o11582[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, o11582[LinkedList$Entry.next]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, o11581[LinkedList$Entry.previous]o11582:0, o11583[LinkedList$Entry.previous]o11582:0, i4277:0, i4226:0) -> f12521_0_createList_LE(arith, o13266[LinkedList$Entry.previous]o11581:0, o11583[LinkedList$Entry.previous]o11581:0, 4, o16591[LinkedList$Entry.next]o11580:0, o11581[LinkedList$Entry.previous]o11581:0, o11581[LinkedList$Entry.previous]o11580:0, o13266[LinkedList$Entry.previous]o11580:0, o11581[LinkedList$Entry.previous]o11582:0, 1, o11583[LinkedList$Entry.previous]o11580:0, o11583[LinkedList$Entry.previous]o11582:0, 1, o16591[LinkedList$Entry.previous]o13266:0, o11581[LinkedList$Entry.previous]o13266:0, o13266[LinkedList$Entry.previous]o13266:0, i4277:0, arith1) :|: i4277:0 > -1 && i4245:0 > 0 && i4277:0 > i4226:0 && i4226:0 > -1 && o11582[LinkedList$Entry.next]o11580:0 > 0 && o11582[LinkedList$Entry.next]o11582:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0 > 0 && o11581[LinkedList$Entry.previous]o11582:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0 > 0 && arith = i4245:0 - 1 && arith1 = i4226:0 + 1
(2) f12521_0_createList_LE(x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f12521_0_createList_LE(x43, x44, x27, x28, x29, x30, x31, x45, x33, x46, x35, x36, x47, x48, x49, x50, x41, x51) :|: x41 > -1 && x25 > 0 && x41 > x42 && x42 > -1 && x29 > 0 && x28 > 0 && x35 > 0 && x36 > 0 && x31 > 0 && x30 > 0 && x40 > 0 && x32 > 0 && x34 > 0 && x37 > 0 && x26 > 0 && x39 > 0 && x38 > 0 && x43 = x25 - 1 && x51 = x42 + 1

Arcs:
(1) -> (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f12521_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12521_0_createList_LE(x25:0 - 1, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, x42:0 + 1) :|: x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1
f12521_0_createList_LE(i4245:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11582[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, i4277:0:0, i4226:0:0) -> f12521_0_createList_LE(i4245:0:0 - 1, o13266[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, 4, o16591[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o13266[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, 1, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, 1, o16591[LinkedList$Entry.previous]o13266:0:0, o11581[LinkedList$Entry.previous]o13266:0:0, o13266[LinkedList$Entry.previous]o13266:0:0, i4277:0:0, i4226:0:0 + 1) :|: o11581[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0:0 > 0 && o11582[LinkedList$Entry.next]o11582:0:0 > 0 && o11582[LinkedList$Entry.next]o11580:0:0 > 0 && i4226:0:0 > -1 && i4277:0:0 > i4226:0:0 && i4245:0:0 > 0 && i4277:0:0 > -1

----------------------------------------

(16) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12521_0_createList_LE(INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(17)
Obligation:
Rules:
f12521_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12521_0_createList_LE(c, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, c1) :|: c1 = x42:0 + 1 && c = x25:0 - 1 && (x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1)
f12521_0_createList_LE(i4245:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11582[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, i4277:0:0, i4226:0:0) -> f12521_0_createList_LE(c2, o13266[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, c3, o16591[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o13266[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, c4, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, c5, o16591[LinkedList$Entry.previous]o13266:0:0, o11581[LinkedList$Entry.previous]o13266:0:0, o13266[LinkedList$Entry.previous]o13266:0:0, i4277:0:0, c6) :|: c6 = i4226:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i4245:0:0 - 1))) && (o11581[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0:0 > 0 && o11582[LinkedList$Entry.next]o11582:0:0 > 0 && o11582[LinkedList$Entry.next]o11580:0:0 > 0 && i4226:0:0 > -1 && i4277:0:0 > i4226:0:0 && i4245:0:0 > 0 && i4277:0:0 > -1)

----------------------------------------

(18) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12521_0_createList_LE(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17)] = 3*x + x3

The following rules are decreasing:
f12521_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12521_0_createList_LE(c, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, c1) :|: c1 = x42:0 + 1 && c = x25:0 - 1 && (x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1)
The following rules are bounded:
f12521_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12521_0_createList_LE(c, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, c1) :|: c1 = x42:0 + 1 && c = x25:0 - 1 && (x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1)
f12521_0_createList_LE(i4245:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11582[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, i4277:0:0, i4226:0:0) -> f12521_0_createList_LE(c2, o13266[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, c3, o16591[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o13266[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, c4, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, c5, o16591[LinkedList$Entry.previous]o13266:0:0, o11581[LinkedList$Entry.previous]o13266:0:0, o13266[LinkedList$Entry.previous]o13266:0:0, i4277:0:0, c6) :|: c6 = i4226:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i4245:0:0 - 1))) && (o11581[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0:0 > 0 && o11582[LinkedList$Entry.next]o11582:0:0 > 0 && o11582[LinkedList$Entry.next]o11580:0:0 > 0 && i4226:0:0 > -1 && i4277:0:0 > i4226:0:0 && i4245:0:0 > 0 && i4277:0:0 > -1)

----------------------------------------

(19)
Obligation:
Rules:
f12521_0_createList_LE(i4245:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11582[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, i4277:0:0, i4226:0:0) -> f12521_0_createList_LE(c2, o13266[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, c3, o16591[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o13266[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, c4, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, c5, o16591[LinkedList$Entry.previous]o13266:0:0, o11581[LinkedList$Entry.previous]o13266:0:0, o13266[LinkedList$Entry.previous]o13266:0:0, i4277:0:0, c6) :|: c6 = i4226:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i4245:0:0 - 1))) && (o11581[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0:0 > 0 && o11582[LinkedList$Entry.next]o11582:0:0 > 0 && o11582[LinkedList$Entry.next]o11580:0:0 > 0 && i4226:0:0 > -1 && i4277:0:0 > i4226:0:0 && i4245:0:0 > 0 && i4277:0:0 > -1)

----------------------------------------

(20) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12521_0_createList_LE(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17)] = x12 + 2*x17 - x3

The following rules are decreasing:
f12521_0_createList_LE(i4245:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11582[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, i4277:0:0, i4226:0:0) -> f12521_0_createList_LE(c2, o13266[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, c3, o16591[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o13266[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, c4, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, c5, o16591[LinkedList$Entry.previous]o13266:0:0, o11581[LinkedList$Entry.previous]o13266:0:0, o13266[LinkedList$Entry.previous]o13266:0:0, i4277:0:0, c6) :|: c6 = i4226:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i4245:0:0 - 1))) && (o11581[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0:0 > 0 && o11582[LinkedList$Entry.next]o11582:0:0 > 0 && o11582[LinkedList$Entry.next]o11580:0:0 > 0 && i4226:0:0 > -1 && i4277:0:0 > i4226:0:0 && i4245:0:0 > 0 && i4277:0:0 > -1)
The following rules are bounded:
f12521_0_createList_LE(i4245:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11582[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11582[LinkedList$Entry.next]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, i4277:0:0, i4226:0:0) -> f12521_0_createList_LE(c2, o13266[LinkedList$Entry.previous]o11581:0:0, o11583[LinkedList$Entry.previous]o11581:0:0, c3, o16591[LinkedList$Entry.next]o11580:0:0, o11581[LinkedList$Entry.previous]o11581:0:0, o11581[LinkedList$Entry.previous]o11580:0:0, o13266[LinkedList$Entry.previous]o11580:0:0, o11581[LinkedList$Entry.previous]o11582:0:0, c4, o11583[LinkedList$Entry.previous]o11580:0:0, o11583[LinkedList$Entry.previous]o11582:0:0, c5, o16591[LinkedList$Entry.previous]o13266:0:0, o11581[LinkedList$Entry.previous]o13266:0:0, o13266[LinkedList$Entry.previous]o13266:0:0, i4277:0:0, c6) :|: c6 = i4226:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i4245:0:0 - 1))) && (o11581[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11581:0:0 > 0 && o11581[LinkedList$Entry.previous]o11580:0:0 > 0 && o11583[LinkedList$Entry.previous]o11582:0:0 > 0 && o11583[LinkedList$Entry.previous]o11580:0:0 > 0 && o11582[LinkedList$Entry.next]o11582:0:0 > 0 && o11582[LinkedList$Entry.next]o11580:0:0 > 0 && i4226:0:0 > -1 && i4277:0:0 > i4226:0:0 && i4245:0:0 > 0 && i4277:0:0 > -1)

----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateContains.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [next, element]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(23) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 69 IRulesP rules:
f14578_0_indexOf_EQ(EOS(STATIC_14578), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29797sub-2000515792), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o29793[LinkedList$Entry.next]o29791, o29793[LinkedList$Entry.next]o29795, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793) -> f14590_0_indexOf_Inc(EOS(STATIC_14590), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29797sub-2000515792), java.lang.Object(javaUtilEx.Content(EOC)))), o29793[LinkedList$Entry.next]o29791, o29793[LinkedList$Entry.next]o29795, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793) :|: TRUE && matching1 = 0
f14590_0_indexOf_Inc(EOS(STATIC_14590), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29797sub-2000515792), java.lang.Object(javaUtilEx.Content(EOC)))), o29793[LinkedList$Entry.next]o29791, o29793[LinkedList$Entry.next]o29795, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793) -> f14600_0_indexOf_Load(EOS(STATIC_14600), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29797sub-2000515792), java.lang.Object(javaUtilEx.Content(EOC)))), o29793[LinkedList$Entry.next]o29791, o29793[LinkedList$Entry.next]o29795, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793) :|: TRUE
f14600_0_indexOf_Load(EOS(STATIC_14600), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29797sub-2000515792), java.lang.Object(javaUtilEx.Content(EOC)))), o29793[LinkedList$Entry.next]o29791, o29793[LinkedList$Entry.next]o29795, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793) -> f14609_0_indexOf_FieldAccess(EOS(STATIC_14609), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29797sub-2000515792), java.lang.Object(javaUtilEx.Content(EOC)))), o29793[LinkedList$Entry.next]o29791, o29793[LinkedList$Entry.next]o29795, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793) :|: TRUE
f14609_0_indexOf_FieldAccess(EOS(STATIC_14609), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29797sub-2000515792), java.lang.Object(javaUtilEx.Content(EOC)))), o29793[LinkedList$Entry.next]o29791, o29793[LinkedList$Entry.next]o29795, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793) -> f14617_0_indexOf_Store(EOS(STATIC_14617), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29797sub0), o29793[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793, o29793[LinkedList$Entry.next]o29797) :|: o29793[LinkedList$Entry.next]o29797 > o29793[LinkedList$Entry.next]o29795 && o29793[LinkedList$Entry.next]o29795 >= 0
f14617_0_indexOf_Store(EOS(STATIC_14617), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29797sub0), o29793[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793, o29793[LinkedList$Entry.next]o29797) -> f14625_0_indexOf_JMP(EOS(STATIC_14625), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29797sub0), o29793[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793, o29793[LinkedList$Entry.next]o29797) :|: TRUE
f14625_0_indexOf_JMP(EOS(STATIC_14625), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29797sub0), o29793[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793, o29793[LinkedList$Entry.next]o29797) -> f14630_0_indexOf_Load(EOS(STATIC_14630), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29797sub0), o29793[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793, o29793[LinkedList$Entry.next]o29797) :|: TRUE
f14630_0_indexOf_Load(EOS(STATIC_14630), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29797sub0), o29793[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793, o29793[LinkedList$Entry.next]o29797) -> f14480_0_indexOf_Load(EOS(STATIC_14480), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29797sub0), o29793[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793, o29793[LinkedList$Entry.next]o29797) :|: TRUE
f14480_0_indexOf_Load(EOS(STATIC_14480), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869) -> f14482_0_indexOf_Load(EOS(STATIC_14482), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28869sub0), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869) :|: TRUE
f14482_0_indexOf_Load(EOS(STATIC_14482), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28869sub0), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869) -> f14484_0_indexOf_FieldAccess(EOS(STATIC_14484), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28869sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869) :|: TRUE
f14484_0_indexOf_FieldAccess(EOS(STATIC_14484), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28869sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869) -> f14486_0_indexOf_EQ(EOS(STATIC_14486), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28869sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub-2001412405), o28866-2001412405)), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869) :|: TRUE
f14486_0_indexOf_EQ(EOS(STATIC_14486), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28869sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub-2001412405), o28866-2001412405)), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869) -> f14489_0_indexOf_EQ(EOS(STATIC_14489), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28869sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub-2001412405), o28866-2001412405)), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869, o28869[LinkedList$Entry.next]o28865) :|: o28869[LinkedList$Entry.next]o28865 > 0
f14489_0_indexOf_EQ(EOS(STATIC_14489), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28869sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub-2001412405), o28866-2001412405)), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869, o28869[LinkedList$Entry.next]o28865) -> f14493_0_indexOf_Load(EOS(STATIC_14493), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869, o28869[LinkedList$Entry.next]o28865) :|: TRUE
f14493_0_indexOf_Load(EOS(STATIC_14493), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869, o28869[LinkedList$Entry.next]o28865) -> f14497_0_indexOf_Load(EOS(STATIC_14497), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28868sub0), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869, o28869[LinkedList$Entry.next]o28865) :|: TRUE
f14497_0_indexOf_Load(EOS(STATIC_14497), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28868sub0), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869, o28869[LinkedList$Entry.next]o28865) -> f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869, o28869[LinkedList$Entry.next]o28865) :|: TRUE
f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), o28867[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867, o28867[LinkedList$Entry.next]o28869, o28869[LinkedList$Entry.next]o28865) -> f14504_0_indexOf_FieldAccess(EOS(STATIC_14504), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), java.lang.Object(o28868sub0), java.lang.Object(o28869sub0), o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o28869, o28869[LinkedList$Entry.next]o28865, o28869[LinkedList$Entry.next]o28867) :|: o28869[LinkedList$Entry.next]o28867 > 0 && o28867[LinkedList$Entry.next]o28869 > 0
f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29234sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o29234sub0), java.lang.Object(o28868sub0), java.lang.Object(o29234sub0), o29234[LinkedList$Entry.next]o28865, o29234[LinkedList$Entry.next]o29234, o29234[LinkedList$Entry.next]o29234, o29234[LinkedList$Entry.next]o28865) -> f14505_0_indexOf_FieldAccess(EOS(STATIC_14505), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29234sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(o29234sub0), java.lang.Object(o28868sub0), java.lang.Object(o29234sub0), o29234[LinkedList$Entry.next]o28865, o29234[LinkedList$Entry.next]o29234) :|: TRUE
f14504_0_indexOf_FieldAccess(EOS(STATIC_14504), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29243[LinkedList$Entry.next]o28865, o29243[LinkedList$Entry.next]o28867) -> f14509_0_indexOf_FieldAccess(EOS(STATIC_14509), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: o29245[LinkedList$Entry.next]o28865 < o29243[LinkedList$Entry.next]o28865 && o29243[LinkedList$Entry.next]o28865 >= 0 && o29245[LinkedList$Entry.next]o28867 < o29243[LinkedList$Entry.next]o28867 && o29243[LinkedList$Entry.next]o28867 >= 0
f14509_0_indexOf_FieldAccess(EOS(STATIC_14509), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14514_0_indexOf_InvokeMethod(EOS(STATIC_14514), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), java.lang.Object(o28868sub0), o292440, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: TRUE
f14514_0_indexOf_InvokeMethod(EOS(STATIC_14514), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), java.lang.Object(o28868sub0), o292440, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14519_0_equals_Load(EOS(STATIC_14519), java.lang.Object(o28868sub0), o292440, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub-2001412405), o28866-2001412405)), java.lang.Object(o28867sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), java.lang.Object(o29245sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), o292440, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: i8511 > 1 && i3984 >= 1
f14514_0_indexOf_InvokeMethod(EOS(STATIC_14514), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), java.lang.Object(o28868sub0), o292440, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14519_1_equals_Load(EOS(STATIC_14519), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), java.lang.Object(o28868sub0), o292440, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: i8511 > 1 && i3984 >= 1
f14519_0_equals_Load(EOS(STATIC_14519), java.lang.Object(o28868sub0), o292440, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub-2001412405), o28866-2001412405)), java.lang.Object(o28867sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), java.lang.Object(o29245sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), o292440, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14907_0_equals_Load(EOS(STATIC_14907), java.lang.Object(o28868sub0), o292440, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub-2001412405), o28866-2001412405)), java.lang.Object(o28867sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), o29244-2000669614)), java.lang.Object(o29245sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o28868sub0), o292440, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: TRUE
f14549_0_equals_Return(EOS(STATIC_14549), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o29553sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), NULL)), matching1, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14551_0_equals_Return(EOS(STATIC_14551), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o29553sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), NULL)), 0, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: TRUE && matching1 = 0
f14551_0_equals_Return(EOS(STATIC_14551), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29761sub-2000519512), o29760-2000519512)), matching1, o29757[LinkedList$Entry.next]o29755, o29757[LinkedList$Entry.next]o29759, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757) -> f14566_0_indexOf_EQ(EOS(STATIC_14566), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29761sub-2000519512), o29760-2000519512)), 0, o29757[LinkedList$Entry.next]o29755, o29757[LinkedList$Entry.next]o29759, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757) :|: TRUE && matching1 = 0
f14566_0_indexOf_EQ(EOS(STATIC_14566), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29761sub-2000519512), o29760-2000519512)), matching1, o29757[LinkedList$Entry.next]o29755, o29757[LinkedList$Entry.next]o29759, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757) -> f14576_0_indexOf_Inc(EOS(STATIC_14576), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29761sub-2000519512), o29760-2000519512)), o29757[LinkedList$Entry.next]o29755, o29757[LinkedList$Entry.next]o29759, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757) :|: TRUE && matching1 = 0
f14576_0_indexOf_Inc(EOS(STATIC_14576), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29761sub-2000519512), o29760-2000519512)), o29757[LinkedList$Entry.next]o29755, o29757[LinkedList$Entry.next]o29759, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757) -> f14588_0_indexOf_Load(EOS(STATIC_14588), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29761sub-2000519512), o29760-2000519512)), o29757[LinkedList$Entry.next]o29755, o29757[LinkedList$Entry.next]o29759, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757) :|: TRUE
f14588_0_indexOf_Load(EOS(STATIC_14588), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29761sub-2000519512), o29760-2000519512)), o29757[LinkedList$Entry.next]o29755, o29757[LinkedList$Entry.next]o29759, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757) -> f14599_0_indexOf_FieldAccess(EOS(STATIC_14599), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29761sub-2000519512), o29760-2000519512)), o29757[LinkedList$Entry.next]o29755, o29757[LinkedList$Entry.next]o29759, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757) :|: TRUE
f14599_0_indexOf_FieldAccess(EOS(STATIC_14599), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29761sub-2000519512), o29760-2000519512)), o29757[LinkedList$Entry.next]o29755, o29757[LinkedList$Entry.next]o29759, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757) -> f14608_0_indexOf_Store(EOS(STATIC_14608), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(o29761sub0), o29757[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757, o29757[LinkedList$Entry.next]o29761) :|: o29757[LinkedList$Entry.next]o29761 > o29757[LinkedList$Entry.next]o29759 && o29757[LinkedList$Entry.next]o29759 >= 0
f14608_0_indexOf_Store(EOS(STATIC_14608), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(o29761sub0), o29757[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757, o29757[LinkedList$Entry.next]o29761) -> f14616_0_indexOf_JMP(EOS(STATIC_14616), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(o29761sub0), o29757[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757, o29757[LinkedList$Entry.next]o29761) :|: TRUE
f14616_0_indexOf_JMP(EOS(STATIC_14616), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(o29761sub0), o29757[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757, o29757[LinkedList$Entry.next]o29761) -> f14624_0_indexOf_Load(EOS(STATIC_14624), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(o29761sub0), o29757[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757, o29757[LinkedList$Entry.next]o29761) :|: TRUE
f14624_0_indexOf_Load(EOS(STATIC_14624), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(o29761sub0), o29757[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757, o29757[LinkedList$Entry.next]o29761) -> f14480_0_indexOf_Load(EOS(STATIC_14480), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29757sub293927993), o29756293927993))))))), java.lang.Object(o29758sub0), java.lang.Object(o29761sub0), o29757[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29755, o29761[LinkedList$Entry.next]o29757, o29757[LinkedList$Entry.next]o29761) :|: TRUE
f14550_0_equals_Return(EOS(STATIC_14550), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o29566sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(o29568sub-2000669614))), matching1, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14551_0_equals_Return(EOS(STATIC_14551), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o29566sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(o29568sub-2000669614))), 0, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: TRUE && matching1 = 0
f14552_0_equals_Return(EOS(STATIC_14552), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14554_0_equals_Return(EOS(STATIC_14554), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: TRUE && matching1 = 0
f14554_0_equals_Return(EOS(STATIC_14554), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29797sub-2000515792), java.lang.Object(javaUtilEx.Content(EOC)))), i8738, o29793[LinkedList$Entry.next]o29791, o29793[LinkedList$Entry.next]o29795, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793) -> f14567_0_indexOf_EQ(EOS(STATIC_14567), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29797sub-2000515792), java.lang.Object(javaUtilEx.Content(EOC)))), i8738, o29793[LinkedList$Entry.next]o29791, o29793[LinkedList$Entry.next]o29795, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793) :|: TRUE
f14567_0_indexOf_EQ(EOS(STATIC_14567), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29797sub-2000515792), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o29793[LinkedList$Entry.next]o29791, o29793[LinkedList$Entry.next]o29795, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793) -> f14578_0_indexOf_EQ(EOS(STATIC_14578), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29793sub293935433), o29792293935433))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29797sub-2000515792), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o29793[LinkedList$Entry.next]o29791, o29793[LinkedList$Entry.next]o29795, o29797[LinkedList$Entry.next]o29791, o29797[LinkedList$Entry.next]o29793) :|: TRUE && matching1 = 0
f14553_0_equals_Return(EOS(STATIC_14553), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14554_0_equals_Return(EOS(STATIC_14554), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(javaUtilEx.Content(EOC)))), 1, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: TRUE && matching1 = 1
f14505_0_indexOf_FieldAccess(EOS(STATIC_14505), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), o29248-1708527035)), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), o29247[LinkedList$Entry.next]o28865, o29247[LinkedList$Entry.next]o29247) -> f14510_0_indexOf_FieldAccess(EOS(STATIC_14510), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), o29248-1708527035)), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: o29249[LinkedList$Entry.next]o28865 < o29247[LinkedList$Entry.next]o28865 && o29247[LinkedList$Entry.next]o28865 >= 0 && o29249[LinkedList$Entry.next]o29247 < o29247[LinkedList$Entry.next]o29247 && o29247[LinkedList$Entry.next]o29247 >= 0
f14510_0_indexOf_FieldAccess(EOS(STATIC_14510), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), o29248-1708527035)), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14515_0_indexOf_InvokeMethod(EOS(STATIC_14515), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), o29248-1708527035)), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), java.lang.Object(o28868sub0), o292480, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: TRUE
f14515_0_indexOf_InvokeMethod(EOS(STATIC_14515), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), o29248-1708527035)), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), java.lang.Object(o28868sub0), o292480, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14520_0_equals_Load(EOS(STATIC_14520), java.lang.Object(o28868sub0), o292480, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub292885401), o29248292885401)), o28866-2001412405)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), java.lang.Object(o29249sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), o29248-1708527035)), o28866292142455))))))), java.lang.Object(o28868sub0), o292480, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: i8511 > 1 && i3984 >= 1
f14515_0_indexOf_InvokeMethod(EOS(STATIC_14515), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), o29248-1708527035)), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), java.lang.Object(o28868sub0), o292480, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14520_1_equals_Load(EOS(STATIC_14520), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), o29248-1708527035)), o28866292142455))))))), java.lang.Object(o28868sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), java.lang.Object(o28868sub0), o292480, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: i8511 > 1 && i3984 >= 1
f14520_0_equals_Load(EOS(STATIC_14520), java.lang.Object(o28868sub0), o292480, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub292885401), o29248292885401)), o28866-2001412405)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), java.lang.Object(o29249sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), o29248-1708527035)), o28866292142455))))))), java.lang.Object(o28868sub0), o292480, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14969_0_equals_Load(EOS(STATIC_14969), java.lang.Object(o28868sub0), o292480, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub292885401), o29248292885401)), o28866-2001412405)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), o29248-2000669490)), java.lang.Object(o29249sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), o29248-1708527035)), o28866292142455))))))), java.lang.Object(o28868sub0), o292480, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: TRUE
f14556_0_equals_Return(EOS(STATIC_14556), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), NULL)), o28866292142455))))))), java.lang.Object(o29634sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), NULL)), matching1, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14558_0_equals_Return(EOS(STATIC_14558), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), NULL)), o28866292142455))))))), java.lang.Object(o29634sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), NULL)), 0, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: TRUE && matching1 = 0
f14558_0_equals_Return(EOS(STATIC_14558), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-2000492666), o29828-2000492666)), matching1, o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) -> f14568_0_indexOf_EQ(EOS(STATIC_14568), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-2000492666), o29828-2000492666)), 0, o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) :|: TRUE && matching1 = 0
f14568_0_indexOf_EQ(EOS(STATIC_14568), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-2000492666), o29828-2000492666)), matching1, o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) -> f14579_0_indexOf_Inc(EOS(STATIC_14579), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-2000492666), o29828-2000492666)), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) :|: TRUE && matching1 = 0
f14579_0_indexOf_Inc(EOS(STATIC_14579), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-2000492666), o29828-2000492666)), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) -> f14591_0_indexOf_Load(EOS(STATIC_14591), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-2000492666), o29828-2000492666)), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) :|: TRUE
f14591_0_indexOf_Load(EOS(STATIC_14591), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-2000492666), o29828-2000492666)), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) -> f14601_0_indexOf_FieldAccess(EOS(STATIC_14601), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-2000492666), o29828-2000492666)), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) :|: TRUE
f14601_0_indexOf_FieldAccess(EOS(STATIC_14601), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-2000492666), o29828-2000492666)), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) -> f14610_0_indexOf_Store(EOS(STATIC_14610), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(o29829sub0), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) :|: TRUE
f14610_0_indexOf_Store(EOS(STATIC_14610), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(o29829sub0), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) -> f14618_0_indexOf_JMP(EOS(STATIC_14618), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(o29829sub0), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) :|: TRUE
f14618_0_indexOf_JMP(EOS(STATIC_14618), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(o29829sub0), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) -> f14626_0_indexOf_Load(EOS(STATIC_14626), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(o29829sub0), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) :|: TRUE
f14626_0_indexOf_Load(EOS(STATIC_14626), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(o29829sub0), o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827) -> f14480_0_indexOf_Load(EOS(STATIC_14480), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29829sub-1706510857), o29828-1706510857)), o29826293981809))))))), java.lang.Object(o29831sub0), java.lang.Object(o29829sub0), o29827[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29825, o29829[LinkedList$Entry.next]o29827, o29827[LinkedList$Entry.next]o29829) :|: o29827[LinkedList$Entry.next]o29829 = 1
f14557_0_equals_Return(EOS(STATIC_14557), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(o29648sub-1708527035))), o28866292142455))))))), java.lang.Object(o29646sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(o29648sub-2000669490))), matching1, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14558_0_equals_Return(EOS(STATIC_14558), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(o29648sub-1708527035))), o28866292142455))))))), java.lang.Object(o29646sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(o29648sub-2000669490))), 0, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: TRUE && matching1 = 0
f14559_0_equals_Return(EOS(STATIC_14559), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(javaUtilEx.Content(EOC)))), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14561_0_equals_Return(EOS(STATIC_14561), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(javaUtilEx.Content(EOC)))), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: TRUE && matching1 = 0
f14561_0_equals_Return(EOS(STATIC_14561), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-2000489845), java.lang.Object(javaUtilEx.Content(EOC)))), i8761, o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) -> f14569_0_indexOf_EQ(EOS(STATIC_14569), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-2000489845), java.lang.Object(javaUtilEx.Content(EOC)))), i8761, o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) :|: TRUE
f14569_0_indexOf_EQ(EOS(STATIC_14569), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-2000489845), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) -> f14581_0_indexOf_EQ(EOS(STATIC_14581), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-2000489845), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) :|: TRUE && matching1 = 0
f14581_0_indexOf_EQ(EOS(STATIC_14581), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-2000489845), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) -> f14593_0_indexOf_Inc(EOS(STATIC_14593), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-2000489845), java.lang.Object(javaUtilEx.Content(EOC)))), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) :|: TRUE && matching1 = 0
f14593_0_indexOf_Inc(EOS(STATIC_14593), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-2000489845), java.lang.Object(javaUtilEx.Content(EOC)))), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) -> f14602_0_indexOf_Load(EOS(STATIC_14602), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-2000489845), java.lang.Object(javaUtilEx.Content(EOC)))), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) :|: TRUE
f14602_0_indexOf_Load(EOS(STATIC_14602), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-2000489845), java.lang.Object(javaUtilEx.Content(EOC)))), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) -> f14611_0_indexOf_FieldAccess(EOS(STATIC_14611), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-2000489845), java.lang.Object(javaUtilEx.Content(EOC)))), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) :|: TRUE
f14611_0_indexOf_FieldAccess(EOS(STATIC_14611), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-2000489845), java.lang.Object(javaUtilEx.Content(EOC)))), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) -> f14619_0_indexOf_Store(EOS(STATIC_14619), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29857sub0), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) :|: TRUE
f14619_0_indexOf_Store(EOS(STATIC_14619), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29857sub0), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) -> f14627_0_indexOf_JMP(EOS(STATIC_14627), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29857sub0), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) :|: TRUE
f14627_0_indexOf_JMP(EOS(STATIC_14627), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29857sub0), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) -> f14631_0_indexOf_Load(EOS(STATIC_14631), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29857sub0), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) :|: TRUE
f14631_0_indexOf_Load(EOS(STATIC_14631), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29857sub0), o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855) -> f14480_0_indexOf_Load(EOS(STATIC_14480), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29857sub-1706502394), java.lang.Object(javaUtilEx.Content(EOC)))), o29854293987451))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29857sub0), o29855[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29853, o29857[LinkedList$Entry.next]o29855, o29855[LinkedList$Entry.next]o29857) :|: o29855[LinkedList$Entry.next]o29857 = 1
f14560_0_equals_Return(EOS(STATIC_14560), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(javaUtilEx.Content(EOC)))), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14561_0_equals_Return(EOS(STATIC_14561), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(javaUtilEx.Content(EOC)))), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(javaUtilEx.Content(EOC)))), 1, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: TRUE && matching1 = 1
f14519_1_equals_Load(EOS(STATIC_14519), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o29553sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), NULL)), java.lang.Object(o29553sub0), NULL, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14549_0_equals_Return(EOS(STATIC_14549), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o29553sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), NULL)), 0, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: TRUE
f14519_1_equals_Load(EOS(STATIC_14519), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o29566sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(o29568sub-2000669614))), java.lang.Object(o29566sub0), java.lang.Object(o29568sub0), o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14550_0_equals_Return(EOS(STATIC_14550), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(o29566sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(o29568sub-2000669614))), 0, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: TRUE
f14519_1_equals_Load(EOS(STATIC_14519), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14552_0_equals_Return(EOS(STATIC_14552), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: TRUE
f14519_1_equals_Load(EOS(STATIC_14519), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) -> f14553_0_equals_Return(EOS(STATIC_14553), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614), java.lang.Object(javaUtilEx.Content(EOC)))), 1, o28867[LinkedList$Entry.next]o28865, o28867[LinkedList$Entry.next]o29243, o29245[LinkedList$Entry.next]o28865, o29245[LinkedList$Entry.next]o28867) :|: TRUE
f14520_1_equals_Load(EOS(STATIC_14520), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), NULL)), o28866292142455))))))), java.lang.Object(o29634sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), NULL)), java.lang.Object(o29634sub0), NULL, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14556_0_equals_Return(EOS(STATIC_14556), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), NULL)), o28866292142455))))))), java.lang.Object(o29634sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), NULL)), 0, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: TRUE
f14520_1_equals_Load(EOS(STATIC_14520), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(o29648sub-1708527035))), o28866292142455))))))), java.lang.Object(o29646sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(o29648sub-2000669490))), java.lang.Object(o29646sub0), java.lang.Object(o29648sub0), o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14557_0_equals_Return(EOS(STATIC_14557), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(o29648sub-1708527035))), o28866292142455))))))), java.lang.Object(o29646sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(o29648sub-2000669490))), 0, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: TRUE
f14520_1_equals_Load(EOS(STATIC_14520), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(javaUtilEx.Content(EOC)))), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14559_0_equals_Return(EOS(STATIC_14559), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(javaUtilEx.Content(EOC)))), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: TRUE
f14520_1_equals_Load(EOS(STATIC_14520), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(javaUtilEx.Content(EOC)))), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) -> f14560_0_equals_Return(EOS(STATIC_14560), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035), java.lang.Object(javaUtilEx.Content(EOC)))), o28866292142455))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490), java.lang.Object(javaUtilEx.Content(EOC)))), 1, o29249[LinkedList$Entry.next]o28865, o29249[LinkedList$Entry.next]o29247) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content(EOC)))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490:0), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490:0), java.lang.Object(javaUtilEx.Content(EOC)))), o29234[LinkedList$Entry.next]o28865:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o28865:0) -> f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content(EOC)))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29857sub0:0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29857sub0:0), o29855[LinkedList$Entry.next]o29853:0, o29249[LinkedList$Entry.next]o29247:0, 1, o29249[LinkedList$Entry.next]o28865:0) :|: o29234[LinkedList$Entry.next]o28865:0 > -1 && o29249[LinkedList$Entry.next]o28865:0 < o29234[LinkedList$Entry.next]o28865:0 && o29249[LinkedList$Entry.next]o29247:0 < o29234[LinkedList$Entry.next]o29234:0 && o29249[LinkedList$Entry.next]o28865:0 > 0 && o29234[LinkedList$Entry.next]o29234:0 > -1 && i8511:0 > 1 && i3984:0 > 0
f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614:0), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614:0), java.lang.Object(javaUtilEx.Content(EOC)))), o28867[LinkedList$Entry.next]o28865:0, o28869[LinkedList$Entry.next]o28867:0, o28867[LinkedList$Entry.next]o28869:0, o28869[LinkedList$Entry.next]o28865:0) -> f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29797sub0:0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29797sub0:0), o28867[LinkedList$Entry.next]o28865:0, o29245[LinkedList$Entry.next]o28867:0, o29793[LinkedList$Entry.next]o29797:0, o29245[LinkedList$Entry.next]o28865:0) :|: o28867[LinkedList$Entry.next]o28869:0 > 0 && o28869[LinkedList$Entry.next]o28867:0 > 0 && o29793[LinkedList$Entry.next]o29797:0 > o28867[LinkedList$Entry.next]o28869:0 && o28869[LinkedList$Entry.next]o28865:0 > -1 && o29245[LinkedList$Entry.next]o28865:0 < o28869[LinkedList$Entry.next]o28865:0 && o29245[LinkedList$Entry.next]o28867:0 < o28869[LinkedList$Entry.next]o28867:0 && o29245[LinkedList$Entry.next]o28865:0 > 0 && i8511:0 > 1 && i3984:0 > 0
f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614:0), java.lang.Object(o29568sub-2000669614:0))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614:0), java.lang.Object(o29568sub-2000669614:0))), o28867[LinkedList$Entry.next]o28865:0, o28869[LinkedList$Entry.next]o28867:0, o28867[LinkedList$Entry.next]o28869:0, o28869[LinkedList$Entry.next]o28865:0) -> f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(o29761sub0:0), java.lang.Object(o28868sub0:0), java.lang.Object(o29761sub0:0), o28867[LinkedList$Entry.next]o28865:0, o29245[LinkedList$Entry.next]o28867:0, o29757[LinkedList$Entry.next]o29761:0, o29245[LinkedList$Entry.next]o28865:0) :|: o28867[LinkedList$Entry.next]o28869:0 > 0 && o28869[LinkedList$Entry.next]o28867:0 > 0 && o28869[LinkedList$Entry.next]o28865:0 > -1 && o29245[LinkedList$Entry.next]o28865:0 < o28869[LinkedList$Entry.next]o28865:0 && o29245[LinkedList$Entry.next]o28867:0 < o28869[LinkedList$Entry.next]o28867:0 && o29245[LinkedList$Entry.next]o28865:0 > 0 && o29757[LinkedList$Entry.next]o29761:0 > o28867[LinkedList$Entry.next]o28869:0 && i8511:0 > 1 && i3984:0 > 0
f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035:0), java.lang.Object(o29648sub-1708527035:0))), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490:0), java.lang.Object(o29648sub-2000669490:0))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490:0), java.lang.Object(o29648sub-2000669490:0))), o29234[LinkedList$Entry.next]o28865:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o28865:0) -> f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035:0), java.lang.Object(o29648sub-1708527035:0))), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(o29829sub0:0), java.lang.Object(o28868sub0:0), java.lang.Object(o29829sub0:0), o29827[LinkedList$Entry.next]o29825:0, o29249[LinkedList$Entry.next]o29247:0, 1, o29249[LinkedList$Entry.next]o28865:0) :|: o29234[LinkedList$Entry.next]o28865:0 > -1 && o29249[LinkedList$Entry.next]o28865:0 < o29234[LinkedList$Entry.next]o28865:0 && o29249[LinkedList$Entry.next]o29247:0 < o29234[LinkedList$Entry.next]o29234:0 && o29249[LinkedList$Entry.next]o28865:0 > 0 && o29234[LinkedList$Entry.next]o29234:0 > -1 && i8511:0 > 1 && i3984:0 > 0
f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035:0), NULL)), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490:0), NULL)), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490:0), NULL)), o29234[LinkedList$Entry.next]o28865:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o28865:0) -> f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035:0), NULL)), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(o29829sub0:0), java.lang.Object(o28868sub0:0), java.lang.Object(o29829sub0:0), o29827[LinkedList$Entry.next]o29825:0, o29249[LinkedList$Entry.next]o29247:0, 1, o29249[LinkedList$Entry.next]o28865:0) :|: o29234[LinkedList$Entry.next]o28865:0 > -1 && o29249[LinkedList$Entry.next]o28865:0 < o29234[LinkedList$Entry.next]o28865:0 && o29249[LinkedList$Entry.next]o29247:0 < o29234[LinkedList$Entry.next]o29234:0 && o29249[LinkedList$Entry.next]o28865:0 > 0 && o29234[LinkedList$Entry.next]o29234:0 > -1 && i8511:0 > 1 && i3984:0 > 0
f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614:0), NULL)), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614:0), NULL)), o28867[LinkedList$Entry.next]o28865:0, o28869[LinkedList$Entry.next]o28867:0, o28867[LinkedList$Entry.next]o28869:0, o28869[LinkedList$Entry.next]o28865:0) -> f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(o29761sub0:0), java.lang.Object(o28868sub0:0), java.lang.Object(o29761sub0:0), o28867[LinkedList$Entry.next]o28865:0, o29245[LinkedList$Entry.next]o28867:0, o29757[LinkedList$Entry.next]o29761:0, o29245[LinkedList$Entry.next]o28865:0) :|: o28867[LinkedList$Entry.next]o28869:0 > 0 && o28869[LinkedList$Entry.next]o28867:0 > 0 && o28869[LinkedList$Entry.next]o28865:0 > -1 && o29245[LinkedList$Entry.next]o28865:0 < o28869[LinkedList$Entry.next]o28865:0 && o29245[LinkedList$Entry.next]o28867:0 < o28869[LinkedList$Entry.next]o28867:0 && o29245[LinkedList$Entry.next]o28865:0 > 0 && o29757[LinkedList$Entry.next]o29761:0 > o28867[LinkedList$Entry.next]o28869:0 && i8511:0 > 1 && i3984:0 > 0
Removed following non-SCC rules:
f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035:0), o29248-1708527035:0)), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490:0), o29248-2000669490:0)), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490:0), o29248-2000669490:0)), o29234[LinkedList$Entry.next]o28865:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o28865:0) -> f14969_0_equals_Load(EOS(STATIC_14969), java.lang.Object(o28868sub0:0), o292480:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub292885401:0), o29248292885401:0)), o28866-2001412405:0)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-2000669490:0), o29248-2000669490:0)), java.lang.Object(o29249sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29249sub-1708527035:0), o29248-1708527035:0)), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), o292480:0, o29249[LinkedList$Entry.next]o28865:0, o29249[LinkedList$Entry.next]o29247:0) :|: o29234[LinkedList$Entry.next]o28865:0 > -1 && o29249[LinkedList$Entry.next]o28865:0 < o29234[LinkedList$Entry.next]o28865:0 && o29249[LinkedList$Entry.next]o29247:0 < o29234[LinkedList$Entry.next]o29234:0 && o29234[LinkedList$Entry.next]o29234:0 > -1 && i8511:0 > 1 && i3984:0 > 0
f14500_0_indexOf_FieldAccess(EOS(STATIC_14500), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614:0), o29244-2000669614:0)), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614:0), o29244-2000669614:0)), o28867[LinkedList$Entry.next]o28865:0, o28869[LinkedList$Entry.next]o28867:0, o28867[LinkedList$Entry.next]o28869:0, o28869[LinkedList$Entry.next]o28865:0) -> f14907_0_equals_Load(EOS(STATIC_14907), java.lang.Object(o28868sub0:0), o292440:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub-2001412405:0), o28866-2001412405:0)), java.lang.Object(o28867sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29245sub-2000669614:0), o29244-2000669614:0)), java.lang.Object(o29245sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), o292440:0, o28867[LinkedList$Entry.next]o28865:0, o28867[LinkedList$Entry.next]o28869:0, o29245[LinkedList$Entry.next]o28865:0, o29245[LinkedList$Entry.next]o28867:0) :|: o28869[LinkedList$Entry.next]o28867:0 > 0 && o28869[LinkedList$Entry.next]o28865:0 > -1 && o29245[LinkedList$Entry.next]o28865:0 < o28869[LinkedList$Entry.next]o28865:0 && o29245[LinkedList$Entry.next]o28867:0 < o28869[LinkedList$Entry.next]o28867:0 && o28867[LinkedList$Entry.next]o28869:0 > 0 && i8511:0 > 1 && i3984:0 > 0
Filtered constant ground arguments:
   f14500_0_indexOf_FieldAccess(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f14500_0_indexOf_FieldAccess(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f14500_0_indexOf_FieldAccess(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f14500_0_indexOf_FieldAccess(x1, x4, x5, x6, x7, x8, x9)
Finished conversion. Obtained 6 rules.P rules:
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-2000669490:0), java.lang.Object(javaUtilEx.Content))), o29234[LinkedList$Entry.next]o28865:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o28865:0, o28866292142455:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o29857sub0:0), o29855[LinkedList$Entry.next]o29853:0, o29249[LinkedList$Entry.next]o29247:0, 1, o29249[LinkedList$Entry.next]o28865:0, o28866292142455:0) :|: o29249[LinkedList$Entry.next]o28865:0 < o29234[LinkedList$Entry.next]o28865:0 && o29234[LinkedList$Entry.next]o28865:0 > -1 && o29249[LinkedList$Entry.next]o29247:0 < o29234[LinkedList$Entry.next]o29234:0 && o29249[LinkedList$Entry.next]o28865:0 > 0 && o29234[LinkedList$Entry.next]o29234:0 > -1 && i3984:0 > 0 && i8511:0 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29245sub-2000669614:0), java.lang.Object(javaUtilEx.Content))), o28867[LinkedList$Entry.next]o28865:0, o28869[LinkedList$Entry.next]o28867:0, o28867[LinkedList$Entry.next]o28869:0, o28869[LinkedList$Entry.next]o28865:0, o28866292142455:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o29797sub0:0), o28867[LinkedList$Entry.next]o28865:0, o29245[LinkedList$Entry.next]o28867:0, o29793[LinkedList$Entry.next]o29797:0, o29245[LinkedList$Entry.next]o28865:0, o28866292142455:0) :|: o28869[LinkedList$Entry.next]o28867:0 > 0 && o28867[LinkedList$Entry.next]o28869:0 > 0 && o29793[LinkedList$Entry.next]o29797:0 > o28867[LinkedList$Entry.next]o28869:0 && o28869[LinkedList$Entry.next]o28865:0 > -1 && o29245[LinkedList$Entry.next]o28865:0 < o28869[LinkedList$Entry.next]o28865:0 && o29245[LinkedList$Entry.next]o28867:0 < o28869[LinkedList$Entry.next]o28867:0 && o29245[LinkedList$Entry.next]o28865:0 > 0 && i3984:0 > 0 && i8511:0 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29245sub-2000669614:0), java.lang.Object(o29568sub-2000669614:0))), o28867[LinkedList$Entry.next]o28865:0, o28869[LinkedList$Entry.next]o28867:0, o28867[LinkedList$Entry.next]o28869:0, o28869[LinkedList$Entry.next]o28865:0, o28866292142455:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(o29761sub0:0), o28867[LinkedList$Entry.next]o28865:0, o29245[LinkedList$Entry.next]o28867:0, o29757[LinkedList$Entry.next]o29761:0, o29245[LinkedList$Entry.next]o28865:0, o28866292142455:0) :|: o28869[LinkedList$Entry.next]o28867:0 > 0 && o28867[LinkedList$Entry.next]o28869:0 > 0 && o28869[LinkedList$Entry.next]o28865:0 > -1 && o29245[LinkedList$Entry.next]o28865:0 < o28869[LinkedList$Entry.next]o28865:0 && o29245[LinkedList$Entry.next]o28867:0 < o28869[LinkedList$Entry.next]o28867:0 && o29245[LinkedList$Entry.next]o28865:0 > 0 && o29757[LinkedList$Entry.next]o29761:0 > o28867[LinkedList$Entry.next]o28869:0 && i3984:0 > 0 && i8511:0 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(o29648sub-1708527035:0))), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-2000669490:0), java.lang.Object(o29648sub-2000669490:0))), o29234[LinkedList$Entry.next]o28865:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o28865:0, o28866292142455:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(o29648sub-1708527035:0))), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(o29829sub0:0), o29827[LinkedList$Entry.next]o29825:0, o29249[LinkedList$Entry.next]o29247:0, 1, o29249[LinkedList$Entry.next]o28865:0, o28866292142455:0) :|: o29249[LinkedList$Entry.next]o28865:0 < o29234[LinkedList$Entry.next]o28865:0 && o29234[LinkedList$Entry.next]o28865:0 > -1 && o29249[LinkedList$Entry.next]o29247:0 < o29234[LinkedList$Entry.next]o29234:0 && o29249[LinkedList$Entry.next]o28865:0 > 0 && o29234[LinkedList$Entry.next]o29234:0 > -1 && i3984:0 > 0 && i8511:0 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), NULL)), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-2000669490:0), NULL)), o29234[LinkedList$Entry.next]o28865:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o28865:0, o28866292142455:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), NULL)), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(o29829sub0:0), o29827[LinkedList$Entry.next]o29825:0, o29249[LinkedList$Entry.next]o29247:0, 1, o29249[LinkedList$Entry.next]o28865:0, o28866292142455:0) :|: o29249[LinkedList$Entry.next]o28865:0 < o29234[LinkedList$Entry.next]o28865:0 && o29234[LinkedList$Entry.next]o28865:0 > -1 && o29249[LinkedList$Entry.next]o29247:0 < o29234[LinkedList$Entry.next]o29234:0 && o29249[LinkedList$Entry.next]o28865:0 > 0 && o29234[LinkedList$Entry.next]o29234:0 > -1 && i3984:0 > 0 && i8511:0 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29245sub-2000669614:0), NULL)), o28867[LinkedList$Entry.next]o28865:0, o28869[LinkedList$Entry.next]o28867:0, o28867[LinkedList$Entry.next]o28869:0, o28869[LinkedList$Entry.next]o28865:0, o28866292142455:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28867sub292142455:0), o28866292142455:0))))))), java.lang.Object(o28868sub0:0), java.lang.Object(o29761sub0:0), o28867[LinkedList$Entry.next]o28865:0, o29245[LinkedList$Entry.next]o28867:0, o29757[LinkedList$Entry.next]o29761:0, o29245[LinkedList$Entry.next]o28865:0, o28866292142455:0) :|: o28869[LinkedList$Entry.next]o28867:0 > 0 && o28867[LinkedList$Entry.next]o28869:0 > 0 && o28869[LinkedList$Entry.next]o28865:0 > -1 && o29245[LinkedList$Entry.next]o28865:0 < o28869[LinkedList$Entry.next]o28865:0 && o29245[LinkedList$Entry.next]o28867:0 < o28869[LinkedList$Entry.next]o28867:0 && o29245[LinkedList$Entry.next]o28865:0 > 0 && o29757[LinkedList$Entry.next]o29761:0 > o28867[LinkedList$Entry.next]o28869:0 && i3984:0 > 0 && i8511:0 > 1

----------------------------------------

(24)
Obligation:
Rules:
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-2000669490:0), java.lang.Object(javaUtilEx.Content))), o29234[LinkedList$Entry.next]o28865:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o28865:0, o28866292142455:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o29857sub0:0), o29855[LinkedList$Entry.next]o29853:0, o29249[LinkedList$Entry.next]o29247:0, 1, o29249[LinkedList$Entry.next]o28865:0, o28866292142455:0) :|: o29249[LinkedList$Entry.next]o28865:0 < o29234[LinkedList$Entry.next]o28865:0 && o29234[LinkedList$Entry.next]o28865:0 > -1 && o29249[LinkedList$Entry.next]o29247:0 < o29234[LinkedList$Entry.next]o29234:0 && o29249[LinkedList$Entry.next]o28865:0 > 0 && o29234[LinkedList$Entry.next]o29234:0 > -1 && i3984:0 > 0 && i8511:0 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), x1))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(javaUtilEx.Content))), x3, x4, x5, x6, x1) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), x1))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x7), x3, x8, x9, x10, x1) :|: x4 > 0 && x5 > 0 && x9 > x5 && x6 > -1 && x10 < x6 && x8 < x4 && x10 > 0 && x11 > 0 && x12 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x13), x14))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(x17))), x18, x19, x20, x21, x14) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x13), x14))))))), java.lang.Object(x15), java.lang.Object(x22), x18, x23, x24, x25, x14) :|: x19 > 0 && x20 > 0 && x21 > -1 && x25 < x21 && x23 < x19 && x25 > 0 && x24 > x20 && x26 > 0 && x27 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), java.lang.Object(x29))), x30))))))), java.lang.Object(x31), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x32), java.lang.Object(x33))), x34, x35, x35, x34, x30) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), java.lang.Object(x29))), x30))))))), java.lang.Object(x31), java.lang.Object(x36), x37, x38, 1, x39, x30) :|: x39 < x34 && x34 > -1 && x38 < x35 && x39 > 0 && x35 > -1 && x40 > 0 && x41 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x42), NULL)), x43))))))), java.lang.Object(x44), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x45), NULL)), x46, x47, x47, x46, x43) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x42), NULL)), x43))))))), java.lang.Object(x44), java.lang.Object(x48), x49, x50, 1, x51, x43) :|: x51 < x46 && x46 > -1 && x50 < x47 && x51 > 0 && x47 > -1 && x52 > 0 && x53 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x54), x55))))))), java.lang.Object(x56), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x57), NULL)), x58, x59, x60, x61, x55) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x54), x55))))))), java.lang.Object(x56), java.lang.Object(x62), x58, x63, x64, x65, x55) :|: x59 > 0 && x60 > 0 && x61 > -1 && x65 < x61 && x63 < x59 && x65 > 0 && x64 > x60 && x66 > 0 && x67 > 1

----------------------------------------

(25) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(26)
Obligation:
Rules:
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-2000669490:0), java.lang.Object(javaUtilEx.Content))), o29234[LinkedList$Entry.next]o28865:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o28865:0, o28866292142455:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o29857sub0:0), o29855[LinkedList$Entry.next]o29853:0, o29249[LinkedList$Entry.next]o29247:0, 1, o29249[LinkedList$Entry.next]o28865:0, o28866292142455:0) :|: o29249[LinkedList$Entry.next]o28865:0 < o29234[LinkedList$Entry.next]o28865:0 && o29234[LinkedList$Entry.next]o28865:0 > -1 && o29249[LinkedList$Entry.next]o29247:0 < o29234[LinkedList$Entry.next]o29234:0 && o29249[LinkedList$Entry.next]o28865:0 > 0 && o29234[LinkedList$Entry.next]o29234:0 > -1 && i3984:0 > 0 && i8511:0 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), x1))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(javaUtilEx.Content))), x3, x4, x5, x6, x1) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), x1))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x7), x3, x8, x9, x10, x1) :|: x4 > 0 && x5 > 0 && x9 > x5 && x6 > -1 && x10 < x6 && x8 < x4 && x10 > 0 && x11 > 0 && x12 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x13), x14))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(x17))), x18, x19, x20, x21, x14) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x13), x14))))))), java.lang.Object(x15), java.lang.Object(x22), x18, x23, x24, x25, x14) :|: x19 > 0 && x20 > 0 && x21 > -1 && x25 < x21 && x23 < x19 && x25 > 0 && x24 > x20 && x26 > 0 && x27 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), java.lang.Object(x29))), x30))))))), java.lang.Object(x31), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x32), java.lang.Object(x33))), x34, x35, x35, x34, x30) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), java.lang.Object(x29))), x30))))))), java.lang.Object(x31), java.lang.Object(x36), x37, x38, 1, x39, x30) :|: x39 < x34 && x34 > -1 && x38 < x35 && x39 > 0 && x35 > -1 && x40 > 0 && x41 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x42), NULL)), x43))))))), java.lang.Object(x44), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x45), NULL)), x46, x47, x47, x46, x43) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x42), NULL)), x43))))))), java.lang.Object(x44), java.lang.Object(x48), x49, x50, 1, x51, x43) :|: x51 < x46 && x46 > -1 && x50 < x47 && x51 > 0 && x47 > -1 && x52 > 0 && x53 > 1
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x54), x55))))))), java.lang.Object(x56), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x57), NULL)), x58, x59, x60, x61, x55) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x54), x55))))))), java.lang.Object(x56), java.lang.Object(x62), x58, x63, x64, x65, x55) :|: x59 > 0 && x60 > 0 && x61 > -1 && x65 < x61 && x63 < x59 && x65 > 0 && x64 > x60 && x66 > 0 && x67 > 1

----------------------------------------

(27) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-2000669490:0), java.lang.Object(javaUtilEx.Content))), o29234[LinkedList$Entry.next]o28865:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o28865:0, o28866292142455:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o29857sub0:0), o29855[LinkedList$Entry.next]o29853:0, o29249[LinkedList$Entry.next]o29247:0, 1, o29249[LinkedList$Entry.next]o28865:0, o28866292142455:0) :|: o29249[LinkedList$Entry.next]o28865:0 < o29234[LinkedList$Entry.next]o28865:0 && o29234[LinkedList$Entry.next]o28865:0 > -1 && o29249[LinkedList$Entry.next]o29247:0 < o29234[LinkedList$Entry.next]o29234:0 && o29249[LinkedList$Entry.next]o28865:0 > 0 && o29234[LinkedList$Entry.next]o29234:0 > -1 && i3984:0 > 0 && i8511:0 > 1
(2) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), x1))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(javaUtilEx.Content))), x3, x4, x5, x6, x1) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), x1))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x7), x3, x8, x9, x10, x1) :|: x4 > 0 && x5 > 0 && x9 > x5 && x6 > -1 && x10 < x6 && x8 < x4 && x10 > 0 && x11 > 0 && x12 > 1
(3) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x13), x14))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(x17))), x18, x19, x20, x21, x14) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x13), x14))))))), java.lang.Object(x15), java.lang.Object(x22), x18, x23, x24, x25, x14) :|: x19 > 0 && x20 > 0 && x21 > -1 && x25 < x21 && x23 < x19 && x25 > 0 && x24 > x20 && x26 > 0 && x27 > 1
(4) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), java.lang.Object(x29))), x30))))))), java.lang.Object(x31), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x32), java.lang.Object(x33))), x34, x35, x35, x34, x30) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), java.lang.Object(x29))), x30))))))), java.lang.Object(x31), java.lang.Object(x36), x37, x38, 1, x39, x30) :|: x39 < x34 && x34 > -1 && x38 < x35 && x39 > 0 && x35 > -1 && x40 > 0 && x41 > 1
(5) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x42), NULL)), x43))))))), java.lang.Object(x44), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x45), NULL)), x46, x47, x47, x46, x43) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x42), NULL)), x43))))))), java.lang.Object(x44), java.lang.Object(x48), x49, x50, 1, x51, x43) :|: x51 < x46 && x46 > -1 && x50 < x47 && x51 > 0 && x47 > -1 && x52 > 0 && x53 > 1
(6) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x54), x55))))))), java.lang.Object(x56), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x57), NULL)), x58, x59, x60, x61, x55) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x54), x55))))))), java.lang.Object(x56), java.lang.Object(x62), x58, x63, x64, x65, x55) :|: x59 > 0 && x60 > 0 && x61 > -1 && x65 < x61 && x63 < x59 && x65 > 0 && x64 > x60 && x66 > 0 && x67 > 1

Arcs:
(1) -> (1), (2), (3), (4), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (2), (3), (4), (6)
(5) -> (2), (3), (5), (6)
(6) -> (1), (2), (3), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(28)
Obligation:

Termination digraph:
Nodes:
(1) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-2000669490:0), java.lang.Object(javaUtilEx.Content))), o29234[LinkedList$Entry.next]o28865:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o29234:0, o29234[LinkedList$Entry.next]o28865:0, o28866292142455:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o29857sub0:0), o29855[LinkedList$Entry.next]o29853:0, o29249[LinkedList$Entry.next]o29247:0, 1, o29249[LinkedList$Entry.next]o28865:0, o28866292142455:0) :|: o29249[LinkedList$Entry.next]o28865:0 < o29234[LinkedList$Entry.next]o28865:0 && o29234[LinkedList$Entry.next]o28865:0 > -1 && o29249[LinkedList$Entry.next]o29247:0 < o29234[LinkedList$Entry.next]o29234:0 && o29249[LinkedList$Entry.next]o28865:0 > 0 && o29234[LinkedList$Entry.next]o29234:0 > -1 && i3984:0 > 0 && i8511:0 > 1
(2) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), x1))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(javaUtilEx.Content))), x3, x4, x5, x6, x1) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), x1))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x7), x3, x8, x9, x10, x1) :|: x4 > 0 && x5 > 0 && x9 > x5 && x6 > -1 && x10 < x6 && x8 < x4 && x10 > 0 && x11 > 0 && x12 > 1
(3) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x13), x14))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(x17))), x18, x19, x20, x21, x14) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x13), x14))))))), java.lang.Object(x15), java.lang.Object(x22), x18, x23, x24, x25, x14) :|: x19 > 0 && x20 > 0 && x21 > -1 && x25 < x21 && x23 < x19 && x25 > 0 && x24 > x20 && x26 > 0 && x27 > 1
(4) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), java.lang.Object(x29))), x30))))))), java.lang.Object(x31), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x32), java.lang.Object(x33))), x34, x35, x35, x34, x30) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), java.lang.Object(x29))), x30))))))), java.lang.Object(x31), java.lang.Object(x36), x37, x38, 1, x39, x30) :|: x39 < x34 && x34 > -1 && x38 < x35 && x39 > 0 && x35 > -1 && x40 > 0 && x41 > 1
(5) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x54), x55))))))), java.lang.Object(x56), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x57), NULL)), x58, x59, x60, x61, x55) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x54), x55))))))), java.lang.Object(x56), java.lang.Object(x62), x58, x63, x64, x65, x55) :|: x59 > 0 && x60 > 0 && x61 > -1 && x65 < x61 && x63 < x59 && x65 > 0 && x64 > x60 && x66 > 0 && x67 > 1
(6) f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x42), NULL)), x43))))))), java.lang.Object(x44), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x45), NULL)), x46, x47, x47, x46, x43) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x42), NULL)), x43))))))), java.lang.Object(x44), java.lang.Object(x48), x49, x50, 1, x51, x43) :|: x51 < x46 && x46 > -1 && x50 < x47 && x51 > 0 && x47 > -1 && x52 > 0 && x53 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (2), (3), (4), (5)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (2), (3), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(29) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(30)
Obligation:
Rules:
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x54:0), x55:0))))))), java.lang.Object(x56:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x57:0), NULL)), x58:0, x59:0, x60:0, x61:0, x55:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x54:0), x55:0))))))), java.lang.Object(x56:0), java.lang.Object(x62:0), x58:0, x63:0, x64:0, x65:0, x55:0) :|: x66:0 > 0 && x67:0 > 1 && x64:0 > x60:0 && x65:0 > 0 && x63:0 < x59:0 && x65:0 < x61:0 && x61:0 > -1 && x60:0 > 0 && x59:0 > 0
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x42:0), NULL)), x43:0))))))), java.lang.Object(x44:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x45:0), NULL)), x46:0, x47:0, x47:0, x46:0, x43:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x42:0), NULL)), x43:0))))))), java.lang.Object(x44:0), java.lang.Object(x48:0), x49:0, x50:0, 1, x51:0, x43:0) :|: x52:0 > 0 && x53:0 > 1 && x47:0 > -1 && x51:0 > 0 && x50:0 < x47:0 && x46:0 > -1 && x51:0 < x46:0
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x13:0), x14:0))))))), java.lang.Object(x15:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16:0), java.lang.Object(x17:0))), x18:0, x19:0, x20:0, x21:0, x14:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x13:0), x14:0))))))), java.lang.Object(x15:0), java.lang.Object(x22:0), x18:0, x23:0, x24:0, x25:0, x14:0) :|: x26:0 > 0 && x27:0 > 1 && x24:0 > x20:0 && x25:0 > 0 && x23:0 < x19:0 && x25:0 < x21:0 && x21:0 > -1 && x20:0 > 0 && x19:0 > 0
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-2000669490:0:0), java.lang.Object(javaUtilEx.Content))), o29234[LinkedList$Entry.next]o28865:0:0, o29234[LinkedList$Entry.next]o29234:0:0, o29234[LinkedList$Entry.next]o29234:0:0, o29234[LinkedList$Entry.next]o28865:0:0, o28866292142455:0:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29249sub-1708527035:0:0), java.lang.Object(javaUtilEx.Content))), o28866292142455:0:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o29857sub0:0:0), o29855[LinkedList$Entry.next]o29853:0:0, o29249[LinkedList$Entry.next]o29247:0:0, 1, o29249[LinkedList$Entry.next]o28865:0:0, o28866292142455:0:0) :|: i3984:0:0 > 0 && i8511:0:0 > 1 && o29234[LinkedList$Entry.next]o29234:0:0 > -1 && o29249[LinkedList$Entry.next]o28865:0:0 > 0 && o29249[LinkedList$Entry.next]o29247:0:0 < o29234[LinkedList$Entry.next]o29234:0:0 && o29234[LinkedList$Entry.next]o28865:0:0 > -1 && o29249[LinkedList$Entry.next]o28865:0:0 < o29234[LinkedList$Entry.next]o28865:0:0
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x:0), x1:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2:0), java.lang.Object(javaUtilEx.Content))), x3:0, x4:0, x5:0, x6:0, x1:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x:0), x1:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x7:0), x3:0, x8:0, x9:0, x10:0, x1:0) :|: x11:0 > 0 && x12:0 > 1 && x10:0 > 0 && x8:0 < x4:0 && x6:0 > x10:0 && x6:0 > -1 && x9:0 > x5:0 && x5:0 > 0 && x4:0 > 0
f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28:0), java.lang.Object(x29:0))), x30:0))))))), java.lang.Object(x31:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x32:0), java.lang.Object(x33:0))), x34:0, x35:0, x35:0, x34:0, x30:0) -> f14500_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28:0), java.lang.Object(x29:0))), x30:0))))))), java.lang.Object(x31:0), java.lang.Object(x36:0), x37:0, x38:0, 1, x39:0, x30:0) :|: x40:0 > 0 && x41:0 > 1 && x35:0 > -1 && x39:0 > 0 && x38:0 < x35:0 && x34:0 > -1 && x39:0 < x34:0

----------------------------------------

(31) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f14500_0_indexOf_FieldAccess(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, VARIABLE, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
NULL()
javaUtilEx.Content()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(32)
Obligation:
Rules:
f14500_0_indexOf_FieldAccess(c, c1, c2, x58:0, x59:0, x60:0, x61:0, x55:0) -> f14500_0_indexOf_FieldAccess(c3, c4, c5, x58:0, x63:0, x64:0, x65:0, x55:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (x66:0 > 0 && x67:0 > 1 && x64:0 > x60:0 && x65:0 > 0 && x63:0 < x59:0 && x65:0 < x61:0 && x61:0 > -1 && x60:0 > 0 && x59:0 > 0)
f14500_0_indexOf_FieldAccess(c6, c7, c8, x46:0, x47:0, x47:0, x46:0, x43:0) -> f14500_0_indexOf_FieldAccess(c9, c10, c11, x49:0, x50:0, c12, x51:0, x43:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && (c7 = 0 && c6 = 0))))) && (x52:0 > 0 && x53:0 > 1 && x47:0 > -1 && x51:0 > 0 && x50:0 < x47:0 && x46:0 > -1 && x51:0 < x46:0)
f14500_0_indexOf_FieldAccess(c26, c27, c28, x3:0, x4:0, x5:0, x6:0, x1:0) -> f14500_0_indexOf_FieldAccess(c29, c30, c31, x3:0, x8:0, x9:0, x10:0, x1:0) :|: c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0)))) && (x11:0 > 0 && x12:0 > 1 && x10:0 > 0 && x8:0 < x4:0 && x6:0 > x10:0 && x6:0 > -1 && x9:0 > x5:0 && x5:0 > 0 && x4:0 > 0)

----------------------------------------

(33) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f14500_0_indexOf_FieldAccess ] = f14500_0_indexOf_FieldAccess_7

The following rules are decreasing:
f14500_0_indexOf_FieldAccess(c, c1, c2, x58:0, x59:0, x60:0, x61:0, x55:0) -> f14500_0_indexOf_FieldAccess(c3, c4, c5, x58:0, x63:0, x64:0, x65:0, x55:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (x66:0 > 0 && x67:0 > 1 && x64:0 > x60:0 && x65:0 > 0 && x63:0 < x59:0 && x65:0 < x61:0 && x61:0 > -1 && x60:0 > 0 && x59:0 > 0)
f14500_0_indexOf_FieldAccess(c6, c7, c8, x46:0, x47:0, x47:0, x46:0, x43:0) -> f14500_0_indexOf_FieldAccess(c9, c10, c11, x49:0, x50:0, c12, x51:0, x43:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && (c7 = 0 && c6 = 0))))) && (x52:0 > 0 && x53:0 > 1 && x47:0 > -1 && x51:0 > 0 && x50:0 < x47:0 && x46:0 > -1 && x51:0 < x46:0)
f14500_0_indexOf_FieldAccess(c26, c27, c28, x3:0, x4:0, x5:0, x6:0, x1:0) -> f14500_0_indexOf_FieldAccess(c29, c30, c31, x3:0, x8:0, x9:0, x10:0, x1:0) :|: c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0)))) && (x11:0 > 0 && x12:0 > 1 && x10:0 > 0 && x8:0 < x4:0 && x6:0 > x10:0 && x6:0 > -1 && x9:0 > x5:0 && x5:0 > 0 && x4:0 > 0)

The following rules are bounded:
f14500_0_indexOf_FieldAccess(c, c1, c2, x58:0, x59:0, x60:0, x61:0, x55:0) -> f14500_0_indexOf_FieldAccess(c3, c4, c5, x58:0, x63:0, x64:0, x65:0, x55:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (x66:0 > 0 && x67:0 > 1 && x64:0 > x60:0 && x65:0 > 0 && x63:0 < x59:0 && x65:0 < x61:0 && x61:0 > -1 && x60:0 > 0 && x59:0 > 0)
f14500_0_indexOf_FieldAccess(c6, c7, c8, x46:0, x47:0, x47:0, x46:0, x43:0) -> f14500_0_indexOf_FieldAccess(c9, c10, c11, x49:0, x50:0, c12, x51:0, x43:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && (c7 = 0 && c6 = 0))))) && (x52:0 > 0 && x53:0 > 1 && x47:0 > -1 && x51:0 > 0 && x50:0 < x47:0 && x46:0 > -1 && x51:0 < x46:0)
f14500_0_indexOf_FieldAccess(c26, c27, c28, x3:0, x4:0, x5:0, x6:0, x1:0) -> f14500_0_indexOf_FieldAccess(c29, c30, c31, x3:0, x8:0, x9:0, x10:0, x1:0) :|: c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0)))) && (x11:0 > 0 && x12:0 > 1 && x10:0 > 0 && x8:0 < x4:0 && x6:0 > x10:0 && x6:0 > -1 && x9:0 > x5:0 && x5:0 > 0 && x4:0 > 0)


----------------------------------------

(34)
YES

----------------------------------------

(35)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateContains.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [next, element]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(36) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 69 IRulesP rules:
f14572_0_indexOf_EQ(EOS(STATIC_14572), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29711sub-2000524317), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29706[LinkedList$Entry.next]o29709, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706) -> f14584_0_indexOf_Inc(EOS(STATIC_14584), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29711sub-2000524317), java.lang.Object(javaUtilEx.Content(EOC)))), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29706[LinkedList$Entry.next]o29709, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706) :|: TRUE && matching1 = 0
f14584_0_indexOf_Inc(EOS(STATIC_14584), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29711sub-2000524317), java.lang.Object(javaUtilEx.Content(EOC)))), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29706[LinkedList$Entry.next]o29709, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706) -> f14596_0_indexOf_Load(EOS(STATIC_14596), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29711sub-2000524317), java.lang.Object(javaUtilEx.Content(EOC)))), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29706[LinkedList$Entry.next]o29709, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706) :|: TRUE
f14596_0_indexOf_Load(EOS(STATIC_14596), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29711sub-2000524317), java.lang.Object(javaUtilEx.Content(EOC)))), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29706[LinkedList$Entry.next]o29709, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706) -> f14605_0_indexOf_FieldAccess(EOS(STATIC_14605), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29711sub-2000524317), java.lang.Object(javaUtilEx.Content(EOC)))), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29706[LinkedList$Entry.next]o29709, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706) :|: TRUE
f14605_0_indexOf_FieldAccess(EOS(STATIC_14605), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29711sub-2000524317), java.lang.Object(javaUtilEx.Content(EOC)))), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29706[LinkedList$Entry.next]o29709, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706) -> f14613_0_indexOf_Store(EOS(STATIC_14613), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29711sub0), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706, o29706[LinkedList$Entry.next]o29711) :|: o29706[LinkedList$Entry.next]o29711 > o29706[LinkedList$Entry.next]o29709 && o29706[LinkedList$Entry.next]o29709 >= 0
f14613_0_indexOf_Store(EOS(STATIC_14613), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29711sub0), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706, o29706[LinkedList$Entry.next]o29711) -> f14621_0_indexOf_JMP(EOS(STATIC_14621), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29711sub0), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706, o29706[LinkedList$Entry.next]o29711) :|: TRUE
f14621_0_indexOf_JMP(EOS(STATIC_14621), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29711sub0), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706, o29706[LinkedList$Entry.next]o29711) -> f14628_0_indexOf_Load(EOS(STATIC_14628), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29711sub0), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706, o29706[LinkedList$Entry.next]o29711) :|: TRUE
f14628_0_indexOf_Load(EOS(STATIC_14628), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29711sub0), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706, o29706[LinkedList$Entry.next]o29711) -> f14477_0_indexOf_Load(EOS(STATIC_14477), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29711sub0), o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706, o29706[LinkedList$Entry.next]o29711) :|: TRUE
f14477_0_indexOf_Load(EOS(STATIC_14477), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726) -> f14481_0_indexOf_Load(EOS(STATIC_14481), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28726sub0), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726) :|: TRUE
f14481_0_indexOf_Load(EOS(STATIC_14481), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28726sub0), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726) -> f14483_0_indexOf_FieldAccess(EOS(STATIC_14483), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28726sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726) :|: TRUE
f14483_0_indexOf_FieldAccess(EOS(STATIC_14483), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28726sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726) -> f14485_0_indexOf_EQ(EOS(STATIC_14485), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub-2001446164), o28722-2001446164)), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726) :|: TRUE
f14485_0_indexOf_EQ(EOS(STATIC_14485), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub-2001446164), o28722-2001446164)), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726) -> f14487_0_indexOf_EQ(EOS(STATIC_14487), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub-2001446164), o28722-2001446164)), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726, o28726[LinkedList$Entry.next]o28721) :|: o28726[LinkedList$Entry.next]o28721 > 0
f14487_0_indexOf_EQ(EOS(STATIC_14487), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub-2001446164), o28722-2001446164)), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726, o28726[LinkedList$Entry.next]o28721) -> f14491_0_indexOf_Load(EOS(STATIC_14491), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726, o28726[LinkedList$Entry.next]o28721) :|: TRUE
f14491_0_indexOf_Load(EOS(STATIC_14491), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726, o28726[LinkedList$Entry.next]o28721) -> f14495_0_indexOf_Load(EOS(STATIC_14495), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28725sub0), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726, o28726[LinkedList$Entry.next]o28721) :|: TRUE
f14495_0_indexOf_Load(EOS(STATIC_14495), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28725sub0), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726, o28726[LinkedList$Entry.next]o28721) -> f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726, o28726[LinkedList$Entry.next]o28721) :|: TRUE
f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723, o28723[LinkedList$Entry.next]o28726, o28726[LinkedList$Entry.next]o28721) -> f14501_0_indexOf_FieldAccess(EOS(STATIC_14501), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), java.lang.Object(o28725sub0), java.lang.Object(o28726sub0), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o28726, o28726[LinkedList$Entry.next]o28721, o28726[LinkedList$Entry.next]o28723) :|: o28726[LinkedList$Entry.next]o28723 > 0 && o28723[LinkedList$Entry.next]o28726 > 0
f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29231sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o29231sub0), java.lang.Object(o28725sub0), java.lang.Object(o29231sub0), o28724[LinkedList$Entry.previous]o28721, o29231[LinkedList$Entry.next]o28721, o29231[LinkedList$Entry.next]o29231, o29231[LinkedList$Entry.next]o29231, o29231[LinkedList$Entry.next]o28721) -> f14502_0_indexOf_FieldAccess(EOS(STATIC_14502), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29231sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(o29231sub0), java.lang.Object(o28725sub0), java.lang.Object(o29231sub0), o28724[LinkedList$Entry.previous]o28721, o29231[LinkedList$Entry.next]o28721, o29231[LinkedList$Entry.next]o29231) :|: TRUE
f14501_0_indexOf_FieldAccess(EOS(STATIC_14501), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29235[LinkedList$Entry.next]o28721, o29235[LinkedList$Entry.next]o28723) -> f14506_0_indexOf_FieldAccess(EOS(STATIC_14506), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: o29237[LinkedList$Entry.next]o28721 < o29235[LinkedList$Entry.next]o28721 && o29235[LinkedList$Entry.next]o28721 >= 0 && o29237[LinkedList$Entry.next]o28723 < o29235[LinkedList$Entry.next]o28723 && o29235[LinkedList$Entry.next]o28723 >= 0
f14506_0_indexOf_FieldAccess(EOS(STATIC_14506), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f14511_0_indexOf_InvokeMethod(EOS(STATIC_14511), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), java.lang.Object(o28725sub0), o292360, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: TRUE
f14511_0_indexOf_InvokeMethod(EOS(STATIC_14511), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), java.lang.Object(o28725sub0), o292360, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f14516_0_equals_Load(EOS(STATIC_14516), java.lang.Object(o28725sub0), o292360, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub-2001446164), o28722-2001446164)), java.lang.Object(o28723sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), java.lang.Object(o29237sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), o292360, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: i8462 > 1 && i3984 >= 1
f14511_0_indexOf_InvokeMethod(EOS(STATIC_14511), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), java.lang.Object(o28725sub0), o292360, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f14516_1_equals_Load(EOS(STATIC_14516), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), java.lang.Object(o28725sub0), o292360, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: i8462 > 1 && i3984 >= 1
f14516_0_equals_Load(EOS(STATIC_14516), java.lang.Object(o28725sub0), o292360, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub-2001446164), o28722-2001446164)), java.lang.Object(o28723sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), java.lang.Object(o29237sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), o292360, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f15139_0_equals_Load(EOS(STATIC_15139), java.lang.Object(o28725sub0), o292360, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub-2001446164), o28722-2001446164)), java.lang.Object(o28723sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), o29236-2000670513)), java.lang.Object(o29237sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o28725sub0), o292360, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: TRUE
f14535_0_equals_Return(EOS(STATIC_14535), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o29386sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), NULL)), matching1, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f14537_0_equals_Return(EOS(STATIC_14537), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o29386sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), NULL)), 0, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: TRUE && matching1 = 0
f14537_0_equals_Return(EOS(STATIC_14537), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29693sub-2000545707), o29692-2000545707)), matching1, o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29688[LinkedList$Entry.next]o29691, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688) -> f14562_0_indexOf_EQ(EOS(STATIC_14562), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29693sub-2000545707), o29692-2000545707)), 0, o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29688[LinkedList$Entry.next]o29691, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688) :|: TRUE && matching1 = 0
f14562_0_indexOf_EQ(EOS(STATIC_14562), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29693sub-2000545707), o29692-2000545707)), matching1, o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29688[LinkedList$Entry.next]o29691, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688) -> f14570_0_indexOf_Inc(EOS(STATIC_14570), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29693sub-2000545707), o29692-2000545707)), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29688[LinkedList$Entry.next]o29691, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688) :|: TRUE && matching1 = 0
f14570_0_indexOf_Inc(EOS(STATIC_14570), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29693sub-2000545707), o29692-2000545707)), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29688[LinkedList$Entry.next]o29691, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688) -> f14582_0_indexOf_Load(EOS(STATIC_14582), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29693sub-2000545707), o29692-2000545707)), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29688[LinkedList$Entry.next]o29691, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688) :|: TRUE
f14582_0_indexOf_Load(EOS(STATIC_14582), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29693sub-2000545707), o29692-2000545707)), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29688[LinkedList$Entry.next]o29691, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688) -> f14594_0_indexOf_FieldAccess(EOS(STATIC_14594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29693sub-2000545707), o29692-2000545707)), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29688[LinkedList$Entry.next]o29691, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688) :|: TRUE
f14594_0_indexOf_FieldAccess(EOS(STATIC_14594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29693sub-2000545707), o29692-2000545707)), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29688[LinkedList$Entry.next]o29691, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688) -> f14603_0_indexOf_Store(EOS(STATIC_14603), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(o29693sub0), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688, o29688[LinkedList$Entry.next]o29693) :|: o29688[LinkedList$Entry.next]o29693 > o29688[LinkedList$Entry.next]o29691 && o29688[LinkedList$Entry.next]o29691 >= 0
f14603_0_indexOf_Store(EOS(STATIC_14603), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(o29693sub0), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688, o29688[LinkedList$Entry.next]o29693) -> f14612_0_indexOf_JMP(EOS(STATIC_14612), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(o29693sub0), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688, o29688[LinkedList$Entry.next]o29693) :|: TRUE
f14612_0_indexOf_JMP(EOS(STATIC_14612), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(o29693sub0), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688, o29688[LinkedList$Entry.next]o29693) -> f14620_0_indexOf_Load(EOS(STATIC_14620), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(o29693sub0), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688, o29688[LinkedList$Entry.next]o29693) :|: TRUE
f14620_0_indexOf_Load(EOS(STATIC_14620), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(o29693sub0), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688, o29688[LinkedList$Entry.next]o29693) -> f14477_0_indexOf_Load(EOS(STATIC_14477), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29688sub293874239), o29687293874239))))))), java.lang.Object(o29690sub0), java.lang.Object(o29693sub0), o29689[LinkedList$Entry.previous]o29686, o29688[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29686, o29693[LinkedList$Entry.next]o29688, o29688[LinkedList$Entry.next]o29693) :|: TRUE
f14536_0_equals_Return(EOS(STATIC_14536), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o29400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(o29402sub-2000670513))), matching1, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f14537_0_equals_Return(EOS(STATIC_14537), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o29400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(o29402sub-2000670513))), 0, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: TRUE && matching1 = 0
f14538_0_equals_Return(EOS(STATIC_14538), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f14540_0_equals_Return(EOS(STATIC_14540), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: TRUE && matching1 = 0
f14540_0_equals_Return(EOS(STATIC_14540), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29711sub-2000524317), java.lang.Object(javaUtilEx.Content(EOC)))), i8713, o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29706[LinkedList$Entry.next]o29709, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706) -> f14563_0_indexOf_EQ(EOS(STATIC_14563), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29711sub-2000524317), java.lang.Object(javaUtilEx.Content(EOC)))), i8713, o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29706[LinkedList$Entry.next]o29709, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706) :|: TRUE
f14563_0_indexOf_EQ(EOS(STATIC_14563), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29711sub-2000524317), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29706[LinkedList$Entry.next]o29709, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706) -> f14572_0_indexOf_EQ(EOS(STATIC_14572), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29706sub293918321), o29705293918321))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29711sub-2000524317), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o29707[LinkedList$Entry.previous]o29704, o29706[LinkedList$Entry.next]o29704, o29706[LinkedList$Entry.next]o29709, o29711[LinkedList$Entry.next]o29704, o29711[LinkedList$Entry.next]o29706) :|: TRUE && matching1 = 0
f14539_0_equals_Return(EOS(STATIC_14539), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f14540_0_equals_Return(EOS(STATIC_14540), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(javaUtilEx.Content(EOC)))), 1, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: TRUE && matching1 = 1
f14502_0_indexOf_FieldAccess(EOS(STATIC_14502), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), o29240-1708595452)), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), o28724[LinkedList$Entry.previous]o28721, o29239[LinkedList$Entry.next]o28721, o29239[LinkedList$Entry.next]o29239) -> f14507_0_indexOf_FieldAccess(EOS(STATIC_14507), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), o29240-1708595452)), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: o29241[LinkedList$Entry.next]o28721 < o29239[LinkedList$Entry.next]o28721 && o29239[LinkedList$Entry.next]o28721 >= 0 && o29241[LinkedList$Entry.next]o29239 < o29239[LinkedList$Entry.next]o29239 && o29239[LinkedList$Entry.next]o29239 >= 0
f14507_0_indexOf_FieldAccess(EOS(STATIC_14507), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), o29240-1708595452)), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f14512_0_indexOf_InvokeMethod(EOS(STATIC_14512), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), o29240-1708595452)), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), java.lang.Object(o28725sub0), o292400, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: TRUE
f14512_0_indexOf_InvokeMethod(EOS(STATIC_14512), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), o29240-1708595452)), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), java.lang.Object(o28725sub0), o292400, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f14517_0_equals_Load(EOS(STATIC_14517), java.lang.Object(o28725sub0), o292400, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub292850743), o29240292850743)), o28722-2001446164)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), java.lang.Object(o29241sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), o29240-1708595452)), o28722292074937))))))), java.lang.Object(o28725sub0), o292400, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: i8462 > 1 && i3984 >= 1
f14512_0_indexOf_InvokeMethod(EOS(STATIC_14512), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), o29240-1708595452)), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), java.lang.Object(o28725sub0), o292400, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f14517_1_equals_Load(EOS(STATIC_14517), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), o29240-1708595452)), o28722292074937))))))), java.lang.Object(o28725sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), java.lang.Object(o28725sub0), o292400, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: i8462 > 1 && i3984 >= 1
f14517_0_equals_Load(EOS(STATIC_14517), java.lang.Object(o28725sub0), o292400, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub292850743), o29240292850743)), o28722-2001446164)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), java.lang.Object(o29241sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), o29240-1708595452)), o28722292074937))))))), java.lang.Object(o28725sub0), o292400, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f15201_0_equals_Load(EOS(STATIC_15201), java.lang.Object(o28725sub0), o292400, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub292850743), o29240292850743)), o28722-2001446164)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), o29240-2000670389)), java.lang.Object(o29241sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), o29240-1708595452)), o28722292074937))))))), java.lang.Object(o28725sub0), o292400, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: TRUE
f14542_0_equals_Return(EOS(STATIC_14542), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), NULL)), o28722292074937))))))), java.lang.Object(o29471sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), NULL)), matching1, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f14544_0_equals_Return(EOS(STATIC_14544), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), NULL)), o28722292074937))))))), java.lang.Object(o29471sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), NULL)), 0, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: TRUE && matching1 = 0
f14544_0_equals_Return(EOS(STATIC_14544), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-2000522643), o29722-2000522643)), matching1, o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) -> f14564_0_indexOf_EQ(EOS(STATIC_14564), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-2000522643), o29722-2000522643)), 0, o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) :|: TRUE && matching1 = 0
f14564_0_indexOf_EQ(EOS(STATIC_14564), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-2000522643), o29722-2000522643)), matching1, o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) -> f14573_0_indexOf_Inc(EOS(STATIC_14573), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-2000522643), o29722-2000522643)), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) :|: TRUE && matching1 = 0
f14573_0_indexOf_Inc(EOS(STATIC_14573), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-2000522643), o29722-2000522643)), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) -> f14585_0_indexOf_Load(EOS(STATIC_14585), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-2000522643), o29722-2000522643)), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) :|: TRUE
f14585_0_indexOf_Load(EOS(STATIC_14585), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-2000522643), o29722-2000522643)), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) -> f14597_0_indexOf_FieldAccess(EOS(STATIC_14597), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-2000522643), o29722-2000522643)), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) :|: TRUE
f14597_0_indexOf_FieldAccess(EOS(STATIC_14597), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-2000522643), o29722-2000522643)), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) -> f14606_0_indexOf_Store(EOS(STATIC_14606), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(o29723sub0), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) :|: TRUE
f14606_0_indexOf_Store(EOS(STATIC_14606), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(o29723sub0), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) -> f14614_0_indexOf_JMP(EOS(STATIC_14614), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(o29723sub0), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) :|: TRUE
f14614_0_indexOf_JMP(EOS(STATIC_14614), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(o29723sub0), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) -> f14622_0_indexOf_Load(EOS(STATIC_14622), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(o29723sub0), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) :|: TRUE
f14622_0_indexOf_Load(EOS(STATIC_14622), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(o29723sub0), o29725[LinkedList$Entry.previous]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721) -> f14477_0_indexOf_Load(EOS(STATIC_14477), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29723sub-1706602090), o29722-1706602090)), o29720293920553))))))), java.lang.Object(o29726sub0), java.lang.Object(o29723sub0), o29725[LinkedList$Entry.previous]o29719, o29721[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29719, o29723[LinkedList$Entry.next]o29721, o29721[LinkedList$Entry.next]o29723) :|: o29721[LinkedList$Entry.next]o29723 = 1
f14543_0_equals_Return(EOS(STATIC_14543), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(o29486sub-1708595452))), o28722292074937))))))), java.lang.Object(o29484sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(o29486sub-2000670389))), matching1, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f14544_0_equals_Return(EOS(STATIC_14544), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(o29486sub-1708595452))), o28722292074937))))))), java.lang.Object(o29484sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(o29486sub-2000670389))), 0, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: TRUE && matching1 = 0
f14545_0_equals_Return(EOS(STATIC_14545), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(javaUtilEx.Content(EOC)))), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f14547_0_equals_Return(EOS(STATIC_14547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(javaUtilEx.Content(EOC)))), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: TRUE && matching1 = 0
f14547_0_equals_Return(EOS(STATIC_14547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-2000521465), java.lang.Object(javaUtilEx.Content(EOC)))), i8723, o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) -> f14565_0_indexOf_EQ(EOS(STATIC_14565), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-2000521465), java.lang.Object(javaUtilEx.Content(EOC)))), i8723, o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) :|: TRUE
f14565_0_indexOf_EQ(EOS(STATIC_14565), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-2000521465), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) -> f14575_0_indexOf_EQ(EOS(STATIC_14575), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-2000521465), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) :|: TRUE && matching1 = 0
f14575_0_indexOf_EQ(EOS(STATIC_14575), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-2000521465), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) -> f14587_0_indexOf_Inc(EOS(STATIC_14587), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-2000521465), java.lang.Object(javaUtilEx.Content(EOC)))), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) :|: TRUE && matching1 = 0
f14587_0_indexOf_Inc(EOS(STATIC_14587), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-2000521465), java.lang.Object(javaUtilEx.Content(EOC)))), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) -> f14598_0_indexOf_Load(EOS(STATIC_14598), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-2000521465), java.lang.Object(javaUtilEx.Content(EOC)))), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) :|: TRUE
f14598_0_indexOf_Load(EOS(STATIC_14598), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-2000521465), java.lang.Object(javaUtilEx.Content(EOC)))), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) -> f14607_0_indexOf_FieldAccess(EOS(STATIC_14607), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-2000521465), java.lang.Object(javaUtilEx.Content(EOC)))), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) :|: TRUE
f14607_0_indexOf_FieldAccess(EOS(STATIC_14607), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-2000521465), java.lang.Object(javaUtilEx.Content(EOC)))), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) -> f14615_0_indexOf_Store(EOS(STATIC_14615), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29740sub0), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) :|: TRUE
f14615_0_indexOf_Store(EOS(STATIC_14615), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29740sub0), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) -> f14623_0_indexOf_JMP(EOS(STATIC_14623), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29740sub0), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) :|: TRUE
f14623_0_indexOf_JMP(EOS(STATIC_14623), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29740sub0), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) -> f14629_0_indexOf_Load(EOS(STATIC_14629), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29740sub0), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) :|: TRUE
f14629_0_indexOf_Load(EOS(STATIC_14629), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29740sub0), o29742[LinkedList$Entry.previous]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738) -> f14477_0_indexOf_Load(EOS(STATIC_14477), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29740sub-1706597254), java.lang.Object(javaUtilEx.Content(EOC)))), o29737293924211))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29740sub0), o29742[LinkedList$Entry.previous]o29736, o29738[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29736, o29740[LinkedList$Entry.next]o29738, o29738[LinkedList$Entry.next]o29740) :|: o29738[LinkedList$Entry.next]o29740 = 1
f14546_0_equals_Return(EOS(STATIC_14546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(javaUtilEx.Content(EOC)))), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(javaUtilEx.Content(EOC)))), matching1, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f14547_0_equals_Return(EOS(STATIC_14547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(javaUtilEx.Content(EOC)))), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(javaUtilEx.Content(EOC)))), 1, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: TRUE && matching1 = 1
f14516_1_equals_Load(EOS(STATIC_14516), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o29386sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), NULL)), java.lang.Object(o29386sub0), NULL, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f14535_0_equals_Return(EOS(STATIC_14535), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o29386sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), NULL)), 0, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: TRUE
f14516_1_equals_Load(EOS(STATIC_14516), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o29400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(o29402sub-2000670513))), java.lang.Object(o29400sub0), java.lang.Object(o29402sub0), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f14536_0_equals_Return(EOS(STATIC_14536), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(o29400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(o29402sub-2000670513))), 0, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: TRUE
f14516_1_equals_Load(EOS(STATIC_14516), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f14538_0_equals_Return(EOS(STATIC_14538), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: TRUE
f14516_1_equals_Load(EOS(STATIC_14516), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) -> f14539_0_equals_Return(EOS(STATIC_14539), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513), java.lang.Object(javaUtilEx.Content(EOC)))), 1, o28724[LinkedList$Entry.previous]o28721, o28723[LinkedList$Entry.next]o28721, o28723[LinkedList$Entry.next]o29235, o29237[LinkedList$Entry.next]o28721, o29237[LinkedList$Entry.next]o28723) :|: TRUE
f14517_1_equals_Load(EOS(STATIC_14517), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), NULL)), o28722292074937))))))), java.lang.Object(o29471sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), NULL)), java.lang.Object(o29471sub0), NULL, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f14542_0_equals_Return(EOS(STATIC_14542), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), NULL)), o28722292074937))))))), java.lang.Object(o29471sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), NULL)), 0, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: TRUE
f14517_1_equals_Load(EOS(STATIC_14517), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(o29486sub-1708595452))), o28722292074937))))))), java.lang.Object(o29484sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(o29486sub-2000670389))), java.lang.Object(o29484sub0), java.lang.Object(o29486sub0), o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f14543_0_equals_Return(EOS(STATIC_14543), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(o29486sub-1708595452))), o28722292074937))))))), java.lang.Object(o29484sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(o29486sub-2000670389))), 0, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: TRUE
f14517_1_equals_Load(EOS(STATIC_14517), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(javaUtilEx.Content(EOC)))), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f14545_0_equals_Return(EOS(STATIC_14545), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(javaUtilEx.Content(EOC)))), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(javaUtilEx.Content(EOC)))), 0, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: TRUE
f14517_1_equals_Load(EOS(STATIC_14517), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(javaUtilEx.Content(EOC)))), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) -> f14546_0_equals_Return(EOS(STATIC_14546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452), java.lang.Object(javaUtilEx.Content(EOC)))), o28722292074937))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389), java.lang.Object(javaUtilEx.Content(EOC)))), 1, o28724[LinkedList$Entry.previous]o28721, o29241[LinkedList$Entry.next]o28721, o29241[LinkedList$Entry.next]o29239) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513:0), java.lang.Object(o29402sub-2000670513:0))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513:0), java.lang.Object(o29402sub-2000670513:0))), o28724[LinkedList$Entry.previous]o28721:0, o28723[LinkedList$Entry.next]o28721:0, o28726[LinkedList$Entry.next]o28723:0, o28723[LinkedList$Entry.next]o28726:0, o28726[LinkedList$Entry.next]o28721:0) -> f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29693sub0:0), java.lang.Object(o28725sub0:0), java.lang.Object(o29693sub0:0), o28724[LinkedList$Entry.previous]o28721:0, o28723[LinkedList$Entry.next]o28721:0, o29237[LinkedList$Entry.next]o28723:0, o29688[LinkedList$Entry.next]o29693:0, o29237[LinkedList$Entry.next]o28721:0) :|: o28723[LinkedList$Entry.next]o28726:0 > 0 && o28726[LinkedList$Entry.next]o28723:0 > 0 && o28726[LinkedList$Entry.next]o28721:0 > -1 && o29237[LinkedList$Entry.next]o28721:0 < o28726[LinkedList$Entry.next]o28721:0 && o29237[LinkedList$Entry.next]o28723:0 < o28726[LinkedList$Entry.next]o28723:0 && o29237[LinkedList$Entry.next]o28721:0 > 0 && o29688[LinkedList$Entry.next]o29693:0 > o28723[LinkedList$Entry.next]o28726:0 && i8462:0 > 1 && i3984:0 > 0
f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452:0), java.lang.Object(o29486sub-1708595452:0))), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389:0), java.lang.Object(o29486sub-2000670389:0))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389:0), java.lang.Object(o29486sub-2000670389:0))), o28724[LinkedList$Entry.previous]o28721:0, o29231[LinkedList$Entry.next]o28721:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o28721:0) -> f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452:0), java.lang.Object(o29486sub-1708595452:0))), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29723sub0:0), java.lang.Object(o28725sub0:0), java.lang.Object(o29723sub0:0), o28724[LinkedList$Entry.previous]o28721:0, o29721[LinkedList$Entry.next]o29719:0, o29241[LinkedList$Entry.next]o29239:0, 1, o29241[LinkedList$Entry.next]o28721:0) :|: o29231[LinkedList$Entry.next]o28721:0 > -1 && o29241[LinkedList$Entry.next]o28721:0 < o29231[LinkedList$Entry.next]o28721:0 && o29241[LinkedList$Entry.next]o29239:0 < o29231[LinkedList$Entry.next]o29231:0 && o29241[LinkedList$Entry.next]o28721:0 > 0 && o29231[LinkedList$Entry.next]o29231:0 > -1 && i8462:0 > 1 && i3984:0 > 0
f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452:0), java.lang.Object(javaUtilEx.Content(EOC)))), o28722292074937:0))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389:0), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389:0), java.lang.Object(javaUtilEx.Content(EOC)))), o28724[LinkedList$Entry.previous]o28721:0, o29231[LinkedList$Entry.next]o28721:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o28721:0) -> f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452:0), java.lang.Object(javaUtilEx.Content(EOC)))), o28722292074937:0))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29740sub0:0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29740sub0:0), o28724[LinkedList$Entry.previous]o28721:0, o29738[LinkedList$Entry.next]o29736:0, o29241[LinkedList$Entry.next]o29239:0, 1, o29241[LinkedList$Entry.next]o28721:0) :|: o29231[LinkedList$Entry.next]o28721:0 > -1 && o29241[LinkedList$Entry.next]o28721:0 < o29231[LinkedList$Entry.next]o28721:0 && o29241[LinkedList$Entry.next]o29239:0 < o29231[LinkedList$Entry.next]o29231:0 && o29241[LinkedList$Entry.next]o28721:0 > 0 && o29231[LinkedList$Entry.next]o29231:0 > -1 && i8462:0 > 1 && i3984:0 > 0
f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452:0), NULL)), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389:0), NULL)), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389:0), NULL)), o28724[LinkedList$Entry.previous]o28721:0, o29231[LinkedList$Entry.next]o28721:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o28721:0) -> f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452:0), NULL)), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29723sub0:0), java.lang.Object(o28725sub0:0), java.lang.Object(o29723sub0:0), o28724[LinkedList$Entry.previous]o28721:0, o29721[LinkedList$Entry.next]o29719:0, o29241[LinkedList$Entry.next]o29239:0, 1, o29241[LinkedList$Entry.next]o28721:0) :|: o29231[LinkedList$Entry.next]o28721:0 > -1 && o29241[LinkedList$Entry.next]o28721:0 < o29231[LinkedList$Entry.next]o28721:0 && o29241[LinkedList$Entry.next]o29239:0 < o29231[LinkedList$Entry.next]o29231:0 && o29241[LinkedList$Entry.next]o28721:0 > 0 && o29231[LinkedList$Entry.next]o29231:0 > -1 && i8462:0 > 1 && i3984:0 > 0
f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513:0), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513:0), java.lang.Object(javaUtilEx.Content(EOC)))), o28724[LinkedList$Entry.previous]o28721:0, o28723[LinkedList$Entry.next]o28721:0, o28726[LinkedList$Entry.next]o28723:0, o28723[LinkedList$Entry.next]o28726:0, o28726[LinkedList$Entry.next]o28721:0) -> f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29711sub0:0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o29711sub0:0), o28724[LinkedList$Entry.previous]o28721:0, o28723[LinkedList$Entry.next]o28721:0, o29237[LinkedList$Entry.next]o28723:0, o29706[LinkedList$Entry.next]o29711:0, o29237[LinkedList$Entry.next]o28721:0) :|: o28723[LinkedList$Entry.next]o28726:0 > 0 && o28726[LinkedList$Entry.next]o28723:0 > 0 && o29706[LinkedList$Entry.next]o29711:0 > o28723[LinkedList$Entry.next]o28726:0 && o28726[LinkedList$Entry.next]o28721:0 > -1 && o29237[LinkedList$Entry.next]o28721:0 < o28726[LinkedList$Entry.next]o28721:0 && o29237[LinkedList$Entry.next]o28723:0 < o28726[LinkedList$Entry.next]o28723:0 && o29237[LinkedList$Entry.next]o28721:0 > 0 && i8462:0 > 1 && i3984:0 > 0
f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513:0), NULL)), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513:0), NULL)), o28724[LinkedList$Entry.previous]o28721:0, o28723[LinkedList$Entry.next]o28721:0, o28726[LinkedList$Entry.next]o28723:0, o28723[LinkedList$Entry.next]o28726:0, o28726[LinkedList$Entry.next]o28721:0) -> f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29693sub0:0), java.lang.Object(o28725sub0:0), java.lang.Object(o29693sub0:0), o28724[LinkedList$Entry.previous]o28721:0, o28723[LinkedList$Entry.next]o28721:0, o29237[LinkedList$Entry.next]o28723:0, o29688[LinkedList$Entry.next]o29693:0, o29237[LinkedList$Entry.next]o28721:0) :|: o28723[LinkedList$Entry.next]o28726:0 > 0 && o28726[LinkedList$Entry.next]o28723:0 > 0 && o28726[LinkedList$Entry.next]o28721:0 > -1 && o29237[LinkedList$Entry.next]o28721:0 < o28726[LinkedList$Entry.next]o28721:0 && o29237[LinkedList$Entry.next]o28723:0 < o28726[LinkedList$Entry.next]o28723:0 && o29237[LinkedList$Entry.next]o28721:0 > 0 && o29688[LinkedList$Entry.next]o29693:0 > o28723[LinkedList$Entry.next]o28726:0 && i8462:0 > 1 && i3984:0 > 0
Removed following non-SCC rules:
f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452:0), o29240-1708595452:0)), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389:0), o29240-2000670389:0)), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389:0), o29240-2000670389:0)), o28724[LinkedList$Entry.previous]o28721:0, o29231[LinkedList$Entry.next]o28721:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o28721:0) -> f15201_0_equals_Load(EOS(STATIC_15201), java.lang.Object(o28725sub0:0), o292400:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub292850743:0), o29240292850743:0)), o28722-2001446164:0)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-2000670389:0), o29240-2000670389:0)), java.lang.Object(o29241sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29241sub-1708595452:0), o29240-1708595452:0)), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), o292400:0, o28724[LinkedList$Entry.previous]o28721:0, o29241[LinkedList$Entry.next]o28721:0, o29241[LinkedList$Entry.next]o29239:0) :|: o29231[LinkedList$Entry.next]o28721:0 > -1 && o29241[LinkedList$Entry.next]o28721:0 < o29231[LinkedList$Entry.next]o28721:0 && o29241[LinkedList$Entry.next]o29239:0 < o29231[LinkedList$Entry.next]o29231:0 && o29231[LinkedList$Entry.next]o29231:0 > -1 && i8462:0 > 1 && i3984:0 > 0
f14498_0_indexOf_FieldAccess(EOS(STATIC_14498), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513:0), o29236-2000670513:0)), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513:0), o29236-2000670513:0)), o28724[LinkedList$Entry.previous]o28721:0, o28723[LinkedList$Entry.next]o28721:0, o28726[LinkedList$Entry.next]o28723:0, o28723[LinkedList$Entry.next]o28726:0, o28726[LinkedList$Entry.next]o28721:0) -> f15139_0_equals_Load(EOS(STATIC_15139), java.lang.Object(o28725sub0:0), o292360:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub-2001446164:0), o28722-2001446164:0)), java.lang.Object(o28723sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o29237sub-2000670513:0), o29236-2000670513:0)), java.lang.Object(o29237sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), o292360:0, o28724[LinkedList$Entry.previous]o28721:0, o28723[LinkedList$Entry.next]o28721:0, o28723[LinkedList$Entry.next]o28726:0, o29237[LinkedList$Entry.next]o28721:0, o29237[LinkedList$Entry.next]o28723:0) :|: o28726[LinkedList$Entry.next]o28723:0 > 0 && o28726[LinkedList$Entry.next]o28721:0 > -1 && o29237[LinkedList$Entry.next]o28721:0 < o28726[LinkedList$Entry.next]o28721:0 && o29237[LinkedList$Entry.next]o28723:0 < o28726[LinkedList$Entry.next]o28723:0 && o28723[LinkedList$Entry.next]o28726:0 > 0 && i8462:0 > 1 && i3984:0 > 0
Filtered constant ground arguments:
   f14498_0_indexOf_FieldAccess(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f14498_0_indexOf_FieldAccess(x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f14498_0_indexOf_FieldAccess(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f14498_0_indexOf_FieldAccess(x1, x4, x5, x6, x7, x8, x9, x10)
Filtered unneeded arguments:
   f14498_0_indexOf_FieldAccess(x1, x2, x3, x4, x5, x6, x7, x8) -> f14498_0_indexOf_FieldAccess(x1, x2, x3, x5, x6, x7, x8)
Finished conversion. Obtained 6 rules.P rules:
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29237sub-2000670513:0), java.lang.Object(o29402sub-2000670513:0))), o28723[LinkedList$Entry.next]o28721:0, o28726[LinkedList$Entry.next]o28723:0, o28723[LinkedList$Entry.next]o28726:0, o28726[LinkedList$Entry.next]o28721:0, o28722292074937:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29693sub0:0), o28723[LinkedList$Entry.next]o28721:0, o29237[LinkedList$Entry.next]o28723:0, o29688[LinkedList$Entry.next]o29693:0, o29237[LinkedList$Entry.next]o28721:0, o28722292074937:0) :|: o28726[LinkedList$Entry.next]o28723:0 > 0 && o28723[LinkedList$Entry.next]o28726:0 > 0 && o28726[LinkedList$Entry.next]o28721:0 > -1 && o29237[LinkedList$Entry.next]o28721:0 < o28726[LinkedList$Entry.next]o28721:0 && o29237[LinkedList$Entry.next]o28723:0 < o28726[LinkedList$Entry.next]o28723:0 && o29237[LinkedList$Entry.next]o28721:0 > 0 && o29688[LinkedList$Entry.next]o29693:0 > o28723[LinkedList$Entry.next]o28726:0 && i3984:0 > 0 && i8462:0 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29241sub-1708595452:0), java.lang.Object(o29486sub-1708595452:0))), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29241sub-2000670389:0), java.lang.Object(o29486sub-2000670389:0))), o29231[LinkedList$Entry.next]o28721:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o28721:0, o28722292074937:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29241sub-1708595452:0), java.lang.Object(o29486sub-1708595452:0))), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29723sub0:0), o29721[LinkedList$Entry.next]o29719:0, o29241[LinkedList$Entry.next]o29239:0, 1, o29241[LinkedList$Entry.next]o28721:0, o28722292074937:0) :|: o29241[LinkedList$Entry.next]o28721:0 < o29231[LinkedList$Entry.next]o28721:0 && o29231[LinkedList$Entry.next]o28721:0 > -1 && o29241[LinkedList$Entry.next]o29239:0 < o29231[LinkedList$Entry.next]o29231:0 && o29241[LinkedList$Entry.next]o28721:0 > 0 && o29231[LinkedList$Entry.next]o29231:0 > -1 && i3984:0 > 0 && i8462:0 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29241sub-1708595452:0), java.lang.Object(javaUtilEx.Content))), o28722292074937:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29241sub-2000670389:0), java.lang.Object(javaUtilEx.Content))), o29231[LinkedList$Entry.next]o28721:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o28721:0, o28722292074937:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29241sub-1708595452:0), java.lang.Object(javaUtilEx.Content))), o28722292074937:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o29740sub0:0), o29738[LinkedList$Entry.next]o29736:0, o29241[LinkedList$Entry.next]o29239:0, 1, o29241[LinkedList$Entry.next]o28721:0, o28722292074937:0) :|: o29241[LinkedList$Entry.next]o28721:0 < o29231[LinkedList$Entry.next]o28721:0 && o29231[LinkedList$Entry.next]o28721:0 > -1 && o29241[LinkedList$Entry.next]o29239:0 < o29231[LinkedList$Entry.next]o29231:0 && o29241[LinkedList$Entry.next]o28721:0 > 0 && o29231[LinkedList$Entry.next]o29231:0 > -1 && i3984:0 > 0 && i8462:0 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29241sub-1708595452:0), NULL)), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29241sub-2000670389:0), NULL)), o29231[LinkedList$Entry.next]o28721:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o29231:0, o29231[LinkedList$Entry.next]o28721:0, o28722292074937:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29241sub-1708595452:0), NULL)), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29723sub0:0), o29721[LinkedList$Entry.next]o29719:0, o29241[LinkedList$Entry.next]o29239:0, 1, o29241[LinkedList$Entry.next]o28721:0, o28722292074937:0) :|: o29241[LinkedList$Entry.next]o28721:0 < o29231[LinkedList$Entry.next]o28721:0 && o29231[LinkedList$Entry.next]o28721:0 > -1 && o29241[LinkedList$Entry.next]o29239:0 < o29231[LinkedList$Entry.next]o29231:0 && o29241[LinkedList$Entry.next]o28721:0 > 0 && o29231[LinkedList$Entry.next]o29231:0 > -1 && i3984:0 > 0 && i8462:0 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29237sub-2000670513:0), java.lang.Object(javaUtilEx.Content))), o28723[LinkedList$Entry.next]o28721:0, o28726[LinkedList$Entry.next]o28723:0, o28723[LinkedList$Entry.next]o28726:0, o28726[LinkedList$Entry.next]o28721:0, o28722292074937:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o29711sub0:0), o28723[LinkedList$Entry.next]o28721:0, o29237[LinkedList$Entry.next]o28723:0, o29706[LinkedList$Entry.next]o29711:0, o29237[LinkedList$Entry.next]o28721:0, o28722292074937:0) :|: o28726[LinkedList$Entry.next]o28723:0 > 0 && o28723[LinkedList$Entry.next]o28726:0 > 0 && o29706[LinkedList$Entry.next]o29711:0 > o28723[LinkedList$Entry.next]o28726:0 && o28726[LinkedList$Entry.next]o28721:0 > -1 && o29237[LinkedList$Entry.next]o28721:0 < o28726[LinkedList$Entry.next]o28721:0 && o29237[LinkedList$Entry.next]o28723:0 < o28726[LinkedList$Entry.next]o28723:0 && o29237[LinkedList$Entry.next]o28721:0 > 0 && i3984:0 > 0 && i8462:0 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29237sub-2000670513:0), NULL)), o28723[LinkedList$Entry.next]o28721:0, o28726[LinkedList$Entry.next]o28723:0, o28723[LinkedList$Entry.next]o28726:0, o28726[LinkedList$Entry.next]o28721:0, o28722292074937:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29693sub0:0), o28723[LinkedList$Entry.next]o28721:0, o29237[LinkedList$Entry.next]o28723:0, o29688[LinkedList$Entry.next]o29693:0, o29237[LinkedList$Entry.next]o28721:0, o28722292074937:0) :|: o28726[LinkedList$Entry.next]o28723:0 > 0 && o28723[LinkedList$Entry.next]o28726:0 > 0 && o28726[LinkedList$Entry.next]o28721:0 > -1 && o29237[LinkedList$Entry.next]o28721:0 < o28726[LinkedList$Entry.next]o28721:0 && o29237[LinkedList$Entry.next]o28723:0 < o28726[LinkedList$Entry.next]o28723:0 && o29237[LinkedList$Entry.next]o28721:0 > 0 && o29688[LinkedList$Entry.next]o29693:0 > o28723[LinkedList$Entry.next]o28726:0 && i3984:0 > 0 && i8462:0 > 1

----------------------------------------

(37)
Obligation:
Rules:
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29237sub-2000670513:0), java.lang.Object(o29402sub-2000670513:0))), o28723[LinkedList$Entry.next]o28721:0, o28726[LinkedList$Entry.next]o28723:0, o28723[LinkedList$Entry.next]o28726:0, o28726[LinkedList$Entry.next]o28721:0, o28722292074937:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29693sub0:0), o28723[LinkedList$Entry.next]o28721:0, o29237[LinkedList$Entry.next]o28723:0, o29688[LinkedList$Entry.next]o29693:0, o29237[LinkedList$Entry.next]o28721:0, o28722292074937:0) :|: o28726[LinkedList$Entry.next]o28723:0 > 0 && o28723[LinkedList$Entry.next]o28726:0 > 0 && o28726[LinkedList$Entry.next]o28721:0 > -1 && o29237[LinkedList$Entry.next]o28721:0 < o28726[LinkedList$Entry.next]o28721:0 && o29237[LinkedList$Entry.next]o28723:0 < o28726[LinkedList$Entry.next]o28723:0 && o29237[LinkedList$Entry.next]o28721:0 > 0 && o29688[LinkedList$Entry.next]o29693:0 > o28723[LinkedList$Entry.next]o28726:0 && i3984:0 > 0 && i8462:0 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), java.lang.Object(x1))), x2))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x7, x6, x2) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), java.lang.Object(x1))), x2))))))), java.lang.Object(x3), java.lang.Object(x8), x9, x10, 1, x11, x2) :|: x11 < x6 && x6 > -1 && x10 < x7 && x11 > 0 && x7 > -1 && x12 > 0 && x13 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(javaUtilEx.Content))), x15))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(javaUtilEx.Content))), x17, x18, x18, x17, x15) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(javaUtilEx.Content))), x15))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x19), x20, x21, 1, x22, x15) :|: x22 < x17 && x17 > -1 && x21 < x18 && x22 > 0 && x18 > -1 && x23 > 0 && x24 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), NULL)), x26))))))), java.lang.Object(x27), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), NULL)), x29, x30, x30, x29, x26) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), NULL)), x26))))))), java.lang.Object(x27), java.lang.Object(x31), x32, x33, 1, x34, x26) :|: x34 < x29 && x29 > -1 && x33 < x30 && x34 > 0 && x30 > -1 && x35 > 0 && x36 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x37), x38))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x39), java.lang.Object(javaUtilEx.Content))), x40, x41, x42, x43, x38) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x37), x38))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), x40, x45, x46, x47, x38) :|: x41 > 0 && x42 > 0 && x46 > x42 && x43 > -1 && x47 < x43 && x45 < x41 && x47 > 0 && x48 > 0 && x49 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x50), x51))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), NULL)), x54, x55, x56, x57, x51) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x50), x51))))))), java.lang.Object(x52), java.lang.Object(x58), x54, x59, x60, x61, x51) :|: x55 > 0 && x56 > 0 && x57 > -1 && x61 < x57 && x59 < x55 && x61 > 0 && x60 > x56 && x62 > 0 && x63 > 1

----------------------------------------

(38) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(39)
Obligation:
Rules:
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29237sub-2000670513:0), java.lang.Object(o29402sub-2000670513:0))), o28723[LinkedList$Entry.next]o28721:0, o28726[LinkedList$Entry.next]o28723:0, o28723[LinkedList$Entry.next]o28726:0, o28726[LinkedList$Entry.next]o28721:0, o28722292074937:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29693sub0:0), o28723[LinkedList$Entry.next]o28721:0, o29237[LinkedList$Entry.next]o28723:0, o29688[LinkedList$Entry.next]o29693:0, o29237[LinkedList$Entry.next]o28721:0, o28722292074937:0) :|: o28726[LinkedList$Entry.next]o28723:0 > 0 && o28723[LinkedList$Entry.next]o28726:0 > 0 && o28726[LinkedList$Entry.next]o28721:0 > -1 && o29237[LinkedList$Entry.next]o28721:0 < o28726[LinkedList$Entry.next]o28721:0 && o29237[LinkedList$Entry.next]o28723:0 < o28726[LinkedList$Entry.next]o28723:0 && o29237[LinkedList$Entry.next]o28721:0 > 0 && o29688[LinkedList$Entry.next]o29693:0 > o28723[LinkedList$Entry.next]o28726:0 && i3984:0 > 0 && i8462:0 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), java.lang.Object(x1))), x2))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x7, x6, x2) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), java.lang.Object(x1))), x2))))))), java.lang.Object(x3), java.lang.Object(x8), x9, x10, 1, x11, x2) :|: x11 < x6 && x6 > -1 && x10 < x7 && x11 > 0 && x7 > -1 && x12 > 0 && x13 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(javaUtilEx.Content))), x15))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(javaUtilEx.Content))), x17, x18, x18, x17, x15) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(javaUtilEx.Content))), x15))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x19), x20, x21, 1, x22, x15) :|: x22 < x17 && x17 > -1 && x21 < x18 && x22 > 0 && x18 > -1 && x23 > 0 && x24 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), NULL)), x26))))))), java.lang.Object(x27), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), NULL)), x29, x30, x30, x29, x26) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), NULL)), x26))))))), java.lang.Object(x27), java.lang.Object(x31), x32, x33, 1, x34, x26) :|: x34 < x29 && x29 > -1 && x33 < x30 && x34 > 0 && x30 > -1 && x35 > 0 && x36 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x37), x38))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x39), java.lang.Object(javaUtilEx.Content))), x40, x41, x42, x43, x38) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x37), x38))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), x40, x45, x46, x47, x38) :|: x41 > 0 && x42 > 0 && x46 > x42 && x43 > -1 && x47 < x43 && x45 < x41 && x47 > 0 && x48 > 0 && x49 > 1
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x50), x51))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), NULL)), x54, x55, x56, x57, x51) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x50), x51))))))), java.lang.Object(x52), java.lang.Object(x58), x54, x59, x60, x61, x51) :|: x55 > 0 && x56 > 0 && x57 > -1 && x61 < x57 && x59 < x55 && x61 > 0 && x60 > x56 && x62 > 0 && x63 > 1

----------------------------------------

(40) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29237sub-2000670513:0), java.lang.Object(o29402sub-2000670513:0))), o28723[LinkedList$Entry.next]o28721:0, o28726[LinkedList$Entry.next]o28723:0, o28723[LinkedList$Entry.next]o28726:0, o28726[LinkedList$Entry.next]o28721:0, o28722292074937:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29693sub0:0), o28723[LinkedList$Entry.next]o28721:0, o29237[LinkedList$Entry.next]o28723:0, o29688[LinkedList$Entry.next]o29693:0, o29237[LinkedList$Entry.next]o28721:0, o28722292074937:0) :|: o28726[LinkedList$Entry.next]o28723:0 > 0 && o28723[LinkedList$Entry.next]o28726:0 > 0 && o28726[LinkedList$Entry.next]o28721:0 > -1 && o29237[LinkedList$Entry.next]o28721:0 < o28726[LinkedList$Entry.next]o28721:0 && o29237[LinkedList$Entry.next]o28723:0 < o28726[LinkedList$Entry.next]o28723:0 && o29237[LinkedList$Entry.next]o28721:0 > 0 && o29688[LinkedList$Entry.next]o29693:0 > o28723[LinkedList$Entry.next]o28726:0 && i3984:0 > 0 && i8462:0 > 1
(2) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), java.lang.Object(x1))), x2))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x7, x6, x2) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), java.lang.Object(x1))), x2))))))), java.lang.Object(x3), java.lang.Object(x8), x9, x10, 1, x11, x2) :|: x11 < x6 && x6 > -1 && x10 < x7 && x11 > 0 && x7 > -1 && x12 > 0 && x13 > 1
(3) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(javaUtilEx.Content))), x15))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(javaUtilEx.Content))), x17, x18, x18, x17, x15) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(javaUtilEx.Content))), x15))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x19), x20, x21, 1, x22, x15) :|: x22 < x17 && x17 > -1 && x21 < x18 && x22 > 0 && x18 > -1 && x23 > 0 && x24 > 1
(4) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), NULL)), x26))))))), java.lang.Object(x27), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), NULL)), x29, x30, x30, x29, x26) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), NULL)), x26))))))), java.lang.Object(x27), java.lang.Object(x31), x32, x33, 1, x34, x26) :|: x34 < x29 && x29 > -1 && x33 < x30 && x34 > 0 && x30 > -1 && x35 > 0 && x36 > 1
(5) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x37), x38))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x39), java.lang.Object(javaUtilEx.Content))), x40, x41, x42, x43, x38) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x37), x38))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), x40, x45, x46, x47, x38) :|: x41 > 0 && x42 > 0 && x46 > x42 && x43 > -1 && x47 < x43 && x45 < x41 && x47 > 0 && x48 > 0 && x49 > 1
(6) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x50), x51))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), NULL)), x54, x55, x56, x57, x51) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x50), x51))))))), java.lang.Object(x52), java.lang.Object(x58), x54, x59, x60, x61, x51) :|: x55 > 0 && x56 > 0 && x57 > -1 && x61 < x57 && x59 < x55 && x61 > 0 && x60 > x56 && x62 > 0 && x63 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (5), (6)
(3) -> (1), (2), (3), (5), (6)
(4) -> (1), (4), (5), (6)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (2), (3), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(41)
Obligation:

Termination digraph:
Nodes:
(1) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29237sub-2000670513:0), java.lang.Object(o29402sub-2000670513:0))), o28723[LinkedList$Entry.next]o28721:0, o28726[LinkedList$Entry.next]o28723:0, o28723[LinkedList$Entry.next]o28726:0, o28726[LinkedList$Entry.next]o28721:0, o28722292074937:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0), o28722292074937:0))))))), java.lang.Object(o28725sub0:0), java.lang.Object(o29693sub0:0), o28723[LinkedList$Entry.next]o28721:0, o29237[LinkedList$Entry.next]o28723:0, o29688[LinkedList$Entry.next]o29693:0, o29237[LinkedList$Entry.next]o28721:0, o28722292074937:0) :|: o28726[LinkedList$Entry.next]o28723:0 > 0 && o28723[LinkedList$Entry.next]o28726:0 > 0 && o28726[LinkedList$Entry.next]o28721:0 > -1 && o29237[LinkedList$Entry.next]o28721:0 < o28726[LinkedList$Entry.next]o28721:0 && o29237[LinkedList$Entry.next]o28723:0 < o28726[LinkedList$Entry.next]o28723:0 && o29237[LinkedList$Entry.next]o28721:0 > 0 && o29688[LinkedList$Entry.next]o29693:0 > o28723[LinkedList$Entry.next]o28726:0 && i3984:0 > 0 && i8462:0 > 1
(2) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), java.lang.Object(x1))), x2))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x7, x6, x2) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x), java.lang.Object(x1))), x2))))))), java.lang.Object(x3), java.lang.Object(x8), x9, x10, 1, x11, x2) :|: x11 < x6 && x6 > -1 && x10 < x7 && x11 > 0 && x7 > -1 && x12 > 0 && x13 > 1
(3) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(javaUtilEx.Content))), x15))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(javaUtilEx.Content))), x17, x18, x18, x17, x15) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(javaUtilEx.Content))), x15))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x19), x20, x21, 1, x22, x15) :|: x22 < x17 && x17 > -1 && x21 < x18 && x22 > 0 && x18 > -1 && x23 > 0 && x24 > 1
(4) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x37), x38))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x39), java.lang.Object(javaUtilEx.Content))), x40, x41, x42, x43, x38) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x37), x38))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), x40, x45, x46, x47, x38) :|: x41 > 0 && x42 > 0 && x46 > x42 && x43 > -1 && x47 < x43 && x45 < x41 && x47 > 0 && x48 > 0 && x49 > 1
(5) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), NULL)), x26))))))), java.lang.Object(x27), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28), NULL)), x29, x30, x30, x29, x26) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), NULL)), x26))))))), java.lang.Object(x27), java.lang.Object(x31), x32, x33, 1, x34, x26) :|: x34 < x29 && x29 > -1 && x33 < x30 && x34 > 0 && x30 > -1 && x35 > 0 && x36 > 1
(6) f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x50), x51))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), NULL)), x54, x55, x56, x57, x51) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x50), x51))))))), java.lang.Object(x52), java.lang.Object(x58), x54, x59, x60, x61, x51) :|: x55 > 0 && x56 > 0 && x57 > -1 && x61 < x57 && x59 < x55 && x61 > 0 && x60 > x56 && x62 > 0 && x63 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (6)
(3) -> (1), (2), (3), (4), (6)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (4), (5), (6)
(6) -> (1), (2), (3), (4), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(42) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(43)
Obligation:
Rules:
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0:0), o28722292074937:0:0))))))), java.lang.Object(o28725sub0:0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o29237sub-2000670513:0:0), java.lang.Object(o29402sub-2000670513:0:0))), o28723[LinkedList$Entry.next]o28721:0:0, o28726[LinkedList$Entry.next]o28723:0:0, o28723[LinkedList$Entry.next]o28726:0:0, o28726[LinkedList$Entry.next]o28721:0:0, o28722292074937:0:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o28723sub292074937:0:0), o28722292074937:0:0))))))), java.lang.Object(o28725sub0:0:0), java.lang.Object(o29693sub0:0:0), o28723[LinkedList$Entry.next]o28721:0:0, o29237[LinkedList$Entry.next]o28723:0:0, o29688[LinkedList$Entry.next]o29693:0:0, o29237[LinkedList$Entry.next]o28721:0:0, o28722292074937:0:0) :|: i3984:0:0 > 0 && i8462:0:0 > 1 && o29688[LinkedList$Entry.next]o29693:0:0 > o28723[LinkedList$Entry.next]o28726:0:0 && o29237[LinkedList$Entry.next]o28721:0:0 > 0 && o29237[LinkedList$Entry.next]o28723:0:0 < o28726[LinkedList$Entry.next]o28723:0:0 && o29237[LinkedList$Entry.next]o28721:0:0 < o28726[LinkedList$Entry.next]o28721:0:0 && o28726[LinkedList$Entry.next]o28721:0:0 > -1 && o28723[LinkedList$Entry.next]o28726:0:0 > 0 && o28726[LinkedList$Entry.next]o28723:0:0 > 0
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x50:0), x51:0))))))), java.lang.Object(x52:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53:0), NULL)), x54:0, x55:0, x56:0, x57:0, x51:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x50:0), x51:0))))))), java.lang.Object(x52:0), java.lang.Object(x58:0), x54:0, x59:0, x60:0, x61:0, x51:0) :|: x62:0 > 0 && x63:0 > 1 && x60:0 > x56:0 && x61:0 > 0 && x59:0 < x55:0 && x61:0 < x57:0 && x57:0 > -1 && x56:0 > 0 && x55:0 > 0
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x:0), java.lang.Object(x1:0))), x2:0))))))), java.lang.Object(x3:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4:0), java.lang.Object(x5:0))), x6:0, x7:0, x7:0, x6:0, x2:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x:0), java.lang.Object(x1:0))), x2:0))))))), java.lang.Object(x3:0), java.lang.Object(x8:0), x9:0, x10:0, 1, x11:0, x2:0) :|: x12:0 > 0 && x13:0 > 1 && x7:0 > -1 && x11:0 > 0 && x7:0 > x10:0 && x6:0 > -1 && x6:0 > x11:0
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x37:0), x38:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x39:0), java.lang.Object(javaUtilEx.Content))), x40:0, x41:0, x42:0, x43:0, x38:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x37:0), x38:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44:0), x40:0, x45:0, x46:0, x47:0, x38:0) :|: x48:0 > 0 && x49:0 > 1 && x47:0 > 0 && x45:0 < x41:0 && x47:0 < x43:0 && x43:0 > -1 && x46:0 > x42:0 && x42:0 > 0 && x41:0 > 0
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14:0), java.lang.Object(javaUtilEx.Content))), x15:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16:0), java.lang.Object(javaUtilEx.Content))), x17:0, x18:0, x18:0, x17:0, x15:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14:0), java.lang.Object(javaUtilEx.Content))), x15:0))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x19:0), x20:0, x21:0, 1, x22:0, x15:0) :|: x23:0 > 0 && x24:0 > 1 && x18:0 > -1 && x22:0 > 0 && x21:0 < x18:0 && x17:0 > -1 && x22:0 < x17:0
f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25:0), NULL)), x26:0))))))), java.lang.Object(x27:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x28:0), NULL)), x29:0, x30:0, x30:0, x29:0, x26:0) -> f14498_0_indexOf_FieldAccess(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25:0), NULL)), x26:0))))))), java.lang.Object(x27:0), java.lang.Object(x31:0), x32:0, x33:0, 1, x34:0, x26:0) :|: x35:0 > 0 && x36:0 > 1 && x30:0 > -1 && x34:0 > 0 && x33:0 < x30:0 && x29:0 > -1 && x34:0 < x29:0

----------------------------------------

(44) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f14498_0_indexOf_FieldAccess(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, VARIABLE, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
NULL()
javaUtilEx.Content()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(45)
Obligation:
Rules:
f14498_0_indexOf_FieldAccess(c, c1, c2, o28723[LinkedList$Entry.next]o28721:0:0, o28726[LinkedList$Entry.next]o28723:0:0, o28723[LinkedList$Entry.next]o28726:0:0, o28726[LinkedList$Entry.next]o28721:0:0, o28722292074937:0:0) -> f14498_0_indexOf_FieldAccess(c3, c4, c5, o28723[LinkedList$Entry.next]o28721:0:0, o29237[LinkedList$Entry.next]o28723:0:0, o29688[LinkedList$Entry.next]o29693:0:0, o29237[LinkedList$Entry.next]o28721:0:0, o28722292074937:0:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i3984:0:0 > 0 && i8462:0:0 > 1 && o29688[LinkedList$Entry.next]o29693:0:0 > o28723[LinkedList$Entry.next]o28726:0:0 && o29237[LinkedList$Entry.next]o28721:0:0 > 0 && o29237[LinkedList$Entry.next]o28723:0:0 < o28726[LinkedList$Entry.next]o28723:0:0 && o29237[LinkedList$Entry.next]o28721:0:0 < o28726[LinkedList$Entry.next]o28721:0:0 && o28726[LinkedList$Entry.next]o28721:0:0 > -1 && o28723[LinkedList$Entry.next]o28726:0:0 > 0 && o28726[LinkedList$Entry.next]o28723:0:0 > 0)
f14498_0_indexOf_FieldAccess(c12, c13, c14, x6:0, x7:0, x7:0, x6:0, x2:0) -> f14498_0_indexOf_FieldAccess(c15, c16, c17, x9:0, x10:0, c18, x11:0, x2:0) :|: c18 = 1 && (c17 = 0 && (c16 = 0 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))))) && (x12:0 > 0 && x13:0 > 1 && x7:0 > -1 && x11:0 > 0 && x7:0 > x10:0 && x6:0 > -1 && x6:0 > x11:0)
f14498_0_indexOf_FieldAccess(c19, c20, c21, x40:0, x41:0, x42:0, x43:0, x38:0) -> f14498_0_indexOf_FieldAccess(c22, c23, c24, x40:0, x45:0, x46:0, x47:0, x38:0) :|: c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0)))) && (x48:0 > 0 && x49:0 > 1 && x47:0 > 0 && x45:0 < x41:0 && x47:0 < x43:0 && x43:0 > -1 && x46:0 > x42:0 && x42:0 > 0 && x41:0 > 0)
f14498_0_indexOf_FieldAccess(c25, c26, c27, x17:0, x18:0, x18:0, x17:0, x15:0) -> f14498_0_indexOf_FieldAccess(c28, c29, c30, x20:0, x21:0, c31, x22:0, x15:0) :|: c31 = 1 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && (c26 = 0 && c25 = 0))))) && (x23:0 > 0 && x24:0 > 1 && x18:0 > -1 && x22:0 > 0 && x21:0 < x18:0 && x17:0 > -1 && x22:0 < x17:0)

----------------------------------------

(46) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f14498_0_indexOf_FieldAccess ] = f14498_0_indexOf_FieldAccess_7

The following rules are decreasing:
f14498_0_indexOf_FieldAccess(c, c1, c2, o28723[LinkedList$Entry.next]o28721:0:0, o28726[LinkedList$Entry.next]o28723:0:0, o28723[LinkedList$Entry.next]o28726:0:0, o28726[LinkedList$Entry.next]o28721:0:0, o28722292074937:0:0) -> f14498_0_indexOf_FieldAccess(c3, c4, c5, o28723[LinkedList$Entry.next]o28721:0:0, o29237[LinkedList$Entry.next]o28723:0:0, o29688[LinkedList$Entry.next]o29693:0:0, o29237[LinkedList$Entry.next]o28721:0:0, o28722292074937:0:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i3984:0:0 > 0 && i8462:0:0 > 1 && o29688[LinkedList$Entry.next]o29693:0:0 > o28723[LinkedList$Entry.next]o28726:0:0 && o29237[LinkedList$Entry.next]o28721:0:0 > 0 && o29237[LinkedList$Entry.next]o28723:0:0 < o28726[LinkedList$Entry.next]o28723:0:0 && o29237[LinkedList$Entry.next]o28721:0:0 < o28726[LinkedList$Entry.next]o28721:0:0 && o28726[LinkedList$Entry.next]o28721:0:0 > -1 && o28723[LinkedList$Entry.next]o28726:0:0 > 0 && o28726[LinkedList$Entry.next]o28723:0:0 > 0)
f14498_0_indexOf_FieldAccess(c12, c13, c14, x6:0, x7:0, x7:0, x6:0, x2:0) -> f14498_0_indexOf_FieldAccess(c15, c16, c17, x9:0, x10:0, c18, x11:0, x2:0) :|: c18 = 1 && (c17 = 0 && (c16 = 0 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))))) && (x12:0 > 0 && x13:0 > 1 && x7:0 > -1 && x11:0 > 0 && x7:0 > x10:0 && x6:0 > -1 && x6:0 > x11:0)
f14498_0_indexOf_FieldAccess(c19, c20, c21, x40:0, x41:0, x42:0, x43:0, x38:0) -> f14498_0_indexOf_FieldAccess(c22, c23, c24, x40:0, x45:0, x46:0, x47:0, x38:0) :|: c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0)))) && (x48:0 > 0 && x49:0 > 1 && x47:0 > 0 && x45:0 < x41:0 && x47:0 < x43:0 && x43:0 > -1 && x46:0 > x42:0 && x42:0 > 0 && x41:0 > 0)
f14498_0_indexOf_FieldAccess(c25, c26, c27, x17:0, x18:0, x18:0, x17:0, x15:0) -> f14498_0_indexOf_FieldAccess(c28, c29, c30, x20:0, x21:0, c31, x22:0, x15:0) :|: c31 = 1 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && (c26 = 0 && c25 = 0))))) && (x23:0 > 0 && x24:0 > 1 && x18:0 > -1 && x22:0 > 0 && x21:0 < x18:0 && x17:0 > -1 && x22:0 < x17:0)

The following rules are bounded:
f14498_0_indexOf_FieldAccess(c, c1, c2, o28723[LinkedList$Entry.next]o28721:0:0, o28726[LinkedList$Entry.next]o28723:0:0, o28723[LinkedList$Entry.next]o28726:0:0, o28726[LinkedList$Entry.next]o28721:0:0, o28722292074937:0:0) -> f14498_0_indexOf_FieldAccess(c3, c4, c5, o28723[LinkedList$Entry.next]o28721:0:0, o29237[LinkedList$Entry.next]o28723:0:0, o29688[LinkedList$Entry.next]o29693:0:0, o29237[LinkedList$Entry.next]o28721:0:0, o28722292074937:0:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i3984:0:0 > 0 && i8462:0:0 > 1 && o29688[LinkedList$Entry.next]o29693:0:0 > o28723[LinkedList$Entry.next]o28726:0:0 && o29237[LinkedList$Entry.next]o28721:0:0 > 0 && o29237[LinkedList$Entry.next]o28723:0:0 < o28726[LinkedList$Entry.next]o28723:0:0 && o29237[LinkedList$Entry.next]o28721:0:0 < o28726[LinkedList$Entry.next]o28721:0:0 && o28726[LinkedList$Entry.next]o28721:0:0 > -1 && o28723[LinkedList$Entry.next]o28726:0:0 > 0 && o28726[LinkedList$Entry.next]o28723:0:0 > 0)
f14498_0_indexOf_FieldAccess(c12, c13, c14, x6:0, x7:0, x7:0, x6:0, x2:0) -> f14498_0_indexOf_FieldAccess(c15, c16, c17, x9:0, x10:0, c18, x11:0, x2:0) :|: c18 = 1 && (c17 = 0 && (c16 = 0 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))))) && (x12:0 > 0 && x13:0 > 1 && x7:0 > -1 && x11:0 > 0 && x7:0 > x10:0 && x6:0 > -1 && x6:0 > x11:0)
f14498_0_indexOf_FieldAccess(c19, c20, c21, x40:0, x41:0, x42:0, x43:0, x38:0) -> f14498_0_indexOf_FieldAccess(c22, c23, c24, x40:0, x45:0, x46:0, x47:0, x38:0) :|: c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0)))) && (x48:0 > 0 && x49:0 > 1 && x47:0 > 0 && x45:0 < x41:0 && x47:0 < x43:0 && x43:0 > -1 && x46:0 > x42:0 && x42:0 > 0 && x41:0 > 0)
f14498_0_indexOf_FieldAccess(c25, c26, c27, x17:0, x18:0, x18:0, x17:0, x15:0) -> f14498_0_indexOf_FieldAccess(c28, c29, c30, x20:0, x21:0, c31, x22:0, x15:0) :|: c31 = 1 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && (c26 = 0 && c25 = 0))))) && (x23:0 > 0 && x24:0 > 1 && x18:0 > -1 && x22:0 > 0 && x21:0 < x18:0 && x17:0 > -1 && x22:0 < x17:0)


----------------------------------------

(47)
YES

----------------------------------------

(48)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateContains.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, next]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(49) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 65 IRulesP rules:
f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(o16234sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382, java.lang.Object(o16232sub-2032070382))), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234, o16234[LinkedList$Entry.next]o16230) -> f13537_0_indexOf_Load(EOS(STATIC_13537), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234, o16234[LinkedList$Entry.next]o16230) :|: TRUE
f13537_0_indexOf_Load(EOS(STATIC_13537), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234, o16234[LinkedList$Entry.next]o16230) -> f13547_0_indexOf_Load(EOS(STATIC_13547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(javaUtilEx.Content(EOC)), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234, o16234[LinkedList$Entry.next]o16230) :|: TRUE
f13547_0_indexOf_Load(EOS(STATIC_13547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(javaUtilEx.Content(EOC)), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234, o16234[LinkedList$Entry.next]o16230) -> f13558_0_indexOf_FieldAccess(EOS(STATIC_13558), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234, o16234[LinkedList$Entry.next]o16230) :|: TRUE
f13558_0_indexOf_FieldAccess(EOS(STATIC_13558), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234, o16234[LinkedList$Entry.next]o16230) -> f13570_0_indexOf_FieldAccess(EOS(STATIC_13570), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o16234, o16234[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232) :|: o16234[LinkedList$Entry.next]o16232 > 0 && o16232[LinkedList$Entry.next]o16234 > 0
f13558_0_indexOf_FieldAccess(EOS(STATIC_13558), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o17224sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17224sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17224sub0), o17224[LinkedList$Entry.next]o16230, o17224[LinkedList$Entry.next]o17224, o17224[LinkedList$Entry.next]o17224, o17224[LinkedList$Entry.next]o16230) -> f13571_0_indexOf_FieldAccess(EOS(STATIC_13571), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o17224sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17224sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17224sub0), o17224[LinkedList$Entry.next]o16230, o17224[LinkedList$Entry.next]o17224) :|: TRUE
f13570_0_indexOf_FieldAccess(EOS(STATIC_13570), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17257[LinkedList$Entry.next]o16230, o17257[LinkedList$Entry.next]o16232) -> f13581_0_indexOf_FieldAccess(EOS(STATIC_13581), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: o17259[LinkedList$Entry.next]o16230 < o17257[LinkedList$Entry.next]o16230 && o17257[LinkedList$Entry.next]o16230 >= 0 && o17259[LinkedList$Entry.next]o16232 < o17257[LinkedList$Entry.next]o16232 && o17257[LinkedList$Entry.next]o16232 >= 0
f13581_0_indexOf_FieldAccess(EOS(STATIC_13581), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f13593_0_indexOf_InvokeMethod(EOS(STATIC_13593), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), java.lang.Object(javaUtilEx.Content(EOC)), o172580, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: TRUE
f13593_0_indexOf_InvokeMethod(EOS(STATIC_13593), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), java.lang.Object(javaUtilEx.Content(EOC)), o172580, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f13606_0_equals_Load(EOS(STATIC_13606), java.lang.Object(javaUtilEx.Content(EOC)), o172580, java.lang.Object(o16232sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382, java.lang.Object(o16232sub-2032070382))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), java.lang.Object(o17259sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172580, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: i5285 > 1
f13593_0_indexOf_InvokeMethod(EOS(STATIC_13593), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), java.lang.Object(javaUtilEx.Content(EOC)), o172580, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f13606_1_equals_Load(EOS(STATIC_13606), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), java.lang.Object(javaUtilEx.Content(EOC)), o172580, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: i5285 > 1
f13606_0_equals_Load(EOS(STATIC_13606), java.lang.Object(javaUtilEx.Content(EOC)), o172580, java.lang.Object(o16232sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382, java.lang.Object(o16232sub-2032070382))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), java.lang.Object(o17259sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172580, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f15349_0_equals_Load(EOS(STATIC_15349), java.lang.Object(javaUtilEx.Content(EOC)), o172580, java.lang.Object(o16232sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382, java.lang.Object(o16232sub-2032070382))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722, java.lang.Object(o17259sub-2031144722))), java.lang.Object(o17259sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172580, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: TRUE
f13998_0_equals_Return(EOS(STATIC_13998), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17259sub-2031144722))), matching1, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f13689_0_equals_Return(EOS(STATIC_13689), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17259sub-2031144722))), 0, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: TRUE && matching1 = 0
f13689_0_equals_Return(EOS(STATIC_13689), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18133-2030253069, java.lang.Object(o18134sub-2030253069))), matching1, o18130[LinkedList$Entry.next]o18128, o18130[LinkedList$Entry.next]o18132, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130) -> f13707_0_indexOf_EQ(EOS(STATIC_13707), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18133-2030253069, java.lang.Object(o18134sub-2030253069))), 0, o18130[LinkedList$Entry.next]o18128, o18130[LinkedList$Entry.next]o18132, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130) :|: TRUE && matching1 = 0
f13707_0_indexOf_EQ(EOS(STATIC_13707), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18133-2030253069, java.lang.Object(o18134sub-2030253069))), matching1, o18130[LinkedList$Entry.next]o18128, o18130[LinkedList$Entry.next]o18132, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130) -> f13722_0_indexOf_Inc(EOS(STATIC_13722), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18133-2030253069, java.lang.Object(o18134sub-2030253069))), o18130[LinkedList$Entry.next]o18128, o18130[LinkedList$Entry.next]o18132, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130) :|: TRUE && matching1 = 0
f13722_0_indexOf_Inc(EOS(STATIC_13722), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18133-2030253069, java.lang.Object(o18134sub-2030253069))), o18130[LinkedList$Entry.next]o18128, o18130[LinkedList$Entry.next]o18132, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130) -> f13739_0_indexOf_Load(EOS(STATIC_13739), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18133-2030253069, java.lang.Object(o18134sub-2030253069))), o18130[LinkedList$Entry.next]o18128, o18130[LinkedList$Entry.next]o18132, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130) :|: TRUE
f13739_0_indexOf_Load(EOS(STATIC_13739), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18133-2030253069, java.lang.Object(o18134sub-2030253069))), o18130[LinkedList$Entry.next]o18128, o18130[LinkedList$Entry.next]o18132, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130) -> f13750_0_indexOf_FieldAccess(EOS(STATIC_13750), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18133-2030253069, java.lang.Object(o18134sub-2030253069))), o18130[LinkedList$Entry.next]o18128, o18130[LinkedList$Entry.next]o18132, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130) :|: TRUE
f13750_0_indexOf_FieldAccess(EOS(STATIC_13750), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18133-2030253069, java.lang.Object(o18134sub-2030253069))), o18130[LinkedList$Entry.next]o18128, o18130[LinkedList$Entry.next]o18132, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130) -> f13764_0_indexOf_Store(EOS(STATIC_13764), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18134sub0), o18130[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130, o18130[LinkedList$Entry.next]o18134) :|: o18130[LinkedList$Entry.next]o18134 > o18130[LinkedList$Entry.next]o18132 && o18130[LinkedList$Entry.next]o18132 >= 0
f13764_0_indexOf_Store(EOS(STATIC_13764), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18134sub0), o18130[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130, o18130[LinkedList$Entry.next]o18134) -> f13786_0_indexOf_JMP(EOS(STATIC_13786), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18134sub0), o18130[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130, o18130[LinkedList$Entry.next]o18134) :|: TRUE
f13786_0_indexOf_JMP(EOS(STATIC_13786), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18134sub0), o18130[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130, o18130[LinkedList$Entry.next]o18134) -> f13804_0_indexOf_Load(EOS(STATIC_13804), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18134sub0), o18130[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130, o18130[LinkedList$Entry.next]o18134) :|: TRUE
f13804_0_indexOf_Load(EOS(STATIC_13804), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18134sub0), o18130[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130, o18130[LinkedList$Entry.next]o18134) -> f13471_0_indexOf_Load(EOS(STATIC_13471), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18129234459577, java.lang.Object(o18130sub234459577)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18134sub0), o18130[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18128, o18134[LinkedList$Entry.next]o18130, o18130[LinkedList$Entry.next]o18134) :|: TRUE
f13471_0_indexOf_Load(EOS(STATIC_13471), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234) -> f13488_0_indexOf_Load(EOS(STATIC_13488), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(o16234sub0), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234) :|: TRUE
f13488_0_indexOf_Load(EOS(STATIC_13488), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(o16234sub0), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234) -> f13505_0_indexOf_FieldAccess(EOS(STATIC_13505), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(o16234sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234) :|: TRUE
f13505_0_indexOf_FieldAccess(EOS(STATIC_13505), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(o16234sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234) -> f13515_0_indexOf_EQ(EOS(STATIC_13515), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(o16234sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382, java.lang.Object(o16232sub-2032070382))), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234) :|: TRUE
f13515_0_indexOf_EQ(EOS(STATIC_13515), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(o16234sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382, java.lang.Object(o16232sub-2032070382))), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234) -> f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16234sub0), java.lang.Object(o16234sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382, java.lang.Object(o16232sub-2032070382))), o16232[LinkedList$Entry.next]o16230, o16234[LinkedList$Entry.next]o16232, o16232[LinkedList$Entry.next]o16234, o16234[LinkedList$Entry.next]o16230) :|: o16234[LinkedList$Entry.next]o16230 > 0
f14011_0_equals_Return(EOS(STATIC_14011), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21899sub-2031144722), java.lang.Object(o17259sub-2031144722))), matching1, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f13689_0_equals_Return(EOS(STATIC_13689), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21899sub-2031144722), java.lang.Object(o17259sub-2031144722))), 0, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: TRUE && matching1 = 0
f14114_0_equals_Return(EOS(STATIC_14114), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17259sub-2031144722))), matching1, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f13777_0_equals_Return(EOS(STATIC_13777), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17259sub-2031144722))), 0, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: TRUE && matching1 = 0
f13777_0_equals_Return(EOS(STATIC_13777), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub-2029242841))), i5984, o19407[LinkedList$Entry.next]o19405, o19407[LinkedList$Entry.next]o19409, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407) -> f13792_0_indexOf_EQ(EOS(STATIC_13792), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub-2029242841))), i5984, o19407[LinkedList$Entry.next]o19405, o19407[LinkedList$Entry.next]o19409, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407) :|: TRUE
f13792_0_indexOf_EQ(EOS(STATIC_13792), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub-2029242841))), matching1, o19407[LinkedList$Entry.next]o19405, o19407[LinkedList$Entry.next]o19409, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407) -> f13813_0_indexOf_EQ(EOS(STATIC_13813), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub-2029242841))), 0, o19407[LinkedList$Entry.next]o19405, o19407[LinkedList$Entry.next]o19409, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407) :|: TRUE && matching1 = 0
f13813_0_indexOf_EQ(EOS(STATIC_13813), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub-2029242841))), matching1, o19407[LinkedList$Entry.next]o19405, o19407[LinkedList$Entry.next]o19409, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407) -> f13831_0_indexOf_Inc(EOS(STATIC_13831), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub-2029242841))), o19407[LinkedList$Entry.next]o19405, o19407[LinkedList$Entry.next]o19409, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407) :|: TRUE && matching1 = 0
f13831_0_indexOf_Inc(EOS(STATIC_13831), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub-2029242841))), o19407[LinkedList$Entry.next]o19405, o19407[LinkedList$Entry.next]o19409, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407) -> f13844_0_indexOf_Load(EOS(STATIC_13844), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub-2029242841))), o19407[LinkedList$Entry.next]o19405, o19407[LinkedList$Entry.next]o19409, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407) :|: TRUE
f13844_0_indexOf_Load(EOS(STATIC_13844), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub-2029242841))), o19407[LinkedList$Entry.next]o19405, o19407[LinkedList$Entry.next]o19409, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407) -> f13858_0_indexOf_FieldAccess(EOS(STATIC_13858), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub-2029242841))), o19407[LinkedList$Entry.next]o19405, o19407[LinkedList$Entry.next]o19409, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407) :|: TRUE
f13858_0_indexOf_FieldAccess(EOS(STATIC_13858), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub-2029242841))), o19407[LinkedList$Entry.next]o19405, o19407[LinkedList$Entry.next]o19409, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407) -> f13872_0_indexOf_Store(EOS(STATIC_13872), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub0), o19407[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407, o19407[LinkedList$Entry.next]o19411) :|: o19407[LinkedList$Entry.next]o19411 > o19407[LinkedList$Entry.next]o19409 && o19407[LinkedList$Entry.next]o19409 >= 0
f13872_0_indexOf_Store(EOS(STATIC_13872), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub0), o19407[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407, o19407[LinkedList$Entry.next]o19411) -> f13764_0_indexOf_Store(EOS(STATIC_13764), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19406236481335, java.lang.Object(o19407sub236481335)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub0), o19407[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19405, o19411[LinkedList$Entry.next]o19407, o19407[LinkedList$Entry.next]o19411) :|: TRUE
f14122_0_equals_Return(EOS(STATIC_14122), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17259sub-2031144722))), matching1, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f13777_0_equals_Return(EOS(STATIC_13777), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17259sub-2031144722))), 1, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: TRUE && matching1 = 1
f13571_0_indexOf_FieldAccess(EOS(STATIC_13571), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), o17261[LinkedList$Entry.next]o16230, o17261[LinkedList$Entry.next]o17261) -> f13582_0_indexOf_FieldAccess(EOS(STATIC_13582), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: o17263[LinkedList$Entry.next]o16230 < o17261[LinkedList$Entry.next]o16230 && o17261[LinkedList$Entry.next]o16230 >= 0 && o17263[LinkedList$Entry.next]o17261 < o17261[LinkedList$Entry.next]o17261 && o17261[LinkedList$Entry.next]o17261 >= 0
f13582_0_indexOf_FieldAccess(EOS(STATIC_13582), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f13594_0_indexOf_InvokeMethod(EOS(STATIC_13594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), java.lang.Object(javaUtilEx.Content(EOC)), o172620, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: TRUE
f13594_0_indexOf_InvokeMethod(EOS(STATIC_13594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), java.lang.Object(javaUtilEx.Content(EOC)), o172620, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f13607_0_equals_Load(EOS(STATIC_13607), java.lang.Object(javaUtilEx.Content(EOC)), o172620, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262231752967, java.lang.Object(o17263sub231752967))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), java.lang.Object(o17263sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172620, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: i5285 > 1
f13594_0_indexOf_InvokeMethod(EOS(STATIC_13594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), java.lang.Object(javaUtilEx.Content(EOC)), o172620, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f13607_1_equals_Load(EOS(STATIC_13607), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), java.lang.Object(javaUtilEx.Content(EOC)), o172620, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: i5285 > 1
f13607_0_equals_Load(EOS(STATIC_13607), java.lang.Object(javaUtilEx.Content(EOC)), o172620, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262231752967, java.lang.Object(o17263sub231752967))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), java.lang.Object(o17263sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172620, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f15429_0_equals_Load(EOS(STATIC_15429), java.lang.Object(javaUtilEx.Content(EOC)), o172620, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262231752967, java.lang.Object(o17263sub231752967))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947, java.lang.Object(o17263sub-2031143947))), java.lang.Object(o17263sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172620, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: TRUE
f13999_0_equals_Return(EOS(STATIC_13999), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-2031143947))), matching1, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f13693_0_equals_Return(EOS(STATIC_13693), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-2031143947))), 0, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: TRUE && matching1 = 0
f13693_0_equals_Return(EOS(STATIC_13693), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-2030248326, java.lang.Object(o18182sub-2030248326))), matching1, o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180) -> f13708_0_indexOf_EQ(EOS(STATIC_13708), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-2030248326, java.lang.Object(o18182sub-2030248326))), 0, o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180) :|: TRUE && matching1 = 0
f13708_0_indexOf_EQ(EOS(STATIC_13708), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-2030248326, java.lang.Object(o18182sub-2030248326))), matching1, o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180) -> f13723_0_indexOf_Inc(EOS(STATIC_13723), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-2030248326, java.lang.Object(o18182sub-2030248326))), o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180) :|: TRUE && matching1 = 0
f13723_0_indexOf_Inc(EOS(STATIC_13723), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-2030248326, java.lang.Object(o18182sub-2030248326))), o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180) -> f13740_0_indexOf_Load(EOS(STATIC_13740), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-2030248326, java.lang.Object(o18182sub-2030248326))), o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180) :|: TRUE
f13740_0_indexOf_Load(EOS(STATIC_13740), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-2030248326, java.lang.Object(o18182sub-2030248326))), o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180) -> f13751_0_indexOf_FieldAccess(EOS(STATIC_13751), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-2030248326, java.lang.Object(o18182sub-2030248326))), o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180) :|: TRUE
f13751_0_indexOf_FieldAccess(EOS(STATIC_13751), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-2030248326, java.lang.Object(o18182sub-2030248326))), o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180) -> f13765_0_indexOf_Store(EOS(STATIC_13765), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18182sub0), o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180) :|: TRUE
f13765_0_indexOf_Store(EOS(STATIC_13765), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18182sub0), o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180) -> f13872_0_indexOf_Store(EOS(STATIC_13872), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18179234469187, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18181-1795779139, java.lang.Object(o18182sub-1795779139)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18182sub0), o18180[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18178, o18182[LinkedList$Entry.next]o18180, o18180[LinkedList$Entry.next]o18182) :|: o18180[LinkedList$Entry.next]o18182 = 1
f14012_0_equals_Return(EOS(STATIC_14012), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-1800318097), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-2031143947), java.lang.Object(o17263sub-2031143947))), matching1, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f13693_0_equals_Return(EOS(STATIC_13693), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-1800318097), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-2031143947), java.lang.Object(o17263sub-2031143947))), 0, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: TRUE && matching1 = 0
f14115_0_equals_Return(EOS(STATIC_14115), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-2031143947))), matching1, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f13779_0_equals_Return(EOS(STATIC_13779), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-2031143947))), 0, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: TRUE && matching1 = 0
f13779_0_equals_Return(EOS(STATIC_13779), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-2029240051))), i6000, o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) -> f13793_0_indexOf_EQ(EOS(STATIC_13793), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-2029240051))), i6000, o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) :|: TRUE
f13793_0_indexOf_EQ(EOS(STATIC_13793), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-2029240051))), matching1, o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) -> f13815_0_indexOf_EQ(EOS(STATIC_13815), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-2029240051))), 0, o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) :|: TRUE && matching1 = 0
f13815_0_indexOf_EQ(EOS(STATIC_13815), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-2029240051))), matching1, o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) -> f13833_0_indexOf_Inc(EOS(STATIC_13833), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-2029240051))), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) :|: TRUE && matching1 = 0
f13833_0_indexOf_Inc(EOS(STATIC_13833), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-2029240051))), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) -> f13845_0_indexOf_Load(EOS(STATIC_13845), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-2029240051))), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) :|: TRUE
f13845_0_indexOf_Load(EOS(STATIC_13845), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-2029240051))), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) -> f13859_0_indexOf_FieldAccess(EOS(STATIC_13859), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-2029240051))), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) :|: TRUE
f13859_0_indexOf_FieldAccess(EOS(STATIC_13859), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-2029240051))), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) -> f13873_0_indexOf_Store(EOS(STATIC_13873), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub0), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) :|: TRUE
f13873_0_indexOf_Store(EOS(STATIC_13873), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub0), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) -> f13885_0_indexOf_JMP(EOS(STATIC_13885), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub0), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) :|: TRUE
f13885_0_indexOf_JMP(EOS(STATIC_13885), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub0), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) -> f13901_0_indexOf_Load(EOS(STATIC_13901), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub0), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) :|: TRUE
f13901_0_indexOf_Load(EOS(STATIC_13901), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub0), o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436) -> f13471_0_indexOf_Load(EOS(STATIC_13471), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19435236487039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub-1792753012)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub0), o19436[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19434, o19438[LinkedList$Entry.next]o19436, o19436[LinkedList$Entry.next]o19438) :|: o19436[LinkedList$Entry.next]o19438 = 1
f14123_0_equals_Return(EOS(STATIC_14123), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-2031143947))), matching1, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f13779_0_equals_Return(EOS(STATIC_13779), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-2031143947))), 1, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: TRUE && matching1 = 1
f13606_1_equals_Load(EOS(STATIC_13606), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17259sub-2031144722))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f13998_0_equals_Return(EOS(STATIC_13998), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17259sub-2031144722))), 0, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: TRUE
f13606_1_equals_Load(EOS(STATIC_13606), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21899sub-2031144722), java.lang.Object(o17259sub-2031144722))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o21899sub0), o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f14011_0_equals_Return(EOS(STATIC_14011), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21899sub-2031144722), java.lang.Object(o17259sub-2031144722))), 0, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: TRUE
f13606_1_equals_Load(EOS(STATIC_13606), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17259sub-2031144722))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f14114_0_equals_Return(EOS(STATIC_14114), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17259sub-2031144722))), 0, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: TRUE
f13606_1_equals_Load(EOS(STATIC_13606), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17259sub-2031144722))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) -> f14122_0_equals_Return(EOS(STATIC_14122), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(o16232sub230825850)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17259sub-2031144722))), 1, o16232[LinkedList$Entry.next]o16230, o16232[LinkedList$Entry.next]o17257, o17259[LinkedList$Entry.next]o16230, o17259[LinkedList$Entry.next]o16232) :|: TRUE
f13607_1_equals_Load(EOS(STATIC_13607), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-2031143947))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f13999_0_equals_Return(EOS(STATIC_13999), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-2031143947))), 0, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: TRUE
f13607_1_equals_Load(EOS(STATIC_13607), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-1800318097), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-2031143947), java.lang.Object(o17263sub-2031143947))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o21913sub0), o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f14012_0_equals_Return(EOS(STATIC_14012), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-1800318097), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-2031143947), java.lang.Object(o17263sub-2031143947))), 0, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: TRUE
f13607_1_equals_Load(EOS(STATIC_13607), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-2031143947))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f14115_0_equals_Return(EOS(STATIC_14115), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-2031143947))), 0, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: TRUE
f13607_1_equals_Load(EOS(STATIC_13607), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-2031143947))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) -> f14123_0_equals_Return(EOS(STATIC_14123), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-1800318097)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-2031143947))), 1, o17263[LinkedList$Entry.next]o16230, o17263[LinkedList$Entry.next]o17261) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17259sub-2031144722:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17259sub-2031144722:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:0, java.lang.Object(o16232sub-2032070382:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16234:0, o16234[LinkedList$Entry.next]o16230:0) -> f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19411sub0:0), java.lang.Object(o19411sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:1, java.lang.Object(o16232sub-2032070382:1))), o16232[LinkedList$Entry.next]o16230:0, o17259[LinkedList$Entry.next]o16232:0, o19407[LinkedList$Entry.next]o19411:0, o17259[LinkedList$Entry.next]o16230:0) :|: o16232[LinkedList$Entry.next]o16234:0 > 0 && o16234[LinkedList$Entry.next]o16232:0 > 0 && o16234[LinkedList$Entry.next]o16230:0 > -1 && o17259[LinkedList$Entry.next]o16230:0 < o16234[LinkedList$Entry.next]o16230:0 && o17259[LinkedList$Entry.next]o16232:0 < o16234[LinkedList$Entry.next]o16232:0 && o19407[LinkedList$Entry.next]o19411:0 > o16232[LinkedList$Entry.next]o16234:0 && i5285:0 > 1 && o17259[LinkedList$Entry.next]o16230:0 > 0
f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21899sub-2031144722:0), java.lang.Object(o17259sub-2031144722:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21899sub-2031144722:0), java.lang.Object(o17259sub-2031144722:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:0, java.lang.Object(o16232sub-2032070382:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16234:0, o16234[LinkedList$Entry.next]o16230:0) -> f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18134sub0:0), java.lang.Object(o18134sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:1, java.lang.Object(o16232sub-2032070382:1))), o16232[LinkedList$Entry.next]o16230:0, o17259[LinkedList$Entry.next]o16232:0, o18130[LinkedList$Entry.next]o18134:0, o17259[LinkedList$Entry.next]o16230:0) :|: o16232[LinkedList$Entry.next]o16234:0 > 0 && o16234[LinkedList$Entry.next]o16232:0 > 0 && o18130[LinkedList$Entry.next]o18134:0 > o16232[LinkedList$Entry.next]o16234:0 && o16234[LinkedList$Entry.next]o16230:0 > -1 && o17259[LinkedList$Entry.next]o16230:0 < o16234[LinkedList$Entry.next]o16230:0 && o17259[LinkedList$Entry.next]o16232:0 < o16234[LinkedList$Entry.next]o16232:0 && o17259[LinkedList$Entry.next]o16230:0 > 0 && i5285:0 > 1
f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-2031143947:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-2031143947:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:0, java.lang.Object(o16232sub-2032070382:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16230:0) -> f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19438sub0:0), java.lang.Object(o19438sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:1, java.lang.Object(o16232sub-2032070382:1))), o19436[LinkedList$Entry.next]o19434:0, o17263[LinkedList$Entry.next]o17261:0, 1, o17263[LinkedList$Entry.next]o16230:0) :|: o16232[LinkedList$Entry.next]o16230:0 > -1 && o17263[LinkedList$Entry.next]o16230:0 < o16232[LinkedList$Entry.next]o16230:0 && o17263[LinkedList$Entry.next]o17261:0 < o16234[LinkedList$Entry.next]o16232:0 && o16234[LinkedList$Entry.next]o16232:0 > -1 && i5285:0 > 1 && o17263[LinkedList$Entry.next]o16230:0 > 0
f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-2031143947:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-2031143947:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:0, java.lang.Object(o16232sub-2032070382:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16230:0) -> f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18182sub0:0), java.lang.Object(o18182sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:1, java.lang.Object(o16232sub-2032070382:1))), o18180[LinkedList$Entry.next]o18178:0, o17263[LinkedList$Entry.next]o17261:0, 1, o17263[LinkedList$Entry.next]o16230:0) :|: o16232[LinkedList$Entry.next]o16230:0 > -1 && o17263[LinkedList$Entry.next]o16230:0 < o16232[LinkedList$Entry.next]o16230:0 && o17263[LinkedList$Entry.next]o17261:0 < o16234[LinkedList$Entry.next]o16232:0 && o16234[LinkedList$Entry.next]o16232:0 > -1 && i5285:0 > 1 && o17263[LinkedList$Entry.next]o16230:0 > 0
f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17259sub-2031144722:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17259sub-2031144722:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:0, java.lang.Object(o16232sub-2032070382:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16234:0, o16234[LinkedList$Entry.next]o16230:0) -> f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18134sub0:0), java.lang.Object(o18134sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:1, java.lang.Object(o16232sub-2032070382:1))), o16232[LinkedList$Entry.next]o16230:0, o17259[LinkedList$Entry.next]o16232:0, o18130[LinkedList$Entry.next]o18134:0, o17259[LinkedList$Entry.next]o16230:0) :|: o16232[LinkedList$Entry.next]o16234:0 > 0 && o16234[LinkedList$Entry.next]o16232:0 > 0 && o18130[LinkedList$Entry.next]o18134:0 > o16232[LinkedList$Entry.next]o16234:0 && o16234[LinkedList$Entry.next]o16230:0 > -1 && o17259[LinkedList$Entry.next]o16230:0 < o16234[LinkedList$Entry.next]o16230:0 && o17259[LinkedList$Entry.next]o16232:0 < o16234[LinkedList$Entry.next]o16232:0 && o17259[LinkedList$Entry.next]o16230:0 > 0 && i5285:0 > 1
f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-1800318097:0), java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-2031143947:0), java.lang.Object(o17263sub-2031143947:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-2031143947:0), java.lang.Object(o17263sub-2031143947:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:0, java.lang.Object(o16232sub-2032070382:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16230:0) -> f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21913sub-1800318097:0), java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18182sub0:0), java.lang.Object(o18182sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:1, java.lang.Object(o16232sub-2032070382:1))), o18180[LinkedList$Entry.next]o18178:0, o17263[LinkedList$Entry.next]o17261:0, 1, o17263[LinkedList$Entry.next]o16230:0) :|: o16232[LinkedList$Entry.next]o16230:0 > -1 && o17263[LinkedList$Entry.next]o16230:0 < o16232[LinkedList$Entry.next]o16230:0 && o17263[LinkedList$Entry.next]o17261:0 < o16234[LinkedList$Entry.next]o16232:0 && o16234[LinkedList$Entry.next]o16232:0 > -1 && i5285:0 > 1 && o17263[LinkedList$Entry.next]o16230:0 > 0
Removed following non-SCC rules:
f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097:0, java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947:0, java.lang.Object(o17263sub-2031143947:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947:0, java.lang.Object(o17263sub-2031143947:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:0, java.lang.Object(o16232sub-2032070382:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16230:0) -> f15429_0_equals_Load(EOS(STATIC_15429), java.lang.Object(javaUtilEx.Content(EOC)), o172620:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:1, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262231752967:0, java.lang.Object(o17263sub231752967:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-2031143947:0, java.lang.Object(o17263sub-2031143947:0))), java.lang.Object(o17263sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17262-1800318097:0, java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172620:0, o17263[LinkedList$Entry.next]o16230:0, o17263[LinkedList$Entry.next]o17261:0) :|: o16232[LinkedList$Entry.next]o16230:0 > -1 && o17263[LinkedList$Entry.next]o16230:0 < o16232[LinkedList$Entry.next]o16230:0 && o17263[LinkedList$Entry.next]o17261:0 < o16234[LinkedList$Entry.next]o16232:0 && i5285:0 > 1 && o16234[LinkedList$Entry.next]o16232:0 > -1
f13527_0_indexOf_EQ(EOS(STATIC_13527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722:0, java.lang.Object(o17259sub-2031144722:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722:0, java.lang.Object(o17259sub-2031144722:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:0, java.lang.Object(o16232sub-2032070382:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16234:0, o16234[LinkedList$Entry.next]o16230:0) -> f15349_0_equals_Load(EOS(STATIC_15349), java.lang.Object(javaUtilEx.Content(EOC)), o172580:0, java.lang.Object(o16232sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231-2032070382:1, java.lang.Object(o16232sub-2032070382:1))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17258-2031144722:0, java.lang.Object(o17259sub-2031144722:0))), java.lang.Object(o17259sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172580:0, o16232[LinkedList$Entry.next]o16230:0, o16232[LinkedList$Entry.next]o16234:0, o17259[LinkedList$Entry.next]o16230:0, o17259[LinkedList$Entry.next]o16232:0) :|: o16234[LinkedList$Entry.next]o16232:0 > 0 && o16234[LinkedList$Entry.next]o16230:0 > -1 && o17259[LinkedList$Entry.next]o16230:0 < o16234[LinkedList$Entry.next]o16230:0 && o17259[LinkedList$Entry.next]o16232:0 < o16234[LinkedList$Entry.next]o16232:0 && i5285:0 > 1 && o16232[LinkedList$Entry.next]o16234:0 > 0
Filtered constant ground arguments:
   f13527_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13527_0_indexOf_EQ(x2, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13527_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f13527_0_indexOf_EQ(x1, x3, x4, x5, x6, x7, x8)
Filtered unneeded arguments:
   f13527_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7) -> f13527_0_indexOf_EQ(x1, x2, x4, x5, x6, x7)
Finished conversion. Obtained 6 rules.P rules:
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17259sub-2031144722:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16234:0, o16234[LinkedList$Entry.next]o16230:0, o16231230825850:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(o19411sub0:0), o16232[LinkedList$Entry.next]o16230:0, o17259[LinkedList$Entry.next]o16232:0, o19407[LinkedList$Entry.next]o19411:0, o17259[LinkedList$Entry.next]o16230:0, o16231230825850:0) :|: o16234[LinkedList$Entry.next]o16232:0 > 0 && o16232[LinkedList$Entry.next]o16234:0 > 0 && o16234[LinkedList$Entry.next]o16230:0 > -1 && o17259[LinkedList$Entry.next]o16230:0 < o16234[LinkedList$Entry.next]o16230:0 && o17259[LinkedList$Entry.next]o16232:0 < o16234[LinkedList$Entry.next]o16232:0 && o19407[LinkedList$Entry.next]o19411:0 > o16232[LinkedList$Entry.next]o16234:0 && o17259[LinkedList$Entry.next]o16230:0 > 0 && i5285:0 > 1
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21899sub-2031144722:0), java.lang.Object(o17259sub-2031144722:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16234:0, o16234[LinkedList$Entry.next]o16230:0, o16231230825850:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(o18134sub0:0), o16232[LinkedList$Entry.next]o16230:0, o17259[LinkedList$Entry.next]o16232:0, o18130[LinkedList$Entry.next]o18134:0, o17259[LinkedList$Entry.next]o16230:0, o16231230825850:0) :|: o16234[LinkedList$Entry.next]o16232:0 > 0 && o16232[LinkedList$Entry.next]o16234:0 > 0 && o18130[LinkedList$Entry.next]o18134:0 > o16232[LinkedList$Entry.next]o16234:0 && o16234[LinkedList$Entry.next]o16230:0 > -1 && o17259[LinkedList$Entry.next]o16230:0 < o16234[LinkedList$Entry.next]o16230:0 && o17259[LinkedList$Entry.next]o16232:0 < o16234[LinkedList$Entry.next]o16232:0 && i5285:0 > 1 && o17259[LinkedList$Entry.next]o16230:0 > 0
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17263sub-2031143947:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16230:0, o16231230825850:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(o19438sub0:0), o19436[LinkedList$Entry.next]o19434:0, o17263[LinkedList$Entry.next]o17261:0, 1, o17263[LinkedList$Entry.next]o16230:0, o16231230825850:0) :|: o17263[LinkedList$Entry.next]o16230:0 < o16232[LinkedList$Entry.next]o16230:0 && o16232[LinkedList$Entry.next]o16230:0 > -1 && o17263[LinkedList$Entry.next]o17261:0 < o16234[LinkedList$Entry.next]o16232:0 && o16234[LinkedList$Entry.next]o16232:0 > -1 && o17263[LinkedList$Entry.next]o16230:0 > 0 && i5285:0 > 1
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17263sub-2031143947:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16230:0, o16231230825850:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(o18182sub0:0), o18180[LinkedList$Entry.next]o18178:0, o17263[LinkedList$Entry.next]o17261:0, 1, o17263[LinkedList$Entry.next]o16230:0, o16231230825850:0) :|: o17263[LinkedList$Entry.next]o16230:0 < o16232[LinkedList$Entry.next]o16230:0 && o16232[LinkedList$Entry.next]o16230:0 > -1 && o17263[LinkedList$Entry.next]o17261:0 < o16234[LinkedList$Entry.next]o16232:0 && o16234[LinkedList$Entry.next]o16232:0 > -1 && o17263[LinkedList$Entry.next]o16230:0 > 0 && i5285:0 > 1
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17259sub-2031144722:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16234:0, o16234[LinkedList$Entry.next]o16230:0, o16231230825850:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(o18134sub0:0), o16232[LinkedList$Entry.next]o16230:0, o17259[LinkedList$Entry.next]o16232:0, o18130[LinkedList$Entry.next]o18134:0, o17259[LinkedList$Entry.next]o16230:0, o16231230825850:0) :|: o16234[LinkedList$Entry.next]o16232:0 > 0 && o16232[LinkedList$Entry.next]o16234:0 > 0 && o18130[LinkedList$Entry.next]o18134:0 > o16232[LinkedList$Entry.next]o16234:0 && o16234[LinkedList$Entry.next]o16230:0 > -1 && o17259[LinkedList$Entry.next]o16230:0 < o16234[LinkedList$Entry.next]o16230:0 && o17259[LinkedList$Entry.next]o16232:0 < o16234[LinkedList$Entry.next]o16232:0 && i5285:0 > 1 && o17259[LinkedList$Entry.next]o16230:0 > 0
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21913sub-1800318097:0), java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21913sub-2031143947:0), java.lang.Object(o17263sub-2031143947:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16230:0, o16231230825850:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21913sub-1800318097:0), java.lang.Object(o17263sub-1800318097:0)))))))))), java.lang.Object(o18182sub0:0), o18180[LinkedList$Entry.next]o18178:0, o17263[LinkedList$Entry.next]o17261:0, 1, o17263[LinkedList$Entry.next]o16230:0, o16231230825850:0) :|: o17263[LinkedList$Entry.next]o16230:0 < o16232[LinkedList$Entry.next]o16230:0 && o16232[LinkedList$Entry.next]o16230:0 > -1 && o17263[LinkedList$Entry.next]o17261:0 < o16234[LinkedList$Entry.next]o16232:0 && o16234[LinkedList$Entry.next]o16232:0 > -1 && o17263[LinkedList$Entry.next]o16230:0 > 0 && i5285:0 > 1

----------------------------------------

(50)
Obligation:
Rules:
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17259sub-2031144722:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16234:0, o16234[LinkedList$Entry.next]o16230:0, o16231230825850:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(o19411sub0:0), o16232[LinkedList$Entry.next]o16230:0, o17259[LinkedList$Entry.next]o16232:0, o19407[LinkedList$Entry.next]o19411:0, o17259[LinkedList$Entry.next]o16230:0, o16231230825850:0) :|: o16234[LinkedList$Entry.next]o16232:0 > 0 && o16232[LinkedList$Entry.next]o16234:0 > 0 && o16234[LinkedList$Entry.next]o16230:0 > -1 && o17259[LinkedList$Entry.next]o16230:0 < o16234[LinkedList$Entry.next]o16230:0 && o17259[LinkedList$Entry.next]o16232:0 < o16234[LinkedList$Entry.next]o16232:0 && o19407[LinkedList$Entry.next]o19411:0 > o16232[LinkedList$Entry.next]o16234:0 && o17259[LinkedList$Entry.next]o16230:0 > 0 && i5285:0 > 1
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x10 > x6 && x7 > -1 && x11 < x7 && x9 < x5 && x12 > 1 && x11 > 0
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15))), x16, x17, x17, x16, x13) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14)))))))))), java.lang.Object(x18), x19, x20, 1, x21, x13) :|: x21 < x16 && x16 > -1 && x20 < x17 && x17 > -1 && x21 > 0 && x22 > 1
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x25))), x26, x27, x27, x26, x23) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x24)))))))))), java.lang.Object(x28), x29, x30, 1, x31, x23) :|: x31 < x26 && x26 > -1 && x30 < x27 && x27 > -1 && x31 > 0 && x32 > 1
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x36, x41, x42, x43, x33) :|: x37 > 0 && x38 > 0 && x42 > x38 && x39 > -1 && x43 < x39 && x41 < x37 && x44 > 1 && x43 > 0
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), x53, x54, 1, x55, x45) :|: x55 < x50 && x50 > -1 && x54 < x51 && x51 > -1 && x55 > 0 && x56 > 1

----------------------------------------

(51) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(52)
Obligation:
Rules:
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17259sub-2031144722:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16234:0, o16234[LinkedList$Entry.next]o16230:0, o16231230825850:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(o19411sub0:0), o16232[LinkedList$Entry.next]o16230:0, o17259[LinkedList$Entry.next]o16232:0, o19407[LinkedList$Entry.next]o19411:0, o17259[LinkedList$Entry.next]o16230:0, o16231230825850:0) :|: o16234[LinkedList$Entry.next]o16232:0 > 0 && o16232[LinkedList$Entry.next]o16234:0 > 0 && o16234[LinkedList$Entry.next]o16230:0 > -1 && o17259[LinkedList$Entry.next]o16230:0 < o16234[LinkedList$Entry.next]o16230:0 && o17259[LinkedList$Entry.next]o16232:0 < o16234[LinkedList$Entry.next]o16232:0 && o19407[LinkedList$Entry.next]o19411:0 > o16232[LinkedList$Entry.next]o16234:0 && o17259[LinkedList$Entry.next]o16230:0 > 0 && i5285:0 > 1
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x10 > x6 && x7 > -1 && x11 < x7 && x9 < x5 && x12 > 1 && x11 > 0
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15))), x16, x17, x17, x16, x13) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14)))))))))), java.lang.Object(x18), x19, x20, 1, x21, x13) :|: x21 < x16 && x16 > -1 && x20 < x17 && x17 > -1 && x21 > 0 && x22 > 1
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x25))), x26, x27, x27, x26, x23) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x24)))))))))), java.lang.Object(x28), x29, x30, 1, x31, x23) :|: x31 < x26 && x26 > -1 && x30 < x27 && x27 > -1 && x31 > 0 && x32 > 1
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x36, x41, x42, x43, x33) :|: x37 > 0 && x38 > 0 && x42 > x38 && x39 > -1 && x43 < x39 && x41 < x37 && x44 > 1 && x43 > 0
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), x53, x54, 1, x55, x45) :|: x55 < x50 && x50 > -1 && x54 < x51 && x51 > -1 && x55 > 0 && x56 > 1

----------------------------------------

(53) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17259sub-2031144722:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16234:0, o16234[LinkedList$Entry.next]o16230:0, o16231230825850:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(o19411sub0:0), o16232[LinkedList$Entry.next]o16230:0, o17259[LinkedList$Entry.next]o16232:0, o19407[LinkedList$Entry.next]o19411:0, o17259[LinkedList$Entry.next]o16230:0, o16231230825850:0) :|: o16234[LinkedList$Entry.next]o16232:0 > 0 && o16232[LinkedList$Entry.next]o16234:0 > 0 && o16234[LinkedList$Entry.next]o16230:0 > -1 && o17259[LinkedList$Entry.next]o16230:0 < o16234[LinkedList$Entry.next]o16230:0 && o17259[LinkedList$Entry.next]o16232:0 < o16234[LinkedList$Entry.next]o16232:0 && o19407[LinkedList$Entry.next]o19411:0 > o16232[LinkedList$Entry.next]o16234:0 && o17259[LinkedList$Entry.next]o16230:0 > 0 && i5285:0 > 1
(2) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x10 > x6 && x7 > -1 && x11 < x7 && x9 < x5 && x12 > 1 && x11 > 0
(3) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15))), x16, x17, x17, x16, x13) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14)))))))))), java.lang.Object(x18), x19, x20, 1, x21, x13) :|: x21 < x16 && x16 > -1 && x20 < x17 && x17 > -1 && x21 > 0 && x22 > 1
(4) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x25))), x26, x27, x27, x26, x23) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x24)))))))))), java.lang.Object(x28), x29, x30, 1, x31, x23) :|: x31 < x26 && x26 > -1 && x30 < x27 && x27 > -1 && x31 > 0 && x32 > 1
(5) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x36, x41, x42, x43, x33) :|: x37 > 0 && x38 > 0 && x42 > x38 && x39 > -1 && x43 < x39 && x41 < x37 && x44 > 1 && x43 > 0
(6) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), x53, x54, 1, x55, x45) :|: x55 < x50 && x50 > -1 && x54 < x51 && x51 > -1 && x55 > 0 && x56 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (5), (6)
(4) -> (1), (2), (4), (5)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (2), (3), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(54)
Obligation:

Termination digraph:
Nodes:
(1) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17259sub-2031144722:0))), o16232[LinkedList$Entry.next]o16230:0, o16234[LinkedList$Entry.next]o16232:0, o16232[LinkedList$Entry.next]o16234:0, o16234[LinkedList$Entry.next]o16230:0, o16231230825850:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0, java.lang.Object(o16232sub230825850:0)))))))), java.lang.Object(o19411sub0:0), o16232[LinkedList$Entry.next]o16230:0, o17259[LinkedList$Entry.next]o16232:0, o19407[LinkedList$Entry.next]o19411:0, o17259[LinkedList$Entry.next]o16230:0, o16231230825850:0) :|: o16234[LinkedList$Entry.next]o16232:0 > 0 && o16232[LinkedList$Entry.next]o16234:0 > 0 && o16234[LinkedList$Entry.next]o16230:0 > -1 && o17259[LinkedList$Entry.next]o16230:0 < o16234[LinkedList$Entry.next]o16230:0 && o17259[LinkedList$Entry.next]o16232:0 < o16234[LinkedList$Entry.next]o16232:0 && o19407[LinkedList$Entry.next]o19411:0 > o16232[LinkedList$Entry.next]o16234:0 && o17259[LinkedList$Entry.next]o16230:0 > 0 && i5285:0 > 1
(2) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x10 > x6 && x7 > -1 && x11 < x7 && x9 < x5 && x12 > 1 && x11 > 0
(3) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15))), x16, x17, x17, x16, x13) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14)))))))))), java.lang.Object(x18), x19, x20, 1, x21, x13) :|: x21 < x16 && x16 > -1 && x20 < x17 && x17 > -1 && x21 > 0 && x22 > 1
(4) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x36, x41, x42, x43, x33) :|: x37 > 0 && x38 > 0 && x42 > x38 && x39 > -1 && x43 < x39 && x41 < x37 && x44 > 1 && x43 > 0
(5) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), x53, x54, 1, x55, x45) :|: x55 < x50 && x50 > -1 && x54 < x51 && x51 > -1 && x55 > 0 && x56 > 1
(6) f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x25))), x26, x27, x27, x26, x23) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x24)))))))))), java.lang.Object(x28), x29, x30, 1, x31, x23) :|: x31 < x26 && x26 > -1 && x30 < x27 && x27 > -1 && x31 > 0 && x32 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (4), (5)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (2), (3), (4), (5)
(6) -> (1), (2), (4), (6)

This digraph is fully evaluated!

----------------------------------------

(55) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(56)
Obligation:
Rules:
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2:0), java.lang.Object(x3:0))), x4:0, x5:0, x6:0, x7:0, x:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x8:0), x4:0, x9:0, x10:0, x11:0, x:0) :|: x12:0 > 1 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 < x10:0 && x6:0 > 0 && x5:0 > 0
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33:0, java.lang.Object(x34:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x35:0))), x36:0, x37:0, x38:0, x39:0, x33:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33:0, java.lang.Object(x34:0)))))))), java.lang.Object(x40:0), x36:0, x41:0, x42:0, x43:0, x33:0) :|: x44:0 > 1 && x43:0 > 0 && x41:0 < x37:0 && x43:0 < x39:0 && x39:0 > -1 && x42:0 > x38:0 && x38:0 > 0 && x37:0 > 0
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0:0, java.lang.Object(o16232sub230825850:0:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17259sub-2031144722:0:0))), o16232[LinkedList$Entry.next]o16230:0:0, o16234[LinkedList$Entry.next]o16232:0:0, o16232[LinkedList$Entry.next]o16234:0:0, o16234[LinkedList$Entry.next]o16230:0:0, o16231230825850:0:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16231230825850:0:0, java.lang.Object(o16232sub230825850:0:0)))))))), java.lang.Object(o19411sub0:0:0), o16232[LinkedList$Entry.next]o16230:0:0, o17259[LinkedList$Entry.next]o16232:0:0, o19407[LinkedList$Entry.next]o19411:0:0, o17259[LinkedList$Entry.next]o16230:0:0, o16231230825850:0:0) :|: o17259[LinkedList$Entry.next]o16230:0:0 > 0 && i5285:0:0 > 1 && o19407[LinkedList$Entry.next]o19411:0:0 > o16232[LinkedList$Entry.next]o16234:0:0 && o17259[LinkedList$Entry.next]o16232:0:0 < o16234[LinkedList$Entry.next]o16232:0:0 && o17259[LinkedList$Entry.next]o16230:0:0 < o16234[LinkedList$Entry.next]o16230:0:0 && o16234[LinkedList$Entry.next]o16230:0:0 > -1 && o16232[LinkedList$Entry.next]o16234:0:0 > 0 && o16234[LinkedList$Entry.next]o16232:0:0 > 0
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15:0))), x16:0, x17:0, x17:0, x16:0, x13:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14:0)))))))))), java.lang.Object(x18:0), x19:0, x20:0, 1, x21:0, x13:0) :|: x21:0 > 0 && x22:0 > 1 && x17:0 > -1 && x20:0 < x17:0 && x16:0 > -1 && x21:0 < x16:0
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46:0), java.lang.Object(x47:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48:0), java.lang.Object(x49:0))), x50:0, x51:0, x51:0, x50:0, x45:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46:0), java.lang.Object(x47:0)))))))))), java.lang.Object(x52:0), x53:0, x54:0, 1, x55:0, x45:0) :|: x55:0 > 0 && x56:0 > 1 && x51:0 > -1 && x54:0 < x51:0 && x50:0 > -1 && x55:0 < x50:0
f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x24:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x25:0))), x26:0, x27:0, x27:0, x26:0, x23:0) -> f13527_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x24:0)))))))))), java.lang.Object(x28:0), x29:0, x30:0, 1, x31:0, x23:0) :|: x31:0 > 0 && x32:0 > 1 && x27:0 > -1 && x30:0 < x27:0 && x26:0 > -1 && x31:0 < x26:0

----------------------------------------

(57) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13527_0_indexOf_EQ(VARIABLE, VARIABLE, VARIABLE, INTEGER, VARIABLE, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
NULL()
javaUtilEx.Content()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(58)
Obligation:
Rules:
f13527_0_indexOf_EQ(c, c1, x4:0, x5:0, x6:0, x7:0, x:0) -> f13527_0_indexOf_EQ(c2, c3, x4:0, x9:0, x10:0, x11:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x12:0 > 1 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 < x10:0 && x6:0 > 0 && x5:0 > 0)
f13527_0_indexOf_EQ(c4, c5, x36:0, x37:0, x38:0, x39:0, x33:0) -> f13527_0_indexOf_EQ(c6, c7, x36:0, x41:0, x42:0, x43:0, x33:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (x44:0 > 1 && x43:0 > 0 && x41:0 < x37:0 && x43:0 < x39:0 && x39:0 > -1 && x42:0 > x38:0 && x38:0 > 0 && x37:0 > 0)
f13527_0_indexOf_EQ(c8, c9, o16232[LinkedList$Entry.next]o16230:0:0, o16234[LinkedList$Entry.next]o16232:0:0, o16232[LinkedList$Entry.next]o16234:0:0, o16234[LinkedList$Entry.next]o16230:0:0, o16231230825850:0:0) -> f13527_0_indexOf_EQ(c10, c11, o16232[LinkedList$Entry.next]o16230:0:0, o17259[LinkedList$Entry.next]o16232:0:0, o19407[LinkedList$Entry.next]o19411:0:0, o17259[LinkedList$Entry.next]o16230:0:0, o16231230825850:0:0) :|: c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0)) && (o17259[LinkedList$Entry.next]o16230:0:0 > 0 && i5285:0:0 > 1 && o19407[LinkedList$Entry.next]o19411:0:0 > o16232[LinkedList$Entry.next]o16234:0:0 && o17259[LinkedList$Entry.next]o16232:0:0 < o16234[LinkedList$Entry.next]o16232:0:0 && o17259[LinkedList$Entry.next]o16230:0:0 < o16234[LinkedList$Entry.next]o16230:0:0 && o16234[LinkedList$Entry.next]o16230:0:0 > -1 && o16232[LinkedList$Entry.next]o16234:0:0 > 0 && o16234[LinkedList$Entry.next]o16232:0:0 > 0)
f13527_0_indexOf_EQ(c12, c13, x16:0, x17:0, x17:0, x16:0, x13:0) -> f13527_0_indexOf_EQ(c14, c15, x19:0, x20:0, c16, x21:0, x13:0) :|: c16 = 1 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))) && (x21:0 > 0 && x22:0 > 1 && x17:0 > -1 && x20:0 < x17:0 && x16:0 > -1 && x21:0 < x16:0)

----------------------------------------

(59) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13527_0_indexOf_EQ(x, x1, x2, x3, x4, x5, x6)] = -1 + c*x + c1*x1 + x3

The following rules are decreasing:
f13527_0_indexOf_EQ(c, c1, x4:0, x5:0, x6:0, x7:0, x:0) -> f13527_0_indexOf_EQ(c2, c3, x4:0, x9:0, x10:0, x11:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x12:0 > 1 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 < x10:0 && x6:0 > 0 && x5:0 > 0)
f13527_0_indexOf_EQ(c4, c5, x36:0, x37:0, x38:0, x39:0, x33:0) -> f13527_0_indexOf_EQ(c6, c7, x36:0, x41:0, x42:0, x43:0, x33:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (x44:0 > 1 && x43:0 > 0 && x41:0 < x37:0 && x43:0 < x39:0 && x39:0 > -1 && x42:0 > x38:0 && x38:0 > 0 && x37:0 > 0)
f13527_0_indexOf_EQ(c8, c9, o16232[LinkedList$Entry.next]o16230:0:0, o16234[LinkedList$Entry.next]o16232:0:0, o16232[LinkedList$Entry.next]o16234:0:0, o16234[LinkedList$Entry.next]o16230:0:0, o16231230825850:0:0) -> f13527_0_indexOf_EQ(c10, c11, o16232[LinkedList$Entry.next]o16230:0:0, o17259[LinkedList$Entry.next]o16232:0:0, o19407[LinkedList$Entry.next]o19411:0:0, o17259[LinkedList$Entry.next]o16230:0:0, o16231230825850:0:0) :|: c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0)) && (o17259[LinkedList$Entry.next]o16230:0:0 > 0 && i5285:0:0 > 1 && o19407[LinkedList$Entry.next]o19411:0:0 > o16232[LinkedList$Entry.next]o16234:0:0 && o17259[LinkedList$Entry.next]o16232:0:0 < o16234[LinkedList$Entry.next]o16232:0:0 && o17259[LinkedList$Entry.next]o16230:0:0 < o16234[LinkedList$Entry.next]o16230:0:0 && o16234[LinkedList$Entry.next]o16230:0:0 > -1 && o16232[LinkedList$Entry.next]o16234:0:0 > 0 && o16234[LinkedList$Entry.next]o16232:0:0 > 0)
f13527_0_indexOf_EQ(c12, c13, x16:0, x17:0, x17:0, x16:0, x13:0) -> f13527_0_indexOf_EQ(c14, c15, x19:0, x20:0, c16, x21:0, x13:0) :|: c16 = 1 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))) && (x21:0 > 0 && x22:0 > 1 && x17:0 > -1 && x20:0 < x17:0 && x16:0 > -1 && x21:0 < x16:0)
The following rules are bounded:
f13527_0_indexOf_EQ(c, c1, x4:0, x5:0, x6:0, x7:0, x:0) -> f13527_0_indexOf_EQ(c2, c3, x4:0, x9:0, x10:0, x11:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x12:0 > 1 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 < x10:0 && x6:0 > 0 && x5:0 > 0)
f13527_0_indexOf_EQ(c4, c5, x36:0, x37:0, x38:0, x39:0, x33:0) -> f13527_0_indexOf_EQ(c6, c7, x36:0, x41:0, x42:0, x43:0, x33:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (x44:0 > 1 && x43:0 > 0 && x41:0 < x37:0 && x43:0 < x39:0 && x39:0 > -1 && x42:0 > x38:0 && x38:0 > 0 && x37:0 > 0)
f13527_0_indexOf_EQ(c8, c9, o16232[LinkedList$Entry.next]o16230:0:0, o16234[LinkedList$Entry.next]o16232:0:0, o16232[LinkedList$Entry.next]o16234:0:0, o16234[LinkedList$Entry.next]o16230:0:0, o16231230825850:0:0) -> f13527_0_indexOf_EQ(c10, c11, o16232[LinkedList$Entry.next]o16230:0:0, o17259[LinkedList$Entry.next]o16232:0:0, o19407[LinkedList$Entry.next]o19411:0:0, o17259[LinkedList$Entry.next]o16230:0:0, o16231230825850:0:0) :|: c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0)) && (o17259[LinkedList$Entry.next]o16230:0:0 > 0 && i5285:0:0 > 1 && o19407[LinkedList$Entry.next]o19411:0:0 > o16232[LinkedList$Entry.next]o16234:0:0 && o17259[LinkedList$Entry.next]o16232:0:0 < o16234[LinkedList$Entry.next]o16232:0:0 && o17259[LinkedList$Entry.next]o16230:0:0 < o16234[LinkedList$Entry.next]o16230:0:0 && o16234[LinkedList$Entry.next]o16230:0:0 > -1 && o16232[LinkedList$Entry.next]o16234:0:0 > 0 && o16234[LinkedList$Entry.next]o16232:0:0 > 0)

----------------------------------------

(60)
Obligation:
Rules:
f13527_0_indexOf_EQ(c12, c13, x16:0, x17:0, x17:0, x16:0, x13:0) -> f13527_0_indexOf_EQ(c14, c15, x19:0, x20:0, c16, x21:0, x13:0) :|: c16 = 1 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))) && (x21:0 > 0 && x22:0 > 1 && x17:0 > -1 && x20:0 < x17:0 && x16:0 > -1 && x21:0 < x16:0)

----------------------------------------

(61) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13527_0_indexOf_EQ(x, x1, x2, x3, x4, x5, x6)] = c*x + c1*x1 + x5

The following rules are decreasing:
f13527_0_indexOf_EQ(c12, c13, x16:0, x17:0, x17:0, x16:0, x13:0) -> f13527_0_indexOf_EQ(c14, c15, x19:0, x20:0, c16, x21:0, x13:0) :|: c16 = 1 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))) && (x21:0 > 0 && x22:0 > 1 && x17:0 > -1 && x20:0 < x17:0 && x16:0 > -1 && x21:0 < x16:0)
The following rules are bounded:
f13527_0_indexOf_EQ(c12, c13, x16:0, x17:0, x17:0, x16:0, x13:0) -> f13527_0_indexOf_EQ(c14, c15, x19:0, x20:0, c16, x21:0, x13:0) :|: c16 = 1 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))) && (x21:0 > 0 && x22:0 > 1 && x17:0 > -1 && x20:0 < x17:0 && x16:0 > -1 && x21:0 < x16:0)

----------------------------------------

(62)
YES

----------------------------------------

(63)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateContains.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, next]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(64) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 65 IRulesP rules:
f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(o16109sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932, java.lang.Object(o16106sub-2032102932))), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109, o16109[LinkedList$Entry.next]o16104) -> f13535_0_indexOf_Load(EOS(STATIC_13535), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109, o16109[LinkedList$Entry.next]o16104) :|: TRUE
f13535_0_indexOf_Load(EOS(STATIC_13535), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109, o16109[LinkedList$Entry.next]o16104) -> f13546_0_indexOf_Load(EOS(STATIC_13546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(javaUtilEx.Content(EOC)), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109, o16109[LinkedList$Entry.next]o16104) :|: TRUE
f13546_0_indexOf_Load(EOS(STATIC_13546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(javaUtilEx.Content(EOC)), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109, o16109[LinkedList$Entry.next]o16104) -> f13557_0_indexOf_FieldAccess(EOS(STATIC_13557), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109, o16109[LinkedList$Entry.next]o16104) :|: TRUE
f13557_0_indexOf_FieldAccess(EOS(STATIC_13557), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109, o16109[LinkedList$Entry.next]o16104) -> f13568_0_indexOf_FieldAccess(EOS(STATIC_13568), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o16109, o16109[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106) :|: o16109[LinkedList$Entry.next]o16106 > 0 && o16106[LinkedList$Entry.next]o16109 > 0
f13557_0_indexOf_FieldAccess(EOS(STATIC_13557), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o17221sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17221sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17221sub0), o16107[LinkedList$Entry.previous]o16104, o17221[LinkedList$Entry.next]o16104, o17221[LinkedList$Entry.next]o17221, o17221[LinkedList$Entry.next]o17221, o17221[LinkedList$Entry.next]o16104) -> f13569_0_indexOf_FieldAccess(EOS(STATIC_13569), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o17221sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17221sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17221sub0), o16107[LinkedList$Entry.previous]o16104, o17221[LinkedList$Entry.next]o16104, o17221[LinkedList$Entry.next]o17221) :|: TRUE
f13568_0_indexOf_FieldAccess(EOS(STATIC_13568), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17249[LinkedList$Entry.next]o16104, o17249[LinkedList$Entry.next]o16106) -> f13579_0_indexOf_FieldAccess(EOS(STATIC_13579), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: o17251[LinkedList$Entry.next]o16104 < o17249[LinkedList$Entry.next]o16104 && o17249[LinkedList$Entry.next]o16104 >= 0 && o17251[LinkedList$Entry.next]o16106 < o17249[LinkedList$Entry.next]o16106 && o17249[LinkedList$Entry.next]o16106 >= 0
f13579_0_indexOf_FieldAccess(EOS(STATIC_13579), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f13591_0_indexOf_InvokeMethod(EOS(STATIC_13591), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), java.lang.Object(javaUtilEx.Content(EOC)), o172500, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: TRUE
f13591_0_indexOf_InvokeMethod(EOS(STATIC_13591), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), java.lang.Object(javaUtilEx.Content(EOC)), o172500, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f13604_0_equals_Load(EOS(STATIC_13604), java.lang.Object(javaUtilEx.Content(EOC)), o172500, java.lang.Object(o16106sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932, java.lang.Object(o16106sub-2032102932))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), java.lang.Object(o17251sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172500, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: i5247 > 1
f13591_0_indexOf_InvokeMethod(EOS(STATIC_13591), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), java.lang.Object(javaUtilEx.Content(EOC)), o172500, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f13604_1_equals_Load(EOS(STATIC_13604), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), java.lang.Object(javaUtilEx.Content(EOC)), o172500, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: i5247 > 1
f13604_0_equals_Load(EOS(STATIC_13604), java.lang.Object(javaUtilEx.Content(EOC)), o172500, java.lang.Object(o16106sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932, java.lang.Object(o16106sub-2032102932))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), java.lang.Object(o17251sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172500, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f15573_0_equals_Load(EOS(STATIC_15573), java.lang.Object(javaUtilEx.Content(EOC)), o172500, java.lang.Object(o16106sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932, java.lang.Object(o16106sub-2032102932))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621, java.lang.Object(o17251sub-2031145621))), java.lang.Object(o17251sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172500, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: TRUE
f13996_0_equals_Return(EOS(STATIC_13996), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17251sub-2031145621))), matching1, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f13681_0_equals_Return(EOS(STATIC_13681), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17251sub-2031145621))), 0, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: TRUE && matching1 = 0
f13681_0_equals_Return(EOS(STATIC_13681), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18061-2030280039, java.lang.Object(o18062sub-2030280039))), matching1, o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18057[LinkedList$Entry.next]o18060, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057) -> f13705_0_indexOf_EQ(EOS(STATIC_13705), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18061-2030280039, java.lang.Object(o18062sub-2030280039))), 0, o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18057[LinkedList$Entry.next]o18060, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057) :|: TRUE && matching1 = 0
f13705_0_indexOf_EQ(EOS(STATIC_13705), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18061-2030280039, java.lang.Object(o18062sub-2030280039))), matching1, o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18057[LinkedList$Entry.next]o18060, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057) -> f13720_0_indexOf_Inc(EOS(STATIC_13720), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18061-2030280039, java.lang.Object(o18062sub-2030280039))), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18057[LinkedList$Entry.next]o18060, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057) :|: TRUE && matching1 = 0
f13720_0_indexOf_Inc(EOS(STATIC_13720), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18061-2030280039, java.lang.Object(o18062sub-2030280039))), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18057[LinkedList$Entry.next]o18060, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057) -> f13737_0_indexOf_Load(EOS(STATIC_13737), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18061-2030280039, java.lang.Object(o18062sub-2030280039))), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18057[LinkedList$Entry.next]o18060, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057) :|: TRUE
f13737_0_indexOf_Load(EOS(STATIC_13737), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18061-2030280039, java.lang.Object(o18062sub-2030280039))), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18057[LinkedList$Entry.next]o18060, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057) -> f13748_0_indexOf_FieldAccess(EOS(STATIC_13748), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18061-2030280039, java.lang.Object(o18062sub-2030280039))), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18057[LinkedList$Entry.next]o18060, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057) :|: TRUE
f13748_0_indexOf_FieldAccess(EOS(STATIC_13748), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18061-2030280039, java.lang.Object(o18062sub-2030280039))), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18057[LinkedList$Entry.next]o18060, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057) -> f13762_0_indexOf_Store(EOS(STATIC_13762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18062sub0), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057, o18057[LinkedList$Entry.next]o18062) :|: o18057[LinkedList$Entry.next]o18062 > o18057[LinkedList$Entry.next]o18060 && o18057[LinkedList$Entry.next]o18060 >= 0
f13762_0_indexOf_Store(EOS(STATIC_13762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18062sub0), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057, o18057[LinkedList$Entry.next]o18062) -> f13784_0_indexOf_JMP(EOS(STATIC_13784), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18062sub0), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057, o18057[LinkedList$Entry.next]o18062) :|: TRUE
f13784_0_indexOf_JMP(EOS(STATIC_13784), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18062sub0), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057, o18057[LinkedList$Entry.next]o18062) -> f13802_0_indexOf_Load(EOS(STATIC_13802), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18062sub0), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057, o18057[LinkedList$Entry.next]o18062) :|: TRUE
f13802_0_indexOf_Load(EOS(STATIC_13802), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18062sub0), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057, o18057[LinkedList$Entry.next]o18062) -> f13468_0_indexOf_Load(EOS(STATIC_13468), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18056234405575, java.lang.Object(o18057sub234405575)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18062sub0), o18058[LinkedList$Entry.previous]o18055, o18057[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18055, o18062[LinkedList$Entry.next]o18057, o18057[LinkedList$Entry.next]o18062) :|: TRUE
f13468_0_indexOf_Load(EOS(STATIC_13468), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109) -> f13487_0_indexOf_Load(EOS(STATIC_13487), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(o16109sub0), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109) :|: TRUE
f13487_0_indexOf_Load(EOS(STATIC_13487), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(o16109sub0), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109) -> f13504_0_indexOf_FieldAccess(EOS(STATIC_13504), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(o16109sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109) :|: TRUE
f13504_0_indexOf_FieldAccess(EOS(STATIC_13504), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(o16109sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109) -> f13514_0_indexOf_EQ(EOS(STATIC_13514), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(o16109sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932, java.lang.Object(o16106sub-2032102932))), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109) :|: TRUE
f13514_0_indexOf_EQ(EOS(STATIC_13514), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(o16109sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932, java.lang.Object(o16106sub-2032102932))), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109) -> f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16109sub0), java.lang.Object(o16109sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932, java.lang.Object(o16106sub-2032102932))), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16109[LinkedList$Entry.next]o16106, o16106[LinkedList$Entry.next]o16109, o16109[LinkedList$Entry.next]o16104) :|: o16109[LinkedList$Entry.next]o16104 > 0
f14009_0_equals_Return(EOS(STATIC_14009), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21869sub-2031145621), java.lang.Object(o17251sub-2031145621))), matching1, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f13681_0_equals_Return(EOS(STATIC_13681), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21869sub-2031145621), java.lang.Object(o17251sub-2031145621))), 0, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: TRUE && matching1 = 0
f14112_0_equals_Return(EOS(STATIC_14112), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17251sub-2031145621))), matching1, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f13773_0_equals_Return(EOS(STATIC_13773), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17251sub-2031145621))), 0, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: TRUE && matching1 = 0
f13773_0_equals_Return(EOS(STATIC_13773), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub-2029264975))), i5970, o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19385[LinkedList$Entry.next]o19388, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385) -> f13790_0_indexOf_EQ(EOS(STATIC_13790), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub-2029264975))), i5970, o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19385[LinkedList$Entry.next]o19388, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385) :|: TRUE
f13790_0_indexOf_EQ(EOS(STATIC_13790), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub-2029264975))), matching1, o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19385[LinkedList$Entry.next]o19388, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385) -> f13809_0_indexOf_EQ(EOS(STATIC_13809), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub-2029264975))), 0, o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19385[LinkedList$Entry.next]o19388, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385) :|: TRUE && matching1 = 0
f13809_0_indexOf_EQ(EOS(STATIC_13809), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub-2029264975))), matching1, o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19385[LinkedList$Entry.next]o19388, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385) -> f13827_0_indexOf_Inc(EOS(STATIC_13827), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub-2029264975))), o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19385[LinkedList$Entry.next]o19388, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385) :|: TRUE && matching1 = 0
f13827_0_indexOf_Inc(EOS(STATIC_13827), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub-2029264975))), o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19385[LinkedList$Entry.next]o19388, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385) -> f13842_0_indexOf_Load(EOS(STATIC_13842), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub-2029264975))), o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19385[LinkedList$Entry.next]o19388, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385) :|: TRUE
f13842_0_indexOf_Load(EOS(STATIC_13842), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub-2029264975))), o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19385[LinkedList$Entry.next]o19388, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385) -> f13856_0_indexOf_FieldAccess(EOS(STATIC_13856), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub-2029264975))), o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19385[LinkedList$Entry.next]o19388, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385) :|: TRUE
f13856_0_indexOf_FieldAccess(EOS(STATIC_13856), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub-2029264975))), o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19385[LinkedList$Entry.next]o19388, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385) -> f13870_0_indexOf_Store(EOS(STATIC_13870), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub0), o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385, o19385[LinkedList$Entry.next]o19390) :|: o19385[LinkedList$Entry.next]o19390 > o19385[LinkedList$Entry.next]o19388 && o19385[LinkedList$Entry.next]o19388 >= 0
f13870_0_indexOf_Store(EOS(STATIC_13870), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub0), o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385, o19385[LinkedList$Entry.next]o19390) -> f13762_0_indexOf_Store(EOS(STATIC_13762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19384236437005, java.lang.Object(o19385sub236437005)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub0), o19386[LinkedList$Entry.previous]o19383, o19385[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19383, o19390[LinkedList$Entry.next]o19385, o19385[LinkedList$Entry.next]o19390) :|: TRUE
f14120_0_equals_Return(EOS(STATIC_14120), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17251sub-2031145621))), matching1, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f13773_0_equals_Return(EOS(STATIC_13773), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17251sub-2031145621))), 1, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: TRUE && matching1 = 1
f13569_0_indexOf_FieldAccess(EOS(STATIC_13569), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), o16107[LinkedList$Entry.previous]o16104, o17253[LinkedList$Entry.next]o16104, o17253[LinkedList$Entry.next]o17253) -> f13580_0_indexOf_FieldAccess(EOS(STATIC_13580), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: o17255[LinkedList$Entry.next]o16104 < o17253[LinkedList$Entry.next]o16104 && o17253[LinkedList$Entry.next]o16104 >= 0 && o17255[LinkedList$Entry.next]o17253 < o17253[LinkedList$Entry.next]o17253 && o17253[LinkedList$Entry.next]o17253 >= 0
f13580_0_indexOf_FieldAccess(EOS(STATIC_13580), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f13592_0_indexOf_InvokeMethod(EOS(STATIC_13592), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), java.lang.Object(javaUtilEx.Content(EOC)), o172540, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: TRUE
f13592_0_indexOf_InvokeMethod(EOS(STATIC_13592), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), java.lang.Object(javaUtilEx.Content(EOC)), o172540, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f13605_0_equals_Load(EOS(STATIC_13605), java.lang.Object(javaUtilEx.Content(EOC)), o172540, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254231719518, java.lang.Object(o17255sub231719518))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), java.lang.Object(o17255sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172540, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: i5247 > 1
f13592_0_indexOf_InvokeMethod(EOS(STATIC_13592), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), java.lang.Object(javaUtilEx.Content(EOC)), o172540, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f13605_1_equals_Load(EOS(STATIC_13605), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), java.lang.Object(javaUtilEx.Content(EOC)), o172540, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: i5247 > 1
f13605_0_equals_Load(EOS(STATIC_13605), java.lang.Object(javaUtilEx.Content(EOC)), o172540, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254231719518, java.lang.Object(o17255sub231719518))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), java.lang.Object(o17255sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172540, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f15653_0_equals_Load(EOS(STATIC_15653), java.lang.Object(javaUtilEx.Content(EOC)), o172540, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254231719518, java.lang.Object(o17255sub231719518))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846, java.lang.Object(o17255sub-2031144846))), java.lang.Object(o17255sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172540, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: TRUE
f13997_0_equals_Return(EOS(STATIC_13997), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-2031144846))), matching1, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f13685_0_equals_Return(EOS(STATIC_13685), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-2031144846))), 0, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: TRUE && matching1 = 0
f13685_0_equals_Return(EOS(STATIC_13685), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-2030277156, java.lang.Object(o18092sub-2030277156))), matching1, o18094[LinkedList$Entry.previous]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090) -> f13706_0_indexOf_EQ(EOS(STATIC_13706), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-2030277156, java.lang.Object(o18092sub-2030277156))), 0, o18094[LinkedList$Entry.previous]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090) :|: TRUE && matching1 = 0
f13706_0_indexOf_EQ(EOS(STATIC_13706), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-2030277156, java.lang.Object(o18092sub-2030277156))), matching1, o18094[LinkedList$Entry.previous]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090) -> f13721_0_indexOf_Inc(EOS(STATIC_13721), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-2030277156, java.lang.Object(o18092sub-2030277156))), o18094[LinkedList$Entry.previous]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090) :|: TRUE && matching1 = 0
f13721_0_indexOf_Inc(EOS(STATIC_13721), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-2030277156, java.lang.Object(o18092sub-2030277156))), o18094[LinkedList$Entry.previous]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090) -> f13738_0_indexOf_Load(EOS(STATIC_13738), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-2030277156, java.lang.Object(o18092sub-2030277156))), o18094[LinkedList$Entry.previous]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090) :|: TRUE
f13738_0_indexOf_Load(EOS(STATIC_13738), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-2030277156, java.lang.Object(o18092sub-2030277156))), o18094[LinkedList$Entry.previous]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090) -> f13749_0_indexOf_FieldAccess(EOS(STATIC_13749), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-2030277156, java.lang.Object(o18092sub-2030277156))), o18094[LinkedList$Entry.previous]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090) :|: TRUE
f13749_0_indexOf_FieldAccess(EOS(STATIC_13749), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-2030277156, java.lang.Object(o18092sub-2030277156))), o18094[LinkedList$Entry.previous]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090) -> f13763_0_indexOf_Store(EOS(STATIC_13763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18092sub0), o18094[LinkedList$Entry.previous]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090) :|: TRUE
f13763_0_indexOf_Store(EOS(STATIC_13763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18092sub0), o18094[LinkedList$Entry.previous]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090) -> f13870_0_indexOf_Store(EOS(STATIC_13870), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18089234411527, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18091-1795865629, java.lang.Object(o18092sub-1795865629)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18092sub0), o18094[LinkedList$Entry.previous]o18088, o18090[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18088, o18092[LinkedList$Entry.next]o18090, o18090[LinkedList$Entry.next]o18092) :|: o18090[LinkedList$Entry.next]o18092 = 1
f14010_0_equals_Return(EOS(STATIC_14010), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-1800383445), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-2031144846), java.lang.Object(o17255sub-2031144846))), matching1, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f13685_0_equals_Return(EOS(STATIC_13685), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-1800383445), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-2031144846), java.lang.Object(o17255sub-2031144846))), 0, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: TRUE && matching1 = 0
f14113_0_equals_Return(EOS(STATIC_14113), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-2031144846))), matching1, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f13775_0_equals_Return(EOS(STATIC_13775), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-2031144846))), 0, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: TRUE && matching1 = 0
f13775_0_equals_Return(EOS(STATIC_13775), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-2029264107))), i5976, o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) -> f13791_0_indexOf_EQ(EOS(STATIC_13791), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-2029264107))), i5976, o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) :|: TRUE
f13791_0_indexOf_EQ(EOS(STATIC_13791), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-2029264107))), matching1, o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) -> f13811_0_indexOf_EQ(EOS(STATIC_13811), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-2029264107))), 0, o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) :|: TRUE && matching1 = 0
f13811_0_indexOf_EQ(EOS(STATIC_13811), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-2029264107))), matching1, o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) -> f13829_0_indexOf_Inc(EOS(STATIC_13829), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-2029264107))), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) :|: TRUE && matching1 = 0
f13829_0_indexOf_Inc(EOS(STATIC_13829), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-2029264107))), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) -> f13843_0_indexOf_Load(EOS(STATIC_13843), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-2029264107))), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) :|: TRUE
f13843_0_indexOf_Load(EOS(STATIC_13843), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-2029264107))), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) -> f13857_0_indexOf_FieldAccess(EOS(STATIC_13857), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-2029264107))), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) :|: TRUE
f13857_0_indexOf_FieldAccess(EOS(STATIC_13857), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-2029264107))), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) -> f13871_0_indexOf_Store(EOS(STATIC_13871), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub0), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) :|: TRUE
f13871_0_indexOf_Store(EOS(STATIC_13871), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub0), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) -> f13884_0_indexOf_JMP(EOS(STATIC_13884), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub0), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) :|: TRUE
f13884_0_indexOf_JMP(EOS(STATIC_13884), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub0), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) -> f13900_0_indexOf_Load(EOS(STATIC_13900), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub0), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) :|: TRUE
f13900_0_indexOf_Load(EOS(STATIC_13900), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub0), o19399[LinkedList$Entry.previous]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395) -> f13468_0_indexOf_Load(EOS(STATIC_13468), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19394236438927, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub-1792825180)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub0), o19399[LinkedList$Entry.previous]o19393, o19395[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19393, o19397[LinkedList$Entry.next]o19395, o19395[LinkedList$Entry.next]o19397) :|: o19395[LinkedList$Entry.next]o19397 = 1
f14121_0_equals_Return(EOS(STATIC_14121), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-2031144846))), matching1, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f13775_0_equals_Return(EOS(STATIC_13775), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-2031144846))), 1, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: TRUE && matching1 = 1
f13604_1_equals_Load(EOS(STATIC_13604), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17251sub-2031145621))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f13996_0_equals_Return(EOS(STATIC_13996), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17251sub-2031145621))), 0, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: TRUE
f13604_1_equals_Load(EOS(STATIC_13604), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21869sub-2031145621), java.lang.Object(o17251sub-2031145621))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o21869sub0), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f14009_0_equals_Return(EOS(STATIC_14009), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21869sub-2031145621), java.lang.Object(o17251sub-2031145621))), 0, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: TRUE
f13604_1_equals_Load(EOS(STATIC_13604), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17251sub-2031145621))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f14112_0_equals_Return(EOS(STATIC_14112), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17251sub-2031145621))), 0, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: TRUE
f13604_1_equals_Load(EOS(STATIC_13604), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17251sub-2031145621))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) -> f14120_0_equals_Return(EOS(STATIC_14120), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(o16106sub230761401)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17251sub-2031145621))), 1, o16107[LinkedList$Entry.previous]o16104, o16106[LinkedList$Entry.next]o16104, o16106[LinkedList$Entry.next]o17249, o17251[LinkedList$Entry.next]o16104, o17251[LinkedList$Entry.next]o16106) :|: TRUE
f13605_1_equals_Load(EOS(STATIC_13605), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-2031144846))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f13997_0_equals_Return(EOS(STATIC_13997), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-2031144846))), 0, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: TRUE
f13605_1_equals_Load(EOS(STATIC_13605), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-1800383445), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-2031144846), java.lang.Object(o17255sub-2031144846))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o21884sub0), o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f14010_0_equals_Return(EOS(STATIC_14010), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-1800383445), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-2031144846), java.lang.Object(o17255sub-2031144846))), 0, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: TRUE
f13605_1_equals_Load(EOS(STATIC_13605), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-2031144846))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f14113_0_equals_Return(EOS(STATIC_14113), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-2031144846))), 0, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: TRUE
f13605_1_equals_Load(EOS(STATIC_13605), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-2031144846))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) -> f14121_0_equals_Return(EOS(STATIC_14121), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-1800383445)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-2031144846))), 1, o16107[LinkedList$Entry.previous]o16104, o17255[LinkedList$Entry.next]o16104, o17255[LinkedList$Entry.next]o17253) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21869sub-2031145621:0), java.lang.Object(o17251sub-2031145621:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21869sub-2031145621:0), java.lang.Object(o17251sub-2031145621:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:0, java.lang.Object(o16106sub-2032102932:0))), o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16109:0, o16109[LinkedList$Entry.next]o16104:0) -> f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18062sub0:0), java.lang.Object(o18062sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:1, java.lang.Object(o16106sub-2032102932:1))), o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o17251[LinkedList$Entry.next]o16106:0, o18057[LinkedList$Entry.next]o18062:0, o17251[LinkedList$Entry.next]o16104:0) :|: o16106[LinkedList$Entry.next]o16109:0 > 0 && o16109[LinkedList$Entry.next]o16106:0 > 0 && o18057[LinkedList$Entry.next]o18062:0 > o16106[LinkedList$Entry.next]o16109:0 && o16109[LinkedList$Entry.next]o16104:0 > -1 && o17251[LinkedList$Entry.next]o16104:0 < o16109[LinkedList$Entry.next]o16104:0 && o17251[LinkedList$Entry.next]o16106:0 < o16109[LinkedList$Entry.next]o16106:0 && o17251[LinkedList$Entry.next]o16104:0 > 0 && i5247:0 > 1
f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-2031144846:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-2031144846:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:0, java.lang.Object(o16106sub-2032102932:0))), o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16104:0) -> f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19397sub0:0), java.lang.Object(o19397sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:1, java.lang.Object(o16106sub-2032102932:1))), o16107[LinkedList$Entry.previous]o16104:0, o19395[LinkedList$Entry.next]o19393:0, o17255[LinkedList$Entry.next]o17253:0, 1, o17255[LinkedList$Entry.next]o16104:0) :|: o16106[LinkedList$Entry.next]o16104:0 > -1 && o17255[LinkedList$Entry.next]o16104:0 < o16106[LinkedList$Entry.next]o16104:0 && o17255[LinkedList$Entry.next]o17253:0 < o16109[LinkedList$Entry.next]o16106:0 && o16109[LinkedList$Entry.next]o16106:0 > -1 && i5247:0 > 1 && o17255[LinkedList$Entry.next]o16104:0 > 0
f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17251sub-2031145621:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17251sub-2031145621:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:0, java.lang.Object(o16106sub-2032102932:0))), o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16109:0, o16109[LinkedList$Entry.next]o16104:0) -> f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19390sub0:0), java.lang.Object(o19390sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:1, java.lang.Object(o16106sub-2032102932:1))), o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o17251[LinkedList$Entry.next]o16106:0, o19385[LinkedList$Entry.next]o19390:0, o17251[LinkedList$Entry.next]o16104:0) :|: o16106[LinkedList$Entry.next]o16109:0 > 0 && o16109[LinkedList$Entry.next]o16106:0 > 0 && o16109[LinkedList$Entry.next]o16104:0 > -1 && o17251[LinkedList$Entry.next]o16104:0 < o16109[LinkedList$Entry.next]o16104:0 && o17251[LinkedList$Entry.next]o16106:0 < o16109[LinkedList$Entry.next]o16106:0 && o19385[LinkedList$Entry.next]o19390:0 > o16106[LinkedList$Entry.next]o16109:0 && i5247:0 > 1 && o17251[LinkedList$Entry.next]o16104:0 > 0
f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-1800383445:0), java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-2031144846:0), java.lang.Object(o17255sub-2031144846:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-2031144846:0), java.lang.Object(o17255sub-2031144846:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:0, java.lang.Object(o16106sub-2032102932:0))), o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16104:0) -> f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o21884sub-1800383445:0), java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18092sub0:0), java.lang.Object(o18092sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:1, java.lang.Object(o16106sub-2032102932:1))), o16107[LinkedList$Entry.previous]o16104:0, o18090[LinkedList$Entry.next]o18088:0, o17255[LinkedList$Entry.next]o17253:0, 1, o17255[LinkedList$Entry.next]o16104:0) :|: o16106[LinkedList$Entry.next]o16104:0 > -1 && o17255[LinkedList$Entry.next]o16104:0 < o16106[LinkedList$Entry.next]o16104:0 && o17255[LinkedList$Entry.next]o17253:0 < o16109[LinkedList$Entry.next]o16106:0 && o16109[LinkedList$Entry.next]o16106:0 > -1 && i5247:0 > 1 && o17255[LinkedList$Entry.next]o16104:0 > 0
f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17251sub-2031145621:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17251sub-2031145621:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:0, java.lang.Object(o16106sub-2032102932:0))), o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16109:0, o16109[LinkedList$Entry.next]o16104:0) -> f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18062sub0:0), java.lang.Object(o18062sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:1, java.lang.Object(o16106sub-2032102932:1))), o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o17251[LinkedList$Entry.next]o16106:0, o18057[LinkedList$Entry.next]o18062:0, o17251[LinkedList$Entry.next]o16104:0) :|: o16106[LinkedList$Entry.next]o16109:0 > 0 && o16109[LinkedList$Entry.next]o16106:0 > 0 && o18057[LinkedList$Entry.next]o18062:0 > o16106[LinkedList$Entry.next]o16109:0 && o16109[LinkedList$Entry.next]o16104:0 > -1 && o17251[LinkedList$Entry.next]o16104:0 < o16109[LinkedList$Entry.next]o16104:0 && o17251[LinkedList$Entry.next]o16106:0 < o16109[LinkedList$Entry.next]o16106:0 && o17251[LinkedList$Entry.next]o16104:0 > 0 && i5247:0 > 1
f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-2031144846:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-2031144846:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:0, java.lang.Object(o16106sub-2032102932:0))), o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16104:0) -> f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18092sub0:0), java.lang.Object(o18092sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:1, java.lang.Object(o16106sub-2032102932:1))), o16107[LinkedList$Entry.previous]o16104:0, o18090[LinkedList$Entry.next]o18088:0, o17255[LinkedList$Entry.next]o17253:0, 1, o17255[LinkedList$Entry.next]o16104:0) :|: o16106[LinkedList$Entry.next]o16104:0 > -1 && o17255[LinkedList$Entry.next]o16104:0 < o16106[LinkedList$Entry.next]o16104:0 && o17255[LinkedList$Entry.next]o17253:0 < o16109[LinkedList$Entry.next]o16106:0 && o16109[LinkedList$Entry.next]o16106:0 > -1 && i5247:0 > 1 && o17255[LinkedList$Entry.next]o16104:0 > 0
Removed following non-SCC rules:
f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621:0, java.lang.Object(o17251sub-2031145621:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621:0, java.lang.Object(o17251sub-2031145621:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:0, java.lang.Object(o16106sub-2032102932:0))), o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16109:0, o16109[LinkedList$Entry.next]o16104:0) -> f15573_0_equals_Load(EOS(STATIC_15573), java.lang.Object(javaUtilEx.Content(EOC)), o172500:0, java.lang.Object(o16106sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:1, java.lang.Object(o16106sub-2032102932:1))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17250-2031145621:0, java.lang.Object(o17251sub-2031145621:0))), java.lang.Object(o17251sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172500:0, o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o16106[LinkedList$Entry.next]o16109:0, o17251[LinkedList$Entry.next]o16104:0, o17251[LinkedList$Entry.next]o16106:0) :|: o16109[LinkedList$Entry.next]o16106:0 > 0 && o16109[LinkedList$Entry.next]o16104:0 > -1 && o17251[LinkedList$Entry.next]o16104:0 < o16109[LinkedList$Entry.next]o16104:0 && o17251[LinkedList$Entry.next]o16106:0 < o16109[LinkedList$Entry.next]o16106:0 && i5247:0 > 1 && o16106[LinkedList$Entry.next]o16109:0 > 0
f13525_0_indexOf_EQ(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445:0, java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846:0, java.lang.Object(o17255sub-2031144846:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846:0, java.lang.Object(o17255sub-2031144846:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:0, java.lang.Object(o16106sub-2032102932:0))), o16107[LinkedList$Entry.previous]o16104:0, o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16104:0) -> f15653_0_equals_Load(EOS(STATIC_15653), java.lang.Object(javaUtilEx.Content(EOC)), o172540:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105-2032102932:1, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254231719518:0, java.lang.Object(o17255sub231719518:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-2031144846:0, java.lang.Object(o17255sub-2031144846:0))), java.lang.Object(o17255sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17254-1800383445:0, java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o172540:0, o16107[LinkedList$Entry.previous]o16104:0, o17255[LinkedList$Entry.next]o16104:0, o17255[LinkedList$Entry.next]o17253:0) :|: o16106[LinkedList$Entry.next]o16104:0 > -1 && o17255[LinkedList$Entry.next]o16104:0 < o16106[LinkedList$Entry.next]o16104:0 && o17255[LinkedList$Entry.next]o17253:0 < o16109[LinkedList$Entry.next]o16106:0 && i5247:0 > 1 && o16109[LinkedList$Entry.next]o16106:0 > -1
Filtered constant ground arguments:
   f13525_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f13525_0_indexOf_EQ(x2, x4, x5, x6, x7, x8, x9, x10, x11)
   EOS(x1) -> EOS
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13525_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13525_0_indexOf_EQ(x1, x3, x4, x5, x6, x7, x8, x9)
Filtered unneeded arguments:
   f13525_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f13525_0_indexOf_EQ(x1, x2, x5, x6, x7, x8)
Finished conversion. Obtained 6 rules.P rules:
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21869sub-2031145621:0), java.lang.Object(o17251sub-2031145621:0))), o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16109:0, o16109[LinkedList$Entry.next]o16104:0, o16105230761401:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(o18062sub0:0), o16106[LinkedList$Entry.next]o16104:0, o17251[LinkedList$Entry.next]o16106:0, o18057[LinkedList$Entry.next]o18062:0, o17251[LinkedList$Entry.next]o16104:0, o16105230761401:0) :|: o16109[LinkedList$Entry.next]o16106:0 > 0 && o16106[LinkedList$Entry.next]o16109:0 > 0 && o18057[LinkedList$Entry.next]o18062:0 > o16106[LinkedList$Entry.next]o16109:0 && o16109[LinkedList$Entry.next]o16104:0 > -1 && o17251[LinkedList$Entry.next]o16104:0 < o16109[LinkedList$Entry.next]o16104:0 && o17251[LinkedList$Entry.next]o16106:0 < o16109[LinkedList$Entry.next]o16106:0 && i5247:0 > 1 && o17251[LinkedList$Entry.next]o16104:0 > 0
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17255sub-2031144846:0))), o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16104:0, o16105230761401:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(o19397sub0:0), o19395[LinkedList$Entry.next]o19393:0, o17255[LinkedList$Entry.next]o17253:0, 1, o17255[LinkedList$Entry.next]o16104:0, o16105230761401:0) :|: o17255[LinkedList$Entry.next]o16104:0 < o16106[LinkedList$Entry.next]o16104:0 && o16106[LinkedList$Entry.next]o16104:0 > -1 && o17255[LinkedList$Entry.next]o17253:0 < o16109[LinkedList$Entry.next]o16106:0 && o16109[LinkedList$Entry.next]o16106:0 > -1 && o17255[LinkedList$Entry.next]o16104:0 > 0 && i5247:0 > 1
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17251sub-2031145621:0))), o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16109:0, o16109[LinkedList$Entry.next]o16104:0, o16105230761401:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(o19390sub0:0), o16106[LinkedList$Entry.next]o16104:0, o17251[LinkedList$Entry.next]o16106:0, o19385[LinkedList$Entry.next]o19390:0, o17251[LinkedList$Entry.next]o16104:0, o16105230761401:0) :|: o16109[LinkedList$Entry.next]o16106:0 > 0 && o16106[LinkedList$Entry.next]o16109:0 > 0 && o16109[LinkedList$Entry.next]o16104:0 > -1 && o17251[LinkedList$Entry.next]o16104:0 < o16109[LinkedList$Entry.next]o16104:0 && o17251[LinkedList$Entry.next]o16106:0 < o16109[LinkedList$Entry.next]o16106:0 && o19385[LinkedList$Entry.next]o19390:0 > o16106[LinkedList$Entry.next]o16109:0 && o17251[LinkedList$Entry.next]o16104:0 > 0 && i5247:0 > 1
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21884sub-1800383445:0), java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21884sub-2031144846:0), java.lang.Object(o17255sub-2031144846:0))), o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16104:0, o16105230761401:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21884sub-1800383445:0), java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(o18092sub0:0), o18090[LinkedList$Entry.next]o18088:0, o17255[LinkedList$Entry.next]o17253:0, 1, o17255[LinkedList$Entry.next]o16104:0, o16105230761401:0) :|: o17255[LinkedList$Entry.next]o16104:0 < o16106[LinkedList$Entry.next]o16104:0 && o16106[LinkedList$Entry.next]o16104:0 > -1 && o17255[LinkedList$Entry.next]o17253:0 < o16109[LinkedList$Entry.next]o16106:0 && o16109[LinkedList$Entry.next]o16106:0 > -1 && o17255[LinkedList$Entry.next]o16104:0 > 0 && i5247:0 > 1
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17251sub-2031145621:0))), o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16109:0, o16109[LinkedList$Entry.next]o16104:0, o16105230761401:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(o18062sub0:0), o16106[LinkedList$Entry.next]o16104:0, o17251[LinkedList$Entry.next]o16106:0, o18057[LinkedList$Entry.next]o18062:0, o17251[LinkedList$Entry.next]o16104:0, o16105230761401:0) :|: o16109[LinkedList$Entry.next]o16106:0 > 0 && o16106[LinkedList$Entry.next]o16109:0 > 0 && o18057[LinkedList$Entry.next]o18062:0 > o16106[LinkedList$Entry.next]o16109:0 && o16109[LinkedList$Entry.next]o16104:0 > -1 && o17251[LinkedList$Entry.next]o16104:0 < o16109[LinkedList$Entry.next]o16104:0 && o17251[LinkedList$Entry.next]o16106:0 < o16109[LinkedList$Entry.next]o16106:0 && i5247:0 > 1 && o17251[LinkedList$Entry.next]o16104:0 > 0
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17255sub-2031144846:0))), o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16104:0, o16105230761401:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17255sub-1800383445:0)))))))))), java.lang.Object(o18092sub0:0), o18090[LinkedList$Entry.next]o18088:0, o17255[LinkedList$Entry.next]o17253:0, 1, o17255[LinkedList$Entry.next]o16104:0, o16105230761401:0) :|: o17255[LinkedList$Entry.next]o16104:0 < o16106[LinkedList$Entry.next]o16104:0 && o16106[LinkedList$Entry.next]o16104:0 > -1 && o17255[LinkedList$Entry.next]o17253:0 < o16109[LinkedList$Entry.next]o16106:0 && o16109[LinkedList$Entry.next]o16106:0 > -1 && o17255[LinkedList$Entry.next]o16104:0 > 0 && i5247:0 > 1

----------------------------------------

(65)
Obligation:
Rules:
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21869sub-2031145621:0), java.lang.Object(o17251sub-2031145621:0))), o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16109:0, o16109[LinkedList$Entry.next]o16104:0, o16105230761401:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(o18062sub0:0), o16106[LinkedList$Entry.next]o16104:0, o17251[LinkedList$Entry.next]o16106:0, o18057[LinkedList$Entry.next]o18062:0, o17251[LinkedList$Entry.next]o16104:0, o16105230761401:0) :|: o16109[LinkedList$Entry.next]o16106:0 > 0 && o16106[LinkedList$Entry.next]o16109:0 > 0 && o18057[LinkedList$Entry.next]o18062:0 > o16106[LinkedList$Entry.next]o16109:0 && o16109[LinkedList$Entry.next]o16104:0 > -1 && o17251[LinkedList$Entry.next]o16104:0 < o16109[LinkedList$Entry.next]o16104:0 && o17251[LinkedList$Entry.next]o16106:0 < o16109[LinkedList$Entry.next]o16106:0 && i5247:0 > 1 && o17251[LinkedList$Entry.next]o16104:0 > 0
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x4, x3, x) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(x5), x6, x7, 1, x8, x) :|: x8 < x3 && x3 > -1 && x7 < x4 && x4 > -1 && x8 > 0 && x9 > 1
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(x11)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x12))), x13, x14, x15, x16, x10) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(x11)))))))), java.lang.Object(x17), x13, x18, x19, x20, x10) :|: x14 > 0 && x15 > 0 && x16 > -1 && x20 < x16 && x18 < x14 && x19 > x15 && x20 > 0 && x21 > 1
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x23), java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), java.lang.Object(x26))), x27, x28, x28, x27, x22) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x23), java.lang.Object(x24)))))))))), java.lang.Object(x29), x30, x31, 1, x32, x22) :|: x32 < x27 && x27 > -1 && x31 < x28 && x28 > -1 && x32 > 0 && x33 > 1
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x34, java.lang.Object(x35)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x36))), x37, x38, x39, x40, x34) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x34, java.lang.Object(x35)))))))), java.lang.Object(x41), x37, x42, x43, x44, x34) :|: x38 > 0 && x39 > 0 && x43 > x39 && x40 > -1 && x44 < x40 && x42 < x38 && x45 > 1 && x44 > 0
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x46, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x48))), x49, x50, x50, x49, x46) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x46, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x47)))))))))), java.lang.Object(x51), x52, x53, 1, x54, x46) :|: x54 < x49 && x49 > -1 && x53 < x50 && x50 > -1 && x54 > 0 && x55 > 1

----------------------------------------

(66) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(67)
Obligation:
Rules:
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21869sub-2031145621:0), java.lang.Object(o17251sub-2031145621:0))), o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16109:0, o16109[LinkedList$Entry.next]o16104:0, o16105230761401:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(o18062sub0:0), o16106[LinkedList$Entry.next]o16104:0, o17251[LinkedList$Entry.next]o16106:0, o18057[LinkedList$Entry.next]o18062:0, o17251[LinkedList$Entry.next]o16104:0, o16105230761401:0) :|: o16109[LinkedList$Entry.next]o16106:0 > 0 && o16106[LinkedList$Entry.next]o16109:0 > 0 && o18057[LinkedList$Entry.next]o18062:0 > o16106[LinkedList$Entry.next]o16109:0 && o16109[LinkedList$Entry.next]o16104:0 > -1 && o17251[LinkedList$Entry.next]o16104:0 < o16109[LinkedList$Entry.next]o16104:0 && o17251[LinkedList$Entry.next]o16106:0 < o16109[LinkedList$Entry.next]o16106:0 && i5247:0 > 1 && o17251[LinkedList$Entry.next]o16104:0 > 0
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x4, x3, x) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(x5), x6, x7, 1, x8, x) :|: x8 < x3 && x3 > -1 && x7 < x4 && x4 > -1 && x8 > 0 && x9 > 1
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(x11)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x12))), x13, x14, x15, x16, x10) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(x11)))))))), java.lang.Object(x17), x13, x18, x19, x20, x10) :|: x14 > 0 && x15 > 0 && x16 > -1 && x20 < x16 && x18 < x14 && x19 > x15 && x20 > 0 && x21 > 1
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x23), java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), java.lang.Object(x26))), x27, x28, x28, x27, x22) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x23), java.lang.Object(x24)))))))))), java.lang.Object(x29), x30, x31, 1, x32, x22) :|: x32 < x27 && x27 > -1 && x31 < x28 && x28 > -1 && x32 > 0 && x33 > 1
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x34, java.lang.Object(x35)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x36))), x37, x38, x39, x40, x34) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x34, java.lang.Object(x35)))))))), java.lang.Object(x41), x37, x42, x43, x44, x34) :|: x38 > 0 && x39 > 0 && x43 > x39 && x40 > -1 && x44 < x40 && x42 < x38 && x45 > 1 && x44 > 0
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x46, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x48))), x49, x50, x50, x49, x46) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x46, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x47)))))))))), java.lang.Object(x51), x52, x53, 1, x54, x46) :|: x54 < x49 && x49 > -1 && x53 < x50 && x50 > -1 && x54 > 0 && x55 > 1

----------------------------------------

(68) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21869sub-2031145621:0), java.lang.Object(o17251sub-2031145621:0))), o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16109:0, o16109[LinkedList$Entry.next]o16104:0, o16105230761401:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(o18062sub0:0), o16106[LinkedList$Entry.next]o16104:0, o17251[LinkedList$Entry.next]o16106:0, o18057[LinkedList$Entry.next]o18062:0, o17251[LinkedList$Entry.next]o16104:0, o16105230761401:0) :|: o16109[LinkedList$Entry.next]o16106:0 > 0 && o16106[LinkedList$Entry.next]o16109:0 > 0 && o18057[LinkedList$Entry.next]o18062:0 > o16106[LinkedList$Entry.next]o16109:0 && o16109[LinkedList$Entry.next]o16104:0 > -1 && o17251[LinkedList$Entry.next]o16104:0 < o16109[LinkedList$Entry.next]o16104:0 && o17251[LinkedList$Entry.next]o16106:0 < o16109[LinkedList$Entry.next]o16106:0 && i5247:0 > 1 && o17251[LinkedList$Entry.next]o16104:0 > 0
(2) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x4, x3, x) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(x5), x6, x7, 1, x8, x) :|: x8 < x3 && x3 > -1 && x7 < x4 && x4 > -1 && x8 > 0 && x9 > 1
(3) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(x11)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x12))), x13, x14, x15, x16, x10) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(x11)))))))), java.lang.Object(x17), x13, x18, x19, x20, x10) :|: x14 > 0 && x15 > 0 && x16 > -1 && x20 < x16 && x18 < x14 && x19 > x15 && x20 > 0 && x21 > 1
(4) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x23), java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), java.lang.Object(x26))), x27, x28, x28, x27, x22) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x23), java.lang.Object(x24)))))))))), java.lang.Object(x29), x30, x31, 1, x32, x22) :|: x32 < x27 && x27 > -1 && x31 < x28 && x28 > -1 && x32 > 0 && x33 > 1
(5) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x34, java.lang.Object(x35)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x36))), x37, x38, x39, x40, x34) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x34, java.lang.Object(x35)))))))), java.lang.Object(x41), x37, x42, x43, x44, x34) :|: x38 > 0 && x39 > 0 && x43 > x39 && x40 > -1 && x44 < x40 && x42 < x38 && x45 > 1 && x44 > 0
(6) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x46, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x48))), x49, x50, x50, x49, x46) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x46, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x47)))))))))), java.lang.Object(x51), x52, x53, 1, x54, x46) :|: x54 < x49 && x49 > -1 && x53 < x50 && x50 > -1 && x54 > 0 && x55 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (2), (3), (4), (5)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (3), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(69)
Obligation:

Termination digraph:
Nodes:
(1) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21869sub-2031145621:0), java.lang.Object(o17251sub-2031145621:0))), o16106[LinkedList$Entry.next]o16104:0, o16109[LinkedList$Entry.next]o16106:0, o16106[LinkedList$Entry.next]o16109:0, o16109[LinkedList$Entry.next]o16104:0, o16105230761401:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0, java.lang.Object(o16106sub230761401:0)))))))), java.lang.Object(o18062sub0:0), o16106[LinkedList$Entry.next]o16104:0, o17251[LinkedList$Entry.next]o16106:0, o18057[LinkedList$Entry.next]o18062:0, o17251[LinkedList$Entry.next]o16104:0, o16105230761401:0) :|: o16109[LinkedList$Entry.next]o16106:0 > 0 && o16106[LinkedList$Entry.next]o16109:0 > 0 && o18057[LinkedList$Entry.next]o18062:0 > o16106[LinkedList$Entry.next]o16109:0 && o16109[LinkedList$Entry.next]o16104:0 > -1 && o17251[LinkedList$Entry.next]o16104:0 < o16109[LinkedList$Entry.next]o16104:0 && o17251[LinkedList$Entry.next]o16106:0 < o16109[LinkedList$Entry.next]o16106:0 && i5247:0 > 1 && o17251[LinkedList$Entry.next]o16104:0 > 0
(2) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x4, x3, x) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(x5), x6, x7, 1, x8, x) :|: x8 < x3 && x3 > -1 && x7 < x4 && x4 > -1 && x8 > 0 && x9 > 1
(3) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(x11)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x12))), x13, x14, x15, x16, x10) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(x11)))))))), java.lang.Object(x17), x13, x18, x19, x20, x10) :|: x14 > 0 && x15 > 0 && x16 > -1 && x20 < x16 && x18 < x14 && x19 > x15 && x20 > 0 && x21 > 1
(4) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x23), java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25), java.lang.Object(x26))), x27, x28, x28, x27, x22) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x23), java.lang.Object(x24)))))))))), java.lang.Object(x29), x30, x31, 1, x32, x22) :|: x32 < x27 && x27 > -1 && x31 < x28 && x28 > -1 && x32 > 0 && x33 > 1
(5) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x34, java.lang.Object(x35)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x36))), x37, x38, x39, x40, x34) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x34, java.lang.Object(x35)))))))), java.lang.Object(x41), x37, x42, x43, x44, x34) :|: x38 > 0 && x39 > 0 && x43 > x39 && x40 > -1 && x44 < x40 && x42 < x38 && x45 > 1 && x44 > 0
(6) f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x46, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x48))), x49, x50, x50, x49, x46) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x46, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x47)))))))))), java.lang.Object(x51), x52, x53, 1, x54, x46) :|: x54 < x49 && x49 > -1 && x53 < x50 && x50 > -1 && x54 > 0 && x55 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (2), (3), (4), (5)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (3), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(70) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(71)
Obligation:
Rules:
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2:0))), x3:0, x4:0, x4:0, x3:0, x:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1:0)))))))))), java.lang.Object(x5:0), x6:0, x7:0, 1, x8:0, x:0) :|: x8:0 > 0 && x9:0 > 1 && x4:0 > -1 && x7:0 < x4:0 && x3:0 > -1 && x8:0 < x3:0
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10:0, java.lang.Object(x11:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x12:0))), x13:0, x14:0, x15:0, x16:0, x10:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10:0, java.lang.Object(x11:0)))))))), java.lang.Object(x17:0), x13:0, x18:0, x19:0, x20:0, x10:0) :|: x20:0 > 0 && x21:0 > 1 && x19:0 > x15:0 && x18:0 < x14:0 && x20:0 < x16:0 && x16:0 > -1 && x15:0 > 0 && x14:0 > 0
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x34:0, java.lang.Object(x35:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x36:0))), x37:0, x38:0, x39:0, x40:0, x34:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x34:0, java.lang.Object(x35:0)))))))), java.lang.Object(x41:0), x37:0, x42:0, x43:0, x44:0, x34:0) :|: x45:0 > 1 && x44:0 > 0 && x42:0 < x38:0 && x44:0 < x40:0 && x40:0 > -1 && x43:0 > x39:0 && x39:0 > 0 && x38:0 > 0
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x23:0), java.lang.Object(x24:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x25:0), java.lang.Object(x26:0))), x27:0, x28:0, x28:0, x27:0, x22:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x23:0), java.lang.Object(x24:0)))))))))), java.lang.Object(x29:0), x30:0, x31:0, 1, x32:0, x22:0) :|: x32:0 > 0 && x33:0 > 1 && x28:0 > -1 && x31:0 < x28:0 && x27:0 > -1 && x32:0 < x27:0
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0:0, java.lang.Object(o16106sub230761401:0:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o21869sub-2031145621:0:0), java.lang.Object(o17251sub-2031145621:0:0))), o16106[LinkedList$Entry.next]o16104:0:0, o16109[LinkedList$Entry.next]o16106:0:0, o16106[LinkedList$Entry.next]o16109:0:0, o16109[LinkedList$Entry.next]o16104:0:0, o16105230761401:0:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16105230761401:0:0, java.lang.Object(o16106sub230761401:0:0)))))))), java.lang.Object(o18062sub0:0:0), o16106[LinkedList$Entry.next]o16104:0:0, o17251[LinkedList$Entry.next]o16106:0:0, o18057[LinkedList$Entry.next]o18062:0:0, o17251[LinkedList$Entry.next]o16104:0:0, o16105230761401:0:0) :|: i5247:0:0 > 1 && o17251[LinkedList$Entry.next]o16104:0:0 > 0 && o17251[LinkedList$Entry.next]o16106:0:0 < o16109[LinkedList$Entry.next]o16106:0:0 && o17251[LinkedList$Entry.next]o16104:0:0 < o16109[LinkedList$Entry.next]o16104:0:0 && o16109[LinkedList$Entry.next]o16104:0:0 > -1 && o18057[LinkedList$Entry.next]o18062:0:0 > o16106[LinkedList$Entry.next]o16109:0:0 && o16106[LinkedList$Entry.next]o16109:0:0 > 0 && o16109[LinkedList$Entry.next]o16106:0:0 > 0
f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x46:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x47:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x48:0))), x49:0, x50:0, x50:0, x49:0, x46:0) -> f13525_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x46:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x47:0)))))))))), java.lang.Object(x51:0), x52:0, x53:0, 1, x54:0, x46:0) :|: x54:0 > 0 && x55:0 > 1 && x50:0 > -1 && x53:0 < x50:0 && x49:0 > -1 && x54:0 < x49:0

----------------------------------------

(72) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13525_0_indexOf_EQ(VARIABLE, VARIABLE, VARIABLE, INTEGER, VARIABLE, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
javaUtilEx.Content()
NULL()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(73)
Obligation:
Rules:
f13525_0_indexOf_EQ(c, c1, x3:0, x4:0, x4:0, x3:0, x:0) -> f13525_0_indexOf_EQ(c2, c3, x6:0, x7:0, c4, x8:0, x:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x8:0 > 0 && x9:0 > 1 && x4:0 > -1 && x7:0 < x4:0 && x3:0 > -1 && x8:0 < x3:0)
f13525_0_indexOf_EQ(c5, c6, x13:0, x14:0, x15:0, x16:0, x10:0) -> f13525_0_indexOf_EQ(c7, c8, x13:0, x18:0, x19:0, x20:0, x10:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x20:0 > 0 && x21:0 > 1 && x19:0 > x15:0 && x18:0 < x14:0 && x20:0 < x16:0 && x16:0 > -1 && x15:0 > 0 && x14:0 > 0)
f13525_0_indexOf_EQ(c9, c10, x37:0, x38:0, x39:0, x40:0, x34:0) -> f13525_0_indexOf_EQ(c11, c12, x37:0, x42:0, x43:0, x44:0, x34:0) :|: c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0)) && (x45:0 > 1 && x44:0 > 0 && x42:0 < x38:0 && x44:0 < x40:0 && x40:0 > -1 && x43:0 > x39:0 && x39:0 > 0 && x38:0 > 0)

----------------------------------------

(74) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13525_0_indexOf_EQ(x, x1, x2, x3, x4, x5, x6)] = -1 + c*x + c1*x1 + 2*x3

The following rules are decreasing:
f13525_0_indexOf_EQ(c, c1, x3:0, x4:0, x4:0, x3:0, x:0) -> f13525_0_indexOf_EQ(c2, c3, x6:0, x7:0, c4, x8:0, x:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x8:0 > 0 && x9:0 > 1 && x4:0 > -1 && x7:0 < x4:0 && x3:0 > -1 && x8:0 < x3:0)
f13525_0_indexOf_EQ(c5, c6, x13:0, x14:0, x15:0, x16:0, x10:0) -> f13525_0_indexOf_EQ(c7, c8, x13:0, x18:0, x19:0, x20:0, x10:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x20:0 > 0 && x21:0 > 1 && x19:0 > x15:0 && x18:0 < x14:0 && x20:0 < x16:0 && x16:0 > -1 && x15:0 > 0 && x14:0 > 0)
f13525_0_indexOf_EQ(c9, c10, x37:0, x38:0, x39:0, x40:0, x34:0) -> f13525_0_indexOf_EQ(c11, c12, x37:0, x42:0, x43:0, x44:0, x34:0) :|: c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0)) && (x45:0 > 1 && x44:0 > 0 && x42:0 < x38:0 && x44:0 < x40:0 && x40:0 > -1 && x43:0 > x39:0 && x39:0 > 0 && x38:0 > 0)
The following rules are bounded:
f13525_0_indexOf_EQ(c5, c6, x13:0, x14:0, x15:0, x16:0, x10:0) -> f13525_0_indexOf_EQ(c7, c8, x13:0, x18:0, x19:0, x20:0, x10:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x20:0 > 0 && x21:0 > 1 && x19:0 > x15:0 && x18:0 < x14:0 && x20:0 < x16:0 && x16:0 > -1 && x15:0 > 0 && x14:0 > 0)
f13525_0_indexOf_EQ(c9, c10, x37:0, x38:0, x39:0, x40:0, x34:0) -> f13525_0_indexOf_EQ(c11, c12, x37:0, x42:0, x43:0, x44:0, x34:0) :|: c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0)) && (x45:0 > 1 && x44:0 > 0 && x42:0 < x38:0 && x44:0 < x40:0 && x40:0 > -1 && x43:0 > x39:0 && x39:0 > 0 && x38:0 > 0)

----------------------------------------

(75)
Obligation:
Rules:
f13525_0_indexOf_EQ(c, c1, x3:0, x4:0, x4:0, x3:0, x:0) -> f13525_0_indexOf_EQ(c2, c3, x6:0, x7:0, c4, x8:0, x:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x8:0 > 0 && x9:0 > 1 && x4:0 > -1 && x7:0 < x4:0 && x3:0 > -1 && x8:0 < x3:0)

----------------------------------------

(76) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13525_0_indexOf_EQ(x, x1, x2, x3, x4, x5, x6)] = c*x + c1*x1 + x5

The following rules are decreasing:
f13525_0_indexOf_EQ(c, c1, x3:0, x4:0, x4:0, x3:0, x:0) -> f13525_0_indexOf_EQ(c2, c3, x6:0, x7:0, c4, x8:0, x:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x8:0 > 0 && x9:0 > 1 && x4:0 > -1 && x7:0 < x4:0 && x3:0 > -1 && x8:0 < x3:0)
The following rules are bounded:
f13525_0_indexOf_EQ(c, c1, x3:0, x4:0, x4:0, x3:0, x:0) -> f13525_0_indexOf_EQ(c2, c3, x6:0, x7:0, c4, x8:0, x:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x8:0 > 0 && x9:0 > 1 && x4:0 > -1 && x7:0 < x4:0 && x3:0 > -1 && x8:0 < x3:0)

----------------------------------------

(77)
YES

----------------------------------------

(78)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateContains.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, next]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(79) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 28 IRulesP rules:
f14140_0_indexOf_EQ(EOS(STATIC_14140), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), java.lang.Object(o23160sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158-2006239446, java.lang.Object(o23159sub-2006239446))), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160, o23160[LinkedList$Entry.next]o23157) -> f14147_0_indexOf_Load(EOS(STATIC_14147), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160, o23160[LinkedList$Entry.next]o23157) :|: TRUE
f14147_0_indexOf_Load(EOS(STATIC_14147), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160, o23160[LinkedList$Entry.next]o23157) -> f14153_0_indexOf_FieldAccess(EOS(STATIC_14153), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), java.lang.Object(o23160sub0), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160, o23160[LinkedList$Entry.next]o23157) :|: TRUE
f14153_0_indexOf_FieldAccess(EOS(STATIC_14153), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), java.lang.Object(o23160sub0), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160, o23160[LinkedList$Entry.next]o23157) -> f14161_0_indexOf_FieldAccess(EOS(STATIC_14161), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), java.lang.Object(o23160sub0), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23160, o23160[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159) :|: o23160[LinkedList$Entry.next]o23159 > 0 && o23159[LinkedList$Entry.next]o23160 > 0
f14153_0_indexOf_FieldAccess(EOS(STATIC_14153), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23812sub282488373)))))))), java.lang.Object(o23812sub0), java.lang.Object(o23812sub0), o23812[LinkedList$Entry.next]o23157, o23812[LinkedList$Entry.next]o23812, o23812[LinkedList$Entry.next]o23812, o23812[LinkedList$Entry.next]o23157) -> f14162_0_indexOf_FieldAccess(EOS(STATIC_14162), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23812sub282488373)))))))), java.lang.Object(o23812sub0), java.lang.Object(o23812sub0), o23812[LinkedList$Entry.next]o23157, o23812[LinkedList$Entry.next]o23812) :|: TRUE
f14161_0_indexOf_FieldAccess(EOS(STATIC_14161), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23838-2006032831, java.lang.Object(o23839sub-2006032831))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23838-2006032831, java.lang.Object(o23839sub-2006032831))), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23837[LinkedList$Entry.next]o23157, o23837[LinkedList$Entry.next]o23159) -> f14170_0_indexOf_FieldAccess(EOS(STATIC_14170), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23838-2006032831, java.lang.Object(o23839sub-2006032831))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23838-2006032831, java.lang.Object(o23839sub-2006032831))), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) :|: o23839[LinkedList$Entry.next]o23157 < o23837[LinkedList$Entry.next]o23157 && o23837[LinkedList$Entry.next]o23157 >= 0 && o23839[LinkedList$Entry.next]o23159 < o23837[LinkedList$Entry.next]o23159 && o23837[LinkedList$Entry.next]o23159 >= 0
f14170_0_indexOf_FieldAccess(EOS(STATIC_14170), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23838-2006032831, java.lang.Object(o23839sub-2006032831))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23838-2006032831, java.lang.Object(o23839sub-2006032831))), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) -> f14179_0_indexOf_NONNULL(EOS(STATIC_14179), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23838-2006032831, java.lang.Object(o23839sub-2006032831))), o238380, o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) :|: TRUE
f14179_0_indexOf_NONNULL(EOS(STATIC_14179), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24021sub-2006032831), java.lang.Object(o23839sub-2006032831))), java.lang.Object(o24021sub0), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) -> f14190_0_indexOf_NONNULL(EOS(STATIC_14190), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24021sub-2006032831), java.lang.Object(o23839sub-2006032831))), java.lang.Object(o24021sub0), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) :|: TRUE
f14190_0_indexOf_NONNULL(EOS(STATIC_14190), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24021sub-2006032831), java.lang.Object(o23839sub-2006032831))), java.lang.Object(o24021sub0), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) -> f14203_0_indexOf_Inc(EOS(STATIC_14203), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24021sub-2006032831), java.lang.Object(o23839sub-2006032831))), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) :|: TRUE
f14203_0_indexOf_Inc(EOS(STATIC_14203), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24021sub-2006032831), java.lang.Object(o23839sub-2006032831))), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) -> f14215_0_indexOf_Load(EOS(STATIC_14215), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24021sub-2006032831), java.lang.Object(o23839sub-2006032831))), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) :|: TRUE
f14215_0_indexOf_Load(EOS(STATIC_14215), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24021sub-2006032831), java.lang.Object(o23839sub-2006032831))), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) -> f14224_0_indexOf_FieldAccess(EOS(STATIC_14224), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24021sub-2006032831), java.lang.Object(o23839sub-2006032831))), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) :|: TRUE
f14224_0_indexOf_FieldAccess(EOS(STATIC_14224), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24021sub-2006032831), java.lang.Object(o23839sub-2006032831))), o23159[LinkedList$Entry.next]o23157, o23159[LinkedList$Entry.next]o23837, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159) -> f14229_0_indexOf_Store(EOS(STATIC_14229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23839sub0), o23159[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23839) :|: o23159[LinkedList$Entry.next]o23839 > o23159[LinkedList$Entry.next]o23837 && o23159[LinkedList$Entry.next]o23837 >= 0
f14229_0_indexOf_Store(EOS(STATIC_14229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23839sub0), o23159[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23839) -> f14262_0_indexOf_JMP(EOS(STATIC_14262), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23839sub0), o23159[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23839) :|: TRUE
f14262_0_indexOf_JMP(EOS(STATIC_14262), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23839sub0), o23159[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23839) -> f14275_0_indexOf_Load(EOS(STATIC_14275), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23839sub0), o23159[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23839) :|: TRUE
f14275_0_indexOf_Load(EOS(STATIC_14275), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23839sub0), o23159[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23839) -> f14111_0_indexOf_Load(EOS(STATIC_14111), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23839sub0), o23159[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23157, o23839[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23839) :|: TRUE
f14111_0_indexOf_Load(EOS(STATIC_14111), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160) -> f14119_0_indexOf_Load(EOS(STATIC_14119), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), java.lang.Object(o23160sub0), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160) :|: TRUE
f14119_0_indexOf_Load(EOS(STATIC_14119), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), java.lang.Object(o23160sub0), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160) -> f14127_0_indexOf_FieldAccess(EOS(STATIC_14127), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), java.lang.Object(o23160sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160) :|: TRUE
f14127_0_indexOf_FieldAccess(EOS(STATIC_14127), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), java.lang.Object(o23160sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160) -> f14133_0_indexOf_EQ(EOS(STATIC_14133), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), java.lang.Object(o23160sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158-2006239446, java.lang.Object(o23159sub-2006239446))), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160) :|: TRUE
f14133_0_indexOf_EQ(EOS(STATIC_14133), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), java.lang.Object(o23160sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158-2006239446, java.lang.Object(o23159sub-2006239446))), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160) -> f14140_0_indexOf_EQ(EOS(STATIC_14140), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(o23159sub282488373)))))))), java.lang.Object(o23160sub0), java.lang.Object(o23160sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158-2006239446, java.lang.Object(o23159sub-2006239446))), o23159[LinkedList$Entry.next]o23157, o23160[LinkedList$Entry.next]o23159, o23159[LinkedList$Entry.next]o23160, o23160[LinkedList$Entry.next]o23157) :|: o23160[LinkedList$Entry.next]o23157 > 0
f14162_0_indexOf_FieldAccess(EOS(STATIC_14162), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23842-1723543683, java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23842-2006032056, java.lang.Object(o23843sub-2006032056))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23842-2006032056, java.lang.Object(o23843sub-2006032056))), o23841[LinkedList$Entry.next]o23157, o23841[LinkedList$Entry.next]o23841) -> f14171_0_indexOf_FieldAccess(EOS(STATIC_14171), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23842-1723543683, java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23842-2006032056, java.lang.Object(o23843sub-2006032056))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23842-2006032056, java.lang.Object(o23843sub-2006032056))), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) :|: o23843[LinkedList$Entry.next]o23157 < o23841[LinkedList$Entry.next]o23157 && o23841[LinkedList$Entry.next]o23157 >= 0 && o23843[LinkedList$Entry.next]o23841 < o23841[LinkedList$Entry.next]o23841 && o23841[LinkedList$Entry.next]o23841 >= 0
f14171_0_indexOf_FieldAccess(EOS(STATIC_14171), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23842-1723543683, java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23842-2006032056, java.lang.Object(o23843sub-2006032056))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23842-2006032056, java.lang.Object(o23843sub-2006032056))), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) -> f14180_0_indexOf_NONNULL(EOS(STATIC_14180), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23842-1723543683, java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23842-2006032056, java.lang.Object(o23843sub-2006032056))), o238420, o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) :|: TRUE
f14180_0_indexOf_NONNULL(EOS(STATIC_14180), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-2006032056), java.lang.Object(o23843sub-2006032056))), java.lang.Object(o24022sub0), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) -> f14192_0_indexOf_NONNULL(EOS(STATIC_14192), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-2006032056), java.lang.Object(o23843sub-2006032056))), java.lang.Object(o24022sub0), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) :|: TRUE
f14192_0_indexOf_NONNULL(EOS(STATIC_14192), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-2006032056), java.lang.Object(o23843sub-2006032056))), java.lang.Object(o24022sub0), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) -> f14205_0_indexOf_Inc(EOS(STATIC_14205), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-2006032056), java.lang.Object(o23843sub-2006032056))), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) :|: TRUE
f14205_0_indexOf_Inc(EOS(STATIC_14205), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-2006032056), java.lang.Object(o23843sub-2006032056))), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) -> f14216_0_indexOf_Load(EOS(STATIC_14216), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-2006032056), java.lang.Object(o23843sub-2006032056))), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) :|: TRUE
f14216_0_indexOf_Load(EOS(STATIC_14216), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-2006032056), java.lang.Object(o23843sub-2006032056))), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) -> f14225_0_indexOf_FieldAccess(EOS(STATIC_14225), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-2006032056), java.lang.Object(o23843sub-2006032056))), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) :|: TRUE
f14225_0_indexOf_FieldAccess(EOS(STATIC_14225), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-2006032056), java.lang.Object(o23843sub-2006032056))), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) -> f14230_0_indexOf_Store(EOS(STATIC_14230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(o23843sub0), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) :|: TRUE
f14230_0_indexOf_Store(EOS(STATIC_14230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(o23843sub0), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) -> f14263_0_indexOf_JMP(EOS(STATIC_14263), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(o23843sub0), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) :|: TRUE
f14263_0_indexOf_JMP(EOS(STATIC_14263), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(o23843sub0), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) -> f14276_0_indexOf_Load(EOS(STATIC_14276), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(o23843sub0), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) :|: TRUE
f14276_0_indexOf_Load(EOS(STATIC_14276), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(o23843sub0), o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841) -> f14111_0_indexOf_Load(EOS(STATIC_14111), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683), java.lang.Object(o23843sub-1723543683)))))))))), java.lang.Object(o23843sub0), o23841[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23157, o23843[LinkedList$Entry.next]o23841, o23841[LinkedList$Entry.next]o23843) :|: o23841[LinkedList$Entry.next]o23843 = 1
Combined rules. Obtained 2 IRulesP rules:
f14140_0_indexOf_EQ(EOS(STATIC_14140), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-2006032056:0), java.lang.Object(o23843sub-2006032056:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-2006032056:0), java.lang.Object(o23843sub-2006032056:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158-2006239446:0, java.lang.Object(o23159sub-2006239446:0))), o23159[LinkedList$Entry.next]o23157:0, o23160[LinkedList$Entry.next]o23159:0, o23160[LinkedList$Entry.next]o23159:0, o23159[LinkedList$Entry.next]o23157:0) -> f14140_0_indexOf_EQ(EOS(STATIC_14140), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(o23843sub0:0), java.lang.Object(o23843sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158-2006239446:1, java.lang.Object(o23159sub-2006239446:1))), o23841[LinkedList$Entry.next]o23157:0, o23843[LinkedList$Entry.next]o23841:0, 1, o23843[LinkedList$Entry.next]o23157:0) :|: o23159[LinkedList$Entry.next]o23157:0 > -1 && o23843[LinkedList$Entry.next]o23157:0 < o23159[LinkedList$Entry.next]o23157:0 && o23843[LinkedList$Entry.next]o23841:0 < o23160[LinkedList$Entry.next]o23159:0 && o23843[LinkedList$Entry.next]o23157:0 > 0 && o23160[LinkedList$Entry.next]o23159:0 > -1
f14140_0_indexOf_EQ(EOS(STATIC_14140), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373:0, java.lang.Object(o23159sub282488373:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24021sub-2006032831:0), java.lang.Object(o23839sub-2006032831:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24021sub-2006032831:0), java.lang.Object(o23839sub-2006032831:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158-2006239446:0, java.lang.Object(o23159sub-2006239446:0))), o23159[LinkedList$Entry.next]o23157:0, o23160[LinkedList$Entry.next]o23159:0, o23159[LinkedList$Entry.next]o23160:0, o23160[LinkedList$Entry.next]o23157:0) -> f14140_0_indexOf_EQ(EOS(STATIC_14140), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158282488373:0, java.lang.Object(o23159sub282488373:0)))))))), java.lang.Object(o23839sub0:0), java.lang.Object(o23839sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23158-2006239446:1, java.lang.Object(o23159sub-2006239446:1))), o23159[LinkedList$Entry.next]o23157:0, o23839[LinkedList$Entry.next]o23159:0, o23159[LinkedList$Entry.next]o23839:0, o23839[LinkedList$Entry.next]o23157:0) :|: o23159[LinkedList$Entry.next]o23160:0 > 0 && o23160[LinkedList$Entry.next]o23159:0 > 0 && o23160[LinkedList$Entry.next]o23157:0 > -1 && o23839[LinkedList$Entry.next]o23157:0 < o23160[LinkedList$Entry.next]o23157:0 && o23839[LinkedList$Entry.next]o23159:0 < o23160[LinkedList$Entry.next]o23159:0 && o23839[LinkedList$Entry.next]o23157:0 > 0 && o23159[LinkedList$Entry.next]o23839:0 > o23159[LinkedList$Entry.next]o23160:0
Filtered constant ground arguments:
   f14140_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f14140_0_indexOf_EQ(x2, x3, x4, x5, x6, x7, x8, x9)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f14140_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f14140_0_indexOf_EQ(x1, x3, x4, x5, x6, x7, x8)
Filtered unneeded arguments:
   f14140_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7) -> f14140_0_indexOf_EQ(x1, x2, x4, x5, x6, x7)
Finished conversion. Obtained 2 rules.P rules:
f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-2006032056:0), java.lang.Object(o23843sub-2006032056:0))), o23159[LinkedList$Entry.next]o23157:0, o23160[LinkedList$Entry.next]o23159:0, o23160[LinkedList$Entry.next]o23159:0, o23159[LinkedList$Entry.next]o23157:0, o23158282488373:0) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(o23843sub0:0), o23841[LinkedList$Entry.next]o23157:0, o23843[LinkedList$Entry.next]o23841:0, 1, o23843[LinkedList$Entry.next]o23157:0, o23158282488373:0) :|: o23843[LinkedList$Entry.next]o23157:0 < o23159[LinkedList$Entry.next]o23157:0 && o23159[LinkedList$Entry.next]o23157:0 > -1 && o23843[LinkedList$Entry.next]o23841:0 < o23160[LinkedList$Entry.next]o23159:0 && o23160[LinkedList$Entry.next]o23159:0 > -1 && o23843[LinkedList$Entry.next]o23157:0 > 0
f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(o23159sub282488373:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24021sub-2006032831:0), java.lang.Object(o23839sub-2006032831:0))), o23159[LinkedList$Entry.next]o23157:0, o23160[LinkedList$Entry.next]o23159:0, o23159[LinkedList$Entry.next]o23160:0, o23160[LinkedList$Entry.next]o23157:0, o23158282488373:0) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(o23159sub282488373:0)))))))), java.lang.Object(o23839sub0:0), o23159[LinkedList$Entry.next]o23157:0, o23839[LinkedList$Entry.next]o23159:0, o23159[LinkedList$Entry.next]o23839:0, o23839[LinkedList$Entry.next]o23157:0, o23158282488373:0) :|: o23160[LinkedList$Entry.next]o23159:0 > 0 && o23159[LinkedList$Entry.next]o23160:0 > 0 && o23160[LinkedList$Entry.next]o23157:0 > -1 && o23839[LinkedList$Entry.next]o23157:0 < o23160[LinkedList$Entry.next]o23157:0 && o23839[LinkedList$Entry.next]o23159:0 < o23160[LinkedList$Entry.next]o23159:0 && o23159[LinkedList$Entry.next]o23839:0 > o23159[LinkedList$Entry.next]o23160:0 && o23839[LinkedList$Entry.next]o23157:0 > 0

----------------------------------------

(80)
Obligation:
Rules:
f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-2006032056:0), java.lang.Object(o23843sub-2006032056:0))), o23159[LinkedList$Entry.next]o23157:0, o23160[LinkedList$Entry.next]o23159:0, o23160[LinkedList$Entry.next]o23159:0, o23159[LinkedList$Entry.next]o23157:0, o23158282488373:0) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(o23843sub0:0), o23841[LinkedList$Entry.next]o23157:0, o23843[LinkedList$Entry.next]o23841:0, 1, o23843[LinkedList$Entry.next]o23157:0, o23158282488373:0) :|: o23843[LinkedList$Entry.next]o23157:0 < o23159[LinkedList$Entry.next]o23157:0 && o23159[LinkedList$Entry.next]o23157:0 > -1 && o23843[LinkedList$Entry.next]o23841:0 < o23160[LinkedList$Entry.next]o23159:0 && o23160[LinkedList$Entry.next]o23159:0 > -1 && o23843[LinkedList$Entry.next]o23157:0 > 0
f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x9 < x5 && x10 > x6 && x11 > 0

----------------------------------------

(81) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(82)
Obligation:
Rules:
f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-2006032056:0), java.lang.Object(o23843sub-2006032056:0))), o23159[LinkedList$Entry.next]o23157:0, o23160[LinkedList$Entry.next]o23159:0, o23160[LinkedList$Entry.next]o23159:0, o23159[LinkedList$Entry.next]o23157:0, o23158282488373:0) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(o23843sub0:0), o23841[LinkedList$Entry.next]o23157:0, o23843[LinkedList$Entry.next]o23841:0, 1, o23843[LinkedList$Entry.next]o23157:0, o23158282488373:0) :|: o23843[LinkedList$Entry.next]o23157:0 < o23159[LinkedList$Entry.next]o23157:0 && o23159[LinkedList$Entry.next]o23157:0 > -1 && o23843[LinkedList$Entry.next]o23841:0 < o23160[LinkedList$Entry.next]o23159:0 && o23160[LinkedList$Entry.next]o23159:0 > -1 && o23843[LinkedList$Entry.next]o23157:0 > 0
f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x9 < x5 && x10 > x6 && x11 > 0

----------------------------------------

(83) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-2006032056:0), java.lang.Object(o23843sub-2006032056:0))), o23159[LinkedList$Entry.next]o23157:0, o23160[LinkedList$Entry.next]o23159:0, o23160[LinkedList$Entry.next]o23159:0, o23159[LinkedList$Entry.next]o23157:0, o23158282488373:0) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(o23843sub0:0), o23841[LinkedList$Entry.next]o23157:0, o23843[LinkedList$Entry.next]o23841:0, 1, o23843[LinkedList$Entry.next]o23157:0, o23158282488373:0) :|: o23843[LinkedList$Entry.next]o23157:0 < o23159[LinkedList$Entry.next]o23157:0 && o23159[LinkedList$Entry.next]o23157:0 > -1 && o23843[LinkedList$Entry.next]o23841:0 < o23160[LinkedList$Entry.next]o23159:0 && o23160[LinkedList$Entry.next]o23159:0 > -1 && o23843[LinkedList$Entry.next]o23157:0 > 0
(2) f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x9 < x5 && x10 > x6 && x11 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(84)
Obligation:

Termination digraph:
Nodes:
(1) f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-2006032056:0), java.lang.Object(o23843sub-2006032056:0))), o23159[LinkedList$Entry.next]o23157:0, o23160[LinkedList$Entry.next]o23159:0, o23160[LinkedList$Entry.next]o23159:0, o23159[LinkedList$Entry.next]o23157:0, o23158282488373:0) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0), java.lang.Object(o23843sub-1723543683:0)))))))))), java.lang.Object(o23843sub0:0), o23841[LinkedList$Entry.next]o23157:0, o23843[LinkedList$Entry.next]o23841:0, 1, o23843[LinkedList$Entry.next]o23157:0, o23158282488373:0) :|: o23843[LinkedList$Entry.next]o23157:0 < o23159[LinkedList$Entry.next]o23157:0 && o23159[LinkedList$Entry.next]o23157:0 > -1 && o23843[LinkedList$Entry.next]o23841:0 < o23160[LinkedList$Entry.next]o23159:0 && o23160[LinkedList$Entry.next]o23159:0 > -1 && o23843[LinkedList$Entry.next]o23157:0 > 0
(2) f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x9 < x5 && x10 > x6 && x11 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(85) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(86)
Obligation:
Rules:
f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2:0), java.lang.Object(x3:0))), x4:0, x5:0, x6:0, x7:0, x:0) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x8:0), x4:0, x9:0, x10:0, x11:0, x:0) :|: x6:0 < x10:0 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x5:0 > 0
f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0:0), java.lang.Object(o23843sub-1723543683:0:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-2006032056:0:0), java.lang.Object(o23843sub-2006032056:0:0))), o23159[LinkedList$Entry.next]o23157:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23159[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) -> f14140_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23158282488373:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24022sub-1723543683:0:0), java.lang.Object(o23843sub-1723543683:0:0)))))))))), java.lang.Object(o23843sub0:0:0), o23841[LinkedList$Entry.next]o23157:0:0, o23843[LinkedList$Entry.next]o23841:0:0, 1, o23843[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) :|: o23160[LinkedList$Entry.next]o23159:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 > 0 && o23843[LinkedList$Entry.next]o23841:0:0 < o23160[LinkedList$Entry.next]o23159:0:0 && o23159[LinkedList$Entry.next]o23157:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 < o23159[LinkedList$Entry.next]o23157:0:0

----------------------------------------

(87) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f14140_0_indexOf_EQ(VARIABLE, VARIABLE, VARIABLE, INTEGER, VARIABLE, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(88)
Obligation:
Rules:
f14140_0_indexOf_EQ(c, c1, x4:0, x5:0, x6:0, x7:0, x:0) -> f14140_0_indexOf_EQ(c2, c3, x4:0, x9:0, x10:0, x11:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x6:0 < x10:0 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x5:0 > 0)
f14140_0_indexOf_EQ(c4, c5, o23159[LinkedList$Entry.next]o23157:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23159[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) -> f14140_0_indexOf_EQ(c6, c7, o23841[LinkedList$Entry.next]o23157:0:0, o23843[LinkedList$Entry.next]o23841:0:0, c8, o23843[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (o23160[LinkedList$Entry.next]o23159:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 > 0 && o23843[LinkedList$Entry.next]o23841:0:0 < o23160[LinkedList$Entry.next]o23159:0:0 && o23159[LinkedList$Entry.next]o23157:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 < o23159[LinkedList$Entry.next]o23157:0:0)

----------------------------------------

(89) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f14140_0_indexOf_EQ(x, x1, x2, x3, x4, x5, x6)] = -1 + c*x + c1*x1 + x3

The following rules are decreasing:
f14140_0_indexOf_EQ(c, c1, x4:0, x5:0, x6:0, x7:0, x:0) -> f14140_0_indexOf_EQ(c2, c3, x4:0, x9:0, x10:0, x11:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x6:0 < x10:0 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x5:0 > 0)
f14140_0_indexOf_EQ(c4, c5, o23159[LinkedList$Entry.next]o23157:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23159[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) -> f14140_0_indexOf_EQ(c6, c7, o23841[LinkedList$Entry.next]o23157:0:0, o23843[LinkedList$Entry.next]o23841:0:0, c8, o23843[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (o23160[LinkedList$Entry.next]o23159:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 > 0 && o23843[LinkedList$Entry.next]o23841:0:0 < o23160[LinkedList$Entry.next]o23159:0:0 && o23159[LinkedList$Entry.next]o23157:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 < o23159[LinkedList$Entry.next]o23157:0:0)
The following rules are bounded:
f14140_0_indexOf_EQ(c, c1, x4:0, x5:0, x6:0, x7:0, x:0) -> f14140_0_indexOf_EQ(c2, c3, x4:0, x9:0, x10:0, x11:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x6:0 < x10:0 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x5:0 > 0)

----------------------------------------

(90)
Obligation:
Rules:
f14140_0_indexOf_EQ(c4, c5, o23159[LinkedList$Entry.next]o23157:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23159[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) -> f14140_0_indexOf_EQ(c6, c7, o23841[LinkedList$Entry.next]o23157:0:0, o23843[LinkedList$Entry.next]o23841:0:0, c8, o23843[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (o23160[LinkedList$Entry.next]o23159:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 > 0 && o23843[LinkedList$Entry.next]o23841:0:0 < o23160[LinkedList$Entry.next]o23159:0:0 && o23159[LinkedList$Entry.next]o23157:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 < o23159[LinkedList$Entry.next]o23157:0:0)

----------------------------------------

(91) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f14140_0_indexOf_EQ ] = f14140_0_indexOf_EQ_6

The following rules are decreasing:
f14140_0_indexOf_EQ(c4, c5, o23159[LinkedList$Entry.next]o23157:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23159[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) -> f14140_0_indexOf_EQ(c6, c7, o23841[LinkedList$Entry.next]o23157:0:0, o23843[LinkedList$Entry.next]o23841:0:0, c8, o23843[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (o23160[LinkedList$Entry.next]o23159:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 > 0 && o23843[LinkedList$Entry.next]o23841:0:0 < o23160[LinkedList$Entry.next]o23159:0:0 && o23159[LinkedList$Entry.next]o23157:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 < o23159[LinkedList$Entry.next]o23157:0:0)

The following rules are bounded:
f14140_0_indexOf_EQ(c4, c5, o23159[LinkedList$Entry.next]o23157:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23160[LinkedList$Entry.next]o23159:0:0, o23159[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) -> f14140_0_indexOf_EQ(c6, c7, o23841[LinkedList$Entry.next]o23157:0:0, o23843[LinkedList$Entry.next]o23841:0:0, c8, o23843[LinkedList$Entry.next]o23157:0:0, o23158282488373:0:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (o23160[LinkedList$Entry.next]o23159:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 > 0 && o23843[LinkedList$Entry.next]o23841:0:0 < o23160[LinkedList$Entry.next]o23159:0:0 && o23159[LinkedList$Entry.next]o23157:0:0 > -1 && o23843[LinkedList$Entry.next]o23157:0:0 < o23159[LinkedList$Entry.next]o23157:0:0)


----------------------------------------

(92)
YES

----------------------------------------

(93)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateContains.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, next]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(94) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 28 IRulesP rules:
f14138_0_indexOf_EQ(EOS(STATIC_14138), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), java.lang.Object(o23089sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086-2006266416, java.lang.Object(o23087sub-2006266416))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089, o23089[LinkedList$Entry.next]o23085) -> f14145_0_indexOf_Load(EOS(STATIC_14145), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089, o23089[LinkedList$Entry.next]o23085) :|: TRUE
f14145_0_indexOf_Load(EOS(STATIC_14145), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089, o23089[LinkedList$Entry.next]o23085) -> f14152_0_indexOf_FieldAccess(EOS(STATIC_14152), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), java.lang.Object(o23089sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089, o23089[LinkedList$Entry.next]o23085) :|: TRUE
f14152_0_indexOf_FieldAccess(EOS(STATIC_14152), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), java.lang.Object(o23089sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089, o23089[LinkedList$Entry.next]o23085) -> f14159_0_indexOf_FieldAccess(EOS(STATIC_14159), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), java.lang.Object(o23089sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23089, o23089[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087) :|: o23089[LinkedList$Entry.next]o23087 > 0 && o23087[LinkedList$Entry.next]o23089 > 0
f14152_0_indexOf_FieldAccess(EOS(STATIC_14152), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23809sub282434433)))))))), java.lang.Object(o23809sub0), java.lang.Object(o23809sub0), o23088[LinkedList$Entry.previous]o23085, o23809[LinkedList$Entry.next]o23085, o23809[LinkedList$Entry.next]o23809, o23809[LinkedList$Entry.next]o23809, o23809[LinkedList$Entry.next]o23085) -> f14160_0_indexOf_FieldAccess(EOS(STATIC_14160), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23809sub282434433)))))))), java.lang.Object(o23809sub0), java.lang.Object(o23809sub0), o23088[LinkedList$Entry.previous]o23085, o23809[LinkedList$Entry.next]o23085, o23809[LinkedList$Entry.next]o23809) :|: TRUE
f14159_0_indexOf_FieldAccess(EOS(STATIC_14159), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23830-2006033730, java.lang.Object(o23831sub-2006033730))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23830-2006033730, java.lang.Object(o23831sub-2006033730))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23829[LinkedList$Entry.next]o23085, o23829[LinkedList$Entry.next]o23087) -> f14168_0_indexOf_FieldAccess(EOS(STATIC_14168), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23830-2006033730, java.lang.Object(o23831sub-2006033730))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23830-2006033730, java.lang.Object(o23831sub-2006033730))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) :|: o23831[LinkedList$Entry.next]o23085 < o23829[LinkedList$Entry.next]o23085 && o23829[LinkedList$Entry.next]o23085 >= 0 && o23831[LinkedList$Entry.next]o23087 < o23829[LinkedList$Entry.next]o23087 && o23829[LinkedList$Entry.next]o23087 >= 0
f14168_0_indexOf_FieldAccess(EOS(STATIC_14168), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23830-2006033730, java.lang.Object(o23831sub-2006033730))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23830-2006033730, java.lang.Object(o23831sub-2006033730))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) -> f14177_0_indexOf_NONNULL(EOS(STATIC_14177), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23830-2006033730, java.lang.Object(o23831sub-2006033730))), o238300, o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) :|: TRUE
f14177_0_indexOf_NONNULL(EOS(STATIC_14177), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24019sub-2006033730), java.lang.Object(o23831sub-2006033730))), java.lang.Object(o24019sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) -> f14186_0_indexOf_NONNULL(EOS(STATIC_14186), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24019sub-2006033730), java.lang.Object(o23831sub-2006033730))), java.lang.Object(o24019sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) :|: TRUE
f14186_0_indexOf_NONNULL(EOS(STATIC_14186), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24019sub-2006033730), java.lang.Object(o23831sub-2006033730))), java.lang.Object(o24019sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) -> f14199_0_indexOf_Inc(EOS(STATIC_14199), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24019sub-2006033730), java.lang.Object(o23831sub-2006033730))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) :|: TRUE
f14199_0_indexOf_Inc(EOS(STATIC_14199), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24019sub-2006033730), java.lang.Object(o23831sub-2006033730))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) -> f14212_0_indexOf_Load(EOS(STATIC_14212), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24019sub-2006033730), java.lang.Object(o23831sub-2006033730))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) :|: TRUE
f14212_0_indexOf_Load(EOS(STATIC_14212), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24019sub-2006033730), java.lang.Object(o23831sub-2006033730))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) -> f14221_0_indexOf_FieldAccess(EOS(STATIC_14221), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24019sub-2006033730), java.lang.Object(o23831sub-2006033730))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) :|: TRUE
f14221_0_indexOf_FieldAccess(EOS(STATIC_14221), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24019sub-2006033730), java.lang.Object(o23831sub-2006033730))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23087[LinkedList$Entry.next]o23829, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087) -> f14226_0_indexOf_Store(EOS(STATIC_14226), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23831sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23831) :|: o23087[LinkedList$Entry.next]o23831 > o23087[LinkedList$Entry.next]o23829 && o23087[LinkedList$Entry.next]o23829 >= 0
f14226_0_indexOf_Store(EOS(STATIC_14226), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23831sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23831) -> f14259_0_indexOf_JMP(EOS(STATIC_14259), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23831sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23831) :|: TRUE
f14259_0_indexOf_JMP(EOS(STATIC_14259), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23831sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23831) -> f14272_0_indexOf_Load(EOS(STATIC_14272), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23831sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23831) :|: TRUE
f14272_0_indexOf_Load(EOS(STATIC_14272), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23831sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23831) -> f14108_0_indexOf_Load(EOS(STATIC_14108), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23831sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23085, o23831[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23831) :|: TRUE
f14108_0_indexOf_Load(EOS(STATIC_14108), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089) -> f14118_0_indexOf_Load(EOS(STATIC_14118), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), java.lang.Object(o23089sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089) :|: TRUE
f14118_0_indexOf_Load(EOS(STATIC_14118), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), java.lang.Object(o23089sub0), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089) -> f14126_0_indexOf_FieldAccess(EOS(STATIC_14126), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), java.lang.Object(o23089sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089) :|: TRUE
f14126_0_indexOf_FieldAccess(EOS(STATIC_14126), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), java.lang.Object(o23089sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089) -> f14132_0_indexOf_EQ(EOS(STATIC_14132), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), java.lang.Object(o23089sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086-2006266416, java.lang.Object(o23087sub-2006266416))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089) :|: TRUE
f14132_0_indexOf_EQ(EOS(STATIC_14132), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), java.lang.Object(o23089sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086-2006266416, java.lang.Object(o23087sub-2006266416))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089) -> f14138_0_indexOf_EQ(EOS(STATIC_14138), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(o23087sub282434433)))))))), java.lang.Object(o23089sub0), java.lang.Object(o23089sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086-2006266416, java.lang.Object(o23087sub-2006266416))), o23088[LinkedList$Entry.previous]o23085, o23087[LinkedList$Entry.next]o23085, o23089[LinkedList$Entry.next]o23087, o23087[LinkedList$Entry.next]o23089, o23089[LinkedList$Entry.next]o23085) :|: o23089[LinkedList$Entry.next]o23085 > 0
f14160_0_indexOf_FieldAccess(EOS(STATIC_14160), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23834-1723598522, java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23834-2006032955, java.lang.Object(o23835sub-2006032955))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23834-2006032955, java.lang.Object(o23835sub-2006032955))), o23088[LinkedList$Entry.previous]o23085, o23833[LinkedList$Entry.next]o23085, o23833[LinkedList$Entry.next]o23833) -> f14169_0_indexOf_FieldAccess(EOS(STATIC_14169), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23834-1723598522, java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23834-2006032955, java.lang.Object(o23835sub-2006032955))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23834-2006032955, java.lang.Object(o23835sub-2006032955))), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) :|: o23835[LinkedList$Entry.next]o23085 < o23833[LinkedList$Entry.next]o23085 && o23833[LinkedList$Entry.next]o23085 >= 0 && o23835[LinkedList$Entry.next]o23833 < o23833[LinkedList$Entry.next]o23833 && o23833[LinkedList$Entry.next]o23833 >= 0
f14169_0_indexOf_FieldAccess(EOS(STATIC_14169), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23834-1723598522, java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23834-2006032955, java.lang.Object(o23835sub-2006032955))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23834-2006032955, java.lang.Object(o23835sub-2006032955))), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) -> f14178_0_indexOf_NONNULL(EOS(STATIC_14178), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23834-1723598522, java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23834-2006032955, java.lang.Object(o23835sub-2006032955))), o238340, o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) :|: TRUE
f14178_0_indexOf_NONNULL(EOS(STATIC_14178), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-2006032955), java.lang.Object(o23835sub-2006032955))), java.lang.Object(o24020sub0), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) -> f14188_0_indexOf_NONNULL(EOS(STATIC_14188), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-2006032955), java.lang.Object(o23835sub-2006032955))), java.lang.Object(o24020sub0), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) :|: TRUE
f14188_0_indexOf_NONNULL(EOS(STATIC_14188), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-2006032955), java.lang.Object(o23835sub-2006032955))), java.lang.Object(o24020sub0), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) -> f14201_0_indexOf_Inc(EOS(STATIC_14201), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-2006032955), java.lang.Object(o23835sub-2006032955))), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) :|: TRUE
f14201_0_indexOf_Inc(EOS(STATIC_14201), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-2006032955), java.lang.Object(o23835sub-2006032955))), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) -> f14214_0_indexOf_Load(EOS(STATIC_14214), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-2006032955), java.lang.Object(o23835sub-2006032955))), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) :|: TRUE
f14214_0_indexOf_Load(EOS(STATIC_14214), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-2006032955), java.lang.Object(o23835sub-2006032955))), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) -> f14223_0_indexOf_FieldAccess(EOS(STATIC_14223), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-2006032955), java.lang.Object(o23835sub-2006032955))), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) :|: TRUE
f14223_0_indexOf_FieldAccess(EOS(STATIC_14223), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-2006032955), java.lang.Object(o23835sub-2006032955))), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) -> f14228_0_indexOf_Store(EOS(STATIC_14228), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(o23835sub0), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) :|: TRUE
f14228_0_indexOf_Store(EOS(STATIC_14228), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(o23835sub0), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) -> f14261_0_indexOf_JMP(EOS(STATIC_14261), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(o23835sub0), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) :|: TRUE
f14261_0_indexOf_JMP(EOS(STATIC_14261), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(o23835sub0), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) -> f14274_0_indexOf_Load(EOS(STATIC_14274), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(o23835sub0), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) :|: TRUE
f14274_0_indexOf_Load(EOS(STATIC_14274), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(o23835sub0), o23088[LinkedList$Entry.previous]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833) -> f14108_0_indexOf_Load(EOS(STATIC_14108), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522), java.lang.Object(o23835sub-1723598522)))))))))), java.lang.Object(o23835sub0), o23088[LinkedList$Entry.previous]o23085, o23833[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23085, o23835[LinkedList$Entry.next]o23833, o23833[LinkedList$Entry.next]o23835) :|: o23833[LinkedList$Entry.next]o23835 = 1
Combined rules. Obtained 2 IRulesP rules:
f14138_0_indexOf_EQ(EOS(STATIC_14138), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24019sub-2006033730:0), java.lang.Object(o23831sub-2006033730:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24019sub-2006033730:0), java.lang.Object(o23831sub-2006033730:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086-2006266416:0, java.lang.Object(o23087sub-2006266416:0))), o23088[LinkedList$Entry.previous]o23085:0, o23087[LinkedList$Entry.next]o23085:0, o23089[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23089:0, o23089[LinkedList$Entry.next]o23085:0) -> f14138_0_indexOf_EQ(EOS(STATIC_14138), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(o23831sub0:0), java.lang.Object(o23831sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086-2006266416:1, java.lang.Object(o23087sub-2006266416:1))), o23088[LinkedList$Entry.previous]o23085:0, o23087[LinkedList$Entry.next]o23085:0, o23831[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23831:0, o23831[LinkedList$Entry.next]o23085:0) :|: o23087[LinkedList$Entry.next]o23089:0 > 0 && o23089[LinkedList$Entry.next]o23087:0 > 0 && o23089[LinkedList$Entry.next]o23085:0 > -1 && o23831[LinkedList$Entry.next]o23085:0 < o23089[LinkedList$Entry.next]o23085:0 && o23831[LinkedList$Entry.next]o23087:0 < o23089[LinkedList$Entry.next]o23087:0 && o23831[LinkedList$Entry.next]o23085:0 > 0 && o23087[LinkedList$Entry.next]o23831:0 > o23087[LinkedList$Entry.next]o23089:0
f14138_0_indexOf_EQ(EOS(STATIC_14138), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522:0), java.lang.Object(o23835sub-1723598522:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-2006032955:0), java.lang.Object(o23835sub-2006032955:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-2006032955:0), java.lang.Object(o23835sub-2006032955:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086-2006266416:0, java.lang.Object(o23087sub-2006266416:0))), o23088[LinkedList$Entry.previous]o23085:0, o23087[LinkedList$Entry.next]o23085:0, o23089[LinkedList$Entry.next]o23087:0, o23089[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23085:0) -> f14138_0_indexOf_EQ(EOS(STATIC_14138), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086282434433:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o24020sub-1723598522:0), java.lang.Object(o23835sub-1723598522:0)))))))))), java.lang.Object(o23835sub0:0), java.lang.Object(o23835sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o23086-2006266416:1, java.lang.Object(o23087sub-2006266416:1))), o23088[LinkedList$Entry.previous]o23085:0, o23833[LinkedList$Entry.next]o23085:0, o23835[LinkedList$Entry.next]o23833:0, 1, o23835[LinkedList$Entry.next]o23085:0) :|: o23087[LinkedList$Entry.next]o23085:0 > -1 && o23835[LinkedList$Entry.next]o23085:0 < o23087[LinkedList$Entry.next]o23085:0 && o23835[LinkedList$Entry.next]o23833:0 < o23089[LinkedList$Entry.next]o23087:0 && o23835[LinkedList$Entry.next]o23085:0 > 0 && o23089[LinkedList$Entry.next]o23087:0 > -1
Filtered constant ground arguments:
   f14138_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f14138_0_indexOf_EQ(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f14138_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f14138_0_indexOf_EQ(x1, x3, x4, x5, x6, x7, x8, x9)
Filtered unneeded arguments:
   f14138_0_indexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f14138_0_indexOf_EQ(x1, x2, x5, x6, x7, x8)
Finished conversion. Obtained 2 rules.P rules:
f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24019sub-2006033730:0), java.lang.Object(o23831sub-2006033730:0))), o23087[LinkedList$Entry.next]o23085:0, o23089[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23089:0, o23089[LinkedList$Entry.next]o23085:0, o23086282434433:0) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(o23831sub0:0), o23087[LinkedList$Entry.next]o23085:0, o23831[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23831:0, o23831[LinkedList$Entry.next]o23085:0, o23086282434433:0) :|: o23089[LinkedList$Entry.next]o23087:0 > 0 && o23087[LinkedList$Entry.next]o23089:0 > 0 && o23089[LinkedList$Entry.next]o23085:0 > -1 && o23831[LinkedList$Entry.next]o23085:0 < o23089[LinkedList$Entry.next]o23085:0 && o23831[LinkedList$Entry.next]o23087:0 < o23089[LinkedList$Entry.next]o23087:0 && o23087[LinkedList$Entry.next]o23831:0 > o23087[LinkedList$Entry.next]o23089:0 && o23831[LinkedList$Entry.next]o23085:0 > 0
f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24020sub-1723598522:0), java.lang.Object(o23835sub-1723598522:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24020sub-2006032955:0), java.lang.Object(o23835sub-2006032955:0))), o23087[LinkedList$Entry.next]o23085:0, o23089[LinkedList$Entry.next]o23087:0, o23089[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23085:0, o23086282434433:0) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24020sub-1723598522:0), java.lang.Object(o23835sub-1723598522:0)))))))))), java.lang.Object(o23835sub0:0), o23833[LinkedList$Entry.next]o23085:0, o23835[LinkedList$Entry.next]o23833:0, 1, o23835[LinkedList$Entry.next]o23085:0, o23086282434433:0) :|: o23835[LinkedList$Entry.next]o23085:0 < o23087[LinkedList$Entry.next]o23085:0 && o23087[LinkedList$Entry.next]o23085:0 > -1 && o23835[LinkedList$Entry.next]o23833:0 < o23089[LinkedList$Entry.next]o23087:0 && o23089[LinkedList$Entry.next]o23087:0 > -1 && o23835[LinkedList$Entry.next]o23085:0 > 0

----------------------------------------

(95)
Obligation:
Rules:
f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24019sub-2006033730:0), java.lang.Object(o23831sub-2006033730:0))), o23087[LinkedList$Entry.next]o23085:0, o23089[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23089:0, o23089[LinkedList$Entry.next]o23085:0, o23086282434433:0) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(o23831sub0:0), o23087[LinkedList$Entry.next]o23085:0, o23831[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23831:0, o23831[LinkedList$Entry.next]o23085:0, o23086282434433:0) :|: o23089[LinkedList$Entry.next]o23087:0 > 0 && o23087[LinkedList$Entry.next]o23089:0 > 0 && o23089[LinkedList$Entry.next]o23085:0 > -1 && o23831[LinkedList$Entry.next]o23085:0 < o23089[LinkedList$Entry.next]o23085:0 && o23831[LinkedList$Entry.next]o23087:0 < o23089[LinkedList$Entry.next]o23087:0 && o23087[LinkedList$Entry.next]o23831:0 > o23087[LinkedList$Entry.next]o23089:0 && o23831[LinkedList$Entry.next]o23085:0 > 0
f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x6, x5, x) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), x8, x9, 1, x10, x) :|: x10 < x5 && x5 > -1 && x9 < x6 && x6 > -1 && x10 > 0

----------------------------------------

(96) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(97)
Obligation:
Rules:
f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24019sub-2006033730:0), java.lang.Object(o23831sub-2006033730:0))), o23087[LinkedList$Entry.next]o23085:0, o23089[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23089:0, o23089[LinkedList$Entry.next]o23085:0, o23086282434433:0) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(o23831sub0:0), o23087[LinkedList$Entry.next]o23085:0, o23831[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23831:0, o23831[LinkedList$Entry.next]o23085:0, o23086282434433:0) :|: o23089[LinkedList$Entry.next]o23087:0 > 0 && o23087[LinkedList$Entry.next]o23089:0 > 0 && o23089[LinkedList$Entry.next]o23085:0 > -1 && o23831[LinkedList$Entry.next]o23085:0 < o23089[LinkedList$Entry.next]o23085:0 && o23831[LinkedList$Entry.next]o23087:0 < o23089[LinkedList$Entry.next]o23087:0 && o23087[LinkedList$Entry.next]o23831:0 > o23087[LinkedList$Entry.next]o23089:0 && o23831[LinkedList$Entry.next]o23085:0 > 0
f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x6, x5, x) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), x8, x9, 1, x10, x) :|: x10 < x5 && x5 > -1 && x9 < x6 && x6 > -1 && x10 > 0

----------------------------------------

(98) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24019sub-2006033730:0), java.lang.Object(o23831sub-2006033730:0))), o23087[LinkedList$Entry.next]o23085:0, o23089[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23089:0, o23089[LinkedList$Entry.next]o23085:0, o23086282434433:0) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(o23831sub0:0), o23087[LinkedList$Entry.next]o23085:0, o23831[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23831:0, o23831[LinkedList$Entry.next]o23085:0, o23086282434433:0) :|: o23089[LinkedList$Entry.next]o23087:0 > 0 && o23087[LinkedList$Entry.next]o23089:0 > 0 && o23089[LinkedList$Entry.next]o23085:0 > -1 && o23831[LinkedList$Entry.next]o23085:0 < o23089[LinkedList$Entry.next]o23085:0 && o23831[LinkedList$Entry.next]o23087:0 < o23089[LinkedList$Entry.next]o23087:0 && o23087[LinkedList$Entry.next]o23831:0 > o23087[LinkedList$Entry.next]o23089:0 && o23831[LinkedList$Entry.next]o23085:0 > 0
(2) f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x6, x5, x) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), x8, x9, 1, x10, x) :|: x10 < x5 && x5 > -1 && x9 < x6 && x6 > -1 && x10 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(99)
Obligation:

Termination digraph:
Nodes:
(1) f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24019sub-2006033730:0), java.lang.Object(o23831sub-2006033730:0))), o23087[LinkedList$Entry.next]o23085:0, o23089[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23089:0, o23089[LinkedList$Entry.next]o23085:0, o23086282434433:0) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0, java.lang.Object(o23087sub282434433:0)))))))), java.lang.Object(o23831sub0:0), o23087[LinkedList$Entry.next]o23085:0, o23831[LinkedList$Entry.next]o23087:0, o23087[LinkedList$Entry.next]o23831:0, o23831[LinkedList$Entry.next]o23085:0, o23086282434433:0) :|: o23089[LinkedList$Entry.next]o23087:0 > 0 && o23087[LinkedList$Entry.next]o23089:0 > 0 && o23089[LinkedList$Entry.next]o23085:0 > -1 && o23831[LinkedList$Entry.next]o23085:0 < o23089[LinkedList$Entry.next]o23085:0 && o23831[LinkedList$Entry.next]o23087:0 < o23089[LinkedList$Entry.next]o23087:0 && o23087[LinkedList$Entry.next]o23831:0 > o23087[LinkedList$Entry.next]o23089:0 && o23831[LinkedList$Entry.next]o23085:0 > 0
(2) f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x6, x5, x) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), x8, x9, 1, x10, x) :|: x10 < x5 && x5 > -1 && x9 < x6 && x6 > -1 && x10 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(100) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(101)
Obligation:
Rules:
f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0:0, java.lang.Object(o23087sub282434433:0:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o24019sub-2006033730:0:0), java.lang.Object(o23831sub-2006033730:0:0))), o23087[LinkedList$Entry.next]o23085:0:0, o23089[LinkedList$Entry.next]o23087:0:0, o23087[LinkedList$Entry.next]o23089:0:0, o23089[LinkedList$Entry.next]o23085:0:0, o23086282434433:0:0) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o23086282434433:0:0, java.lang.Object(o23087sub282434433:0:0)))))))), java.lang.Object(o23831sub0:0:0), o23087[LinkedList$Entry.next]o23085:0:0, o23831[LinkedList$Entry.next]o23087:0:0, o23087[LinkedList$Entry.next]o23831:0:0, o23831[LinkedList$Entry.next]o23085:0:0, o23086282434433:0:0) :|: o23087[LinkedList$Entry.next]o23831:0:0 > o23087[LinkedList$Entry.next]o23089:0:0 && o23831[LinkedList$Entry.next]o23085:0:0 > 0 && o23831[LinkedList$Entry.next]o23087:0:0 < o23089[LinkedList$Entry.next]o23087:0:0 && o23831[LinkedList$Entry.next]o23085:0:0 < o23089[LinkedList$Entry.next]o23085:0:0 && o23089[LinkedList$Entry.next]o23085:0:0 > -1 && o23087[LinkedList$Entry.next]o23089:0:0 > 0 && o23089[LinkedList$Entry.next]o23087:0:0 > 0
f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1:0), java.lang.Object(x2:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3:0), java.lang.Object(x4:0))), x5:0, x6:0, x6:0, x5:0, x:0) -> f14138_0_indexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1:0), java.lang.Object(x2:0)))))))))), java.lang.Object(x7:0), x8:0, x9:0, 1, x10:0, x:0) :|: x6:0 > -1 && x10:0 > 0 && x9:0 < x6:0 && x5:0 > -1 && x5:0 > x10:0

----------------------------------------

(102) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f14138_0_indexOf_EQ(VARIABLE, VARIABLE, VARIABLE, INTEGER, VARIABLE, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(103)
Obligation:
Rules:
f14138_0_indexOf_EQ(c, c1, o23087[LinkedList$Entry.next]o23085:0:0, o23089[LinkedList$Entry.next]o23087:0:0, o23087[LinkedList$Entry.next]o23089:0:0, o23089[LinkedList$Entry.next]o23085:0:0, o23086282434433:0:0) -> f14138_0_indexOf_EQ(c2, c3, o23087[LinkedList$Entry.next]o23085:0:0, o23831[LinkedList$Entry.next]o23087:0:0, o23087[LinkedList$Entry.next]o23831:0:0, o23831[LinkedList$Entry.next]o23085:0:0, o23086282434433:0:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (o23087[LinkedList$Entry.next]o23831:0:0 > o23087[LinkedList$Entry.next]o23089:0:0 && o23831[LinkedList$Entry.next]o23085:0:0 > 0 && o23831[LinkedList$Entry.next]o23087:0:0 < o23089[LinkedList$Entry.next]o23087:0:0 && o23831[LinkedList$Entry.next]o23085:0:0 < o23089[LinkedList$Entry.next]o23085:0:0 && o23089[LinkedList$Entry.next]o23085:0:0 > -1 && o23087[LinkedList$Entry.next]o23089:0:0 > 0 && o23089[LinkedList$Entry.next]o23087:0:0 > 0)
f14138_0_indexOf_EQ(c4, c5, x5:0, x6:0, x6:0, x5:0, x:0) -> f14138_0_indexOf_EQ(c6, c7, x8:0, x9:0, c8, x10:0, x:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x6:0 > -1 && x10:0 > 0 && x9:0 < x6:0 && x5:0 > -1 && x5:0 > x10:0)

----------------------------------------

(104) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f14138_0_indexOf_EQ ] = f14138_0_indexOf_EQ_6

The following rules are decreasing:
f14138_0_indexOf_EQ(c, c1, o23087[LinkedList$Entry.next]o23085:0:0, o23089[LinkedList$Entry.next]o23087:0:0, o23087[LinkedList$Entry.next]o23089:0:0, o23089[LinkedList$Entry.next]o23085:0:0, o23086282434433:0:0) -> f14138_0_indexOf_EQ(c2, c3, o23087[LinkedList$Entry.next]o23085:0:0, o23831[LinkedList$Entry.next]o23087:0:0, o23087[LinkedList$Entry.next]o23831:0:0, o23831[LinkedList$Entry.next]o23085:0:0, o23086282434433:0:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (o23087[LinkedList$Entry.next]o23831:0:0 > o23087[LinkedList$Entry.next]o23089:0:0 && o23831[LinkedList$Entry.next]o23085:0:0 > 0 && o23831[LinkedList$Entry.next]o23087:0:0 < o23089[LinkedList$Entry.next]o23087:0:0 && o23831[LinkedList$Entry.next]o23085:0:0 < o23089[LinkedList$Entry.next]o23085:0:0 && o23089[LinkedList$Entry.next]o23085:0:0 > -1 && o23087[LinkedList$Entry.next]o23089:0:0 > 0 && o23089[LinkedList$Entry.next]o23087:0:0 > 0)
f14138_0_indexOf_EQ(c4, c5, x5:0, x6:0, x6:0, x5:0, x:0) -> f14138_0_indexOf_EQ(c6, c7, x8:0, x9:0, c8, x10:0, x:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x6:0 > -1 && x10:0 > 0 && x9:0 < x6:0 && x5:0 > -1 && x5:0 > x10:0)

The following rules are bounded:
f14138_0_indexOf_EQ(c, c1, o23087[LinkedList$Entry.next]o23085:0:0, o23089[LinkedList$Entry.next]o23087:0:0, o23087[LinkedList$Entry.next]o23089:0:0, o23089[LinkedList$Entry.next]o23085:0:0, o23086282434433:0:0) -> f14138_0_indexOf_EQ(c2, c3, o23087[LinkedList$Entry.next]o23085:0:0, o23831[LinkedList$Entry.next]o23087:0:0, o23087[LinkedList$Entry.next]o23831:0:0, o23831[LinkedList$Entry.next]o23085:0:0, o23086282434433:0:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (o23087[LinkedList$Entry.next]o23831:0:0 > o23087[LinkedList$Entry.next]o23089:0:0 && o23831[LinkedList$Entry.next]o23085:0:0 > 0 && o23831[LinkedList$Entry.next]o23087:0:0 < o23089[LinkedList$Entry.next]o23087:0:0 && o23831[LinkedList$Entry.next]o23085:0:0 < o23089[LinkedList$Entry.next]o23085:0:0 && o23089[LinkedList$Entry.next]o23085:0:0 > -1 && o23087[LinkedList$Entry.next]o23089:0:0 > 0 && o23089[LinkedList$Entry.next]o23087:0:0 > 0)
f14138_0_indexOf_EQ(c4, c5, x5:0, x6:0, x6:0, x5:0, x:0) -> f14138_0_indexOf_EQ(c6, c7, x8:0, x9:0, c8, x10:0, x:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x6:0 > -1 && x10:0 > 0 && x9:0 < x6:0 && x5:0 > -1 && x5:0 > x10:0)


----------------------------------------

(105)
YES

----------------------------------------

(106)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateContains.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [next]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(107) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 40 IRulesP rules:
f13282_0_entry_GT(EOS(STATIC_13282), i4215, i4704, i4704, i4215, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14035[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035) -> f13294_0_entry_Load(EOS(STATIC_13294), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14035[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035) :|: i4704 <= i4215
f13294_0_entry_Load(EOS(STATIC_13294), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14035[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035) -> f13332_0_entry_FieldAccess(EOS(STATIC_13332), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14035[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035) :|: TRUE
f13332_0_entry_FieldAccess(EOS(STATIC_13332), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14035[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035) -> f13348_0_entry_FieldAccess(EOS(STATIC_13348), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14037) :|: o14037[LinkedList$Entry.next]o14037 > 0 && o14037[LinkedList$Entry.previous]o14037 > 0 && o14035[LinkedList$Entry.next]o14037 > 0 && o14037[LinkedList$Entry.next]o14035 > 0 && o14035[LinkedList$Entry.next]o14035 > 0
f13332_0_entry_FieldAccess(EOS(STATIC_13332), i4215, i4704, o15276[LinkedList$Entry.next]o15276, o15276[LinkedList$Entry.previous]o15276, o15276[LinkedList$Entry.next]o15276, o15276[LinkedList$Entry.next]o15276, o15276[LinkedList$Entry.next]o15276) -> f13349_0_entry_FieldAccess(EOS(STATIC_13349), i4215, i4704, o15276[LinkedList$Entry.next]o15276, o15276[LinkedList$Entry.previous]o15276) :|: TRUE
f13348_0_entry_FieldAccess(EOS(STATIC_13348), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14037[LinkedList$Entry.next]o15413, o15413[LinkedList$Entry.next]o15413, o15413[LinkedList$Entry.next]o14037) -> f13369_0_entry_FieldAccess(EOS(STATIC_13369), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14037[LinkedList$Entry.next]o15413, o15415[LinkedList$Entry.next]o14037, o15415[LinkedList$Entry.next]o15413) :|: o15415[LinkedList$Entry.next]o15413 < o15413[LinkedList$Entry.next]o15413 && o15413[LinkedList$Entry.next]o15413 >= 0 && o15415[LinkedList$Entry.next]o14037 < o15413[LinkedList$Entry.next]o14037 && o15413[LinkedList$Entry.next]o14037 >= 0
f13369_0_entry_FieldAccess(EOS(STATIC_13369), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14037[LinkedList$Entry.next]o15413, o15415[LinkedList$Entry.next]o14037, o15415[LinkedList$Entry.next]o15413) -> f13393_0_entry_Store(EOS(STATIC_13393), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o15415[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o15415, o15415[LinkedList$Entry.next]o15415) :|: o14037[LinkedList$Entry.next]o15415 > o14037[LinkedList$Entry.next]o15413 && o14037[LinkedList$Entry.next]o15413 >= 0 && o15415[LinkedList$Entry.next]o15415 > o15415[LinkedList$Entry.next]o15413 && o15415[LinkedList$Entry.next]o15413 >= 0
f13393_0_entry_Store(EOS(STATIC_13393), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o15415[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o15415, o15415[LinkedList$Entry.next]o15415) -> f13415_0_entry_Inc(EOS(STATIC_13415), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o15415[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o15415, o15415[LinkedList$Entry.next]o15415) :|: TRUE
f13415_0_entry_Inc(EOS(STATIC_13415), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o15415[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o15415, o15415[LinkedList$Entry.next]o15415) -> f13439_0_entry_JMP(EOS(STATIC_13439), i4215, i4704 + 1, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o15415[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o15415, o15415[LinkedList$Entry.next]o15415) :|: TRUE
f13439_0_entry_JMP(EOS(STATIC_13439), i4215, i5204, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o15415[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o15415, o15415[LinkedList$Entry.next]o15415) -> f13462_0_entry_Load(EOS(STATIC_13462), i4215, i5204, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o15415[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o15415, o15415[LinkedList$Entry.next]o15415) :|: TRUE
f13462_0_entry_Load(EOS(STATIC_13462), i4215, i5204, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o15415[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o15415, o15415[LinkedList$Entry.next]o15415) -> f13236_0_entry_Load(EOS(STATIC_13236), i4215, i5204, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o15415[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o15415, o15415[LinkedList$Entry.next]o15415) :|: TRUE
f13236_0_entry_Load(EOS(STATIC_13236), i4215, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14035[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035) -> f13251_0_entry_Load(EOS(STATIC_13251), i4215, i4704, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14035[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035) :|: TRUE
f13251_0_entry_Load(EOS(STATIC_13251), i4215, i4704, i4704, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14035[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035) -> f13266_0_entry_GT(EOS(STATIC_13266), i4215, i4704, i4704, i4215, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14035[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035) :|: TRUE
f13266_0_entry_GT(EOS(STATIC_13266), i4215, i4704, i4704, i4215, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14035[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035) -> f13282_0_entry_GT(EOS(STATIC_13282), i4215, i4704, i4704, i4215, o14037[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.previous]o14037, o14035[LinkedList$Entry.next]o14037, o14037[LinkedList$Entry.next]o14035, o14035[LinkedList$Entry.next]o14035) :|: i4704 <= i4215
f13349_0_entry_FieldAccess(EOS(STATIC_13349), i4215, i4704, o15417[LinkedList$Entry.next]o15417, o15417[LinkedList$Entry.previous]o15417) -> f13370_0_entry_FieldAccess(EOS(STATIC_13370), i4215, i4704, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) :|: o15419[LinkedList$Entry.next]o15417 < o15417[LinkedList$Entry.next]o15417 && o15417[LinkedList$Entry.next]o15417 >= 0 && o15420[LinkedList$Entry.previous]o15417 < o15417[LinkedList$Entry.previous]o15417 && o15417[LinkedList$Entry.previous]o15417 >= 0
f13370_0_entry_FieldAccess(EOS(STATIC_13370), i4215, i4704, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) -> f13394_0_entry_FieldAccess(EOS(STATIC_13394), i4215, i4704, o15420[LinkedList$Entry.previous]o15417, o15419[LinkedList$Entry.next]o15417) :|: o15419[LinkedList$Entry.next]o15417 > 0
f13370_0_entry_FieldAccess(EOS(STATIC_13370), i4215, i4704, o15419[LinkedList$Entry.next]o15594, o15420[LinkedList$Entry.previous]o15594) -> f13395_0_entry_FieldAccess(EOS(STATIC_13395), i4215, i4704, o15420[LinkedList$Entry.previous]o15594) :|: TRUE
f13394_0_entry_FieldAccess(EOS(STATIC_13394), i4215, i4704, o15420[LinkedList$Entry.previous]o15417, o15419[LinkedList$Entry.next]o15417) -> f13416_0_entry_FieldAccess(EOS(STATIC_13416), i4215, i4704, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) :|: o15420[LinkedList$Entry.previous]o15417 > 0
f13394_0_entry_FieldAccess(EOS(STATIC_13394), i4215, i4704, o15420[LinkedList$Entry.previous]o15780, o15419[LinkedList$Entry.next]o15780) -> f13417_0_entry_FieldAccess(EOS(STATIC_13417), i4215, i4704, o15419[LinkedList$Entry.next]o15780) :|: TRUE
f13416_0_entry_FieldAccess(EOS(STATIC_13416), i4215, i4704, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) -> f13440_0_entry_Store(EOS(STATIC_13440), i4215, i4704, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) :|: TRUE
f13440_0_entry_Store(EOS(STATIC_13440), i4215, i4704, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) -> f13463_0_entry_Inc(EOS(STATIC_13463), i4215, i4704, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) :|: TRUE
f13463_0_entry_Inc(EOS(STATIC_13463), i4215, i4704, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) -> f13483_0_entry_JMP(EOS(STATIC_13483), i4215, i4704 + 1, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) :|: TRUE
f13483_0_entry_JMP(EOS(STATIC_13483), i4215, i5318, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) -> f13500_0_entry_Load(EOS(STATIC_13500), i4215, i5318, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) :|: TRUE
f13500_0_entry_Load(EOS(STATIC_13500), i4215, i5318, o15419[LinkedList$Entry.next]o15417, o15420[LinkedList$Entry.previous]o15417) -> f13236_0_entry_Load(EOS(STATIC_13236), i4215, i5318, o15417[LinkedList$Entry.next]o15417, o15417[LinkedList$Entry.previous]o15417, o15419[LinkedList$Entry.next]o15417, o15417[LinkedList$Entry.next]o15419, o15419[LinkedList$Entry.next]o15419) :|: o15417[LinkedList$Entry.next]o15419 = 1
f13417_0_entry_FieldAccess(EOS(STATIC_13417), i4215, i4704, o15419[LinkedList$Entry.next]o15780) -> f13441_0_entry_Store(EOS(STATIC_13441), i4215, i4704, o15419[LinkedList$Entry.next]o15780) :|: TRUE
f13441_0_entry_Store(EOS(STATIC_13441), i4215, i4704, o15419[LinkedList$Entry.next]o15780) -> f13464_0_entry_Inc(EOS(STATIC_13464), i4215, i4704, o15419[LinkedList$Entry.next]o15780) :|: TRUE
f13464_0_entry_Inc(EOS(STATIC_13464), i4215, i4704, o15419[LinkedList$Entry.next]o15780) -> f13484_0_entry_JMP(EOS(STATIC_13484), i4215, i4704 + 1, o15419[LinkedList$Entry.next]o15780) :|: TRUE
f13484_0_entry_JMP(EOS(STATIC_13484), i4215, i5320, o15419[LinkedList$Entry.next]o15780) -> f13501_0_entry_Load(EOS(STATIC_13501), i4215, i5320, o15419[LinkedList$Entry.next]o15780) :|: TRUE
f13501_0_entry_Load(EOS(STATIC_13501), i4215, i5320, o15419[LinkedList$Entry.next]o15780) -> f13236_0_entry_Load(EOS(STATIC_13236), i4215, i5320, o15780[LinkedList$Entry.next]o15780, o15780[LinkedList$Entry.previous]o15780, o15419[LinkedList$Entry.next]o15780, o15780[LinkedList$Entry.next]o15419, o15419[LinkedList$Entry.next]o15419) :|: o15780[LinkedList$Entry.previous]o15780 = 1 && o15780[LinkedList$Entry.next]o15419 = 1
f13395_0_entry_FieldAccess(EOS(STATIC_13395), i4215, i4704, o15420[LinkedList$Entry.previous]o15594) -> f13418_0_entry_FieldAccess(EOS(STATIC_13418), i4215, i4704, o15420[LinkedList$Entry.previous]o15594) :|: o15420[LinkedList$Entry.previous]o15594 > 0
f13395_0_entry_FieldAccess(EOS(STATIC_13395), i4215, i4704, o15420[LinkedList$Entry.previous]o15783) -> f13419_0_entry_FieldAccess(EOS(STATIC_13419), i4215, i4704) :|: TRUE
f13418_0_entry_FieldAccess(EOS(STATIC_13418), i4215, i4704, o15420[LinkedList$Entry.previous]o15594) -> f13442_0_entry_Store(EOS(STATIC_13442), i4215, i4704, o15420[LinkedList$Entry.previous]o15594) :|: TRUE
f13442_0_entry_Store(EOS(STATIC_13442), i4215, i4704, o15420[LinkedList$Entry.previous]o15594) -> f13465_0_entry_Inc(EOS(STATIC_13465), i4215, i4704, o15420[LinkedList$Entry.previous]o15594) :|: TRUE
f13465_0_entry_Inc(EOS(STATIC_13465), i4215, i4704, o15420[LinkedList$Entry.previous]o15594) -> f13485_0_entry_JMP(EOS(STATIC_13485), i4215, i4704 + 1, o15420[LinkedList$Entry.previous]o15594) :|: TRUE
f13485_0_entry_JMP(EOS(STATIC_13485), i4215, i5323, o15420[LinkedList$Entry.previous]o15594) -> f13502_0_entry_Load(EOS(STATIC_13502), i4215, i5323, o15420[LinkedList$Entry.previous]o15594) :|: TRUE
f13502_0_entry_Load(EOS(STATIC_13502), i4215, i5323, o15420[LinkedList$Entry.previous]o15594) -> f13236_0_entry_Load(EOS(STATIC_13236), i4215, i5323, o15594[LinkedList$Entry.next]o15594, o15594[LinkedList$Entry.previous]o15594, o15594[LinkedList$Entry.next]o15594, o15594[LinkedList$Entry.next]o15594, o15594[LinkedList$Entry.next]o15594) :|: o15594[LinkedList$Entry.next]o15594 = 1 && o15594[LinkedList$Entry.next]o15594 = 1 && o15594[LinkedList$Entry.next]o15594 = 1 && o15594[LinkedList$Entry.next]o15594 = 1
f13419_0_entry_FieldAccess(EOS(STATIC_13419), i4215, i4704) -> f13443_0_entry_Store(EOS(STATIC_13443), i4215, i4704) :|: TRUE
f13443_0_entry_Store(EOS(STATIC_13443), i4215, i4704) -> f13466_0_entry_Inc(EOS(STATIC_13466), i4215, i4704) :|: TRUE
f13466_0_entry_Inc(EOS(STATIC_13466), i4215, i4704) -> f13486_0_entry_JMP(EOS(STATIC_13486), i4215, i4704 + 1) :|: TRUE
f13486_0_entry_JMP(EOS(STATIC_13486), i4215, i5324) -> f13503_0_entry_Load(EOS(STATIC_13503), i4215, i5324) :|: TRUE
f13503_0_entry_Load(EOS(STATIC_13503), i4215, i5324) -> f13236_0_entry_Load(EOS(STATIC_13236), i4215, i5324, o15783[LinkedList$Entry.next]o15783, o15783[LinkedList$Entry.previous]o15783, o15783[LinkedList$Entry.next]o15783, o15783[LinkedList$Entry.next]o15783, o15783[LinkedList$Entry.next]o15783) :|: o15783[LinkedList$Entry.next]o15783 = 1 && o15783[LinkedList$Entry.previous]o15783 = 1 && o15783[LinkedList$Entry.next]o15783 = 1 && o15783[LinkedList$Entry.next]o15783 = 1 && o15783[LinkedList$Entry.next]o15783 = 1
Combined rules. Obtained 5 IRulesP rules:
f13282_0_entry_GT(EOS(STATIC_13282), i4215:0, i4704:0, i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(EOS(STATIC_13282), i4215:0, i4704:0 + 1, i4704:0 + 1, i4215:0, o15780[LinkedList$Entry.next]o15780:0, 1, o15419[LinkedList$Entry.next]o15417:0, 1, o15419[LinkedList$Entry.next]o15419:0) :|: i4704:0 + 1 <= i4215:0 && o14037[LinkedList$Entry.next]o14037:0 > -1 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0 && o15419[LinkedList$Entry.next]o15417:0 > 0 && o14037[LinkedList$Entry.previous]o14037:0 > -1
f13282_0_entry_GT(EOS(STATIC_13282), i4215:0, i4704:0, i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(EOS(STATIC_13282), i4215:0, i4704:0 + 1, i4704:0 + 1, i4215:0, o15417[LinkedList$Entry.next]o15417:0, o15417[LinkedList$Entry.previous]o15417:0, o15419[LinkedList$Entry.next]o15417:0, 1, o15419[LinkedList$Entry.next]o15419:0) :|: i4704:0 + 1 <= i4215:0 && o14037[LinkedList$Entry.next]o14037:0 > -1 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0 && o14037[LinkedList$Entry.previous]o14037:0 > -1 && o15420[LinkedList$Entry.previous]o15417:0 > 0 && o15419[LinkedList$Entry.next]o15417:0 > 0
f13282_0_entry_GT(EOS(STATIC_13282), i4215:0, i4704:0, i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14035[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14035:0, o14035[LinkedList$Entry.next]o14035:0) -> f13282_0_entry_GT(EOS(STATIC_13282), i4215:0, i4704:0 + 1, i4704:0 + 1, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o15415[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o15415:0, o15415[LinkedList$Entry.next]o15415:0) :|: o14035[LinkedList$Entry.next]o14037:0 > 0 && o14037[LinkedList$Entry.next]o14035:0 > 0 && o14035[LinkedList$Entry.next]o14035:0 > 0 && i4704:0 + 1 <= i4215:0 && o14037[LinkedList$Entry.previous]o14037:0 > 0 && o14037[LinkedList$Entry.next]o14037:0 > 0 && o15415[LinkedList$Entry.next]o15413:0 < o14035[LinkedList$Entry.next]o14035:0 && o14037[LinkedList$Entry.next]o15415:0 > o14037[LinkedList$Entry.next]o14035:0 && o15415[LinkedList$Entry.next]o14037:0 < o14035[LinkedList$Entry.next]o14037:0 && o15415[LinkedList$Entry.next]o15413:0 > -1 && o15415[LinkedList$Entry.next]o15415:0 > o15415[LinkedList$Entry.next]o15413:0
f13282_0_entry_GT(EOS(STATIC_13282), i4215:0, i4704:0, i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(EOS(STATIC_13282), i4215:0, i4704:0 + 1, i4704:0 + 1, i4215:0, 1, o15594[LinkedList$Entry.previous]o15594:0, 1, 1, 1) :|: i4704:0 + 1 <= i4215:0 && o14037[LinkedList$Entry.next]o14037:0 > -1 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 > 0 && o14037[LinkedList$Entry.previous]o14037:0 > -1
f13282_0_entry_GT(EOS(STATIC_13282), i4215:0, i4704:0, i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(EOS(STATIC_13282), i4215:0, i4704:0 + 1, i4704:0 + 1, i4215:0, 1, 1, 1, 1, 1) :|: i4704:0 + 1 <= i4215:0 && o14037[LinkedList$Entry.next]o14037:0 > -1 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o14037[LinkedList$Entry.previous]o14037:0 > -1 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0
Filtered constant ground arguments:
   f13282_0_entry_GT(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13282_0_entry_GT(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f13282_0_entry_GT(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13282_0_entry_GT(x3, x4, x5, x6, x7, x8, x9)
Finished conversion. Obtained 5 rules.P rules:
f13282_0_entry_GT(i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(i4704:0 + 1, i4215:0, o15780[LinkedList$Entry.next]o15780:0, 1, o15419[LinkedList$Entry.next]o15417:0, 1, o15419[LinkedList$Entry.next]o15419:0) :|: o14037[LinkedList$Entry.next]o14037:0 > -1 && i4704:0 + 1 <= i4215:0 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0 && o14037[LinkedList$Entry.previous]o14037:0 > -1 && o15419[LinkedList$Entry.next]o15417:0 > 0
f13282_0_entry_GT(i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(i4704:0 + 1, i4215:0, o15417[LinkedList$Entry.next]o15417:0, o15417[LinkedList$Entry.previous]o15417:0, o15419[LinkedList$Entry.next]o15417:0, 1, o15419[LinkedList$Entry.next]o15419:0) :|: o14037[LinkedList$Entry.next]o14037:0 > -1 && i4704:0 + 1 <= i4215:0 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0 && o14037[LinkedList$Entry.previous]o14037:0 > -1 && o15419[LinkedList$Entry.next]o15417:0 > 0 && o15420[LinkedList$Entry.previous]o15417:0 > 0
f13282_0_entry_GT(i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14035[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14035:0, o14035[LinkedList$Entry.next]o14035:0) -> f13282_0_entry_GT(i4704:0 + 1, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o15415[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o15415:0, o15415[LinkedList$Entry.next]o15415:0) :|: o14037[LinkedList$Entry.next]o14035:0 > 0 && o14035[LinkedList$Entry.next]o14037:0 > 0 && o14035[LinkedList$Entry.next]o14035:0 > 0 && i4704:0 + 1 <= i4215:0 && o14037[LinkedList$Entry.previous]o14037:0 > 0 && o14037[LinkedList$Entry.next]o14037:0 > 0 && o15415[LinkedList$Entry.next]o15413:0 < o14035[LinkedList$Entry.next]o14035:0 && o14037[LinkedList$Entry.next]o15415:0 > o14037[LinkedList$Entry.next]o14035:0 && o15415[LinkedList$Entry.next]o14037:0 < o14035[LinkedList$Entry.next]o14037:0 && o15415[LinkedList$Entry.next]o15415:0 > o15415[LinkedList$Entry.next]o15413:0 && o15415[LinkedList$Entry.next]o15413:0 > -1
f13282_0_entry_GT(i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(i4704:0 + 1, i4215:0, 1, o15594[LinkedList$Entry.previous]o15594:0, 1, 1, 1) :|: o14037[LinkedList$Entry.next]o14037:0 > -1 && i4704:0 + 1 <= i4215:0 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0 && o14037[LinkedList$Entry.previous]o14037:0 > -1 && o15420[LinkedList$Entry.previous]o15417:0 > 0
f13282_0_entry_GT(i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(i4704:0 + 1, i4215:0, 1, 1, 1, 1, 1) :|: o14037[LinkedList$Entry.next]o14037:0 > -1 && i4704:0 + 1 <= i4215:0 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0 && o14037[LinkedList$Entry.previous]o14037:0 > -1

----------------------------------------

(108)
Obligation:
Rules:
f13282_0_entry_GT(i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(i4704:0 + 1, i4215:0, o15780[LinkedList$Entry.next]o15780:0, 1, o15419[LinkedList$Entry.next]o15417:0, 1, o15419[LinkedList$Entry.next]o15419:0) :|: o14037[LinkedList$Entry.next]o14037:0 > -1 && i4704:0 + 1 <= i4215:0 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0 && o14037[LinkedList$Entry.previous]o14037:0 > -1 && o15419[LinkedList$Entry.next]o15417:0 > 0
f13282_0_entry_GT(x, x1, x2, x3, x2, x2, x2) -> f13282_0_entry_GT(x + 1, x1, x4, x5, x6, 1, x7) :|: x2 > -1 && x + 1 <= x1 && x6 < x2 && x8 < x3 && x3 > -1 && x6 > 0 && x8 > 0
f13282_0_entry_GT(x9, x10, x11, x12, x13, x14, x15) -> f13282_0_entry_GT(x9 + 1, x10, x11, x12, x16, x17, x18) :|: x14 > 0 && x13 > 0 && x15 > 0 && x9 + 1 <= x10 && x12 > 0 && x11 > 0 && x19 < x15 && x17 > x14 && x16 < x13 && x18 > x19 && x19 > -1
f13282_0_entry_GT(x20, x21, x22, x23, x22, x22, x22) -> f13282_0_entry_GT(x20 + 1, x21, 1, x24, 1, 1, 1) :|: x22 > -1 && x20 + 1 <= x21 && x25 < x22 && x26 < x23 && x23 > -1 && x26 > 0
f13282_0_entry_GT(x27, x28, x29, x30, x29, x29, x29) -> f13282_0_entry_GT(x27 + 1, x28, 1, 1, 1, 1, 1) :|: x29 > -1 && x27 + 1 <= x28 && x31 < x29 && x32 < x30 && x30 > -1

----------------------------------------

(109) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(110)
Obligation:
Rules:
f13282_0_entry_GT(i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(arith, i4215:0, o15780[LinkedList$Entry.next]o15780:0, 1, o15419[LinkedList$Entry.next]o15417:0, 1, o15419[LinkedList$Entry.next]o15419:0) :|: o14037[LinkedList$Entry.next]o14037:0 > -1 && i4704:0 + 1 <= i4215:0 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0 && o14037[LinkedList$Entry.previous]o14037:0 > -1 && o15419[LinkedList$Entry.next]o15417:0 > 0 && arith = i4704:0 + 1
f13282_0_entry_GT(x33, x34, x35, x36, x35, x35, x35) -> f13282_0_entry_GT(x37, x34, x38, x39, x40, 1, x41) :|: x35 > -1 && x33 + 1 <= x34 && x40 < x35 && x42 < x36 && x36 > -1 && x40 > 0 && x42 > 0 && x37 = x33 + 1
f13282_0_entry_GT(x43, x44, x45, x46, x47, x48, x49) -> f13282_0_entry_GT(x50, x44, x45, x46, x51, x52, x53) :|: x48 > 0 && x47 > 0 && x49 > 0 && x43 + 1 <= x44 && x46 > 0 && x45 > 0 && x54 < x49 && x52 > x48 && x51 < x47 && x53 > x54 && x54 > -1 && x50 = x43 + 1
f13282_0_entry_GT(x55, x56, x57, x58, x57, x57, x57) -> f13282_0_entry_GT(x59, x56, 1, x60, 1, 1, 1) :|: x57 > -1 && x55 + 1 <= x56 && x61 < x57 && x62 < x58 && x58 > -1 && x62 > 0 && x59 = x55 + 1
f13282_0_entry_GT(x63, x64, x65, x66, x65, x65, x65) -> f13282_0_entry_GT(x67, x64, 1, 1, 1, 1, 1) :|: x65 > -1 && x63 + 1 <= x64 && x68 < x65 && x69 < x66 && x66 > -1 && x67 = x63 + 1

----------------------------------------

(111) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13282_0_entry_GT(i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(arith, i4215:0, o15780[LinkedList$Entry.next]o15780:0, 1, o15419[LinkedList$Entry.next]o15417:0, 1, o15419[LinkedList$Entry.next]o15419:0) :|: o14037[LinkedList$Entry.next]o14037:0 > -1 && i4704:0 + 1 <= i4215:0 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0 && o14037[LinkedList$Entry.previous]o14037:0 > -1 && o15419[LinkedList$Entry.next]o15417:0 > 0 && arith = i4704:0 + 1
(2) f13282_0_entry_GT(x33, x34, x35, x36, x35, x35, x35) -> f13282_0_entry_GT(x37, x34, x38, x39, x40, 1, x41) :|: x35 > -1 && x33 + 1 <= x34 && x40 < x35 && x42 < x36 && x36 > -1 && x40 > 0 && x42 > 0 && x37 = x33 + 1
(3) f13282_0_entry_GT(x43, x44, x45, x46, x47, x48, x49) -> f13282_0_entry_GT(x50, x44, x45, x46, x51, x52, x53) :|: x48 > 0 && x47 > 0 && x49 > 0 && x43 + 1 <= x44 && x46 > 0 && x45 > 0 && x54 < x49 && x52 > x48 && x51 < x47 && x53 > x54 && x54 > -1 && x50 = x43 + 1
(4) f13282_0_entry_GT(x55, x56, x57, x58, x57, x57, x57) -> f13282_0_entry_GT(x59, x56, 1, x60, 1, 1, 1) :|: x57 > -1 && x55 + 1 <= x56 && x61 < x57 && x62 < x58 && x58 > -1 && x62 > 0 && x59 = x55 + 1
(5) f13282_0_entry_GT(x63, x64, x65, x66, x65, x65, x65) -> f13282_0_entry_GT(x67, x64, 1, 1, 1, 1, 1) :|: x65 > -1 && x63 + 1 <= x64 && x68 < x65 && x69 < x66 && x66 > -1 && x67 = x63 + 1

Arcs:
(1) -> (3), (5)
(2) -> (3), (4), (5)
(3) -> (1), (2), (3), (4), (5)
(4) -> (3), (4), (5)
(5) -> (3), (5)

This digraph is fully evaluated!
----------------------------------------

(112)
Obligation:

Termination digraph:
Nodes:
(1) f13282_0_entry_GT(i4704:0, i4215:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.previous]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0, o14037[LinkedList$Entry.next]o14037:0) -> f13282_0_entry_GT(arith, i4215:0, o15780[LinkedList$Entry.next]o15780:0, 1, o15419[LinkedList$Entry.next]o15417:0, 1, o15419[LinkedList$Entry.next]o15419:0) :|: o14037[LinkedList$Entry.next]o14037:0 > -1 && i4704:0 + 1 <= i4215:0 && o15419[LinkedList$Entry.next]o15417:0 < o14037[LinkedList$Entry.next]o14037:0 && o15420[LinkedList$Entry.previous]o15417:0 < o14037[LinkedList$Entry.previous]o14037:0 && o14037[LinkedList$Entry.previous]o14037:0 > -1 && o15419[LinkedList$Entry.next]o15417:0 > 0 && arith = i4704:0 + 1
(2) f13282_0_entry_GT(x43, x44, x45, x46, x47, x48, x49) -> f13282_0_entry_GT(x50, x44, x45, x46, x51, x52, x53) :|: x48 > 0 && x47 > 0 && x49 > 0 && x43 + 1 <= x44 && x46 > 0 && x45 > 0 && x54 < x49 && x52 > x48 && x51 < x47 && x53 > x54 && x54 > -1 && x50 = x43 + 1
(3) f13282_0_entry_GT(x63, x64, x65, x66, x65, x65, x65) -> f13282_0_entry_GT(x67, x64, 1, 1, 1, 1, 1) :|: x65 > -1 && x63 + 1 <= x64 && x68 < x65 && x69 < x66 && x66 > -1 && x67 = x63 + 1
(4) f13282_0_entry_GT(x55, x56, x57, x58, x57, x57, x57) -> f13282_0_entry_GT(x59, x56, 1, x60, 1, 1, 1) :|: x57 > -1 && x55 + 1 <= x56 && x61 < x57 && x62 < x58 && x58 > -1 && x62 > 0 && x59 = x55 + 1
(5) f13282_0_entry_GT(x33, x34, x35, x36, x35, x35, x35) -> f13282_0_entry_GT(x37, x34, x38, x39, x40, 1, x41) :|: x35 > -1 && x33 + 1 <= x34 && x40 < x35 && x42 < x36 && x36 > -1 && x40 > 0 && x42 > 0 && x37 = x33 + 1

Arcs:
(1) -> (2), (3)
(2) -> (1), (2), (3), (4), (5)
(3) -> (2), (3)
(4) -> (2), (3), (4)
(5) -> (2), (3), (4)

This digraph is fully evaluated!

----------------------------------------

(113) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(114)
Obligation:
Rules:
f13282_0_entry_GT(x63:0, x64:0, x65:0, x66:0, x65:0, x65:0, x65:0) -> f13282_0_entry_GT(x63:0 + 1, x64:0, 1, 1, 1, 1, 1) :|: x69:0 < x66:0 && x66:0 > -1 && x68:0 < x65:0 && x64:0 >= x63:0 + 1 && x65:0 > -1
f13282_0_entry_GT(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f13282_0_entry_GT(x55:0 + 1, x56:0, 1, x60:0, 1, 1, 1) :|: x58:0 > -1 && x62:0 > 0 && x62:0 < x58:0 && x61:0 < x57:0 && x56:0 >= x55:0 + 1 && x57:0 > -1
f13282_0_entry_GT(x43:0, x44:0, x45:0, x46:0, x47:0, x48:0, x49:0) -> f13282_0_entry_GT(x43:0 + 1, x44:0, x45:0, x46:0, x51:0, x52:0, x53:0) :|: x54:0 < x53:0 && x54:0 > -1 && x51:0 < x47:0 && x52:0 > x48:0 && x54:0 < x49:0 && x45:0 > 0 && x46:0 > 0 && x44:0 >= x43:0 + 1 && x49:0 > 0 && x47:0 > 0 && x48:0 > 0
f13282_0_entry_GT(x33:0, x34:0, x35:0, x36:0, x35:0, x35:0, x35:0) -> f13282_0_entry_GT(x33:0 + 1, x34:0, x38:0, x39:0, x40:0, 1, x41:0) :|: x40:0 > 0 && x42:0 > 0 && x36:0 > -1 && x42:0 < x36:0 && x40:0 < x35:0 && x34:0 >= x33:0 + 1 && x35:0 > -1
f13282_0_entry_GT(i4704:0:0, i4215:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.previous]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0) -> f13282_0_entry_GT(i4704:0:0 + 1, i4215:0:0, o15780[LinkedList$Entry.next]o15780:0:0, 1, o15419[LinkedList$Entry.next]o15417:0:0, 1, o15419[LinkedList$Entry.next]o15419:0:0) :|: o14037[LinkedList$Entry.previous]o14037:0:0 > -1 && o15419[LinkedList$Entry.next]o15417:0:0 > 0 && o15420[LinkedList$Entry.previous]o15417:0:0 < o14037[LinkedList$Entry.previous]o14037:0:0 && o15419[LinkedList$Entry.next]o15417:0:0 < o14037[LinkedList$Entry.next]o14037:0:0 && i4704:0:0 + 1 <= i4215:0:0 && o14037[LinkedList$Entry.next]o14037:0:0 > -1

----------------------------------------

(115) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13282_0_entry_GT(INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(116)
Obligation:
Rules:
f13282_0_entry_GT(x63:0, x64:0, x65:0, x66:0, x65:0, x65:0, x65:0) -> f13282_0_entry_GT(c, x64:0, c1, c2, c3, c4, c5) :|: c5 = 1 && (c4 = 1 && (c3 = 1 && (c2 = 1 && (c1 = 1 && c = x63:0 + 1)))) && (x69:0 < x66:0 && x66:0 > -1 && x68:0 < x65:0 && x64:0 >= x63:0 + 1 && x65:0 > -1)
f13282_0_entry_GT(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f13282_0_entry_GT(c6, x56:0, c7, x60:0, c8, c9, c10) :|: c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x55:0 + 1))) && (x58:0 > -1 && x62:0 > 0 && x62:0 < x58:0 && x61:0 < x57:0 && x56:0 >= x55:0 + 1 && x57:0 > -1)
f13282_0_entry_GT(x43:0, x44:0, x45:0, x46:0, x47:0, x48:0, x49:0) -> f13282_0_entry_GT(c11, x44:0, x45:0, x46:0, x51:0, x52:0, x53:0) :|: c11 = x43:0 + 1 && (x54:0 < x53:0 && x54:0 > -1 && x51:0 < x47:0 && x52:0 > x48:0 && x54:0 < x49:0 && x45:0 > 0 && x46:0 > 0 && x44:0 >= x43:0 + 1 && x49:0 > 0 && x47:0 > 0 && x48:0 > 0)
f13282_0_entry_GT(x33:0, x34:0, x35:0, x36:0, x35:0, x35:0, x35:0) -> f13282_0_entry_GT(c12, x34:0, x38:0, x39:0, x40:0, c13, x41:0) :|: c13 = 1 && c12 = x33:0 + 1 && (x40:0 > 0 && x42:0 > 0 && x36:0 > -1 && x42:0 < x36:0 && x40:0 < x35:0 && x34:0 >= x33:0 + 1 && x35:0 > -1)
f13282_0_entry_GT(i4704:0:0, i4215:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.previous]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0) -> f13282_0_entry_GT(c14, i4215:0:0, o15780[LinkedList$Entry.next]o15780:0:0, c15, o15419[LinkedList$Entry.next]o15417:0:0, c16, o15419[LinkedList$Entry.next]o15419:0:0) :|: c16 = 1 && (c15 = 1 && c14 = i4704:0:0 + 1) && (o14037[LinkedList$Entry.previous]o14037:0:0 > -1 && o15419[LinkedList$Entry.next]o15417:0:0 > 0 && o15420[LinkedList$Entry.previous]o15417:0:0 < o14037[LinkedList$Entry.previous]o14037:0:0 && o15419[LinkedList$Entry.next]o15417:0:0 < o14037[LinkedList$Entry.next]o14037:0:0 && i4704:0:0 + 1 <= i4215:0:0 && o14037[LinkedList$Entry.next]o14037:0:0 > -1)

----------------------------------------

(117) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f13282_0_entry_GT ] = f13282_0_entry_GT_2 + -1*f13282_0_entry_GT_1

The following rules are decreasing:
f13282_0_entry_GT(x63:0, x64:0, x65:0, x66:0, x65:0, x65:0, x65:0) -> f13282_0_entry_GT(c, x64:0, c1, c2, c3, c4, c5) :|: c5 = 1 && (c4 = 1 && (c3 = 1 && (c2 = 1 && (c1 = 1 && c = x63:0 + 1)))) && (x69:0 < x66:0 && x66:0 > -1 && x68:0 < x65:0 && x64:0 >= x63:0 + 1 && x65:0 > -1)
f13282_0_entry_GT(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f13282_0_entry_GT(c6, x56:0, c7, x60:0, c8, c9, c10) :|: c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x55:0 + 1))) && (x58:0 > -1 && x62:0 > 0 && x62:0 < x58:0 && x61:0 < x57:0 && x56:0 >= x55:0 + 1 && x57:0 > -1)
f13282_0_entry_GT(x43:0, x44:0, x45:0, x46:0, x47:0, x48:0, x49:0) -> f13282_0_entry_GT(c11, x44:0, x45:0, x46:0, x51:0, x52:0, x53:0) :|: c11 = x43:0 + 1 && (x54:0 < x53:0 && x54:0 > -1 && x51:0 < x47:0 && x52:0 > x48:0 && x54:0 < x49:0 && x45:0 > 0 && x46:0 > 0 && x44:0 >= x43:0 + 1 && x49:0 > 0 && x47:0 > 0 && x48:0 > 0)
f13282_0_entry_GT(x33:0, x34:0, x35:0, x36:0, x35:0, x35:0, x35:0) -> f13282_0_entry_GT(c12, x34:0, x38:0, x39:0, x40:0, c13, x41:0) :|: c13 = 1 && c12 = x33:0 + 1 && (x40:0 > 0 && x42:0 > 0 && x36:0 > -1 && x42:0 < x36:0 && x40:0 < x35:0 && x34:0 >= x33:0 + 1 && x35:0 > -1)
f13282_0_entry_GT(i4704:0:0, i4215:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.previous]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0) -> f13282_0_entry_GT(c14, i4215:0:0, o15780[LinkedList$Entry.next]o15780:0:0, c15, o15419[LinkedList$Entry.next]o15417:0:0, c16, o15419[LinkedList$Entry.next]o15419:0:0) :|: c16 = 1 && (c15 = 1 && c14 = i4704:0:0 + 1) && (o14037[LinkedList$Entry.previous]o14037:0:0 > -1 && o15419[LinkedList$Entry.next]o15417:0:0 > 0 && o15420[LinkedList$Entry.previous]o15417:0:0 < o14037[LinkedList$Entry.previous]o14037:0:0 && o15419[LinkedList$Entry.next]o15417:0:0 < o14037[LinkedList$Entry.next]o14037:0:0 && i4704:0:0 + 1 <= i4215:0:0 && o14037[LinkedList$Entry.next]o14037:0:0 > -1)

The following rules are bounded:
f13282_0_entry_GT(x63:0, x64:0, x65:0, x66:0, x65:0, x65:0, x65:0) -> f13282_0_entry_GT(c, x64:0, c1, c2, c3, c4, c5) :|: c5 = 1 && (c4 = 1 && (c3 = 1 && (c2 = 1 && (c1 = 1 && c = x63:0 + 1)))) && (x69:0 < x66:0 && x66:0 > -1 && x68:0 < x65:0 && x64:0 >= x63:0 + 1 && x65:0 > -1)
f13282_0_entry_GT(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f13282_0_entry_GT(c6, x56:0, c7, x60:0, c8, c9, c10) :|: c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x55:0 + 1))) && (x58:0 > -1 && x62:0 > 0 && x62:0 < x58:0 && x61:0 < x57:0 && x56:0 >= x55:0 + 1 && x57:0 > -1)
f13282_0_entry_GT(x43:0, x44:0, x45:0, x46:0, x47:0, x48:0, x49:0) -> f13282_0_entry_GT(c11, x44:0, x45:0, x46:0, x51:0, x52:0, x53:0) :|: c11 = x43:0 + 1 && (x54:0 < x53:0 && x54:0 > -1 && x51:0 < x47:0 && x52:0 > x48:0 && x54:0 < x49:0 && x45:0 > 0 && x46:0 > 0 && x44:0 >= x43:0 + 1 && x49:0 > 0 && x47:0 > 0 && x48:0 > 0)
f13282_0_entry_GT(x33:0, x34:0, x35:0, x36:0, x35:0, x35:0, x35:0) -> f13282_0_entry_GT(c12, x34:0, x38:0, x39:0, x40:0, c13, x41:0) :|: c13 = 1 && c12 = x33:0 + 1 && (x40:0 > 0 && x42:0 > 0 && x36:0 > -1 && x42:0 < x36:0 && x40:0 < x35:0 && x34:0 >= x33:0 + 1 && x35:0 > -1)
f13282_0_entry_GT(i4704:0:0, i4215:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.previous]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0, o14037[LinkedList$Entry.next]o14037:0:0) -> f13282_0_entry_GT(c14, i4215:0:0, o15780[LinkedList$Entry.next]o15780:0:0, c15, o15419[LinkedList$Entry.next]o15417:0:0, c16, o15419[LinkedList$Entry.next]o15419:0:0) :|: c16 = 1 && (c15 = 1 && c14 = i4704:0:0 + 1) && (o14037[LinkedList$Entry.previous]o14037:0:0 > -1 && o15419[LinkedList$Entry.next]o15417:0:0 > 0 && o15420[LinkedList$Entry.previous]o15417:0:0 < o14037[LinkedList$Entry.previous]o14037:0:0 && o15419[LinkedList$Entry.next]o15417:0:0 < o14037[LinkedList$Entry.next]o14037:0:0 && i4704:0:0 + 1 <= i4215:0:0 && o14037[LinkedList$Entry.next]o14037:0:0 > -1)


----------------------------------------

(118)
YES

----------------------------------------

(119)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateContains.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [previous]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(120) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 40 IRulesP rules:
f12815_0_entry_LE(EOS(STATIC_12815), i4215, i4412, i4412, i4215, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) -> f12824_0_entry_Load(EOS(STATIC_12824), i4215, i4412, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) :|: i4412 > i4215
f12824_0_entry_Load(EOS(STATIC_12824), i4215, i4412, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) -> f12839_0_entry_FieldAccess(EOS(STATIC_12839), i4215, i4412, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) :|: TRUE
f12839_0_entry_FieldAccess(EOS(STATIC_12839), i4215, i4412, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) -> f12850_0_entry_FieldAccess(EOS(STATIC_12850), i4215, i4412, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) :|: o12360[LinkedList$Entry.previous]o12358 > 0 && o12360[LinkedList$Entry.next]o12360 > 0 && o12358[LinkedList$Entry.previous]o12360 > 0 && o12360[LinkedList$Entry.previous]o12360 > 0 && o12358[LinkedList$Entry.previous]o12358 > 0
f12839_0_entry_FieldAccess(EOS(STATIC_12839), i4215, i4412, o12554[LinkedList$Entry.previous]o12554, o12554[LinkedList$Entry.next]o12554, o12554[LinkedList$Entry.previous]o12554, o12554[LinkedList$Entry.previous]o12554, o12554[LinkedList$Entry.previous]o12554) -> f12851_0_entry_FieldAccess(EOS(STATIC_12851), i4215, i4412, o12554[LinkedList$Entry.next]o12554, o12554[LinkedList$Entry.previous]o12554) :|: TRUE
f12850_0_entry_FieldAccess(EOS(STATIC_12850), i4215, i4412, o12360[LinkedList$Entry.previous]o12566, o12360[LinkedList$Entry.next]o12360, o12566[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12566[LinkedList$Entry.previous]o12566) -> f12866_0_entry_FieldAccess(EOS(STATIC_12866), i4215, i4412, o12360[LinkedList$Entry.next]o12360, o12360[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12566, o12569[LinkedList$Entry.previous]o12360, o12569[LinkedList$Entry.previous]o12566) :|: o12569[LinkedList$Entry.previous]o12360 < o12566[LinkedList$Entry.previous]o12360 && o12566[LinkedList$Entry.previous]o12360 >= 0 && o12569[LinkedList$Entry.previous]o12566 < o12566[LinkedList$Entry.previous]o12566 && o12566[LinkedList$Entry.previous]o12566 >= 0
f12866_0_entry_FieldAccess(EOS(STATIC_12866), i4215, i4412, o12360[LinkedList$Entry.next]o12360, o12360[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12566, o12569[LinkedList$Entry.previous]o12360, o12569[LinkedList$Entry.previous]o12566) -> f12884_0_entry_Store(EOS(STATIC_12884), i4215, i4412, o12360[LinkedList$Entry.next]o12360, o12360[LinkedList$Entry.previous]o12360, o12569[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12569, o12569[LinkedList$Entry.previous]o12569) :|: o12360[LinkedList$Entry.previous]o12569 > o12360[LinkedList$Entry.previous]o12566 && o12360[LinkedList$Entry.previous]o12566 >= 0 && o12569[LinkedList$Entry.previous]o12569 > o12569[LinkedList$Entry.previous]o12566 && o12569[LinkedList$Entry.previous]o12566 >= 0
f12884_0_entry_Store(EOS(STATIC_12884), i4215, i4412, o12360[LinkedList$Entry.next]o12360, o12360[LinkedList$Entry.previous]o12360, o12569[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12569, o12569[LinkedList$Entry.previous]o12569) -> f12905_0_entry_Inc(EOS(STATIC_12905), i4215, i4412, o12360[LinkedList$Entry.next]o12360, o12360[LinkedList$Entry.previous]o12360, o12569[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12569, o12569[LinkedList$Entry.previous]o12569) :|: TRUE
f12905_0_entry_Inc(EOS(STATIC_12905), i4215, i4412, o12360[LinkedList$Entry.next]o12360, o12360[LinkedList$Entry.previous]o12360, o12569[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12569, o12569[LinkedList$Entry.previous]o12569) -> f12928_0_entry_JMP(EOS(STATIC_12928), i4215, i4412 + -1, o12360[LinkedList$Entry.next]o12360, o12360[LinkedList$Entry.previous]o12360, o12569[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12569, o12569[LinkedList$Entry.previous]o12569) :|: TRUE
f12928_0_entry_JMP(EOS(STATIC_12928), i4215, i4425, o12360[LinkedList$Entry.next]o12360, o12360[LinkedList$Entry.previous]o12360, o12569[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12569, o12569[LinkedList$Entry.previous]o12569) -> f12945_0_entry_Load(EOS(STATIC_12945), i4215, i4425, o12360[LinkedList$Entry.next]o12360, o12360[LinkedList$Entry.previous]o12360, o12569[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12569, o12569[LinkedList$Entry.previous]o12569) :|: TRUE
f12945_0_entry_Load(EOS(STATIC_12945), i4215, i4425, o12360[LinkedList$Entry.next]o12360, o12360[LinkedList$Entry.previous]o12360, o12569[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12569, o12569[LinkedList$Entry.previous]o12569) -> f12779_0_entry_Load(EOS(STATIC_12779), i4215, i4425, o12360[LinkedList$Entry.previous]o12569, o12360[LinkedList$Entry.next]o12360, o12569[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12569[LinkedList$Entry.previous]o12569) :|: TRUE
f12779_0_entry_Load(EOS(STATIC_12779), i4215, i4412, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) -> f12790_0_entry_Load(EOS(STATIC_12790), i4215, i4412, i4412, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) :|: TRUE
f12790_0_entry_Load(EOS(STATIC_12790), i4215, i4412, i4412, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) -> f12803_0_entry_LE(EOS(STATIC_12803), i4215, i4412, i4412, i4215, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) :|: TRUE
f12803_0_entry_LE(EOS(STATIC_12803), i4215, i4412, i4412, i4215, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) -> f12815_0_entry_LE(EOS(STATIC_12815), i4215, i4412, i4412, i4215, o12360[LinkedList$Entry.previous]o12358, o12360[LinkedList$Entry.next]o12360, o12358[LinkedList$Entry.previous]o12360, o12360[LinkedList$Entry.previous]o12360, o12358[LinkedList$Entry.previous]o12358) :|: i4412 > i4215
f12851_0_entry_FieldAccess(EOS(STATIC_12851), i4215, i4412, o12570[LinkedList$Entry.next]o12570, o12570[LinkedList$Entry.previous]o12570) -> f12867_0_entry_FieldAccess(EOS(STATIC_12867), i4215, i4412, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) :|: o12572[LinkedList$Entry.next]o12570 < o12570[LinkedList$Entry.next]o12570 && o12570[LinkedList$Entry.next]o12570 >= 0 && o12573[LinkedList$Entry.previous]o12570 < o12570[LinkedList$Entry.previous]o12570 && o12570[LinkedList$Entry.previous]o12570 >= 0
f12867_0_entry_FieldAccess(EOS(STATIC_12867), i4215, i4412, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) -> f12885_0_entry_FieldAccess(EOS(STATIC_12885), i4215, i4412, o12573[LinkedList$Entry.previous]o12570, o12572[LinkedList$Entry.next]o12570) :|: o12572[LinkedList$Entry.next]o12570 > 0
f12867_0_entry_FieldAccess(EOS(STATIC_12867), i4215, i4412, o12572[LinkedList$Entry.next]o12607, o12573[LinkedList$Entry.previous]o12607) -> f12886_0_entry_FieldAccess(EOS(STATIC_12886), i4215, i4412, o12573[LinkedList$Entry.previous]o12607) :|: TRUE
f12885_0_entry_FieldAccess(EOS(STATIC_12885), i4215, i4412, o12573[LinkedList$Entry.previous]o12570, o12572[LinkedList$Entry.next]o12570) -> f12906_0_entry_FieldAccess(EOS(STATIC_12906), i4215, i4412, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) :|: o12573[LinkedList$Entry.previous]o12570 > 0
f12885_0_entry_FieldAccess(EOS(STATIC_12885), i4215, i4412, o12573[LinkedList$Entry.previous]o12635, o12572[LinkedList$Entry.next]o12635) -> f12907_0_entry_FieldAccess(EOS(STATIC_12907), i4215, i4412, o12572[LinkedList$Entry.next]o12635) :|: TRUE
f12906_0_entry_FieldAccess(EOS(STATIC_12906), i4215, i4412, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) -> f12929_0_entry_Store(EOS(STATIC_12929), i4215, i4412, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) :|: TRUE
f12929_0_entry_Store(EOS(STATIC_12929), i4215, i4412, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) -> f12946_0_entry_Inc(EOS(STATIC_12946), i4215, i4412, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) :|: TRUE
f12946_0_entry_Inc(EOS(STATIC_12946), i4215, i4412, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) -> f12967_0_entry_JMP(EOS(STATIC_12967), i4215, i4412 + -1, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) :|: TRUE
f12967_0_entry_JMP(EOS(STATIC_12967), i4215, i4452, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) -> f12989_0_entry_Load(EOS(STATIC_12989), i4215, i4452, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) :|: TRUE
f12989_0_entry_Load(EOS(STATIC_12989), i4215, i4452, o12572[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570) -> f12779_0_entry_Load(EOS(STATIC_12779), i4215, i4452, o12570[LinkedList$Entry.previous]o12573, o12570[LinkedList$Entry.next]o12570, o12573[LinkedList$Entry.previous]o12570, o12570[LinkedList$Entry.previous]o12570, o12573[LinkedList$Entry.previous]o12573) :|: o12570[LinkedList$Entry.previous]o12573 = 1
f12907_0_entry_FieldAccess(EOS(STATIC_12907), i4215, i4412, o12572[LinkedList$Entry.next]o12635) -> f12930_0_entry_Store(EOS(STATIC_12930), i4215, i4412, o12572[LinkedList$Entry.next]o12635) :|: TRUE
f12930_0_entry_Store(EOS(STATIC_12930), i4215, i4412, o12572[LinkedList$Entry.next]o12635) -> f12947_0_entry_Inc(EOS(STATIC_12947), i4215, i4412, o12572[LinkedList$Entry.next]o12635) :|: TRUE
f12947_0_entry_Inc(EOS(STATIC_12947), i4215, i4412, o12572[LinkedList$Entry.next]o12635) -> f12968_0_entry_JMP(EOS(STATIC_12968), i4215, i4412 + -1, o12572[LinkedList$Entry.next]o12635) :|: TRUE
f12968_0_entry_JMP(EOS(STATIC_12968), i4215, i4454, o12572[LinkedList$Entry.next]o12635) -> f12990_0_entry_Load(EOS(STATIC_12990), i4215, i4454, o12572[LinkedList$Entry.next]o12635) :|: TRUE
f12990_0_entry_Load(EOS(STATIC_12990), i4215, i4454, o12572[LinkedList$Entry.next]o12635) -> f12779_0_entry_Load(EOS(STATIC_12779), i4215, i4454, o12635[LinkedList$Entry.previous]o12635, o12635[LinkedList$Entry.next]o12635, o12635[LinkedList$Entry.previous]o12635, o12635[LinkedList$Entry.previous]o12635, o12635[LinkedList$Entry.previous]o12635) :|: o12635[LinkedList$Entry.previous]o12635 = 1 && o12635[LinkedList$Entry.previous]o12635 = 1 && o12635[LinkedList$Entry.previous]o12635 = 1 && o12635[LinkedList$Entry.previous]o12635 = 1
f12886_0_entry_FieldAccess(EOS(STATIC_12886), i4215, i4412, o12573[LinkedList$Entry.previous]o12607) -> f12908_0_entry_FieldAccess(EOS(STATIC_12908), i4215, i4412, o12573[LinkedList$Entry.previous]o12607) :|: o12573[LinkedList$Entry.previous]o12607 > 0
f12886_0_entry_FieldAccess(EOS(STATIC_12886), i4215, i4412, o12573[LinkedList$Entry.previous]o12638) -> f12909_0_entry_FieldAccess(EOS(STATIC_12909), i4215, i4412) :|: TRUE
f12908_0_entry_FieldAccess(EOS(STATIC_12908), i4215, i4412, o12573[LinkedList$Entry.previous]o12607) -> f12931_0_entry_Store(EOS(STATIC_12931), i4215, i4412, o12573[LinkedList$Entry.previous]o12607) :|: TRUE
f12931_0_entry_Store(EOS(STATIC_12931), i4215, i4412, o12573[LinkedList$Entry.previous]o12607) -> f12948_0_entry_Inc(EOS(STATIC_12948), i4215, i4412, o12573[LinkedList$Entry.previous]o12607) :|: TRUE
f12948_0_entry_Inc(EOS(STATIC_12948), i4215, i4412, o12573[LinkedList$Entry.previous]o12607) -> f12969_0_entry_JMP(EOS(STATIC_12969), i4215, i4412 + -1, o12573[LinkedList$Entry.previous]o12607) :|: TRUE
f12969_0_entry_JMP(EOS(STATIC_12969), i4215, i4455, o12573[LinkedList$Entry.previous]o12607) -> f12991_0_entry_Load(EOS(STATIC_12991), i4215, i4455, o12573[LinkedList$Entry.previous]o12607) :|: TRUE
f12991_0_entry_Load(EOS(STATIC_12991), i4215, i4455, o12573[LinkedList$Entry.previous]o12607) -> f12779_0_entry_Load(EOS(STATIC_12779), i4215, i4455, o12607[LinkedList$Entry.previous]o12573, o12607[LinkedList$Entry.next]o12607, o12573[LinkedList$Entry.previous]o12607, o12607[LinkedList$Entry.previous]o12607, o12573[LinkedList$Entry.previous]o12573) :|: o12607[LinkedList$Entry.previous]o12573 = 1 && o12607[LinkedList$Entry.next]o12607 = 1
f12909_0_entry_FieldAccess(EOS(STATIC_12909), i4215, i4412) -> f12932_0_entry_Store(EOS(STATIC_12932), i4215, i4412) :|: TRUE
f12932_0_entry_Store(EOS(STATIC_12932), i4215, i4412) -> f12949_0_entry_Inc(EOS(STATIC_12949), i4215, i4412) :|: TRUE
f12949_0_entry_Inc(EOS(STATIC_12949), i4215, i4412) -> f12970_0_entry_JMP(EOS(STATIC_12970), i4215, i4412 + -1) :|: TRUE
f12970_0_entry_JMP(EOS(STATIC_12970), i4215, i4459) -> f12992_0_entry_Load(EOS(STATIC_12992), i4215, i4459) :|: TRUE
f12992_0_entry_Load(EOS(STATIC_12992), i4215, i4459) -> f12779_0_entry_Load(EOS(STATIC_12779), i4215, i4459, o12638[LinkedList$Entry.previous]o12638, o12638[LinkedList$Entry.next]o12638, o12638[LinkedList$Entry.previous]o12638, o12638[LinkedList$Entry.previous]o12638, o12638[LinkedList$Entry.previous]o12638) :|: o12638[LinkedList$Entry.previous]o12638 = 1 && o12638[LinkedList$Entry.next]o12638 = 1 && o12638[LinkedList$Entry.previous]o12638 = 1 && o12638[LinkedList$Entry.previous]o12638 = 1 && o12638[LinkedList$Entry.previous]o12638 = 1
Combined rules. Obtained 5 IRulesP rules:
f12815_0_entry_LE(EOS(STATIC_12815), i4215:0, i4412:0, i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12358[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12358[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(EOS(STATIC_12815), i4215:0, i4412:0 - 1, i4412:0 - 1, i4215:0, o12360[LinkedList$Entry.previous]o12569:0, o12360[LinkedList$Entry.next]o12360:0, o12569[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12569[LinkedList$Entry.previous]o12569:0) :|: o12360[LinkedList$Entry.previous]o12358:0 > 0 && o12358[LinkedList$Entry.previous]o12360:0 > 0 && o12358[LinkedList$Entry.previous]o12358:0 > 0 && o12360[LinkedList$Entry.next]o12360:0 > 0 && o12569[LinkedList$Entry.previous]o12360:0 < o12358[LinkedList$Entry.previous]o12360:0 && o12360[LinkedList$Entry.previous]o12360:0 > 0 && o12360[LinkedList$Entry.previous]o12569:0 > o12360[LinkedList$Entry.previous]o12358:0 && o12569[LinkedList$Entry.previous]o12566:0 < o12358[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12569[LinkedList$Entry.previous]o12569:0 > o12569[LinkedList$Entry.previous]o12566:0 && i4412:0 - 1 > i4215:0 && o12569[LinkedList$Entry.previous]o12566:0 > -1
f12815_0_entry_LE(EOS(STATIC_12815), i4215:0, i4412:0, i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(EOS(STATIC_12815), i4215:0, i4412:0 - 1, i4412:0 - 1, i4215:0, 1, o12635[LinkedList$Entry.next]o12635:0, 1, 1, 1) :|: o12360[LinkedList$Entry.next]o12360:0 > -1 && o12572[LinkedList$Entry.next]o12570:0 < o12360[LinkedList$Entry.next]o12360:0 && o12573[LinkedList$Entry.previous]o12570:0 < o12360[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12360[LinkedList$Entry.previous]o12358:0 > -1 && i4412:0 - 1 > i4215:0 && o12572[LinkedList$Entry.next]o12570:0 > 0
f12815_0_entry_LE(EOS(STATIC_12815), i4215:0, i4412:0, i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(EOS(STATIC_12815), i4215:0, i4412:0 - 1, i4412:0 - 1, i4215:0, 1, 1, 1, 1, 1) :|: o12360[LinkedList$Entry.next]o12360:0 > -1 && o12572[LinkedList$Entry.next]o12570:0 < o12360[LinkedList$Entry.next]o12360:0 && o12573[LinkedList$Entry.previous]o12570:0 < o12360[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && i4412:0 - 1 > i4215:0 && o12360[LinkedList$Entry.previous]o12358:0 > -1
f12815_0_entry_LE(EOS(STATIC_12815), i4215:0, i4412:0, i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(EOS(STATIC_12815), i4215:0, i4412:0 - 1, i4412:0 - 1, i4215:0, 1, 1, o12573[LinkedList$Entry.previous]o12570:0, o12607[LinkedList$Entry.previous]o12607:0, o12573[LinkedList$Entry.previous]o12573:0) :|: o12360[LinkedList$Entry.next]o12360:0 > -1 && o12572[LinkedList$Entry.next]o12570:0 < o12360[LinkedList$Entry.next]o12360:0 && o12573[LinkedList$Entry.previous]o12570:0 < o12360[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12360[LinkedList$Entry.previous]o12358:0 > -1 && i4412:0 - 1 > i4215:0 && o12573[LinkedList$Entry.previous]o12570:0 > 0
f12815_0_entry_LE(EOS(STATIC_12815), i4215:0, i4412:0, i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(EOS(STATIC_12815), i4215:0, i4412:0 - 1, i4412:0 - 1, i4215:0, 1, o12570[LinkedList$Entry.next]o12570:0, o12573[LinkedList$Entry.previous]o12570:0, o12570[LinkedList$Entry.previous]o12570:0, o12573[LinkedList$Entry.previous]o12573:0) :|: o12360[LinkedList$Entry.next]o12360:0 > -1 && o12572[LinkedList$Entry.next]o12570:0 < o12360[LinkedList$Entry.next]o12360:0 && o12573[LinkedList$Entry.previous]o12570:0 < o12360[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12360[LinkedList$Entry.previous]o12358:0 > -1 && o12572[LinkedList$Entry.next]o12570:0 > 0 && i4412:0 - 1 > i4215:0 && o12573[LinkedList$Entry.previous]o12570:0 > 0
Filtered constant ground arguments:
   f12815_0_entry_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f12815_0_entry_LE(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f12815_0_entry_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f12815_0_entry_LE(x3, x4, x5, x6, x7, x8, x9)
Finished conversion. Obtained 5 rules.P rules:
f12815_0_entry_LE(i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12358[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12358[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(i4412:0 - 1, i4215:0, o12360[LinkedList$Entry.previous]o12569:0, o12360[LinkedList$Entry.next]o12360:0, o12569[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12569[LinkedList$Entry.previous]o12569:0) :|: o12358[LinkedList$Entry.previous]o12360:0 > 0 && o12360[LinkedList$Entry.previous]o12358:0 > 0 && o12358[LinkedList$Entry.previous]o12358:0 > 0 && o12360[LinkedList$Entry.next]o12360:0 > 0 && o12569[LinkedList$Entry.previous]o12360:0 < o12358[LinkedList$Entry.previous]o12360:0 && o12360[LinkedList$Entry.previous]o12360:0 > 0 && o12360[LinkedList$Entry.previous]o12569:0 > o12360[LinkedList$Entry.previous]o12358:0 && o12569[LinkedList$Entry.previous]o12566:0 < o12358[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12569[LinkedList$Entry.previous]o12569:0 > o12569[LinkedList$Entry.previous]o12566:0 && o12569[LinkedList$Entry.previous]o12566:0 > -1 && i4412:0 - 1 > i4215:0
f12815_0_entry_LE(i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(i4412:0 - 1, i4215:0, 1, o12635[LinkedList$Entry.next]o12635:0, 1, 1, 1) :|: o12572[LinkedList$Entry.next]o12570:0 < o12360[LinkedList$Entry.next]o12360:0 && o12360[LinkedList$Entry.next]o12360:0 > -1 && o12573[LinkedList$Entry.previous]o12570:0 < o12360[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12360[LinkedList$Entry.previous]o12358:0 > -1 && o12572[LinkedList$Entry.next]o12570:0 > 0 && i4412:0 - 1 > i4215:0
f12815_0_entry_LE(i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(i4412:0 - 1, i4215:0, 1, 1, 1, 1, 1) :|: o12572[LinkedList$Entry.next]o12570:0 < o12360[LinkedList$Entry.next]o12360:0 && o12360[LinkedList$Entry.next]o12360:0 > -1 && o12573[LinkedList$Entry.previous]o12570:0 < o12360[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12360[LinkedList$Entry.previous]o12358:0 > -1 && i4412:0 - 1 > i4215:0
f12815_0_entry_LE(i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(i4412:0 - 1, i4215:0, 1, 1, o12573[LinkedList$Entry.previous]o12570:0, o12607[LinkedList$Entry.previous]o12607:0, o12573[LinkedList$Entry.previous]o12573:0) :|: o12572[LinkedList$Entry.next]o12570:0 < o12360[LinkedList$Entry.next]o12360:0 && o12360[LinkedList$Entry.next]o12360:0 > -1 && o12573[LinkedList$Entry.previous]o12570:0 < o12360[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12360[LinkedList$Entry.previous]o12358:0 > -1 && o12573[LinkedList$Entry.previous]o12570:0 > 0 && i4412:0 - 1 > i4215:0
f12815_0_entry_LE(i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(i4412:0 - 1, i4215:0, 1, o12570[LinkedList$Entry.next]o12570:0, o12573[LinkedList$Entry.previous]o12570:0, o12570[LinkedList$Entry.previous]o12570:0, o12573[LinkedList$Entry.previous]o12573:0) :|: o12572[LinkedList$Entry.next]o12570:0 < o12360[LinkedList$Entry.next]o12360:0 && o12360[LinkedList$Entry.next]o12360:0 > -1 && o12573[LinkedList$Entry.previous]o12570:0 < o12360[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12360[LinkedList$Entry.previous]o12358:0 > -1 && o12572[LinkedList$Entry.next]o12570:0 > 0 && o12573[LinkedList$Entry.previous]o12570:0 > 0 && i4412:0 - 1 > i4215:0

----------------------------------------

(121)
Obligation:
Rules:
f12815_0_entry_LE(i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12358[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12358[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(i4412:0 - 1, i4215:0, o12360[LinkedList$Entry.previous]o12569:0, o12360[LinkedList$Entry.next]o12360:0, o12569[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12569[LinkedList$Entry.previous]o12569:0) :|: o12358[LinkedList$Entry.previous]o12360:0 > 0 && o12360[LinkedList$Entry.previous]o12358:0 > 0 && o12358[LinkedList$Entry.previous]o12358:0 > 0 && o12360[LinkedList$Entry.next]o12360:0 > 0 && o12569[LinkedList$Entry.previous]o12360:0 < o12358[LinkedList$Entry.previous]o12360:0 && o12360[LinkedList$Entry.previous]o12360:0 > 0 && o12360[LinkedList$Entry.previous]o12569:0 > o12360[LinkedList$Entry.previous]o12358:0 && o12569[LinkedList$Entry.previous]o12566:0 < o12358[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12569[LinkedList$Entry.previous]o12569:0 > o12569[LinkedList$Entry.previous]o12566:0 && o12569[LinkedList$Entry.previous]o12566:0 > -1 && i4412:0 - 1 > i4215:0
f12815_0_entry_LE(x, x1, x2, x3, x2, x2, x2) -> f12815_0_entry_LE(x - 1, x1, 1, x4, 1, 1, 1) :|: x5 < x3 && x3 > -1 && x6 < x2 && x > x1 && x2 > -1 && x5 > 0 && x - 1 > x1
f12815_0_entry_LE(x7, x8, x9, x10, x9, x9, x9) -> f12815_0_entry_LE(x7 - 1, x8, 1, 1, 1, 1, 1) :|: x11 < x10 && x10 > -1 && x12 < x9 && x7 > x8 && x9 > -1 && x7 - 1 > x8
f12815_0_entry_LE(x13, x14, x15, x16, x15, x15, x15) -> f12815_0_entry_LE(x13 - 1, x14, 1, 1, x17, x18, x19) :|: x20 < x16 && x16 > -1 && x17 < x15 && x13 > x14 && x15 > -1 && x17 > 0 && x13 - 1 > x14
f12815_0_entry_LE(x21, x22, x23, x24, x23, x23, x23) -> f12815_0_entry_LE(x21 - 1, x22, 1, x25, x26, x27, x28) :|: x29 < x24 && x24 > -1 && x26 < x23 && x21 > x22 && x23 > -1 && x29 > 0 && x26 > 0 && x21 - 1 > x22

----------------------------------------

(122) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(123)
Obligation:
Rules:
f12815_0_entry_LE(i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12358[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12358[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(arith, i4215:0, o12360[LinkedList$Entry.previous]o12569:0, o12360[LinkedList$Entry.next]o12360:0, o12569[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12569[LinkedList$Entry.previous]o12569:0) :|: o12358[LinkedList$Entry.previous]o12360:0 > 0 && o12360[LinkedList$Entry.previous]o12358:0 > 0 && o12358[LinkedList$Entry.previous]o12358:0 > 0 && o12360[LinkedList$Entry.next]o12360:0 > 0 && o12569[LinkedList$Entry.previous]o12360:0 < o12358[LinkedList$Entry.previous]o12360:0 && o12360[LinkedList$Entry.previous]o12360:0 > 0 && o12360[LinkedList$Entry.previous]o12569:0 > o12360[LinkedList$Entry.previous]o12358:0 && o12569[LinkedList$Entry.previous]o12566:0 < o12358[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12569[LinkedList$Entry.previous]o12569:0 > o12569[LinkedList$Entry.previous]o12566:0 && o12569[LinkedList$Entry.previous]o12566:0 > -1 && i4412:0 - 1 > i4215:0 && arith = i4412:0 - 1
f12815_0_entry_LE(x30, x31, x32, x33, x32, x32, x32) -> f12815_0_entry_LE(x34, x31, 1, x35, 1, 1, 1) :|: x36 < x33 && x33 > -1 && x37 < x32 && x30 > x31 && x32 > -1 && x36 > 0 && x30 - 1 > x31 && x34 = x30 - 1
f12815_0_entry_LE(x38, x39, x40, x41, x40, x40, x40) -> f12815_0_entry_LE(x42, x39, 1, 1, 1, 1, 1) :|: x43 < x41 && x41 > -1 && x44 < x40 && x38 > x39 && x40 > -1 && x38 - 1 > x39 && x42 = x38 - 1
f12815_0_entry_LE(x45, x46, x47, x48, x47, x47, x47) -> f12815_0_entry_LE(x49, x46, 1, 1, x50, x51, x52) :|: x53 < x48 && x48 > -1 && x50 < x47 && x45 > x46 && x47 > -1 && x50 > 0 && x45 - 1 > x46 && x49 = x45 - 1
f12815_0_entry_LE(x54, x55, x56, x57, x56, x56, x56) -> f12815_0_entry_LE(x58, x55, 1, x59, x60, x61, x62) :|: x63 < x57 && x57 > -1 && x60 < x56 && x54 > x55 && x56 > -1 && x63 > 0 && x60 > 0 && x54 - 1 > x55 && x58 = x54 - 1

----------------------------------------

(124) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12815_0_entry_LE(i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12358[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12358[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(arith, i4215:0, o12360[LinkedList$Entry.previous]o12569:0, o12360[LinkedList$Entry.next]o12360:0, o12569[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12569[LinkedList$Entry.previous]o12569:0) :|: o12358[LinkedList$Entry.previous]o12360:0 > 0 && o12360[LinkedList$Entry.previous]o12358:0 > 0 && o12358[LinkedList$Entry.previous]o12358:0 > 0 && o12360[LinkedList$Entry.next]o12360:0 > 0 && o12569[LinkedList$Entry.previous]o12360:0 < o12358[LinkedList$Entry.previous]o12360:0 && o12360[LinkedList$Entry.previous]o12360:0 > 0 && o12360[LinkedList$Entry.previous]o12569:0 > o12360[LinkedList$Entry.previous]o12358:0 && o12569[LinkedList$Entry.previous]o12566:0 < o12358[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12569[LinkedList$Entry.previous]o12569:0 > o12569[LinkedList$Entry.previous]o12566:0 && o12569[LinkedList$Entry.previous]o12566:0 > -1 && i4412:0 - 1 > i4215:0 && arith = i4412:0 - 1
(2) f12815_0_entry_LE(x30, x31, x32, x33, x32, x32, x32) -> f12815_0_entry_LE(x34, x31, 1, x35, 1, 1, 1) :|: x36 < x33 && x33 > -1 && x37 < x32 && x30 > x31 && x32 > -1 && x36 > 0 && x30 - 1 > x31 && x34 = x30 - 1
(3) f12815_0_entry_LE(x38, x39, x40, x41, x40, x40, x40) -> f12815_0_entry_LE(x42, x39, 1, 1, 1, 1, 1) :|: x43 < x41 && x41 > -1 && x44 < x40 && x38 > x39 && x40 > -1 && x38 - 1 > x39 && x42 = x38 - 1
(4) f12815_0_entry_LE(x45, x46, x47, x48, x47, x47, x47) -> f12815_0_entry_LE(x49, x46, 1, 1, x50, x51, x52) :|: x53 < x48 && x48 > -1 && x50 < x47 && x45 > x46 && x47 > -1 && x50 > 0 && x45 - 1 > x46 && x49 = x45 - 1
(5) f12815_0_entry_LE(x54, x55, x56, x57, x56, x56, x56) -> f12815_0_entry_LE(x58, x55, 1, x59, x60, x61, x62) :|: x63 < x57 && x57 > -1 && x60 < x56 && x54 > x55 && x56 > -1 && x63 > 0 && x60 > 0 && x54 - 1 > x55 && x58 = x54 - 1

Arcs:
(1) -> (1), (2), (3), (4), (5)
(2) -> (1), (2), (3)
(3) -> (1), (3)
(4) -> (1), (3)
(5) -> (1), (2), (3)

This digraph is fully evaluated!
----------------------------------------

(125)
Obligation:

Termination digraph:
Nodes:
(1) f12815_0_entry_LE(i4412:0, i4215:0, o12360[LinkedList$Entry.previous]o12358:0, o12360[LinkedList$Entry.next]o12360:0, o12358[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12358[LinkedList$Entry.previous]o12358:0) -> f12815_0_entry_LE(arith, i4215:0, o12360[LinkedList$Entry.previous]o12569:0, o12360[LinkedList$Entry.next]o12360:0, o12569[LinkedList$Entry.previous]o12360:0, o12360[LinkedList$Entry.previous]o12360:0, o12569[LinkedList$Entry.previous]o12569:0) :|: o12358[LinkedList$Entry.previous]o12360:0 > 0 && o12360[LinkedList$Entry.previous]o12358:0 > 0 && o12358[LinkedList$Entry.previous]o12358:0 > 0 && o12360[LinkedList$Entry.next]o12360:0 > 0 && o12569[LinkedList$Entry.previous]o12360:0 < o12358[LinkedList$Entry.previous]o12360:0 && o12360[LinkedList$Entry.previous]o12360:0 > 0 && o12360[LinkedList$Entry.previous]o12569:0 > o12360[LinkedList$Entry.previous]o12358:0 && o12569[LinkedList$Entry.previous]o12566:0 < o12358[LinkedList$Entry.previous]o12358:0 && i4412:0 > i4215:0 && o12569[LinkedList$Entry.previous]o12569:0 > o12569[LinkedList$Entry.previous]o12566:0 && o12569[LinkedList$Entry.previous]o12566:0 > -1 && i4412:0 - 1 > i4215:0 && arith = i4412:0 - 1
(2) f12815_0_entry_LE(x38, x39, x40, x41, x40, x40, x40) -> f12815_0_entry_LE(x42, x39, 1, 1, 1, 1, 1) :|: x43 < x41 && x41 > -1 && x44 < x40 && x38 > x39 && x40 > -1 && x38 - 1 > x39 && x42 = x38 - 1
(3) f12815_0_entry_LE(x45, x46, x47, x48, x47, x47, x47) -> f12815_0_entry_LE(x49, x46, 1, 1, x50, x51, x52) :|: x53 < x48 && x48 > -1 && x50 < x47 && x45 > x46 && x47 > -1 && x50 > 0 && x45 - 1 > x46 && x49 = x45 - 1
(4) f12815_0_entry_LE(x30, x31, x32, x33, x32, x32, x32) -> f12815_0_entry_LE(x34, x31, 1, x35, 1, 1, 1) :|: x36 < x33 && x33 > -1 && x37 < x32 && x30 > x31 && x32 > -1 && x36 > 0 && x30 - 1 > x31 && x34 = x30 - 1
(5) f12815_0_entry_LE(x54, x55, x56, x57, x56, x56, x56) -> f12815_0_entry_LE(x58, x55, 1, x59, x60, x61, x62) :|: x63 < x57 && x57 > -1 && x60 < x56 && x54 > x55 && x56 > -1 && x63 > 0 && x60 > 0 && x54 - 1 > x55 && x58 = x54 - 1

Arcs:
(1) -> (1), (2), (3), (4), (5)
(2) -> (1), (2)
(3) -> (1), (2)
(4) -> (1), (2), (4)
(5) -> (1), (2), (4)

This digraph is fully evaluated!

----------------------------------------

(126) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(127)
Obligation:
Rules:
f12815_0_entry_LE(x45:0, x46:0, x47:0, x48:0, x47:0, x47:0, x47:0) -> f12815_0_entry_LE(x45:0 - 1, x46:0, 1, 1, x50:0, x51:0, x52:0) :|: x50:0 > 0 && x46:0 < x45:0 - 1 && x47:0 > -1 && x46:0 < x45:0 && x50:0 < x47:0 && x48:0 > -1 && x53:0 < x48:0
f12815_0_entry_LE(x54:0, x55:0, x56:0, x57:0, x56:0, x56:0, x56:0) -> f12815_0_entry_LE(x54:0 - 1, x55:0, 1, x59:0, x60:0, x61:0, x62:0) :|: x60:0 > 0 && x55:0 < x54:0 - 1 && x63:0 > 0 && x56:0 > -1 && x55:0 < x54:0 && x60:0 < x56:0 && x57:0 > -1 && x63:0 < x57:0
f12815_0_entry_LE(i4412:0:0, i4215:0:0, o12360[LinkedList$Entry.previous]o12358:0:0, o12360[LinkedList$Entry.next]o12360:0:0, o12358[LinkedList$Entry.previous]o12360:0:0, o12360[LinkedList$Entry.previous]o12360:0:0, o12358[LinkedList$Entry.previous]o12358:0:0) -> f12815_0_entry_LE(i4412:0:0 - 1, i4215:0:0, o12360[LinkedList$Entry.previous]o12569:0:0, o12360[LinkedList$Entry.next]o12360:0:0, o12569[LinkedList$Entry.previous]o12360:0:0, o12360[LinkedList$Entry.previous]o12360:0:0, o12569[LinkedList$Entry.previous]o12569:0:0) :|: o12569[LinkedList$Entry.previous]o12566:0:0 > -1 && i4412:0:0 - 1 > i4215:0:0 && o12569[LinkedList$Entry.previous]o12569:0:0 > o12569[LinkedList$Entry.previous]o12566:0:0 && i4412:0:0 > i4215:0:0 && o12569[LinkedList$Entry.previous]o12566:0:0 < o12358[LinkedList$Entry.previous]o12358:0:0 && o12360[LinkedList$Entry.previous]o12569:0:0 > o12360[LinkedList$Entry.previous]o12358:0:0 && o12360[LinkedList$Entry.previous]o12360:0:0 > 0 && o12569[LinkedList$Entry.previous]o12360:0:0 < o12358[LinkedList$Entry.previous]o12360:0:0 && o12360[LinkedList$Entry.next]o12360:0:0 > 0 && o12358[LinkedList$Entry.previous]o12358:0:0 > 0 && o12360[LinkedList$Entry.previous]o12358:0:0 > 0 && o12358[LinkedList$Entry.previous]o12360:0:0 > 0
f12815_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12815_0_entry_LE(x38:0 - 1, x39:0, 1, 1, 1, 1, 1) :|: x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0
f12815_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12815_0_entry_LE(x30:0 - 1, x31:0, 1, x35:0, 1, 1, 1) :|: x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0

----------------------------------------

(128) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12815_0_entry_LE(INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(129)
Obligation:
Rules:
f12815_0_entry_LE(x45:0, x46:0, x47:0, x48:0, x47:0, x47:0, x47:0) -> f12815_0_entry_LE(c, x46:0, c1, c2, x50:0, x51:0, x52:0) :|: c2 = 1 && (c1 = 1 && c = x45:0 - 1) && (x50:0 > 0 && x46:0 < x45:0 - 1 && x47:0 > -1 && x46:0 < x45:0 && x50:0 < x47:0 && x48:0 > -1 && x53:0 < x48:0)
f12815_0_entry_LE(x54:0, x55:0, x56:0, x57:0, x56:0, x56:0, x56:0) -> f12815_0_entry_LE(c3, x55:0, c4, x59:0, x60:0, x61:0, x62:0) :|: c4 = 1 && c3 = x54:0 - 1 && (x60:0 > 0 && x55:0 < x54:0 - 1 && x63:0 > 0 && x56:0 > -1 && x55:0 < x54:0 && x60:0 < x56:0 && x57:0 > -1 && x63:0 < x57:0)
f12815_0_entry_LE(i4412:0:0, i4215:0:0, o12360[LinkedList$Entry.previous]o12358:0:0, o12360[LinkedList$Entry.next]o12360:0:0, o12358[LinkedList$Entry.previous]o12360:0:0, o12360[LinkedList$Entry.previous]o12360:0:0, o12358[LinkedList$Entry.previous]o12358:0:0) -> f12815_0_entry_LE(c5, i4215:0:0, o12360[LinkedList$Entry.previous]o12569:0:0, o12360[LinkedList$Entry.next]o12360:0:0, o12569[LinkedList$Entry.previous]o12360:0:0, o12360[LinkedList$Entry.previous]o12360:0:0, o12569[LinkedList$Entry.previous]o12569:0:0) :|: c5 = i4412:0:0 - 1 && (o12569[LinkedList$Entry.previous]o12566:0:0 > -1 && i4412:0:0 - 1 > i4215:0:0 && o12569[LinkedList$Entry.previous]o12569:0:0 > o12569[LinkedList$Entry.previous]o12566:0:0 && i4412:0:0 > i4215:0:0 && o12569[LinkedList$Entry.previous]o12566:0:0 < o12358[LinkedList$Entry.previous]o12358:0:0 && o12360[LinkedList$Entry.previous]o12569:0:0 > o12360[LinkedList$Entry.previous]o12358:0:0 && o12360[LinkedList$Entry.previous]o12360:0:0 > 0 && o12569[LinkedList$Entry.previous]o12360:0:0 < o12358[LinkedList$Entry.previous]o12360:0:0 && o12360[LinkedList$Entry.next]o12360:0:0 > 0 && o12358[LinkedList$Entry.previous]o12358:0:0 > 0 && o12360[LinkedList$Entry.previous]o12358:0:0 > 0 && o12358[LinkedList$Entry.previous]o12360:0:0 > 0)
f12815_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12815_0_entry_LE(c6, x39:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x38:0 - 1)))) && (x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0)
f12815_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12815_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

----------------------------------------

(130) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12815_0_entry_LE(x, x1, x2, x3, x4, x5, x6)] = x - x1 + x4

The following rules are decreasing:
f12815_0_entry_LE(x45:0, x46:0, x47:0, x48:0, x47:0, x47:0, x47:0) -> f12815_0_entry_LE(c, x46:0, c1, c2, x50:0, x51:0, x52:0) :|: c2 = 1 && (c1 = 1 && c = x45:0 - 1) && (x50:0 > 0 && x46:0 < x45:0 - 1 && x47:0 > -1 && x46:0 < x45:0 && x50:0 < x47:0 && x48:0 > -1 && x53:0 < x48:0)
f12815_0_entry_LE(x54:0, x55:0, x56:0, x57:0, x56:0, x56:0, x56:0) -> f12815_0_entry_LE(c3, x55:0, c4, x59:0, x60:0, x61:0, x62:0) :|: c4 = 1 && c3 = x54:0 - 1 && (x60:0 > 0 && x55:0 < x54:0 - 1 && x63:0 > 0 && x56:0 > -1 && x55:0 < x54:0 && x60:0 < x56:0 && x57:0 > -1 && x63:0 < x57:0)
f12815_0_entry_LE(i4412:0:0, i4215:0:0, o12360[LinkedList$Entry.previous]o12358:0:0, o12360[LinkedList$Entry.next]o12360:0:0, o12358[LinkedList$Entry.previous]o12360:0:0, o12360[LinkedList$Entry.previous]o12360:0:0, o12358[LinkedList$Entry.previous]o12358:0:0) -> f12815_0_entry_LE(c5, i4215:0:0, o12360[LinkedList$Entry.previous]o12569:0:0, o12360[LinkedList$Entry.next]o12360:0:0, o12569[LinkedList$Entry.previous]o12360:0:0, o12360[LinkedList$Entry.previous]o12360:0:0, o12569[LinkedList$Entry.previous]o12569:0:0) :|: c5 = i4412:0:0 - 1 && (o12569[LinkedList$Entry.previous]o12566:0:0 > -1 && i4412:0:0 - 1 > i4215:0:0 && o12569[LinkedList$Entry.previous]o12569:0:0 > o12569[LinkedList$Entry.previous]o12566:0:0 && i4412:0:0 > i4215:0:0 && o12569[LinkedList$Entry.previous]o12566:0:0 < o12358[LinkedList$Entry.previous]o12358:0:0 && o12360[LinkedList$Entry.previous]o12569:0:0 > o12360[LinkedList$Entry.previous]o12358:0:0 && o12360[LinkedList$Entry.previous]o12360:0:0 > 0 && o12569[LinkedList$Entry.previous]o12360:0:0 < o12358[LinkedList$Entry.previous]o12360:0:0 && o12360[LinkedList$Entry.next]o12360:0:0 > 0 && o12358[LinkedList$Entry.previous]o12358:0:0 > 0 && o12360[LinkedList$Entry.previous]o12358:0:0 > 0 && o12358[LinkedList$Entry.previous]o12360:0:0 > 0)
The following rules are bounded:
f12815_0_entry_LE(x45:0, x46:0, x47:0, x48:0, x47:0, x47:0, x47:0) -> f12815_0_entry_LE(c, x46:0, c1, c2, x50:0, x51:0, x52:0) :|: c2 = 1 && (c1 = 1 && c = x45:0 - 1) && (x50:0 > 0 && x46:0 < x45:0 - 1 && x47:0 > -1 && x46:0 < x45:0 && x50:0 < x47:0 && x48:0 > -1 && x53:0 < x48:0)
f12815_0_entry_LE(x54:0, x55:0, x56:0, x57:0, x56:0, x56:0, x56:0) -> f12815_0_entry_LE(c3, x55:0, c4, x59:0, x60:0, x61:0, x62:0) :|: c4 = 1 && c3 = x54:0 - 1 && (x60:0 > 0 && x55:0 < x54:0 - 1 && x63:0 > 0 && x56:0 > -1 && x55:0 < x54:0 && x60:0 < x56:0 && x57:0 > -1 && x63:0 < x57:0)
f12815_0_entry_LE(i4412:0:0, i4215:0:0, o12360[LinkedList$Entry.previous]o12358:0:0, o12360[LinkedList$Entry.next]o12360:0:0, o12358[LinkedList$Entry.previous]o12360:0:0, o12360[LinkedList$Entry.previous]o12360:0:0, o12358[LinkedList$Entry.previous]o12358:0:0) -> f12815_0_entry_LE(c5, i4215:0:0, o12360[LinkedList$Entry.previous]o12569:0:0, o12360[LinkedList$Entry.next]o12360:0:0, o12569[LinkedList$Entry.previous]o12360:0:0, o12360[LinkedList$Entry.previous]o12360:0:0, o12569[LinkedList$Entry.previous]o12569:0:0) :|: c5 = i4412:0:0 - 1 && (o12569[LinkedList$Entry.previous]o12566:0:0 > -1 && i4412:0:0 - 1 > i4215:0:0 && o12569[LinkedList$Entry.previous]o12569:0:0 > o12569[LinkedList$Entry.previous]o12566:0:0 && i4412:0:0 > i4215:0:0 && o12569[LinkedList$Entry.previous]o12566:0:0 < o12358[LinkedList$Entry.previous]o12358:0:0 && o12360[LinkedList$Entry.previous]o12569:0:0 > o12360[LinkedList$Entry.previous]o12358:0:0 && o12360[LinkedList$Entry.previous]o12360:0:0 > 0 && o12569[LinkedList$Entry.previous]o12360:0:0 < o12358[LinkedList$Entry.previous]o12360:0:0 && o12360[LinkedList$Entry.next]o12360:0:0 > 0 && o12358[LinkedList$Entry.previous]o12358:0:0 > 0 && o12360[LinkedList$Entry.previous]o12358:0:0 > 0 && o12358[LinkedList$Entry.previous]o12360:0:0 > 0)
f12815_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12815_0_entry_LE(c6, x39:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x38:0 - 1)))) && (x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0)
f12815_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12815_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

----------------------------------------

(131)
Obligation:
Rules:
f12815_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12815_0_entry_LE(c6, x39:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x38:0 - 1)))) && (x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0)
f12815_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12815_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

----------------------------------------

(132) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12815_0_entry_LE(x, x1, x2, x3, x4, x5, x6)] = -2 + x - x1

The following rules are decreasing:
f12815_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12815_0_entry_LE(c6, x39:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x38:0 - 1)))) && (x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0)
f12815_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12815_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)
The following rules are bounded:
f12815_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12815_0_entry_LE(c6, x39:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x38:0 - 1)))) && (x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0)
f12815_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12815_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

----------------------------------------

(133)
YES
