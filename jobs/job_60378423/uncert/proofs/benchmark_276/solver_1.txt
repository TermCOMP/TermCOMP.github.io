NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/7vskp.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCNonTerm [COMPLETE, 64 ms]
(4) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class Loop {
    public static void main(String[] args) {
	int a = 5;
	int b = 3;
	for (int i = 0; i < 10; i += 0) {}

	test(a, b);
    }

    private static int test(int a, int b) {
	return a * b;
    }
}


----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class Loop {
    public static void main(String[] args) {
	int a = 5;
	int b = 3;
	for (int i = 0; i < 10; i += 0) {}

	test(a, b);
    }

    private static int test(int a, int b) {
	return a * b;
    }
}


----------------------------------------

(3) JBCNonTerm (COMPLETE)
Constructed a run with a repetition. States 6 and 11 are repetitions (when considering only the interesting positions []).

0:<Loop.main||0: push 5|| - || ->
YES:  (JL1)
1:<Loop.main||1: store INT to #1|| - ||5>
YES:  (JL1)
2:<Loop.main||2: push 3||#1: 5|| ->
YES:  (JL1)
3:<Loop.main||3: store INT to #2||#1: 5||3>
YES:  (JL1)
4:<Loop.main||4: push 0||#1: 5, #2: 3|| ->
YES:  (JL1)
5:<Loop.main||5: store INT to #3||#1: 5, #2: 3||0>
YES:  (JL1)
6:<Loop.main||6: load INT #3||#1: 5, #2: 3, #3: 0|| ->
YES:  (JL1)
7:<Loop.main||7: push 10||#1: 5, #2: 3, #3: 0||0>
YES:  (JL1)
8:<Loop.main||9: GE||#1: 5, #2: 3, #3: 0||0, 10>
YES:  (JL1)
9:<Loop.main||12: increment #3 by 0||#1: 5, #2: 3, #3: 0|| ->
YES:  (JL1)
10:<Loop.main||15: jmp||#1: 5, #2: 3, #3: 0|| ->
YES:  (JL1)
11:<Loop.main||6: load INT #3||#1: 5, #2: 3, #3: 0|| ->
YES:  (JL1)

----------------------------------------

(4)
NO
