YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/OODX4.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 52 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 1934 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) JBCTerminationSCC
        (8) SCCToIRSProof [SOUND, 274 ms]
        (9) IRSwT
        (10) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (11) IRSwT
        (12) IRSwTTerminationDigraphProof [EQUIVALENT, 25 ms]
        (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) TempFilterProof [SOUND, 20 ms]
        (17) IntTRS
        (18) RankingReductionPairProof [EQUIVALENT, 11 ms]
        (19) YES
    (20) JBCTerminationSCC
        (21) SCCToIRSProof [SOUND, 185 ms]
        (22) IRSwT
        (23) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (24) IRSwT
        (25) IRSwTTerminationDigraphProof [EQUIVALENT, 142 ms]
        (26) IRSwT
        (27) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (28) IRSwT
        (29) TempFilterProof [SOUND, 18 ms]
        (30) IntTRS
        (31) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (32) IntTRS
        (33) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (34) YES
    (35) JBCTerminationSCC
        (36) SCCToIRSProof [SOUND, 183 ms]
        (37) IRSwT
        (38) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (39) IRSwT
        (40) IRSwTTerminationDigraphProof [EQUIVALENT, 147 ms]
        (41) IRSwT
        (42) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (43) IRSwT
        (44) TempFilterProof [SOUND, 12 ms]
        (45) IntTRS
        (46) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (47) YES
    (48) JBCTerminationSCC
        (49) SCCToIRSProof [SOUND, 92 ms]
        (50) IRSwT
        (51) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (52) IRSwT
        (53) IRSwTTerminationDigraphProof [EQUIVALENT, 20 ms]
        (54) IRSwT
        (55) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (56) IRSwT
        (57) TempFilterProof [SOUND, 31 ms]
        (58) IntTRS
        (59) PolynomialOrderProcessor [EQUIVALENT, 6 ms]
        (60) IntTRS
        (61) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (62) YES
    (63) JBCTerminationSCC
        (64) SCCToIRSProof [SOUND, 73 ms]
        (65) IRSwT
        (66) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (67) IRSwT
        (68) IRSwTTerminationDigraphProof [EQUIVALENT, 13 ms]
        (69) IRSwT
        (70) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (71) IRSwT
        (72) TempFilterProof [SOUND, 11 ms]
        (73) IntTRS
        (74) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (75) YES
    (76) JBCTerminationSCC
        (77) SCCToIRSProof [SOUND, 60 ms]
        (78) IRSwT
        (79) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (80) IRSwT
        (81) IRSwTTerminationDigraphProof [EQUIVALENT, 121 ms]
        (82) IRSwT
        (83) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (84) IRSwT
        (85) TempFilterProof [SOUND, 25 ms]
        (86) IntTRS
        (87) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (88) IntTRS
        (89) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (90) YES
    (91) JBCTerminationSCC
        (92) SCCToIRSProof [SOUND, 77 ms]
        (93) IRSwT
        (94) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (95) IRSwT
        (96) IRSwTTerminationDigraphProof [EQUIVALENT, 110 ms]
        (97) IRSwT
        (98) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (99) IRSwT
        (100) TempFilterProof [SOUND, 22 ms]
        (101) IntTRS
        (102) PolynomialOrderProcessor [EQUIVALENT, 7 ms]
        (103) IntTRS
        (104) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (105) YES
    (106) JBCTerminationSCC
        (107) SCCToIRSProof [SOUND, 153 ms]
        (108) IRSwT
        (109) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (110) IRSwT
        (111) IRSwTTerminationDigraphProof [EQUIVALENT, 153 ms]
        (112) IRSwT
        (113) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (114) IRSwT
        (115) TempFilterProof [SOUND, 20 ms]
        (116) IntTRS
        (117) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (118) IntTRS
        (119) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (120) YES
    (121) JBCTerminationSCC
        (122) SCCToIRSProof [SOUND, 161 ms]
        (123) IRSwT
        (124) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (125) IRSwT
        (126) IRSwTTerminationDigraphProof [EQUIVALENT, 147 ms]
        (127) IRSwT
        (128) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (129) IRSwT
        (130) TempFilterProof [SOUND, 23 ms]
        (131) IntTRS
        (132) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (133) IntTRS
        (134) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (135) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Collection</tt>
 * interface, to minimize the effort required to implement this interface. <p>
 *
 * To implement an unmodifiable collection, the programmer needs only to
 * extend this class and provide implementations for the <tt>iterator</tt> and
 * <tt>size</tt> methods.  (The iterator returned by the <tt>iterator</tt>
 * method must implement <tt>hasNext</tt> and <tt>next</tt>.)<p>
 *
 * To implement a modifiable collection, the programmer must additionally
 * override this class's <tt>add</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by the
 * <tt>iterator</tt> method must additionally implement its <tt>remove</tt>
 * method.<p>
 *
 * The programmer should generally provide a void (no argument) and
 * <tt>Collection</tt> constructor, as per the recommendation in the
 * <tt>Collection</tt> interface specification.<p>
 *
 * The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if
 * the collection being implemented admits a more efficient implementation.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractCollection<E> implements Collection<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractCollection() {
    }

    // Query Operations

    /**
     * Returns an iterator over the elements contained in this collection.
     *
     * @return an iterator over the elements contained in this collection
     */
    public abstract Iterator<E> iterator();

    public abstract int size();

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the elements in the collection,
     * checking each element in turn for equality with the specified element.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean contains(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return true;
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return true;
        }
        return false;
    }

    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     */
    public boolean add(E e) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the collection looking for the
     * specified element.  If it finds the element, it removes the element
     * from the collection using the iterator's remove method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's iterator method does not implement the <tt>remove</tt>
     * method and this collection contains the specified object.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public boolean remove(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext()) {
                if (e.next()==null) {
                    e.remove();
                    return true;
                }
            }
        } else {
            while (e.hasNext()) {
                if (o.equals(e.next())) {
                    e.remove();
                    return true;
                }
            }
        }
        return false;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection,
     * checking each element returned by the iterator in turn to see
     * if it's contained in this collection.  If all elements are so
     * contained <tt>true</tt> is returned, otherwise <tt>false</tt>.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @see #contains(Object)
     */
    public boolean containsAll(Collection<?> c) {
        Iterator<?> e = c.iterator();
        while (e.hasNext())
            if (!contains(e.next()))
                return false;
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection, and adds
     * each object returned by the iterator to this collection, in turn.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> unless <tt>add</tt> is
     * overridden (assuming the specified collection is non-empty).
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     *
     * @see #add(Object)
     */
    public boolean addAll(Collection<? extends E> c) {
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            if (add(e.next()))
                modified = true;
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's so contained, it's removed from
     * this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements in common with the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;
        Iterator<?> e = iterator();
        while (e.hasNext()) {
            if (c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's not so contained, it's removed
     * from this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements not present in the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean retainAll(Collection<?> c) {
        boolean modified = false;
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            if (!c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, removing each
     * element using the <tt>Iterator.remove</tt> operation.  Most
     * implementations will probably choose to override this method for
     * efficiency.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's <tt>iterator</tt> method does not implement the
     * <tt>remove</tt> method and this collection is non-empty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            e.next();
            e.remove();
        }
    }


    //  String conversion

    /**
     * Returns a string representation of this collection.  The string
     * representation consists of a list of the collection's elements in the
     * order they are returned by its iterator, enclosed in square brackets
     * (<tt>"[]"</tt>).  Adjacent elements are separated by the characters
     * <tt>", "</tt> (comma and space).  Elements are converted to strings as
     * by {@link String#valueOf(Object)}.
     *
     * @return a string representation of this collection
     */
    public String toString() {
        Iterator<E> i = iterator();
        if (! i.hasNext())
            return "[]";

        String sb = "";
        sb = sb + "[";
        for (;;) {
            E e = i.next();
            sb = sb + (e == this ? "(this Collection)" : e);
            if (! i.hasNext()) {
                sb = sb + "]";
		return sb;
            }
            sb = sb + ", ";
        }
    }

}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the {@link List}
 * interface to minimize the effort required to implement this interface
 * backed by a "random access" data store (such as an array).  For sequential
 * access data (such as a linked list), {@link AbstractSequentialList} should
 * be used in preference to this class.
 *
 * <p>To implement an unmodifiable list, the programmer needs only to extend
 * this class and provide implementations for the {@link #get(int)} and
 * {@link List#size() size()} methods.
 *
 * <p>To implement a modifiable list, the programmer must additionally
 * override the {@link #set(int, Object) set(int, E)} method (which otherwise
 * throws an {@code UnsupportedOperationException}).  If the list is
 * variable-size the programmer must additionally override the
 * {@link #add(int, Object) add(int, E)} and {@link #remove(int)} methods.
 *
 * <p>The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the {@link Collection} interface
 * specification.
 *
 * <p>Unlike the other abstract collection implementations, the programmer does
 * <i>not</i> have to provide an iterator implementation; the iterator and
 * list iterator are implemented by this class, on top of the "random access"
 * methods:
 * {@link #get(int)},
 * {@link #set(int, Object) set(int, E)},
 * {@link #add(int, Object) add(int, E)} and
 * {@link #remove(int)}.
 *
 * <p>The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if the
 * collection being implemented admits a more efficient implementation.
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @since 1.2
 */

public abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractList() {
    }

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * <p>This implementation calls {@code add(size(), e)}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @param e element to be appended to this list
     * @return {@code true} (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the {@code add} operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    public boolean add(E e) {
        add(size(), e);
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    abstract public E get(int index);

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        throw new UnsupportedOperationException();
    }


    // Search Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator (with
     * {@code listIterator()}).  Then, it iterates over the list until the
     * specified element is found or the end of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int indexOf(Object o) {
        ListIterator<E> e = listIterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return e.previousIndex();
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return e.previousIndex();
        }
        return -1;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator that points to the end
     * of the list (with {@code listIterator(size())}).  Then, it iterates
     * backwards over the list until the specified element is found, or the
     * beginning of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int lastIndexOf(Object o) {
        ListIterator<E> e = listIterator(size());
        if (o==null) {
            while (e.hasPrevious())
                if (e.previous()==null)
                    return e.nextIndex();
        } else {
            while (e.hasPrevious())
                if (o.equals(e.previous()))
                    return e.nextIndex();
        }
        return -1;
    }


    // Bulk Operations

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * <p>This implementation calls {@code removeRange(0, size())}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless {@code remove(int
     * index)} or {@code removeRange(int fromIndex, int toIndex)} is
     * overridden.
     *
     * @throws UnsupportedOperationException if the {@code clear} operation
     *         is not supported by this list
     */
    public void clear() {
        removeRange(0, size());
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation gets an iterator over the specified collection
     * and iterates over it, inserting the elements obtained from the
     * iterator into this list at the appropriate position, one at a time,
     * using {@code add(int, E)}.
     * Many implementations will override this method for efficiency.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            add(index++, e.next());
            modified = true;
        }
        return modified;
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * <p>This implementation returns a straightforward implementation of the
     * iterator interface, relying on the backing list's {@code size()},
     * {@code get(int)}, and {@code remove(int)} methods.
     *
     * <p>Note that the iterator returned by this method will throw an
     * {@link UnsupportedOperationException} in response to its
     * {@code remove} method unless the list's {@code remove(int)} method is
     * overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification
     * for the (protected) {@link #modCount} field.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    public Iterator<E> iterator() {
        return new Itr();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns {@code listIterator(0)}.
     *
     * @see #listIterator(int)
     */
    public ListIterator<E> listIterator() {
        return listIterator(0);
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a straightforward implementation of the
     * {@code ListIterator} interface that extends the implementation of the
     * {@code Iterator} interface returned by the {@code iterator()} method.
     * The {@code ListIterator} implementation relies on the backing list's
     * {@code get(int)}, {@code set(int, E)}, {@code add(int, E)}
     * and {@code remove(int)} methods.
     *
     * <p>Note that the list iterator returned by this implementation will
     * throw an {@link UnsupportedOperationException} in response to its
     * {@code remove}, {@code set} and {@code add} methods unless the
     * list's {@code remove(int)}, {@code set(int, E)}, and
     * {@code add(int, E)} methods are overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification for
     * the (protected) {@link #modCount} field.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public ListIterator<E> listIterator(final int index) {
        rangeCheckForAdd(index);

        return new ListItr(index);
    }

    private class Itr implements Iterator<E> {
        /**
         * Index of element to be returned by subsequent call to next.
         */
        int cursor = 0;

        /**
         * Index of element returned by most recent call to next or
         * previous.  Reset to -1 if this element is deleted by a call
         * to remove.
         */
        int lastRet = -1;

        /**
         * The modCount value that the iterator believes that the backing
         * List should have.  If this expectation is violated, the iterator
         * has detected concurrent modification.
         */
        int expectedModCount = modCount;

        public boolean hasNext() {
            return cursor != size();
        }

        public E next() {
            checkForComodification();
            try {
                int i = cursor;
                E next = get(i);
                lastRet = i;
                cursor = i + 1;
                return next;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public void remove() {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.remove(lastRet);
                if (lastRet < cursor)
                    cursor--;
                lastRet = -1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException e) {
                throw new ConcurrentModificationException();
            }
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private class ListItr extends Itr implements ListIterator<E> {
        ListItr(int index) {
            cursor = index;
        }

        public boolean hasPrevious() {
            return cursor != 0;
        }

        public E previous() {
            checkForComodification();
            try {
                int i = cursor - 1;
                E previous = get(i);
                lastRet = cursor = i;
                return previous;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public int nextIndex() {
            return cursor;
        }

        public int previousIndex() {
            return cursor-1;
        }

        public void set(E e) {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.set(lastRet, e);
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }

        public void add(E e) {
            checkForComodification();

            try {
                int i = cursor;
                AbstractList.this.add(i, e);
                lastRet = -1;
                cursor = i + 1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a list that subclasses
     * {@code AbstractList}.  The subclass stores, in private fields, the
     * offset of the subList within the backing list, the size of the subList
     * (which can change over its lifetime), and the expected
     * {@code modCount} value of the backing list.  There are two variants
     * of the subclass, one of which implements {@code RandomAccess}.
     * If this list implements {@code RandomAccess} the returned list will
     * be an instance of the subclass that implements {@code RandomAccess}.
     *
     * <p>The subclass's {@code set(int, E)}, {@code get(int)},
     * {@code add(int, E)}, {@code remove(int)}, {@code addAll(int,
     * Collection)} and {@code removeRange(int, int)} methods all
     * delegate to the corresponding methods on the backing abstract list,
     * after bounds-checking the index and adjusting for the offset.  The
     * {@code addAll(Collection c)} method merely returns {@code addAll(size,
     * c)}.
     *
     * <p>The {@code listIterator(int)} method returns a "wrapper object"
     * over a list iterator on the backing list, which is created with the
     * corresponding method on the backing list.  The {@code iterator} method
     * merely returns {@code listIterator()}, and the {@code size} method
     * merely returns the subclass's {@code size} field.
     *
     * <p>All methods first check to see if the actual {@code modCount} of
     * the backing list is equal to its expected value, and throw a
     * {@code ConcurrentModificationException} if it is not.
     *
     * @throws IndexOutOfBoundsException if an endpoint index value is out of range
     *         {@code (fromIndex < 0 || toIndex > size)}
     * @throws IllegalArgumentException if the endpoint indices are out of order
     *         {@code (fromIndex > toIndex)}
     */
    public List<E> subList(int fromIndex, int toIndex) {
        return (this instanceof RandomAccess ?
                new RandomAccessSubList<E>(this, fromIndex, toIndex) :
                new SubList<E>(this, fromIndex, toIndex));
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * {@code true} if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements {@code e1} and
     * {@code e2} are <i>equal</i> if {@code (e1==null ? e2==null :
     * e1.equals(e2))}.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.<p>
     *
     * This implementation first checks if the specified object is this
     * list. If so, it returns {@code true}; if not, it checks if the
     * specified object is a list. If not, it returns {@code false}; if so,
     * it iterates over both lists, comparing corresponding pairs of elements.
     * If any comparison returns {@code false}, this method returns
     * {@code false}.  If either iterator runs out of elements before the
     * other it returns {@code false} (as the lists are of unequal length);
     * otherwise it returns {@code true} when the iterations complete.
     *
     * @param o the object to be compared for equality with this list
     * @return {@code true} if the specified object is equal to this list
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;
        if (!(o instanceof List))
            return false;

        ListIterator<E> e1 = listIterator();
        ListIterator e2 = ((List) o).listIterator();
        while(e1.hasNext() && e2.hasNext()) {
            E o1 = e1.next();
            Object o2 = e2.next();
            if (!(o1==null ? o2==null : o1.equals(o2)))
                return false;
        }
        return !(e1.hasNext() || e2.hasNext());
    }

    /**
     * Returns the hash code value for this list.
     *
     * <p>This implementation uses exactly the code that is used to define the
     * list hash function in the documentation for the {@link List#hashCode}
     * method.
     *
     * @return the hash code value for this list
     */
    public int hashCode() {
        int hashCode = 1;
        Iterator<E> it = this.iterator();
        while (it.hasNext()) {
            E e = it.next();
            hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
        }
        return hashCode;
    }

    /**
     * Removes from this list all of the elements whose index is between
     * {@code fromIndex}, inclusive, and {@code toIndex}, exclusive.
     * Shifts any succeeding elements to the left (reduces their index).
     * This call shortens the list by {@code (toIndex - fromIndex)} elements.
     * (If {@code toIndex==fromIndex}, this operation has no effect.)
     *
     * <p>This method is called by the {@code clear} operation on this list
     * and its subLists.  Overriding this method to take advantage of
     * the internals of the list implementation can <i>substantially</i>
     * improve the performance of the {@code clear} operation on this list
     * and its subLists.
     *
     * <p>This implementation gets a list iterator positioned before
     * {@code fromIndex}, and repeatedly calls {@code ListIterator.next}
     * followed by {@code ListIterator.remove} until the entire range has
     * been removed.  <b>Note: if {@code ListIterator.remove} requires linear
     * time, this implementation requires quadratic time.</b>
     *
     * @param fromIndex index of first element to be removed
     * @param toIndex index after last element to be removed
     */
    protected void removeRange(int fromIndex, int toIndex) {
        ListIterator<E> it = listIterator(fromIndex);
        for (int i=0, n=toIndex-fromIndex; i<n; i++) {
            it.next();
            it.remove();
        }
    }

    /**
     * The number of times this list has been <i>structurally modified</i>.
     * Structural modifications are those that change the size of the
     * list, or otherwise perturb it in such a fashion that iterations in
     * progress may yield incorrect results.
     *
     * <p>This field is used by the iterator and list iterator implementation
     * returned by the {@code iterator} and {@code listIterator} methods.
     * If the value of this field changes unexpectedly, the iterator (or list
     * iterator) will throw a {@code ConcurrentModificationException} in
     * response to the {@code next}, {@code remove}, {@code previous},
     * {@code set} or {@code add} operations.  This provides
     * <i>fail-fast</i> behavior, rather than non-deterministic behavior in
     * the face of concurrent modification during iteration.
     *
     * <p><b>Use of this field by subclasses is optional.</b> If a subclass
     * wishes to provide fail-fast iterators (and list iterators), then it
     * merely has to increment this field in its {@code add(int, E)} and
     * {@code remove(int)} methods (and any other methods that it overrides
     * that result in structural modifications to the list).  A single call to
     * {@code add(int, E)} or {@code remove(int)} must add no more than
     * one to this field, or the iterators (and list iterators) will throw
     * bogus {@code ConcurrentModificationExceptions}.  If an implementation
     * does not wish to provide fail-fast iterators, this field may be
     * ignored.
     */
    protected transient int modCount = 0;

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size())
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }
}

class SubList<E> extends AbstractList<E> {
    private final AbstractList<E> l;
    private final int offset;
    private int size;

    SubList(AbstractList<E> list, int fromIndex, int toIndex) {
        if (fromIndex < 0)
            throw new IndexOutOfBoundsException();
        if (toIndex > list.size())
            throw new IndexOutOfBoundsException();
        if (fromIndex > toIndex)
            throw new IllegalArgumentException();
        l = list;
        offset = fromIndex;
        size = toIndex - fromIndex;
        this.modCount = l.modCount;
    }

    public E set(int index, E element) {
        rangeCheck(index);
        checkForComodification();
        return l.set(index+offset, element);
    }

    public E get(int index) {
        rangeCheck(index);
        checkForComodification();
        return l.get(index+offset);
    }

    public int size() {
        checkForComodification();
        return size;
    }

    public void add(int index, E element) {
        rangeCheckForAdd(index);
        checkForComodification();
        l.add(index+offset, element);
        this.modCount = l.modCount;
        size++;
    }

    public E remove(int index) {
        rangeCheck(index);
        checkForComodification();
        E result = l.remove(index+offset);
        this.modCount = l.modCount;
        size--;
        return result;
    }

    protected void removeRange(int fromIndex, int toIndex) {
        checkForComodification();
        l.removeRange(fromIndex+offset, toIndex+offset);
        this.modCount = l.modCount;
        size -= (toIndex-fromIndex);
    }

    public boolean addAll(Collection<? extends E> c) {
        return addAll(size, c);
    }

    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        int cSize = c.size();
        if (cSize==0)
            return false;

        checkForComodification();
        l.addAll(offset+index, c);
        this.modCount = l.modCount;
        size += cSize;
        return true;
    }

    public Iterator<E> iterator() {
        return listIterator();
    }

    public ListIterator<E> listIterator(final int index) {
        checkForComodification();
        rangeCheckForAdd(index);

        return new ListIterator<E>() {
            private final ListIterator<E> i = l.listIterator(index+offset);

            public boolean hasNext() {
                return nextIndex() < size;
            }

            public E next() {
                if (hasNext())
                    return i.next();
                else
                    throw new NoSuchElementException();
            }

            public boolean hasPrevious() {
                return previousIndex() >= 0;
            }

            public E previous() {
                if (hasPrevious())
                    return i.previous();
                else
                    throw new NoSuchElementException();
            }

            public int nextIndex() {
                return i.nextIndex() - offset;
            }

            public int previousIndex() {
                return i.previousIndex() - offset;
            }

            public void remove() {
                i.remove();
                SubList.this.modCount = l.modCount;
                size--;
            }

            public void set(E e) {
                i.set(e);
            }

            public void add(E e) {
                i.add(e);
                SubList.this.modCount = l.modCount;
                size++;
            }
        };
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new SubList<E>(this, fromIndex, toIndex);
    }

    private void rangeCheck(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }

    private void checkForComodification() {
        if (this.modCount != l.modCount)
            throw new ConcurrentModificationException();
    }
}

class RandomAccessSubList<E> extends SubList<E> implements RandomAccess {
    RandomAccessSubList(AbstractList<E> list, int fromIndex, int toIndex) {
        super(list, fromIndex, toIndex);
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new RandomAccessSubList<E>(this, fromIndex, toIndex);
    }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>List</tt>
 * interface to minimize the effort required to implement this interface
 * backed by a "sequential access" data store (such as a linked list).  For
 * random access data (such as an array), <tt>AbstractList</tt> should be used
 * in preference to this class.<p>
 *
 * This class is the opposite of the <tt>AbstractList</tt> class in the sense
 * that it implements the "random access" methods (<tt>get(int index)</tt>,
 * <tt>set(int index, E element)</tt>, <tt>add(int index, E element)</tt> and
 * <tt>remove(int index)</tt>) on top of the list's list iterator, instead of
 * the other way around.<p>
 *
 * To implement a list the programmer needs only to extend this class and
 * provide implementations for the <tt>listIterator</tt> and <tt>size</tt>
 * methods.  For an unmodifiable list, the programmer need only implement the
 * list iterator's <tt>hasNext</tt>, <tt>next</tt>, <tt>hasPrevious</tt>,
 * <tt>previous</tt> and <tt>index</tt> methods.<p>
 *
 * For a modifiable list the programmer should additionally implement the list
 * iterator's <tt>set</tt> method.  For a variable-size list the programmer
 * should additionally implement the list iterator's <tt>remove</tt> and
 * <tt>add</tt> methods.<p>
 *
 * The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the <tt>Collection</tt> interface
 * specification.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see List
 * @see AbstractList
 * @see AbstractCollection
 * @since 1.2
 */

public abstract class AbstractSequentialList<E> extends AbstractList<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractSequentialList() {
    }

    /**
     * Returns the element at the specified position in this list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the element using <tt>ListIterator.next</tt> and returns it.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        try {
            return listIterator(index).next();
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the current element using <tt>ListIterator.next</tt> and replaces it
     * with <tt>ListIterator.set</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>set</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        try {
            ListIterator<E> e = listIterator(index);
            E oldVal = e.next();
            e.set(element);
            return oldVal;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it
     * inserts the specified element with <tt>ListIterator.add</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>add</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        try {
            listIterator(index).add(element);
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it removes
     * the element with <tt>ListIterator.remove</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>remove</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        try {
            ListIterator<E> e = listIterator(index);
            E outCast = e.next();
            e.remove();
            return outCast;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Bulk Operations

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * <p>This implementation gets an iterator over the specified collection and
     * a list iterator over this list pointing to the indexed element (with
     * <tt>listIterator(index)</tt>).  Then, it iterates over the specified
     * collection, inserting the elements obtained from the iterator into this
     * list, one at a time, using <tt>ListIterator.add</tt> followed by
     * <tt>ListIterator.next</tt> (to skip over the added element).
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator returned by
     * the <tt>listIterator</tt> method does not implement the <tt>add</tt>
     * operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        try {
            boolean modified = false;
            ListIterator<E> e1 = listIterator(index);
            Iterator<? extends E> e2 = c.iterator();
            while (e2.hasNext()) {
                e1.add(e2.next());
                modified = true;
            }
            return modified;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list (in proper
     * sequence).<p>
     *
     * This implementation merely returns a list iterator over the list.
     *
     * @return an iterator over the elements in this list (in proper sequence)
     */
    public Iterator<E> iterator() {
        return listIterator();
    }

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @param  index index of first element to be returned from the list
     *         iterator (by a call to the <code>next</code> method)
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public abstract ListIterator<E> listIterator(int index);
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * The root interface in the <i>collection hierarchy</i>.  A collection
 * represents a group of objects, known as its <i>elements</i>.  Some
 * collections allow duplicate elements and others do not.  Some are ordered
 * and others unordered.  The JDK does not provide any <i>direct</i>
 * implementations of this interface: it provides implementations of more
 * specific subinterfaces like <tt>Set</tt> and <tt>List</tt>.  This interface
 * is typically used to pass collections around and manipulate them where
 * maximum generality is desired.
 *
 * <p><i>Bags</i> or <i>multisets</i> (unordered collections that may contain
 * duplicate elements) should implement this interface directly.
 *
 * <p>All general-purpose <tt>Collection</tt> implementation classes (which
 * typically implement <tt>Collection</tt> indirectly through one of its
 * subinterfaces) should provide two "standard" constructors: a void (no
 * arguments) constructor, which creates an empty collection, and a
 * constructor with a single argument of type <tt>Collection</tt>, which
 * creates a new collection with the same elements as its argument.  In
 * effect, the latter constructor allows the user to copy any collection,
 * producing an equivalent collection of the desired implementation type.
 * There is no way to enforce this convention (as interfaces cannot contain
 * constructors) but all of the general-purpose <tt>Collection</tt>
 * implementations in the Java platform libraries comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the collection on which they operate, are specified to
 * throw <tt>UnsupportedOperationException</tt> if this collection does not
 * support the operation.  If this is the case, these methods may, but are not
 * required to, throw an <tt>UnsupportedOperationException</tt> if the
 * invocation would have no effect on the collection.  For example, invoking
 * the {@link #addAll(Collection)} method on an unmodifiable collection may,
 * but is not required to, throw the exception if the collection to be added
 * is empty.
 *
 * <p>Some collection implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the collection may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>It is up to each collection to determine its own synchronization
 * policy.  In the absence of a stronger guarantee by the
 * implementation, undefined behavior may result from the invocation
 * of any method on a collection that is being mutated by another
 * thread; this includes direct invocations, passing the collection to
 * a method that might perform invocations, and using an existing
 * iterator to examine the collection.
 *
 * <p>Many methods in Collections Framework interfaces are defined in
 * terms of the {@link Object#equals(Object) equals} method.  For example,
 * the specification for the {@link #contains(Object) contains(Object o)}
 * method says: "returns <tt>true</tt> if and only if this collection
 * contains at least one element <tt>e</tt> such that
 * <tt>(o==null ? e==null : o.equals(e))</tt>."  This specification should
 * <i>not</i> be construed to imply that invoking <tt>Collection.contains</tt>
 * with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be
 * invoked for any element <tt>e</tt>.  Implementations are free to implement
 * optimizations whereby the <tt>equals</tt> invocation is avoided, for
 * example, by first comparing the hash codes of the two elements.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see     Set
 * @see     List
 * @see     Map
 * @see     SortedSet
 * @see     SortedMap
 * @see     HashSet
 * @see     TreeSet
 * @see     ArrayList
 * @see     LinkedList
 * @see     Vector
 * @see     Collections
 * @see     Arrays
 * @see     AbstractCollection
 * @since 1.2
 */

public interface Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this collection.  If this collection
     * contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this collection
     */
    int size();

    /**
     * Returns <tt>true</tt> if this collection contains no elements.
     *
     * @return <tt>true</tt> if this collection contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this collection contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this collection
     * contains at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this collection is to be tested
     * @return <tt>true</tt> if this collection contains the specified
     *         element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this collection.  There are no
     * guarantees concerning the order in which the elements are returned
     * (unless this collection is an instance of some class that provides a
     * guarantee).
     *
     * @return an <tt>Iterator</tt> over the elements in this collection
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Ensures that this collection contains the specified element (optional
     * operation).  Returns <tt>true</tt> if this collection changed as a
     * result of the call.  (Returns <tt>false</tt> if this collection does
     * not permit duplicates and already contains the specified element.)<p>
     *
     * Collections that support this operation may place limitations on what
     * elements may be added to this collection.  In particular, some
     * collections will refuse to add <tt>null</tt> elements, and others will
     * impose restrictions on the type of elements that may be added.
     * Collection classes should clearly specify in their documentation any
     * restrictions on what elements may be added.<p>
     *
     * If a collection refuses to add a particular element for any reason
     * other than that it already contains the element, it <i>must</i> throw
     * an exception (rather than returning <tt>false</tt>).  This preserves
     * the invariant that a collection always contains the specified element
     * after this call returns.
     *
     * @param e element whose presence in this collection is to be ensured
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this collection
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements
     * @throws IllegalArgumentException if some property of the element
     *         prevents it from being added to this collection
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to insertion restrictions
     */
    boolean add(E e);

    /**
     * Removes a single instance of the specified element from this
     * collection, if it is present (optional operation).  More formally,
     * removes an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this collection contains one or more such elements.  Returns
     * <tt>true</tt> if this collection contained the specified element (or
     * equivalently, if this collection changed as a result of the call).
     *
     * @param o element to be removed from this collection, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this collection
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this collection contains all of the elements
     * in the specified collection.
     *
     * @param  c collection to be checked for containment in this collection
     * @return <tt>true</tt> if this collection contains all of the elements
     *         in the specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         collection (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this collection
     * (optional operation).  The behavior of this operation is undefined if
     * the specified collection is modified while the operation is in progress.
     * (This implies that the behavior of this call is undefined if the
     * specified collection is this collection, and this collection is
     * nonempty.)
     *
     * @param c collection containing elements to be added to this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this collection
     * @throws NullPointerException if the specified collection contains a
     *         null element and this collection does not permit null elements,
     *         or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this
     *         collection
     * @throws IllegalStateException if not all the elements can be added at
     *         this time due to insertion restrictions
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Removes all of this collection's elements that are also contained in the
     * specified collection (optional operation).  After this call returns,
     * this collection will contain no elements in common with the specified
     * collection.
     *
     * @param c collection containing elements to be removed from this collection
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> method
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not support
     *         null elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this collection that are contained in the
     * specified collection (optional operation).  In other words, removes from
     * this collection all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this collection (optional operation).
     * The collection will be empty after this method returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this collection
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this collection for equality. <p>
     *
     * While the <tt>Collection</tt> interface adds no stipulations to the
     * general contract for the <tt>Object.equals</tt>, programmers who
     * implement the <tt>Collection</tt> interface "directly" (in other words,
     * create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt>
     * or a <tt>List</tt>) must exercise care if they choose to override the
     * <tt>Object.equals</tt>.  It is not necessary to do so, and the simplest
     * course of action is to rely on <tt>Object</tt>'s implementation, but
     * the implementor may wish to implement a "value comparison" in place of
     * the default "reference comparison."  (The <tt>List</tt> and
     * <tt>Set</tt> interfaces mandate such value comparisons.)<p>
     *
     * The general contract for the <tt>Object.equals</tt> method states that
     * equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and
     * only if <tt>b.equals(a)</tt>).  The contracts for <tt>List.equals</tt>
     * and <tt>Set.equals</tt> state that lists are only equal to other lists,
     * and sets to other sets.  Thus, a custom <tt>equals</tt> method for a
     * collection class that implements neither the <tt>List</tt> nor
     * <tt>Set</tt> interface must return <tt>false</tt> when this collection
     * is compared to any list or set.  (By the same logic, it is not possible
     * to write a class that correctly implements both the <tt>Set</tt> and
     * <tt>List</tt> interfaces.)
     *
     * @param o object to be compared for equality with this collection
     * @return <tt>true</tt> if the specified object is equal to this
     * collection
     *
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     * @see List#equals(Object)
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this collection.  While the
     * <tt>Collection</tt> interface adds no stipulations to the general
     * contract for the <tt>Object.hashCode</tt> method, programmers should
     * take note that any class that overrides the <tt>Object.equals</tt>
     * method must also override the <tt>Object.hashCode</tt> method in order
     * to satisfy the general contract for the <tt>Object.hashCode</tt>method.
     * In particular, <tt>c1.equals(c2)</tt> implies that
     * <tt>c1.hashCode()==c2.hashCode()</tt>.
     *
     * @return the hash code value for this collection
     *
     * @see Object#hashCode()
     * @see Object#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This exception may be thrown by methods that have detected concurrent
 * modification of an object when such modification is not permissible.
 * <p>
 * For example, it is not generally permissible for one thread to modify a Collection
 * while another thread is iterating over it.  In general, the results of the
 * iteration are undefined under these circumstances.  Some Iterator
 * implementations (including those of all the general purpose collection implementations
 * provided by the JRE) may choose to throw this exception if this behavior is
 * detected.  Iterators that do this are known as <i>fail-fast</i> iterators,
 * as they fail quickly and cleanly, rather that risking arbitrary,
 * non-deterministic behavior at an undetermined time in the future.
 * <p>
 * Note that this exception does not always indicate that an object has
 * been concurrently modified by a <i>different</i> thread.  If a single
 * thread issues a sequence of method invocations that violates the
 * contract of an object, the object may throw this exception.  For
 * example, if a thread modifies a collection directly while it is
 * iterating over the collection with a fail-fast iterator, the iterator
 * will throw this exception.
 *
 * <p>Note that fail-fast behavior cannot be guaranteed as it is, generally
 * speaking, impossible to make any hard guarantees in the presence of
 * unsynchronized concurrent modification.  Fail-fast operations
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i><tt>ConcurrentModificationException</tt>
 * should be used only to detect bugs.</i>
 *
 * @author  Josh Bloch
 * @see     Collection
 * @see     Iterator
 * @see     ListIterator
 * @see     Vector
 * @see     LinkedList
 * @see     HashSet
 * @see     Hashtable
 * @see     TreeMap
 * @see     AbstractList
 * @since   1.2
 */
public class ConcurrentModificationException extends RuntimeException {
    /**
     * Constructs a ConcurrentModificationException with no
     * detail message.
     */
    public ConcurrentModificationException() {
    }

    /**
     * Constructs a <tt>ConcurrentModificationException</tt> with the
     * specified detail message.
     *
     * @param message the detail message pertaining to this exception.
     */
    public ConcurrentModificationException(String message) {
        super(message);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea and Josh Bloch with assistance from members of
 * JCP JSR-166 Expert Group and released to the public domain, as explained
 * at http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A linear collection that supports element insertion and removal at
 * both ends.  The name <i>deque</i> is short for "double ended queue"
 * and is usually pronounced "deck".  Most <tt>Deque</tt>
 * implementations place no fixed limits on the number of elements
 * they may contain, but this interface supports capacity-restricted
 * deques as well as those with no fixed size limit.
 *
 * <p>This interface defines methods to access the elements at both
 * ends of the deque.  Methods are provided to insert, remove, and
 * examine the element.  Each of these methods exists in two forms:
 * one throws an exception if the operation fails, the other returns a
 * special value (either <tt>null</tt> or <tt>false</tt>, depending on
 * the operation).  The latter form of the insert operation is
 * designed specifically for use with capacity-restricted
 * <tt>Deque</tt> implementations; in most implementations, insert
 * operations cannot fail.
 *
 * <p>The twelve methods described above are summarized in the
 * following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>First Element (Head)</b></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>Last Element (Tail)</b></td>
 *  </tr>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *    <td>{@link #offerFirst offerFirst(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *    <td>{@link #removeLast removeLast()}</td>
 *    <td>{@link #pollLast pollLast()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #getFirst getFirst()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *    <td>{@link #getLast getLast()}</td>
 *    <td>{@link #peekLast peekLast()}</td>
 *  </tr>
 * </table>
 *
 * <p>This interface extends the {@link Queue} interface.  When a deque is
 * used as a queue, FIFO (First-In-First-Out) behavior results.  Elements are
 * added at the end of the deque and removed from the beginning.  The methods
 * inherited from the <tt>Queue</tt> interface are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b><tt>Queue</tt> Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#add add(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#offer offer(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#remove remove()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#poll poll()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#element element()}</td>
 *    <td>{@link #getFirst getFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#peek peek()}</td>
 *    <td>{@link #peek peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Deques can also be used as LIFO (Last-In-First-Out) stacks.  This
 * interface should be used in preference to the legacy {@link Stack} class.
 * When a deque is used as a stack, elements are pushed and popped from the
 * beginning of the deque.  Stack methods are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the table below:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b>Stack Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link #push push(e)}</td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #pop pop()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #peek peek()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Note that the {@link #peek peek} method works equally well when
 * a deque is used as a queue or a stack; in either case, elements are
 * drawn from the beginning of the deque.
 *
 * <p>This interface provides two methods to remove interior
 * elements, {@link #removeFirstOccurrence removeFirstOccurrence} and
 * {@link #removeLastOccurrence removeLastOccurrence}.
 *
 * <p>Unlike the {@link List} interface, this interface does not
 * provide support for indexed access to elements.
 *
 * <p>While <tt>Deque</tt> implementations are not strictly required
 * to prohibit the insertion of null elements, they are strongly
 * encouraged to do so.  Users of any <tt>Deque</tt> implementations
 * that do allow null elements are strongly encouraged <i>not</i> to
 * take advantage of the ability to insert nulls.  This is so because
 * <tt>null</tt> is used as a special return value by various methods
 * to indicated that the deque is empty.
 *
 * <p><tt>Deque</tt> implementations generally do not define
 * element-based versions of the <tt>equals</tt> and <tt>hashCode</tt>
 * methods, but instead inherit the identity-based versions from class
 * <tt>Object</tt>.
 *
 * <p>This interface is a member of the <a
 * href="{@docRoot}/../technotes/guides/collections/index.html"> Java Collections
 * Framework</a>.
 *
 * @author Doug Lea
 * @author Josh Bloch
 * @since  1.6
 * @param <E> the type of elements held in this collection
 */

public interface Deque<E> extends Queue<E> {
    /**
     * Inserts the specified element at the front of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerFirst}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addFirst(E e);

    /**
     * Inserts the specified element at the end of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerLast}.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addLast(E e);

    /**
     * Inserts the specified element at the front of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addFirst} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerFirst(E e);

    /**
     * Inserts the specified element at the end of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addLast} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerLast(E e);

    /**
     * Retrieves and removes the first element of this deque.  This method
     * differs from {@link #pollFirst pollFirst} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeFirst();

    /**
     * Retrieves and removes the last element of this deque.  This method
     * differs from {@link #pollLast pollLast} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeLast();

    /**
     * Retrieves and removes the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollFirst();

    /**
     * Retrieves and removes the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollLast();

    /**
     * Retrieves, but does not remove, the first element of this deque.
     *
     * This method differs from {@link #peekFirst peekFirst} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque.
     * This method differs from {@link #peekLast peekLast} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getLast();

    /**
     * Retrieves, but does not remove, the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekLast();

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeFirstOccurrence(Object o);

    /**
     * Removes the last occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the last element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeLastOccurrence(Object o);

    // *** Queue methods ***

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     * When using a capacity-restricted deque, it is generally preferable to
     * use {@link #offer(Object) offer}.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean add(E e);

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and <tt>false</tt> if no space is currently
     * available.  When using a capacity-restricted deque, this method is
     * generally preferable to the {@link #add} method, which can fail to
     * insert an element only by throwing an exception.
     *
     * <p>This method is equivalent to {@link #offerLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque).
     * This method differs from {@link #poll poll} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque), or returns
     * <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #pollFirst()}.
     *
     * @return the first element of this deque, or <tt>null</tt> if
     *         this deque is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque).
     * This method differs from {@link #peek peek} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #getFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque), or
     * returns <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #peekFirst()}.
     *
     * @return the head of the queue represented by this deque, or
     *         <tt>null</tt> if this deque is empty
     */
    E peek();


    // *** Stack methods ***

    /**
     * Pushes an element onto the stack represented by this deque (in other
     * words, at the head of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void push(E e);

    /**
     * Pops an element from the stack represented by this deque.  In other
     * words, removes and returns the first element of this deque.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this deque (which is the top
     *         of the stack represented by this deque)
     * @throws NoSuchElementException if this deque is empty
     */
    E pop();


    // *** Collection methods ***

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * <p>This method is equivalent to {@link #removeFirstOccurrence}.
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean remove(Object o);

    /**
     * Returns <tt>true</tt> if this deque contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this deque contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this deque is to be tested
     * @return <tt>true</tt> if this deque contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns the number of elements in this deque.
     *
     * @return the number of elements in this deque
     */
    public int size();

    /**
     * Returns an iterator over the elements in this deque in proper sequence.
     * The elements will be returned in order from first (head) to last (tail).
     *
     * @return an iterator over the elements in this deque in proper sequence
     */
    Iterator<E> iterator();

    /**
     * Returns an iterator over the elements in this deque in reverse
     * sequential order.  The elements will be returned in order from
     * last (tail) to first (head).
     *
     * @return an iterator over the elements in this deque in reverse
     * sequence
     */
    Iterator<E> descendingIterator();

}


/*
 * Copyright 1994-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that a method has been passed an illegal or
 * inappropriate argument.
 *
 * @author  unascribed
 * @see     java.lang.Thread#setPriority(int)
 * @since   JDK1.0
 */
public
class IllegalArgumentException extends RuntimeException {
    /**
     * Constructs an <code>IllegalArgumentException</code> with no
     * detail message.
     */
    public IllegalArgumentException() {
        super();
    }

    /**
     * Constructs an <code>IllegalArgumentException</code> with the
     * specified detail message.
     *
     * @param   s   the detail message.
     */
    public IllegalArgumentException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalArgumentException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalArgumentException(Throwable cause) {
        super(cause);
    }

    private static final long serialVersionUID = -5365630128856068164L;
}


/*
 * Copyright 1996-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Signals that a method has been invoked at an illegal or
 * inappropriate time.  In other words, the Java environment or
 * Java application is not in an appropriate state for the requested
 * operation.
 *
 * @author  Jonni Kanerva
 * @since   JDK1.1
 */
public
class IllegalStateException extends RuntimeException {
    /**
     * Constructs an IllegalStateException with no detail message.
     * A detail message is a String that describes this particular exception.
     */
    public IllegalStateException() {
        super();
    }

    /**
     * Constructs an IllegalStateException with the specified detail
     * message.  A detail message is a String that describes this particular
     * exception.
     *
     * @param s the String that contains a detailed message
     */
    public IllegalStateException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalStateException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalStateException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1848914673093119416L;
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator over a collection.  {@code Iterator} takes the place of
 * {@link Enumeration} in the Java Collections Framework.  Iterators
 * differ from enumerations in two ways:
 *
 * <ul>
 *      <li> Iterators allow the caller to remove elements from the
 *           underlying collection during the iteration with well-defined
 *           semantics.
 *      <li> Method names have been improved.
 * </ul>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see ListIterator
 * @see Iterable
 * @since 1.2
 */
public interface Iterator<E> {
    /**
     * Returns {@code true} if the iteration has more elements.
     * (In other words, returns {@code true} if {@link #next} would
     * return an element rather than throwing an exception.)
     *
     * @return {@code true} if the iteration has more elements
     */
    boolean hasNext();

    /**
     * Returns the next element in the iteration.
     *
     * @return the next element in the iteration
     * @throws NoSuchElementException if the iteration has no more elements
     */
    E next();

    /**
     * Removes from the underlying collection the last element returned
     * by this iterator (optional operation).  This method can be called
     * only once per call to {@link #next}.  The behavior of an iterator
     * is unspecified if the underlying collection is modified while the
     * iteration is in progress in any way other than by calling this
     * method.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this iterator
     *
     * @throws IllegalStateException if the {@code next} method has not
     *         yet been called, or the {@code remove} method has already
     *         been called after the last call to the {@code next}
     *         method
     */
    void remove();
}


package javaUtilEx;

public class juLinkedListCreateLastIndexOf {
	public static void main(String[] args) {
		Random.args = args;

		LinkedList<Content> l = createList(Random.random());
		Content c = new Content(Random.random());
		if (Random.random() > 42) {
			c = l.get(Random.random());
		}
		l.lastIndexOf(c);
	}

	public static LinkedList<Content> createList(int n) {
		LinkedList<Content> l = new LinkedList<Content>();
		while (n > 0) {
			l.addLast(new Content(Random.random()));
			n--;
		}
		return l;
	}
}

final class Content {
	int val;

	public Content(int v) {
		this.val = v;
	}

	public int hashCode() {
		return val^31;
	}

	public boolean equals(Object o) {
		if (o instanceof Content) {
			return this.val == ((Content) o).val;
		}
		return false;
	}
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Linked list implementation of the <tt>List</tt> interface.  Implements all
 * optional list operations, and permits all elements (including
 * <tt>null</tt>).  In addition to implementing the <tt>List</tt> interface,
 * the <tt>LinkedList</tt> class provides uniformly named methods to
 * <tt>get</tt>, <tt>remove</tt> and <tt>insert</tt> an element at the
 * beginning and end of the list.  These operations allow linked lists to be
 * used as a stack, {@linkplain Queue queue}, or {@linkplain Deque
 * double-ended queue}. <p>
 *
 * The class implements the <tt>Deque</tt> interface, providing
 * first-in-first-out queue operations for <tt>add</tt>,
 * <tt>poll</tt>, along with other stack and deque operations.<p>
 *
 * All of the operations perform as could be expected for a doubly-linked
 * list.  Operations that index into the list will traverse the list from
 * the beginning or the end, whichever is closer to the specified index.<p>
 *
 * <p><strong>Note that this implementation is not synchronized.</strong>
 * If multiple threads access a linked list concurrently, and at least
 * one of the threads modifies the list structurally, it <i>must</i> be
 * synchronized externally.  (A structural modification is any operation
 * that adds or deletes one or more elements; merely setting the value of
 * an element is not a structural modification.)  This is typically
 * accomplished by synchronizing on some object that naturally
 * encapsulates the list.
 *
 * If no such object exists, the list should be "wrapped" using the
 * {@link Collections#synchronizedList Collections.synchronizedList}
 * method.  This is best done at creation time, to prevent accidental
 * unsynchronized access to the list:<pre>
 *   List list = Collections.synchronizedList(new LinkedList(...));</pre>
 *
 * <p>The iterators returned by this class's <tt>iterator</tt> and
 * <tt>listIterator</tt> methods are <i>fail-fast</i>: if the list is
 * structurally modified at any time after the iterator is created, in
 * any way except through the Iterator's own <tt>remove</tt> or
 * <tt>add</tt> methods, the iterator will throw a {@link
 * ConcurrentModificationException}.  Thus, in the face of concurrent
 * modification, the iterator fails quickly and cleanly, rather than
 * risking arbitrary, non-deterministic behavior at an undetermined
 * time in the future.
 *
 * <p>Note that the fail-fast behavior of an iterator cannot be guaranteed
 * as it is, generally speaking, impossible to make any hard guarantees in the
 * presence of unsynchronized concurrent modification.  Fail-fast iterators
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness:   <i>the fail-fast behavior of iterators
 * should be used only to detect bugs.</i>
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see     List
 * @see     ArrayList
 * @see     Vector
 * @since 1.2
 * @param <E> the type of elements held in this collection
 */

public class LinkedList<E>
    extends AbstractSequentialList<E>
    implements List<E>, Deque<E>
{
    private transient Entry<E> header = new Entry<E>(null, null, null);
    private transient int size = 0;

    /**
     * Constructs an empty list.
     */
    public LinkedList() {
        header.next = header.previous = header;
    }

    /**
     * Constructs a list containing the elements of the specified
     * collection, in the order they are returned by the collection's
     * iterator.
     *
     * @param  c the collection whose elements are to be placed into this list
     * @throws NullPointerException if the specified collection is null
     */
    public LinkedList(Collection<? extends E> c) {
        this();
        addAll(c);
    }

    /**
     * Returns the first element in this list.
     *
     * @return the first element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getFirst() {
        if (size==0)
            throw new NoSuchElementException();

        return header.next.element;
    }

    /**
     * Returns the last element in this list.
     *
     * @return the last element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getLast()  {
        if (size==0)
            throw new NoSuchElementException();

        return header.previous.element;
    }

    /**
     * Removes and returns the first element from this list.
     *
     * @return the first element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeFirst() {
        return remove(header.next);
    }

    /**
     * Removes and returns the last element from this list.
     *
     * @return the last element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeLast() {
        return remove(header.previous);
    }

    /**
     * Inserts the specified element at the beginning of this list.
     *
     * @param e the element to add
     */
    public void addFirst(E e) {
        addBefore(e, header.next);
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     */
    public void addLast(E e) {
        addBefore(e, header);
    }

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     */
    public boolean contains(Object o) {
        return indexOf(o) != -1;
    }

    /**
     * Returns the number of elements in this list.
     *
     * @return the number of elements in this list
     */
    public int size() {
        return size;
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     */
    public boolean add(E e) {
        addBefore(e, header);
        return true;
    }

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present.  If this list does not contain the element, it is
     * unchanged.  More formally, removes the element with the lowest index
     * <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list
     * changed as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     */
    public boolean remove(Object o) {
        if (o==null) {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }
    /**
     * Removes all of the elements from this list.
     */
    public void clear() {
        Entry<E> e = header.next;
        while (e != header) {
            Entry<E> next = e.next;
            e.next = e.previous = null;
            e.element = null;
            e = next;
        }
        header.next = header.previous = header;
        size = 0;
        modCount++;
    }


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        return entry(index).element;
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element.
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E set(int index, E element) {
        Entry<E> e = entry(index);
        E oldVal = e.element;
        e.element = element;
        return oldVal;
    }

    /**
     * Inserts the specified element at the specified position in this list.
     * Shifts the element currently at that position (if any) and any
     * subsequent elements to the right (adds one to their indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public void add(int index, E element) {
        addBefore(element, (index==size ? header : entry(index)));
    }

    /**
     * Removes the element at the specified position in this list.  Shifts any
     * subsequent elements to the left (subtracts one from their indices).
     * Returns the element that was removed from the list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E remove(int index) {
        return remove(entry(index));
    }

    /**
     * Returns the indexed entry.
     */
    private Entry<E> entry(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException();
        Entry<E> e = header;
        if (index < (size >> 1)) {
            for (int i = 0; i <= index; i++)
                e = e.next;
        } else {
            for (int i = size; i > index; i--)
                e = e.previous;
        }
        return e;
    }


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int indexOf(Object o) {
        int index = 0;
        if (o==null) {
            for (Entry e = header.next; e != header; e = e.next) {
                if (e.element==null)
                    return index;
                index++;
            }
        } else {
            for (Entry e = header.next; e != header; e = e.next) {
                if (o.equals(e.element))
                    return index;
                index++;
            }
        }
        return -1;
    }

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int lastIndexOf(Object o) {
        int index = size;
        if (o==null) {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (e.element==null)
                    return index;
            }
        } else {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (o.equals(e.element))
                    return index;
            }
        }
        return -1;
    }

    // Queue operations.

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E peek() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E element() {
        return getFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E poll() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list.
     *
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E remove() {
        return removeFirst();
    }

    /**
     * Adds the specified element as the tail (last element) of this list.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Queue#offer})
     * @since 1.5
     */
    public boolean offer(E e) {
        return add(e);
    }

    // Deque operations
    /**
     * Inserts the specified element at the front of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerFirst})
     * @since 1.6
     */
    public boolean offerFirst(E e) {
        addFirst(e);
        return true;
    }

    /**
     * Inserts the specified element at the end of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerLast})
     * @since 1.6
     */
    public boolean offerLast(E e) {
        addLast(e);
        return true;
    }

    /**
     * Retrieves, but does not remove, the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekFirst() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekLast() {
        if (size==0)
            return null;
        return getLast();
    }

    /**
     * Retrieves and removes the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollFirst() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollLast() {
        if (size==0)
            return null;
        return removeLast();
    }

    /**
     * Pushes an element onto the stack represented by this list.  In other
     * words, inserts the element at the front of this list.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @since 1.6
     */
    public void push(E e) {
        addFirst(e);
    }

    /**
     * Pops an element from the stack represented by this list.  In other
     * words, removes and returns the first element of this list.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this list (which is the top
     *         of the stack represented by this list)
     * @throws NoSuchElementException if this list is empty
     * @since 1.6
     */
    public E pop() {
        return removeFirst();
    }

    /**
     * Removes the first occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeFirstOccurrence(Object o) {
        return remove(o);
    }

    /**
     * Removes the last occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeLastOccurrence(Object o) {
        if (o==null) {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * Returns a list-iterator of the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * Obeys the general contract of <tt>List.listIterator(int)</tt>.<p>
     *
     * The list-iterator is <i>fail-fast</i>: if the list is structurally
     * modified at any time after the Iterator is created, in any way except
     * through the list-iterator's own <tt>remove</tt> or <tt>add</tt>
     * methods, the list-iterator will throw a
     * <tt>ConcurrentModificationException</tt>.  Thus, in the face of
     * concurrent modification, the iterator fails quickly and cleanly, rather
     * than risking arbitrary, non-deterministic behavior at an undetermined
     * time in the future.
     *
     * @param index index of the first element to be returned from the
     *              list-iterator (by a call to <tt>next</tt>)
     * @return a ListIterator of the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     * @see List#listIterator(int)
     */
    public ListIterator<E> listIterator(int index) {
        return new ListItr(index);
    }

    private class ListItr implements ListIterator<E> {
        private Entry<E> lastReturned = header;
        private Entry<E> next;
        private int nextIndex;
        private int expectedModCount = modCount;

        ListItr(int index) {
            if (index < 0 || index > size)
                throw new IndexOutOfBoundsException();
            if (index < (size >> 1)) {
                next = header.next;
                for (nextIndex=0; nextIndex<index; nextIndex++)
                    next = next.next;
            } else {
                next = header;
                for (nextIndex=size; nextIndex>index; nextIndex--)
                    next = next.previous;
            }
        }

        public boolean hasNext() {
            return nextIndex != size;
        }

        public E next() {
            checkForComodification();
            if (nextIndex == size)
                throw new NoSuchElementException();

            lastReturned = next;
            next = next.next;
            nextIndex++;
            return lastReturned.element;
        }

        public boolean hasPrevious() {
            return nextIndex != 0;
        }

        public E previous() {
            if (nextIndex == 0)
                throw new NoSuchElementException();

            lastReturned = next = next.previous;
            nextIndex--;
            checkForComodification();
            return lastReturned.element;
        }

        public int nextIndex() {
            return nextIndex;
        }

        public int previousIndex() {
            return nextIndex-1;
        }

        public void remove() {
            checkForComodification();
            Entry<E> lastNext = lastReturned.next;
            try {
                LinkedList.this.remove(lastReturned);
            } catch (NoSuchElementException e) {
                throw new IllegalStateException();
            }
            if (next==lastReturned)
                next = lastNext;
            else
                nextIndex--;
            lastReturned = header;
            expectedModCount++;
        }

        public void set(E e) {
            if (lastReturned == header)
                throw new IllegalStateException();
            checkForComodification();
            lastReturned.element = e;
        }

        public void add(E e) {
            checkForComodification();
            lastReturned = header;
            addBefore(e, next);
            nextIndex++;
            expectedModCount++;
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private static class Entry<E> {
        E element;
        Entry<E> next;
        Entry<E> previous;

        Entry(E element, Entry<E> next, Entry<E> previous) {
            this.element = element;
            this.next = next;
            this.previous = previous;
        }
    }

    private Entry<E> addBefore(E e, Entry<E> entry) {
        Entry<E> newEntry = new Entry<E>(e, entry, entry.previous);
        newEntry.previous.next = newEntry;
        newEntry.next.previous = newEntry;
        size++;
        modCount++;
        return newEntry;
    }

    private E remove(Entry<E> e) {
        if (e == header)
            throw new NoSuchElementException();

        E result = e.element;
        e.previous.next = e.next;
        e.next.previous = e.previous;
        e.next = e.previous = null;
        e.element = null;
        size--;
        modCount++;
        return result;
    }

    /**
     * @since 1.6
     */
    public Iterator<E> descendingIterator() {
        return new DescendingIterator();
    }

    /** Adapter to provide descending iterators via ListItr.previous */
    private class DescendingIterator implements Iterator {
        final ListItr itr = new ListItr(size());
        public boolean hasNext() {
            return itr.hasPrevious();
        }
        public E next() {
            return itr.previous();
        }
        public void remove() {
            itr.remove();
        }
    }

    /**
     * Returns an array containing all of the elements in this list
     * in proper sequence (from first to last element).
     *
     * <p>The returned array will be "safe" in that no references to it are
     * maintained by this list.  (In other words, this method must allocate
     * a new array).  The caller is thus free to modify the returned array.
     *
     * <p>This method acts as bridge between array-based and collection-based
     * APIs.
     *
     * @return an array containing all of the elements in this list
     *         in proper sequence
     */
    public Object[] toArray() {
        Object[] result = new Object[size];
        int i = 0;
        for (Entry<E> e = header.next; e != header; e = e.next)
            result[i++] = e.element;
        return result;
    }

    private static final long serialVersionUID = 876323262645176354L;
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator for lists that allows the programmer
 * to traverse the list in either direction, modify
 * the list during iteration, and obtain the iterator's
 * current position in the list. A {@code ListIterator}
 * has no current element; its <I>cursor position</I> always
 * lies between the element that would be returned by a call
 * to {@code previous()} and the element that would be
 * returned by a call to {@code next()}.
 * An iterator for a list of length {@code n} has {@code n+1} possible
 * cursor positions, as illustrated by the carets ({@code ^}) below:
 * <PRE>
 *                      Element(0)   Element(1)   Element(2)   ... Element(n-1)
 * cursor positions:  ^            ^            ^            ^                  ^
 * </PRE>
 * Note that the {@link #remove} and {@link #set(Object)} methods are
 * <i>not</i> defined in terms of the cursor position;  they are defined to
 * operate on the last element returned by a call to {@link #next} or
 * {@link #previous()}.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see List
 * @see Iterator
 * @see Enumeration
 * @see List#listIterator()
 * @since   1.2
 */
public interface ListIterator<E> extends Iterator<E> {
    // Query Operations

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the forward direction. (In other words,
     * returns {@code true} if {@link #next} would return an element rather
     * than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the forward direction
     */
    boolean hasNext();

    /**
     * Returns the next element in the list and advances the cursor position.
     * This method may be called repeatedly to iterate through the list,
     * or intermixed with calls to {@link #previous} to go back and forth.
     * (Note that alternating calls to {@code next} and {@code previous}
     * will return the same element repeatedly.)
     *
     * @return the next element in the list
     * @throws NoSuchElementException if the iteration has no next element
     */
    E next();

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the reverse direction.  (In other words,
     * returns {@code true} if {@link #previous} would return an element
     * rather than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the reverse direction
     */
    boolean hasPrevious();

    /**
     * Returns the previous element in the list and moves the cursor
     * position backwards.  This method may be called repeatedly to
     * iterate through the list backwards, or intermixed with calls to
     * {@link #next} to go back and forth.  (Note that alternating calls
     * to {@code next} and {@code previous} will return the same
     * element repeatedly.)
     *
     * @return the previous element in the list
     * @throws NoSuchElementException if the iteration has no previous
     *         element
     */
    E previous();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #next}. (Returns list size if the list
     * iterator is at the end of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code next}, or list size if the list
     *         iterator is at the end of the list
     */
    int nextIndex();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #previous}. (Returns -1 if the list
     * iterator is at the beginning of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code previous}, or -1 if the list
     *         iterator is at the beginning of the list
     */
    int previousIndex();


    // Modification Operations

    /**
     * Removes from the list the last element that was returned by {@link
     * #next} or {@link #previous} (optional operation).  This call can
     * only be made once per call to {@code next} or {@code previous}.
     * It can be made only if {@link #add} has not been
     * called after the last call to {@code next} or {@code previous}.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this list iterator
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void remove();

    /**
     * Replaces the last element returned by {@link #next} or
     * {@link #previous} with the specified element (optional operation).
     * This call can be made only if neither {@link #remove} nor {@link
     * #add} have been called after the last call to {@code next} or
     * {@code previous}.
     *
     * @param e the element with which to replace the last element returned by
     *          {@code next} or {@code previous}
     * @throws UnsupportedOperationException if the {@code set} operation
     *         is not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of the specified
     *         element prevents it from being added to this list
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void set(E e);

    /**
     * Inserts the specified element into the list (optional operation).
     * The element is inserted immediately before the next element that
     * would be returned by {@link #next}, if any, and after the next
     * element that would be returned by {@link #previous}, if any.  (If the
     * list contains no elements, the new element becomes the sole element
     * on the list.)  The new element is inserted before the implicit
     * cursor: a subsequent call to {@code next} would be unaffected, and a
     * subsequent call to {@code previous} would return the new element.
     * (This call increases by one the value that would be returned by a
     * call to {@code nextIndex} or {@code previousIndex}.)
     *
     * @param e the element to insert
     * @throws UnsupportedOperationException if the {@code add} method is
     *         not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of this element
     *         prevents it from being added to this list
     */
    void add(E e);
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An ordered collection (also known as a <i>sequence</i>).  The user of this
 * interface has precise control over where in the list each element is
 * inserted.  The user can access elements by their integer index (position in
 * the list), and search for elements in the list.<p>
 *
 * Unlike sets, lists typically allow duplicate elements.  More formally,
 * lists typically allow pairs of elements <tt>e1</tt> and <tt>e2</tt>
 * such that <tt>e1.equals(e2)</tt>, and they typically allow multiple
 * null elements if they allow null elements at all.  It is not inconceivable
 * that someone might wish to implement a list that prohibits duplicates, by
 * throwing runtime exceptions when the user attempts to insert them, but we
 * expect this usage to be rare.<p>
 *
 * The <tt>List</tt> interface places additional stipulations, beyond those
 * specified in the <tt>Collection</tt> interface, on the contracts of the
 * <tt>iterator</tt>, <tt>add</tt>, <tt>remove</tt>, <tt>equals</tt>, and
 * <tt>hashCode</tt> methods.  Declarations for other inherited methods are
 * also included here for convenience.<p>
 *
 * The <tt>List</tt> interface provides four methods for positional (indexed)
 * access to list elements.  Lists (like Java arrays) are zero based.  Note
 * that these operations may execute in time proportional to the index value
 * for some implementations (the <tt>LinkedList</tt> class, for
 * example). Thus, iterating over the elements in a list is typically
 * preferable to indexing through it if the caller does not know the
 * implementation.<p>
 *
 * The <tt>List</tt> interface provides a special iterator, called a
 * <tt>ListIterator</tt>, that allows element insertion and replacement, and
 * bidirectional access in addition to the normal operations that the
 * <tt>Iterator</tt> interface provides.  A method is provided to obtain a
 * list iterator that starts at a specified position in the list.<p>
 *
 * The <tt>List</tt> interface provides two methods to search for a specified
 * object.  From a performance standpoint, these methods should be used with
 * caution.  In many implementations they will perform costly linear
 * searches.<p>
 *
 * The <tt>List</tt> interface provides two methods to efficiently insert and
 * remove multiple elements at an arbitrary point in the list.<p>
 *
 * Note: While it is permissible for lists to contain themselves as elements,
 * extreme caution is advised: the <tt>equals</tt> and <tt>hashCode</tt>
 * methods are no longer well defined on such a list.
 *
 * <p>Some list implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the list may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see Set
 * @see ArrayList
 * @see LinkedList
 * @see Vector
 * @see Arrays#asList(Object[])
 * @see Collections#nCopies(int, Object)
 * @see Collections#EMPTY_LIST
 * @see AbstractList
 * @see AbstractSequentialList
 * @since 1.2
 */

public interface List<E> extends Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this list.  If this list contains
     * more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this list
     */
    int size();

    /**
     * Returns <tt>true</tt> if this list contains no elements.
     *
     * @return <tt>true</tt> if this list contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    boolean add(E e);

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present (optional operation).  If this list does not contain
     * the element, it is unchanged.  More formally, removes the element with
     * the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list changed
     * as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     */
    boolean remove(Object o);


    // Bulk Modification Operations

    /**
     * Returns <tt>true</tt> if this list contains all of the elements of the
     * specified collection.
     *
     * @param  c collection to be checked for containment in this list
     * @return <tt>true</tt> if this list contains all of the elements of the
     *         specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         list (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Appends all of the elements in the specified collection to the end of
     * this list, in the order that they are returned by the specified
     * collection's iterator (optional operation).  The behavior of this
     * operation is undefined if the specified collection is modified while
     * the operation is in progress.  (Note that this will occur if the
     * specified collection is this list, and it's nonempty.)
     *
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * @param index index at which to insert the first element from the
     *              specified collection
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    boolean addAll(int index, Collection<? extends E> c);

    /**
     * Removes from this list all of its elements that are contained in the
     * specified collection (optional operation).
     *
     * @param c collection containing elements to be removed from this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this list that are contained in the
     * specified collection (optional operation).  In other words, removes
     * from this list all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this list
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * <tt>true</tt> if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements <tt>e1</tt> and
     * <tt>e2</tt> are <i>equal</i> if <tt>(e1==null ? e2==null :
     * e1.equals(e2))</tt>.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.  This
     * definition ensures that the equals method works properly across
     * different implementations of the <tt>List</tt> interface.
     *
     * @param o the object to be compared for equality with this list
     * @return <tt>true</tt> if the specified object is equal to this list
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this list.  The hash code of a list
     * is defined to be the result of the following calculation:
     * <pre>
     *  int hashCode = 1;
     *  for (E e : list)
     *      hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
     * </pre>
     * This ensures that <tt>list1.equals(list2)</tt> implies that
     * <tt>list1.hashCode()==list2.hashCode()</tt> for any two lists,
     * <tt>list1</tt> and <tt>list2</tt>, as required by the general
     * contract of {@link Object#hashCode}.
     *
     * @return the hash code value for this list
     * @see Object#equals(Object)
     * @see #equals(Object)
     */
    int hashCode();


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E get(int index);

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>set</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E set(int index, E element);

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    void add(int index, E element);

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E remove(int index);


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int indexOf(Object o);

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int lastIndexOf(Object o);


    // List Iterators

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     */
    ListIterator<E> listIterator();

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * The specified index indicates the first element that would be
     * returned by an initial call to {@link ListIterator#next next}.
     * An initial call to {@link ListIterator#previous previous} would
     * return the element with the specified index minus one.
     *
     * @param index index of the first element to be returned from the
     *        list iterator (by a call to {@link ListIterator#next next})
     * @return a list iterator over the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         ({@code index < 0 || index > size()})
     */
    ListIterator<E> listIterator(int index);

    // View

    /**
     * Returns a view of the portion of this list between the specified
     * <tt>fromIndex</tt>, inclusive, and <tt>toIndex</tt>, exclusive.  (If
     * <tt>fromIndex</tt> and <tt>toIndex</tt> are equal, the returned list is
     * empty.)  The returned list is backed by this list, so non-structural
     * changes in the returned list are reflected in this list, and vice-versa.
     * The returned list supports all of the optional list operations supported
     * by this list.<p>
     *
     * This method eliminates the need for explicit range operations (of
     * the sort that commonly exist for arrays).  Any operation that expects
     * a list can be used as a range operation by passing a subList view
     * instead of a whole list.  For example, the following idiom
     * removes a range of elements from a list:
     * <pre>
     *      list.subList(from, to).clear();
     * </pre>
     * Similar idioms may be constructed for <tt>indexOf</tt> and
     * <tt>lastIndexOf</tt>, and all of the algorithms in the
     * <tt>Collections</tt> class can be applied to a subList.<p>
     *
     * The semantics of the list returned by this method become undefined if
     * the backing list (i.e., this list) is <i>structurally modified</i> in
     * any way other than via the returned list.  (Structural modifications are
     * those that change the size of this list, or otherwise perturb it in such
     * a fashion that iterations in progress may yield incorrect results.)
     *
     * @param fromIndex low endpoint (inclusive) of the subList
     * @param toIndex high endpoint (exclusive) of the subList
     * @return a view of the specified range within this list
     * @throws IndexOutOfBoundsException for an illegal endpoint index value
     *         (<tt>fromIndex &lt; 0 || toIndex &gt; size ||
     *         fromIndex &gt; toIndex</tt>)
     */
    List<E> subList(int fromIndex, int toIndex);
}


/*
 * Copyright 1994-1998 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown by the <code>nextElement</code> method of an
 * <code>Enumeration</code> to indicate that there are no more
 * elements in the enumeration.
 *
 * @author  unascribed
 * @see     java.util.Enumeration
 * @see     java.util.Enumeration#nextElement()
 * @since   JDK1.0
 */
public
class NoSuchElementException extends RuntimeException {
    /**
     * Constructs a <code>NoSuchElementException</code> with <tt>null</tt>
     * as its error message string.
     */
    public NoSuchElementException() {
        super();
    }

    /**
     * Constructs a <code>NoSuchElementException</code>, saving a reference
     * to the error message string <tt>s</tt> for later retrieval by the
     * <tt>getMessage</tt> method.
     *
     * @param   s   the detail message.
     */
    public NoSuchElementException(String s) {
        super(s);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea with assistance from members of JCP JSR-166
 * Expert Group and released to the public domain, as explained at
 * http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A collection designed for holding elements prior to processing.
 * Besides basic {@link java.util.Collection Collection} operations,
 * queues provide additional insertion, extraction, and inspection
 * operations.  Each of these methods exists in two forms: one throws
 * an exception if the operation fails, the other returns a special
 * value (either <tt>null</tt> or <tt>false</tt>, depending on the
 * operation).  The latter form of the insert operation is designed
 * specifically for use with capacity-restricted <tt>Queue</tt>
 * implementations; in most implementations, insert operations cannot
 * fail.
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Returns special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #add add(e)}</td>
 *    <td>{@link #offer offer(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #remove remove()}</td>
 *    <td>{@link #poll poll()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #element element()}</td>
 *    <td>{@link #peek peek()}</td>
 *  </tr>
 * </table>
 *
 * <p>Queues typically, but do not necessarily, order elements in a
 * FIFO (first-in-first-out) manner.  Among the exceptions are
 * priority queues, which order elements according to a supplied
 * comparator, or the elements' natural ordering, and LIFO queues (or
 * stacks) which order the elements LIFO (last-in-first-out).
 * Whatever the ordering used, the <em>head</em> of the queue is that
 * element which would be removed by a call to {@link #remove() } or
 * {@link #poll()}.  In a FIFO queue, all new elements are inserted at
 * the <em> tail</em> of the queue. Other kinds of queues may use
 * different placement rules.  Every <tt>Queue</tt> implementation
 * must specify its ordering properties.
 *
 * <p>The {@link #offer offer} method inserts an element if possible,
 * otherwise returning <tt>false</tt>.  This differs from the {@link
 * java.util.Collection#add Collection.add} method, which can fail to
 * add an element only by throwing an unchecked exception.  The
 * <tt>offer</tt> method is designed for use when failure is a normal,
 * rather than exceptional occurrence, for example, in fixed-capacity
 * (or &quot;bounded&quot;) queues.
 *
 * <p>The {@link #remove()} and {@link #poll()} methods remove and
 * return the head of the queue.
 * Exactly which element is removed from the queue is a
 * function of the queue's ordering policy, which differs from
 * implementation to implementation. The <tt>remove()</tt> and
 * <tt>poll()</tt> methods differ only in their behavior when the
 * queue is empty: the <tt>remove()</tt> method throws an exception,
 * while the <tt>poll()</tt> method returns <tt>null</tt>.
 *
 * <p>The {@link #element()} and {@link #peek()} methods return, but do
 * not remove, the head of the queue.
 *
 * <p>The <tt>Queue</tt> interface does not define the <i>blocking queue
 * methods</i>, which are common in concurrent programming.  These methods,
 * which wait for elements to appear or for space to become available, are
 * defined in the {@link java.util.concurrent.BlockingQueue} interface, which
 * extends this interface.
 *
 * <p><tt>Queue</tt> implementations generally do not allow insertion
 * of <tt>null</tt> elements, although some implementations, such as
 * {@link LinkedList}, do not prohibit insertion of <tt>null</tt>.
 * Even in the implementations that permit it, <tt>null</tt> should
 * not be inserted into a <tt>Queue</tt>, as <tt>null</tt> is also
 * used as a special return value by the <tt>poll</tt> method to
 * indicate that the queue contains no elements.
 *
 * <p><tt>Queue</tt> implementations generally do not define
 * element-based versions of methods <tt>equals</tt> and
 * <tt>hashCode</tt> but instead inherit the identity based versions
 * from class <tt>Object</tt>, because element-based equality is not
 * always well-defined for queues with the same elements but different
 * ordering properties.
 *
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @see java.util.Collection
 * @see LinkedList
 * @see PriorityQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.BlockingQueue
 * @see java.util.concurrent.ArrayBlockingQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.PriorityBlockingQueue
 * @since 1.5
 * @author Doug Lea
 * @param <E> the type of elements held in this collection
 */
public interface Queue<E> extends Collection<E> {
    /**
     * Inserts the specified element into this queue if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt>
     * if no space is currently available.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean add(E e);

    /**
     * Inserts the specified element into this queue if it is possible to do
     * so immediately without violating capacity restrictions.
     * When using a capacity-restricted queue, this method is generally
     * preferable to {@link #add}, which can fail to insert an element only
     * by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this queue, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of this queue.  This method differs
     * from {@link #poll poll} only in that it throws an exception if this
     * queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of this queue.  This method
     * differs from {@link #peek peek} only in that it throws an exception
     * if this queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E peek();
}


/*
 * Copyright 2000-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Marker interface used by <tt>List</tt> implementations to indicate that
 * they support fast (generally constant time) random access.  The primary
 * purpose of this interface is to allow generic algorithms to alter their
 * behavior to provide good performance when applied to either random or
 * sequential access lists.
 *
 * <p>The best algorithms for manipulating random access lists (such as
 * <tt>ArrayList</tt>) can produce quadratic behavior when applied to
 * sequential access lists (such as <tt>LinkedList</tt>).  Generic list
 * algorithms are encouraged to check whether the given list is an
 * <tt>instanceof</tt> this interface before applying an algorithm that would
 * provide poor performance if it were applied to a sequential access list,
 * and to alter their behavior if necessary to guarantee acceptable
 * performance.
 *
 * <p>It is recognized that the distinction between random and sequential
 * access is often fuzzy.  For example, some <tt>List</tt> implementations
 * provide asymptotically linear access times if they get huge, but constant
 * access times in practice.  Such a <tt>List</tt> implementation
 * should generally implement this interface.  As a rule of thumb, a
 * <tt>List</tt> implementation should implement this interface if,
 * for typical instances of the class, this loop:
 * <pre>
 *     for (int i=0, n=list.size(); i &lt; n; i++)
 *         list.get(i);
 * </pre>
 * runs faster than this loop:
 * <pre>
 *     for (Iterator i=list.iterator(); i.hasNext(); )
 *         i.next();
 * </pre>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @since 1.4
 */
public interface RandomAccess {
}


package javaUtilEx;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that the requested operation is not supported.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @since   1.2
 */
public class UnsupportedOperationException extends RuntimeException {
    /**
     * Constructs an UnsupportedOperationException with no detail message.
     */
    public UnsupportedOperationException() {
    }

    /**
     * Constructs an UnsupportedOperationException with the specified
     * detail message.
     *
     * @param message the detail message
     */
    public UnsupportedOperationException(String message) {
        super(message);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public UnsupportedOperationException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public UnsupportedOperationException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1242599979055084673L;
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Collection</tt>
 * interface, to minimize the effort required to implement this interface. <p>
 *
 * To implement an unmodifiable collection, the programmer needs only to
 * extend this class and provide implementations for the <tt>iterator</tt> and
 * <tt>size</tt> methods.  (The iterator returned by the <tt>iterator</tt>
 * method must implement <tt>hasNext</tt> and <tt>next</tt>.)<p>
 *
 * To implement a modifiable collection, the programmer must additionally
 * override this class's <tt>add</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by the
 * <tt>iterator</tt> method must additionally implement its <tt>remove</tt>
 * method.<p>
 *
 * The programmer should generally provide a void (no argument) and
 * <tt>Collection</tt> constructor, as per the recommendation in the
 * <tt>Collection</tt> interface specification.<p>
 *
 * The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if
 * the collection being implemented admits a more efficient implementation.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractCollection<E> implements Collection<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractCollection() {
    }

    // Query Operations

    /**
     * Returns an iterator over the elements contained in this collection.
     *
     * @return an iterator over the elements contained in this collection
     */
    public abstract Iterator<E> iterator();

    public abstract int size();

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the elements in the collection,
     * checking each element in turn for equality with the specified element.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean contains(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return true;
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return true;
        }
        return false;
    }

    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     */
    public boolean add(E e) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the collection looking for the
     * specified element.  If it finds the element, it removes the element
     * from the collection using the iterator's remove method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's iterator method does not implement the <tt>remove</tt>
     * method and this collection contains the specified object.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public boolean remove(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext()) {
                if (e.next()==null) {
                    e.remove();
                    return true;
                }
            }
        } else {
            while (e.hasNext()) {
                if (o.equals(e.next())) {
                    e.remove();
                    return true;
                }
            }
        }
        return false;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection,
     * checking each element returned by the iterator in turn to see
     * if it's contained in this collection.  If all elements are so
     * contained <tt>true</tt> is returned, otherwise <tt>false</tt>.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @see #contains(Object)
     */
    public boolean containsAll(Collection<?> c) {
        Iterator<?> e = c.iterator();
        while (e.hasNext())
            if (!contains(e.next()))
                return false;
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection, and adds
     * each object returned by the iterator to this collection, in turn.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> unless <tt>add</tt> is
     * overridden (assuming the specified collection is non-empty).
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     *
     * @see #add(Object)
     */
    public boolean addAll(Collection<? extends E> c) {
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            if (add(e.next()))
                modified = true;
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's so contained, it's removed from
     * this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements in common with the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;
        Iterator<?> e = iterator();
        while (e.hasNext()) {
            if (c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's not so contained, it's removed
     * from this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements not present in the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean retainAll(Collection<?> c) {
        boolean modified = false;
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            if (!c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, removing each
     * element using the <tt>Iterator.remove</tt> operation.  Most
     * implementations will probably choose to override this method for
     * efficiency.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's <tt>iterator</tt> method does not implement the
     * <tt>remove</tt> method and this collection is non-empty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            e.next();
            e.remove();
        }
    }


    //  String conversion

    /**
     * Returns a string representation of this collection.  The string
     * representation consists of a list of the collection's elements in the
     * order they are returned by its iterator, enclosed in square brackets
     * (<tt>"[]"</tt>).  Adjacent elements are separated by the characters
     * <tt>", "</tt> (comma and space).  Elements are converted to strings as
     * by {@link String#valueOf(Object)}.
     *
     * @return a string representation of this collection
     */
    public String toString() {
        Iterator<E> i = iterator();
        if (! i.hasNext())
            return "[]";

        String sb = "";
        sb = sb + "[";
        for (;;) {
            E e = i.next();
            sb = sb + (e == this ? "(this Collection)" : e);
            if (! i.hasNext()) {
                sb = sb + "]";
		return sb;
            }
            sb = sb + ", ";
        }
    }

}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the {@link List}
 * interface to minimize the effort required to implement this interface
 * backed by a "random access" data store (such as an array).  For sequential
 * access data (such as a linked list), {@link AbstractSequentialList} should
 * be used in preference to this class.
 *
 * <p>To implement an unmodifiable list, the programmer needs only to extend
 * this class and provide implementations for the {@link #get(int)} and
 * {@link List#size() size()} methods.
 *
 * <p>To implement a modifiable list, the programmer must additionally
 * override the {@link #set(int, Object) set(int, E)} method (which otherwise
 * throws an {@code UnsupportedOperationException}).  If the list is
 * variable-size the programmer must additionally override the
 * {@link #add(int, Object) add(int, E)} and {@link #remove(int)} methods.
 *
 * <p>The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the {@link Collection} interface
 * specification.
 *
 * <p>Unlike the other abstract collection implementations, the programmer does
 * <i>not</i> have to provide an iterator implementation; the iterator and
 * list iterator are implemented by this class, on top of the "random access"
 * methods:
 * {@link #get(int)},
 * {@link #set(int, Object) set(int, E)},
 * {@link #add(int, Object) add(int, E)} and
 * {@link #remove(int)}.
 *
 * <p>The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if the
 * collection being implemented admits a more efficient implementation.
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @since 1.2
 */

public abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractList() {
    }

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * <p>This implementation calls {@code add(size(), e)}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @param e element to be appended to this list
     * @return {@code true} (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the {@code add} operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    public boolean add(E e) {
        add(size(), e);
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    abstract public E get(int index);

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        throw new UnsupportedOperationException();
    }


    // Search Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator (with
     * {@code listIterator()}).  Then, it iterates over the list until the
     * specified element is found or the end of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int indexOf(Object o) {
        ListIterator<E> e = listIterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return e.previousIndex();
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return e.previousIndex();
        }
        return -1;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator that points to the end
     * of the list (with {@code listIterator(size())}).  Then, it iterates
     * backwards over the list until the specified element is found, or the
     * beginning of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int lastIndexOf(Object o) {
        ListIterator<E> e = listIterator(size());
        if (o==null) {
            while (e.hasPrevious())
                if (e.previous()==null)
                    return e.nextIndex();
        } else {
            while (e.hasPrevious())
                if (o.equals(e.previous()))
                    return e.nextIndex();
        }
        return -1;
    }


    // Bulk Operations

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * <p>This implementation calls {@code removeRange(0, size())}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless {@code remove(int
     * index)} or {@code removeRange(int fromIndex, int toIndex)} is
     * overridden.
     *
     * @throws UnsupportedOperationException if the {@code clear} operation
     *         is not supported by this list
     */
    public void clear() {
        removeRange(0, size());
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation gets an iterator over the specified collection
     * and iterates over it, inserting the elements obtained from the
     * iterator into this list at the appropriate position, one at a time,
     * using {@code add(int, E)}.
     * Many implementations will override this method for efficiency.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            add(index++, e.next());
            modified = true;
        }
        return modified;
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * <p>This implementation returns a straightforward implementation of the
     * iterator interface, relying on the backing list's {@code size()},
     * {@code get(int)}, and {@code remove(int)} methods.
     *
     * <p>Note that the iterator returned by this method will throw an
     * {@link UnsupportedOperationException} in response to its
     * {@code remove} method unless the list's {@code remove(int)} method is
     * overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification
     * for the (protected) {@link #modCount} field.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    public Iterator<E> iterator() {
        return new Itr();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns {@code listIterator(0)}.
     *
     * @see #listIterator(int)
     */
    public ListIterator<E> listIterator() {
        return listIterator(0);
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a straightforward implementation of the
     * {@code ListIterator} interface that extends the implementation of the
     * {@code Iterator} interface returned by the {@code iterator()} method.
     * The {@code ListIterator} implementation relies on the backing list's
     * {@code get(int)}, {@code set(int, E)}, {@code add(int, E)}
     * and {@code remove(int)} methods.
     *
     * <p>Note that the list iterator returned by this implementation will
     * throw an {@link UnsupportedOperationException} in response to its
     * {@code remove}, {@code set} and {@code add} methods unless the
     * list's {@code remove(int)}, {@code set(int, E)}, and
     * {@code add(int, E)} methods are overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification for
     * the (protected) {@link #modCount} field.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public ListIterator<E> listIterator(final int index) {
        rangeCheckForAdd(index);

        return new ListItr(index);
    }

    private class Itr implements Iterator<E> {
        /**
         * Index of element to be returned by subsequent call to next.
         */
        int cursor = 0;

        /**
         * Index of element returned by most recent call to next or
         * previous.  Reset to -1 if this element is deleted by a call
         * to remove.
         */
        int lastRet = -1;

        /**
         * The modCount value that the iterator believes that the backing
         * List should have.  If this expectation is violated, the iterator
         * has detected concurrent modification.
         */
        int expectedModCount = modCount;

        public boolean hasNext() {
            return cursor != size();
        }

        public E next() {
            checkForComodification();
            try {
                int i = cursor;
                E next = get(i);
                lastRet = i;
                cursor = i + 1;
                return next;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public void remove() {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.remove(lastRet);
                if (lastRet < cursor)
                    cursor--;
                lastRet = -1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException e) {
                throw new ConcurrentModificationException();
            }
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private class ListItr extends Itr implements ListIterator<E> {
        ListItr(int index) {
            cursor = index;
        }

        public boolean hasPrevious() {
            return cursor != 0;
        }

        public E previous() {
            checkForComodification();
            try {
                int i = cursor - 1;
                E previous = get(i);
                lastRet = cursor = i;
                return previous;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public int nextIndex() {
            return cursor;
        }

        public int previousIndex() {
            return cursor-1;
        }

        public void set(E e) {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.set(lastRet, e);
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }

        public void add(E e) {
            checkForComodification();

            try {
                int i = cursor;
                AbstractList.this.add(i, e);
                lastRet = -1;
                cursor = i + 1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a list that subclasses
     * {@code AbstractList}.  The subclass stores, in private fields, the
     * offset of the subList within the backing list, the size of the subList
     * (which can change over its lifetime), and the expected
     * {@code modCount} value of the backing list.  There are two variants
     * of the subclass, one of which implements {@code RandomAccess}.
     * If this list implements {@code RandomAccess} the returned list will
     * be an instance of the subclass that implements {@code RandomAccess}.
     *
     * <p>The subclass's {@code set(int, E)}, {@code get(int)},
     * {@code add(int, E)}, {@code remove(int)}, {@code addAll(int,
     * Collection)} and {@code removeRange(int, int)} methods all
     * delegate to the corresponding methods on the backing abstract list,
     * after bounds-checking the index and adjusting for the offset.  The
     * {@code addAll(Collection c)} method merely returns {@code addAll(size,
     * c)}.
     *
     * <p>The {@code listIterator(int)} method returns a "wrapper object"
     * over a list iterator on the backing list, which is created with the
     * corresponding method on the backing list.  The {@code iterator} method
     * merely returns {@code listIterator()}, and the {@code size} method
     * merely returns the subclass's {@code size} field.
     *
     * <p>All methods first check to see if the actual {@code modCount} of
     * the backing list is equal to its expected value, and throw a
     * {@code ConcurrentModificationException} if it is not.
     *
     * @throws IndexOutOfBoundsException if an endpoint index value is out of range
     *         {@code (fromIndex < 0 || toIndex > size)}
     * @throws IllegalArgumentException if the endpoint indices are out of order
     *         {@code (fromIndex > toIndex)}
     */
    public List<E> subList(int fromIndex, int toIndex) {
        return (this instanceof RandomAccess ?
                new RandomAccessSubList<E>(this, fromIndex, toIndex) :
                new SubList<E>(this, fromIndex, toIndex));
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * {@code true} if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements {@code e1} and
     * {@code e2} are <i>equal</i> if {@code (e1==null ? e2==null :
     * e1.equals(e2))}.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.<p>
     *
     * This implementation first checks if the specified object is this
     * list. If so, it returns {@code true}; if not, it checks if the
     * specified object is a list. If not, it returns {@code false}; if so,
     * it iterates over both lists, comparing corresponding pairs of elements.
     * If any comparison returns {@code false}, this method returns
     * {@code false}.  If either iterator runs out of elements before the
     * other it returns {@code false} (as the lists are of unequal length);
     * otherwise it returns {@code true} when the iterations complete.
     *
     * @param o the object to be compared for equality with this list
     * @return {@code true} if the specified object is equal to this list
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;
        if (!(o instanceof List))
            return false;

        ListIterator<E> e1 = listIterator();
        ListIterator e2 = ((List) o).listIterator();
        while(e1.hasNext() && e2.hasNext()) {
            E o1 = e1.next();
            Object o2 = e2.next();
            if (!(o1==null ? o2==null : o1.equals(o2)))
                return false;
        }
        return !(e1.hasNext() || e2.hasNext());
    }

    /**
     * Returns the hash code value for this list.
     *
     * <p>This implementation uses exactly the code that is used to define the
     * list hash function in the documentation for the {@link List#hashCode}
     * method.
     *
     * @return the hash code value for this list
     */
    public int hashCode() {
        int hashCode = 1;
        Iterator<E> it = this.iterator();
        while (it.hasNext()) {
            E e = it.next();
            hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
        }
        return hashCode;
    }

    /**
     * Removes from this list all of the elements whose index is between
     * {@code fromIndex}, inclusive, and {@code toIndex}, exclusive.
     * Shifts any succeeding elements to the left (reduces their index).
     * This call shortens the list by {@code (toIndex - fromIndex)} elements.
     * (If {@code toIndex==fromIndex}, this operation has no effect.)
     *
     * <p>This method is called by the {@code clear} operation on this list
     * and its subLists.  Overriding this method to take advantage of
     * the internals of the list implementation can <i>substantially</i>
     * improve the performance of the {@code clear} operation on this list
     * and its subLists.
     *
     * <p>This implementation gets a list iterator positioned before
     * {@code fromIndex}, and repeatedly calls {@code ListIterator.next}
     * followed by {@code ListIterator.remove} until the entire range has
     * been removed.  <b>Note: if {@code ListIterator.remove} requires linear
     * time, this implementation requires quadratic time.</b>
     *
     * @param fromIndex index of first element to be removed
     * @param toIndex index after last element to be removed
     */
    protected void removeRange(int fromIndex, int toIndex) {
        ListIterator<E> it = listIterator(fromIndex);
        for (int i=0, n=toIndex-fromIndex; i<n; i++) {
            it.next();
            it.remove();
        }
    }

    /**
     * The number of times this list has been <i>structurally modified</i>.
     * Structural modifications are those that change the size of the
     * list, or otherwise perturb it in such a fashion that iterations in
     * progress may yield incorrect results.
     *
     * <p>This field is used by the iterator and list iterator implementation
     * returned by the {@code iterator} and {@code listIterator} methods.
     * If the value of this field changes unexpectedly, the iterator (or list
     * iterator) will throw a {@code ConcurrentModificationException} in
     * response to the {@code next}, {@code remove}, {@code previous},
     * {@code set} or {@code add} operations.  This provides
     * <i>fail-fast</i> behavior, rather than non-deterministic behavior in
     * the face of concurrent modification during iteration.
     *
     * <p><b>Use of this field by subclasses is optional.</b> If a subclass
     * wishes to provide fail-fast iterators (and list iterators), then it
     * merely has to increment this field in its {@code add(int, E)} and
     * {@code remove(int)} methods (and any other methods that it overrides
     * that result in structural modifications to the list).  A single call to
     * {@code add(int, E)} or {@code remove(int)} must add no more than
     * one to this field, or the iterators (and list iterators) will throw
     * bogus {@code ConcurrentModificationExceptions}.  If an implementation
     * does not wish to provide fail-fast iterators, this field may be
     * ignored.
     */
    protected transient int modCount = 0;

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size())
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }
}

class SubList<E> extends AbstractList<E> {
    private final AbstractList<E> l;
    private final int offset;
    private int size;

    SubList(AbstractList<E> list, int fromIndex, int toIndex) {
        if (fromIndex < 0)
            throw new IndexOutOfBoundsException();
        if (toIndex > list.size())
            throw new IndexOutOfBoundsException();
        if (fromIndex > toIndex)
            throw new IllegalArgumentException();
        l = list;
        offset = fromIndex;
        size = toIndex - fromIndex;
        this.modCount = l.modCount;
    }

    public E set(int index, E element) {
        rangeCheck(index);
        checkForComodification();
        return l.set(index+offset, element);
    }

    public E get(int index) {
        rangeCheck(index);
        checkForComodification();
        return l.get(index+offset);
    }

    public int size() {
        checkForComodification();
        return size;
    }

    public void add(int index, E element) {
        rangeCheckForAdd(index);
        checkForComodification();
        l.add(index+offset, element);
        this.modCount = l.modCount;
        size++;
    }

    public E remove(int index) {
        rangeCheck(index);
        checkForComodification();
        E result = l.remove(index+offset);
        this.modCount = l.modCount;
        size--;
        return result;
    }

    protected void removeRange(int fromIndex, int toIndex) {
        checkForComodification();
        l.removeRange(fromIndex+offset, toIndex+offset);
        this.modCount = l.modCount;
        size -= (toIndex-fromIndex);
    }

    public boolean addAll(Collection<? extends E> c) {
        return addAll(size, c);
    }

    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        int cSize = c.size();
        if (cSize==0)
            return false;

        checkForComodification();
        l.addAll(offset+index, c);
        this.modCount = l.modCount;
        size += cSize;
        return true;
    }

    public Iterator<E> iterator() {
        return listIterator();
    }

    public ListIterator<E> listIterator(final int index) {
        checkForComodification();
        rangeCheckForAdd(index);

        return new ListIterator<E>() {
            private final ListIterator<E> i = l.listIterator(index+offset);

            public boolean hasNext() {
                return nextIndex() < size;
            }

            public E next() {
                if (hasNext())
                    return i.next();
                else
                    throw new NoSuchElementException();
            }

            public boolean hasPrevious() {
                return previousIndex() >= 0;
            }

            public E previous() {
                if (hasPrevious())
                    return i.previous();
                else
                    throw new NoSuchElementException();
            }

            public int nextIndex() {
                return i.nextIndex() - offset;
            }

            public int previousIndex() {
                return i.previousIndex() - offset;
            }

            public void remove() {
                i.remove();
                SubList.this.modCount = l.modCount;
                size--;
            }

            public void set(E e) {
                i.set(e);
            }

            public void add(E e) {
                i.add(e);
                SubList.this.modCount = l.modCount;
                size++;
            }
        };
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new SubList<E>(this, fromIndex, toIndex);
    }

    private void rangeCheck(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }

    private void checkForComodification() {
        if (this.modCount != l.modCount)
            throw new ConcurrentModificationException();
    }
}

class RandomAccessSubList<E> extends SubList<E> implements RandomAccess {
    RandomAccessSubList(AbstractList<E> list, int fromIndex, int toIndex) {
        super(list, fromIndex, toIndex);
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new RandomAccessSubList<E>(this, fromIndex, toIndex);
    }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>List</tt>
 * interface to minimize the effort required to implement this interface
 * backed by a "sequential access" data store (such as a linked list).  For
 * random access data (such as an array), <tt>AbstractList</tt> should be used
 * in preference to this class.<p>
 *
 * This class is the opposite of the <tt>AbstractList</tt> class in the sense
 * that it implements the "random access" methods (<tt>get(int index)</tt>,
 * <tt>set(int index, E element)</tt>, <tt>add(int index, E element)</tt> and
 * <tt>remove(int index)</tt>) on top of the list's list iterator, instead of
 * the other way around.<p>
 *
 * To implement a list the programmer needs only to extend this class and
 * provide implementations for the <tt>listIterator</tt> and <tt>size</tt>
 * methods.  For an unmodifiable list, the programmer need only implement the
 * list iterator's <tt>hasNext</tt>, <tt>next</tt>, <tt>hasPrevious</tt>,
 * <tt>previous</tt> and <tt>index</tt> methods.<p>
 *
 * For a modifiable list the programmer should additionally implement the list
 * iterator's <tt>set</tt> method.  For a variable-size list the programmer
 * should additionally implement the list iterator's <tt>remove</tt> and
 * <tt>add</tt> methods.<p>
 *
 * The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the <tt>Collection</tt> interface
 * specification.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see List
 * @see AbstractList
 * @see AbstractCollection
 * @since 1.2
 */

public abstract class AbstractSequentialList<E> extends AbstractList<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractSequentialList() {
    }

    /**
     * Returns the element at the specified position in this list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the element using <tt>ListIterator.next</tt> and returns it.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        try {
            return listIterator(index).next();
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the current element using <tt>ListIterator.next</tt> and replaces it
     * with <tt>ListIterator.set</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>set</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        try {
            ListIterator<E> e = listIterator(index);
            E oldVal = e.next();
            e.set(element);
            return oldVal;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it
     * inserts the specified element with <tt>ListIterator.add</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>add</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        try {
            listIterator(index).add(element);
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it removes
     * the element with <tt>ListIterator.remove</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>remove</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        try {
            ListIterator<E> e = listIterator(index);
            E outCast = e.next();
            e.remove();
            return outCast;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Bulk Operations

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * <p>This implementation gets an iterator over the specified collection and
     * a list iterator over this list pointing to the indexed element (with
     * <tt>listIterator(index)</tt>).  Then, it iterates over the specified
     * collection, inserting the elements obtained from the iterator into this
     * list, one at a time, using <tt>ListIterator.add</tt> followed by
     * <tt>ListIterator.next</tt> (to skip over the added element).
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator returned by
     * the <tt>listIterator</tt> method does not implement the <tt>add</tt>
     * operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        try {
            boolean modified = false;
            ListIterator<E> e1 = listIterator(index);
            Iterator<? extends E> e2 = c.iterator();
            while (e2.hasNext()) {
                e1.add(e2.next());
                modified = true;
            }
            return modified;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list (in proper
     * sequence).<p>
     *
     * This implementation merely returns a list iterator over the list.
     *
     * @return an iterator over the elements in this list (in proper sequence)
     */
    public Iterator<E> iterator() {
        return listIterator();
    }

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @param  index index of first element to be returned from the list
     *         iterator (by a call to the <code>next</code> method)
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public abstract ListIterator<E> listIterator(int index);
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * The root interface in the <i>collection hierarchy</i>.  A collection
 * represents a group of objects, known as its <i>elements</i>.  Some
 * collections allow duplicate elements and others do not.  Some are ordered
 * and others unordered.  The JDK does not provide any <i>direct</i>
 * implementations of this interface: it provides implementations of more
 * specific subinterfaces like <tt>Set</tt> and <tt>List</tt>.  This interface
 * is typically used to pass collections around and manipulate them where
 * maximum generality is desired.
 *
 * <p><i>Bags</i> or <i>multisets</i> (unordered collections that may contain
 * duplicate elements) should implement this interface directly.
 *
 * <p>All general-purpose <tt>Collection</tt> implementation classes (which
 * typically implement <tt>Collection</tt> indirectly through one of its
 * subinterfaces) should provide two "standard" constructors: a void (no
 * arguments) constructor, which creates an empty collection, and a
 * constructor with a single argument of type <tt>Collection</tt>, which
 * creates a new collection with the same elements as its argument.  In
 * effect, the latter constructor allows the user to copy any collection,
 * producing an equivalent collection of the desired implementation type.
 * There is no way to enforce this convention (as interfaces cannot contain
 * constructors) but all of the general-purpose <tt>Collection</tt>
 * implementations in the Java platform libraries comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the collection on which they operate, are specified to
 * throw <tt>UnsupportedOperationException</tt> if this collection does not
 * support the operation.  If this is the case, these methods may, but are not
 * required to, throw an <tt>UnsupportedOperationException</tt> if the
 * invocation would have no effect on the collection.  For example, invoking
 * the {@link #addAll(Collection)} method on an unmodifiable collection may,
 * but is not required to, throw the exception if the collection to be added
 * is empty.
 *
 * <p>Some collection implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the collection may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>It is up to each collection to determine its own synchronization
 * policy.  In the absence of a stronger guarantee by the
 * implementation, undefined behavior may result from the invocation
 * of any method on a collection that is being mutated by another
 * thread; this includes direct invocations, passing the collection to
 * a method that might perform invocations, and using an existing
 * iterator to examine the collection.
 *
 * <p>Many methods in Collections Framework interfaces are defined in
 * terms of the {@link Object#equals(Object) equals} method.  For example,
 * the specification for the {@link #contains(Object) contains(Object o)}
 * method says: "returns <tt>true</tt> if and only if this collection
 * contains at least one element <tt>e</tt> such that
 * <tt>(o==null ? e==null : o.equals(e))</tt>."  This specification should
 * <i>not</i> be construed to imply that invoking <tt>Collection.contains</tt>
 * with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be
 * invoked for any element <tt>e</tt>.  Implementations are free to implement
 * optimizations whereby the <tt>equals</tt> invocation is avoided, for
 * example, by first comparing the hash codes of the two elements.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see     Set
 * @see     List
 * @see     Map
 * @see     SortedSet
 * @see     SortedMap
 * @see     HashSet
 * @see     TreeSet
 * @see     ArrayList
 * @see     LinkedList
 * @see     Vector
 * @see     Collections
 * @see     Arrays
 * @see     AbstractCollection
 * @since 1.2
 */

public interface Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this collection.  If this collection
     * contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this collection
     */
    int size();

    /**
     * Returns <tt>true</tt> if this collection contains no elements.
     *
     * @return <tt>true</tt> if this collection contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this collection contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this collection
     * contains at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this collection is to be tested
     * @return <tt>true</tt> if this collection contains the specified
     *         element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this collection.  There are no
     * guarantees concerning the order in which the elements are returned
     * (unless this collection is an instance of some class that provides a
     * guarantee).
     *
     * @return an <tt>Iterator</tt> over the elements in this collection
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Ensures that this collection contains the specified element (optional
     * operation).  Returns <tt>true</tt> if this collection changed as a
     * result of the call.  (Returns <tt>false</tt> if this collection does
     * not permit duplicates and already contains the specified element.)<p>
     *
     * Collections that support this operation may place limitations on what
     * elements may be added to this collection.  In particular, some
     * collections will refuse to add <tt>null</tt> elements, and others will
     * impose restrictions on the type of elements that may be added.
     * Collection classes should clearly specify in their documentation any
     * restrictions on what elements may be added.<p>
     *
     * If a collection refuses to add a particular element for any reason
     * other than that it already contains the element, it <i>must</i> throw
     * an exception (rather than returning <tt>false</tt>).  This preserves
     * the invariant that a collection always contains the specified element
     * after this call returns.
     *
     * @param e element whose presence in this collection is to be ensured
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this collection
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements
     * @throws IllegalArgumentException if some property of the element
     *         prevents it from being added to this collection
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to insertion restrictions
     */
    boolean add(E e);

    /**
     * Removes a single instance of the specified element from this
     * collection, if it is present (optional operation).  More formally,
     * removes an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this collection contains one or more such elements.  Returns
     * <tt>true</tt> if this collection contained the specified element (or
     * equivalently, if this collection changed as a result of the call).
     *
     * @param o element to be removed from this collection, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this collection
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this collection contains all of the elements
     * in the specified collection.
     *
     * @param  c collection to be checked for containment in this collection
     * @return <tt>true</tt> if this collection contains all of the elements
     *         in the specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         collection (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this collection
     * (optional operation).  The behavior of this operation is undefined if
     * the specified collection is modified while the operation is in progress.
     * (This implies that the behavior of this call is undefined if the
     * specified collection is this collection, and this collection is
     * nonempty.)
     *
     * @param c collection containing elements to be added to this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this collection
     * @throws NullPointerException if the specified collection contains a
     *         null element and this collection does not permit null elements,
     *         or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this
     *         collection
     * @throws IllegalStateException if not all the elements can be added at
     *         this time due to insertion restrictions
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Removes all of this collection's elements that are also contained in the
     * specified collection (optional operation).  After this call returns,
     * this collection will contain no elements in common with the specified
     * collection.
     *
     * @param c collection containing elements to be removed from this collection
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> method
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not support
     *         null elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this collection that are contained in the
     * specified collection (optional operation).  In other words, removes from
     * this collection all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this collection (optional operation).
     * The collection will be empty after this method returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this collection
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this collection for equality. <p>
     *
     * While the <tt>Collection</tt> interface adds no stipulations to the
     * general contract for the <tt>Object.equals</tt>, programmers who
     * implement the <tt>Collection</tt> interface "directly" (in other words,
     * create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt>
     * or a <tt>List</tt>) must exercise care if they choose to override the
     * <tt>Object.equals</tt>.  It is not necessary to do so, and the simplest
     * course of action is to rely on <tt>Object</tt>'s implementation, but
     * the implementor may wish to implement a "value comparison" in place of
     * the default "reference comparison."  (The <tt>List</tt> and
     * <tt>Set</tt> interfaces mandate such value comparisons.)<p>
     *
     * The general contract for the <tt>Object.equals</tt> method states that
     * equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and
     * only if <tt>b.equals(a)</tt>).  The contracts for <tt>List.equals</tt>
     * and <tt>Set.equals</tt> state that lists are only equal to other lists,
     * and sets to other sets.  Thus, a custom <tt>equals</tt> method for a
     * collection class that implements neither the <tt>List</tt> nor
     * <tt>Set</tt> interface must return <tt>false</tt> when this collection
     * is compared to any list or set.  (By the same logic, it is not possible
     * to write a class that correctly implements both the <tt>Set</tt> and
     * <tt>List</tt> interfaces.)
     *
     * @param o object to be compared for equality with this collection
     * @return <tt>true</tt> if the specified object is equal to this
     * collection
     *
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     * @see List#equals(Object)
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this collection.  While the
     * <tt>Collection</tt> interface adds no stipulations to the general
     * contract for the <tt>Object.hashCode</tt> method, programmers should
     * take note that any class that overrides the <tt>Object.equals</tt>
     * method must also override the <tt>Object.hashCode</tt> method in order
     * to satisfy the general contract for the <tt>Object.hashCode</tt>method.
     * In particular, <tt>c1.equals(c2)</tt> implies that
     * <tt>c1.hashCode()==c2.hashCode()</tt>.
     *
     * @return the hash code value for this collection
     *
     * @see Object#hashCode()
     * @see Object#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This exception may be thrown by methods that have detected concurrent
 * modification of an object when such modification is not permissible.
 * <p>
 * For example, it is not generally permissible for one thread to modify a Collection
 * while another thread is iterating over it.  In general, the results of the
 * iteration are undefined under these circumstances.  Some Iterator
 * implementations (including those of all the general purpose collection implementations
 * provided by the JRE) may choose to throw this exception if this behavior is
 * detected.  Iterators that do this are known as <i>fail-fast</i> iterators,
 * as they fail quickly and cleanly, rather that risking arbitrary,
 * non-deterministic behavior at an undetermined time in the future.
 * <p>
 * Note that this exception does not always indicate that an object has
 * been concurrently modified by a <i>different</i> thread.  If a single
 * thread issues a sequence of method invocations that violates the
 * contract of an object, the object may throw this exception.  For
 * example, if a thread modifies a collection directly while it is
 * iterating over the collection with a fail-fast iterator, the iterator
 * will throw this exception.
 *
 * <p>Note that fail-fast behavior cannot be guaranteed as it is, generally
 * speaking, impossible to make any hard guarantees in the presence of
 * unsynchronized concurrent modification.  Fail-fast operations
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i><tt>ConcurrentModificationException</tt>
 * should be used only to detect bugs.</i>
 *
 * @author  Josh Bloch
 * @see     Collection
 * @see     Iterator
 * @see     ListIterator
 * @see     Vector
 * @see     LinkedList
 * @see     HashSet
 * @see     Hashtable
 * @see     TreeMap
 * @see     AbstractList
 * @since   1.2
 */
public class ConcurrentModificationException extends RuntimeException {
    /**
     * Constructs a ConcurrentModificationException with no
     * detail message.
     */
    public ConcurrentModificationException() {
    }

    /**
     * Constructs a <tt>ConcurrentModificationException</tt> with the
     * specified detail message.
     *
     * @param message the detail message pertaining to this exception.
     */
    public ConcurrentModificationException(String message) {
        super(message);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea and Josh Bloch with assistance from members of
 * JCP JSR-166 Expert Group and released to the public domain, as explained
 * at http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A linear collection that supports element insertion and removal at
 * both ends.  The name <i>deque</i> is short for "double ended queue"
 * and is usually pronounced "deck".  Most <tt>Deque</tt>
 * implementations place no fixed limits on the number of elements
 * they may contain, but this interface supports capacity-restricted
 * deques as well as those with no fixed size limit.
 *
 * <p>This interface defines methods to access the elements at both
 * ends of the deque.  Methods are provided to insert, remove, and
 * examine the element.  Each of these methods exists in two forms:
 * one throws an exception if the operation fails, the other returns a
 * special value (either <tt>null</tt> or <tt>false</tt>, depending on
 * the operation).  The latter form of the insert operation is
 * designed specifically for use with capacity-restricted
 * <tt>Deque</tt> implementations; in most implementations, insert
 * operations cannot fail.
 *
 * <p>The twelve methods described above are summarized in the
 * following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>First Element (Head)</b></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>Last Element (Tail)</b></td>
 *  </tr>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *    <td>{@link #offerFirst offerFirst(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *    <td>{@link #removeLast removeLast()}</td>
 *    <td>{@link #pollLast pollLast()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #getFirst getFirst()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *    <td>{@link #getLast getLast()}</td>
 *    <td>{@link #peekLast peekLast()}</td>
 *  </tr>
 * </table>
 *
 * <p>This interface extends the {@link Queue} interface.  When a deque is
 * used as a queue, FIFO (First-In-First-Out) behavior results.  Elements are
 * added at the end of the deque and removed from the beginning.  The methods
 * inherited from the <tt>Queue</tt> interface are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b><tt>Queue</tt> Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#add add(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#offer offer(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#remove remove()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#poll poll()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#element element()}</td>
 *    <td>{@link #getFirst getFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#peek peek()}</td>
 *    <td>{@link #peek peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Deques can also be used as LIFO (Last-In-First-Out) stacks.  This
 * interface should be used in preference to the legacy {@link Stack} class.
 * When a deque is used as a stack, elements are pushed and popped from the
 * beginning of the deque.  Stack methods are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the table below:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b>Stack Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link #push push(e)}</td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #pop pop()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #peek peek()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Note that the {@link #peek peek} method works equally well when
 * a deque is used as a queue or a stack; in either case, elements are
 * drawn from the beginning of the deque.
 *
 * <p>This interface provides two methods to remove interior
 * elements, {@link #removeFirstOccurrence removeFirstOccurrence} and
 * {@link #removeLastOccurrence removeLastOccurrence}.
 *
 * <p>Unlike the {@link List} interface, this interface does not
 * provide support for indexed access to elements.
 *
 * <p>While <tt>Deque</tt> implementations are not strictly required
 * to prohibit the insertion of null elements, they are strongly
 * encouraged to do so.  Users of any <tt>Deque</tt> implementations
 * that do allow null elements are strongly encouraged <i>not</i> to
 * take advantage of the ability to insert nulls.  This is so because
 * <tt>null</tt> is used as a special return value by various methods
 * to indicated that the deque is empty.
 *
 * <p><tt>Deque</tt> implementations generally do not define
 * element-based versions of the <tt>equals</tt> and <tt>hashCode</tt>
 * methods, but instead inherit the identity-based versions from class
 * <tt>Object</tt>.
 *
 * <p>This interface is a member of the <a
 * href="{@docRoot}/../technotes/guides/collections/index.html"> Java Collections
 * Framework</a>.
 *
 * @author Doug Lea
 * @author Josh Bloch
 * @since  1.6
 * @param <E> the type of elements held in this collection
 */

public interface Deque<E> extends Queue<E> {
    /**
     * Inserts the specified element at the front of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerFirst}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addFirst(E e);

    /**
     * Inserts the specified element at the end of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerLast}.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addLast(E e);

    /**
     * Inserts the specified element at the front of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addFirst} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerFirst(E e);

    /**
     * Inserts the specified element at the end of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addLast} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerLast(E e);

    /**
     * Retrieves and removes the first element of this deque.  This method
     * differs from {@link #pollFirst pollFirst} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeFirst();

    /**
     * Retrieves and removes the last element of this deque.  This method
     * differs from {@link #pollLast pollLast} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeLast();

    /**
     * Retrieves and removes the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollFirst();

    /**
     * Retrieves and removes the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollLast();

    /**
     * Retrieves, but does not remove, the first element of this deque.
     *
     * This method differs from {@link #peekFirst peekFirst} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque.
     * This method differs from {@link #peekLast peekLast} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getLast();

    /**
     * Retrieves, but does not remove, the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekLast();

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeFirstOccurrence(Object o);

    /**
     * Removes the last occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the last element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeLastOccurrence(Object o);

    // *** Queue methods ***

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     * When using a capacity-restricted deque, it is generally preferable to
     * use {@link #offer(Object) offer}.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean add(E e);

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and <tt>false</tt> if no space is currently
     * available.  When using a capacity-restricted deque, this method is
     * generally preferable to the {@link #add} method, which can fail to
     * insert an element only by throwing an exception.
     *
     * <p>This method is equivalent to {@link #offerLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque).
     * This method differs from {@link #poll poll} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque), or returns
     * <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #pollFirst()}.
     *
     * @return the first element of this deque, or <tt>null</tt> if
     *         this deque is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque).
     * This method differs from {@link #peek peek} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #getFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque), or
     * returns <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #peekFirst()}.
     *
     * @return the head of the queue represented by this deque, or
     *         <tt>null</tt> if this deque is empty
     */
    E peek();


    // *** Stack methods ***

    /**
     * Pushes an element onto the stack represented by this deque (in other
     * words, at the head of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void push(E e);

    /**
     * Pops an element from the stack represented by this deque.  In other
     * words, removes and returns the first element of this deque.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this deque (which is the top
     *         of the stack represented by this deque)
     * @throws NoSuchElementException if this deque is empty
     */
    E pop();


    // *** Collection methods ***

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * <p>This method is equivalent to {@link #removeFirstOccurrence}.
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean remove(Object o);

    /**
     * Returns <tt>true</tt> if this deque contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this deque contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this deque is to be tested
     * @return <tt>true</tt> if this deque contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns the number of elements in this deque.
     *
     * @return the number of elements in this deque
     */
    public int size();

    /**
     * Returns an iterator over the elements in this deque in proper sequence.
     * The elements will be returned in order from first (head) to last (tail).
     *
     * @return an iterator over the elements in this deque in proper sequence
     */
    Iterator<E> iterator();

    /**
     * Returns an iterator over the elements in this deque in reverse
     * sequential order.  The elements will be returned in order from
     * last (tail) to first (head).
     *
     * @return an iterator over the elements in this deque in reverse
     * sequence
     */
    Iterator<E> descendingIterator();

}


/*
 * Copyright 1994-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that a method has been passed an illegal or
 * inappropriate argument.
 *
 * @author  unascribed
 * @see     java.lang.Thread#setPriority(int)
 * @since   JDK1.0
 */
public
class IllegalArgumentException extends RuntimeException {
    /**
     * Constructs an <code>IllegalArgumentException</code> with no
     * detail message.
     */
    public IllegalArgumentException() {
        super();
    }

    /**
     * Constructs an <code>IllegalArgumentException</code> with the
     * specified detail message.
     *
     * @param   s   the detail message.
     */
    public IllegalArgumentException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalArgumentException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalArgumentException(Throwable cause) {
        super(cause);
    }

    private static final long serialVersionUID = -5365630128856068164L;
}


/*
 * Copyright 1996-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Signals that a method has been invoked at an illegal or
 * inappropriate time.  In other words, the Java environment or
 * Java application is not in an appropriate state for the requested
 * operation.
 *
 * @author  Jonni Kanerva
 * @since   JDK1.1
 */
public
class IllegalStateException extends RuntimeException {
    /**
     * Constructs an IllegalStateException with no detail message.
     * A detail message is a String that describes this particular exception.
     */
    public IllegalStateException() {
        super();
    }

    /**
     * Constructs an IllegalStateException with the specified detail
     * message.  A detail message is a String that describes this particular
     * exception.
     *
     * @param s the String that contains a detailed message
     */
    public IllegalStateException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalStateException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalStateException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1848914673093119416L;
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator over a collection.  {@code Iterator} takes the place of
 * {@link Enumeration} in the Java Collections Framework.  Iterators
 * differ from enumerations in two ways:
 *
 * <ul>
 *      <li> Iterators allow the caller to remove elements from the
 *           underlying collection during the iteration with well-defined
 *           semantics.
 *      <li> Method names have been improved.
 * </ul>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see ListIterator
 * @see Iterable
 * @since 1.2
 */
public interface Iterator<E> {
    /**
     * Returns {@code true} if the iteration has more elements.
     * (In other words, returns {@code true} if {@link #next} would
     * return an element rather than throwing an exception.)
     *
     * @return {@code true} if the iteration has more elements
     */
    boolean hasNext();

    /**
     * Returns the next element in the iteration.
     *
     * @return the next element in the iteration
     * @throws NoSuchElementException if the iteration has no more elements
     */
    E next();

    /**
     * Removes from the underlying collection the last element returned
     * by this iterator (optional operation).  This method can be called
     * only once per call to {@link #next}.  The behavior of an iterator
     * is unspecified if the underlying collection is modified while the
     * iteration is in progress in any way other than by calling this
     * method.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this iterator
     *
     * @throws IllegalStateException if the {@code next} method has not
     *         yet been called, or the {@code remove} method has already
     *         been called after the last call to the {@code next}
     *         method
     */
    void remove();
}


package javaUtilEx;

public class juLinkedListCreateLastIndexOf {
	public static void main(String[] args) {
		Random.args = args;

		LinkedList<Content> l = createList(Random.random());
		Content c = new Content(Random.random());
		if (Random.random() > 42) {
			c = l.get(Random.random());
		}
		l.lastIndexOf(c);
	}

	public static LinkedList<Content> createList(int n) {
		LinkedList<Content> l = new LinkedList<Content>();
		while (n > 0) {
			l.addLast(new Content(Random.random()));
			n--;
		}
		return l;
	}
}

final class Content {
	int val;

	public Content(int v) {
		this.val = v;
	}

	public int hashCode() {
		return val^31;
	}

	public boolean equals(Object o) {
		if (o instanceof Content) {
			return this.val == ((Content) o).val;
		}
		return false;
	}
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Linked list implementation of the <tt>List</tt> interface.  Implements all
 * optional list operations, and permits all elements (including
 * <tt>null</tt>).  In addition to implementing the <tt>List</tt> interface,
 * the <tt>LinkedList</tt> class provides uniformly named methods to
 * <tt>get</tt>, <tt>remove</tt> and <tt>insert</tt> an element at the
 * beginning and end of the list.  These operations allow linked lists to be
 * used as a stack, {@linkplain Queue queue}, or {@linkplain Deque
 * double-ended queue}. <p>
 *
 * The class implements the <tt>Deque</tt> interface, providing
 * first-in-first-out queue operations for <tt>add</tt>,
 * <tt>poll</tt>, along with other stack and deque operations.<p>
 *
 * All of the operations perform as could be expected for a doubly-linked
 * list.  Operations that index into the list will traverse the list from
 * the beginning or the end, whichever is closer to the specified index.<p>
 *
 * <p><strong>Note that this implementation is not synchronized.</strong>
 * If multiple threads access a linked list concurrently, and at least
 * one of the threads modifies the list structurally, it <i>must</i> be
 * synchronized externally.  (A structural modification is any operation
 * that adds or deletes one or more elements; merely setting the value of
 * an element is not a structural modification.)  This is typically
 * accomplished by synchronizing on some object that naturally
 * encapsulates the list.
 *
 * If no such object exists, the list should be "wrapped" using the
 * {@link Collections#synchronizedList Collections.synchronizedList}
 * method.  This is best done at creation time, to prevent accidental
 * unsynchronized access to the list:<pre>
 *   List list = Collections.synchronizedList(new LinkedList(...));</pre>
 *
 * <p>The iterators returned by this class's <tt>iterator</tt> and
 * <tt>listIterator</tt> methods are <i>fail-fast</i>: if the list is
 * structurally modified at any time after the iterator is created, in
 * any way except through the Iterator's own <tt>remove</tt> or
 * <tt>add</tt> methods, the iterator will throw a {@link
 * ConcurrentModificationException}.  Thus, in the face of concurrent
 * modification, the iterator fails quickly and cleanly, rather than
 * risking arbitrary, non-deterministic behavior at an undetermined
 * time in the future.
 *
 * <p>Note that the fail-fast behavior of an iterator cannot be guaranteed
 * as it is, generally speaking, impossible to make any hard guarantees in the
 * presence of unsynchronized concurrent modification.  Fail-fast iterators
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness:   <i>the fail-fast behavior of iterators
 * should be used only to detect bugs.</i>
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see     List
 * @see     ArrayList
 * @see     Vector
 * @since 1.2
 * @param <E> the type of elements held in this collection
 */

public class LinkedList<E>
    extends AbstractSequentialList<E>
    implements List<E>, Deque<E>
{
    private transient Entry<E> header = new Entry<E>(null, null, null);
    private transient int size = 0;

    /**
     * Constructs an empty list.
     */
    public LinkedList() {
        header.next = header.previous = header;
    }

    /**
     * Constructs a list containing the elements of the specified
     * collection, in the order they are returned by the collection's
     * iterator.
     *
     * @param  c the collection whose elements are to be placed into this list
     * @throws NullPointerException if the specified collection is null
     */
    public LinkedList(Collection<? extends E> c) {
        this();
        addAll(c);
    }

    /**
     * Returns the first element in this list.
     *
     * @return the first element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getFirst() {
        if (size==0)
            throw new NoSuchElementException();

        return header.next.element;
    }

    /**
     * Returns the last element in this list.
     *
     * @return the last element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getLast()  {
        if (size==0)
            throw new NoSuchElementException();

        return header.previous.element;
    }

    /**
     * Removes and returns the first element from this list.
     *
     * @return the first element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeFirst() {
        return remove(header.next);
    }

    /**
     * Removes and returns the last element from this list.
     *
     * @return the last element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeLast() {
        return remove(header.previous);
    }

    /**
     * Inserts the specified element at the beginning of this list.
     *
     * @param e the element to add
     */
    public void addFirst(E e) {
        addBefore(e, header.next);
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     */
    public void addLast(E e) {
        addBefore(e, header);
    }

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     */
    public boolean contains(Object o) {
        return indexOf(o) != -1;
    }

    /**
     * Returns the number of elements in this list.
     *
     * @return the number of elements in this list
     */
    public int size() {
        return size;
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     */
    public boolean add(E e) {
        addBefore(e, header);
        return true;
    }

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present.  If this list does not contain the element, it is
     * unchanged.  More formally, removes the element with the lowest index
     * <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list
     * changed as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     */
    public boolean remove(Object o) {
        if (o==null) {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }
    /**
     * Removes all of the elements from this list.
     */
    public void clear() {
        Entry<E> e = header.next;
        while (e != header) {
            Entry<E> next = e.next;
            e.next = e.previous = null;
            e.element = null;
            e = next;
        }
        header.next = header.previous = header;
        size = 0;
        modCount++;
    }


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        return entry(index).element;
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element.
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E set(int index, E element) {
        Entry<E> e = entry(index);
        E oldVal = e.element;
        e.element = element;
        return oldVal;
    }

    /**
     * Inserts the specified element at the specified position in this list.
     * Shifts the element currently at that position (if any) and any
     * subsequent elements to the right (adds one to their indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public void add(int index, E element) {
        addBefore(element, (index==size ? header : entry(index)));
    }

    /**
     * Removes the element at the specified position in this list.  Shifts any
     * subsequent elements to the left (subtracts one from their indices).
     * Returns the element that was removed from the list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E remove(int index) {
        return remove(entry(index));
    }

    /**
     * Returns the indexed entry.
     */
    private Entry<E> entry(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException();
        Entry<E> e = header;
        if (index < (size >> 1)) {
            for (int i = 0; i <= index; i++)
                e = e.next;
        } else {
            for (int i = size; i > index; i--)
                e = e.previous;
        }
        return e;
    }


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int indexOf(Object o) {
        int index = 0;
        if (o==null) {
            for (Entry e = header.next; e != header; e = e.next) {
                if (e.element==null)
                    return index;
                index++;
            }
        } else {
            for (Entry e = header.next; e != header; e = e.next) {
                if (o.equals(e.element))
                    return index;
                index++;
            }
        }
        return -1;
    }

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int lastIndexOf(Object o) {
        int index = size;
        if (o==null) {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (e.element==null)
                    return index;
            }
        } else {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (o.equals(e.element))
                    return index;
            }
        }
        return -1;
    }

    // Queue operations.

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E peek() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E element() {
        return getFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E poll() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list.
     *
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E remove() {
        return removeFirst();
    }

    /**
     * Adds the specified element as the tail (last element) of this list.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Queue#offer})
     * @since 1.5
     */
    public boolean offer(E e) {
        return add(e);
    }

    // Deque operations
    /**
     * Inserts the specified element at the front of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerFirst})
     * @since 1.6
     */
    public boolean offerFirst(E e) {
        addFirst(e);
        return true;
    }

    /**
     * Inserts the specified element at the end of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerLast})
     * @since 1.6
     */
    public boolean offerLast(E e) {
        addLast(e);
        return true;
    }

    /**
     * Retrieves, but does not remove, the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekFirst() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekLast() {
        if (size==0)
            return null;
        return getLast();
    }

    /**
     * Retrieves and removes the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollFirst() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollLast() {
        if (size==0)
            return null;
        return removeLast();
    }

    /**
     * Pushes an element onto the stack represented by this list.  In other
     * words, inserts the element at the front of this list.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @since 1.6
     */
    public void push(E e) {
        addFirst(e);
    }

    /**
     * Pops an element from the stack represented by this list.  In other
     * words, removes and returns the first element of this list.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this list (which is the top
     *         of the stack represented by this list)
     * @throws NoSuchElementException if this list is empty
     * @since 1.6
     */
    public E pop() {
        return removeFirst();
    }

    /**
     * Removes the first occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeFirstOccurrence(Object o) {
        return remove(o);
    }

    /**
     * Removes the last occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeLastOccurrence(Object o) {
        if (o==null) {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * Returns a list-iterator of the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * Obeys the general contract of <tt>List.listIterator(int)</tt>.<p>
     *
     * The list-iterator is <i>fail-fast</i>: if the list is structurally
     * modified at any time after the Iterator is created, in any way except
     * through the list-iterator's own <tt>remove</tt> or <tt>add</tt>
     * methods, the list-iterator will throw a
     * <tt>ConcurrentModificationException</tt>.  Thus, in the face of
     * concurrent modification, the iterator fails quickly and cleanly, rather
     * than risking arbitrary, non-deterministic behavior at an undetermined
     * time in the future.
     *
     * @param index index of the first element to be returned from the
     *              list-iterator (by a call to <tt>next</tt>)
     * @return a ListIterator of the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     * @see List#listIterator(int)
     */
    public ListIterator<E> listIterator(int index) {
        return new ListItr(index);
    }

    private class ListItr implements ListIterator<E> {
        private Entry<E> lastReturned = header;
        private Entry<E> next;
        private int nextIndex;
        private int expectedModCount = modCount;

        ListItr(int index) {
            if (index < 0 || index > size)
                throw new IndexOutOfBoundsException();
            if (index < (size >> 1)) {
                next = header.next;
                for (nextIndex=0; nextIndex<index; nextIndex++)
                    next = next.next;
            } else {
                next = header;
                for (nextIndex=size; nextIndex>index; nextIndex--)
                    next = next.previous;
            }
        }

        public boolean hasNext() {
            return nextIndex != size;
        }

        public E next() {
            checkForComodification();
            if (nextIndex == size)
                throw new NoSuchElementException();

            lastReturned = next;
            next = next.next;
            nextIndex++;
            return lastReturned.element;
        }

        public boolean hasPrevious() {
            return nextIndex != 0;
        }

        public E previous() {
            if (nextIndex == 0)
                throw new NoSuchElementException();

            lastReturned = next = next.previous;
            nextIndex--;
            checkForComodification();
            return lastReturned.element;
        }

        public int nextIndex() {
            return nextIndex;
        }

        public int previousIndex() {
            return nextIndex-1;
        }

        public void remove() {
            checkForComodification();
            Entry<E> lastNext = lastReturned.next;
            try {
                LinkedList.this.remove(lastReturned);
            } catch (NoSuchElementException e) {
                throw new IllegalStateException();
            }
            if (next==lastReturned)
                next = lastNext;
            else
                nextIndex--;
            lastReturned = header;
            expectedModCount++;
        }

        public void set(E e) {
            if (lastReturned == header)
                throw new IllegalStateException();
            checkForComodification();
            lastReturned.element = e;
        }

        public void add(E e) {
            checkForComodification();
            lastReturned = header;
            addBefore(e, next);
            nextIndex++;
            expectedModCount++;
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private static class Entry<E> {
        E element;
        Entry<E> next;
        Entry<E> previous;

        Entry(E element, Entry<E> next, Entry<E> previous) {
            this.element = element;
            this.next = next;
            this.previous = previous;
        }
    }

    private Entry<E> addBefore(E e, Entry<E> entry) {
        Entry<E> newEntry = new Entry<E>(e, entry, entry.previous);
        newEntry.previous.next = newEntry;
        newEntry.next.previous = newEntry;
        size++;
        modCount++;
        return newEntry;
    }

    private E remove(Entry<E> e) {
        if (e == header)
            throw new NoSuchElementException();

        E result = e.element;
        e.previous.next = e.next;
        e.next.previous = e.previous;
        e.next = e.previous = null;
        e.element = null;
        size--;
        modCount++;
        return result;
    }

    /**
     * @since 1.6
     */
    public Iterator<E> descendingIterator() {
        return new DescendingIterator();
    }

    /** Adapter to provide descending iterators via ListItr.previous */
    private class DescendingIterator implements Iterator {
        final ListItr itr = new ListItr(size());
        public boolean hasNext() {
            return itr.hasPrevious();
        }
        public E next() {
            return itr.previous();
        }
        public void remove() {
            itr.remove();
        }
    }

    /**
     * Returns an array containing all of the elements in this list
     * in proper sequence (from first to last element).
     *
     * <p>The returned array will be "safe" in that no references to it are
     * maintained by this list.  (In other words, this method must allocate
     * a new array).  The caller is thus free to modify the returned array.
     *
     * <p>This method acts as bridge between array-based and collection-based
     * APIs.
     *
     * @return an array containing all of the elements in this list
     *         in proper sequence
     */
    public Object[] toArray() {
        Object[] result = new Object[size];
        int i = 0;
        for (Entry<E> e = header.next; e != header; e = e.next)
            result[i++] = e.element;
        return result;
    }

    private static final long serialVersionUID = 876323262645176354L;
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator for lists that allows the programmer
 * to traverse the list in either direction, modify
 * the list during iteration, and obtain the iterator's
 * current position in the list. A {@code ListIterator}
 * has no current element; its <I>cursor position</I> always
 * lies between the element that would be returned by a call
 * to {@code previous()} and the element that would be
 * returned by a call to {@code next()}.
 * An iterator for a list of length {@code n} has {@code n+1} possible
 * cursor positions, as illustrated by the carets ({@code ^}) below:
 * <PRE>
 *                      Element(0)   Element(1)   Element(2)   ... Element(n-1)
 * cursor positions:  ^            ^            ^            ^                  ^
 * </PRE>
 * Note that the {@link #remove} and {@link #set(Object)} methods are
 * <i>not</i> defined in terms of the cursor position;  they are defined to
 * operate on the last element returned by a call to {@link #next} or
 * {@link #previous()}.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see List
 * @see Iterator
 * @see Enumeration
 * @see List#listIterator()
 * @since   1.2
 */
public interface ListIterator<E> extends Iterator<E> {
    // Query Operations

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the forward direction. (In other words,
     * returns {@code true} if {@link #next} would return an element rather
     * than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the forward direction
     */
    boolean hasNext();

    /**
     * Returns the next element in the list and advances the cursor position.
     * This method may be called repeatedly to iterate through the list,
     * or intermixed with calls to {@link #previous} to go back and forth.
     * (Note that alternating calls to {@code next} and {@code previous}
     * will return the same element repeatedly.)
     *
     * @return the next element in the list
     * @throws NoSuchElementException if the iteration has no next element
     */
    E next();

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the reverse direction.  (In other words,
     * returns {@code true} if {@link #previous} would return an element
     * rather than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the reverse direction
     */
    boolean hasPrevious();

    /**
     * Returns the previous element in the list and moves the cursor
     * position backwards.  This method may be called repeatedly to
     * iterate through the list backwards, or intermixed with calls to
     * {@link #next} to go back and forth.  (Note that alternating calls
     * to {@code next} and {@code previous} will return the same
     * element repeatedly.)
     *
     * @return the previous element in the list
     * @throws NoSuchElementException if the iteration has no previous
     *         element
     */
    E previous();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #next}. (Returns list size if the list
     * iterator is at the end of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code next}, or list size if the list
     *         iterator is at the end of the list
     */
    int nextIndex();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #previous}. (Returns -1 if the list
     * iterator is at the beginning of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code previous}, or -1 if the list
     *         iterator is at the beginning of the list
     */
    int previousIndex();


    // Modification Operations

    /**
     * Removes from the list the last element that was returned by {@link
     * #next} or {@link #previous} (optional operation).  This call can
     * only be made once per call to {@code next} or {@code previous}.
     * It can be made only if {@link #add} has not been
     * called after the last call to {@code next} or {@code previous}.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this list iterator
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void remove();

    /**
     * Replaces the last element returned by {@link #next} or
     * {@link #previous} with the specified element (optional operation).
     * This call can be made only if neither {@link #remove} nor {@link
     * #add} have been called after the last call to {@code next} or
     * {@code previous}.
     *
     * @param e the element with which to replace the last element returned by
     *          {@code next} or {@code previous}
     * @throws UnsupportedOperationException if the {@code set} operation
     *         is not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of the specified
     *         element prevents it from being added to this list
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void set(E e);

    /**
     * Inserts the specified element into the list (optional operation).
     * The element is inserted immediately before the next element that
     * would be returned by {@link #next}, if any, and after the next
     * element that would be returned by {@link #previous}, if any.  (If the
     * list contains no elements, the new element becomes the sole element
     * on the list.)  The new element is inserted before the implicit
     * cursor: a subsequent call to {@code next} would be unaffected, and a
     * subsequent call to {@code previous} would return the new element.
     * (This call increases by one the value that would be returned by a
     * call to {@code nextIndex} or {@code previousIndex}.)
     *
     * @param e the element to insert
     * @throws UnsupportedOperationException if the {@code add} method is
     *         not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of this element
     *         prevents it from being added to this list
     */
    void add(E e);
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An ordered collection (also known as a <i>sequence</i>).  The user of this
 * interface has precise control over where in the list each element is
 * inserted.  The user can access elements by their integer index (position in
 * the list), and search for elements in the list.<p>
 *
 * Unlike sets, lists typically allow duplicate elements.  More formally,
 * lists typically allow pairs of elements <tt>e1</tt> and <tt>e2</tt>
 * such that <tt>e1.equals(e2)</tt>, and they typically allow multiple
 * null elements if they allow null elements at all.  It is not inconceivable
 * that someone might wish to implement a list that prohibits duplicates, by
 * throwing runtime exceptions when the user attempts to insert them, but we
 * expect this usage to be rare.<p>
 *
 * The <tt>List</tt> interface places additional stipulations, beyond those
 * specified in the <tt>Collection</tt> interface, on the contracts of the
 * <tt>iterator</tt>, <tt>add</tt>, <tt>remove</tt>, <tt>equals</tt>, and
 * <tt>hashCode</tt> methods.  Declarations for other inherited methods are
 * also included here for convenience.<p>
 *
 * The <tt>List</tt> interface provides four methods for positional (indexed)
 * access to list elements.  Lists (like Java arrays) are zero based.  Note
 * that these operations may execute in time proportional to the index value
 * for some implementations (the <tt>LinkedList</tt> class, for
 * example). Thus, iterating over the elements in a list is typically
 * preferable to indexing through it if the caller does not know the
 * implementation.<p>
 *
 * The <tt>List</tt> interface provides a special iterator, called a
 * <tt>ListIterator</tt>, that allows element insertion and replacement, and
 * bidirectional access in addition to the normal operations that the
 * <tt>Iterator</tt> interface provides.  A method is provided to obtain a
 * list iterator that starts at a specified position in the list.<p>
 *
 * The <tt>List</tt> interface provides two methods to search for a specified
 * object.  From a performance standpoint, these methods should be used with
 * caution.  In many implementations they will perform costly linear
 * searches.<p>
 *
 * The <tt>List</tt> interface provides two methods to efficiently insert and
 * remove multiple elements at an arbitrary point in the list.<p>
 *
 * Note: While it is permissible for lists to contain themselves as elements,
 * extreme caution is advised: the <tt>equals</tt> and <tt>hashCode</tt>
 * methods are no longer well defined on such a list.
 *
 * <p>Some list implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the list may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see Set
 * @see ArrayList
 * @see LinkedList
 * @see Vector
 * @see Arrays#asList(Object[])
 * @see Collections#nCopies(int, Object)
 * @see Collections#EMPTY_LIST
 * @see AbstractList
 * @see AbstractSequentialList
 * @since 1.2
 */

public interface List<E> extends Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this list.  If this list contains
     * more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this list
     */
    int size();

    /**
     * Returns <tt>true</tt> if this list contains no elements.
     *
     * @return <tt>true</tt> if this list contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    boolean add(E e);

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present (optional operation).  If this list does not contain
     * the element, it is unchanged.  More formally, removes the element with
     * the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list changed
     * as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     */
    boolean remove(Object o);


    // Bulk Modification Operations

    /**
     * Returns <tt>true</tt> if this list contains all of the elements of the
     * specified collection.
     *
     * @param  c collection to be checked for containment in this list
     * @return <tt>true</tt> if this list contains all of the elements of the
     *         specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         list (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Appends all of the elements in the specified collection to the end of
     * this list, in the order that they are returned by the specified
     * collection's iterator (optional operation).  The behavior of this
     * operation is undefined if the specified collection is modified while
     * the operation is in progress.  (Note that this will occur if the
     * specified collection is this list, and it's nonempty.)
     *
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * @param index index at which to insert the first element from the
     *              specified collection
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    boolean addAll(int index, Collection<? extends E> c);

    /**
     * Removes from this list all of its elements that are contained in the
     * specified collection (optional operation).
     *
     * @param c collection containing elements to be removed from this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this list that are contained in the
     * specified collection (optional operation).  In other words, removes
     * from this list all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this list
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * <tt>true</tt> if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements <tt>e1</tt> and
     * <tt>e2</tt> are <i>equal</i> if <tt>(e1==null ? e2==null :
     * e1.equals(e2))</tt>.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.  This
     * definition ensures that the equals method works properly across
     * different implementations of the <tt>List</tt> interface.
     *
     * @param o the object to be compared for equality with this list
     * @return <tt>true</tt> if the specified object is equal to this list
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this list.  The hash code of a list
     * is defined to be the result of the following calculation:
     * <pre>
     *  int hashCode = 1;
     *  for (E e : list)
     *      hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
     * </pre>
     * This ensures that <tt>list1.equals(list2)</tt> implies that
     * <tt>list1.hashCode()==list2.hashCode()</tt> for any two lists,
     * <tt>list1</tt> and <tt>list2</tt>, as required by the general
     * contract of {@link Object#hashCode}.
     *
     * @return the hash code value for this list
     * @see Object#equals(Object)
     * @see #equals(Object)
     */
    int hashCode();


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E get(int index);

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>set</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E set(int index, E element);

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    void add(int index, E element);

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E remove(int index);


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int indexOf(Object o);

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int lastIndexOf(Object o);


    // List Iterators

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     */
    ListIterator<E> listIterator();

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * The specified index indicates the first element that would be
     * returned by an initial call to {@link ListIterator#next next}.
     * An initial call to {@link ListIterator#previous previous} would
     * return the element with the specified index minus one.
     *
     * @param index index of the first element to be returned from the
     *        list iterator (by a call to {@link ListIterator#next next})
     * @return a list iterator over the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         ({@code index < 0 || index > size()})
     */
    ListIterator<E> listIterator(int index);

    // View

    /**
     * Returns a view of the portion of this list between the specified
     * <tt>fromIndex</tt>, inclusive, and <tt>toIndex</tt>, exclusive.  (If
     * <tt>fromIndex</tt> and <tt>toIndex</tt> are equal, the returned list is
     * empty.)  The returned list is backed by this list, so non-structural
     * changes in the returned list are reflected in this list, and vice-versa.
     * The returned list supports all of the optional list operations supported
     * by this list.<p>
     *
     * This method eliminates the need for explicit range operations (of
     * the sort that commonly exist for arrays).  Any operation that expects
     * a list can be used as a range operation by passing a subList view
     * instead of a whole list.  For example, the following idiom
     * removes a range of elements from a list:
     * <pre>
     *      list.subList(from, to).clear();
     * </pre>
     * Similar idioms may be constructed for <tt>indexOf</tt> and
     * <tt>lastIndexOf</tt>, and all of the algorithms in the
     * <tt>Collections</tt> class can be applied to a subList.<p>
     *
     * The semantics of the list returned by this method become undefined if
     * the backing list (i.e., this list) is <i>structurally modified</i> in
     * any way other than via the returned list.  (Structural modifications are
     * those that change the size of this list, or otherwise perturb it in such
     * a fashion that iterations in progress may yield incorrect results.)
     *
     * @param fromIndex low endpoint (inclusive) of the subList
     * @param toIndex high endpoint (exclusive) of the subList
     * @return a view of the specified range within this list
     * @throws IndexOutOfBoundsException for an illegal endpoint index value
     *         (<tt>fromIndex &lt; 0 || toIndex &gt; size ||
     *         fromIndex &gt; toIndex</tt>)
     */
    List<E> subList(int fromIndex, int toIndex);
}


/*
 * Copyright 1994-1998 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown by the <code>nextElement</code> method of an
 * <code>Enumeration</code> to indicate that there are no more
 * elements in the enumeration.
 *
 * @author  unascribed
 * @see     java.util.Enumeration
 * @see     java.util.Enumeration#nextElement()
 * @since   JDK1.0
 */
public
class NoSuchElementException extends RuntimeException {
    /**
     * Constructs a <code>NoSuchElementException</code> with <tt>null</tt>
     * as its error message string.
     */
    public NoSuchElementException() {
        super();
    }

    /**
     * Constructs a <code>NoSuchElementException</code>, saving a reference
     * to the error message string <tt>s</tt> for later retrieval by the
     * <tt>getMessage</tt> method.
     *
     * @param   s   the detail message.
     */
    public NoSuchElementException(String s) {
        super(s);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea with assistance from members of JCP JSR-166
 * Expert Group and released to the public domain, as explained at
 * http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A collection designed for holding elements prior to processing.
 * Besides basic {@link java.util.Collection Collection} operations,
 * queues provide additional insertion, extraction, and inspection
 * operations.  Each of these methods exists in two forms: one throws
 * an exception if the operation fails, the other returns a special
 * value (either <tt>null</tt> or <tt>false</tt>, depending on the
 * operation).  The latter form of the insert operation is designed
 * specifically for use with capacity-restricted <tt>Queue</tt>
 * implementations; in most implementations, insert operations cannot
 * fail.
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Returns special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #add add(e)}</td>
 *    <td>{@link #offer offer(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #remove remove()}</td>
 *    <td>{@link #poll poll()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #element element()}</td>
 *    <td>{@link #peek peek()}</td>
 *  </tr>
 * </table>
 *
 * <p>Queues typically, but do not necessarily, order elements in a
 * FIFO (first-in-first-out) manner.  Among the exceptions are
 * priority queues, which order elements according to a supplied
 * comparator, or the elements' natural ordering, and LIFO queues (or
 * stacks) which order the elements LIFO (last-in-first-out).
 * Whatever the ordering used, the <em>head</em> of the queue is that
 * element which would be removed by a call to {@link #remove() } or
 * {@link #poll()}.  In a FIFO queue, all new elements are inserted at
 * the <em> tail</em> of the queue. Other kinds of queues may use
 * different placement rules.  Every <tt>Queue</tt> implementation
 * must specify its ordering properties.
 *
 * <p>The {@link #offer offer} method inserts an element if possible,
 * otherwise returning <tt>false</tt>.  This differs from the {@link
 * java.util.Collection#add Collection.add} method, which can fail to
 * add an element only by throwing an unchecked exception.  The
 * <tt>offer</tt> method is designed for use when failure is a normal,
 * rather than exceptional occurrence, for example, in fixed-capacity
 * (or &quot;bounded&quot;) queues.
 *
 * <p>The {@link #remove()} and {@link #poll()} methods remove and
 * return the head of the queue.
 * Exactly which element is removed from the queue is a
 * function of the queue's ordering policy, which differs from
 * implementation to implementation. The <tt>remove()</tt> and
 * <tt>poll()</tt> methods differ only in their behavior when the
 * queue is empty: the <tt>remove()</tt> method throws an exception,
 * while the <tt>poll()</tt> method returns <tt>null</tt>.
 *
 * <p>The {@link #element()} and {@link #peek()} methods return, but do
 * not remove, the head of the queue.
 *
 * <p>The <tt>Queue</tt> interface does not define the <i>blocking queue
 * methods</i>, which are common in concurrent programming.  These methods,
 * which wait for elements to appear or for space to become available, are
 * defined in the {@link java.util.concurrent.BlockingQueue} interface, which
 * extends this interface.
 *
 * <p><tt>Queue</tt> implementations generally do not allow insertion
 * of <tt>null</tt> elements, although some implementations, such as
 * {@link LinkedList}, do not prohibit insertion of <tt>null</tt>.
 * Even in the implementations that permit it, <tt>null</tt> should
 * not be inserted into a <tt>Queue</tt>, as <tt>null</tt> is also
 * used as a special return value by the <tt>poll</tt> method to
 * indicate that the queue contains no elements.
 *
 * <p><tt>Queue</tt> implementations generally do not define
 * element-based versions of methods <tt>equals</tt> and
 * <tt>hashCode</tt> but instead inherit the identity based versions
 * from class <tt>Object</tt>, because element-based equality is not
 * always well-defined for queues with the same elements but different
 * ordering properties.
 *
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @see java.util.Collection
 * @see LinkedList
 * @see PriorityQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.BlockingQueue
 * @see java.util.concurrent.ArrayBlockingQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.PriorityBlockingQueue
 * @since 1.5
 * @author Doug Lea
 * @param <E> the type of elements held in this collection
 */
public interface Queue<E> extends Collection<E> {
    /**
     * Inserts the specified element into this queue if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt>
     * if no space is currently available.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean add(E e);

    /**
     * Inserts the specified element into this queue if it is possible to do
     * so immediately without violating capacity restrictions.
     * When using a capacity-restricted queue, this method is generally
     * preferable to {@link #add}, which can fail to insert an element only
     * by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this queue, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of this queue.  This method differs
     * from {@link #poll poll} only in that it throws an exception if this
     * queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of this queue.  This method
     * differs from {@link #peek peek} only in that it throws an exception
     * if this queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E peek();
}


/*
 * Copyright 2000-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Marker interface used by <tt>List</tt> implementations to indicate that
 * they support fast (generally constant time) random access.  The primary
 * purpose of this interface is to allow generic algorithms to alter their
 * behavior to provide good performance when applied to either random or
 * sequential access lists.
 *
 * <p>The best algorithms for manipulating random access lists (such as
 * <tt>ArrayList</tt>) can produce quadratic behavior when applied to
 * sequential access lists (such as <tt>LinkedList</tt>).  Generic list
 * algorithms are encouraged to check whether the given list is an
 * <tt>instanceof</tt> this interface before applying an algorithm that would
 * provide poor performance if it were applied to a sequential access list,
 * and to alter their behavior if necessary to guarantee acceptable
 * performance.
 *
 * <p>It is recognized that the distinction between random and sequential
 * access is often fuzzy.  For example, some <tt>List</tt> implementations
 * provide asymptotically linear access times if they get huge, but constant
 * access times in practice.  Such a <tt>List</tt> implementation
 * should generally implement this interface.  As a rule of thumb, a
 * <tt>List</tt> implementation should implement this interface if,
 * for typical instances of the class, this loop:
 * <pre>
 *     for (int i=0, n=list.size(); i &lt; n; i++)
 *         list.get(i);
 * </pre>
 * runs faster than this loop:
 * <pre>
 *     for (Iterator i=list.iterator(); i.hasNext(); )
 *         i.next();
 * </pre>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @since 1.4
 */
public interface RandomAccess {
}


package javaUtilEx;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that the requested operation is not supported.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @since   1.2
 */
public class UnsupportedOperationException extends RuntimeException {
    /**
     * Constructs an UnsupportedOperationException with no detail message.
     */
    public UnsupportedOperationException() {
    }

    /**
     * Constructs an UnsupportedOperationException with the specified
     * detail message.
     *
     * @param message the detail message
     */
    public UnsupportedOperationException(String message) {
        super(message);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public UnsupportedOperationException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public UnsupportedOperationException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1242599979055084673L;
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
javaUtilEx.juLinkedListCreateLastIndexOf.main([Ljava/lang/String;)V: Graph of 1003 nodes with 8 SCCs.



javaUtilEx.juLinkedListCreateLastIndexOf.createList(I)LjavaUtilEx/LinkedList;: Graph of 250 nodes with 1 SCC.



javaUtilEx.Content.equals(Ljava/lang/Object;)Z: Graph of 32 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 9 SCCss.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateLastIndexOf.createList(I)LjavaUtilEx/LinkedList;
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*java.lang.String: [count]
*javaUtilEx.LinkedList: [header, size]
*javaUtilEx.LinkedList$Entry: [previous, next]
*javaUtilEx.AbstractList: [modCount]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(8) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 118 IRulesP rules:
f12659_0_createList_LE(EOS(STATIC_12659(java.lang.Object(o9007sub), i3143)), i3158, i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12667_0_createList_LE(EOS(STATIC_12667(java.lang.Object(o9007sub), i3143)), i3158, i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12667_0_createList_LE(EOS(STATIC_12667(java.lang.Object(o9007sub), i3143)), i3158, i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12676_0_createList_Load(EOS(STATIC_12676(java.lang.Object(o9007sub), i3143)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: i3158 > 0
f12676_0_createList_Load(EOS(STATIC_12676(java.lang.Object(o9007sub), i3143)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12685_0_createList_New(EOS(STATIC_12685(java.lang.Object(o9007sub), i3143)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12685_0_createList_New(EOS(STATIC_12685(java.lang.Object(o9007sub), i3143)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12693_0_createList_Duplicate(EOS(STATIC_12693(java.lang.Object(o9007sub), i3143)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12693_0_createList_Duplicate(EOS(STATIC_12693(java.lang.Object(o9007sub), i3143)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12699_0_createList_InvokeMethod(EOS(STATIC_12699(java.lang.Object(o9007sub), i3143)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12699_0_createList_InvokeMethod(EOS(STATIC_12699(java.lang.Object(o9007sub), i3143)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12707_0_random_FieldAccess(EOS(STATIC_12707(java.lang.Object(o9007sub), i3143)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12707_0_random_FieldAccess(EOS(STATIC_12707(java.lang.Object(o9007sub), i3143)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12720_0_random_FieldAccess(EOS(STATIC_12720(java.lang.Object(o9007sub), i3143)), i3158, java.lang.Object(o9007sub), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12720_0_random_FieldAccess(EOS(STATIC_12720(java.lang.Object(o9007sub), i3143)), i3158, java.lang.Object(o9007sub), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12726_0_random_ArrayAccess(EOS(STATIC_12726(java.lang.Object(o9007sub), i3143)), i3158, java.lang.Object(o9007sub), i3143, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12726_0_random_ArrayAccess(EOS(STATIC_12726(java.lang.Object(ARRAY(i3197)), i3143)), i3158, java.lang.Object(ARRAY(i3197)), i3143, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12731_0_random_ArrayAccess(EOS(STATIC_12731(java.lang.Object(ARRAY(i3197)), i3143)), i3158, java.lang.Object(ARRAY(i3197)), i3143, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: i3197 >= 0
f12731_0_random_ArrayAccess(EOS(STATIC_12731(java.lang.Object(ARRAY(i3197)), i3202)), i3158, java.lang.Object(ARRAY(i3197)), i3202, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12739_0_random_ArrayAccess(EOS(STATIC_12739(java.lang.Object(ARRAY(i3197)), i3202)), i3158, java.lang.Object(ARRAY(i3197)), i3202, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12739_0_random_ArrayAccess(EOS(STATIC_12739(java.lang.Object(ARRAY(i3197)), i3202)), i3158, java.lang.Object(ARRAY(i3197)), i3202, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12748_0_random_ArrayAccess(EOS(STATIC_12748(java.lang.Object(ARRAY(i3197)), i3202)), i3158, java.lang.Object(ARRAY(i3197)), i3202, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12748_0_random_ArrayAccess(EOS(STATIC_12748(java.lang.Object(ARRAY(i3197)), i3202)), i3158, java.lang.Object(ARRAY(i3197)), i3202, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12758_0_random_Store(EOS(STATIC_12758(java.lang.Object(ARRAY(i3197)), i3202)), i3158, o9375, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: i3202 < i3197
f12758_0_random_Store(EOS(STATIC_12758(java.lang.Object(ARRAY(i3197)), i3202)), i3158, o9375, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12768_0_random_FieldAccess(EOS(STATIC_12768(java.lang.Object(ARRAY(i3197)), i3202)), i3158, o9375, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12768_0_random_FieldAccess(EOS(STATIC_12768(java.lang.Object(ARRAY(i3197)), i3202)), i3158, o9375, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12776_0_random_ConstantStackPush(EOS(STATIC_12776(java.lang.Object(ARRAY(i3197)), i3202)), i3158, o9375, i3202, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12776_0_random_ConstantStackPush(EOS(STATIC_12776(java.lang.Object(ARRAY(i3197)), i3202)), i3158, o9375, i3202, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12782_0_random_IntArithmetic(EOS(STATIC_12782(java.lang.Object(ARRAY(i3197)), i3202)), i3158, o9375, i3202, 1, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12782_0_random_IntArithmetic(EOS(STATIC_12782(java.lang.Object(ARRAY(i3197)), i3202)), i3158, o9375, i3202, matching1, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12792_0_random_FieldAccess(EOS(STATIC_12792(java.lang.Object(ARRAY(i3197)), i3202)), i3158, o9375, i3202 + 1, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: i3202 >= 0 && matching1 = 1
f12792_0_random_FieldAccess(EOS(STATIC_12792(java.lang.Object(ARRAY(i3197)), i3202)), i3158, o9375, i3291, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12801_0_random_Load(EOS(STATIC_12801(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9375, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12801_0_random_Load(EOS(STATIC_12801(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9375, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12809_0_random_InvokeMethod(EOS(STATIC_12809(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9375, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12809_0_random_InvokeMethod(EOS(STATIC_12809(java.lang.Object(ARRAY(i3197)), i3291)), i3158, java.lang.Object(o9590sub), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12818_0_random_InvokeMethod(EOS(STATIC_12818(java.lang.Object(ARRAY(i3197)), i3291)), i3158, java.lang.Object(o9590sub), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12818_0_random_InvokeMethod(EOS(STATIC_12818(java.lang.Object(ARRAY(i3197)), i3291)), i3158, java.lang.Object(o9615sub), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12828_0_random_InvokeMethod(EOS(STATIC_12828(java.lang.Object(ARRAY(i3197)), i3291)), i3158, java.lang.Object(o9615sub), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12828_0_random_InvokeMethod(EOS(STATIC_12828(java.lang.Object(ARRAY(i3197)), i3291)), i3158, java.lang.Object(o9615sub), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12842_0_length_Load(EOS(STATIC_12842(java.lang.Object(ARRAY(i3197)), i3291)), i3158, java.lang.Object(o9615sub), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12842_0_length_Load(EOS(STATIC_12842(java.lang.Object(ARRAY(i3197)), i3291)), i3158, java.lang.Object(o9615sub), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12871_0_length_FieldAccess(EOS(STATIC_12871(java.lang.Object(ARRAY(i3197)), i3291)), i3158, java.lang.Object(o9615sub), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12871_0_length_FieldAccess(EOS(STATIC_12871(java.lang.Object(ARRAY(i3197)), i3291)), i3158, java.lang.Object(java.lang.String(EOC, i3319)), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12887_0_length_FieldAccess(EOS(STATIC_12887(java.lang.Object(ARRAY(i3197)), i3291)), i3158, java.lang.Object(java.lang.String(EOC, i3319)), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12887_0_length_FieldAccess(EOS(STATIC_12887(java.lang.Object(ARRAY(i3197)), i3291)), i3158, java.lang.Object(java.lang.String(EOC, i3319)), o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12901_0_length_Return(EOS(STATIC_12901(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12901_0_length_Return(EOS(STATIC_12901(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12914_0_random_Return(EOS(STATIC_12914(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12914_0_random_Return(EOS(STATIC_12914(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12926_0_createList_InvokeMethod(EOS(STATIC_12926(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12926_0_createList_InvokeMethod(EOS(STATIC_12926(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12934_0__init__Load(EOS(STATIC_12934(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12934_0__init__Load(EOS(STATIC_12934(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12957_0__init__InvokeMethod(EOS(STATIC_12957(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12957_0__init__InvokeMethod(EOS(STATIC_12957(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12969_0__init__Load(EOS(STATIC_12969(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12969_0__init__Load(EOS(STATIC_12969(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12981_0__init__Load(EOS(STATIC_12981(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12981_0__init__Load(EOS(STATIC_12981(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12996_0__init__FieldAccess(EOS(STATIC_12996(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f12996_0__init__FieldAccess(EOS(STATIC_12996(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13014_0__init__Return(EOS(STATIC_13014(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13014_0__init__Return(EOS(STATIC_13014(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13033_0_createList_InvokeMethod(EOS(STATIC_13033(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13033_0_createList_InvokeMethod(EOS(STATIC_13033(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13057_0_addLast_Load(EOS(STATIC_13057(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13057_0_addLast_Load(EOS(STATIC_13057(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13103_0_addLast_Load(EOS(STATIC_13103(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13103_0_addLast_Load(EOS(STATIC_13103(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13125_0_addLast_Load(EOS(STATIC_13125(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13125_0_addLast_Load(EOS(STATIC_13125(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13141_0_addLast_FieldAccess(EOS(STATIC_13141(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13141_0_addLast_FieldAccess(EOS(STATIC_13141(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13156_0_addLast_InvokeMethod(EOS(STATIC_13156(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13156_0_addLast_InvokeMethod(EOS(STATIC_13156(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13170_0_addBefore_New(EOS(STATIC_13170(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13170_0_addBefore_New(EOS(STATIC_13170(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13193_0_addBefore_Duplicate(EOS(STATIC_13193(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13193_0_addBefore_Duplicate(EOS(STATIC_13193(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13206_0_addBefore_Load(EOS(STATIC_13206(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13206_0_addBefore_Load(EOS(STATIC_13206(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13221_0_addBefore_Load(EOS(STATIC_13221(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13221_0_addBefore_Load(EOS(STATIC_13221(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13244_0_addBefore_Load(EOS(STATIC_13244(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13244_0_addBefore_Load(EOS(STATIC_13244(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13253_0_addBefore_FieldAccess(EOS(STATIC_13253(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13253_0_addBefore_FieldAccess(EOS(STATIC_13253(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13265_0_addBefore_FieldAccess(EOS(STATIC_13265(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: o9012[LinkedList$Entry.next]o9012 > 0 && o9012[LinkedList$Entry.next]o9010 > 0 && o9012[LinkedList$Entry.previous]o9010 > 0 && o9012[LinkedList$Entry.previous]o9012 > 0
f13265_0_addBefore_FieldAccess(EOS(STATIC_13265(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13280_0_addBefore_FieldAccess(EOS(STATIC_13280(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: o9011[LinkedList$Entry.previous]o9011 > 0 && o9011[LinkedList$Entry.previous]o9010 > 0
f13280_0_addBefore_FieldAccess(EOS(STATIC_13280(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13292_0_addBefore_FieldAccess(EOS(STATIC_13292(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: o9013[LinkedList$Entry.previous]o9010 > 0 && o9013[LinkedList$Entry.previous]o9013 > 0
f13292_0_addBefore_FieldAccess(EOS(STATIC_13292(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13305_0_addBefore_InvokeMethod(EOS(STATIC_13305(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13305_0_addBefore_InvokeMethod(EOS(STATIC_13305(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13319_0__init__Load(EOS(STATIC_13319(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13319_0__init__Load(EOS(STATIC_13319(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13349_0__init__InvokeMethod(EOS(STATIC_13349(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13349_0__init__InvokeMethod(EOS(STATIC_13349(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13366_0__init__Load(EOS(STATIC_13366(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13366_0__init__Load(EOS(STATIC_13366(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13384_0__init__Load(EOS(STATIC_13384(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13384_0__init__Load(EOS(STATIC_13384(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13400_0__init__FieldAccess(EOS(STATIC_13400(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13400_0__init__FieldAccess(EOS(STATIC_13400(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13411_0__init__Load(EOS(STATIC_13411(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13411_0__init__Load(EOS(STATIC_13411(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13421_0__init__Load(EOS(STATIC_13421(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13421_0__init__Load(EOS(STATIC_13421(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13430_0__init__FieldAccess(EOS(STATIC_13430(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13430_0__init__FieldAccess(EOS(STATIC_13430(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13439_0__init__Load(EOS(STATIC_13439(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13439_0__init__Load(EOS(STATIC_13439(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13447_0__init__Load(EOS(STATIC_13447(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13447_0__init__Load(EOS(STATIC_13447(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13458_0__init__FieldAccess(EOS(STATIC_13458(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13458_0__init__FieldAccess(EOS(STATIC_13458(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13468_0__init__Return(EOS(STATIC_13468(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13468_0__init__Return(EOS(STATIC_13468(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13479_0_addBefore_Store(EOS(STATIC_13479(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13479_0_addBefore_Store(EOS(STATIC_13479(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13492_0_addBefore_Load(EOS(STATIC_13492(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13492_0_addBefore_Load(EOS(STATIC_13492(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13506_0_addBefore_FieldAccess(EOS(STATIC_13506(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13506_0_addBefore_FieldAccess(EOS(STATIC_13506(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13522_0_addBefore_Load(EOS(STATIC_13522(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13522_0_addBefore_Load(EOS(STATIC_13522(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13534_0_addBefore_FieldAccess(EOS(STATIC_13534(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13534_0_addBefore_FieldAccess(EOS(STATIC_13534(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f13548_0_addBefore_FieldAccess(EOS(STATIC_13548(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: o9012[LinkedList$Entry.next]o9012 > 0 && o9013[LinkedList$Entry.previous]o9012 > 0 && o9012[LinkedList$Entry.previous]o9012 > 0 && o9012[LinkedList$Entry.next]o9013 > 0 && o9012[LinkedList$Entry.previous]o9013 > 0 && o9013[LinkedList$Entry.previous]o9013 > 0
f13534_0_addBefore_FieldAccess(EOS(STATIC_13534(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.next]o9011, o12995[LinkedList$Entry.previous]o9011, o12995[LinkedList$Entry.previous]o9011, o12995[LinkedList$Entry.next]o12995, o12995[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.next]o12995, o12995[LinkedList$Entry.previous]o12995, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13549_0_addBefore_FieldAccess(EOS(STATIC_13549(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13548_0_addBefore_FieldAccess(EOS(STATIC_13548(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13554_0_addBefore_FieldAccess(EOS(STATIC_13554(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: o9013[LinkedList$Entry.previous]o9011 > 0 && o9011[LinkedList$Entry.previous]o9011 > 0 && o9011[LinkedList$Entry.previous]o9013 > 0 && o9013[LinkedList$Entry.previous]o9013 > 0
f13554_0_addBefore_FieldAccess(EOS(STATIC_13554(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13565_0_addBefore_Load(EOS(STATIC_13565(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13565_0_addBefore_Load(EOS(STATIC_13565(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13574_0_addBefore_FieldAccess(EOS(STATIC_13574(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13574_0_addBefore_FieldAccess(EOS(STATIC_13574(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13581_0_addBefore_Load(EOS(STATIC_13581(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13581_0_addBefore_Load(EOS(STATIC_13581(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13588_0_addBefore_FieldAccess(EOS(STATIC_13588(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13588_0_addBefore_FieldAccess(EOS(STATIC_13588(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13596_0_addBefore_Load(EOS(STATIC_13596(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13596_0_addBefore_Load(EOS(STATIC_13596(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13609_0_addBefore_Duplicate(EOS(STATIC_13609(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13609_0_addBefore_Duplicate(EOS(STATIC_13609(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13624_0_addBefore_FieldAccess(EOS(STATIC_13624(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13624_0_addBefore_FieldAccess(EOS(STATIC_13624(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13637_0_addBefore_ConstantStackPush(EOS(STATIC_13637(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13637_0_addBefore_ConstantStackPush(EOS(STATIC_13637(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13650_0_addBefore_IntArithmetic(EOS(STATIC_13650(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13650_0_addBefore_IntArithmetic(EOS(STATIC_13650(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13660_0_addBefore_FieldAccess(EOS(STATIC_13660(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13660_0_addBefore_FieldAccess(EOS(STATIC_13660(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13671_0_addBefore_Load(EOS(STATIC_13671(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13671_0_addBefore_Load(EOS(STATIC_13671(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13682_0_addBefore_Duplicate(EOS(STATIC_13682(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13682_0_addBefore_Duplicate(EOS(STATIC_13682(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13695_0_addBefore_FieldAccess(EOS(STATIC_13695(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13695_0_addBefore_FieldAccess(EOS(STATIC_13695(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13702_0_addBefore_ConstantStackPush(EOS(STATIC_13702(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13702_0_addBefore_ConstantStackPush(EOS(STATIC_13702(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13708_0_addBefore_IntArithmetic(EOS(STATIC_13708(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13708_0_addBefore_IntArithmetic(EOS(STATIC_13708(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13717_0_addBefore_FieldAccess(EOS(STATIC_13717(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13717_0_addBefore_FieldAccess(EOS(STATIC_13717(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13729_0_addBefore_Load(EOS(STATIC_13729(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13729_0_addBefore_Load(EOS(STATIC_13729(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13737_0_addBefore_Return(EOS(STATIC_13737(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13737_0_addBefore_Return(EOS(STATIC_13737(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13742_0_addLast_StackPop(EOS(STATIC_13742(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13742_0_addLast_StackPop(EOS(STATIC_13742(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13747_0_addLast_Return(EOS(STATIC_13747(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13747_0_addLast_Return(EOS(STATIC_13747(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13753_0_createList_Inc(EOS(STATIC_13753(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13753_0_createList_Inc(EOS(STATIC_13753(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13761_0_createList_JMP(EOS(STATIC_13761(java.lang.Object(ARRAY(i3197)), i3291)), i3158 + -1, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13761_0_createList_JMP(EOS(STATIC_13761(java.lang.Object(ARRAY(i3197)), i3291)), i4435, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f13769_0_createList_Load(EOS(STATIC_13769(java.lang.Object(ARRAY(i3197)), i3291)), i4435, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) :|: TRUE
f13769_0_createList_Load(EOS(STATIC_13769(java.lang.Object(ARRAY(i3197)), i3291)), i4435, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013, o9012[LinkedList$Entry.previous]o9013) -> f12653_0_createList_Load(EOS(STATIC_12653(java.lang.Object(ARRAY(i3197)), i3291)), i4435, o9012[LinkedList$Entry.next]o9011, o10706[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o10706[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o10706[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o10706, o9012[LinkedList$Entry.previous]o10706, o9011[LinkedList$Entry.previous]o10706, o10706[LinkedList$Entry.previous]o10706) :|: TRUE
f12653_0_createList_Load(EOS(STATIC_12653(java.lang.Object(o9007sub), i3143)), i3145, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) -> f12659_0_createList_LE(EOS(STATIC_12659(java.lang.Object(o9007sub), i3143)), i3145, i3145, o9012[LinkedList$Entry.next]o9011, o9013[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.previous]o9011, o9012[LinkedList$Entry.next]o9012, o9012[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o9013[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o9012, o9013[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.previous]o9010, o9012[LinkedList$Entry.previous]o9012, o9012[LinkedList$Entry.next]o9013, o9012[LinkedList$Entry.previous]o9013, o9011[LinkedList$Entry.previous]o9013, o9013[LinkedList$Entry.previous]o9013) :|: TRUE
f13549_0_addBefore_FieldAccess(EOS(STATIC_13549(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13556_0_addBefore_FieldAccess(EOS(STATIC_13556(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: o12995[LinkedList$Entry.previous]o9011 > 0 && o9011[LinkedList$Entry.previous]o9011 > 0 && o9011[LinkedList$Entry.previous]o12995 > 0 && o12995[LinkedList$Entry.previous]o12995 > 0
f13556_0_addBefore_FieldAccess(EOS(STATIC_13556(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13566_0_addBefore_Load(EOS(STATIC_13566(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13566_0_addBefore_Load(EOS(STATIC_13566(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13575_0_addBefore_FieldAccess(EOS(STATIC_13575(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13575_0_addBefore_FieldAccess(EOS(STATIC_13575(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13582_0_addBefore_Load(EOS(STATIC_13582(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13582_0_addBefore_Load(EOS(STATIC_13582(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13589_0_addBefore_FieldAccess(EOS(STATIC_13589(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13589_0_addBefore_FieldAccess(EOS(STATIC_13589(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13597_0_addBefore_Load(EOS(STATIC_13597(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13597_0_addBefore_Load(EOS(STATIC_13597(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13610_0_addBefore_Duplicate(EOS(STATIC_13610(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13610_0_addBefore_Duplicate(EOS(STATIC_13610(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13625_0_addBefore_FieldAccess(EOS(STATIC_13625(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13625_0_addBefore_FieldAccess(EOS(STATIC_13625(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13638_0_addBefore_ConstantStackPush(EOS(STATIC_13638(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13638_0_addBefore_ConstantStackPush(EOS(STATIC_13638(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13651_0_addBefore_IntArithmetic(EOS(STATIC_13651(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13651_0_addBefore_IntArithmetic(EOS(STATIC_13651(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13661_0_addBefore_FieldAccess(EOS(STATIC_13661(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13661_0_addBefore_FieldAccess(EOS(STATIC_13661(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13672_0_addBefore_Load(EOS(STATIC_13672(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13672_0_addBefore_Load(EOS(STATIC_13672(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13683_0_addBefore_Duplicate(EOS(STATIC_13683(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13683_0_addBefore_Duplicate(EOS(STATIC_13683(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13696_0_addBefore_FieldAccess(EOS(STATIC_13696(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13696_0_addBefore_FieldAccess(EOS(STATIC_13696(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13703_0_addBefore_ConstantStackPush(EOS(STATIC_13703(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13703_0_addBefore_ConstantStackPush(EOS(STATIC_13703(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13709_0_addBefore_IntArithmetic(EOS(STATIC_13709(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13709_0_addBefore_IntArithmetic(EOS(STATIC_13709(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13718_0_addBefore_FieldAccess(EOS(STATIC_13718(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13718_0_addBefore_FieldAccess(EOS(STATIC_13718(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13730_0_addBefore_Load(EOS(STATIC_13730(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13730_0_addBefore_Load(EOS(STATIC_13730(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13738_0_addBefore_Return(EOS(STATIC_13738(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13738_0_addBefore_Return(EOS(STATIC_13738(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13743_0_addLast_StackPop(EOS(STATIC_13743(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13743_0_addLast_StackPop(EOS(STATIC_13743(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13748_0_addLast_Return(EOS(STATIC_13748(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13748_0_addLast_Return(EOS(STATIC_13748(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13754_0_createList_Inc(EOS(STATIC_13754(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13754_0_createList_Inc(EOS(STATIC_13754(java.lang.Object(ARRAY(i3197)), i3291)), i3158, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13762_0_createList_JMP(EOS(STATIC_13762(java.lang.Object(ARRAY(i3197)), i3291)), i3158 + -1, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13762_0_createList_JMP(EOS(STATIC_13762(java.lang.Object(ARRAY(i3197)), i3291)), i4436, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f13770_0_createList_Load(EOS(STATIC_13770(java.lang.Object(ARRAY(i3197)), i3291)), i4436, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) :|: TRUE
f13770_0_createList_Load(EOS(STATIC_13770(java.lang.Object(ARRAY(i3197)), i3291)), i4436, o12995[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o12995) -> f12653_0_createList_Load(EOS(STATIC_12653(java.lang.Object(ARRAY(i3197)), i3291)), i4436, o12995[LinkedList$Entry.next]o9011, o10706[LinkedList$Entry.previous]o9011, o12995[LinkedList$Entry.previous]o9011, o12995[LinkedList$Entry.next]o12995, o12995[LinkedList$Entry.next]o9010, o9011[LinkedList$Entry.previous]o9011, o9011[LinkedList$Entry.previous]o9010, o10706[LinkedList$Entry.previous]o9010, o9011[LinkedList$Entry.previous]o12995, o10706[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.previous]o9010, o12995[LinkedList$Entry.previous]o12995, o12995[LinkedList$Entry.next]o10706, o12995[LinkedList$Entry.previous]o10706, o9011[LinkedList$Entry.previous]o10706, o10706[LinkedList$Entry.previous]o10706) :|: o12995[LinkedList$Entry.next]o12995 = 4 && o10706[LinkedList$Entry.previous]o12995 = 1 && o12995[LinkedList$Entry.next]o10706 = 1
Combined rules. Obtained 2 IRulesP rules:
f12659_0_createList_LE(EOS(STATIC_12659(java.lang.Object(ARRAY(i3197:0)), i3143:0)), i3158:0, i3158:0, o9012[LinkedList$Entry.next]o9011:0, o9013[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o9013:0, o9012[LinkedList$Entry.previous]o9013:0, o9011[LinkedList$Entry.previous]o9013:0, o9013[LinkedList$Entry.previous]o9013:0) -> f12659_0_createList_LE(EOS(STATIC_12659(java.lang.Object(ARRAY(i3197:0)), i3143:0 + 1)), i3158:0 - 1, i3158:0 - 1, o9012[LinkedList$Entry.next]o9011:0, o10706[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o10706[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o10706[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o10706:0, o9012[LinkedList$Entry.previous]o10706:0, o9011[LinkedList$Entry.previous]o10706:0, o10706[LinkedList$Entry.previous]o10706:0) :|: i3158:0 > 0 && i3197:0 > -1 && i3197:0 > i3143:0 && i3143:0 > -1 && o9012[LinkedList$Entry.next]o9010:0 > 0 && o9012[LinkedList$Entry.next]o9012:0 > 0 && o9012[LinkedList$Entry.previous]o9010:0 > 0 && o9012[LinkedList$Entry.previous]o9012:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0 > 0 && o9013[LinkedList$Entry.previous]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0 > 0 && o9012[LinkedList$Entry.next]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0 > 0 && o9012[LinkedList$Entry.previous]o9013:0 > 0 && o9011[LinkedList$Entry.previous]o9013:0 > 0
f12659_0_createList_LE(EOS(STATIC_12659(java.lang.Object(ARRAY(i3197:0)), i3143:0)), i3158:0, i3158:0, o9012[LinkedList$Entry.next]o9011:0, o9013[LinkedList$Entry.previous]o9011:0, o9013[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o9012:0, o9013[LinkedList$Entry.previous]o9012:0, o9011[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9012:0) -> f12659_0_createList_LE(EOS(STATIC_12659(java.lang.Object(ARRAY(i3197:0)), i3143:0 + 1)), i3158:0 - 1, i3158:0 - 1, o12995[LinkedList$Entry.next]o9011:0, o10706[LinkedList$Entry.previous]o9011:0, o9013[LinkedList$Entry.previous]o9011:0, 4, o12995[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o10706[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, 1, o9013[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9012:0, 1, o12995[LinkedList$Entry.previous]o10706:0, o9011[LinkedList$Entry.previous]o10706:0, o10706[LinkedList$Entry.previous]o10706:0) :|: i3158:0 > 0 && i3197:0 > -1 && i3197:0 > i3143:0 && i3143:0 > -1 && o9012[LinkedList$Entry.next]o9010:0 > 0 && o9012[LinkedList$Entry.next]o9012:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0 > 0 && o9011[LinkedList$Entry.previous]o9012:0 > 0
Filtered duplicate arguments:
   f12659_0_createList_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f12659_0_createList_LE(x1, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)
Filtered unneeded arguments:
   f12659_0_createList_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f12659_0_createList_LE(x1, x2, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)
Finished conversion. Obtained 2 rules.P rules:
f12659_0_createList_LE(i3158:0, o9013[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o9013:0, o9012[LinkedList$Entry.previous]o9013:0, o9011[LinkedList$Entry.previous]o9013:0, o9013[LinkedList$Entry.previous]o9013:0, i3197:0, i3143:0) -> f12659_0_createList_LE(i3158:0 - 1, o10706[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o10706[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o10706[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o10706:0, o9012[LinkedList$Entry.previous]o10706:0, o9011[LinkedList$Entry.previous]o10706:0, o10706[LinkedList$Entry.previous]o10706:0, i3197:0, i3143:0 + 1) :|: i3197:0 > -1 && i3158:0 > 0 && i3197:0 > i3143:0 && i3143:0 > -1 && o9012[LinkedList$Entry.next]o9010:0 > 0 && o9012[LinkedList$Entry.next]o9012:0 > 0 && o9012[LinkedList$Entry.previous]o9010:0 > 0 && o9012[LinkedList$Entry.previous]o9012:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0 > 0 && o9013[LinkedList$Entry.previous]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0 > 0 && o9012[LinkedList$Entry.next]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0 > 0 && o9011[LinkedList$Entry.previous]o9013:0 > 0 && o9012[LinkedList$Entry.previous]o9013:0 > 0
f12659_0_createList_LE(i3158:0, o9013[LinkedList$Entry.previous]o9011:0, o9013[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o9012:0, o9013[LinkedList$Entry.previous]o9012:0, o9011[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9012:0, i3197:0, i3143:0) -> f12659_0_createList_LE(i3158:0 - 1, o10706[LinkedList$Entry.previous]o9011:0, o9013[LinkedList$Entry.previous]o9011:0, 4, o12995[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o10706[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, 1, o9013[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9012:0, 1, o12995[LinkedList$Entry.previous]o10706:0, o9011[LinkedList$Entry.previous]o10706:0, o10706[LinkedList$Entry.previous]o10706:0, i3197:0, i3143:0 + 1) :|: i3197:0 > -1 && i3158:0 > 0 && i3197:0 > i3143:0 && i3143:0 > -1 && o9012[LinkedList$Entry.next]o9010:0 > 0 && o9012[LinkedList$Entry.next]o9012:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0 > 0 && o9011[LinkedList$Entry.previous]o9012:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0 > 0

----------------------------------------

(9)
Obligation:
Rules:
f12659_0_createList_LE(i3158:0, o9013[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o9013:0, o9012[LinkedList$Entry.previous]o9013:0, o9011[LinkedList$Entry.previous]o9013:0, o9013[LinkedList$Entry.previous]o9013:0, i3197:0, i3143:0) -> f12659_0_createList_LE(i3158:0 - 1, o10706[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o10706[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o10706[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o10706:0, o9012[LinkedList$Entry.previous]o10706:0, o9011[LinkedList$Entry.previous]o10706:0, o10706[LinkedList$Entry.previous]o10706:0, i3197:0, i3143:0 + 1) :|: i3197:0 > -1 && i3158:0 > 0 && i3197:0 > i3143:0 && i3143:0 > -1 && o9012[LinkedList$Entry.next]o9010:0 > 0 && o9012[LinkedList$Entry.next]o9012:0 > 0 && o9012[LinkedList$Entry.previous]o9010:0 > 0 && o9012[LinkedList$Entry.previous]o9012:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0 > 0 && o9013[LinkedList$Entry.previous]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0 > 0 && o9012[LinkedList$Entry.next]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0 > 0 && o9011[LinkedList$Entry.previous]o9013:0 > 0 && o9012[LinkedList$Entry.previous]o9013:0 > 0
f12659_0_createList_LE(x, x1, x1, x2, x3, x4, x5, x6, x7, x8, x6, x8, x2, x8, x7, x8, x9, x10) -> f12659_0_createList_LE(x - 1, x11, x1, 4, x12, x4, x5, x13, x7, 1, x6, x8, 1, x14, x15, x16, x9, x10 + 1) :|: x9 > -1 && x > 0 && x9 > x10 && x10 > -1 && x3 > 0 && x2 > 0 && x6 > 0 && x8 > 0 && x5 > 0 && x4 > 0 && x7 > 0 && x1 > 0

----------------------------------------

(10) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(11)
Obligation:
Rules:
f12659_0_createList_LE(i3158:0, o9013[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o9013:0, o9012[LinkedList$Entry.previous]o9013:0, o9011[LinkedList$Entry.previous]o9013:0, o9013[LinkedList$Entry.previous]o9013:0, i3197:0, i3143:0) -> f12659_0_createList_LE(arith, o10706[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o10706[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o10706[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o10706:0, o9012[LinkedList$Entry.previous]o10706:0, o9011[LinkedList$Entry.previous]o10706:0, o10706[LinkedList$Entry.previous]o10706:0, i3197:0, arith1) :|: i3197:0 > -1 && i3158:0 > 0 && i3197:0 > i3143:0 && i3143:0 > -1 && o9012[LinkedList$Entry.next]o9010:0 > 0 && o9012[LinkedList$Entry.next]o9012:0 > 0 && o9012[LinkedList$Entry.previous]o9010:0 > 0 && o9012[LinkedList$Entry.previous]o9012:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0 > 0 && o9013[LinkedList$Entry.previous]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0 > 0 && o9012[LinkedList$Entry.next]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0 > 0 && o9011[LinkedList$Entry.previous]o9013:0 > 0 && o9012[LinkedList$Entry.previous]o9013:0 > 0 && arith = i3158:0 - 1 && arith1 = i3143:0 + 1
f12659_0_createList_LE(x17, x18, x18, x19, x20, x21, x22, x23, x24, x25, x23, x25, x19, x25, x24, x25, x26, x27) -> f12659_0_createList_LE(x28, x29, x18, 4, x30, x21, x22, x31, x24, 1, x23, x25, 1, x32, x33, x34, x26, x35) :|: x26 > -1 && x17 > 0 && x26 > x27 && x27 > -1 && x20 > 0 && x19 > 0 && x23 > 0 && x25 > 0 && x22 > 0 && x21 > 0 && x24 > 0 && x18 > 0 && x28 = x17 - 1 && x35 = x27 + 1

----------------------------------------

(12) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12659_0_createList_LE(i3158:0, o9013[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o9013:0, o9012[LinkedList$Entry.previous]o9013:0, o9011[LinkedList$Entry.previous]o9013:0, o9013[LinkedList$Entry.previous]o9013:0, i3197:0, i3143:0) -> f12659_0_createList_LE(arith, o10706[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o10706[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o10706[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o10706:0, o9012[LinkedList$Entry.previous]o10706:0, o9011[LinkedList$Entry.previous]o10706:0, o10706[LinkedList$Entry.previous]o10706:0, i3197:0, arith1) :|: i3197:0 > -1 && i3158:0 > 0 && i3197:0 > i3143:0 && i3143:0 > -1 && o9012[LinkedList$Entry.next]o9010:0 > 0 && o9012[LinkedList$Entry.next]o9012:0 > 0 && o9012[LinkedList$Entry.previous]o9010:0 > 0 && o9012[LinkedList$Entry.previous]o9012:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0 > 0 && o9013[LinkedList$Entry.previous]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0 > 0 && o9012[LinkedList$Entry.next]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0 > 0 && o9011[LinkedList$Entry.previous]o9013:0 > 0 && o9012[LinkedList$Entry.previous]o9013:0 > 0 && arith = i3158:0 - 1 && arith1 = i3143:0 + 1
(2) f12659_0_createList_LE(x17, x18, x18, x19, x20, x21, x22, x23, x24, x25, x23, x25, x19, x25, x24, x25, x26, x27) -> f12659_0_createList_LE(x28, x29, x18, 4, x30, x21, x22, x31, x24, 1, x23, x25, 1, x32, x33, x34, x26, x35) :|: x26 > -1 && x17 > 0 && x26 > x27 && x27 > -1 && x20 > 0 && x19 > 0 && x23 > 0 && x25 > 0 && x22 > 0 && x21 > 0 && x24 > 0 && x18 > 0 && x28 = x17 - 1 && x35 = x27 + 1

Arcs:
(1) -> (1), (2)
(2) -> (1)

This digraph is fully evaluated!
----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f12659_0_createList_LE(i3158:0, o9013[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o9013[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o9013[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o9013:0, o9012[LinkedList$Entry.previous]o9013:0, o9011[LinkedList$Entry.previous]o9013:0, o9013[LinkedList$Entry.previous]o9013:0, i3197:0, i3143:0) -> f12659_0_createList_LE(arith, o10706[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.previous]o9011:0, o9012[LinkedList$Entry.next]o9012:0, o9012[LinkedList$Entry.next]o9010:0, o9011[LinkedList$Entry.previous]o9011:0, o9011[LinkedList$Entry.previous]o9010:0, o10706[LinkedList$Entry.previous]o9010:0, o9011[LinkedList$Entry.previous]o9012:0, o10706[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.previous]o9010:0, o9012[LinkedList$Entry.previous]o9012:0, o9012[LinkedList$Entry.next]o10706:0, o9012[LinkedList$Entry.previous]o10706:0, o9011[LinkedList$Entry.previous]o10706:0, o10706[LinkedList$Entry.previous]o10706:0, i3197:0, arith1) :|: i3197:0 > -1 && i3158:0 > 0 && i3197:0 > i3143:0 && i3143:0 > -1 && o9012[LinkedList$Entry.next]o9010:0 > 0 && o9012[LinkedList$Entry.next]o9012:0 > 0 && o9012[LinkedList$Entry.previous]o9010:0 > 0 && o9012[LinkedList$Entry.previous]o9012:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0 > 0 && o9013[LinkedList$Entry.previous]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0 > 0 && o9012[LinkedList$Entry.next]o9013:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0 > 0 && o9011[LinkedList$Entry.previous]o9013:0 > 0 && o9012[LinkedList$Entry.previous]o9013:0 > 0 && arith = i3158:0 - 1 && arith1 = i3143:0 + 1
(2) f12659_0_createList_LE(x17, x18, x18, x19, x20, x21, x22, x23, x24, x25, x23, x25, x19, x25, x24, x25, x26, x27) -> f12659_0_createList_LE(x28, x29, x18, 4, x30, x21, x22, x31, x24, 1, x23, x25, 1, x32, x33, x34, x26, x35) :|: x26 > -1 && x17 > 0 && x26 > x27 && x27 > -1 && x20 > 0 && x19 > 0 && x23 > 0 && x25 > 0 && x22 > 0 && x21 > 0 && x24 > 0 && x18 > 0 && x28 = x17 - 1 && x35 = x27 + 1

Arcs:
(1) -> (1), (2)
(2) -> (1)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f12659_0_createList_LE(x17:0, x18:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0, x25:0, x23:0, x25:0, x19:0, x25:0, x24:0, x25:0, x26:0, x27:0) -> f12659_0_createList_LE(x17:0 - 1, x29:0, x18:0, 4, x30:0, x21:0, x22:0, x31:0, x24:0, 1, x23:0, x25:0, 1, x32:0, x33:0, x34:0, x26:0, x27:0 + 1) :|: x24:0 > 0 && x18:0 > 0 && x21:0 > 0 && x22:0 > 0 && x25:0 > 0 && x23:0 > 0 && x19:0 > 0 && x20:0 > 0 && x27:0 > -1 && x27:0 < x26:0 && x17:0 > 0 && x26:0 > -1
f12659_0_createList_LE(i3158:0:0, o9013[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.next]o9012:0:0, o9012[LinkedList$Entry.next]o9010:0:0, o9011[LinkedList$Entry.previous]o9011:0:0, o9011[LinkedList$Entry.previous]o9010:0:0, o9013[LinkedList$Entry.previous]o9010:0:0, o9011[LinkedList$Entry.previous]o9012:0:0, o9013[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.previous]o9010:0:0, o9012[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.next]o9013:0:0, o9012[LinkedList$Entry.previous]o9013:0:0, o9011[LinkedList$Entry.previous]o9013:0:0, o9013[LinkedList$Entry.previous]o9013:0:0, i3197:0:0, i3143:0:0) -> f12659_0_createList_LE(i3158:0:0 - 1, o10706[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.next]o9012:0:0, o9012[LinkedList$Entry.next]o9010:0:0, o9011[LinkedList$Entry.previous]o9011:0:0, o9011[LinkedList$Entry.previous]o9010:0:0, o10706[LinkedList$Entry.previous]o9010:0:0, o9011[LinkedList$Entry.previous]o9012:0:0, o10706[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.previous]o9010:0:0, o9012[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.next]o10706:0:0, o9012[LinkedList$Entry.previous]o10706:0:0, o9011[LinkedList$Entry.previous]o10706:0:0, o10706[LinkedList$Entry.previous]o10706:0:0, i3197:0:0, i3143:0:0 + 1) :|: o9011[LinkedList$Entry.previous]o9013:0:0 > 0 && o9012[LinkedList$Entry.previous]o9013:0:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0:0 > 0 && o9012[LinkedList$Entry.next]o9013:0:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0:0 > 0 && o9013[LinkedList$Entry.previous]o9013:0:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0:0 > 0 && o9012[LinkedList$Entry.previous]o9012:0:0 > 0 && o9012[LinkedList$Entry.previous]o9010:0:0 > 0 && o9012[LinkedList$Entry.next]o9012:0:0 > 0 && o9012[LinkedList$Entry.next]o9010:0:0 > 0 && i3143:0:0 > -1 && i3197:0:0 > i3143:0:0 && i3158:0:0 > 0 && i3197:0:0 > -1

----------------------------------------

(16) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12659_0_createList_LE(INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(17)
Obligation:
Rules:
f12659_0_createList_LE(x17:0, x18:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0, x25:0, x23:0, x25:0, x19:0, x25:0, x24:0, x25:0, x26:0, x27:0) -> f12659_0_createList_LE(c, x29:0, x18:0, c1, x30:0, x21:0, x22:0, x31:0, x24:0, c2, x23:0, x25:0, c3, x32:0, x33:0, x34:0, x26:0, c4) :|: c4 = x27:0 + 1 && (c3 = 1 && (c2 = 1 && (c1 = 4 && c = x17:0 - 1))) && (x24:0 > 0 && x18:0 > 0 && x21:0 > 0 && x22:0 > 0 && x25:0 > 0 && x23:0 > 0 && x19:0 > 0 && x20:0 > 0 && x27:0 > -1 && x27:0 < x26:0 && x17:0 > 0 && x26:0 > -1)
f12659_0_createList_LE(i3158:0:0, o9013[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.next]o9012:0:0, o9012[LinkedList$Entry.next]o9010:0:0, o9011[LinkedList$Entry.previous]o9011:0:0, o9011[LinkedList$Entry.previous]o9010:0:0, o9013[LinkedList$Entry.previous]o9010:0:0, o9011[LinkedList$Entry.previous]o9012:0:0, o9013[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.previous]o9010:0:0, o9012[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.next]o9013:0:0, o9012[LinkedList$Entry.previous]o9013:0:0, o9011[LinkedList$Entry.previous]o9013:0:0, o9013[LinkedList$Entry.previous]o9013:0:0, i3197:0:0, i3143:0:0) -> f12659_0_createList_LE(c5, o10706[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.next]o9012:0:0, o9012[LinkedList$Entry.next]o9010:0:0, o9011[LinkedList$Entry.previous]o9011:0:0, o9011[LinkedList$Entry.previous]o9010:0:0, o10706[LinkedList$Entry.previous]o9010:0:0, o9011[LinkedList$Entry.previous]o9012:0:0, o10706[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.previous]o9010:0:0, o9012[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.next]o10706:0:0, o9012[LinkedList$Entry.previous]o10706:0:0, o9011[LinkedList$Entry.previous]o10706:0:0, o10706[LinkedList$Entry.previous]o10706:0:0, i3197:0:0, c6) :|: c6 = i3143:0:0 + 1 && c5 = i3158:0:0 - 1 && (o9011[LinkedList$Entry.previous]o9013:0:0 > 0 && o9012[LinkedList$Entry.previous]o9013:0:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0:0 > 0 && o9012[LinkedList$Entry.next]o9013:0:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0:0 > 0 && o9013[LinkedList$Entry.previous]o9013:0:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0:0 > 0 && o9012[LinkedList$Entry.previous]o9012:0:0 > 0 && o9012[LinkedList$Entry.previous]o9010:0:0 > 0 && o9012[LinkedList$Entry.next]o9012:0:0 > 0 && o9012[LinkedList$Entry.next]o9010:0:0 > 0 && i3143:0:0 > -1 && i3197:0:0 > i3143:0:0 && i3158:0:0 > 0 && i3197:0:0 > -1)

----------------------------------------

(18) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f12659_0_createList_LE ] = f12659_0_createList_LE_1

The following rules are decreasing:
f12659_0_createList_LE(x17:0, x18:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0, x25:0, x23:0, x25:0, x19:0, x25:0, x24:0, x25:0, x26:0, x27:0) -> f12659_0_createList_LE(c, x29:0, x18:0, c1, x30:0, x21:0, x22:0, x31:0, x24:0, c2, x23:0, x25:0, c3, x32:0, x33:0, x34:0, x26:0, c4) :|: c4 = x27:0 + 1 && (c3 = 1 && (c2 = 1 && (c1 = 4 && c = x17:0 - 1))) && (x24:0 > 0 && x18:0 > 0 && x21:0 > 0 && x22:0 > 0 && x25:0 > 0 && x23:0 > 0 && x19:0 > 0 && x20:0 > 0 && x27:0 > -1 && x27:0 < x26:0 && x17:0 > 0 && x26:0 > -1)
f12659_0_createList_LE(i3158:0:0, o9013[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.next]o9012:0:0, o9012[LinkedList$Entry.next]o9010:0:0, o9011[LinkedList$Entry.previous]o9011:0:0, o9011[LinkedList$Entry.previous]o9010:0:0, o9013[LinkedList$Entry.previous]o9010:0:0, o9011[LinkedList$Entry.previous]o9012:0:0, o9013[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.previous]o9010:0:0, o9012[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.next]o9013:0:0, o9012[LinkedList$Entry.previous]o9013:0:0, o9011[LinkedList$Entry.previous]o9013:0:0, o9013[LinkedList$Entry.previous]o9013:0:0, i3197:0:0, i3143:0:0) -> f12659_0_createList_LE(c5, o10706[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.next]o9012:0:0, o9012[LinkedList$Entry.next]o9010:0:0, o9011[LinkedList$Entry.previous]o9011:0:0, o9011[LinkedList$Entry.previous]o9010:0:0, o10706[LinkedList$Entry.previous]o9010:0:0, o9011[LinkedList$Entry.previous]o9012:0:0, o10706[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.previous]o9010:0:0, o9012[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.next]o10706:0:0, o9012[LinkedList$Entry.previous]o10706:0:0, o9011[LinkedList$Entry.previous]o10706:0:0, o10706[LinkedList$Entry.previous]o10706:0:0, i3197:0:0, c6) :|: c6 = i3143:0:0 + 1 && c5 = i3158:0:0 - 1 && (o9011[LinkedList$Entry.previous]o9013:0:0 > 0 && o9012[LinkedList$Entry.previous]o9013:0:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0:0 > 0 && o9012[LinkedList$Entry.next]o9013:0:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0:0 > 0 && o9013[LinkedList$Entry.previous]o9013:0:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0:0 > 0 && o9012[LinkedList$Entry.previous]o9012:0:0 > 0 && o9012[LinkedList$Entry.previous]o9010:0:0 > 0 && o9012[LinkedList$Entry.next]o9012:0:0 > 0 && o9012[LinkedList$Entry.next]o9010:0:0 > 0 && i3143:0:0 > -1 && i3197:0:0 > i3143:0:0 && i3158:0:0 > 0 && i3197:0:0 > -1)

The following rules are bounded:
f12659_0_createList_LE(x17:0, x18:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0, x25:0, x23:0, x25:0, x19:0, x25:0, x24:0, x25:0, x26:0, x27:0) -> f12659_0_createList_LE(c, x29:0, x18:0, c1, x30:0, x21:0, x22:0, x31:0, x24:0, c2, x23:0, x25:0, c3, x32:0, x33:0, x34:0, x26:0, c4) :|: c4 = x27:0 + 1 && (c3 = 1 && (c2 = 1 && (c1 = 4 && c = x17:0 - 1))) && (x24:0 > 0 && x18:0 > 0 && x21:0 > 0 && x22:0 > 0 && x25:0 > 0 && x23:0 > 0 && x19:0 > 0 && x20:0 > 0 && x27:0 > -1 && x27:0 < x26:0 && x17:0 > 0 && x26:0 > -1)
f12659_0_createList_LE(i3158:0:0, o9013[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.next]o9012:0:0, o9012[LinkedList$Entry.next]o9010:0:0, o9011[LinkedList$Entry.previous]o9011:0:0, o9011[LinkedList$Entry.previous]o9010:0:0, o9013[LinkedList$Entry.previous]o9010:0:0, o9011[LinkedList$Entry.previous]o9012:0:0, o9013[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.previous]o9010:0:0, o9012[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.next]o9013:0:0, o9012[LinkedList$Entry.previous]o9013:0:0, o9011[LinkedList$Entry.previous]o9013:0:0, o9013[LinkedList$Entry.previous]o9013:0:0, i3197:0:0, i3143:0:0) -> f12659_0_createList_LE(c5, o10706[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.previous]o9011:0:0, o9012[LinkedList$Entry.next]o9012:0:0, o9012[LinkedList$Entry.next]o9010:0:0, o9011[LinkedList$Entry.previous]o9011:0:0, o9011[LinkedList$Entry.previous]o9010:0:0, o10706[LinkedList$Entry.previous]o9010:0:0, o9011[LinkedList$Entry.previous]o9012:0:0, o10706[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.previous]o9010:0:0, o9012[LinkedList$Entry.previous]o9012:0:0, o9012[LinkedList$Entry.next]o10706:0:0, o9012[LinkedList$Entry.previous]o10706:0:0, o9011[LinkedList$Entry.previous]o10706:0:0, o10706[LinkedList$Entry.previous]o10706:0:0, i3197:0:0, c6) :|: c6 = i3143:0:0 + 1 && c5 = i3158:0:0 - 1 && (o9011[LinkedList$Entry.previous]o9013:0:0 > 0 && o9012[LinkedList$Entry.previous]o9013:0:0 > 0 && o9013[LinkedList$Entry.previous]o9011:0:0 > 0 && o9012[LinkedList$Entry.next]o9013:0:0 > 0 && o9013[LinkedList$Entry.previous]o9012:0:0 > 0 && o9013[LinkedList$Entry.previous]o9010:0:0 > 0 && o9013[LinkedList$Entry.previous]o9013:0:0 > 0 && o9011[LinkedList$Entry.previous]o9011:0:0 > 0 && o9011[LinkedList$Entry.previous]o9010:0:0 > 0 && o9012[LinkedList$Entry.previous]o9012:0:0 > 0 && o9012[LinkedList$Entry.previous]o9010:0:0 > 0 && o9012[LinkedList$Entry.next]o9012:0:0 > 0 && o9012[LinkedList$Entry.next]o9010:0:0 > 0 && i3143:0:0 > -1 && i3197:0:0 > i3143:0:0 && i3158:0:0 > 0 && i3197:0:0 > -1)


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateLastIndexOf.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, previous]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(21) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 66 IRulesP rules:
f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17032sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038, java.lang.Object(o17030sub-1534172038))), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032, o17032[LinkedList$Entry.previous]o17027) -> f13898_0_lastIndexOf_Inc(EOS(STATIC_13898), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032, o17032[LinkedList$Entry.previous]o17027) :|: TRUE
f13898_0_lastIndexOf_Inc(EOS(STATIC_13898), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032, o17032[LinkedList$Entry.previous]o17027) -> f13900_0_lastIndexOf_Load(EOS(STATIC_13900), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032, o17032[LinkedList$Entry.previous]o17027) :|: TRUE
f13900_0_lastIndexOf_Load(EOS(STATIC_13900), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032, o17032[LinkedList$Entry.previous]o17027) -> f13901_0_lastIndexOf_Load(EOS(STATIC_13901), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17031sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032, o17032[LinkedList$Entry.previous]o17027) :|: TRUE
f13901_0_lastIndexOf_Load(EOS(STATIC_13901), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17031sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032, o17032[LinkedList$Entry.previous]o17027) -> f13902_0_lastIndexOf_FieldAccess(EOS(STATIC_13902), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032, o17032[LinkedList$Entry.previous]o17027) :|: TRUE
f13902_0_lastIndexOf_FieldAccess(EOS(STATIC_13902), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032, o17032[LinkedList$Entry.previous]o17027) -> f13903_0_lastIndexOf_FieldAccess(EOS(STATIC_13903), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17032, o17032[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030) :|: o17032[LinkedList$Entry.previous]o17030 > 0 && o17030[LinkedList$Entry.previous]o17032 > 0
f13902_0_lastIndexOf_FieldAccess(EOS(STATIC_13902), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17456sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17456sub0), java.lang.Object(o17031sub0), java.lang.Object(o17456sub0), o17029[LinkedList$Entry.next]o17027, o17456[LinkedList$Entry.previous]o17027, o17456[LinkedList$Entry.previous]o17456, o17456[LinkedList$Entry.previous]o17456, o17456[LinkedList$Entry.previous]o17027) -> f13904_0_lastIndexOf_FieldAccess(EOS(STATIC_13904), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17456sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17456sub0), java.lang.Object(o17031sub0), java.lang.Object(o17456sub0), o17029[LinkedList$Entry.next]o17027, o17456[LinkedList$Entry.previous]o17027, o17456[LinkedList$Entry.previous]o17456) :|: TRUE
f13903_0_lastIndexOf_FieldAccess(EOS(STATIC_13903), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17457[LinkedList$Entry.previous]o17027, o17457[LinkedList$Entry.previous]o17030) -> f13905_0_lastIndexOf_FieldAccess(EOS(STATIC_13905), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: o17460[LinkedList$Entry.previous]o17027 < o17457[LinkedList$Entry.previous]o17027 && o17457[LinkedList$Entry.previous]o17027 >= 0 && o17460[LinkedList$Entry.previous]o17030 < o17457[LinkedList$Entry.previous]o17030 && o17457[LinkedList$Entry.previous]o17030 >= 0
f13905_0_lastIndexOf_FieldAccess(EOS(STATIC_13905), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f13907_0_lastIndexOf_InvokeMethod(EOS(STATIC_13907), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17031sub0), o174580, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: TRUE
f13907_0_lastIndexOf_InvokeMethod(EOS(STATIC_13907), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17031sub0), o174580, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f13909_0_equals_Load(EOS(STATIC_13909), java.lang.Object(o17031sub0), o174580, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038, java.lang.Object(o17030sub-1534172038))), java.lang.Object(o17030sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17460sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), o174580, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: i4985 > 1 && i2886 >= 1 && i5098 < i2886
f13907_0_lastIndexOf_InvokeMethod(EOS(STATIC_13907), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17031sub0), o174580, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f13909_1_equals_Load(EOS(STATIC_13909), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17031sub0), o174580, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: i4985 > 1 && i2886 >= 1 && i5098 < i2886
f13909_0_equals_Load(EOS(STATIC_13909), java.lang.Object(o17031sub0), o174580, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038, java.lang.Object(o17030sub-1534172038))), java.lang.Object(o17030sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17460sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), o174580, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f14216_0_equals_Load(EOS(STATIC_14216), java.lang.Object(o17031sub0), o174580, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038, java.lang.Object(o17030sub-1534172038))), java.lang.Object(o17030sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991, java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17460sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), o174580, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: TRUE
f13918_0_equals_Return(EOS(STATIC_13918), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17570sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17460sub-1534049991))), matching1, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f13920_0_equals_Return(EOS(STATIC_13920), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17570sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17460sub-1534049991))), 0, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: TRUE && matching1 = 0
f13920_0_equals_Return(EOS(STATIC_13920), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17716-1533964524, java.lang.Object(o17718sub-1533964524))), matching1, o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17713[LinkedList$Entry.previous]o17715, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713) -> f13931_0_lastIndexOf_EQ(EOS(STATIC_13931), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17716-1533964524, java.lang.Object(o17718sub-1533964524))), 0, o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17713[LinkedList$Entry.previous]o17715, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713) :|: TRUE && matching1 = 0
f13931_0_lastIndexOf_EQ(EOS(STATIC_13931), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17716-1533964524, java.lang.Object(o17718sub-1533964524))), matching1, o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17713[LinkedList$Entry.previous]o17715, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713) -> f13935_0_lastIndexOf_Load(EOS(STATIC_13935), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17716-1533964524, java.lang.Object(o17718sub-1533964524))), o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17713[LinkedList$Entry.previous]o17715, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713) :|: TRUE && matching1 = 0
f13935_0_lastIndexOf_Load(EOS(STATIC_13935), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17716-1533964524, java.lang.Object(o17718sub-1533964524))), o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17713[LinkedList$Entry.previous]o17715, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713) -> f13941_0_lastIndexOf_FieldAccess(EOS(STATIC_13941), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17716-1533964524, java.lang.Object(o17718sub-1533964524))), o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17713[LinkedList$Entry.previous]o17715, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713) :|: TRUE
f13941_0_lastIndexOf_FieldAccess(EOS(STATIC_13941), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17716-1533964524, java.lang.Object(o17718sub-1533964524))), o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17713[LinkedList$Entry.previous]o17715, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713) -> f13947_0_lastIndexOf_Store(EOS(STATIC_13947), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(o17718sub0), o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713, o17713[LinkedList$Entry.previous]o17718) :|: o17713[LinkedList$Entry.previous]o17718 > o17713[LinkedList$Entry.previous]o17715 && o17713[LinkedList$Entry.previous]o17715 >= 0
f13947_0_lastIndexOf_Store(EOS(STATIC_13947), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(o17718sub0), o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713, o17713[LinkedList$Entry.previous]o17718) -> f13951_0_lastIndexOf_JMP(EOS(STATIC_13951), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(o17718sub0), o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713, o17713[LinkedList$Entry.previous]o17718) :|: TRUE
f13951_0_lastIndexOf_JMP(EOS(STATIC_13951), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(o17718sub0), o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713, o17713[LinkedList$Entry.previous]o17718) -> f13955_0_lastIndexOf_Load(EOS(STATIC_13955), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(o17718sub0), o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713, o17713[LinkedList$Entry.previous]o17718) :|: TRUE
f13955_0_lastIndexOf_Load(EOS(STATIC_13955), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(o17718sub0), o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713, o17713[LinkedList$Entry.previous]o17718) -> f13886_0_lastIndexOf_Load(EOS(STATIC_13886), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177111227037256, java.lang.Object(o17713sub1227037256)))))))), java.lang.Object(o17714sub0), java.lang.Object(o17718sub0), o17712[LinkedList$Entry.next]o17710, o17713[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17710, o17718[LinkedList$Entry.previous]o17713, o17713[LinkedList$Entry.previous]o17718) :|: TRUE
f13886_0_lastIndexOf_Load(EOS(STATIC_13886), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032) -> f13891_0_lastIndexOf_Load(EOS(STATIC_13891), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17032sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032) :|: TRUE
f13891_0_lastIndexOf_Load(EOS(STATIC_13891), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17032sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032) -> f13894_0_lastIndexOf_FieldAccess(EOS(STATIC_13894), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17032sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032) :|: TRUE
f13894_0_lastIndexOf_FieldAccess(EOS(STATIC_13894), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17032sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032) -> f13895_0_lastIndexOf_EQ(EOS(STATIC_13895), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17032sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038, java.lang.Object(o17030sub-1534172038))), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032) :|: TRUE
f13895_0_lastIndexOf_EQ(EOS(STATIC_13895), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17032sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038, java.lang.Object(o17030sub-1534172038))), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032) -> f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17031sub0), java.lang.Object(o17032sub0), java.lang.Object(o17032sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038, java.lang.Object(o17030sub-1534172038))), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17032[LinkedList$Entry.previous]o17030, o17030[LinkedList$Entry.previous]o17032, o17032[LinkedList$Entry.previous]o17027) :|: o17032[LinkedList$Entry.previous]o17027 > 0
f13919_0_equals_Return(EOS(STATIC_13919), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17584sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17586sub-1534049991), java.lang.Object(o17460sub-1534049991))), matching1, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f13920_0_equals_Return(EOS(STATIC_13920), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17584sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17586sub-1534049991), java.lang.Object(o17460sub-1534049991))), 0, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: TRUE && matching1 = 0
f13921_0_equals_Return(EOS(STATIC_13921), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17460sub-1534049991))), matching1, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f13923_0_equals_Return(EOS(STATIC_13923), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17460sub-1534049991))), 0, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: TRUE && matching1 = 0
f13923_0_equals_Return(EOS(STATIC_13923), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub-1533960742))), i5167, o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17751[LinkedList$Entry.previous]o17753, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751) -> f13932_0_lastIndexOf_EQ(EOS(STATIC_13932), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub-1533960742))), i5167, o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17751[LinkedList$Entry.previous]o17753, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751) :|: TRUE
f13932_0_lastIndexOf_EQ(EOS(STATIC_13932), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub-1533960742))), matching1, o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17751[LinkedList$Entry.previous]o17753, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751) -> f13937_0_lastIndexOf_EQ(EOS(STATIC_13937), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub-1533960742))), 0, o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17751[LinkedList$Entry.previous]o17753, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751) :|: TRUE && matching1 = 0
f13937_0_lastIndexOf_EQ(EOS(STATIC_13937), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub-1533960742))), matching1, o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17751[LinkedList$Entry.previous]o17753, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751) -> f13943_0_lastIndexOf_Load(EOS(STATIC_13943), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub-1533960742))), o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17751[LinkedList$Entry.previous]o17753, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751) :|: TRUE && matching1 = 0
f13943_0_lastIndexOf_Load(EOS(STATIC_13943), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub-1533960742))), o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17751[LinkedList$Entry.previous]o17753, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751) -> f13948_0_lastIndexOf_FieldAccess(EOS(STATIC_13948), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub-1533960742))), o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17751[LinkedList$Entry.previous]o17753, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751) :|: TRUE
f13948_0_lastIndexOf_FieldAccess(EOS(STATIC_13948), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub-1533960742))), o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17751[LinkedList$Entry.previous]o17753, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751) -> f13952_0_lastIndexOf_Store(EOS(STATIC_13952), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub0), o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751, o17751[LinkedList$Entry.previous]o17756) :|: o17751[LinkedList$Entry.previous]o17756 > o17751[LinkedList$Entry.previous]o17753 && o17751[LinkedList$Entry.previous]o17753 >= 0
f13952_0_lastIndexOf_Store(EOS(STATIC_13952), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub0), o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751, o17751[LinkedList$Entry.previous]o17756) -> f13956_0_lastIndexOf_JMP(EOS(STATIC_13956), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub0), o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751, o17751[LinkedList$Entry.previous]o17756) :|: TRUE
f13956_0_lastIndexOf_JMP(EOS(STATIC_13956), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub0), o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751, o17751[LinkedList$Entry.previous]o17756) -> f13959_0_lastIndexOf_Load(EOS(STATIC_13959), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub0), o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751, o17751[LinkedList$Entry.previous]o17756) :|: TRUE
f13959_0_lastIndexOf_Load(EOS(STATIC_13959), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub0), o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751, o17751[LinkedList$Entry.previous]o17756) -> f13886_0_lastIndexOf_Load(EOS(STATIC_13886), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177491227044169, java.lang.Object(o17751sub1227044169)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub0), o17750[LinkedList$Entry.next]o17748, o17751[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17748, o17756[LinkedList$Entry.previous]o17751, o17751[LinkedList$Entry.previous]o17756) :|: TRUE
f13922_0_equals_Return(EOS(STATIC_13922), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17460sub-1534049991))), matching1, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f13923_0_equals_Return(EOS(STATIC_13923), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17460sub-1534049991))), 1, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: TRUE && matching1 = 1
f13904_0_lastIndexOf_FieldAccess(EOS(STATIC_13904), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), o17029[LinkedList$Entry.next]o17027, o17461[LinkedList$Entry.previous]o17027, o17461[LinkedList$Entry.previous]o17461) -> f13906_0_lastIndexOf_FieldAccess(EOS(STATIC_13906), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: o17464[LinkedList$Entry.previous]o17027 < o17461[LinkedList$Entry.previous]o17027 && o17461[LinkedList$Entry.previous]o17027 >= 0 && o17464[LinkedList$Entry.previous]o17461 < o17461[LinkedList$Entry.previous]o17461 && o17461[LinkedList$Entry.previous]o17461 >= 0
f13906_0_lastIndexOf_FieldAccess(EOS(STATIC_13906), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f13908_0_lastIndexOf_InvokeMethod(EOS(STATIC_13908), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17031sub0), o174620, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: TRUE
f13908_0_lastIndexOf_InvokeMethod(EOS(STATIC_13908), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17031sub0), o174620, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f13910_0_equals_Load(EOS(STATIC_13910), java.lang.Object(o17031sub0), o174620, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o174621226746042, java.lang.Object(o17464sub1226746042))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17464sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17031sub0), o174620, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: i4985 > 1 && i2886 >= 1 && i5098 < i2886
f13908_0_lastIndexOf_InvokeMethod(EOS(STATIC_13908), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17031sub0), o174620, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f13910_1_equals_Load(EOS(STATIC_13910), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17031sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17031sub0), o174620, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: i4985 > 1 && i2886 >= 1 && i5098 < i2886
f13910_0_equals_Load(EOS(STATIC_13910), java.lang.Object(o17031sub0), o174620, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o174621226746042, java.lang.Object(o17464sub1226746042))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17464sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17031sub0), o174620, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f14296_0_equals_Load(EOS(STATIC_14296), java.lang.Object(o17031sub0), o174620, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o174621226746042, java.lang.Object(o17464sub1226746042))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216, java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17464sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17031sub0), o174620, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: TRUE
f13925_0_equals_Return(EOS(STATIC_13925), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17655sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-1534049216))), matching1, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f13927_0_equals_Return(EOS(STATIC_13927), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17655sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-1534049216))), 0, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: TRUE && matching1 = 0
f13927_0_equals_Return(EOS(STATIC_13927), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-1533957735, java.lang.Object(o17790sub-1533957735))), matching1, o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) -> f13933_0_lastIndexOf_EQ(EOS(STATIC_13933), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-1533957735, java.lang.Object(o17790sub-1533957735))), 0, o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) :|: TRUE && matching1 = 0
f13933_0_lastIndexOf_EQ(EOS(STATIC_13933), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-1533957735, java.lang.Object(o17790sub-1533957735))), matching1, o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) -> f13938_0_lastIndexOf_Load(EOS(STATIC_13938), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-1533957735, java.lang.Object(o17790sub-1533957735))), o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) :|: TRUE && matching1 = 0
f13938_0_lastIndexOf_Load(EOS(STATIC_13938), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-1533957735, java.lang.Object(o17790sub-1533957735))), o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) -> f13944_0_lastIndexOf_FieldAccess(EOS(STATIC_13944), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-1533957735, java.lang.Object(o17790sub-1533957735))), o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) :|: TRUE
f13944_0_lastIndexOf_FieldAccess(EOS(STATIC_13944), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-1533957735, java.lang.Object(o17790sub-1533957735))), o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) -> f13949_0_lastIndexOf_Store(EOS(STATIC_13949), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(o17790sub0), o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) :|: TRUE
f13949_0_lastIndexOf_Store(EOS(STATIC_13949), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(o17790sub0), o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) -> f13953_0_lastIndexOf_JMP(EOS(STATIC_13953), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(o17790sub0), o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) :|: TRUE
f13953_0_lastIndexOf_JMP(EOS(STATIC_13953), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(o17790sub0), o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) -> f13957_0_lastIndexOf_Load(EOS(STATIC_13957), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(o17790sub0), o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) :|: TRUE
f13957_0_lastIndexOf_Load(EOS(STATIC_13957), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(o17790sub0), o17786[LinkedList$Entry.next]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787) -> f13886_0_lastIndexOf_Load(EOS(STATIC_13886), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o177851227051609, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17788-306906126, java.lang.Object(o17790sub-306906126)))))))))), java.lang.Object(o17791sub0), java.lang.Object(o17790sub0), o17786[LinkedList$Entry.next]o17784, o17787[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17784, o17790[LinkedList$Entry.previous]o17787, o17787[LinkedList$Entry.previous]o17790) :|: o17787[LinkedList$Entry.previous]o17790 = 1
f13926_0_equals_Return(EOS(STATIC_13926), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-307426027), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17668sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-1534049216), java.lang.Object(o17464sub-1534049216))), matching1, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f13927_0_equals_Return(EOS(STATIC_13927), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-307426027), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17668sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-1534049216), java.lang.Object(o17464sub-1534049216))), 0, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: TRUE && matching1 = 0
f13928_0_equals_Return(EOS(STATIC_13928), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-1534049216))), matching1, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f13930_0_equals_Return(EOS(STATIC_13930), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-1534049216))), 0, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: TRUE && matching1 = 0
f13930_0_equals_Return(EOS(STATIC_13930), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-1533934609))), i5190, o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) -> f13934_0_lastIndexOf_EQ(EOS(STATIC_13934), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-1533934609))), i5190, o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) :|: TRUE
f13934_0_lastIndexOf_EQ(EOS(STATIC_13934), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-1533934609))), matching1, o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) -> f13940_0_lastIndexOf_EQ(EOS(STATIC_13940), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-1533934609))), 0, o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) :|: TRUE && matching1 = 0
f13940_0_lastIndexOf_EQ(EOS(STATIC_13940), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-1533934609))), matching1, o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) -> f13946_0_lastIndexOf_Load(EOS(STATIC_13946), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-1533934609))), o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) :|: TRUE && matching1 = 0
f13946_0_lastIndexOf_Load(EOS(STATIC_13946), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-1533934609))), o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) -> f13950_0_lastIndexOf_FieldAccess(EOS(STATIC_13950), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-1533934609))), o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) :|: TRUE
f13950_0_lastIndexOf_FieldAccess(EOS(STATIC_13950), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-1533934609))), o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) -> f13954_0_lastIndexOf_Store(EOS(STATIC_13954), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub0), o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) :|: TRUE
f13954_0_lastIndexOf_Store(EOS(STATIC_13954), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub0), o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) -> f13958_0_lastIndexOf_JMP(EOS(STATIC_13958), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub0), o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) :|: TRUE
f13958_0_lastIndexOf_JMP(EOS(STATIC_13958), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub0), o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) -> f13960_0_lastIndexOf_Load(EOS(STATIC_13960), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub0), o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) :|: TRUE
f13960_0_lastIndexOf_Load(EOS(STATIC_13960), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub0), o17818[LinkedList$Entry.next]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819) -> f13886_0_lastIndexOf_Load(EOS(STATIC_13886), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o178171227097861, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub-306836748)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub0), o17818[LinkedList$Entry.next]o17816, o17819[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17816, o17822[LinkedList$Entry.previous]o17819, o17819[LinkedList$Entry.previous]o17822) :|: o17819[LinkedList$Entry.previous]o17822 = 1
f13929_0_equals_Return(EOS(STATIC_13929), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-1534049216))), matching1, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f13930_0_equals_Return(EOS(STATIC_13930), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-1534049216))), 1, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: TRUE && matching1 = 1
f13909_1_equals_Load(EOS(STATIC_13909), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17570sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17570sub0), NULL, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f13918_0_equals_Return(EOS(STATIC_13918), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17570sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17460sub-1534049991))), 0, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: TRUE
f13909_1_equals_Load(EOS(STATIC_13909), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17584sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17586sub-1534049991), java.lang.Object(o17460sub-1534049991))), java.lang.Object(o17584sub0), java.lang.Object(o17586sub0), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f13919_0_equals_Return(EOS(STATIC_13919), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(o17584sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17586sub-1534049991), java.lang.Object(o17460sub-1534049991))), 0, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: TRUE
f13909_1_equals_Load(EOS(STATIC_13909), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17460sub-1534049991))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f13921_0_equals_Return(EOS(STATIC_13921), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17460sub-1534049991))), 0, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: TRUE
f13909_1_equals_Load(EOS(STATIC_13909), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17460sub-1534049991))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) -> f13922_0_equals_Return(EOS(STATIC_13922), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(o17030sub1226623189)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17460sub-1534049991))), 1, o17029[LinkedList$Entry.next]o17027, o17030[LinkedList$Entry.previous]o17027, o17030[LinkedList$Entry.previous]o17457, o17460[LinkedList$Entry.previous]o17027, o17460[LinkedList$Entry.previous]o17030) :|: TRUE
f13910_1_equals_Load(EOS(STATIC_13910), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17655sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17655sub0), NULL, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f13925_0_equals_Return(EOS(STATIC_13925), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17655sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-1534049216))), 0, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: TRUE
f13910_1_equals_Load(EOS(STATIC_13910), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-307426027), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17668sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-1534049216), java.lang.Object(o17464sub-1534049216))), java.lang.Object(o17668sub0), java.lang.Object(o17670sub0), o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f13926_0_equals_Return(EOS(STATIC_13926), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-307426027), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(o17668sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-1534049216), java.lang.Object(o17464sub-1534049216))), 0, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: TRUE
f13910_1_equals_Load(EOS(STATIC_13910), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-1534049216))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f13928_0_equals_Return(EOS(STATIC_13928), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-1534049216))), 0, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: TRUE
f13910_1_equals_Load(EOS(STATIC_13910), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-1534049216))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) -> f13929_0_equals_Return(EOS(STATIC_13929), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-307426027)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-1534049216))), 1, o17029[LinkedList$Entry.next]o17027, o17464[LinkedList$Entry.previous]o17027, o17464[LinkedList$Entry.previous]o17461) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17460sub-1534049991:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17460sub-1534049991:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:0, java.lang.Object(o17030sub-1534172038:0))), o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17032:0, o17032[LinkedList$Entry.previous]o17027:0) -> f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17718sub0:0), java.lang.Object(o17718sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:1, java.lang.Object(o17030sub-1534172038:1))), o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17460[LinkedList$Entry.previous]o17030:0, o17713[LinkedList$Entry.previous]o17718:0, o17460[LinkedList$Entry.previous]o17027:0) :|: o17030[LinkedList$Entry.previous]o17032:0 > 0 && o17032[LinkedList$Entry.previous]o17030:0 > 0 && o17713[LinkedList$Entry.previous]o17718:0 > o17030[LinkedList$Entry.previous]o17032:0 && o17032[LinkedList$Entry.previous]o17027:0 > -1 && o17460[LinkedList$Entry.previous]o17027:0 < o17032[LinkedList$Entry.previous]o17027:0 && o17460[LinkedList$Entry.previous]o17030:0 < o17032[LinkedList$Entry.previous]o17030:0 && i2886:0 > 0 && i4985:0 > 1 && o17460[LinkedList$Entry.previous]o17027:0 > 0 && i5098:0 < i2886:0
f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17586sub-1534049991:0), java.lang.Object(o17460sub-1534049991:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17586sub-1534049991:0), java.lang.Object(o17460sub-1534049991:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:0, java.lang.Object(o17030sub-1534172038:0))), o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17032:0, o17032[LinkedList$Entry.previous]o17027:0) -> f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17718sub0:0), java.lang.Object(o17718sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:1, java.lang.Object(o17030sub-1534172038:1))), o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17460[LinkedList$Entry.previous]o17030:0, o17713[LinkedList$Entry.previous]o17718:0, o17460[LinkedList$Entry.previous]o17027:0) :|: o17030[LinkedList$Entry.previous]o17032:0 > 0 && o17032[LinkedList$Entry.previous]o17030:0 > 0 && o17713[LinkedList$Entry.previous]o17718:0 > o17030[LinkedList$Entry.previous]o17032:0 && o17032[LinkedList$Entry.previous]o17027:0 > -1 && o17460[LinkedList$Entry.previous]o17027:0 < o17032[LinkedList$Entry.previous]o17027:0 && o17460[LinkedList$Entry.previous]o17030:0 < o17032[LinkedList$Entry.previous]o17030:0 && i2886:0 > 0 && i4985:0 > 1 && o17460[LinkedList$Entry.previous]o17027:0 > 0 && i5098:0 < i2886:0
f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-1534049216:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-1534049216:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:0, java.lang.Object(o17030sub-1534172038:0))), o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17027:0) -> f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17790sub0:0), java.lang.Object(o17790sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:1, java.lang.Object(o17030sub-1534172038:1))), o17029[LinkedList$Entry.next]o17027:0, o17787[LinkedList$Entry.previous]o17784:0, o17464[LinkedList$Entry.previous]o17461:0, 1, o17464[LinkedList$Entry.previous]o17027:0) :|: o17030[LinkedList$Entry.previous]o17027:0 > -1 && o17464[LinkedList$Entry.previous]o17027:0 < o17030[LinkedList$Entry.previous]o17027:0 && o17464[LinkedList$Entry.previous]o17461:0 < o17032[LinkedList$Entry.previous]o17030:0 && o17032[LinkedList$Entry.previous]o17030:0 > -1 && i2886:0 > 0 && i4985:0 > 1 && o17464[LinkedList$Entry.previous]o17027:0 > 0 && i5098:0 < i2886:0
f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17460sub-1534049991:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17460sub-1534049991:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:0, java.lang.Object(o17030sub-1534172038:0))), o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17032:0, o17032[LinkedList$Entry.previous]o17027:0) -> f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17756sub0:0), java.lang.Object(o17756sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:1, java.lang.Object(o17030sub-1534172038:1))), o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17460[LinkedList$Entry.previous]o17030:0, o17751[LinkedList$Entry.previous]o17756:0, o17460[LinkedList$Entry.previous]o17027:0) :|: o17030[LinkedList$Entry.previous]o17032:0 > 0 && o17032[LinkedList$Entry.previous]o17030:0 > 0 && o17032[LinkedList$Entry.previous]o17027:0 > -1 && o17460[LinkedList$Entry.previous]o17027:0 < o17032[LinkedList$Entry.previous]o17027:0 && o17460[LinkedList$Entry.previous]o17030:0 < o17032[LinkedList$Entry.previous]o17030:0 && o17751[LinkedList$Entry.previous]o17756:0 > o17030[LinkedList$Entry.previous]o17032:0 && i2886:0 > 0 && i4985:0 > 1 && o17460[LinkedList$Entry.previous]o17027:0 > 0 && i5098:0 < i2886:0
f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-307426027:0), java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-1534049216:0), java.lang.Object(o17464sub-1534049216:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-1534049216:0), java.lang.Object(o17464sub-1534049216:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:0, java.lang.Object(o17030sub-1534172038:0))), o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17027:0) -> f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17670sub-307426027:0), java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17790sub0:0), java.lang.Object(o17790sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:1, java.lang.Object(o17030sub-1534172038:1))), o17029[LinkedList$Entry.next]o17027:0, o17787[LinkedList$Entry.previous]o17784:0, o17464[LinkedList$Entry.previous]o17461:0, 1, o17464[LinkedList$Entry.previous]o17027:0) :|: o17030[LinkedList$Entry.previous]o17027:0 > -1 && o17464[LinkedList$Entry.previous]o17027:0 < o17030[LinkedList$Entry.previous]o17027:0 && o17464[LinkedList$Entry.previous]o17461:0 < o17032[LinkedList$Entry.previous]o17030:0 && o17032[LinkedList$Entry.previous]o17030:0 > -1 && i2886:0 > 0 && i4985:0 > 1 && o17464[LinkedList$Entry.previous]o17027:0 > 0 && i5098:0 < i2886:0
f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-1534049216:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-1534049216:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:0, java.lang.Object(o17030sub-1534172038:0))), o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17027:0) -> f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17822sub0:0), java.lang.Object(o17822sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:1, java.lang.Object(o17030sub-1534172038:1))), o17029[LinkedList$Entry.next]o17027:0, o17819[LinkedList$Entry.previous]o17816:0, o17464[LinkedList$Entry.previous]o17461:0, 1, o17464[LinkedList$Entry.previous]o17027:0) :|: o17030[LinkedList$Entry.previous]o17027:0 > -1 && o17464[LinkedList$Entry.previous]o17027:0 < o17030[LinkedList$Entry.previous]o17027:0 && o17464[LinkedList$Entry.previous]o17461:0 < o17032[LinkedList$Entry.previous]o17030:0 && o17032[LinkedList$Entry.previous]o17030:0 > -1 && i2886:0 > 0 && i4985:0 > 1 && o17464[LinkedList$Entry.previous]o17027:0 > 0 && i5098:0 < i2886:0
Removed following non-SCC rules:
f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991:0, java.lang.Object(o17460sub-1534049991:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991:0, java.lang.Object(o17460sub-1534049991:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:0, java.lang.Object(o17030sub-1534172038:0))), o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17032:0, o17032[LinkedList$Entry.previous]o17027:0) -> f14216_0_equals_Load(EOS(STATIC_14216), java.lang.Object(o17031sub0:0), o174580:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:1, java.lang.Object(o17030sub-1534172038:1))), java.lang.Object(o17030sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17458-1534049991:0, java.lang.Object(o17460sub-1534049991:0))), java.lang.Object(o17460sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), o174580:0, o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17030[LinkedList$Entry.previous]o17032:0, o17460[LinkedList$Entry.previous]o17027:0, o17460[LinkedList$Entry.previous]o17030:0) :|: o17032[LinkedList$Entry.previous]o17030:0 > 0 && o17032[LinkedList$Entry.previous]o17027:0 > -1 && o17460[LinkedList$Entry.previous]o17027:0 < o17032[LinkedList$Entry.previous]o17027:0 && o17460[LinkedList$Entry.previous]o17030:0 < o17032[LinkedList$Entry.previous]o17030:0 && o17030[LinkedList$Entry.previous]o17032:0 > 0 && i2886:0 > 0 && i5098:0 < i2886:0 && i4985:0 > 1
f13896_0_lastIndexOf_EQ(EOS(STATIC_13896), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027:0, java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216:0, java.lang.Object(o17464sub-1534049216:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216:0, java.lang.Object(o17464sub-1534049216:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:0, java.lang.Object(o17030sub-1534172038:0))), o17029[LinkedList$Entry.next]o17027:0, o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17027:0) -> f14296_0_equals_Load(EOS(STATIC_14296), java.lang.Object(o17031sub0:0), o174620:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17028-1534172038:1, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o174621226746042:0, java.lang.Object(o17464sub1226746042:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-1534049216:0, java.lang.Object(o17464sub-1534049216:0))), java.lang.Object(o17464sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17462-307426027:0, java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(o17031sub0:0), o174620:0, o17029[LinkedList$Entry.next]o17027:0, o17464[LinkedList$Entry.previous]o17027:0, o17464[LinkedList$Entry.previous]o17461:0) :|: o17030[LinkedList$Entry.previous]o17027:0 > -1 && o17464[LinkedList$Entry.previous]o17027:0 < o17030[LinkedList$Entry.previous]o17027:0 && o17464[LinkedList$Entry.previous]o17461:0 < o17032[LinkedList$Entry.previous]o17030:0 && o17032[LinkedList$Entry.previous]o17030:0 > -1 && i2886:0 > 0 && i5098:0 < i2886:0 && i4985:0 > 1
Filtered constant ground arguments:
   f13896_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f13896_0_lastIndexOf_EQ(x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13896_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13896_0_lastIndexOf_EQ(x1, x2, x4, x5, x6, x7, x8, x9, x10)
Filtered unneeded arguments:
   f13896_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13896_0_lastIndexOf_EQ(x1, x2, x3, x6, x7, x8, x9)
Finished conversion. Obtained 6 rules.P rules:
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17460sub-1534049991:0))), o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17032:0, o17032[LinkedList$Entry.previous]o17027:0, o170281226623189:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17718sub0:0), o17030[LinkedList$Entry.previous]o17027:0, o17460[LinkedList$Entry.previous]o17030:0, o17713[LinkedList$Entry.previous]o17718:0, o17460[LinkedList$Entry.previous]o17027:0, o170281226623189:0) :|: o17032[LinkedList$Entry.previous]o17030:0 > 0 && o17030[LinkedList$Entry.previous]o17032:0 > 0 && o17713[LinkedList$Entry.previous]o17718:0 > o17030[LinkedList$Entry.previous]o17032:0 && o17032[LinkedList$Entry.previous]o17027:0 > -1 && o17460[LinkedList$Entry.previous]o17027:0 < o17032[LinkedList$Entry.previous]o17027:0 && o17460[LinkedList$Entry.previous]o17030:0 < o17032[LinkedList$Entry.previous]o17030:0 && i2886:0 > 0 && i4985:0 > 1 && i5098:0 < i2886:0 && o17460[LinkedList$Entry.previous]o17027:0 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17586sub-1534049991:0), java.lang.Object(o17460sub-1534049991:0))), o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17032:0, o17032[LinkedList$Entry.previous]o17027:0, o170281226623189:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17718sub0:0), o17030[LinkedList$Entry.previous]o17027:0, o17460[LinkedList$Entry.previous]o17030:0, o17713[LinkedList$Entry.previous]o17718:0, o17460[LinkedList$Entry.previous]o17027:0, o170281226623189:0) :|: o17032[LinkedList$Entry.previous]o17030:0 > 0 && o17030[LinkedList$Entry.previous]o17032:0 > 0 && o17713[LinkedList$Entry.previous]o17718:0 > o17030[LinkedList$Entry.previous]o17032:0 && o17032[LinkedList$Entry.previous]o17027:0 > -1 && o17460[LinkedList$Entry.previous]o17027:0 < o17032[LinkedList$Entry.previous]o17027:0 && o17460[LinkedList$Entry.previous]o17030:0 < o17032[LinkedList$Entry.previous]o17030:0 && i2886:0 > 0 && i4985:0 > 1 && i5098:0 < i2886:0 && o17460[LinkedList$Entry.previous]o17027:0 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17464sub-1534049216:0))), o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17027:0, o170281226623189:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17790sub0:0), o17787[LinkedList$Entry.previous]o17784:0, o17464[LinkedList$Entry.previous]o17461:0, 1, o17464[LinkedList$Entry.previous]o17027:0, o170281226623189:0) :|: o17464[LinkedList$Entry.previous]o17027:0 < o17030[LinkedList$Entry.previous]o17027:0 && o17030[LinkedList$Entry.previous]o17027:0 > -1 && o17464[LinkedList$Entry.previous]o17461:0 < o17032[LinkedList$Entry.previous]o17030:0 && o17032[LinkedList$Entry.previous]o17030:0 > -1 && i2886:0 > 0 && i4985:0 > 1 && i5098:0 < i2886:0 && o17464[LinkedList$Entry.previous]o17027:0 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17460sub-1534049991:0))), o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17032:0, o17032[LinkedList$Entry.previous]o17027:0, o170281226623189:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o17756sub0:0), o17030[LinkedList$Entry.previous]o17027:0, o17460[LinkedList$Entry.previous]o17030:0, o17751[LinkedList$Entry.previous]o17756:0, o17460[LinkedList$Entry.previous]o17027:0, o170281226623189:0) :|: o17032[LinkedList$Entry.previous]o17030:0 > 0 && o17030[LinkedList$Entry.previous]o17032:0 > 0 && o17032[LinkedList$Entry.previous]o17027:0 > -1 && o17460[LinkedList$Entry.previous]o17027:0 < o17032[LinkedList$Entry.previous]o17027:0 && o17460[LinkedList$Entry.previous]o17030:0 < o17032[LinkedList$Entry.previous]o17030:0 && o17751[LinkedList$Entry.previous]o17756:0 > o17030[LinkedList$Entry.previous]o17032:0 && i2886:0 > 0 && i4985:0 > 1 && i5098:0 < i2886:0 && o17460[LinkedList$Entry.previous]o17027:0 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17670sub-307426027:0), java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17670sub-1534049216:0), java.lang.Object(o17464sub-1534049216:0))), o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17027:0, o170281226623189:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17670sub-307426027:0), java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17790sub0:0), o17787[LinkedList$Entry.previous]o17784:0, o17464[LinkedList$Entry.previous]o17461:0, 1, o17464[LinkedList$Entry.previous]o17027:0, o170281226623189:0) :|: o17464[LinkedList$Entry.previous]o17027:0 < o17030[LinkedList$Entry.previous]o17027:0 && o17030[LinkedList$Entry.previous]o17027:0 > -1 && o17464[LinkedList$Entry.previous]o17461:0 < o17032[LinkedList$Entry.previous]o17030:0 && o17032[LinkedList$Entry.previous]o17030:0 > -1 && i2886:0 > 0 && i4985:0 > 1 && i5098:0 < i2886:0 && o17464[LinkedList$Entry.previous]o17027:0 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17464sub-1534049216:0))), o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17027:0, o170281226623189:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o17464sub-307426027:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o17822sub0:0), o17819[LinkedList$Entry.previous]o17816:0, o17464[LinkedList$Entry.previous]o17461:0, 1, o17464[LinkedList$Entry.previous]o17027:0, o170281226623189:0) :|: o17464[LinkedList$Entry.previous]o17027:0 < o17030[LinkedList$Entry.previous]o17027:0 && o17030[LinkedList$Entry.previous]o17027:0 > -1 && o17464[LinkedList$Entry.previous]o17461:0 < o17032[LinkedList$Entry.previous]o17030:0 && o17032[LinkedList$Entry.previous]o17030:0 > -1 && i2886:0 > 0 && i4985:0 > 1 && i5098:0 < i2886:0 && o17464[LinkedList$Entry.previous]o17027:0 > 0

----------------------------------------

(22)
Obligation:
Rules:
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17460sub-1534049991:0))), o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17032:0, o17032[LinkedList$Entry.previous]o17027:0, o170281226623189:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17718sub0:0), o17030[LinkedList$Entry.previous]o17027:0, o17460[LinkedList$Entry.previous]o17030:0, o17713[LinkedList$Entry.previous]o17718:0, o17460[LinkedList$Entry.previous]o17027:0, o170281226623189:0) :|: o17032[LinkedList$Entry.previous]o17030:0 > 0 && o17030[LinkedList$Entry.previous]o17032:0 > 0 && o17713[LinkedList$Entry.previous]o17718:0 > o17030[LinkedList$Entry.previous]o17032:0 && o17032[LinkedList$Entry.previous]o17027:0 > -1 && o17460[LinkedList$Entry.previous]o17027:0 < o17032[LinkedList$Entry.previous]o17027:0 && o17460[LinkedList$Entry.previous]o17030:0 < o17032[LinkedList$Entry.previous]o17030:0 && i2886:0 > 0 && i4985:0 > 1 && i5098:0 < i2886:0 && o17460[LinkedList$Entry.previous]o17027:0 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x2), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x7, x8, x) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x2), java.lang.Object(x9), x5, x10, x11, x12, x) :|: x6 > 0 && x7 > 0 && x11 > x7 && x8 > -1 && x12 < x8 && x10 < x6 && x13 > 0 && x14 > 1 && x15 < x13 && x12 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x16, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x17)))))))))), java.lang.Object(x18), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x19))), x20, x21, x21, x20, x16) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x16, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x17)))))))))), java.lang.Object(x18), java.lang.Object(x22), x23, x24, 1, x25, x16) :|: x25 < x20 && x20 > -1 && x24 < x21 && x21 > -1 && x26 > 0 && x27 > 1 && x28 < x26 && x25 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x31))), x32, x33, x34, x35, x29) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x36), x32, x37, x38, x39, x29) :|: x33 > 0 && x34 > 0 && x35 > -1 && x39 < x35 && x37 < x33 && x38 > x34 && x40 > 0 && x41 > 1 && x42 < x40 && x39 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x47), java.lang.Object(x48))), x49, x50, x50, x49, x43) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(x51), x52, x53, 1, x54, x43) :|: x54 < x49 && x49 > -1 && x53 < x50 && x50 > -1 && x55 > 0 && x56 > 1 && x57 < x55 && x54 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x60))), x61, x62, x62, x61, x58) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x63), x64, x65, 1, x66, x58) :|: x66 < x61 && x61 > -1 && x65 < x62 && x62 > -1 && x67 > 0 && x68 > 1 && x69 < x67 && x66 > 0

----------------------------------------

(23) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(24)
Obligation:
Rules:
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17460sub-1534049991:0))), o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17032:0, o17032[LinkedList$Entry.previous]o17027:0, o170281226623189:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17718sub0:0), o17030[LinkedList$Entry.previous]o17027:0, o17460[LinkedList$Entry.previous]o17030:0, o17713[LinkedList$Entry.previous]o17718:0, o17460[LinkedList$Entry.previous]o17027:0, o170281226623189:0) :|: o17032[LinkedList$Entry.previous]o17030:0 > 0 && o17030[LinkedList$Entry.previous]o17032:0 > 0 && o17713[LinkedList$Entry.previous]o17718:0 > o17030[LinkedList$Entry.previous]o17032:0 && o17032[LinkedList$Entry.previous]o17027:0 > -1 && o17460[LinkedList$Entry.previous]o17027:0 < o17032[LinkedList$Entry.previous]o17027:0 && o17460[LinkedList$Entry.previous]o17030:0 < o17032[LinkedList$Entry.previous]o17030:0 && i2886:0 > 0 && i4985:0 > 1 && i5098:0 < i2886:0 && o17460[LinkedList$Entry.previous]o17027:0 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x2), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x7, x8, x) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x2), java.lang.Object(x9), x5, x10, x11, x12, x) :|: x6 > 0 && x7 > 0 && x11 > x7 && x8 > -1 && x12 < x8 && x10 < x6 && x13 > 0 && x14 > 1 && x15 < x13 && x12 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x16, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x17)))))))))), java.lang.Object(x18), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x19))), x20, x21, x21, x20, x16) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x16, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x17)))))))))), java.lang.Object(x18), java.lang.Object(x22), x23, x24, 1, x25, x16) :|: x25 < x20 && x20 > -1 && x24 < x21 && x21 > -1 && x26 > 0 && x27 > 1 && x28 < x26 && x25 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x31))), x32, x33, x34, x35, x29) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x36), x32, x37, x38, x39, x29) :|: x33 > 0 && x34 > 0 && x35 > -1 && x39 < x35 && x37 < x33 && x38 > x34 && x40 > 0 && x41 > 1 && x42 < x40 && x39 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x47), java.lang.Object(x48))), x49, x50, x50, x49, x43) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(x51), x52, x53, 1, x54, x43) :|: x54 < x49 && x49 > -1 && x53 < x50 && x50 > -1 && x55 > 0 && x56 > 1 && x57 < x55 && x54 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x60))), x61, x62, x62, x61, x58) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x63), x64, x65, 1, x66, x58) :|: x66 < x61 && x61 > -1 && x65 < x62 && x62 > -1 && x67 > 0 && x68 > 1 && x69 < x67 && x66 > 0

----------------------------------------

(25) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17460sub-1534049991:0))), o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17032:0, o17032[LinkedList$Entry.previous]o17027:0, o170281226623189:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17718sub0:0), o17030[LinkedList$Entry.previous]o17027:0, o17460[LinkedList$Entry.previous]o17030:0, o17713[LinkedList$Entry.previous]o17718:0, o17460[LinkedList$Entry.previous]o17027:0, o170281226623189:0) :|: o17032[LinkedList$Entry.previous]o17030:0 > 0 && o17030[LinkedList$Entry.previous]o17032:0 > 0 && o17713[LinkedList$Entry.previous]o17718:0 > o17030[LinkedList$Entry.previous]o17032:0 && o17032[LinkedList$Entry.previous]o17027:0 > -1 && o17460[LinkedList$Entry.previous]o17027:0 < o17032[LinkedList$Entry.previous]o17027:0 && o17460[LinkedList$Entry.previous]o17030:0 < o17032[LinkedList$Entry.previous]o17030:0 && i2886:0 > 0 && i4985:0 > 1 && i5098:0 < i2886:0 && o17460[LinkedList$Entry.previous]o17027:0 > 0
(2) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x2), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x7, x8, x) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x2), java.lang.Object(x9), x5, x10, x11, x12, x) :|: x6 > 0 && x7 > 0 && x11 > x7 && x8 > -1 && x12 < x8 && x10 < x6 && x13 > 0 && x14 > 1 && x15 < x13 && x12 > 0
(3) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x16, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x17)))))))))), java.lang.Object(x18), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x19))), x20, x21, x21, x20, x16) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x16, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x17)))))))))), java.lang.Object(x18), java.lang.Object(x22), x23, x24, 1, x25, x16) :|: x25 < x20 && x20 > -1 && x24 < x21 && x21 > -1 && x26 > 0 && x27 > 1 && x28 < x26 && x25 > 0
(4) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x31))), x32, x33, x34, x35, x29) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x36), x32, x37, x38, x39, x29) :|: x33 > 0 && x34 > 0 && x35 > -1 && x39 < x35 && x37 < x33 && x38 > x34 && x40 > 0 && x41 > 1 && x42 < x40 && x39 > 0
(5) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x47), java.lang.Object(x48))), x49, x50, x50, x49, x43) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(x51), x52, x53, 1, x54, x43) :|: x54 < x49 && x49 > -1 && x53 < x50 && x50 > -1 && x55 > 0 && x56 > 1 && x57 < x55 && x54 > 0
(6) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x60))), x61, x62, x62, x61, x58) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x63), x64, x65, 1, x66, x58) :|: x66 < x61 && x61 > -1 && x65 < x62 && x62 > -1 && x67 > 0 && x68 > 1 && x69 < x67 && x66 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (4)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (2), (4), (5), (6)
(6) -> (1), (2), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(26)
Obligation:

Termination digraph:
Nodes:
(1) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17460sub-1534049991:0))), o17030[LinkedList$Entry.previous]o17027:0, o17032[LinkedList$Entry.previous]o17030:0, o17030[LinkedList$Entry.previous]o17032:0, o17032[LinkedList$Entry.previous]o17027:0, o170281226623189:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0, java.lang.Object(o17030sub1226623189:0)))))))), java.lang.Object(o17031sub0:0), java.lang.Object(o17718sub0:0), o17030[LinkedList$Entry.previous]o17027:0, o17460[LinkedList$Entry.previous]o17030:0, o17713[LinkedList$Entry.previous]o17718:0, o17460[LinkedList$Entry.previous]o17027:0, o170281226623189:0) :|: o17032[LinkedList$Entry.previous]o17030:0 > 0 && o17030[LinkedList$Entry.previous]o17032:0 > 0 && o17713[LinkedList$Entry.previous]o17718:0 > o17030[LinkedList$Entry.previous]o17032:0 && o17032[LinkedList$Entry.previous]o17027:0 > -1 && o17460[LinkedList$Entry.previous]o17027:0 < o17032[LinkedList$Entry.previous]o17027:0 && o17460[LinkedList$Entry.previous]o17030:0 < o17032[LinkedList$Entry.previous]o17030:0 && i2886:0 > 0 && i4985:0 > 1 && i5098:0 < i2886:0 && o17460[LinkedList$Entry.previous]o17027:0 > 0
(2) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x2), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x7, x8, x) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x2), java.lang.Object(x9), x5, x10, x11, x12, x) :|: x6 > 0 && x7 > 0 && x11 > x7 && x8 > -1 && x12 < x8 && x10 < x6 && x13 > 0 && x14 > 1 && x15 < x13 && x12 > 0
(3) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x16, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x17)))))))))), java.lang.Object(x18), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x19))), x20, x21, x21, x20, x16) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x16, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x17)))))))))), java.lang.Object(x18), java.lang.Object(x22), x23, x24, 1, x25, x16) :|: x25 < x20 && x20 > -1 && x24 < x21 && x21 > -1 && x26 > 0 && x27 > 1 && x28 < x26 && x25 > 0
(4) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x31))), x32, x33, x34, x35, x29) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x36), x32, x37, x38, x39, x29) :|: x33 > 0 && x34 > 0 && x35 > -1 && x39 < x35 && x37 < x33 && x38 > x34 && x40 > 0 && x41 > 1 && x42 < x40 && x39 > 0
(5) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x47), java.lang.Object(x48))), x49, x50, x50, x49, x43) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(x51), x52, x53, 1, x54, x43) :|: x54 < x49 && x49 > -1 && x53 < x50 && x50 > -1 && x55 > 0 && x56 > 1 && x57 < x55 && x54 > 0
(6) f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x60))), x61, x62, x62, x61, x58) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x63), x64, x65, 1, x66, x58) :|: x66 < x61 && x61 > -1 && x65 < x62 && x62 > -1 && x67 > 0 && x68 > 1 && x69 < x67 && x66 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (4)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (2), (4), (5), (6)
(6) -> (1), (2), (4), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(27) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(28)
Obligation:
Rules:
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x60:0))), x61:0, x62:0, x62:0, x61:0, x58:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x63:0), x64:0, x65:0, 1, x66:0, x58:0) :|: x69:0 < x67:0 && x66:0 > 0 && x68:0 > 1 && x67:0 > 0 && x62:0 > -1 && x65:0 < x62:0 && x61:0 > -1 && x66:0 < x61:0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x16:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x17:0)))))))))), java.lang.Object(x18:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x19:0))), x20:0, x21:0, x21:0, x20:0, x16:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x16:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x17:0)))))))))), java.lang.Object(x18:0), java.lang.Object(x22:0), x23:0, x24:0, 1, x25:0, x16:0) :|: x28:0 < x26:0 && x25:0 > 0 && x27:0 > 1 && x26:0 > 0 && x21:0 > -1 && x24:0 < x21:0 && x20:0 > -1 && x25:0 < x20:0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x2:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3:0), java.lang.Object(x4:0))), x5:0, x6:0, x7:0, x8:0, x:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x2:0), java.lang.Object(x9:0), x5:0, x10:0, x11:0, x12:0, x:0) :|: x15:0 < x13:0 && x12:0 > 0 && x14:0 > 1 && x13:0 > 0 && x6:0 > x10:0 && x8:0 > x12:0 && x8:0 > -1 && x7:0 < x11:0 && x7:0 > 0 && x6:0 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29:0, java.lang.Object(x30:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x31:0))), x32:0, x33:0, x34:0, x35:0, x29:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29:0, java.lang.Object(x30:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x36:0), x32:0, x37:0, x38:0, x39:0, x29:0) :|: x42:0 < x40:0 && x39:0 > 0 && x41:0 > 1 && x40:0 > 0 && x38:0 > x34:0 && x37:0 < x33:0 && x39:0 < x35:0 && x35:0 > -1 && x34:0 > 0 && x33:0 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0:0, java.lang.Object(o17030sub1226623189:0:0)))))))), java.lang.Object(o17031sub0:0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o17460sub-1534049991:0:0))), o17030[LinkedList$Entry.previous]o17027:0:0, o17032[LinkedList$Entry.previous]o17030:0:0, o17030[LinkedList$Entry.previous]o17032:0:0, o17032[LinkedList$Entry.previous]o17027:0:0, o170281226623189:0:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o170281226623189:0:0, java.lang.Object(o17030sub1226623189:0:0)))))))), java.lang.Object(o17031sub0:0:0), java.lang.Object(o17718sub0:0:0), o17030[LinkedList$Entry.previous]o17027:0:0, o17460[LinkedList$Entry.previous]o17030:0:0, o17713[LinkedList$Entry.previous]o17718:0:0, o17460[LinkedList$Entry.previous]o17027:0:0, o170281226623189:0:0) :|: i5098:0:0 < i2886:0:0 && o17460[LinkedList$Entry.previous]o17027:0:0 > 0 && i4985:0:0 > 1 && i2886:0:0 > 0 && o17460[LinkedList$Entry.previous]o17030:0:0 < o17032[LinkedList$Entry.previous]o17030:0:0 && o17460[LinkedList$Entry.previous]o17027:0:0 < o17032[LinkedList$Entry.previous]o17027:0:0 && o17032[LinkedList$Entry.previous]o17027:0:0 > -1 && o17713[LinkedList$Entry.previous]o17718:0:0 > o17030[LinkedList$Entry.previous]o17032:0:0 && o17030[LinkedList$Entry.previous]o17032:0:0 > 0 && o17032[LinkedList$Entry.previous]o17030:0:0 > 0
f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44:0), java.lang.Object(x45:0)))))))))), java.lang.Object(x46:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x47:0), java.lang.Object(x48:0))), x49:0, x50:0, x50:0, x49:0, x43:0) -> f13896_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44:0), java.lang.Object(x45:0)))))))))), java.lang.Object(x46:0), java.lang.Object(x51:0), x52:0, x53:0, 1, x54:0, x43:0) :|: x57:0 < x55:0 && x54:0 > 0 && x56:0 > 1 && x55:0 > 0 && x50:0 > -1 && x53:0 < x50:0 && x49:0 > -1 && x54:0 < x49:0

----------------------------------------

(29) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13896_0_lastIndexOf_EQ(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, VARIABLE, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
javaUtilEx.Content()
NULL()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(30)
Obligation:
Rules:
f13896_0_lastIndexOf_EQ(c, c1, c2, x61:0, x62:0, x62:0, x61:0, x58:0) -> f13896_0_lastIndexOf_EQ(c3, c4, c5, x64:0, x65:0, c6, x66:0, x58:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x69:0 < x67:0 && x66:0 > 0 && x68:0 > 1 && x67:0 > 0 && x62:0 > -1 && x65:0 < x62:0 && x61:0 > -1 && x66:0 < x61:0)
f13896_0_lastIndexOf_EQ(c14, c15, c16, x5:0, x6:0, x7:0, x8:0, x:0) -> f13896_0_lastIndexOf_EQ(c17, c18, c19, x5:0, x10:0, x11:0, x12:0, x:0) :|: c19 = 0 && (c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)))) && (x15:0 < x13:0 && x12:0 > 0 && x14:0 > 1 && x13:0 > 0 && x6:0 > x10:0 && x8:0 > x12:0 && x8:0 > -1 && x7:0 < x11:0 && x7:0 > 0 && x6:0 > 0)
f13896_0_lastIndexOf_EQ(c20, c21, c22, x32:0, x33:0, x34:0, x35:0, x29:0) -> f13896_0_lastIndexOf_EQ(c23, c24, c25, x32:0, x37:0, x38:0, x39:0, x29:0) :|: c25 = 0 && (c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && c20 = 0)))) && (x42:0 < x40:0 && x39:0 > 0 && x41:0 > 1 && x40:0 > 0 && x38:0 > x34:0 && x37:0 < x33:0 && x39:0 < x35:0 && x35:0 > -1 && x34:0 > 0 && x33:0 > 0)
f13896_0_lastIndexOf_EQ(c26, c27, c28, o17030[LinkedList$Entry.previous]o17027:0:0, o17032[LinkedList$Entry.previous]o17030:0:0, o17030[LinkedList$Entry.previous]o17032:0:0, o17032[LinkedList$Entry.previous]o17027:0:0, o170281226623189:0:0) -> f13896_0_lastIndexOf_EQ(c29, c30, c31, o17030[LinkedList$Entry.previous]o17027:0:0, o17460[LinkedList$Entry.previous]o17030:0:0, o17713[LinkedList$Entry.previous]o17718:0:0, o17460[LinkedList$Entry.previous]o17027:0:0, o170281226623189:0:0) :|: c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0)))) && (i5098:0:0 < i2886:0:0 && o17460[LinkedList$Entry.previous]o17027:0:0 > 0 && i4985:0:0 > 1 && i2886:0:0 > 0 && o17460[LinkedList$Entry.previous]o17030:0:0 < o17032[LinkedList$Entry.previous]o17030:0:0 && o17460[LinkedList$Entry.previous]o17027:0:0 < o17032[LinkedList$Entry.previous]o17027:0:0 && o17032[LinkedList$Entry.previous]o17027:0:0 > -1 && o17713[LinkedList$Entry.previous]o17718:0:0 > o17030[LinkedList$Entry.previous]o17032:0:0 && o17030[LinkedList$Entry.previous]o17032:0:0 > 0 && o17032[LinkedList$Entry.previous]o17030:0:0 > 0)

----------------------------------------

(31) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13896_0_lastIndexOf_EQ(x, x1, x2, x3, x4, x5, x6, x7)] = -1 + c*x + c1*x1 + c2*x2 + 2*x4

The following rules are decreasing:
f13896_0_lastIndexOf_EQ(c, c1, c2, x61:0, x62:0, x62:0, x61:0, x58:0) -> f13896_0_lastIndexOf_EQ(c3, c4, c5, x64:0, x65:0, c6, x66:0, x58:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x69:0 < x67:0 && x66:0 > 0 && x68:0 > 1 && x67:0 > 0 && x62:0 > -1 && x65:0 < x62:0 && x61:0 > -1 && x66:0 < x61:0)
f13896_0_lastIndexOf_EQ(c14, c15, c16, x5:0, x6:0, x7:0, x8:0, x:0) -> f13896_0_lastIndexOf_EQ(c17, c18, c19, x5:0, x10:0, x11:0, x12:0, x:0) :|: c19 = 0 && (c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)))) && (x15:0 < x13:0 && x12:0 > 0 && x14:0 > 1 && x13:0 > 0 && x6:0 > x10:0 && x8:0 > x12:0 && x8:0 > -1 && x7:0 < x11:0 && x7:0 > 0 && x6:0 > 0)
f13896_0_lastIndexOf_EQ(c20, c21, c22, x32:0, x33:0, x34:0, x35:0, x29:0) -> f13896_0_lastIndexOf_EQ(c23, c24, c25, x32:0, x37:0, x38:0, x39:0, x29:0) :|: c25 = 0 && (c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && c20 = 0)))) && (x42:0 < x40:0 && x39:0 > 0 && x41:0 > 1 && x40:0 > 0 && x38:0 > x34:0 && x37:0 < x33:0 && x39:0 < x35:0 && x35:0 > -1 && x34:0 > 0 && x33:0 > 0)
f13896_0_lastIndexOf_EQ(c26, c27, c28, o17030[LinkedList$Entry.previous]o17027:0:0, o17032[LinkedList$Entry.previous]o17030:0:0, o17030[LinkedList$Entry.previous]o17032:0:0, o17032[LinkedList$Entry.previous]o17027:0:0, o170281226623189:0:0) -> f13896_0_lastIndexOf_EQ(c29, c30, c31, o17030[LinkedList$Entry.previous]o17027:0:0, o17460[LinkedList$Entry.previous]o17030:0:0, o17713[LinkedList$Entry.previous]o17718:0:0, o17460[LinkedList$Entry.previous]o17027:0:0, o170281226623189:0:0) :|: c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0)))) && (i5098:0:0 < i2886:0:0 && o17460[LinkedList$Entry.previous]o17027:0:0 > 0 && i4985:0:0 > 1 && i2886:0:0 > 0 && o17460[LinkedList$Entry.previous]o17030:0:0 < o17032[LinkedList$Entry.previous]o17030:0:0 && o17460[LinkedList$Entry.previous]o17027:0:0 < o17032[LinkedList$Entry.previous]o17027:0:0 && o17032[LinkedList$Entry.previous]o17027:0:0 > -1 && o17713[LinkedList$Entry.previous]o17718:0:0 > o17030[LinkedList$Entry.previous]o17032:0:0 && o17030[LinkedList$Entry.previous]o17032:0:0 > 0 && o17032[LinkedList$Entry.previous]o17030:0:0 > 0)
The following rules are bounded:
f13896_0_lastIndexOf_EQ(c14, c15, c16, x5:0, x6:0, x7:0, x8:0, x:0) -> f13896_0_lastIndexOf_EQ(c17, c18, c19, x5:0, x10:0, x11:0, x12:0, x:0) :|: c19 = 0 && (c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)))) && (x15:0 < x13:0 && x12:0 > 0 && x14:0 > 1 && x13:0 > 0 && x6:0 > x10:0 && x8:0 > x12:0 && x8:0 > -1 && x7:0 < x11:0 && x7:0 > 0 && x6:0 > 0)
f13896_0_lastIndexOf_EQ(c20, c21, c22, x32:0, x33:0, x34:0, x35:0, x29:0) -> f13896_0_lastIndexOf_EQ(c23, c24, c25, x32:0, x37:0, x38:0, x39:0, x29:0) :|: c25 = 0 && (c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && c20 = 0)))) && (x42:0 < x40:0 && x39:0 > 0 && x41:0 > 1 && x40:0 > 0 && x38:0 > x34:0 && x37:0 < x33:0 && x39:0 < x35:0 && x35:0 > -1 && x34:0 > 0 && x33:0 > 0)
f13896_0_lastIndexOf_EQ(c26, c27, c28, o17030[LinkedList$Entry.previous]o17027:0:0, o17032[LinkedList$Entry.previous]o17030:0:0, o17030[LinkedList$Entry.previous]o17032:0:0, o17032[LinkedList$Entry.previous]o17027:0:0, o170281226623189:0:0) -> f13896_0_lastIndexOf_EQ(c29, c30, c31, o17030[LinkedList$Entry.previous]o17027:0:0, o17460[LinkedList$Entry.previous]o17030:0:0, o17713[LinkedList$Entry.previous]o17718:0:0, o17460[LinkedList$Entry.previous]o17027:0:0, o170281226623189:0:0) :|: c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0)))) && (i5098:0:0 < i2886:0:0 && o17460[LinkedList$Entry.previous]o17027:0:0 > 0 && i4985:0:0 > 1 && i2886:0:0 > 0 && o17460[LinkedList$Entry.previous]o17030:0:0 < o17032[LinkedList$Entry.previous]o17030:0:0 && o17460[LinkedList$Entry.previous]o17027:0:0 < o17032[LinkedList$Entry.previous]o17027:0:0 && o17032[LinkedList$Entry.previous]o17027:0:0 > -1 && o17713[LinkedList$Entry.previous]o17718:0:0 > o17030[LinkedList$Entry.previous]o17032:0:0 && o17030[LinkedList$Entry.previous]o17032:0:0 > 0 && o17032[LinkedList$Entry.previous]o17030:0:0 > 0)

----------------------------------------

(32)
Obligation:
Rules:
f13896_0_lastIndexOf_EQ(c, c1, c2, x61:0, x62:0, x62:0, x61:0, x58:0) -> f13896_0_lastIndexOf_EQ(c3, c4, c5, x64:0, x65:0, c6, x66:0, x58:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x69:0 < x67:0 && x66:0 > 0 && x68:0 > 1 && x67:0 > 0 && x62:0 > -1 && x65:0 < x62:0 && x61:0 > -1 && x66:0 < x61:0)

----------------------------------------

(33) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13896_0_lastIndexOf_EQ(x, x1, x2, x3, x4, x5, x6, x7)] = c*x + c1*x1 + c2*x2 + x6

The following rules are decreasing:
f13896_0_lastIndexOf_EQ(c, c1, c2, x61:0, x62:0, x62:0, x61:0, x58:0) -> f13896_0_lastIndexOf_EQ(c3, c4, c5, x64:0, x65:0, c6, x66:0, x58:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x69:0 < x67:0 && x66:0 > 0 && x68:0 > 1 && x67:0 > 0 && x62:0 > -1 && x65:0 < x62:0 && x61:0 > -1 && x66:0 < x61:0)
The following rules are bounded:
f13896_0_lastIndexOf_EQ(c, c1, c2, x61:0, x62:0, x62:0, x61:0, x58:0) -> f13896_0_lastIndexOf_EQ(c3, c4, c5, x64:0, x65:0, c6, x66:0, x58:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x69:0 < x67:0 && x66:0 > 0 && x68:0 > 1 && x67:0 > 0 && x62:0 > -1 && x65:0 < x62:0 && x61:0 > -1 && x66:0 < x61:0)

----------------------------------------

(34)
YES

----------------------------------------

(35)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateLastIndexOf.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, previous]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(36) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 66 IRulesP rules:
f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13974sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415, java.lang.Object(o13972sub-1537593415))), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972, o13974[LinkedList$Entry.previous]o13970) -> f13733_0_lastIndexOf_Inc(EOS(STATIC_13733), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972, o13974[LinkedList$Entry.previous]o13970) :|: TRUE
f13733_0_lastIndexOf_Inc(EOS(STATIC_13733), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972, o13974[LinkedList$Entry.previous]o13970) -> f13740_0_lastIndexOf_Load(EOS(STATIC_13740), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972, o13974[LinkedList$Entry.previous]o13970) :|: TRUE
f13740_0_lastIndexOf_Load(EOS(STATIC_13740), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972, o13974[LinkedList$Entry.previous]o13970) -> f13745_0_lastIndexOf_Load(EOS(STATIC_13745), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13973sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972, o13974[LinkedList$Entry.previous]o13970) :|: TRUE
f13745_0_lastIndexOf_Load(EOS(STATIC_13745), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13973sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972, o13974[LinkedList$Entry.previous]o13970) -> f13750_0_lastIndexOf_FieldAccess(EOS(STATIC_13750), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972, o13974[LinkedList$Entry.previous]o13970) :|: TRUE
f13750_0_lastIndexOf_FieldAccess(EOS(STATIC_13750), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972, o13974[LinkedList$Entry.previous]o13970) -> f13757_0_lastIndexOf_FieldAccess(EOS(STATIC_13757), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972) :|: o13972[LinkedList$Entry.previous]o13974 > 0 && o13974[LinkedList$Entry.previous]o13972 > 0
f13750_0_lastIndexOf_FieldAccess(EOS(STATIC_13750), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o14819sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o14819sub0), java.lang.Object(o13973sub0), java.lang.Object(o14819sub0), o14819[LinkedList$Entry.previous]o14819, o14819[LinkedList$Entry.previous]o13970, o14819[LinkedList$Entry.previous]o14819, o14819[LinkedList$Entry.previous]o13970) -> f13758_0_lastIndexOf_FieldAccess(EOS(STATIC_13758), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o14819sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o14819sub0), java.lang.Object(o13973sub0), java.lang.Object(o14819sub0), o14819[LinkedList$Entry.previous]o13970, o14819[LinkedList$Entry.previous]o14819) :|: TRUE
f13757_0_lastIndexOf_FieldAccess(EOS(STATIC_13757), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), o13972[LinkedList$Entry.previous]o14836, o13972[LinkedList$Entry.previous]o13970, o14836[LinkedList$Entry.previous]o13970, o14836[LinkedList$Entry.previous]o13972) -> f13765_0_lastIndexOf_FieldAccess(EOS(STATIC_13765), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: o14839[LinkedList$Entry.previous]o13970 < o14836[LinkedList$Entry.previous]o13970 && o14836[LinkedList$Entry.previous]o13970 >= 0 && o14839[LinkedList$Entry.previous]o13972 < o14836[LinkedList$Entry.previous]o13972 && o14836[LinkedList$Entry.previous]o13972 >= 0
f13765_0_lastIndexOf_FieldAccess(EOS(STATIC_13765), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f13773_0_lastIndexOf_InvokeMethod(EOS(STATIC_13773), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), java.lang.Object(o13973sub0), o148370, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: TRUE
f13773_0_lastIndexOf_InvokeMethod(EOS(STATIC_13773), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), java.lang.Object(o13973sub0), o148370, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f13781_0_equals_Load(EOS(STATIC_13781), java.lang.Object(o13973sub0), o148370, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415, java.lang.Object(o13972sub-1537593415))), java.lang.Object(o13972sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), java.lang.Object(o14839sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), o148370, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: i4191 > 1 && i2886 >= 1 && i4405 < i2886
f13773_0_lastIndexOf_InvokeMethod(EOS(STATIC_13773), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), java.lang.Object(o13973sub0), o148370, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f13781_1_equals_Load(EOS(STATIC_13781), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), java.lang.Object(o13973sub0), o148370, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: i4191 > 1 && i2886 >= 1 && i4405 < i2886
f13781_0_equals_Load(EOS(STATIC_13781), java.lang.Object(o13973sub0), o148370, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415, java.lang.Object(o13972sub-1537593415))), java.lang.Object(o13972sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), java.lang.Object(o14839sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), o148370, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f14442_0_equals_Load(EOS(STATIC_14442), java.lang.Object(o13973sub0), o148370, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415, java.lang.Object(o13972sub-1537593415))), java.lang.Object(o13972sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343, java.lang.Object(o14839sub-1536703343))), java.lang.Object(o14839sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), o148370, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: TRUE
f13822_0_equals_Return(EOS(STATIC_13822), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o15407sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14839sub-1536703343))), matching1, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f13824_0_equals_Return(EOS(STATIC_13824), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o15407sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14839sub-1536703343))), 0, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: TRUE && matching1 = 0
f13824_0_equals_Return(EOS(STATIC_13824), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15642-1535838598, java.lang.Object(o15644sub-1535838598))), matching1, o15639[LinkedList$Entry.previous]o15637, o15639[LinkedList$Entry.previous]o15641, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639) -> f13839_0_lastIndexOf_EQ(EOS(STATIC_13839), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15642-1535838598, java.lang.Object(o15644sub-1535838598))), 0, o15639[LinkedList$Entry.previous]o15637, o15639[LinkedList$Entry.previous]o15641, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639) :|: TRUE && matching1 = 0
f13839_0_lastIndexOf_EQ(EOS(STATIC_13839), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15642-1535838598, java.lang.Object(o15644sub-1535838598))), matching1, o15639[LinkedList$Entry.previous]o15637, o15639[LinkedList$Entry.previous]o15641, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639) -> f13849_0_lastIndexOf_Load(EOS(STATIC_13849), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15642-1535838598, java.lang.Object(o15644sub-1535838598))), o15639[LinkedList$Entry.previous]o15637, o15639[LinkedList$Entry.previous]o15641, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639) :|: TRUE && matching1 = 0
f13849_0_lastIndexOf_Load(EOS(STATIC_13849), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15642-1535838598, java.lang.Object(o15644sub-1535838598))), o15639[LinkedList$Entry.previous]o15637, o15639[LinkedList$Entry.previous]o15641, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639) -> f13861_0_lastIndexOf_FieldAccess(EOS(STATIC_13861), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15642-1535838598, java.lang.Object(o15644sub-1535838598))), o15639[LinkedList$Entry.previous]o15637, o15639[LinkedList$Entry.previous]o15641, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639) :|: TRUE
f13861_0_lastIndexOf_FieldAccess(EOS(STATIC_13861), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15642-1535838598, java.lang.Object(o15644sub-1535838598))), o15639[LinkedList$Entry.previous]o15637, o15639[LinkedList$Entry.previous]o15641, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639) -> f13871_0_lastIndexOf_Store(EOS(STATIC_13871), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(o15644sub0), o15639[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639, o15639[LinkedList$Entry.previous]o15644) :|: o15639[LinkedList$Entry.previous]o15644 > o15639[LinkedList$Entry.previous]o15641 && o15639[LinkedList$Entry.previous]o15641 >= 0
f13871_0_lastIndexOf_Store(EOS(STATIC_13871), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(o15644sub0), o15639[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639, o15639[LinkedList$Entry.previous]o15644) -> f13880_0_lastIndexOf_JMP(EOS(STATIC_13880), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(o15644sub0), o15639[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639, o15639[LinkedList$Entry.previous]o15644) :|: TRUE
f13880_0_lastIndexOf_JMP(EOS(STATIC_13880), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(o15644sub0), o15639[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639, o15639[LinkedList$Entry.previous]o15644) -> f13887_0_lastIndexOf_Load(EOS(STATIC_13887), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(o15644sub0), o15639[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639, o15639[LinkedList$Entry.previous]o15644) :|: TRUE
f13887_0_lastIndexOf_Load(EOS(STATIC_13887), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(o15644sub0), o15639[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639, o15639[LinkedList$Entry.previous]o15644) -> f13689_0_lastIndexOf_Load(EOS(STATIC_13689), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156381223288519, java.lang.Object(o15639sub1223288519)))))))), java.lang.Object(o15640sub0), java.lang.Object(o15644sub0), o15639[LinkedList$Entry.previous]o15644, o15639[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15637, o15644[LinkedList$Entry.previous]o15639) :|: TRUE
f13689_0_lastIndexOf_Load(EOS(STATIC_13689), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972) -> f13700_0_lastIndexOf_Load(EOS(STATIC_13700), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13974sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972) :|: TRUE
f13700_0_lastIndexOf_Load(EOS(STATIC_13700), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13974sub0), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972) -> f13706_0_lastIndexOf_FieldAccess(EOS(STATIC_13706), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13974sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972) :|: TRUE
f13706_0_lastIndexOf_FieldAccess(EOS(STATIC_13706), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13974sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972) -> f13715_0_lastIndexOf_EQ(EOS(STATIC_13715), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13974sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415, java.lang.Object(o13972sub-1537593415))), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972) :|: TRUE
f13715_0_lastIndexOf_EQ(EOS(STATIC_13715), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13974sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415, java.lang.Object(o13972sub-1537593415))), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972) -> f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o13973sub0), java.lang.Object(o13974sub0), java.lang.Object(o13974sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415, java.lang.Object(o13972sub-1537593415))), o13972[LinkedList$Entry.previous]o13974, o13972[LinkedList$Entry.previous]o13970, o13974[LinkedList$Entry.previous]o13972, o13974[LinkedList$Entry.previous]o13970) :|: o13974[LinkedList$Entry.previous]o13970 > 0
f13823_0_equals_Return(EOS(STATIC_13823), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o15420sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15422sub-1536703343), java.lang.Object(o14839sub-1536703343))), matching1, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f13824_0_equals_Return(EOS(STATIC_13824), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o15420sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15422sub-1536703343), java.lang.Object(o14839sub-1536703343))), 0, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: TRUE && matching1 = 0
f13825_0_equals_Return(EOS(STATIC_13825), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14839sub-1536703343))), matching1, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f13827_0_equals_Return(EOS(STATIC_13827), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14839sub-1536703343))), 0, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: TRUE && matching1 = 0
f13827_0_equals_Return(EOS(STATIC_13827), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub-1535835529))), i4580, o15675[LinkedList$Entry.previous]o15673, o15675[LinkedList$Entry.previous]o15677, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675) -> f13840_0_lastIndexOf_EQ(EOS(STATIC_13840), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub-1535835529))), i4580, o15675[LinkedList$Entry.previous]o15673, o15675[LinkedList$Entry.previous]o15677, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675) :|: TRUE
f13840_0_lastIndexOf_EQ(EOS(STATIC_13840), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub-1535835529))), matching1, o15675[LinkedList$Entry.previous]o15673, o15675[LinkedList$Entry.previous]o15677, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675) -> f13851_0_lastIndexOf_EQ(EOS(STATIC_13851), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub-1535835529))), 0, o15675[LinkedList$Entry.previous]o15673, o15675[LinkedList$Entry.previous]o15677, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675) :|: TRUE && matching1 = 0
f13851_0_lastIndexOf_EQ(EOS(STATIC_13851), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub-1535835529))), matching1, o15675[LinkedList$Entry.previous]o15673, o15675[LinkedList$Entry.previous]o15677, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675) -> f13863_0_lastIndexOf_Load(EOS(STATIC_13863), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub-1535835529))), o15675[LinkedList$Entry.previous]o15673, o15675[LinkedList$Entry.previous]o15677, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675) :|: TRUE && matching1 = 0
f13863_0_lastIndexOf_Load(EOS(STATIC_13863), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub-1535835529))), o15675[LinkedList$Entry.previous]o15673, o15675[LinkedList$Entry.previous]o15677, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675) -> f13873_0_lastIndexOf_FieldAccess(EOS(STATIC_13873), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub-1535835529))), o15675[LinkedList$Entry.previous]o15673, o15675[LinkedList$Entry.previous]o15677, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675) :|: TRUE
f13873_0_lastIndexOf_FieldAccess(EOS(STATIC_13873), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub-1535835529))), o15675[LinkedList$Entry.previous]o15673, o15675[LinkedList$Entry.previous]o15677, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675) -> f13882_0_lastIndexOf_Store(EOS(STATIC_13882), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub0), o15675[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675, o15675[LinkedList$Entry.previous]o15680) :|: o15675[LinkedList$Entry.previous]o15680 > o15675[LinkedList$Entry.previous]o15677 && o15675[LinkedList$Entry.previous]o15677 >= 0
f13882_0_lastIndexOf_Store(EOS(STATIC_13882), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub0), o15675[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675, o15675[LinkedList$Entry.previous]o15680) -> f13888_0_lastIndexOf_JMP(EOS(STATIC_13888), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub0), o15675[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675, o15675[LinkedList$Entry.previous]o15680) :|: TRUE
f13888_0_lastIndexOf_JMP(EOS(STATIC_13888), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub0), o15675[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675, o15675[LinkedList$Entry.previous]o15680) -> f13892_0_lastIndexOf_Load(EOS(STATIC_13892), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub0), o15675[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675, o15675[LinkedList$Entry.previous]o15680) :|: TRUE
f13892_0_lastIndexOf_Load(EOS(STATIC_13892), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub0), o15675[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675, o15675[LinkedList$Entry.previous]o15680) -> f13689_0_lastIndexOf_Load(EOS(STATIC_13689), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o156741223295959, java.lang.Object(o15675sub1223295959)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub0), o15675[LinkedList$Entry.previous]o15680, o15675[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15673, o15680[LinkedList$Entry.previous]o15675) :|: TRUE
f13826_0_equals_Return(EOS(STATIC_13826), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14839sub-1536703343))), matching1, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f13827_0_equals_Return(EOS(STATIC_13827), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14839sub-1536703343))), 1, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: TRUE && matching1 = 1
f13758_0_lastIndexOf_FieldAccess(EOS(STATIC_13758), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), o14840[LinkedList$Entry.previous]o13970, o14840[LinkedList$Entry.previous]o14840) -> f13766_0_lastIndexOf_FieldAccess(EOS(STATIC_13766), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: o14843[LinkedList$Entry.previous]o13970 < o14840[LinkedList$Entry.previous]o13970 && o14840[LinkedList$Entry.previous]o13970 >= 0 && o14843[LinkedList$Entry.previous]o14840 < o14840[LinkedList$Entry.previous]o14840 && o14840[LinkedList$Entry.previous]o14840 >= 0
f13766_0_lastIndexOf_FieldAccess(EOS(STATIC_13766), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f13774_0_lastIndexOf_InvokeMethod(EOS(STATIC_13774), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), java.lang.Object(o13973sub0), o148410, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: TRUE
f13774_0_lastIndexOf_InvokeMethod(EOS(STATIC_13774), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), java.lang.Object(o13973sub0), o148410, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f13782_0_equals_Load(EOS(STATIC_13782), java.lang.Object(o13973sub0), o148410, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o148411220671313, java.lang.Object(o14843sub1220671313))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), java.lang.Object(o14843sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o13973sub0), o148410, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: i4191 > 1 && i2886 >= 1 && i4405 < i2886
f13774_0_lastIndexOf_InvokeMethod(EOS(STATIC_13774), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), java.lang.Object(o13973sub0), o148410, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f13782_1_equals_Load(EOS(STATIC_13782), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o13973sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), java.lang.Object(o13973sub0), o148410, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: i4191 > 1 && i2886 >= 1 && i4405 < i2886
f13782_0_equals_Load(EOS(STATIC_13782), java.lang.Object(o13973sub0), o148410, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o148411220671313, java.lang.Object(o14843sub1220671313))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), java.lang.Object(o14843sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o13973sub0), o148410, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f14522_0_equals_Load(EOS(STATIC_14522), java.lang.Object(o13973sub0), o148410, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o148411220671313, java.lang.Object(o14843sub1220671313))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568, java.lang.Object(o14843sub-1536702568))), java.lang.Object(o14843sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o13973sub0), o148410, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: TRUE
f13829_0_equals_Return(EOS(STATIC_13829), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o15488sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-1536702568))), matching1, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f13831_0_equals_Return(EOS(STATIC_13831), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o15488sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-1536702568))), 0, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: TRUE && matching1 = 0
f13831_0_equals_Return(EOS(STATIC_13831), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-1535812403, java.lang.Object(o15712sub-1535812403))), matching1, o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) -> f13841_0_lastIndexOf_EQ(EOS(STATIC_13841), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-1535812403, java.lang.Object(o15712sub-1535812403))), 0, o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) :|: TRUE && matching1 = 0
f13841_0_lastIndexOf_EQ(EOS(STATIC_13841), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-1535812403, java.lang.Object(o15712sub-1535812403))), matching1, o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) -> f13852_0_lastIndexOf_Load(EOS(STATIC_13852), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-1535812403, java.lang.Object(o15712sub-1535812403))), o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) :|: TRUE && matching1 = 0
f13852_0_lastIndexOf_Load(EOS(STATIC_13852), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-1535812403, java.lang.Object(o15712sub-1535812403))), o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) -> f13864_0_lastIndexOf_FieldAccess(EOS(STATIC_13864), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-1535812403, java.lang.Object(o15712sub-1535812403))), o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) :|: TRUE
f13864_0_lastIndexOf_FieldAccess(EOS(STATIC_13864), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-1535812403, java.lang.Object(o15712sub-1535812403))), o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) -> f13874_0_lastIndexOf_Store(EOS(STATIC_13874), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(o15712sub0), o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) :|: TRUE
f13874_0_lastIndexOf_Store(EOS(STATIC_13874), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(o15712sub0), o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) -> f13883_0_lastIndexOf_JMP(EOS(STATIC_13883), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(o15712sub0), o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) :|: TRUE
f13883_0_lastIndexOf_JMP(EOS(STATIC_13883), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(o15712sub0), o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) -> f13889_0_lastIndexOf_Load(EOS(STATIC_13889), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(o15712sub0), o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) :|: TRUE
f13889_0_lastIndexOf_Load(EOS(STATIC_13889), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(o15712sub0), o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) -> f13689_0_lastIndexOf_Load(EOS(STATIC_13689), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157081223342335, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15710-312470068, java.lang.Object(o15712sub-312470068)))))))))), java.lang.Object(o15713sub0), java.lang.Object(o15712sub0), o15709[LinkedList$Entry.previous]o15712, o15709[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15707, o15712[LinkedList$Entry.previous]o15709) :|: o15709[LinkedList$Entry.previous]o15712 = 1
f13830_0_equals_Return(EOS(STATIC_13830), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-316922784), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o15500sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-1536702568), java.lang.Object(o14843sub-1536702568))), matching1, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f13831_0_equals_Return(EOS(STATIC_13831), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-316922784), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o15500sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-1536702568), java.lang.Object(o14843sub-1536702568))), 0, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: TRUE && matching1 = 0
f13832_0_equals_Return(EOS(STATIC_13832), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-1536702568))), matching1, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f13834_0_equals_Return(EOS(STATIC_13834), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-1536702568))), 0, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: TRUE && matching1 = 0
f13834_0_equals_Return(EOS(STATIC_13834), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-1535809551))), i4603, o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) -> f13842_0_lastIndexOf_EQ(EOS(STATIC_13842), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-1535809551))), i4603, o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) :|: TRUE
f13842_0_lastIndexOf_EQ(EOS(STATIC_13842), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-1535809551))), matching1, o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) -> f13854_0_lastIndexOf_EQ(EOS(STATIC_13854), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-1535809551))), 0, o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) :|: TRUE && matching1 = 0
f13854_0_lastIndexOf_EQ(EOS(STATIC_13854), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-1535809551))), matching1, o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) -> f13866_0_lastIndexOf_Load(EOS(STATIC_13866), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-1535809551))), o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) :|: TRUE && matching1 = 0
f13866_0_lastIndexOf_Load(EOS(STATIC_13866), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-1535809551))), o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) -> f13875_0_lastIndexOf_FieldAccess(EOS(STATIC_13875), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-1535809551))), o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) :|: TRUE
f13875_0_lastIndexOf_FieldAccess(EOS(STATIC_13875), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-1535809551))), o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) -> f13884_0_lastIndexOf_Store(EOS(STATIC_13884), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub0), o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) :|: TRUE
f13884_0_lastIndexOf_Store(EOS(STATIC_13884), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub0), o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) -> f13890_0_lastIndexOf_JMP(EOS(STATIC_13890), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub0), o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) :|: TRUE
f13890_0_lastIndexOf_JMP(EOS(STATIC_13890), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub0), o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) -> f13893_0_lastIndexOf_Load(EOS(STATIC_13893), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub0), o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) :|: TRUE
f13893_0_lastIndexOf_Load(EOS(STATIC_13893), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub0), o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) -> f13689_0_lastIndexOf_Load(EOS(STATIC_13689), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o157371223348039, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub-312461512)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub0), o15738[LinkedList$Entry.previous]o15741, o15738[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15736, o15741[LinkedList$Entry.previous]o15738) :|: o15738[LinkedList$Entry.previous]o15741 = 1
f13833_0_equals_Return(EOS(STATIC_13833), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-1536702568))), matching1, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f13834_0_equals_Return(EOS(STATIC_13834), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-1536702568))), 1, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: TRUE && matching1 = 1
f13781_1_equals_Load(EOS(STATIC_13781), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o15407sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14839sub-1536703343))), java.lang.Object(o15407sub0), NULL, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f13822_0_equals_Return(EOS(STATIC_13822), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o15407sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14839sub-1536703343))), 0, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: TRUE
f13781_1_equals_Load(EOS(STATIC_13781), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o15420sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15422sub-1536703343), java.lang.Object(o14839sub-1536703343))), java.lang.Object(o15420sub0), java.lang.Object(o15422sub0), o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f13823_0_equals_Return(EOS(STATIC_13823), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(o15420sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15422sub-1536703343), java.lang.Object(o14839sub-1536703343))), 0, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: TRUE
f13781_1_equals_Load(EOS(STATIC_13781), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14839sub-1536703343))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f13825_0_equals_Return(EOS(STATIC_13825), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14839sub-1536703343))), 0, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: TRUE
f13781_1_equals_Load(EOS(STATIC_13781), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14839sub-1536703343))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) -> f13826_0_equals_Return(EOS(STATIC_13826), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(o13972sub1219779784)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14839sub-1536703343))), 1, o13972[LinkedList$Entry.previous]o13970, o13972[LinkedList$Entry.previous]o14836, o14839[LinkedList$Entry.previous]o13970, o14839[LinkedList$Entry.previous]o13972) :|: TRUE
f13782_1_equals_Load(EOS(STATIC_13782), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o15488sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-1536702568))), java.lang.Object(o15488sub0), NULL, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f13829_0_equals_Return(EOS(STATIC_13829), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o15488sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-1536702568))), 0, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: TRUE
f13782_1_equals_Load(EOS(STATIC_13782), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-316922784), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o15500sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-1536702568), java.lang.Object(o14843sub-1536702568))), java.lang.Object(o15500sub0), java.lang.Object(o15502sub0), o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f13830_0_equals_Return(EOS(STATIC_13830), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-316922784), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(o15500sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-1536702568), java.lang.Object(o14843sub-1536702568))), 0, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: TRUE
f13782_1_equals_Load(EOS(STATIC_13782), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-1536702568))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f13832_0_equals_Return(EOS(STATIC_13832), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-1536702568))), 0, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: TRUE
f13782_1_equals_Load(EOS(STATIC_13782), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-1536702568))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) -> f13833_0_equals_Return(EOS(STATIC_13833), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-316922784)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-1536702568))), 1, o14843[LinkedList$Entry.previous]o13970, o14843[LinkedList$Entry.previous]o14840) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14839sub-1536703343:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14839sub-1536703343:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:0, java.lang.Object(o13972sub-1537593415:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13974[LinkedList$Entry.previous]o13972:0, o13974[LinkedList$Entry.previous]o13970:0) -> f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15644sub0:0), java.lang.Object(o15644sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:1, java.lang.Object(o13972sub-1537593415:1))), o15639[LinkedList$Entry.previous]o15644:0, o13972[LinkedList$Entry.previous]o13970:0, o14839[LinkedList$Entry.previous]o13972:0, o14839[LinkedList$Entry.previous]o13970:0) :|: o13974[LinkedList$Entry.previous]o13972:0 > 0 && o13972[LinkedList$Entry.previous]o13974:0 > 0 && o15639[LinkedList$Entry.previous]o15644:0 > o13972[LinkedList$Entry.previous]o13974:0 && o13974[LinkedList$Entry.previous]o13970:0 > -1 && o14839[LinkedList$Entry.previous]o13970:0 < o13974[LinkedList$Entry.previous]o13970:0 && o14839[LinkedList$Entry.previous]o13972:0 < o13974[LinkedList$Entry.previous]o13972:0 && i2886:0 > 0 && i4191:0 > 1 && o14839[LinkedList$Entry.previous]o13970:0 > 0 && i4405:0 < i2886:0
f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-1536702568:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-1536702568:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:0, java.lang.Object(o13972sub-1537593415:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0) -> f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15712sub0:0), java.lang.Object(o15712sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:1, java.lang.Object(o13972sub-1537593415:1))), 1, o15709[LinkedList$Entry.previous]o15707:0, o14843[LinkedList$Entry.previous]o14840:0, o14843[LinkedList$Entry.previous]o13970:0) :|: o13972[LinkedList$Entry.previous]o13970:0 > -1 && o14843[LinkedList$Entry.previous]o13970:0 < o13972[LinkedList$Entry.previous]o13970:0 && o14843[LinkedList$Entry.previous]o14840:0 < o13972[LinkedList$Entry.previous]o13974:0 && o13972[LinkedList$Entry.previous]o13974:0 > -1 && i2886:0 > 0 && i4191:0 > 1 && o14843[LinkedList$Entry.previous]o13970:0 > 0 && i4405:0 < i2886:0
f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15422sub-1536703343:0), java.lang.Object(o14839sub-1536703343:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15422sub-1536703343:0), java.lang.Object(o14839sub-1536703343:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:0, java.lang.Object(o13972sub-1537593415:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13974[LinkedList$Entry.previous]o13972:0, o13974[LinkedList$Entry.previous]o13970:0) -> f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15644sub0:0), java.lang.Object(o15644sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:1, java.lang.Object(o13972sub-1537593415:1))), o15639[LinkedList$Entry.previous]o15644:0, o13972[LinkedList$Entry.previous]o13970:0, o14839[LinkedList$Entry.previous]o13972:0, o14839[LinkedList$Entry.previous]o13970:0) :|: o13974[LinkedList$Entry.previous]o13972:0 > 0 && o13972[LinkedList$Entry.previous]o13974:0 > 0 && o15639[LinkedList$Entry.previous]o15644:0 > o13972[LinkedList$Entry.previous]o13974:0 && o13974[LinkedList$Entry.previous]o13970:0 > -1 && o14839[LinkedList$Entry.previous]o13970:0 < o13974[LinkedList$Entry.previous]o13970:0 && o14839[LinkedList$Entry.previous]o13972:0 < o13974[LinkedList$Entry.previous]o13972:0 && i2886:0 > 0 && i4191:0 > 1 && o14839[LinkedList$Entry.previous]o13970:0 > 0 && i4405:0 < i2886:0
f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14839sub-1536703343:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14839sub-1536703343:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:0, java.lang.Object(o13972sub-1537593415:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13974[LinkedList$Entry.previous]o13972:0, o13974[LinkedList$Entry.previous]o13970:0) -> f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15680sub0:0), java.lang.Object(o15680sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:1, java.lang.Object(o13972sub-1537593415:1))), o15675[LinkedList$Entry.previous]o15680:0, o13972[LinkedList$Entry.previous]o13970:0, o14839[LinkedList$Entry.previous]o13972:0, o14839[LinkedList$Entry.previous]o13970:0) :|: o13974[LinkedList$Entry.previous]o13972:0 > 0 && o13972[LinkedList$Entry.previous]o13974:0 > 0 && o13974[LinkedList$Entry.previous]o13970:0 > -1 && o14839[LinkedList$Entry.previous]o13970:0 < o13974[LinkedList$Entry.previous]o13970:0 && o14839[LinkedList$Entry.previous]o13972:0 < o13974[LinkedList$Entry.previous]o13972:0 && o15675[LinkedList$Entry.previous]o15680:0 > o13972[LinkedList$Entry.previous]o13974:0 && i2886:0 > 0 && i4191:0 > 1 && o14839[LinkedList$Entry.previous]o13970:0 > 0 && i4405:0 < i2886:0
f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-316922784:0), java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-1536702568:0), java.lang.Object(o14843sub-1536702568:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-1536702568:0), java.lang.Object(o14843sub-1536702568:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:0, java.lang.Object(o13972sub-1537593415:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0) -> f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15502sub-316922784:0), java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15712sub0:0), java.lang.Object(o15712sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:1, java.lang.Object(o13972sub-1537593415:1))), 1, o15709[LinkedList$Entry.previous]o15707:0, o14843[LinkedList$Entry.previous]o14840:0, o14843[LinkedList$Entry.previous]o13970:0) :|: o13972[LinkedList$Entry.previous]o13970:0 > -1 && o14843[LinkedList$Entry.previous]o13970:0 < o13972[LinkedList$Entry.previous]o13970:0 && o14843[LinkedList$Entry.previous]o14840:0 < o13972[LinkedList$Entry.previous]o13974:0 && o13972[LinkedList$Entry.previous]o13974:0 > -1 && i2886:0 > 0 && i4191:0 > 1 && o14843[LinkedList$Entry.previous]o13970:0 > 0 && i4405:0 < i2886:0
f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-1536702568:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-1536702568:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:0, java.lang.Object(o13972sub-1537593415:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0) -> f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o15741sub0:0), java.lang.Object(o15741sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:1, java.lang.Object(o13972sub-1537593415:1))), 1, o15738[LinkedList$Entry.previous]o15736:0, o14843[LinkedList$Entry.previous]o14840:0, o14843[LinkedList$Entry.previous]o13970:0) :|: o13972[LinkedList$Entry.previous]o13970:0 > -1 && o14843[LinkedList$Entry.previous]o13970:0 < o13972[LinkedList$Entry.previous]o13970:0 && o14843[LinkedList$Entry.previous]o14840:0 < o13972[LinkedList$Entry.previous]o13974:0 && o13972[LinkedList$Entry.previous]o13974:0 > -1 && i2886:0 > 0 && i4191:0 > 1 && o14843[LinkedList$Entry.previous]o13970:0 > 0 && i4405:0 < i2886:0
Removed following non-SCC rules:
f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343:0, java.lang.Object(o14839sub-1536703343:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343:0, java.lang.Object(o14839sub-1536703343:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:0, java.lang.Object(o13972sub-1537593415:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13974[LinkedList$Entry.previous]o13972:0, o13974[LinkedList$Entry.previous]o13970:0) -> f14442_0_equals_Load(EOS(STATIC_14442), java.lang.Object(o13973sub0:0), o148370:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:1, java.lang.Object(o13972sub-1537593415:1))), java.lang.Object(o13972sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14837-1536703343:0, java.lang.Object(o14839sub-1536703343:0))), java.lang.Object(o14839sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), o148370:0, o13972[LinkedList$Entry.previous]o13970:0, o13972[LinkedList$Entry.previous]o13974:0, o14839[LinkedList$Entry.previous]o13970:0, o14839[LinkedList$Entry.previous]o13972:0) :|: o13974[LinkedList$Entry.previous]o13972:0 > 0 && o13974[LinkedList$Entry.previous]o13970:0 > -1 && o14839[LinkedList$Entry.previous]o13970:0 < o13974[LinkedList$Entry.previous]o13970:0 && o14839[LinkedList$Entry.previous]o13972:0 < o13974[LinkedList$Entry.previous]o13972:0 && o13972[LinkedList$Entry.previous]o13974:0 > 0 && i2886:0 > 0 && i4405:0 < i2886:0 && i4191:0 > 1
f13725_0_lastIndexOf_EQ(EOS(STATIC_13725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784:0, java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568:0, java.lang.Object(o14843sub-1536702568:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568:0, java.lang.Object(o14843sub-1536702568:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:0, java.lang.Object(o13972sub-1537593415:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0) -> f14522_0_equals_Load(EOS(STATIC_14522), java.lang.Object(o13973sub0:0), o148410:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13971-1537593415:1, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o148411220671313:0, java.lang.Object(o14843sub1220671313:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-1536702568:0, java.lang.Object(o14843sub-1536702568:0))), java.lang.Object(o14843sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14841-316922784:0, java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(o13973sub0:0), o148410:0, o14843[LinkedList$Entry.previous]o13970:0, o14843[LinkedList$Entry.previous]o14840:0) :|: o13972[LinkedList$Entry.previous]o13970:0 > -1 && o14843[LinkedList$Entry.previous]o13970:0 < o13972[LinkedList$Entry.previous]o13970:0 && o14843[LinkedList$Entry.previous]o14840:0 < o13972[LinkedList$Entry.previous]o13974:0 && o13972[LinkedList$Entry.previous]o13974:0 > -1 && i2886:0 > 0 && i4405:0 < i2886:0 && i4191:0 > 1
Filtered constant ground arguments:
   f13725_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13725_0_lastIndexOf_EQ(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13725_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13725_0_lastIndexOf_EQ(x1, x2, x4, x5, x6, x7, x8, x9)
Filtered unneeded arguments:
   f13725_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f13725_0_lastIndexOf_EQ(x1, x2, x3, x5, x6, x7, x8)
Finished conversion. Obtained 6 rules.P rules:
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o14839sub-1536703343:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13974[LinkedList$Entry.previous]o13972:0, o13974[LinkedList$Entry.previous]o13970:0, o139711219779784:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15644sub0:0), o15639[LinkedList$Entry.previous]o15644:0, o13972[LinkedList$Entry.previous]o13970:0, o14839[LinkedList$Entry.previous]o13972:0, o14839[LinkedList$Entry.previous]o13970:0, o139711219779784:0) :|: o13972[LinkedList$Entry.previous]o13974:0 > 0 && o13974[LinkedList$Entry.previous]o13972:0 > 0 && o15639[LinkedList$Entry.previous]o15644:0 > o13972[LinkedList$Entry.previous]o13974:0 && o13974[LinkedList$Entry.previous]o13970:0 > -1 && o14839[LinkedList$Entry.previous]o13970:0 < o13974[LinkedList$Entry.previous]o13970:0 && o14839[LinkedList$Entry.previous]o13972:0 < o13974[LinkedList$Entry.previous]o13972:0 && i2886:0 > 0 && i4191:0 > 1 && i4405:0 < i2886:0 && o14839[LinkedList$Entry.previous]o13970:0 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o14843sub-1536702568:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o139711219779784:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15712sub0:0), 1, o15709[LinkedList$Entry.previous]o15707:0, o14843[LinkedList$Entry.previous]o14840:0, o14843[LinkedList$Entry.previous]o13970:0, o139711219779784:0) :|: o14843[LinkedList$Entry.previous]o13970:0 < o13972[LinkedList$Entry.previous]o13970:0 && o13972[LinkedList$Entry.previous]o13970:0 > -1 && o14843[LinkedList$Entry.previous]o14840:0 < o13972[LinkedList$Entry.previous]o13974:0 && o13972[LinkedList$Entry.previous]o13974:0 > -1 && i2886:0 > 0 && i4191:0 > 1 && i4405:0 < i2886:0 && o14843[LinkedList$Entry.previous]o13970:0 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15422sub-1536703343:0), java.lang.Object(o14839sub-1536703343:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13974[LinkedList$Entry.previous]o13972:0, o13974[LinkedList$Entry.previous]o13970:0, o139711219779784:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15644sub0:0), o15639[LinkedList$Entry.previous]o15644:0, o13972[LinkedList$Entry.previous]o13970:0, o14839[LinkedList$Entry.previous]o13972:0, o14839[LinkedList$Entry.previous]o13970:0, o139711219779784:0) :|: o13972[LinkedList$Entry.previous]o13974:0 > 0 && o13974[LinkedList$Entry.previous]o13972:0 > 0 && o15639[LinkedList$Entry.previous]o15644:0 > o13972[LinkedList$Entry.previous]o13974:0 && o13974[LinkedList$Entry.previous]o13970:0 > -1 && o14839[LinkedList$Entry.previous]o13970:0 < o13974[LinkedList$Entry.previous]o13970:0 && o14839[LinkedList$Entry.previous]o13972:0 < o13974[LinkedList$Entry.previous]o13972:0 && i2886:0 > 0 && i4191:0 > 1 && i4405:0 < i2886:0 && o14839[LinkedList$Entry.previous]o13970:0 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o14839sub-1536703343:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13974[LinkedList$Entry.previous]o13972:0, o13974[LinkedList$Entry.previous]o13970:0, o139711219779784:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o15680sub0:0), o15675[LinkedList$Entry.previous]o15680:0, o13972[LinkedList$Entry.previous]o13970:0, o14839[LinkedList$Entry.previous]o13972:0, o14839[LinkedList$Entry.previous]o13970:0, o139711219779784:0) :|: o13972[LinkedList$Entry.previous]o13974:0 > 0 && o13974[LinkedList$Entry.previous]o13972:0 > 0 && o13974[LinkedList$Entry.previous]o13970:0 > -1 && o14839[LinkedList$Entry.previous]o13970:0 < o13974[LinkedList$Entry.previous]o13970:0 && o14839[LinkedList$Entry.previous]o13972:0 < o13974[LinkedList$Entry.previous]o13972:0 && o15675[LinkedList$Entry.previous]o15680:0 > o13972[LinkedList$Entry.previous]o13974:0 && i2886:0 > 0 && i4191:0 > 1 && i4405:0 < i2886:0 && o14839[LinkedList$Entry.previous]o13970:0 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15502sub-316922784:0), java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15502sub-1536702568:0), java.lang.Object(o14843sub-1536702568:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o139711219779784:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15502sub-316922784:0), java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15712sub0:0), 1, o15709[LinkedList$Entry.previous]o15707:0, o14843[LinkedList$Entry.previous]o14840:0, o14843[LinkedList$Entry.previous]o13970:0, o139711219779784:0) :|: o14843[LinkedList$Entry.previous]o13970:0 < o13972[LinkedList$Entry.previous]o13970:0 && o13972[LinkedList$Entry.previous]o13970:0 > -1 && o14843[LinkedList$Entry.previous]o14840:0 < o13972[LinkedList$Entry.previous]o13974:0 && o13972[LinkedList$Entry.previous]o13974:0 > -1 && i2886:0 > 0 && i4191:0 > 1 && i4405:0 < i2886:0 && o14843[LinkedList$Entry.previous]o13970:0 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o14843sub-1536702568:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o139711219779784:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o14843sub-316922784:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o15741sub0:0), 1, o15738[LinkedList$Entry.previous]o15736:0, o14843[LinkedList$Entry.previous]o14840:0, o14843[LinkedList$Entry.previous]o13970:0, o139711219779784:0) :|: o14843[LinkedList$Entry.previous]o13970:0 < o13972[LinkedList$Entry.previous]o13970:0 && o13972[LinkedList$Entry.previous]o13970:0 > -1 && o14843[LinkedList$Entry.previous]o14840:0 < o13972[LinkedList$Entry.previous]o13974:0 && o13972[LinkedList$Entry.previous]o13974:0 > -1 && i2886:0 > 0 && i4191:0 > 1 && i4405:0 < i2886:0 && o14843[LinkedList$Entry.previous]o13970:0 > 0

----------------------------------------

(37)
Obligation:
Rules:
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o14839sub-1536703343:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13974[LinkedList$Entry.previous]o13972:0, o13974[LinkedList$Entry.previous]o13970:0, o139711219779784:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15644sub0:0), o15639[LinkedList$Entry.previous]o15644:0, o13972[LinkedList$Entry.previous]o13970:0, o14839[LinkedList$Entry.previous]o13972:0, o14839[LinkedList$Entry.previous]o13970:0, o139711219779784:0) :|: o13972[LinkedList$Entry.previous]o13974:0 > 0 && o13974[LinkedList$Entry.previous]o13972:0 > 0 && o15639[LinkedList$Entry.previous]o15644:0 > o13972[LinkedList$Entry.previous]o13974:0 && o13974[LinkedList$Entry.previous]o13970:0 > -1 && o14839[LinkedList$Entry.previous]o13970:0 < o13974[LinkedList$Entry.previous]o13970:0 && o14839[LinkedList$Entry.previous]o13972:0 < o13974[LinkedList$Entry.previous]o13972:0 && i2886:0 > 0 && i4191:0 > 1 && i4405:0 < i2886:0 && o14839[LinkedList$Entry.previous]o13970:0 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x2), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x3))), x4, x5, x4, x5, x) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x2), java.lang.Object(x6), 1, x7, x8, x9, x) :|: x9 < x5 && x5 > -1 && x8 < x4 && x4 > -1 && x10 > 0 && x11 > 1 && x12 < x10 && x9 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(x14)))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(x17))), x18, x19, x20, x21, x13) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(x14)))))))), java.lang.Object(x15), java.lang.Object(x22), x23, x19, x24, x25, x13) :|: x18 > 0 && x20 > 0 && x23 > x18 && x21 > -1 && x25 < x21 && x24 < x20 && x26 > 0 && x27 > 1 && x28 < x26 && x25 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x31))), x32, x33, x34, x35, x29) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x36), x37, x33, x38, x39, x29) :|: x32 > 0 && x34 > 0 && x35 > -1 && x39 < x35 && x38 < x34 && x37 > x32 && x40 > 0 && x41 > 1 && x42 < x40 && x39 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x47), java.lang.Object(x48))), x49, x50, x49, x50, x43) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(x51), 1, x52, x53, x54, x43) :|: x54 < x50 && x50 > -1 && x53 < x49 && x49 > -1 && x55 > 0 && x56 > 1 && x57 < x55 && x54 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x60))), x61, x62, x61, x62, x58) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x63), 1, x64, x65, x66, x58) :|: x66 < x62 && x62 > -1 && x65 < x61 && x61 > -1 && x67 > 0 && x68 > 1 && x69 < x67 && x66 > 0

----------------------------------------

(38) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(39)
Obligation:
Rules:
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o14839sub-1536703343:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13974[LinkedList$Entry.previous]o13972:0, o13974[LinkedList$Entry.previous]o13970:0, o139711219779784:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15644sub0:0), o15639[LinkedList$Entry.previous]o15644:0, o13972[LinkedList$Entry.previous]o13970:0, o14839[LinkedList$Entry.previous]o13972:0, o14839[LinkedList$Entry.previous]o13970:0, o139711219779784:0) :|: o13972[LinkedList$Entry.previous]o13974:0 > 0 && o13974[LinkedList$Entry.previous]o13972:0 > 0 && o15639[LinkedList$Entry.previous]o15644:0 > o13972[LinkedList$Entry.previous]o13974:0 && o13974[LinkedList$Entry.previous]o13970:0 > -1 && o14839[LinkedList$Entry.previous]o13970:0 < o13974[LinkedList$Entry.previous]o13970:0 && o14839[LinkedList$Entry.previous]o13972:0 < o13974[LinkedList$Entry.previous]o13972:0 && i2886:0 > 0 && i4191:0 > 1 && i4405:0 < i2886:0 && o14839[LinkedList$Entry.previous]o13970:0 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x2), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x3))), x4, x5, x4, x5, x) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x2), java.lang.Object(x6), 1, x7, x8, x9, x) :|: x9 < x5 && x5 > -1 && x8 < x4 && x4 > -1 && x10 > 0 && x11 > 1 && x12 < x10 && x9 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(x14)))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(x17))), x18, x19, x20, x21, x13) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(x14)))))))), java.lang.Object(x15), java.lang.Object(x22), x23, x19, x24, x25, x13) :|: x18 > 0 && x20 > 0 && x23 > x18 && x21 > -1 && x25 < x21 && x24 < x20 && x26 > 0 && x27 > 1 && x28 < x26 && x25 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x31))), x32, x33, x34, x35, x29) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x36), x37, x33, x38, x39, x29) :|: x32 > 0 && x34 > 0 && x35 > -1 && x39 < x35 && x38 < x34 && x37 > x32 && x40 > 0 && x41 > 1 && x42 < x40 && x39 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x47), java.lang.Object(x48))), x49, x50, x49, x50, x43) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(x51), 1, x52, x53, x54, x43) :|: x54 < x50 && x50 > -1 && x53 < x49 && x49 > -1 && x55 > 0 && x56 > 1 && x57 < x55 && x54 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x60))), x61, x62, x61, x62, x58) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x63), 1, x64, x65, x66, x58) :|: x66 < x62 && x62 > -1 && x65 < x61 && x61 > -1 && x67 > 0 && x68 > 1 && x69 < x67 && x66 > 0

----------------------------------------

(40) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o14839sub-1536703343:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13974[LinkedList$Entry.previous]o13972:0, o13974[LinkedList$Entry.previous]o13970:0, o139711219779784:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15644sub0:0), o15639[LinkedList$Entry.previous]o15644:0, o13972[LinkedList$Entry.previous]o13970:0, o14839[LinkedList$Entry.previous]o13972:0, o14839[LinkedList$Entry.previous]o13970:0, o139711219779784:0) :|: o13972[LinkedList$Entry.previous]o13974:0 > 0 && o13974[LinkedList$Entry.previous]o13972:0 > 0 && o15639[LinkedList$Entry.previous]o15644:0 > o13972[LinkedList$Entry.previous]o13974:0 && o13974[LinkedList$Entry.previous]o13970:0 > -1 && o14839[LinkedList$Entry.previous]o13970:0 < o13974[LinkedList$Entry.previous]o13970:0 && o14839[LinkedList$Entry.previous]o13972:0 < o13974[LinkedList$Entry.previous]o13972:0 && i2886:0 > 0 && i4191:0 > 1 && i4405:0 < i2886:0 && o14839[LinkedList$Entry.previous]o13970:0 > 0
(2) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x2), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x3))), x4, x5, x4, x5, x) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x2), java.lang.Object(x6), 1, x7, x8, x9, x) :|: x9 < x5 && x5 > -1 && x8 < x4 && x4 > -1 && x10 > 0 && x11 > 1 && x12 < x10 && x9 > 0
(3) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(x14)))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(x17))), x18, x19, x20, x21, x13) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(x14)))))))), java.lang.Object(x15), java.lang.Object(x22), x23, x19, x24, x25, x13) :|: x18 > 0 && x20 > 0 && x23 > x18 && x21 > -1 && x25 < x21 && x24 < x20 && x26 > 0 && x27 > 1 && x28 < x26 && x25 > 0
(4) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x31))), x32, x33, x34, x35, x29) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x36), x37, x33, x38, x39, x29) :|: x32 > 0 && x34 > 0 && x35 > -1 && x39 < x35 && x38 < x34 && x37 > x32 && x40 > 0 && x41 > 1 && x42 < x40 && x39 > 0
(5) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x47), java.lang.Object(x48))), x49, x50, x49, x50, x43) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(x51), 1, x52, x53, x54, x43) :|: x54 < x50 && x50 > -1 && x53 < x49 && x49 > -1 && x55 > 0 && x56 > 1 && x57 < x55 && x54 > 0
(6) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x60))), x61, x62, x61, x62, x58) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x63), 1, x64, x65, x66, x58) :|: x66 < x62 && x62 > -1 && x65 < x61 && x61 > -1 && x67 > 0 && x68 > 1 && x69 < x67 && x66 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (3), (4), (5), (6)
(6) -> (1), (3), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(41)
Obligation:

Termination digraph:
Nodes:
(1) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o14839sub-1536703343:0))), o13972[LinkedList$Entry.previous]o13974:0, o13972[LinkedList$Entry.previous]o13970:0, o13974[LinkedList$Entry.previous]o13972:0, o13974[LinkedList$Entry.previous]o13970:0, o139711219779784:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0, java.lang.Object(o13972sub1219779784:0)))))))), java.lang.Object(o13973sub0:0), java.lang.Object(o15644sub0:0), o15639[LinkedList$Entry.previous]o15644:0, o13972[LinkedList$Entry.previous]o13970:0, o14839[LinkedList$Entry.previous]o13972:0, o14839[LinkedList$Entry.previous]o13970:0, o139711219779784:0) :|: o13972[LinkedList$Entry.previous]o13974:0 > 0 && o13974[LinkedList$Entry.previous]o13972:0 > 0 && o15639[LinkedList$Entry.previous]o15644:0 > o13972[LinkedList$Entry.previous]o13974:0 && o13974[LinkedList$Entry.previous]o13970:0 > -1 && o14839[LinkedList$Entry.previous]o13970:0 < o13974[LinkedList$Entry.previous]o13970:0 && o14839[LinkedList$Entry.previous]o13972:0 < o13974[LinkedList$Entry.previous]o13972:0 && i2886:0 > 0 && i4191:0 > 1 && i4405:0 < i2886:0 && o14839[LinkedList$Entry.previous]o13970:0 > 0
(2) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x2), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x3))), x4, x5, x4, x5, x) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x2), java.lang.Object(x6), 1, x7, x8, x9, x) :|: x9 < x5 && x5 > -1 && x8 < x4 && x4 > -1 && x10 > 0 && x11 > 1 && x12 < x10 && x9 > 0
(3) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(x14)))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16), java.lang.Object(x17))), x18, x19, x20, x21, x13) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(x14)))))))), java.lang.Object(x15), java.lang.Object(x22), x23, x19, x24, x25, x13) :|: x18 > 0 && x20 > 0 && x23 > x18 && x21 > -1 && x25 < x21 && x24 < x20 && x26 > 0 && x27 > 1 && x28 < x26 && x25 > 0
(4) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x31))), x32, x33, x34, x35, x29) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(x30)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x36), x37, x33, x38, x39, x29) :|: x32 > 0 && x34 > 0 && x35 > -1 && x39 < x35 && x38 < x34 && x37 > x32 && x40 > 0 && x41 > 1 && x42 < x40 && x39 > 0
(5) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x47), java.lang.Object(x48))), x49, x50, x49, x50, x43) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44), java.lang.Object(x45)))))))))), java.lang.Object(x46), java.lang.Object(x51), 1, x52, x53, x54, x43) :|: x54 < x50 && x50 > -1 && x53 < x49 && x49 > -1 && x55 > 0 && x56 > 1 && x57 < x55 && x54 > 0
(6) f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x60))), x61, x62, x61, x62, x58) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x63), 1, x64, x65, x66, x58) :|: x66 < x62 && x62 > -1 && x65 < x61 && x61 > -1 && x67 > 0 && x68 > 1 && x69 < x67 && x66 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (3), (4), (5), (6)
(6) -> (1), (3), (4), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(42) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(43)
Obligation:
Rules:
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0:0, java.lang.Object(o13972sub1219779784:0:0)))))))), java.lang.Object(o13973sub0:0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o14839sub-1536703343:0:0))), o13972[LinkedList$Entry.previous]o13974:0:0, o13972[LinkedList$Entry.previous]o13970:0:0, o13974[LinkedList$Entry.previous]o13972:0:0, o13974[LinkedList$Entry.previous]o13970:0:0, o139711219779784:0:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o139711219779784:0:0, java.lang.Object(o13972sub1219779784:0:0)))))))), java.lang.Object(o13973sub0:0:0), java.lang.Object(o15644sub0:0:0), o15639[LinkedList$Entry.previous]o15644:0:0, o13972[LinkedList$Entry.previous]o13970:0:0, o14839[LinkedList$Entry.previous]o13972:0:0, o14839[LinkedList$Entry.previous]o13970:0:0, o139711219779784:0:0) :|: i4405:0:0 < i2886:0:0 && o14839[LinkedList$Entry.previous]o13970:0:0 > 0 && i4191:0:0 > 1 && i2886:0:0 > 0 && o14839[LinkedList$Entry.previous]o13972:0:0 < o13974[LinkedList$Entry.previous]o13972:0:0 && o14839[LinkedList$Entry.previous]o13970:0:0 < o13974[LinkedList$Entry.previous]o13970:0:0 && o13974[LinkedList$Entry.previous]o13970:0:0 > -1 && o15639[LinkedList$Entry.previous]o15644:0:0 > o13972[LinkedList$Entry.previous]o13974:0:0 && o13974[LinkedList$Entry.previous]o13972:0:0 > 0 && o13972[LinkedList$Entry.previous]o13974:0:0 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44:0), java.lang.Object(x45:0)))))))))), java.lang.Object(x46:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x47:0), java.lang.Object(x48:0))), x49:0, x50:0, x49:0, x50:0, x43:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x43:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x44:0), java.lang.Object(x45:0)))))))))), java.lang.Object(x46:0), java.lang.Object(x51:0), 1, x52:0, x53:0, x54:0, x43:0) :|: x57:0 < x55:0 && x54:0 > 0 && x56:0 > 1 && x55:0 > 0 && x49:0 > -1 && x53:0 < x49:0 && x50:0 > -1 && x54:0 < x50:0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1:0)))))))))), java.lang.Object(x2:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x3:0))), x4:0, x5:0, x4:0, x5:0, x:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1:0)))))))))), java.lang.Object(x2:0), java.lang.Object(x6:0), 1, x7:0, x8:0, x9:0, x:0) :|: x12:0 < x10:0 && x9:0 > 0 && x11:0 > 1 && x10:0 > 0 && x4:0 > -1 && x8:0 < x4:0 && x5:0 > -1 && x9:0 < x5:0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13:0, java.lang.Object(x14:0)))))))), java.lang.Object(x15:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x16:0), java.lang.Object(x17:0))), x18:0, x19:0, x20:0, x21:0, x13:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13:0, java.lang.Object(x14:0)))))))), java.lang.Object(x15:0), java.lang.Object(x22:0), x23:0, x19:0, x24:0, x25:0, x13:0) :|: x28:0 < x26:0 && x25:0 > 0 && x27:0 > 1 && x26:0 > 0 && x24:0 < x20:0 && x25:0 < x21:0 && x21:0 > -1 && x23:0 > x18:0 && x20:0 > 0 && x18:0 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29:0, java.lang.Object(x30:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x31:0))), x32:0, x33:0, x34:0, x35:0, x29:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29:0, java.lang.Object(x30:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x36:0), x37:0, x33:0, x38:0, x39:0, x29:0) :|: x42:0 < x40:0 && x39:0 > 0 && x41:0 > 1 && x40:0 > 0 && x37:0 > x32:0 && x38:0 < x34:0 && x39:0 < x35:0 && x35:0 > -1 && x34:0 > 0 && x32:0 > 0
f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x60:0))), x61:0, x62:0, x61:0, x62:0, x58:0) -> f13725_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x58:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x59:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x63:0), 1, x64:0, x65:0, x66:0, x58:0) :|: x69:0 < x67:0 && x66:0 > 0 && x68:0 > 1 && x67:0 > 0 && x61:0 > -1 && x65:0 < x61:0 && x62:0 > -1 && x66:0 < x62:0

----------------------------------------

(44) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13725_0_lastIndexOf_EQ(VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
NULL()
javaUtilEx.Content()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(45)
Obligation:
Rules:
f13725_0_lastIndexOf_EQ(c, c1, c2, o13972[LinkedList$Entry.previous]o13974:0:0, o13972[LinkedList$Entry.previous]o13970:0:0, o13974[LinkedList$Entry.previous]o13972:0:0, o13974[LinkedList$Entry.previous]o13970:0:0, o139711219779784:0:0) -> f13725_0_lastIndexOf_EQ(c3, c4, c5, o15639[LinkedList$Entry.previous]o15644:0:0, o13972[LinkedList$Entry.previous]o13970:0:0, o14839[LinkedList$Entry.previous]o13972:0:0, o14839[LinkedList$Entry.previous]o13970:0:0, o139711219779784:0:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i4405:0:0 < i2886:0:0 && o14839[LinkedList$Entry.previous]o13970:0:0 > 0 && i4191:0:0 > 1 && i2886:0:0 > 0 && o14839[LinkedList$Entry.previous]o13972:0:0 < o13974[LinkedList$Entry.previous]o13972:0:0 && o14839[LinkedList$Entry.previous]o13970:0:0 < o13974[LinkedList$Entry.previous]o13970:0:0 && o13974[LinkedList$Entry.previous]o13970:0:0 > -1 && o15639[LinkedList$Entry.previous]o15644:0:0 > o13972[LinkedList$Entry.previous]o13974:0:0 && o13974[LinkedList$Entry.previous]o13972:0:0 > 0 && o13972[LinkedList$Entry.previous]o13974:0:0 > 0)
f13725_0_lastIndexOf_EQ(c6, c7, c8, x49:0, x50:0, x49:0, x50:0, x43:0) -> f13725_0_lastIndexOf_EQ(c9, c10, c11, c12, x52:0, x53:0, x54:0, x43:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && (c7 = 0 && c6 = 0))))) && (x57:0 < x55:0 && x54:0 > 0 && x56:0 > 1 && x55:0 > 0 && x49:0 > -1 && x53:0 < x49:0 && x50:0 > -1 && x54:0 < x50:0)
f13725_0_lastIndexOf_EQ(c26, c27, c28, x32:0, x33:0, x34:0, x35:0, x29:0) -> f13725_0_lastIndexOf_EQ(c29, c30, c31, x37:0, x33:0, x38:0, x39:0, x29:0) :|: c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0)))) && (x42:0 < x40:0 && x39:0 > 0 && x41:0 > 1 && x40:0 > 0 && x37:0 > x32:0 && x38:0 < x34:0 && x39:0 < x35:0 && x35:0 > -1 && x34:0 > 0 && x32:0 > 0)

----------------------------------------

(46) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f13725_0_lastIndexOf_EQ ] = f13725_0_lastIndexOf_EQ_7

The following rules are decreasing:
f13725_0_lastIndexOf_EQ(c, c1, c2, o13972[LinkedList$Entry.previous]o13974:0:0, o13972[LinkedList$Entry.previous]o13970:0:0, o13974[LinkedList$Entry.previous]o13972:0:0, o13974[LinkedList$Entry.previous]o13970:0:0, o139711219779784:0:0) -> f13725_0_lastIndexOf_EQ(c3, c4, c5, o15639[LinkedList$Entry.previous]o15644:0:0, o13972[LinkedList$Entry.previous]o13970:0:0, o14839[LinkedList$Entry.previous]o13972:0:0, o14839[LinkedList$Entry.previous]o13970:0:0, o139711219779784:0:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i4405:0:0 < i2886:0:0 && o14839[LinkedList$Entry.previous]o13970:0:0 > 0 && i4191:0:0 > 1 && i2886:0:0 > 0 && o14839[LinkedList$Entry.previous]o13972:0:0 < o13974[LinkedList$Entry.previous]o13972:0:0 && o14839[LinkedList$Entry.previous]o13970:0:0 < o13974[LinkedList$Entry.previous]o13970:0:0 && o13974[LinkedList$Entry.previous]o13970:0:0 > -1 && o15639[LinkedList$Entry.previous]o15644:0:0 > o13972[LinkedList$Entry.previous]o13974:0:0 && o13974[LinkedList$Entry.previous]o13972:0:0 > 0 && o13972[LinkedList$Entry.previous]o13974:0:0 > 0)
f13725_0_lastIndexOf_EQ(c6, c7, c8, x49:0, x50:0, x49:0, x50:0, x43:0) -> f13725_0_lastIndexOf_EQ(c9, c10, c11, c12, x52:0, x53:0, x54:0, x43:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && (c7 = 0 && c6 = 0))))) && (x57:0 < x55:0 && x54:0 > 0 && x56:0 > 1 && x55:0 > 0 && x49:0 > -1 && x53:0 < x49:0 && x50:0 > -1 && x54:0 < x50:0)
f13725_0_lastIndexOf_EQ(c26, c27, c28, x32:0, x33:0, x34:0, x35:0, x29:0) -> f13725_0_lastIndexOf_EQ(c29, c30, c31, x37:0, x33:0, x38:0, x39:0, x29:0) :|: c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0)))) && (x42:0 < x40:0 && x39:0 > 0 && x41:0 > 1 && x40:0 > 0 && x37:0 > x32:0 && x38:0 < x34:0 && x39:0 < x35:0 && x35:0 > -1 && x34:0 > 0 && x32:0 > 0)

The following rules are bounded:
f13725_0_lastIndexOf_EQ(c, c1, c2, o13972[LinkedList$Entry.previous]o13974:0:0, o13972[LinkedList$Entry.previous]o13970:0:0, o13974[LinkedList$Entry.previous]o13972:0:0, o13974[LinkedList$Entry.previous]o13970:0:0, o139711219779784:0:0) -> f13725_0_lastIndexOf_EQ(c3, c4, c5, o15639[LinkedList$Entry.previous]o15644:0:0, o13972[LinkedList$Entry.previous]o13970:0:0, o14839[LinkedList$Entry.previous]o13972:0:0, o14839[LinkedList$Entry.previous]o13970:0:0, o139711219779784:0:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i4405:0:0 < i2886:0:0 && o14839[LinkedList$Entry.previous]o13970:0:0 > 0 && i4191:0:0 > 1 && i2886:0:0 > 0 && o14839[LinkedList$Entry.previous]o13972:0:0 < o13974[LinkedList$Entry.previous]o13972:0:0 && o14839[LinkedList$Entry.previous]o13970:0:0 < o13974[LinkedList$Entry.previous]o13970:0:0 && o13974[LinkedList$Entry.previous]o13970:0:0 > -1 && o15639[LinkedList$Entry.previous]o15644:0:0 > o13972[LinkedList$Entry.previous]o13974:0:0 && o13974[LinkedList$Entry.previous]o13972:0:0 > 0 && o13972[LinkedList$Entry.previous]o13974:0:0 > 0)
f13725_0_lastIndexOf_EQ(c6, c7, c8, x49:0, x50:0, x49:0, x50:0, x43:0) -> f13725_0_lastIndexOf_EQ(c9, c10, c11, c12, x52:0, x53:0, x54:0, x43:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && (c7 = 0 && c6 = 0))))) && (x57:0 < x55:0 && x54:0 > 0 && x56:0 > 1 && x55:0 > 0 && x49:0 > -1 && x53:0 < x49:0 && x50:0 > -1 && x54:0 < x50:0)
f13725_0_lastIndexOf_EQ(c26, c27, c28, x32:0, x33:0, x34:0, x35:0, x29:0) -> f13725_0_lastIndexOf_EQ(c29, c30, c31, x37:0, x33:0, x38:0, x39:0, x29:0) :|: c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0)))) && (x42:0 < x40:0 && x39:0 > 0 && x41:0 > 1 && x40:0 > 0 && x37:0 > x32:0 && x38:0 < x34:0 && x39:0 < x35:0 && x35:0 > -1 && x34:0 > 0 && x32:0 > 0)


----------------------------------------

(47)
YES

----------------------------------------

(48)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateLastIndexOf.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, previous]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(49) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 27 IRulesP rules:
f13727_0_lastIndexOf_EQ(EOS(STATIC_13727), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), java.lang.Object(o14071sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14068-1536938757, java.lang.Object(o14070sub-1536938757))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071, o14071[LinkedList$Entry.previous]o14067) -> f13735_0_lastIndexOf_Inc(EOS(STATIC_13735), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071, o14071[LinkedList$Entry.previous]o14067) :|: TRUE
f13735_0_lastIndexOf_Inc(EOS(STATIC_13735), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071, o14071[LinkedList$Entry.previous]o14067) -> f13741_0_lastIndexOf_Load(EOS(STATIC_13741), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071, o14071[LinkedList$Entry.previous]o14067) :|: TRUE
f13741_0_lastIndexOf_Load(EOS(STATIC_13741), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071, o14071[LinkedList$Entry.previous]o14067) -> f13746_0_lastIndexOf_FieldAccess(EOS(STATIC_13746), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), java.lang.Object(o14071sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071, o14071[LinkedList$Entry.previous]o14067) :|: TRUE
f13746_0_lastIndexOf_FieldAccess(EOS(STATIC_13746), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), java.lang.Object(o14071sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071, o14071[LinkedList$Entry.previous]o14067) -> f13751_0_lastIndexOf_FieldAccess(EOS(STATIC_13751), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), java.lang.Object(o14071sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14071, o14071[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070) :|: o14071[LinkedList$Entry.previous]o14070 > 0 && o14070[LinkedList$Entry.previous]o14071 > 0
f13746_0_lastIndexOf_FieldAccess(EOS(STATIC_13746), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14813sub1221089751)))))))), java.lang.Object(o14813sub0), java.lang.Object(o14813sub0), o14069[LinkedList$Entry.next]o14067, o14813[LinkedList$Entry.previous]o14067, o14813[LinkedList$Entry.previous]o14813, o14813[LinkedList$Entry.previous]o14813, o14813[LinkedList$Entry.previous]o14067) -> f13752_0_lastIndexOf_FieldAccess(EOS(STATIC_13752), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14813sub1221089751)))))))), java.lang.Object(o14813sub0), java.lang.Object(o14813sub0), o14069[LinkedList$Entry.next]o14067, o14813[LinkedList$Entry.previous]o14067, o14813[LinkedList$Entry.previous]o14813) :|: TRUE
f13751_0_lastIndexOf_FieldAccess(EOS(STATIC_13751), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14821-1536704490, java.lang.Object(o14823sub-1536704490))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14821-1536704490, java.lang.Object(o14823sub-1536704490))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14820, o14820[LinkedList$Entry.previous]o14067, o14820[LinkedList$Entry.previous]o14070) -> f13759_0_lastIndexOf_FieldAccess(EOS(STATIC_13759), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14821-1536704490, java.lang.Object(o14823sub-1536704490))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14821-1536704490, java.lang.Object(o14823sub-1536704490))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14820, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070) :|: o14823[LinkedList$Entry.previous]o14067 < o14820[LinkedList$Entry.previous]o14067 && o14820[LinkedList$Entry.previous]o14067 >= 0 && o14823[LinkedList$Entry.previous]o14070 < o14820[LinkedList$Entry.previous]o14070 && o14820[LinkedList$Entry.previous]o14070 >= 0
f13759_0_lastIndexOf_FieldAccess(EOS(STATIC_13759), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14821-1536704490, java.lang.Object(o14823sub-1536704490))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14821-1536704490, java.lang.Object(o14823sub-1536704490))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14820, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070) -> f13767_0_lastIndexOf_NONNULL(EOS(STATIC_13767), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14821-1536704490, java.lang.Object(o14823sub-1536704490))), o148210, o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14820, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070) :|: TRUE
f13767_0_lastIndexOf_NONNULL(EOS(STATIC_13767), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15017sub-1536704490), java.lang.Object(o14823sub-1536704490))), java.lang.Object(o15017sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14820, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070) -> f13775_0_lastIndexOf_NONNULL(EOS(STATIC_13775), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15017sub-1536704490), java.lang.Object(o14823sub-1536704490))), java.lang.Object(o15017sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14820, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070) :|: TRUE
f13775_0_lastIndexOf_NONNULL(EOS(STATIC_13775), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15017sub-1536704490), java.lang.Object(o14823sub-1536704490))), java.lang.Object(o15017sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14820, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070) -> f13783_0_lastIndexOf_Load(EOS(STATIC_13783), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15017sub-1536704490), java.lang.Object(o14823sub-1536704490))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14820, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070) :|: TRUE
f13783_0_lastIndexOf_Load(EOS(STATIC_13783), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15017sub-1536704490), java.lang.Object(o14823sub-1536704490))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14820, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070) -> f13791_0_lastIndexOf_FieldAccess(EOS(STATIC_13791), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15017sub-1536704490), java.lang.Object(o14823sub-1536704490))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14820, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070) :|: TRUE
f13791_0_lastIndexOf_FieldAccess(EOS(STATIC_13791), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15017sub-1536704490), java.lang.Object(o14823sub-1536704490))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14070[LinkedList$Entry.previous]o14820, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070) -> f13797_0_lastIndexOf_Store(EOS(STATIC_13797), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14823sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14823) :|: o14070[LinkedList$Entry.previous]o14823 > o14070[LinkedList$Entry.previous]o14820 && o14070[LinkedList$Entry.previous]o14820 >= 0
f13797_0_lastIndexOf_Store(EOS(STATIC_13797), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14823sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14823) -> f13803_0_lastIndexOf_JMP(EOS(STATIC_13803), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14823sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14823) :|: TRUE
f13803_0_lastIndexOf_JMP(EOS(STATIC_13803), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14823sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14823) -> f13805_0_lastIndexOf_Load(EOS(STATIC_13805), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14823sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14823) :|: TRUE
f13805_0_lastIndexOf_Load(EOS(STATIC_13805), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14823sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14823) -> f13691_0_lastIndexOf_Load(EOS(STATIC_13691), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14823sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14067, o14823[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14823) :|: TRUE
f13691_0_lastIndexOf_Load(EOS(STATIC_13691), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071) -> f13701_0_lastIndexOf_Load(EOS(STATIC_13701), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), java.lang.Object(o14071sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071) :|: TRUE
f13701_0_lastIndexOf_Load(EOS(STATIC_13701), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), java.lang.Object(o14071sub0), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071) -> f13707_0_lastIndexOf_FieldAccess(EOS(STATIC_13707), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), java.lang.Object(o14071sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071) :|: TRUE
f13707_0_lastIndexOf_FieldAccess(EOS(STATIC_13707), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), java.lang.Object(o14071sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071) -> f13716_0_lastIndexOf_EQ(EOS(STATIC_13716), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), java.lang.Object(o14071sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14068-1536938757, java.lang.Object(o14070sub-1536938757))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071) :|: TRUE
f13716_0_lastIndexOf_EQ(EOS(STATIC_13716), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), java.lang.Object(o14071sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14068-1536938757, java.lang.Object(o14070sub-1536938757))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071) -> f13727_0_lastIndexOf_EQ(EOS(STATIC_13727), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(o14070sub1221089751)))))))), java.lang.Object(o14071sub0), java.lang.Object(o14071sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14068-1536938757, java.lang.Object(o14070sub-1536938757))), o14069[LinkedList$Entry.next]o14067, o14070[LinkedList$Entry.previous]o14067, o14071[LinkedList$Entry.previous]o14070, o14070[LinkedList$Entry.previous]o14071, o14071[LinkedList$Entry.previous]o14067) :|: o14071[LinkedList$Entry.previous]o14067 > 0
f13752_0_lastIndexOf_FieldAccess(EOS(STATIC_13752), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14825-315614615, java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14825-1536704366, java.lang.Object(o14827sub-1536704366))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14825-1536704366, java.lang.Object(o14827sub-1536704366))), o14069[LinkedList$Entry.next]o14067, o14824[LinkedList$Entry.previous]o14067, o14824[LinkedList$Entry.previous]o14824) -> f13760_0_lastIndexOf_FieldAccess(EOS(STATIC_13760), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14825-315614615, java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14825-1536704366, java.lang.Object(o14827sub-1536704366))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14825-1536704366, java.lang.Object(o14827sub-1536704366))), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) :|: o14827[LinkedList$Entry.previous]o14067 < o14824[LinkedList$Entry.previous]o14067 && o14824[LinkedList$Entry.previous]o14067 >= 0 && o14827[LinkedList$Entry.previous]o14824 < o14824[LinkedList$Entry.previous]o14824 && o14824[LinkedList$Entry.previous]o14824 >= 0
f13760_0_lastIndexOf_FieldAccess(EOS(STATIC_13760), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14825-315614615, java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14825-1536704366, java.lang.Object(o14827sub-1536704366))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14825-1536704366, java.lang.Object(o14827sub-1536704366))), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) -> f13768_0_lastIndexOf_NONNULL(EOS(STATIC_13768), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14825-315614615, java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14825-1536704366, java.lang.Object(o14827sub-1536704366))), o148250, o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) :|: TRUE
f13768_0_lastIndexOf_NONNULL(EOS(STATIC_13768), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-1536704366), java.lang.Object(o14827sub-1536704366))), java.lang.Object(o15018sub0), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) -> f13777_0_lastIndexOf_NONNULL(EOS(STATIC_13777), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-1536704366), java.lang.Object(o14827sub-1536704366))), java.lang.Object(o15018sub0), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) :|: TRUE
f13777_0_lastIndexOf_NONNULL(EOS(STATIC_13777), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-1536704366), java.lang.Object(o14827sub-1536704366))), java.lang.Object(o15018sub0), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) -> f13785_0_lastIndexOf_Load(EOS(STATIC_13785), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-1536704366), java.lang.Object(o14827sub-1536704366))), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) :|: TRUE
f13785_0_lastIndexOf_Load(EOS(STATIC_13785), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-1536704366), java.lang.Object(o14827sub-1536704366))), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) -> f13792_0_lastIndexOf_FieldAccess(EOS(STATIC_13792), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-1536704366), java.lang.Object(o14827sub-1536704366))), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) :|: TRUE
f13792_0_lastIndexOf_FieldAccess(EOS(STATIC_13792), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-1536704366), java.lang.Object(o14827sub-1536704366))), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) -> f13798_0_lastIndexOf_Store(EOS(STATIC_13798), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(o14827sub0), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) :|: TRUE
f13798_0_lastIndexOf_Store(EOS(STATIC_13798), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(o14827sub0), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) -> f13804_0_lastIndexOf_JMP(EOS(STATIC_13804), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(o14827sub0), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) :|: TRUE
f13804_0_lastIndexOf_JMP(EOS(STATIC_13804), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(o14827sub0), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) -> f13806_0_lastIndexOf_Load(EOS(STATIC_13806), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(o14827sub0), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) :|: TRUE
f13806_0_lastIndexOf_Load(EOS(STATIC_13806), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(o14827sub0), o14069[LinkedList$Entry.next]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824) -> f13691_0_lastIndexOf_Load(EOS(STATIC_13691), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615), java.lang.Object(o14827sub-315614615)))))))))), java.lang.Object(o14827sub0), o14069[LinkedList$Entry.next]o14067, o14824[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14067, o14827[LinkedList$Entry.previous]o14824, o14824[LinkedList$Entry.previous]o14827) :|: o14824[LinkedList$Entry.previous]o14827 = 1
Combined rules. Obtained 2 IRulesP rules:
f13727_0_lastIndexOf_EQ(EOS(STATIC_13727), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-1536704366:0), java.lang.Object(o14827sub-1536704366:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-1536704366:0), java.lang.Object(o14827sub-1536704366:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14068-1536938757:0, java.lang.Object(o14070sub-1536938757:0))), o14069[LinkedList$Entry.next]o14067:0, o14070[LinkedList$Entry.previous]o14067:0, o14071[LinkedList$Entry.previous]o14070:0, o14071[LinkedList$Entry.previous]o14070:0, o14070[LinkedList$Entry.previous]o14067:0) -> f13727_0_lastIndexOf_EQ(EOS(STATIC_13727), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(o14827sub0:0), java.lang.Object(o14827sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14068-1536938757:1, java.lang.Object(o14070sub-1536938757:1))), o14069[LinkedList$Entry.next]o14067:0, o14824[LinkedList$Entry.previous]o14067:0, o14827[LinkedList$Entry.previous]o14824:0, 1, o14827[LinkedList$Entry.previous]o14067:0) :|: o14070[LinkedList$Entry.previous]o14067:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0 < o14070[LinkedList$Entry.previous]o14067:0 && o14827[LinkedList$Entry.previous]o14824:0 < o14071[LinkedList$Entry.previous]o14070:0 && o14827[LinkedList$Entry.previous]o14067:0 > 0 && o14071[LinkedList$Entry.previous]o14070:0 > -1
f13727_0_lastIndexOf_EQ(EOS(STATIC_13727), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751:0, java.lang.Object(o14070sub1221089751:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15017sub-1536704490:0), java.lang.Object(o14823sub-1536704490:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o15017sub-1536704490:0), java.lang.Object(o14823sub-1536704490:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14068-1536938757:0, java.lang.Object(o14070sub-1536938757:0))), o14069[LinkedList$Entry.next]o14067:0, o14070[LinkedList$Entry.previous]o14067:0, o14071[LinkedList$Entry.previous]o14070:0, o14070[LinkedList$Entry.previous]o14071:0, o14071[LinkedList$Entry.previous]o14067:0) -> f13727_0_lastIndexOf_EQ(EOS(STATIC_13727), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o140681221089751:0, java.lang.Object(o14070sub1221089751:0)))))))), java.lang.Object(o14823sub0:0), java.lang.Object(o14823sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14068-1536938757:1, java.lang.Object(o14070sub-1536938757:1))), o14069[LinkedList$Entry.next]o14067:0, o14070[LinkedList$Entry.previous]o14067:0, o14823[LinkedList$Entry.previous]o14070:0, o14070[LinkedList$Entry.previous]o14823:0, o14823[LinkedList$Entry.previous]o14067:0) :|: o14070[LinkedList$Entry.previous]o14071:0 > 0 && o14071[LinkedList$Entry.previous]o14070:0 > 0 && o14071[LinkedList$Entry.previous]o14067:0 > -1 && o14823[LinkedList$Entry.previous]o14067:0 < o14071[LinkedList$Entry.previous]o14067:0 && o14823[LinkedList$Entry.previous]o14070:0 < o14071[LinkedList$Entry.previous]o14070:0 && o14823[LinkedList$Entry.previous]o14067:0 > 0 && o14070[LinkedList$Entry.previous]o14823:0 > o14070[LinkedList$Entry.previous]o14071:0
Filtered constant ground arguments:
   f13727_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13727_0_lastIndexOf_EQ(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13727_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13727_0_lastIndexOf_EQ(x1, x3, x4, x5, x6, x7, x8, x9)
Filtered unneeded arguments:
   f13727_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f13727_0_lastIndexOf_EQ(x1, x2, x5, x6, x7, x8)
Finished conversion. Obtained 2 rules.P rules:
f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-1536704366:0), java.lang.Object(o14827sub-1536704366:0))), o14070[LinkedList$Entry.previous]o14067:0, o14071[LinkedList$Entry.previous]o14070:0, o14071[LinkedList$Entry.previous]o14070:0, o14070[LinkedList$Entry.previous]o14067:0, o140681221089751:0) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(o14827sub0:0), o14824[LinkedList$Entry.previous]o14067:0, o14827[LinkedList$Entry.previous]o14824:0, 1, o14827[LinkedList$Entry.previous]o14067:0, o140681221089751:0) :|: o14827[LinkedList$Entry.previous]o14067:0 < o14070[LinkedList$Entry.previous]o14067:0 && o14070[LinkedList$Entry.previous]o14067:0 > -1 && o14827[LinkedList$Entry.previous]o14824:0 < o14071[LinkedList$Entry.previous]o14070:0 && o14071[LinkedList$Entry.previous]o14070:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0 > 0
f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(o14070sub1221089751:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15017sub-1536704490:0), java.lang.Object(o14823sub-1536704490:0))), o14070[LinkedList$Entry.previous]o14067:0, o14071[LinkedList$Entry.previous]o14070:0, o14070[LinkedList$Entry.previous]o14071:0, o14071[LinkedList$Entry.previous]o14067:0, o140681221089751:0) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(o14070sub1221089751:0)))))))), java.lang.Object(o14823sub0:0), o14070[LinkedList$Entry.previous]o14067:0, o14823[LinkedList$Entry.previous]o14070:0, o14070[LinkedList$Entry.previous]o14823:0, o14823[LinkedList$Entry.previous]o14067:0, o140681221089751:0) :|: o14071[LinkedList$Entry.previous]o14070:0 > 0 && o14070[LinkedList$Entry.previous]o14071:0 > 0 && o14071[LinkedList$Entry.previous]o14067:0 > -1 && o14823[LinkedList$Entry.previous]o14067:0 < o14071[LinkedList$Entry.previous]o14067:0 && o14823[LinkedList$Entry.previous]o14070:0 < o14071[LinkedList$Entry.previous]o14070:0 && o14070[LinkedList$Entry.previous]o14823:0 > o14070[LinkedList$Entry.previous]o14071:0 && o14823[LinkedList$Entry.previous]o14067:0 > 0

----------------------------------------

(50)
Obligation:
Rules:
f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-1536704366:0), java.lang.Object(o14827sub-1536704366:0))), o14070[LinkedList$Entry.previous]o14067:0, o14071[LinkedList$Entry.previous]o14070:0, o14071[LinkedList$Entry.previous]o14070:0, o14070[LinkedList$Entry.previous]o14067:0, o140681221089751:0) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(o14827sub0:0), o14824[LinkedList$Entry.previous]o14067:0, o14827[LinkedList$Entry.previous]o14824:0, 1, o14827[LinkedList$Entry.previous]o14067:0, o140681221089751:0) :|: o14827[LinkedList$Entry.previous]o14067:0 < o14070[LinkedList$Entry.previous]o14067:0 && o14070[LinkedList$Entry.previous]o14067:0 > -1 && o14827[LinkedList$Entry.previous]o14824:0 < o14071[LinkedList$Entry.previous]o14070:0 && o14071[LinkedList$Entry.previous]o14070:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0 > 0
f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x9 < x5 && x10 > x6 && x11 > 0

----------------------------------------

(51) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(52)
Obligation:
Rules:
f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-1536704366:0), java.lang.Object(o14827sub-1536704366:0))), o14070[LinkedList$Entry.previous]o14067:0, o14071[LinkedList$Entry.previous]o14070:0, o14071[LinkedList$Entry.previous]o14070:0, o14070[LinkedList$Entry.previous]o14067:0, o140681221089751:0) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(o14827sub0:0), o14824[LinkedList$Entry.previous]o14067:0, o14827[LinkedList$Entry.previous]o14824:0, 1, o14827[LinkedList$Entry.previous]o14067:0, o140681221089751:0) :|: o14827[LinkedList$Entry.previous]o14067:0 < o14070[LinkedList$Entry.previous]o14067:0 && o14070[LinkedList$Entry.previous]o14067:0 > -1 && o14827[LinkedList$Entry.previous]o14824:0 < o14071[LinkedList$Entry.previous]o14070:0 && o14071[LinkedList$Entry.previous]o14070:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0 > 0
f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x9 < x5 && x10 > x6 && x11 > 0

----------------------------------------

(53) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-1536704366:0), java.lang.Object(o14827sub-1536704366:0))), o14070[LinkedList$Entry.previous]o14067:0, o14071[LinkedList$Entry.previous]o14070:0, o14071[LinkedList$Entry.previous]o14070:0, o14070[LinkedList$Entry.previous]o14067:0, o140681221089751:0) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(o14827sub0:0), o14824[LinkedList$Entry.previous]o14067:0, o14827[LinkedList$Entry.previous]o14824:0, 1, o14827[LinkedList$Entry.previous]o14067:0, o140681221089751:0) :|: o14827[LinkedList$Entry.previous]o14067:0 < o14070[LinkedList$Entry.previous]o14067:0 && o14070[LinkedList$Entry.previous]o14067:0 > -1 && o14827[LinkedList$Entry.previous]o14824:0 < o14071[LinkedList$Entry.previous]o14070:0 && o14071[LinkedList$Entry.previous]o14070:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0 > 0
(2) f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x9 < x5 && x10 > x6 && x11 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(54)
Obligation:

Termination digraph:
Nodes:
(1) f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-1536704366:0), java.lang.Object(o14827sub-1536704366:0))), o14070[LinkedList$Entry.previous]o14067:0, o14071[LinkedList$Entry.previous]o14070:0, o14071[LinkedList$Entry.previous]o14070:0, o14070[LinkedList$Entry.previous]o14067:0, o140681221089751:0) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0), java.lang.Object(o14827sub-315614615:0)))))))))), java.lang.Object(o14827sub0:0), o14824[LinkedList$Entry.previous]o14067:0, o14827[LinkedList$Entry.previous]o14824:0, 1, o14827[LinkedList$Entry.previous]o14067:0, o140681221089751:0) :|: o14827[LinkedList$Entry.previous]o14067:0 < o14070[LinkedList$Entry.previous]o14067:0 && o14070[LinkedList$Entry.previous]o14067:0 > -1 && o14827[LinkedList$Entry.previous]o14824:0 < o14071[LinkedList$Entry.previous]o14070:0 && o14071[LinkedList$Entry.previous]o14070:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0 > 0
(2) f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x4, x9, x10, x11, x) :|: x5 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x9 < x5 && x10 > x6 && x11 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(55) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(56)
Obligation:
Rules:
f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2:0), java.lang.Object(x3:0))), x4:0, x5:0, x6:0, x7:0, x:0) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x8:0), x4:0, x9:0, x10:0, x11:0, x:0) :|: x6:0 < x10:0 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x5:0 > 0
f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0:0), java.lang.Object(o14827sub-315614615:0:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-1536704366:0:0), java.lang.Object(o14827sub-1536704366:0:0))), o14070[LinkedList$Entry.previous]o14067:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14070[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) -> f13727_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o140681221089751:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o15018sub-315614615:0:0), java.lang.Object(o14827sub-315614615:0:0)))))))))), java.lang.Object(o14827sub0:0:0), o14824[LinkedList$Entry.previous]o14067:0:0, o14827[LinkedList$Entry.previous]o14824:0:0, 1, o14827[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) :|: o14071[LinkedList$Entry.previous]o14070:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 > 0 && o14827[LinkedList$Entry.previous]o14824:0:0 < o14071[LinkedList$Entry.previous]o14070:0:0 && o14070[LinkedList$Entry.previous]o14067:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 < o14070[LinkedList$Entry.previous]o14067:0:0

----------------------------------------

(57) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13727_0_lastIndexOf_EQ(VARIABLE, VARIABLE, VARIABLE, INTEGER, VARIABLE, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(58)
Obligation:
Rules:
f13727_0_lastIndexOf_EQ(c, c1, x4:0, x5:0, x6:0, x7:0, x:0) -> f13727_0_lastIndexOf_EQ(c2, c3, x4:0, x9:0, x10:0, x11:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x6:0 < x10:0 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x5:0 > 0)
f13727_0_lastIndexOf_EQ(c4, c5, o14070[LinkedList$Entry.previous]o14067:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14070[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) -> f13727_0_lastIndexOf_EQ(c6, c7, o14824[LinkedList$Entry.previous]o14067:0:0, o14827[LinkedList$Entry.previous]o14824:0:0, c8, o14827[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (o14071[LinkedList$Entry.previous]o14070:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 > 0 && o14827[LinkedList$Entry.previous]o14824:0:0 < o14071[LinkedList$Entry.previous]o14070:0:0 && o14070[LinkedList$Entry.previous]o14067:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 < o14070[LinkedList$Entry.previous]o14067:0:0)

----------------------------------------

(59) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13727_0_lastIndexOf_EQ(x, x1, x2, x3, x4, x5, x6)] = -1 + c*x + c1*x1 + x3

The following rules are decreasing:
f13727_0_lastIndexOf_EQ(c, c1, x4:0, x5:0, x6:0, x7:0, x:0) -> f13727_0_lastIndexOf_EQ(c2, c3, x4:0, x9:0, x10:0, x11:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x6:0 < x10:0 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x5:0 > 0)
f13727_0_lastIndexOf_EQ(c4, c5, o14070[LinkedList$Entry.previous]o14067:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14070[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) -> f13727_0_lastIndexOf_EQ(c6, c7, o14824[LinkedList$Entry.previous]o14067:0:0, o14827[LinkedList$Entry.previous]o14824:0:0, c8, o14827[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (o14071[LinkedList$Entry.previous]o14070:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 > 0 && o14827[LinkedList$Entry.previous]o14824:0:0 < o14071[LinkedList$Entry.previous]o14070:0:0 && o14070[LinkedList$Entry.previous]o14067:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 < o14070[LinkedList$Entry.previous]o14067:0:0)
The following rules are bounded:
f13727_0_lastIndexOf_EQ(c, c1, x4:0, x5:0, x6:0, x7:0, x:0) -> f13727_0_lastIndexOf_EQ(c2, c3, x4:0, x9:0, x10:0, x11:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x6:0 < x10:0 && x11:0 > 0 && x9:0 < x5:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x5:0 > 0)

----------------------------------------

(60)
Obligation:
Rules:
f13727_0_lastIndexOf_EQ(c4, c5, o14070[LinkedList$Entry.previous]o14067:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14070[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) -> f13727_0_lastIndexOf_EQ(c6, c7, o14824[LinkedList$Entry.previous]o14067:0:0, o14827[LinkedList$Entry.previous]o14824:0:0, c8, o14827[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (o14071[LinkedList$Entry.previous]o14070:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 > 0 && o14827[LinkedList$Entry.previous]o14824:0:0 < o14071[LinkedList$Entry.previous]o14070:0:0 && o14070[LinkedList$Entry.previous]o14067:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 < o14070[LinkedList$Entry.previous]o14067:0:0)

----------------------------------------

(61) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13727_0_lastIndexOf_EQ(x, x1, x2, x3, x4, x5, x6)] = c*x + c1*x1 + x5

The following rules are decreasing:
f13727_0_lastIndexOf_EQ(c4, c5, o14070[LinkedList$Entry.previous]o14067:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14070[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) -> f13727_0_lastIndexOf_EQ(c6, c7, o14824[LinkedList$Entry.previous]o14067:0:0, o14827[LinkedList$Entry.previous]o14824:0:0, c8, o14827[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (o14071[LinkedList$Entry.previous]o14070:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 > 0 && o14827[LinkedList$Entry.previous]o14824:0:0 < o14071[LinkedList$Entry.previous]o14070:0:0 && o14070[LinkedList$Entry.previous]o14067:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 < o14070[LinkedList$Entry.previous]o14067:0:0)
The following rules are bounded:
f13727_0_lastIndexOf_EQ(c4, c5, o14070[LinkedList$Entry.previous]o14067:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14071[LinkedList$Entry.previous]o14070:0:0, o14070[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) -> f13727_0_lastIndexOf_EQ(c6, c7, o14824[LinkedList$Entry.previous]o14067:0:0, o14827[LinkedList$Entry.previous]o14824:0:0, c8, o14827[LinkedList$Entry.previous]o14067:0:0, o140681221089751:0:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (o14071[LinkedList$Entry.previous]o14070:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 > 0 && o14827[LinkedList$Entry.previous]o14824:0:0 < o14071[LinkedList$Entry.previous]o14070:0:0 && o14070[LinkedList$Entry.previous]o14067:0:0 > -1 && o14827[LinkedList$Entry.previous]o14067:0:0 < o14070[LinkedList$Entry.previous]o14067:0:0)

----------------------------------------

(62)
YES

----------------------------------------

(63)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateLastIndexOf.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, previous]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(64) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 27 IRulesP rules:
f13563_0_lastIndexOf_EQ(EOS(STATIC_13563), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), java.lang.Object(o12754sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12752-1538578409, java.lang.Object(o12753sub-1538578409))), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753, o12754[LinkedList$Entry.previous]o12751) -> f13572_0_lastIndexOf_Inc(EOS(STATIC_13572), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753, o12754[LinkedList$Entry.previous]o12751) :|: TRUE
f13572_0_lastIndexOf_Inc(EOS(STATIC_13572), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753, o12754[LinkedList$Entry.previous]o12751) -> f13580_0_lastIndexOf_Load(EOS(STATIC_13580), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753, o12754[LinkedList$Entry.previous]o12751) :|: TRUE
f13580_0_lastIndexOf_Load(EOS(STATIC_13580), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753, o12754[LinkedList$Entry.previous]o12751) -> f13587_0_lastIndexOf_FieldAccess(EOS(STATIC_13587), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), java.lang.Object(o12754sub0), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753, o12754[LinkedList$Entry.previous]o12751) :|: TRUE
f13587_0_lastIndexOf_FieldAccess(EOS(STATIC_13587), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), java.lang.Object(o12754sub0), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753, o12754[LinkedList$Entry.previous]o12751) -> f13594_0_lastIndexOf_FieldAccess(EOS(STATIC_13594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), java.lang.Object(o12754sub0), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753) :|: o12753[LinkedList$Entry.previous]o12754 > 0 && o12754[LinkedList$Entry.previous]o12753 > 0
f13587_0_lastIndexOf_FieldAccess(EOS(STATIC_13587), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o13231sub1217810447)))))))), java.lang.Object(o13231sub0), java.lang.Object(o13231sub0), o13231[LinkedList$Entry.previous]o13231, o13231[LinkedList$Entry.previous]o12751, o13231[LinkedList$Entry.previous]o13231, o13231[LinkedList$Entry.previous]o12751) -> f13595_0_lastIndexOf_FieldAccess(EOS(STATIC_13595), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o13231sub1217810447)))))))), java.lang.Object(o13231sub0), java.lang.Object(o13231sub0), o13231[LinkedList$Entry.previous]o12751, o13231[LinkedList$Entry.previous]o13231) :|: TRUE
f13594_0_lastIndexOf_FieldAccess(EOS(STATIC_13594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13369-1537772874, java.lang.Object(o13371sub-1537772874))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13369-1537772874, java.lang.Object(o13371sub-1537772874))), o12753[LinkedList$Entry.previous]o13368, o12753[LinkedList$Entry.previous]o12751, o13368[LinkedList$Entry.previous]o12751, o13368[LinkedList$Entry.previous]o12753) -> f13607_0_lastIndexOf_FieldAccess(EOS(STATIC_13607), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13369-1537772874, java.lang.Object(o13371sub-1537772874))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13369-1537772874, java.lang.Object(o13371sub-1537772874))), o12753[LinkedList$Entry.previous]o12751, o12753[LinkedList$Entry.previous]o13368, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753) :|: o13371[LinkedList$Entry.previous]o12751 < o13368[LinkedList$Entry.previous]o12751 && o13368[LinkedList$Entry.previous]o12751 >= 0 && o13371[LinkedList$Entry.previous]o12753 < o13368[LinkedList$Entry.previous]o12753 && o13368[LinkedList$Entry.previous]o12753 >= 0
f13607_0_lastIndexOf_FieldAccess(EOS(STATIC_13607), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13369-1537772874, java.lang.Object(o13371sub-1537772874))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13369-1537772874, java.lang.Object(o13371sub-1537772874))), o12753[LinkedList$Entry.previous]o12751, o12753[LinkedList$Entry.previous]o13368, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753) -> f13622_0_lastIndexOf_NONNULL(EOS(STATIC_13622), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13369-1537772874, java.lang.Object(o13371sub-1537772874))), o133690, o12753[LinkedList$Entry.previous]o12751, o12753[LinkedList$Entry.previous]o13368, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753) :|: TRUE
f13622_0_lastIndexOf_NONNULL(EOS(STATIC_13622), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13596sub-1537772874), java.lang.Object(o13371sub-1537772874))), java.lang.Object(o13596sub0), o12753[LinkedList$Entry.previous]o12751, o12753[LinkedList$Entry.previous]o13368, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753) -> f13633_0_lastIndexOf_NONNULL(EOS(STATIC_13633), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13596sub-1537772874), java.lang.Object(o13371sub-1537772874))), java.lang.Object(o13596sub0), o12753[LinkedList$Entry.previous]o12751, o12753[LinkedList$Entry.previous]o13368, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753) :|: TRUE
f13633_0_lastIndexOf_NONNULL(EOS(STATIC_13633), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13596sub-1537772874), java.lang.Object(o13371sub-1537772874))), java.lang.Object(o13596sub0), o12753[LinkedList$Entry.previous]o12751, o12753[LinkedList$Entry.previous]o13368, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753) -> f13646_0_lastIndexOf_Load(EOS(STATIC_13646), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13596sub-1537772874), java.lang.Object(o13371sub-1537772874))), o12753[LinkedList$Entry.previous]o12751, o12753[LinkedList$Entry.previous]o13368, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753) :|: TRUE
f13646_0_lastIndexOf_Load(EOS(STATIC_13646), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13596sub-1537772874), java.lang.Object(o13371sub-1537772874))), o12753[LinkedList$Entry.previous]o12751, o12753[LinkedList$Entry.previous]o13368, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753) -> f13657_0_lastIndexOf_FieldAccess(EOS(STATIC_13657), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13596sub-1537772874), java.lang.Object(o13371sub-1537772874))), o12753[LinkedList$Entry.previous]o12751, o12753[LinkedList$Entry.previous]o13368, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753) :|: TRUE
f13657_0_lastIndexOf_FieldAccess(EOS(STATIC_13657), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13596sub-1537772874), java.lang.Object(o13371sub-1537772874))), o12753[LinkedList$Entry.previous]o12751, o12753[LinkedList$Entry.previous]o13368, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753) -> f13668_0_lastIndexOf_Store(EOS(STATIC_13668), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o13371sub0), o12753[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753, o12753[LinkedList$Entry.previous]o13371) :|: o12753[LinkedList$Entry.previous]o13371 > o12753[LinkedList$Entry.previous]o13368 && o12753[LinkedList$Entry.previous]o13368 >= 0
f13668_0_lastIndexOf_Store(EOS(STATIC_13668), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o13371sub0), o12753[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753, o12753[LinkedList$Entry.previous]o13371) -> f13679_0_lastIndexOf_JMP(EOS(STATIC_13679), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o13371sub0), o12753[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753, o12753[LinkedList$Entry.previous]o13371) :|: TRUE
f13679_0_lastIndexOf_JMP(EOS(STATIC_13679), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o13371sub0), o12753[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753, o12753[LinkedList$Entry.previous]o13371) -> f13692_0_lastIndexOf_Load(EOS(STATIC_13692), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o13371sub0), o12753[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753, o12753[LinkedList$Entry.previous]o13371) :|: TRUE
f13692_0_lastIndexOf_Load(EOS(STATIC_13692), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o13371sub0), o12753[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753, o12753[LinkedList$Entry.previous]o13371) -> f13512_0_lastIndexOf_Load(EOS(STATIC_13512), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o13371sub0), o12753[LinkedList$Entry.previous]o13371, o12753[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12751, o13371[LinkedList$Entry.previous]o12753) :|: TRUE
f13512_0_lastIndexOf_Load(EOS(STATIC_13512), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753) -> f13525_0_lastIndexOf_Load(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), java.lang.Object(o12754sub0), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753) :|: TRUE
f13525_0_lastIndexOf_Load(EOS(STATIC_13525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), java.lang.Object(o12754sub0), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753) -> f13539_0_lastIndexOf_FieldAccess(EOS(STATIC_13539), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), java.lang.Object(o12754sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753) :|: TRUE
f13539_0_lastIndexOf_FieldAccess(EOS(STATIC_13539), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), java.lang.Object(o12754sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753) -> f13553_0_lastIndexOf_EQ(EOS(STATIC_13553), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), java.lang.Object(o12754sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12752-1538578409, java.lang.Object(o12753sub-1538578409))), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753) :|: TRUE
f13553_0_lastIndexOf_EQ(EOS(STATIC_13553), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), java.lang.Object(o12754sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12752-1538578409, java.lang.Object(o12753sub-1538578409))), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753) -> f13563_0_lastIndexOf_EQ(EOS(STATIC_13563), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(o12753sub1217810447)))))))), java.lang.Object(o12754sub0), java.lang.Object(o12754sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12752-1538578409, java.lang.Object(o12753sub-1538578409))), o12753[LinkedList$Entry.previous]o12754, o12753[LinkedList$Entry.previous]o12751, o12754[LinkedList$Entry.previous]o12753, o12754[LinkedList$Entry.previous]o12751) :|: o12754[LinkedList$Entry.previous]o12751 > 0
f13595_0_lastIndexOf_FieldAccess(EOS(STATIC_13595), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13373-319961652, java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13373-1537772099, java.lang.Object(o13375sub-1537772099))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13373-1537772099, java.lang.Object(o13375sub-1537772099))), o13372[LinkedList$Entry.previous]o12751, o13372[LinkedList$Entry.previous]o13372) -> f13608_0_lastIndexOf_FieldAccess(EOS(STATIC_13608), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13373-319961652, java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13373-1537772099, java.lang.Object(o13375sub-1537772099))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13373-1537772099, java.lang.Object(o13375sub-1537772099))), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) :|: o13375[LinkedList$Entry.previous]o12751 < o13372[LinkedList$Entry.previous]o12751 && o13372[LinkedList$Entry.previous]o12751 >= 0 && o13375[LinkedList$Entry.previous]o13372 < o13372[LinkedList$Entry.previous]o13372 && o13372[LinkedList$Entry.previous]o13372 >= 0
f13608_0_lastIndexOf_FieldAccess(EOS(STATIC_13608), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13373-319961652, java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13373-1537772099, java.lang.Object(o13375sub-1537772099))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13373-1537772099, java.lang.Object(o13375sub-1537772099))), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) -> f13623_0_lastIndexOf_NONNULL(EOS(STATIC_13623), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13373-319961652, java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13373-1537772099, java.lang.Object(o13375sub-1537772099))), o133730, o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) :|: TRUE
f13623_0_lastIndexOf_NONNULL(EOS(STATIC_13623), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-1537772099), java.lang.Object(o13375sub-1537772099))), java.lang.Object(o13597sub0), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) -> f13635_0_lastIndexOf_NONNULL(EOS(STATIC_13635), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-1537772099), java.lang.Object(o13375sub-1537772099))), java.lang.Object(o13597sub0), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) :|: TRUE
f13635_0_lastIndexOf_NONNULL(EOS(STATIC_13635), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-1537772099), java.lang.Object(o13375sub-1537772099))), java.lang.Object(o13597sub0), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) -> f13648_0_lastIndexOf_Load(EOS(STATIC_13648), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-1537772099), java.lang.Object(o13375sub-1537772099))), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) :|: TRUE
f13648_0_lastIndexOf_Load(EOS(STATIC_13648), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-1537772099), java.lang.Object(o13375sub-1537772099))), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) -> f13659_0_lastIndexOf_FieldAccess(EOS(STATIC_13659), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-1537772099), java.lang.Object(o13375sub-1537772099))), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) :|: TRUE
f13659_0_lastIndexOf_FieldAccess(EOS(STATIC_13659), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-1537772099), java.lang.Object(o13375sub-1537772099))), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) -> f13670_0_lastIndexOf_Store(EOS(STATIC_13670), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(o13375sub0), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) :|: TRUE
f13670_0_lastIndexOf_Store(EOS(STATIC_13670), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(o13375sub0), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) -> f13681_0_lastIndexOf_JMP(EOS(STATIC_13681), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(o13375sub0), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) :|: TRUE
f13681_0_lastIndexOf_JMP(EOS(STATIC_13681), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(o13375sub0), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) -> f13694_0_lastIndexOf_Load(EOS(STATIC_13694), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(o13375sub0), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) :|: TRUE
f13694_0_lastIndexOf_Load(EOS(STATIC_13694), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(o13375sub0), o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) -> f13512_0_lastIndexOf_Load(EOS(STATIC_13512), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652), java.lang.Object(o13375sub-319961652)))))))))), java.lang.Object(o13375sub0), o13372[LinkedList$Entry.previous]o13375, o13372[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o12751, o13375[LinkedList$Entry.previous]o13372) :|: o13372[LinkedList$Entry.previous]o13375 = 1
Combined rules. Obtained 2 IRulesP rules:
f13563_0_lastIndexOf_EQ(EOS(STATIC_13563), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13596sub-1537772874:0), java.lang.Object(o13371sub-1537772874:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13596sub-1537772874:0), java.lang.Object(o13371sub-1537772874:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12752-1538578409:0, java.lang.Object(o12753sub-1538578409:0))), o12753[LinkedList$Entry.previous]o12754:0, o12753[LinkedList$Entry.previous]o12751:0, o12754[LinkedList$Entry.previous]o12753:0, o12754[LinkedList$Entry.previous]o12751:0) -> f13563_0_lastIndexOf_EQ(EOS(STATIC_13563), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(o13371sub0:0), java.lang.Object(o13371sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12752-1538578409:1, java.lang.Object(o12753sub-1538578409:1))), o12753[LinkedList$Entry.previous]o13371:0, o12753[LinkedList$Entry.previous]o12751:0, o13371[LinkedList$Entry.previous]o12753:0, o13371[LinkedList$Entry.previous]o12751:0) :|: o12754[LinkedList$Entry.previous]o12753:0 > 0 && o12753[LinkedList$Entry.previous]o12754:0 > 0 && o12754[LinkedList$Entry.previous]o12751:0 > -1 && o13371[LinkedList$Entry.previous]o12751:0 < o12754[LinkedList$Entry.previous]o12751:0 && o13371[LinkedList$Entry.previous]o12753:0 < o12754[LinkedList$Entry.previous]o12753:0 && o13371[LinkedList$Entry.previous]o12751:0 > 0 && o12753[LinkedList$Entry.previous]o13371:0 > o12753[LinkedList$Entry.previous]o12754:0
f13563_0_lastIndexOf_EQ(EOS(STATIC_13563), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652:0), java.lang.Object(o13375sub-319961652:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-1537772099:0), java.lang.Object(o13375sub-1537772099:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-1537772099:0), java.lang.Object(o13375sub-1537772099:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12752-1538578409:0, java.lang.Object(o12753sub-1538578409:0))), o12753[LinkedList$Entry.previous]o12754:0, o12753[LinkedList$Entry.previous]o12751:0, o12753[LinkedList$Entry.previous]o12754:0, o12753[LinkedList$Entry.previous]o12751:0) -> f13563_0_lastIndexOf_EQ(EOS(STATIC_13563), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o127521217810447:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13597sub-319961652:0), java.lang.Object(o13375sub-319961652:0)))))))))), java.lang.Object(o13375sub0:0), java.lang.Object(o13375sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12752-1538578409:1, java.lang.Object(o12753sub-1538578409:1))), 1, o13372[LinkedList$Entry.previous]o12751:0, o13375[LinkedList$Entry.previous]o13372:0, o13375[LinkedList$Entry.previous]o12751:0) :|: o12753[LinkedList$Entry.previous]o12751:0 > -1 && o13375[LinkedList$Entry.previous]o12751:0 < o12753[LinkedList$Entry.previous]o12751:0 && o13375[LinkedList$Entry.previous]o13372:0 < o12753[LinkedList$Entry.previous]o12754:0 && o13375[LinkedList$Entry.previous]o12751:0 > 0 && o12753[LinkedList$Entry.previous]o12754:0 > -1
Filtered constant ground arguments:
   f13563_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13563_0_lastIndexOf_EQ(x2, x3, x4, x5, x6, x7, x8, x9)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13563_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f13563_0_lastIndexOf_EQ(x1, x3, x4, x5, x6, x7, x8)
Filtered unneeded arguments:
   f13563_0_lastIndexOf_EQ(x1, x2, x3, x4, x5, x6, x7) -> f13563_0_lastIndexOf_EQ(x1, x2, x4, x5, x6, x7)
Finished conversion. Obtained 2 rules.P rules:
f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13596sub-1537772874:0), java.lang.Object(o13371sub-1537772874:0))), o12753[LinkedList$Entry.previous]o12754:0, o12753[LinkedList$Entry.previous]o12751:0, o12754[LinkedList$Entry.previous]o12753:0, o12754[LinkedList$Entry.previous]o12751:0, o127521217810447:0) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(o13371sub0:0), o12753[LinkedList$Entry.previous]o13371:0, o12753[LinkedList$Entry.previous]o12751:0, o13371[LinkedList$Entry.previous]o12753:0, o13371[LinkedList$Entry.previous]o12751:0, o127521217810447:0) :|: o12753[LinkedList$Entry.previous]o12754:0 > 0 && o12754[LinkedList$Entry.previous]o12753:0 > 0 && o12754[LinkedList$Entry.previous]o12751:0 > -1 && o13371[LinkedList$Entry.previous]o12751:0 < o12754[LinkedList$Entry.previous]o12751:0 && o13371[LinkedList$Entry.previous]o12753:0 < o12754[LinkedList$Entry.previous]o12753:0 && o12753[LinkedList$Entry.previous]o13371:0 > o12753[LinkedList$Entry.previous]o12754:0 && o13371[LinkedList$Entry.previous]o12751:0 > 0
f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13597sub-319961652:0), java.lang.Object(o13375sub-319961652:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13597sub-1537772099:0), java.lang.Object(o13375sub-1537772099:0))), o12753[LinkedList$Entry.previous]o12754:0, o12753[LinkedList$Entry.previous]o12751:0, o12753[LinkedList$Entry.previous]o12754:0, o12753[LinkedList$Entry.previous]o12751:0, o127521217810447:0) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13597sub-319961652:0), java.lang.Object(o13375sub-319961652:0)))))))))), java.lang.Object(o13375sub0:0), 1, o13372[LinkedList$Entry.previous]o12751:0, o13375[LinkedList$Entry.previous]o13372:0, o13375[LinkedList$Entry.previous]o12751:0, o127521217810447:0) :|: o13375[LinkedList$Entry.previous]o12751:0 < o12753[LinkedList$Entry.previous]o12751:0 && o12753[LinkedList$Entry.previous]o12751:0 > -1 && o13375[LinkedList$Entry.previous]o13372:0 < o12753[LinkedList$Entry.previous]o12754:0 && o12753[LinkedList$Entry.previous]o12754:0 > -1 && o13375[LinkedList$Entry.previous]o12751:0 > 0

----------------------------------------

(65)
Obligation:
Rules:
f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13596sub-1537772874:0), java.lang.Object(o13371sub-1537772874:0))), o12753[LinkedList$Entry.previous]o12754:0, o12753[LinkedList$Entry.previous]o12751:0, o12754[LinkedList$Entry.previous]o12753:0, o12754[LinkedList$Entry.previous]o12751:0, o127521217810447:0) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(o13371sub0:0), o12753[LinkedList$Entry.previous]o13371:0, o12753[LinkedList$Entry.previous]o12751:0, o13371[LinkedList$Entry.previous]o12753:0, o13371[LinkedList$Entry.previous]o12751:0, o127521217810447:0) :|: o12753[LinkedList$Entry.previous]o12754:0 > 0 && o12754[LinkedList$Entry.previous]o12753:0 > 0 && o12754[LinkedList$Entry.previous]o12751:0 > -1 && o13371[LinkedList$Entry.previous]o12751:0 < o12754[LinkedList$Entry.previous]o12751:0 && o13371[LinkedList$Entry.previous]o12753:0 < o12754[LinkedList$Entry.previous]o12753:0 && o12753[LinkedList$Entry.previous]o13371:0 > o12753[LinkedList$Entry.previous]o12754:0 && o13371[LinkedList$Entry.previous]o12751:0 > 0
f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x5, x6, x) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), 1, x8, x9, x10, x) :|: x10 < x6 && x6 > -1 && x9 < x5 && x5 > -1 && x10 > 0

----------------------------------------

(66) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(67)
Obligation:
Rules:
f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13596sub-1537772874:0), java.lang.Object(o13371sub-1537772874:0))), o12753[LinkedList$Entry.previous]o12754:0, o12753[LinkedList$Entry.previous]o12751:0, o12754[LinkedList$Entry.previous]o12753:0, o12754[LinkedList$Entry.previous]o12751:0, o127521217810447:0) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(o13371sub0:0), o12753[LinkedList$Entry.previous]o13371:0, o12753[LinkedList$Entry.previous]o12751:0, o13371[LinkedList$Entry.previous]o12753:0, o13371[LinkedList$Entry.previous]o12751:0, o127521217810447:0) :|: o12753[LinkedList$Entry.previous]o12754:0 > 0 && o12754[LinkedList$Entry.previous]o12753:0 > 0 && o12754[LinkedList$Entry.previous]o12751:0 > -1 && o13371[LinkedList$Entry.previous]o12751:0 < o12754[LinkedList$Entry.previous]o12751:0 && o13371[LinkedList$Entry.previous]o12753:0 < o12754[LinkedList$Entry.previous]o12753:0 && o12753[LinkedList$Entry.previous]o13371:0 > o12753[LinkedList$Entry.previous]o12754:0 && o13371[LinkedList$Entry.previous]o12751:0 > 0
f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x5, x6, x) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), 1, x8, x9, x10, x) :|: x10 < x6 && x6 > -1 && x9 < x5 && x5 > -1 && x10 > 0

----------------------------------------

(68) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13596sub-1537772874:0), java.lang.Object(o13371sub-1537772874:0))), o12753[LinkedList$Entry.previous]o12754:0, o12753[LinkedList$Entry.previous]o12751:0, o12754[LinkedList$Entry.previous]o12753:0, o12754[LinkedList$Entry.previous]o12751:0, o127521217810447:0) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(o13371sub0:0), o12753[LinkedList$Entry.previous]o13371:0, o12753[LinkedList$Entry.previous]o12751:0, o13371[LinkedList$Entry.previous]o12753:0, o13371[LinkedList$Entry.previous]o12751:0, o127521217810447:0) :|: o12753[LinkedList$Entry.previous]o12754:0 > 0 && o12754[LinkedList$Entry.previous]o12753:0 > 0 && o12754[LinkedList$Entry.previous]o12751:0 > -1 && o13371[LinkedList$Entry.previous]o12751:0 < o12754[LinkedList$Entry.previous]o12751:0 && o13371[LinkedList$Entry.previous]o12753:0 < o12754[LinkedList$Entry.previous]o12753:0 && o12753[LinkedList$Entry.previous]o13371:0 > o12753[LinkedList$Entry.previous]o12754:0 && o13371[LinkedList$Entry.previous]o12751:0 > 0
(2) f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x5, x6, x) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), 1, x8, x9, x10, x) :|: x10 < x6 && x6 > -1 && x9 < x5 && x5 > -1 && x10 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(69)
Obligation:

Termination digraph:
Nodes:
(1) f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13596sub-1537772874:0), java.lang.Object(o13371sub-1537772874:0))), o12753[LinkedList$Entry.previous]o12754:0, o12753[LinkedList$Entry.previous]o12751:0, o12754[LinkedList$Entry.previous]o12753:0, o12754[LinkedList$Entry.previous]o12751:0, o127521217810447:0) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0, java.lang.Object(o12753sub1217810447:0)))))))), java.lang.Object(o13371sub0:0), o12753[LinkedList$Entry.previous]o13371:0, o12753[LinkedList$Entry.previous]o12751:0, o13371[LinkedList$Entry.previous]o12753:0, o13371[LinkedList$Entry.previous]o12751:0, o127521217810447:0) :|: o12753[LinkedList$Entry.previous]o12754:0 > 0 && o12754[LinkedList$Entry.previous]o12753:0 > 0 && o12754[LinkedList$Entry.previous]o12751:0 > -1 && o13371[LinkedList$Entry.previous]o12751:0 < o12754[LinkedList$Entry.previous]o12751:0 && o13371[LinkedList$Entry.previous]o12753:0 < o12754[LinkedList$Entry.previous]o12753:0 && o12753[LinkedList$Entry.previous]o13371:0 > o12753[LinkedList$Entry.previous]o12754:0 && o13371[LinkedList$Entry.previous]o12751:0 > 0
(2) f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x5, x6, x) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), 1, x8, x9, x10, x) :|: x10 < x6 && x6 > -1 && x9 < x5 && x5 > -1 && x10 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(70) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(71)
Obligation:
Rules:
f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0:0, java.lang.Object(o12753sub1217810447:0:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13596sub-1537772874:0:0), java.lang.Object(o13371sub-1537772874:0:0))), o12753[LinkedList$Entry.previous]o12754:0:0, o12753[LinkedList$Entry.previous]o12751:0:0, o12754[LinkedList$Entry.previous]o12753:0:0, o12754[LinkedList$Entry.previous]o12751:0:0, o127521217810447:0:0) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o127521217810447:0:0, java.lang.Object(o12753sub1217810447:0:0)))))))), java.lang.Object(o13371sub0:0:0), o12753[LinkedList$Entry.previous]o13371:0:0, o12753[LinkedList$Entry.previous]o12751:0:0, o13371[LinkedList$Entry.previous]o12753:0:0, o13371[LinkedList$Entry.previous]o12751:0:0, o127521217810447:0:0) :|: o12753[LinkedList$Entry.previous]o13371:0:0 > o12753[LinkedList$Entry.previous]o12754:0:0 && o13371[LinkedList$Entry.previous]o12751:0:0 > 0 && o13371[LinkedList$Entry.previous]o12753:0:0 < o12754[LinkedList$Entry.previous]o12753:0:0 && o13371[LinkedList$Entry.previous]o12751:0:0 < o12754[LinkedList$Entry.previous]o12751:0:0 && o12754[LinkedList$Entry.previous]o12751:0:0 > -1 && o12754[LinkedList$Entry.previous]o12753:0:0 > 0 && o12753[LinkedList$Entry.previous]o12754:0:0 > 0
f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1:0), java.lang.Object(x2:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3:0), java.lang.Object(x4:0))), x5:0, x6:0, x5:0, x6:0, x:0) -> f13563_0_lastIndexOf_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1:0), java.lang.Object(x2:0)))))))))), java.lang.Object(x7:0), 1, x8:0, x9:0, x10:0, x:0) :|: x5:0 > -1 && x10:0 > 0 && x9:0 < x5:0 && x6:0 > -1 && x6:0 > x10:0

----------------------------------------

(72) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13563_0_lastIndexOf_EQ(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(73)
Obligation:
Rules:
f13563_0_lastIndexOf_EQ(c, c1, o12753[LinkedList$Entry.previous]o12754:0:0, o12753[LinkedList$Entry.previous]o12751:0:0, o12754[LinkedList$Entry.previous]o12753:0:0, o12754[LinkedList$Entry.previous]o12751:0:0, o127521217810447:0:0) -> f13563_0_lastIndexOf_EQ(c2, c3, o12753[LinkedList$Entry.previous]o13371:0:0, o12753[LinkedList$Entry.previous]o12751:0:0, o13371[LinkedList$Entry.previous]o12753:0:0, o13371[LinkedList$Entry.previous]o12751:0:0, o127521217810447:0:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (o12753[LinkedList$Entry.previous]o13371:0:0 > o12753[LinkedList$Entry.previous]o12754:0:0 && o13371[LinkedList$Entry.previous]o12751:0:0 > 0 && o13371[LinkedList$Entry.previous]o12753:0:0 < o12754[LinkedList$Entry.previous]o12753:0:0 && o13371[LinkedList$Entry.previous]o12751:0:0 < o12754[LinkedList$Entry.previous]o12751:0:0 && o12754[LinkedList$Entry.previous]o12751:0:0 > -1 && o12754[LinkedList$Entry.previous]o12753:0:0 > 0 && o12753[LinkedList$Entry.previous]o12754:0:0 > 0)
f13563_0_lastIndexOf_EQ(c4, c5, x5:0, x6:0, x5:0, x6:0, x:0) -> f13563_0_lastIndexOf_EQ(c6, c7, c8, x8:0, x9:0, x10:0, x:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x5:0 > -1 && x10:0 > 0 && x9:0 < x5:0 && x6:0 > -1 && x6:0 > x10:0)

----------------------------------------

(74) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f13563_0_lastIndexOf_EQ ] = f13563_0_lastIndexOf_EQ_6

The following rules are decreasing:
f13563_0_lastIndexOf_EQ(c, c1, o12753[LinkedList$Entry.previous]o12754:0:0, o12753[LinkedList$Entry.previous]o12751:0:0, o12754[LinkedList$Entry.previous]o12753:0:0, o12754[LinkedList$Entry.previous]o12751:0:0, o127521217810447:0:0) -> f13563_0_lastIndexOf_EQ(c2, c3, o12753[LinkedList$Entry.previous]o13371:0:0, o12753[LinkedList$Entry.previous]o12751:0:0, o13371[LinkedList$Entry.previous]o12753:0:0, o13371[LinkedList$Entry.previous]o12751:0:0, o127521217810447:0:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (o12753[LinkedList$Entry.previous]o13371:0:0 > o12753[LinkedList$Entry.previous]o12754:0:0 && o13371[LinkedList$Entry.previous]o12751:0:0 > 0 && o13371[LinkedList$Entry.previous]o12753:0:0 < o12754[LinkedList$Entry.previous]o12753:0:0 && o13371[LinkedList$Entry.previous]o12751:0:0 < o12754[LinkedList$Entry.previous]o12751:0:0 && o12754[LinkedList$Entry.previous]o12751:0:0 > -1 && o12754[LinkedList$Entry.previous]o12753:0:0 > 0 && o12753[LinkedList$Entry.previous]o12754:0:0 > 0)
f13563_0_lastIndexOf_EQ(c4, c5, x5:0, x6:0, x5:0, x6:0, x:0) -> f13563_0_lastIndexOf_EQ(c6, c7, c8, x8:0, x9:0, x10:0, x:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x5:0 > -1 && x10:0 > 0 && x9:0 < x5:0 && x6:0 > -1 && x6:0 > x10:0)

The following rules are bounded:
f13563_0_lastIndexOf_EQ(c, c1, o12753[LinkedList$Entry.previous]o12754:0:0, o12753[LinkedList$Entry.previous]o12751:0:0, o12754[LinkedList$Entry.previous]o12753:0:0, o12754[LinkedList$Entry.previous]o12751:0:0, o127521217810447:0:0) -> f13563_0_lastIndexOf_EQ(c2, c3, o12753[LinkedList$Entry.previous]o13371:0:0, o12753[LinkedList$Entry.previous]o12751:0:0, o13371[LinkedList$Entry.previous]o12753:0:0, o13371[LinkedList$Entry.previous]o12751:0:0, o127521217810447:0:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (o12753[LinkedList$Entry.previous]o13371:0:0 > o12753[LinkedList$Entry.previous]o12754:0:0 && o13371[LinkedList$Entry.previous]o12751:0:0 > 0 && o13371[LinkedList$Entry.previous]o12753:0:0 < o12754[LinkedList$Entry.previous]o12753:0:0 && o13371[LinkedList$Entry.previous]o12751:0:0 < o12754[LinkedList$Entry.previous]o12751:0:0 && o12754[LinkedList$Entry.previous]o12751:0:0 > -1 && o12754[LinkedList$Entry.previous]o12753:0:0 > 0 && o12753[LinkedList$Entry.previous]o12754:0:0 > 0)
f13563_0_lastIndexOf_EQ(c4, c5, x5:0, x6:0, x5:0, x6:0, x:0) -> f13563_0_lastIndexOf_EQ(c6, c7, c8, x8:0, x9:0, x10:0, x:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x5:0 > -1 && x10:0 > 0 && x9:0 < x5:0 && x6:0 > -1 && x6:0 > x10:0)


----------------------------------------

(75)
YES

----------------------------------------

(76)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateLastIndexOf.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [next]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(77) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 40 IRulesP rules:
f13429_0_entry_GT(EOS(STATIC_13429), i3120, i3956, i3956, i3120, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12314[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314) -> f13438_0_entry_Load(EOS(STATIC_13438), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12314[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314) :|: i3956 <= i3120
f13438_0_entry_Load(EOS(STATIC_13438), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12314[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314) -> f13446_0_entry_FieldAccess(EOS(STATIC_13446), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12314[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314) :|: TRUE
f13446_0_entry_FieldAccess(EOS(STATIC_13446), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12314[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314) -> f13456_0_entry_FieldAccess(EOS(STATIC_13456), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12316) :|: o12316[LinkedList$Entry.next]o12316 > 0 && o12316[LinkedList$Entry.previous]o12316 > 0 && o12314[LinkedList$Entry.next]o12316 > 0 && o12316[LinkedList$Entry.next]o12314 > 0 && o12314[LinkedList$Entry.next]o12314 > 0
f13446_0_entry_FieldAccess(EOS(STATIC_13446), i3120, i3956, o12519[LinkedList$Entry.next]o12519, o12519[LinkedList$Entry.previous]o12519, o12519[LinkedList$Entry.next]o12519, o12519[LinkedList$Entry.next]o12519, o12519[LinkedList$Entry.next]o12519) -> f13457_0_entry_FieldAccess(EOS(STATIC_13457), i3120, i3956, o12519[LinkedList$Entry.next]o12519, o12519[LinkedList$Entry.previous]o12519) :|: TRUE
f13456_0_entry_FieldAccess(EOS(STATIC_13456), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12316[LinkedList$Entry.next]o12546, o12546[LinkedList$Entry.next]o12546, o12546[LinkedList$Entry.next]o12316) -> f13466_0_entry_FieldAccess(EOS(STATIC_13466), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12316[LinkedList$Entry.next]o12546, o12548[LinkedList$Entry.next]o12316, o12548[LinkedList$Entry.next]o12546) :|: o12548[LinkedList$Entry.next]o12546 < o12546[LinkedList$Entry.next]o12546 && o12546[LinkedList$Entry.next]o12546 >= 0 && o12548[LinkedList$Entry.next]o12316 < o12546[LinkedList$Entry.next]o12316 && o12546[LinkedList$Entry.next]o12316 >= 0
f13466_0_entry_FieldAccess(EOS(STATIC_13466), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12316[LinkedList$Entry.next]o12546, o12548[LinkedList$Entry.next]o12316, o12548[LinkedList$Entry.next]o12546) -> f13476_0_entry_Store(EOS(STATIC_13476), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12548[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12548, o12548[LinkedList$Entry.next]o12548) :|: o12316[LinkedList$Entry.next]o12548 > o12316[LinkedList$Entry.next]o12546 && o12316[LinkedList$Entry.next]o12546 >= 0 && o12548[LinkedList$Entry.next]o12548 > o12548[LinkedList$Entry.next]o12546 && o12548[LinkedList$Entry.next]o12546 >= 0
f13476_0_entry_Store(EOS(STATIC_13476), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12548[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12548, o12548[LinkedList$Entry.next]o12548) -> f13487_0_entry_Inc(EOS(STATIC_13487), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12548[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12548, o12548[LinkedList$Entry.next]o12548) :|: TRUE
f13487_0_entry_Inc(EOS(STATIC_13487), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12548[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12548, o12548[LinkedList$Entry.next]o12548) -> f13501_0_entry_JMP(EOS(STATIC_13501), i3120, i3956 + 1, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12548[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12548, o12548[LinkedList$Entry.next]o12548) :|: TRUE
f13501_0_entry_JMP(EOS(STATIC_13501), i3120, i3997, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12548[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12548, o12548[LinkedList$Entry.next]o12548) -> f13517_0_entry_Load(EOS(STATIC_13517), i3120, i3997, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12548[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12548, o12548[LinkedList$Entry.next]o12548) :|: TRUE
f13517_0_entry_Load(EOS(STATIC_13517), i3120, i3997, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12548[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12548, o12548[LinkedList$Entry.next]o12548) -> f13399_0_entry_Load(EOS(STATIC_13399), i3120, i3997, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12548[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12548, o12548[LinkedList$Entry.next]o12548) :|: TRUE
f13399_0_entry_Load(EOS(STATIC_13399), i3120, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12314[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314) -> f13410_0_entry_Load(EOS(STATIC_13410), i3120, i3956, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12314[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314) :|: TRUE
f13410_0_entry_Load(EOS(STATIC_13410), i3120, i3956, i3956, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12314[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314) -> f13420_0_entry_GT(EOS(STATIC_13420), i3120, i3956, i3956, i3120, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12314[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314) :|: TRUE
f13420_0_entry_GT(EOS(STATIC_13420), i3120, i3956, i3956, i3120, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12314[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314) -> f13429_0_entry_GT(EOS(STATIC_13429), i3120, i3956, i3956, i3120, o12316[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.previous]o12316, o12314[LinkedList$Entry.next]o12316, o12316[LinkedList$Entry.next]o12314, o12314[LinkedList$Entry.next]o12314) :|: i3956 <= i3120
f13457_0_entry_FieldAccess(EOS(STATIC_13457), i3120, i3956, o12550[LinkedList$Entry.next]o12550, o12550[LinkedList$Entry.previous]o12550) -> f13467_0_entry_FieldAccess(EOS(STATIC_13467), i3120, i3956, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) :|: o12552[LinkedList$Entry.next]o12550 < o12550[LinkedList$Entry.next]o12550 && o12550[LinkedList$Entry.next]o12550 >= 0 && o12553[LinkedList$Entry.previous]o12550 < o12550[LinkedList$Entry.previous]o12550 && o12550[LinkedList$Entry.previous]o12550 >= 0
f13467_0_entry_FieldAccess(EOS(STATIC_13467), i3120, i3956, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) -> f13477_0_entry_FieldAccess(EOS(STATIC_13477), i3120, i3956, o12553[LinkedList$Entry.previous]o12550, o12552[LinkedList$Entry.next]o12550) :|: o12552[LinkedList$Entry.next]o12550 > 0
f13467_0_entry_FieldAccess(EOS(STATIC_13467), i3120, i3956, o12552[LinkedList$Entry.next]o12567, o12553[LinkedList$Entry.previous]o12567) -> f13478_0_entry_FieldAccess(EOS(STATIC_13478), i3120, i3956, o12553[LinkedList$Entry.previous]o12567) :|: TRUE
f13477_0_entry_FieldAccess(EOS(STATIC_13477), i3120, i3956, o12553[LinkedList$Entry.previous]o12550, o12552[LinkedList$Entry.next]o12550) -> f13488_0_entry_FieldAccess(EOS(STATIC_13488), i3120, i3956, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) :|: o12553[LinkedList$Entry.previous]o12550 > 0
f13477_0_entry_FieldAccess(EOS(STATIC_13477), i3120, i3956, o12553[LinkedList$Entry.previous]o12586, o12552[LinkedList$Entry.next]o12586) -> f13489_0_entry_FieldAccess(EOS(STATIC_13489), i3120, i3956, o12552[LinkedList$Entry.next]o12586) :|: TRUE
f13488_0_entry_FieldAccess(EOS(STATIC_13488), i3120, i3956, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) -> f13502_0_entry_Store(EOS(STATIC_13502), i3120, i3956, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) :|: TRUE
f13502_0_entry_Store(EOS(STATIC_13502), i3120, i3956, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) -> f13518_0_entry_Inc(EOS(STATIC_13518), i3120, i3956, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) :|: TRUE
f13518_0_entry_Inc(EOS(STATIC_13518), i3120, i3956, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) -> f13530_0_entry_JMP(EOS(STATIC_13530), i3120, i3956 + 1, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) :|: TRUE
f13530_0_entry_JMP(EOS(STATIC_13530), i3120, i4025, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) -> f13544_0_entry_Load(EOS(STATIC_13544), i3120, i4025, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) :|: TRUE
f13544_0_entry_Load(EOS(STATIC_13544), i3120, i4025, o12552[LinkedList$Entry.next]o12550, o12553[LinkedList$Entry.previous]o12550) -> f13399_0_entry_Load(EOS(STATIC_13399), i3120, i4025, o12550[LinkedList$Entry.next]o12550, o12550[LinkedList$Entry.previous]o12550, o12552[LinkedList$Entry.next]o12550, o12550[LinkedList$Entry.next]o12552, o12552[LinkedList$Entry.next]o12552) :|: o12550[LinkedList$Entry.next]o12552 = 1
f13489_0_entry_FieldAccess(EOS(STATIC_13489), i3120, i3956, o12552[LinkedList$Entry.next]o12586) -> f13503_0_entry_Store(EOS(STATIC_13503), i3120, i3956, o12552[LinkedList$Entry.next]o12586) :|: TRUE
f13503_0_entry_Store(EOS(STATIC_13503), i3120, i3956, o12552[LinkedList$Entry.next]o12586) -> f13519_0_entry_Inc(EOS(STATIC_13519), i3120, i3956, o12552[LinkedList$Entry.next]o12586) :|: TRUE
f13519_0_entry_Inc(EOS(STATIC_13519), i3120, i3956, o12552[LinkedList$Entry.next]o12586) -> f13531_0_entry_JMP(EOS(STATIC_13531), i3120, i3956 + 1, o12552[LinkedList$Entry.next]o12586) :|: TRUE
f13531_0_entry_JMP(EOS(STATIC_13531), i3120, i4027, o12552[LinkedList$Entry.next]o12586) -> f13545_0_entry_Load(EOS(STATIC_13545), i3120, i4027, o12552[LinkedList$Entry.next]o12586) :|: TRUE
f13545_0_entry_Load(EOS(STATIC_13545), i3120, i4027, o12552[LinkedList$Entry.next]o12586) -> f13399_0_entry_Load(EOS(STATIC_13399), i3120, i4027, o12586[LinkedList$Entry.next]o12586, o12586[LinkedList$Entry.previous]o12586, o12552[LinkedList$Entry.next]o12586, o12586[LinkedList$Entry.next]o12552, o12552[LinkedList$Entry.next]o12552) :|: o12586[LinkedList$Entry.previous]o12586 = 1 && o12586[LinkedList$Entry.next]o12552 = 1
f13478_0_entry_FieldAccess(EOS(STATIC_13478), i3120, i3956, o12553[LinkedList$Entry.previous]o12567) -> f13490_0_entry_FieldAccess(EOS(STATIC_13490), i3120, i3956, o12553[LinkedList$Entry.previous]o12567) :|: o12553[LinkedList$Entry.previous]o12567 > 0
f13478_0_entry_FieldAccess(EOS(STATIC_13478), i3120, i3956, o12553[LinkedList$Entry.previous]o12589) -> f13491_0_entry_FieldAccess(EOS(STATIC_13491), i3120, i3956) :|: TRUE
f13490_0_entry_FieldAccess(EOS(STATIC_13490), i3120, i3956, o12553[LinkedList$Entry.previous]o12567) -> f13504_0_entry_Store(EOS(STATIC_13504), i3120, i3956, o12553[LinkedList$Entry.previous]o12567) :|: TRUE
f13504_0_entry_Store(EOS(STATIC_13504), i3120, i3956, o12553[LinkedList$Entry.previous]o12567) -> f13520_0_entry_Inc(EOS(STATIC_13520), i3120, i3956, o12553[LinkedList$Entry.previous]o12567) :|: TRUE
f13520_0_entry_Inc(EOS(STATIC_13520), i3120, i3956, o12553[LinkedList$Entry.previous]o12567) -> f13532_0_entry_JMP(EOS(STATIC_13532), i3120, i3956 + 1, o12553[LinkedList$Entry.previous]o12567) :|: TRUE
f13532_0_entry_JMP(EOS(STATIC_13532), i3120, i4030, o12553[LinkedList$Entry.previous]o12567) -> f13546_0_entry_Load(EOS(STATIC_13546), i3120, i4030, o12553[LinkedList$Entry.previous]o12567) :|: TRUE
f13546_0_entry_Load(EOS(STATIC_13546), i3120, i4030, o12553[LinkedList$Entry.previous]o12567) -> f13399_0_entry_Load(EOS(STATIC_13399), i3120, i4030, o12567[LinkedList$Entry.next]o12567, o12567[LinkedList$Entry.previous]o12567, o12567[LinkedList$Entry.next]o12567, o12567[LinkedList$Entry.next]o12567, o12567[LinkedList$Entry.next]o12567) :|: o12567[LinkedList$Entry.next]o12567 = 1 && o12567[LinkedList$Entry.next]o12567 = 1 && o12567[LinkedList$Entry.next]o12567 = 1 && o12567[LinkedList$Entry.next]o12567 = 1
f13491_0_entry_FieldAccess(EOS(STATIC_13491), i3120, i3956) -> f13505_0_entry_Store(EOS(STATIC_13505), i3120, i3956) :|: TRUE
f13505_0_entry_Store(EOS(STATIC_13505), i3120, i3956) -> f13521_0_entry_Inc(EOS(STATIC_13521), i3120, i3956) :|: TRUE
f13521_0_entry_Inc(EOS(STATIC_13521), i3120, i3956) -> f13533_0_entry_JMP(EOS(STATIC_13533), i3120, i3956 + 1) :|: TRUE
f13533_0_entry_JMP(EOS(STATIC_13533), i3120, i4031) -> f13547_0_entry_Load(EOS(STATIC_13547), i3120, i4031) :|: TRUE
f13547_0_entry_Load(EOS(STATIC_13547), i3120, i4031) -> f13399_0_entry_Load(EOS(STATIC_13399), i3120, i4031, o12589[LinkedList$Entry.next]o12589, o12589[LinkedList$Entry.previous]o12589, o12589[LinkedList$Entry.next]o12589, o12589[LinkedList$Entry.next]o12589, o12589[LinkedList$Entry.next]o12589) :|: o12589[LinkedList$Entry.next]o12589 = 1 && o12589[LinkedList$Entry.previous]o12589 = 1 && o12589[LinkedList$Entry.next]o12589 = 1 && o12589[LinkedList$Entry.next]o12589 = 1 && o12589[LinkedList$Entry.next]o12589 = 1
Combined rules. Obtained 5 IRulesP rules:
f13429_0_entry_GT(EOS(STATIC_13429), i3120:0, i3956:0, i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(EOS(STATIC_13429), i3120:0, i3956:0 + 1, i3956:0 + 1, i3120:0, o12550[LinkedList$Entry.next]o12550:0, o12550[LinkedList$Entry.previous]o12550:0, o12552[LinkedList$Entry.next]o12550:0, 1, o12552[LinkedList$Entry.next]o12552:0) :|: i3956:0 + 1 <= i3120:0 && o12316[LinkedList$Entry.next]o12316:0 > -1 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0 && o12316[LinkedList$Entry.previous]o12316:0 > -1 && o12553[LinkedList$Entry.previous]o12550:0 > 0 && o12552[LinkedList$Entry.next]o12550:0 > 0
f13429_0_entry_GT(EOS(STATIC_13429), i3120:0, i3956:0, i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(EOS(STATIC_13429), i3120:0, i3956:0 + 1, i3956:0 + 1, i3120:0, 1, o12567[LinkedList$Entry.previous]o12567:0, 1, 1, 1) :|: i3956:0 + 1 <= i3120:0 && o12316[LinkedList$Entry.next]o12316:0 > -1 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 > 0 && o12316[LinkedList$Entry.previous]o12316:0 > -1
f13429_0_entry_GT(EOS(STATIC_13429), i3120:0, i3956:0, i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(EOS(STATIC_13429), i3120:0, i3956:0 + 1, i3956:0 + 1, i3120:0, 1, 1, 1, 1, 1) :|: i3956:0 + 1 <= i3120:0 && o12316[LinkedList$Entry.next]o12316:0 > -1 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12316[LinkedList$Entry.previous]o12316:0 > -1 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0
f13429_0_entry_GT(EOS(STATIC_13429), i3120:0, i3956:0, i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12314[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12314:0, o12314[LinkedList$Entry.next]o12314:0) -> f13429_0_entry_GT(EOS(STATIC_13429), i3120:0, i3956:0 + 1, i3956:0 + 1, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12548[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12548:0, o12548[LinkedList$Entry.next]o12548:0) :|: o12314[LinkedList$Entry.next]o12316:0 > 0 && o12316[LinkedList$Entry.next]o12314:0 > 0 && o12314[LinkedList$Entry.next]o12314:0 > 0 && i3956:0 + 1 <= i3120:0 && o12316[LinkedList$Entry.previous]o12316:0 > 0 && o12316[LinkedList$Entry.next]o12316:0 > 0 && o12548[LinkedList$Entry.next]o12546:0 < o12314[LinkedList$Entry.next]o12314:0 && o12316[LinkedList$Entry.next]o12548:0 > o12316[LinkedList$Entry.next]o12314:0 && o12548[LinkedList$Entry.next]o12316:0 < o12314[LinkedList$Entry.next]o12316:0 && o12548[LinkedList$Entry.next]o12546:0 > -1 && o12548[LinkedList$Entry.next]o12548:0 > o12548[LinkedList$Entry.next]o12546:0
f13429_0_entry_GT(EOS(STATIC_13429), i3120:0, i3956:0, i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(EOS(STATIC_13429), i3120:0, i3956:0 + 1, i3956:0 + 1, i3120:0, o12586[LinkedList$Entry.next]o12586:0, 1, o12552[LinkedList$Entry.next]o12550:0, 1, o12552[LinkedList$Entry.next]o12552:0) :|: i3956:0 + 1 <= i3120:0 && o12316[LinkedList$Entry.next]o12316:0 > -1 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0 && o12552[LinkedList$Entry.next]o12550:0 > 0 && o12316[LinkedList$Entry.previous]o12316:0 > -1
Filtered constant ground arguments:
   f13429_0_entry_GT(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13429_0_entry_GT(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f13429_0_entry_GT(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13429_0_entry_GT(x3, x4, x5, x6, x7, x8, x9)
Finished conversion. Obtained 5 rules.P rules:
f13429_0_entry_GT(i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(i3956:0 + 1, i3120:0, o12550[LinkedList$Entry.next]o12550:0, o12550[LinkedList$Entry.previous]o12550:0, o12552[LinkedList$Entry.next]o12550:0, 1, o12552[LinkedList$Entry.next]o12552:0) :|: o12316[LinkedList$Entry.next]o12316:0 > -1 && i3956:0 + 1 <= i3120:0 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0 && o12316[LinkedList$Entry.previous]o12316:0 > -1 && o12552[LinkedList$Entry.next]o12550:0 > 0 && o12553[LinkedList$Entry.previous]o12550:0 > 0
f13429_0_entry_GT(i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(i3956:0 + 1, i3120:0, 1, o12567[LinkedList$Entry.previous]o12567:0, 1, 1, 1) :|: o12316[LinkedList$Entry.next]o12316:0 > -1 && i3956:0 + 1 <= i3120:0 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0 && o12316[LinkedList$Entry.previous]o12316:0 > -1 && o12553[LinkedList$Entry.previous]o12550:0 > 0
f13429_0_entry_GT(i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(i3956:0 + 1, i3120:0, 1, 1, 1, 1, 1) :|: o12316[LinkedList$Entry.next]o12316:0 > -1 && i3956:0 + 1 <= i3120:0 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0 && o12316[LinkedList$Entry.previous]o12316:0 > -1
f13429_0_entry_GT(i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12314[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12314:0, o12314[LinkedList$Entry.next]o12314:0) -> f13429_0_entry_GT(i3956:0 + 1, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12548[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12548:0, o12548[LinkedList$Entry.next]o12548:0) :|: o12316[LinkedList$Entry.next]o12314:0 > 0 && o12314[LinkedList$Entry.next]o12316:0 > 0 && o12314[LinkedList$Entry.next]o12314:0 > 0 && i3956:0 + 1 <= i3120:0 && o12316[LinkedList$Entry.previous]o12316:0 > 0 && o12316[LinkedList$Entry.next]o12316:0 > 0 && o12548[LinkedList$Entry.next]o12546:0 < o12314[LinkedList$Entry.next]o12314:0 && o12316[LinkedList$Entry.next]o12548:0 > o12316[LinkedList$Entry.next]o12314:0 && o12548[LinkedList$Entry.next]o12316:0 < o12314[LinkedList$Entry.next]o12316:0 && o12548[LinkedList$Entry.next]o12548:0 > o12548[LinkedList$Entry.next]o12546:0 && o12548[LinkedList$Entry.next]o12546:0 > -1
f13429_0_entry_GT(i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(i3956:0 + 1, i3120:0, o12586[LinkedList$Entry.next]o12586:0, 1, o12552[LinkedList$Entry.next]o12550:0, 1, o12552[LinkedList$Entry.next]o12552:0) :|: o12316[LinkedList$Entry.next]o12316:0 > -1 && i3956:0 + 1 <= i3120:0 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0 && o12316[LinkedList$Entry.previous]o12316:0 > -1 && o12552[LinkedList$Entry.next]o12550:0 > 0

----------------------------------------

(78)
Obligation:
Rules:
f13429_0_entry_GT(i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(i3956:0 + 1, i3120:0, o12550[LinkedList$Entry.next]o12550:0, o12550[LinkedList$Entry.previous]o12550:0, o12552[LinkedList$Entry.next]o12550:0, 1, o12552[LinkedList$Entry.next]o12552:0) :|: o12316[LinkedList$Entry.next]o12316:0 > -1 && i3956:0 + 1 <= i3120:0 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0 && o12316[LinkedList$Entry.previous]o12316:0 > -1 && o12552[LinkedList$Entry.next]o12550:0 > 0 && o12553[LinkedList$Entry.previous]o12550:0 > 0
f13429_0_entry_GT(x, x1, x2, x3, x2, x2, x2) -> f13429_0_entry_GT(x + 1, x1, 1, x4, 1, 1, 1) :|: x2 > -1 && x + 1 <= x1 && x5 < x2 && x6 < x3 && x3 > -1 && x6 > 0
f13429_0_entry_GT(x7, x8, x9, x10, x9, x9, x9) -> f13429_0_entry_GT(x7 + 1, x8, 1, 1, 1, 1, 1) :|: x9 > -1 && x7 + 1 <= x8 && x11 < x9 && x12 < x10 && x10 > -1
f13429_0_entry_GT(x13, x14, x15, x16, x17, x18, x19) -> f13429_0_entry_GT(x13 + 1, x14, x15, x16, x20, x21, x22) :|: x18 > 0 && x17 > 0 && x19 > 0 && x13 + 1 <= x14 && x16 > 0 && x15 > 0 && x23 < x19 && x21 > x18 && x20 < x17 && x22 > x23 && x23 > -1
f13429_0_entry_GT(x24, x25, x26, x27, x26, x26, x26) -> f13429_0_entry_GT(x24 + 1, x25, x28, 1, x29, 1, x30) :|: x26 > -1 && x24 + 1 <= x25 && x29 < x26 && x31 < x27 && x27 > -1 && x29 > 0

----------------------------------------

(79) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(80)
Obligation:
Rules:
f13429_0_entry_GT(i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(arith, i3120:0, o12550[LinkedList$Entry.next]o12550:0, o12550[LinkedList$Entry.previous]o12550:0, o12552[LinkedList$Entry.next]o12550:0, 1, o12552[LinkedList$Entry.next]o12552:0) :|: o12316[LinkedList$Entry.next]o12316:0 > -1 && i3956:0 + 1 <= i3120:0 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0 && o12316[LinkedList$Entry.previous]o12316:0 > -1 && o12552[LinkedList$Entry.next]o12550:0 > 0 && o12553[LinkedList$Entry.previous]o12550:0 > 0 && arith = i3956:0 + 1
f13429_0_entry_GT(x32, x33, x34, x35, x34, x34, x34) -> f13429_0_entry_GT(x36, x33, 1, x37, 1, 1, 1) :|: x34 > -1 && x32 + 1 <= x33 && x38 < x34 && x39 < x35 && x35 > -1 && x39 > 0 && x36 = x32 + 1
f13429_0_entry_GT(x40, x41, x42, x43, x42, x42, x42) -> f13429_0_entry_GT(x44, x41, 1, 1, 1, 1, 1) :|: x42 > -1 && x40 + 1 <= x41 && x45 < x42 && x46 < x43 && x43 > -1 && x44 = x40 + 1
f13429_0_entry_GT(x47, x48, x49, x50, x51, x52, x53) -> f13429_0_entry_GT(x54, x48, x49, x50, x55, x56, x57) :|: x52 > 0 && x51 > 0 && x53 > 0 && x47 + 1 <= x48 && x50 > 0 && x49 > 0 && x58 < x53 && x56 > x52 && x55 < x51 && x57 > x58 && x58 > -1 && x54 = x47 + 1
f13429_0_entry_GT(x59, x60, x61, x62, x61, x61, x61) -> f13429_0_entry_GT(x63, x60, x64, 1, x65, 1, x66) :|: x61 > -1 && x59 + 1 <= x60 && x65 < x61 && x67 < x62 && x62 > -1 && x65 > 0 && x63 = x59 + 1

----------------------------------------

(81) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13429_0_entry_GT(i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(arith, i3120:0, o12550[LinkedList$Entry.next]o12550:0, o12550[LinkedList$Entry.previous]o12550:0, o12552[LinkedList$Entry.next]o12550:0, 1, o12552[LinkedList$Entry.next]o12552:0) :|: o12316[LinkedList$Entry.next]o12316:0 > -1 && i3956:0 + 1 <= i3120:0 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0 && o12316[LinkedList$Entry.previous]o12316:0 > -1 && o12552[LinkedList$Entry.next]o12550:0 > 0 && o12553[LinkedList$Entry.previous]o12550:0 > 0 && arith = i3956:0 + 1
(2) f13429_0_entry_GT(x32, x33, x34, x35, x34, x34, x34) -> f13429_0_entry_GT(x36, x33, 1, x37, 1, 1, 1) :|: x34 > -1 && x32 + 1 <= x33 && x38 < x34 && x39 < x35 && x35 > -1 && x39 > 0 && x36 = x32 + 1
(3) f13429_0_entry_GT(x40, x41, x42, x43, x42, x42, x42) -> f13429_0_entry_GT(x44, x41, 1, 1, 1, 1, 1) :|: x42 > -1 && x40 + 1 <= x41 && x45 < x42 && x46 < x43 && x43 > -1 && x44 = x40 + 1
(4) f13429_0_entry_GT(x47, x48, x49, x50, x51, x52, x53) -> f13429_0_entry_GT(x54, x48, x49, x50, x55, x56, x57) :|: x52 > 0 && x51 > 0 && x53 > 0 && x47 + 1 <= x48 && x50 > 0 && x49 > 0 && x58 < x53 && x56 > x52 && x55 < x51 && x57 > x58 && x58 > -1 && x54 = x47 + 1
(5) f13429_0_entry_GT(x59, x60, x61, x62, x61, x61, x61) -> f13429_0_entry_GT(x63, x60, x64, 1, x65, 1, x66) :|: x61 > -1 && x59 + 1 <= x60 && x65 < x61 && x67 < x62 && x62 > -1 && x65 > 0 && x63 = x59 + 1

Arcs:
(1) -> (2), (3), (4)
(2) -> (2), (3), (4)
(3) -> (3), (4)
(4) -> (1), (2), (3), (4), (5)
(5) -> (3), (4)

This digraph is fully evaluated!
----------------------------------------

(82)
Obligation:

Termination digraph:
Nodes:
(1) f13429_0_entry_GT(i3956:0, i3120:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.previous]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0, o12316[LinkedList$Entry.next]o12316:0) -> f13429_0_entry_GT(arith, i3120:0, o12550[LinkedList$Entry.next]o12550:0, o12550[LinkedList$Entry.previous]o12550:0, o12552[LinkedList$Entry.next]o12550:0, 1, o12552[LinkedList$Entry.next]o12552:0) :|: o12316[LinkedList$Entry.next]o12316:0 > -1 && i3956:0 + 1 <= i3120:0 && o12552[LinkedList$Entry.next]o12550:0 < o12316[LinkedList$Entry.next]o12316:0 && o12553[LinkedList$Entry.previous]o12550:0 < o12316[LinkedList$Entry.previous]o12316:0 && o12316[LinkedList$Entry.previous]o12316:0 > -1 && o12552[LinkedList$Entry.next]o12550:0 > 0 && o12553[LinkedList$Entry.previous]o12550:0 > 0 && arith = i3956:0 + 1
(2) f13429_0_entry_GT(x47, x48, x49, x50, x51, x52, x53) -> f13429_0_entry_GT(x54, x48, x49, x50, x55, x56, x57) :|: x52 > 0 && x51 > 0 && x53 > 0 && x47 + 1 <= x48 && x50 > 0 && x49 > 0 && x58 < x53 && x56 > x52 && x55 < x51 && x57 > x58 && x58 > -1 && x54 = x47 + 1
(3) f13429_0_entry_GT(x40, x41, x42, x43, x42, x42, x42) -> f13429_0_entry_GT(x44, x41, 1, 1, 1, 1, 1) :|: x42 > -1 && x40 + 1 <= x41 && x45 < x42 && x46 < x43 && x43 > -1 && x44 = x40 + 1
(4) f13429_0_entry_GT(x59, x60, x61, x62, x61, x61, x61) -> f13429_0_entry_GT(x63, x60, x64, 1, x65, 1, x66) :|: x61 > -1 && x59 + 1 <= x60 && x65 < x61 && x67 < x62 && x62 > -1 && x65 > 0 && x63 = x59 + 1
(5) f13429_0_entry_GT(x32, x33, x34, x35, x34, x34, x34) -> f13429_0_entry_GT(x36, x33, 1, x37, 1, 1, 1) :|: x34 > -1 && x32 + 1 <= x33 && x38 < x34 && x39 < x35 && x35 > -1 && x39 > 0 && x36 = x32 + 1

Arcs:
(1) -> (2), (3), (5)
(2) -> (1), (2), (3), (4), (5)
(3) -> (2), (3)
(4) -> (2), (3)
(5) -> (2), (3), (5)

This digraph is fully evaluated!

----------------------------------------

(83) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(84)
Obligation:
Rules:
f13429_0_entry_GT(x59:0, x60:0, x61:0, x62:0, x61:0, x61:0, x61:0) -> f13429_0_entry_GT(x59:0 + 1, x60:0, x64:0, 1, x65:0, 1, x66:0) :|: x62:0 > -1 && x65:0 > 0 && x67:0 < x62:0 && x65:0 < x61:0 && x60:0 >= x59:0 + 1 && x61:0 > -1
f13429_0_entry_GT(x47:0, x48:0, x49:0, x50:0, x51:0, x52:0, x53:0) -> f13429_0_entry_GT(x47:0 + 1, x48:0, x49:0, x50:0, x55:0, x56:0, x57:0) :|: x58:0 < x57:0 && x58:0 > -1 && x55:0 < x51:0 && x56:0 > x52:0 && x58:0 < x53:0 && x49:0 > 0 && x50:0 > 0 && x48:0 >= x47:0 + 1 && x53:0 > 0 && x51:0 > 0 && x52:0 > 0
f13429_0_entry_GT(i3956:0:0, i3120:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.previous]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0) -> f13429_0_entry_GT(i3956:0:0 + 1, i3120:0:0, o12550[LinkedList$Entry.next]o12550:0:0, o12550[LinkedList$Entry.previous]o12550:0:0, o12552[LinkedList$Entry.next]o12550:0:0, 1, o12552[LinkedList$Entry.next]o12552:0:0) :|: o12552[LinkedList$Entry.next]o12550:0:0 > 0 && o12553[LinkedList$Entry.previous]o12550:0:0 > 0 && o12316[LinkedList$Entry.previous]o12316:0:0 > -1 && o12553[LinkedList$Entry.previous]o12550:0:0 < o12316[LinkedList$Entry.previous]o12316:0:0 && o12552[LinkedList$Entry.next]o12550:0:0 < o12316[LinkedList$Entry.next]o12316:0:0 && i3956:0:0 + 1 <= i3120:0:0 && o12316[LinkedList$Entry.next]o12316:0:0 > -1
f13429_0_entry_GT(x40:0, x41:0, x42:0, x43:0, x42:0, x42:0, x42:0) -> f13429_0_entry_GT(x40:0 + 1, x41:0, 1, 1, 1, 1, 1) :|: x46:0 < x43:0 && x43:0 > -1 && x45:0 < x42:0 && x41:0 >= x40:0 + 1 && x42:0 > -1
f13429_0_entry_GT(x32:0, x33:0, x34:0, x35:0, x34:0, x34:0, x34:0) -> f13429_0_entry_GT(x32:0 + 1, x33:0, 1, x37:0, 1, 1, 1) :|: x35:0 > -1 && x39:0 > 0 && x39:0 < x35:0 && x38:0 < x34:0 && x33:0 >= x32:0 + 1 && x34:0 > -1

----------------------------------------

(85) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13429_0_entry_GT(INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(86)
Obligation:
Rules:
f13429_0_entry_GT(x59:0, x60:0, x61:0, x62:0, x61:0, x61:0, x61:0) -> f13429_0_entry_GT(c, x60:0, x64:0, c1, x65:0, c2, x66:0) :|: c2 = 1 && (c1 = 1 && c = x59:0 + 1) && (x62:0 > -1 && x65:0 > 0 && x67:0 < x62:0 && x65:0 < x61:0 && x60:0 >= x59:0 + 1 && x61:0 > -1)
f13429_0_entry_GT(x47:0, x48:0, x49:0, x50:0, x51:0, x52:0, x53:0) -> f13429_0_entry_GT(c3, x48:0, x49:0, x50:0, x55:0, x56:0, x57:0) :|: c3 = x47:0 + 1 && (x58:0 < x57:0 && x58:0 > -1 && x55:0 < x51:0 && x56:0 > x52:0 && x58:0 < x53:0 && x49:0 > 0 && x50:0 > 0 && x48:0 >= x47:0 + 1 && x53:0 > 0 && x51:0 > 0 && x52:0 > 0)
f13429_0_entry_GT(i3956:0:0, i3120:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.previous]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0) -> f13429_0_entry_GT(c4, i3120:0:0, o12550[LinkedList$Entry.next]o12550:0:0, o12550[LinkedList$Entry.previous]o12550:0:0, o12552[LinkedList$Entry.next]o12550:0:0, c5, o12552[LinkedList$Entry.next]o12552:0:0) :|: c5 = 1 && c4 = i3956:0:0 + 1 && (o12552[LinkedList$Entry.next]o12550:0:0 > 0 && o12553[LinkedList$Entry.previous]o12550:0:0 > 0 && o12316[LinkedList$Entry.previous]o12316:0:0 > -1 && o12553[LinkedList$Entry.previous]o12550:0:0 < o12316[LinkedList$Entry.previous]o12316:0:0 && o12552[LinkedList$Entry.next]o12550:0:0 < o12316[LinkedList$Entry.next]o12316:0:0 && i3956:0:0 + 1 <= i3120:0:0 && o12316[LinkedList$Entry.next]o12316:0:0 > -1)
f13429_0_entry_GT(x40:0, x41:0, x42:0, x43:0, x42:0, x42:0, x42:0) -> f13429_0_entry_GT(c6, x41:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x40:0 + 1)))) && (x46:0 < x43:0 && x43:0 > -1 && x45:0 < x42:0 && x41:0 >= x40:0 + 1 && x42:0 > -1)
f13429_0_entry_GT(x32:0, x33:0, x34:0, x35:0, x34:0, x34:0, x34:0) -> f13429_0_entry_GT(c12, x33:0, c13, x37:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x32:0 + 1))) && (x35:0 > -1 && x39:0 > 0 && x39:0 < x35:0 && x38:0 < x34:0 && x33:0 >= x32:0 + 1 && x34:0 > -1)

----------------------------------------

(87) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13429_0_entry_GT(x, x1, x2, x3, x4, x5, x6)] = -x + x1 + x4

The following rules are decreasing:
f13429_0_entry_GT(x59:0, x60:0, x61:0, x62:0, x61:0, x61:0, x61:0) -> f13429_0_entry_GT(c, x60:0, x64:0, c1, x65:0, c2, x66:0) :|: c2 = 1 && (c1 = 1 && c = x59:0 + 1) && (x62:0 > -1 && x65:0 > 0 && x67:0 < x62:0 && x65:0 < x61:0 && x60:0 >= x59:0 + 1 && x61:0 > -1)
f13429_0_entry_GT(x47:0, x48:0, x49:0, x50:0, x51:0, x52:0, x53:0) -> f13429_0_entry_GT(c3, x48:0, x49:0, x50:0, x55:0, x56:0, x57:0) :|: c3 = x47:0 + 1 && (x58:0 < x57:0 && x58:0 > -1 && x55:0 < x51:0 && x56:0 > x52:0 && x58:0 < x53:0 && x49:0 > 0 && x50:0 > 0 && x48:0 >= x47:0 + 1 && x53:0 > 0 && x51:0 > 0 && x52:0 > 0)
f13429_0_entry_GT(i3956:0:0, i3120:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.previous]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0) -> f13429_0_entry_GT(c4, i3120:0:0, o12550[LinkedList$Entry.next]o12550:0:0, o12550[LinkedList$Entry.previous]o12550:0:0, o12552[LinkedList$Entry.next]o12550:0:0, c5, o12552[LinkedList$Entry.next]o12552:0:0) :|: c5 = 1 && c4 = i3956:0:0 + 1 && (o12552[LinkedList$Entry.next]o12550:0:0 > 0 && o12553[LinkedList$Entry.previous]o12550:0:0 > 0 && o12316[LinkedList$Entry.previous]o12316:0:0 > -1 && o12553[LinkedList$Entry.previous]o12550:0:0 < o12316[LinkedList$Entry.previous]o12316:0:0 && o12552[LinkedList$Entry.next]o12550:0:0 < o12316[LinkedList$Entry.next]o12316:0:0 && i3956:0:0 + 1 <= i3120:0:0 && o12316[LinkedList$Entry.next]o12316:0:0 > -1)
The following rules are bounded:
f13429_0_entry_GT(x59:0, x60:0, x61:0, x62:0, x61:0, x61:0, x61:0) -> f13429_0_entry_GT(c, x60:0, x64:0, c1, x65:0, c2, x66:0) :|: c2 = 1 && (c1 = 1 && c = x59:0 + 1) && (x62:0 > -1 && x65:0 > 0 && x67:0 < x62:0 && x65:0 < x61:0 && x60:0 >= x59:0 + 1 && x61:0 > -1)
f13429_0_entry_GT(x47:0, x48:0, x49:0, x50:0, x51:0, x52:0, x53:0) -> f13429_0_entry_GT(c3, x48:0, x49:0, x50:0, x55:0, x56:0, x57:0) :|: c3 = x47:0 + 1 && (x58:0 < x57:0 && x58:0 > -1 && x55:0 < x51:0 && x56:0 > x52:0 && x58:0 < x53:0 && x49:0 > 0 && x50:0 > 0 && x48:0 >= x47:0 + 1 && x53:0 > 0 && x51:0 > 0 && x52:0 > 0)
f13429_0_entry_GT(i3956:0:0, i3120:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.previous]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0, o12316[LinkedList$Entry.next]o12316:0:0) -> f13429_0_entry_GT(c4, i3120:0:0, o12550[LinkedList$Entry.next]o12550:0:0, o12550[LinkedList$Entry.previous]o12550:0:0, o12552[LinkedList$Entry.next]o12550:0:0, c5, o12552[LinkedList$Entry.next]o12552:0:0) :|: c5 = 1 && c4 = i3956:0:0 + 1 && (o12552[LinkedList$Entry.next]o12550:0:0 > 0 && o12553[LinkedList$Entry.previous]o12550:0:0 > 0 && o12316[LinkedList$Entry.previous]o12316:0:0 > -1 && o12553[LinkedList$Entry.previous]o12550:0:0 < o12316[LinkedList$Entry.previous]o12316:0:0 && o12552[LinkedList$Entry.next]o12550:0:0 < o12316[LinkedList$Entry.next]o12316:0:0 && i3956:0:0 + 1 <= i3120:0:0 && o12316[LinkedList$Entry.next]o12316:0:0 > -1)
f13429_0_entry_GT(x40:0, x41:0, x42:0, x43:0, x42:0, x42:0, x42:0) -> f13429_0_entry_GT(c6, x41:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x40:0 + 1)))) && (x46:0 < x43:0 && x43:0 > -1 && x45:0 < x42:0 && x41:0 >= x40:0 + 1 && x42:0 > -1)
f13429_0_entry_GT(x32:0, x33:0, x34:0, x35:0, x34:0, x34:0, x34:0) -> f13429_0_entry_GT(c12, x33:0, c13, x37:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x32:0 + 1))) && (x35:0 > -1 && x39:0 > 0 && x39:0 < x35:0 && x38:0 < x34:0 && x33:0 >= x32:0 + 1 && x34:0 > -1)

----------------------------------------

(88)
Obligation:
Rules:
f13429_0_entry_GT(x40:0, x41:0, x42:0, x43:0, x42:0, x42:0, x42:0) -> f13429_0_entry_GT(c6, x41:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x40:0 + 1)))) && (x46:0 < x43:0 && x43:0 > -1 && x45:0 < x42:0 && x41:0 >= x40:0 + 1 && x42:0 > -1)
f13429_0_entry_GT(x32:0, x33:0, x34:0, x35:0, x34:0, x34:0, x34:0) -> f13429_0_entry_GT(c12, x33:0, c13, x37:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x32:0 + 1))) && (x35:0 > -1 && x39:0 > 0 && x39:0 < x35:0 && x38:0 < x34:0 && x33:0 >= x32:0 + 1 && x34:0 > -1)

----------------------------------------

(89) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13429_0_entry_GT(x, x1, x2, x3, x4, x5, x6)] = -1 - x + x1

The following rules are decreasing:
f13429_0_entry_GT(x40:0, x41:0, x42:0, x43:0, x42:0, x42:0, x42:0) -> f13429_0_entry_GT(c6, x41:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x40:0 + 1)))) && (x46:0 < x43:0 && x43:0 > -1 && x45:0 < x42:0 && x41:0 >= x40:0 + 1 && x42:0 > -1)
f13429_0_entry_GT(x32:0, x33:0, x34:0, x35:0, x34:0, x34:0, x34:0) -> f13429_0_entry_GT(c12, x33:0, c13, x37:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x32:0 + 1))) && (x35:0 > -1 && x39:0 > 0 && x39:0 < x35:0 && x38:0 < x34:0 && x33:0 >= x32:0 + 1 && x34:0 > -1)
The following rules are bounded:
f13429_0_entry_GT(x40:0, x41:0, x42:0, x43:0, x42:0, x42:0, x42:0) -> f13429_0_entry_GT(c6, x41:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x40:0 + 1)))) && (x46:0 < x43:0 && x43:0 > -1 && x45:0 < x42:0 && x41:0 >= x40:0 + 1 && x42:0 > -1)
f13429_0_entry_GT(x32:0, x33:0, x34:0, x35:0, x34:0, x34:0, x34:0) -> f13429_0_entry_GT(c12, x33:0, c13, x37:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x32:0 + 1))) && (x35:0 > -1 && x39:0 > 0 && x39:0 < x35:0 && x38:0 < x34:0 && x33:0 >= x32:0 + 1 && x34:0 > -1)

----------------------------------------

(90)
YES

----------------------------------------

(91)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateLastIndexOf.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [previous]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(92) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 40 IRulesP rules:
f12929_0_entry_Load(EOS(STATIC_12929), i3120, i3330, i3330, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) -> f12942_0_entry_LE(EOS(STATIC_12942), i3120, i3330, i3330, i3120, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) :|: TRUE
f12942_0_entry_LE(EOS(STATIC_12942), i3120, i3330, i3330, i3120, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) -> f12952_0_entry_LE(EOS(STATIC_12952), i3120, i3330, i3330, i3120, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) :|: i3330 > i3120
f12952_0_entry_LE(EOS(STATIC_12952), i3120, i3330, i3330, i3120, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) -> f12963_0_entry_Load(EOS(STATIC_12963), i3120, i3330, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) :|: i3330 > i3120
f12963_0_entry_Load(EOS(STATIC_12963), i3120, i3330, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) -> f12976_0_entry_FieldAccess(EOS(STATIC_12976), i3120, i3330, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) :|: TRUE
f12976_0_entry_FieldAccess(EOS(STATIC_12976), i3120, i3330, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) -> f12988_0_entry_FieldAccess(EOS(STATIC_12988), i3120, i3330, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) :|: o9798[LinkedList$Entry.previous]o9796 > 0 && o9798[LinkedList$Entry.next]o9798 > 0 && o9796[LinkedList$Entry.previous]o9798 > 0 && o9798[LinkedList$Entry.previous]o9798 > 0 && o9796[LinkedList$Entry.previous]o9796 > 0
f12976_0_entry_FieldAccess(EOS(STATIC_12976), i3120, i3330, o9946[LinkedList$Entry.previous]o9946, o9946[LinkedList$Entry.next]o9946, o9946[LinkedList$Entry.previous]o9946, o9946[LinkedList$Entry.previous]o9946, o9946[LinkedList$Entry.previous]o9946) -> f12989_0_entry_FieldAccess(EOS(STATIC_12989), i3120, i3330, o9946[LinkedList$Entry.next]o9946, o9946[LinkedList$Entry.previous]o9946) :|: TRUE
f12988_0_entry_FieldAccess(EOS(STATIC_12988), i3120, i3330, o9798[LinkedList$Entry.previous]o9959, o9798[LinkedList$Entry.next]o9798, o9959[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9959[LinkedList$Entry.previous]o9959) -> f13004_0_entry_FieldAccess(EOS(STATIC_13004), i3120, i3330, o9798[LinkedList$Entry.next]o9798, o9798[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9959, o9962[LinkedList$Entry.previous]o9798, o9962[LinkedList$Entry.previous]o9959) :|: o9962[LinkedList$Entry.previous]o9798 < o9959[LinkedList$Entry.previous]o9798 && o9959[LinkedList$Entry.previous]o9798 >= 0 && o9962[LinkedList$Entry.previous]o9959 < o9959[LinkedList$Entry.previous]o9959 && o9959[LinkedList$Entry.previous]o9959 >= 0
f13004_0_entry_FieldAccess(EOS(STATIC_13004), i3120, i3330, o9798[LinkedList$Entry.next]o9798, o9798[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9959, o9962[LinkedList$Entry.previous]o9798, o9962[LinkedList$Entry.previous]o9959) -> f13021_0_entry_Store(EOS(STATIC_13021), i3120, i3330, o9798[LinkedList$Entry.next]o9798, o9798[LinkedList$Entry.previous]o9798, o9962[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9962, o9962[LinkedList$Entry.previous]o9962) :|: o9798[LinkedList$Entry.previous]o9962 > o9798[LinkedList$Entry.previous]o9959 && o9798[LinkedList$Entry.previous]o9959 >= 0 && o9962[LinkedList$Entry.previous]o9962 > o9962[LinkedList$Entry.previous]o9959 && o9962[LinkedList$Entry.previous]o9959 >= 0
f13021_0_entry_Store(EOS(STATIC_13021), i3120, i3330, o9798[LinkedList$Entry.next]o9798, o9798[LinkedList$Entry.previous]o9798, o9962[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9962, o9962[LinkedList$Entry.previous]o9962) -> f13044_0_entry_Inc(EOS(STATIC_13044), i3120, i3330, o9798[LinkedList$Entry.next]o9798, o9798[LinkedList$Entry.previous]o9798, o9962[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9962, o9962[LinkedList$Entry.previous]o9962) :|: TRUE
f13044_0_entry_Inc(EOS(STATIC_13044), i3120, i3330, o9798[LinkedList$Entry.next]o9798, o9798[LinkedList$Entry.previous]o9798, o9962[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9962, o9962[LinkedList$Entry.previous]o9962) -> f13073_0_entry_JMP(EOS(STATIC_13073), i3120, i3330 + -1, o9798[LinkedList$Entry.next]o9798, o9798[LinkedList$Entry.previous]o9798, o9962[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9962, o9962[LinkedList$Entry.previous]o9962) :|: TRUE
f13073_0_entry_JMP(EOS(STATIC_13073), i3120, i3389, o9798[LinkedList$Entry.next]o9798, o9798[LinkedList$Entry.previous]o9798, o9962[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9962, o9962[LinkedList$Entry.previous]o9962) -> f13093_0_entry_Load(EOS(STATIC_13093), i3120, i3389, o9798[LinkedList$Entry.next]o9798, o9798[LinkedList$Entry.previous]o9798, o9962[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9962, o9962[LinkedList$Entry.previous]o9962) :|: TRUE
f13093_0_entry_Load(EOS(STATIC_13093), i3120, i3389, o9798[LinkedList$Entry.next]o9798, o9798[LinkedList$Entry.previous]o9798, o9962[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9962, o9962[LinkedList$Entry.previous]o9962) -> f12922_0_entry_Load(EOS(STATIC_12922), i3120, i3389, o9798[LinkedList$Entry.previous]o9962, o9798[LinkedList$Entry.next]o9798, o9962[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9962[LinkedList$Entry.previous]o9962) :|: TRUE
f12922_0_entry_Load(EOS(STATIC_12922), i3120, i3330, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) -> f12929_0_entry_Load(EOS(STATIC_12929), i3120, i3330, i3330, o9798[LinkedList$Entry.previous]o9796, o9798[LinkedList$Entry.next]o9798, o9796[LinkedList$Entry.previous]o9798, o9798[LinkedList$Entry.previous]o9798, o9796[LinkedList$Entry.previous]o9796) :|: TRUE
f12989_0_entry_FieldAccess(EOS(STATIC_12989), i3120, i3330, o9963[LinkedList$Entry.next]o9963, o9963[LinkedList$Entry.previous]o9963) -> f13005_0_entry_FieldAccess(EOS(STATIC_13005), i3120, i3330, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) :|: o9965[LinkedList$Entry.next]o9963 < o9963[LinkedList$Entry.next]o9963 && o9963[LinkedList$Entry.next]o9963 >= 0 && o9966[LinkedList$Entry.previous]o9963 < o9963[LinkedList$Entry.previous]o9963 && o9963[LinkedList$Entry.previous]o9963 >= 0
f13005_0_entry_FieldAccess(EOS(STATIC_13005), i3120, i3330, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) -> f13022_0_entry_FieldAccess(EOS(STATIC_13022), i3120, i3330, o9966[LinkedList$Entry.previous]o9963, o9965[LinkedList$Entry.next]o9963) :|: o9965[LinkedList$Entry.next]o9963 > 0
f13005_0_entry_FieldAccess(EOS(STATIC_13005), i3120, i3330, o9965[LinkedList$Entry.next]o10040, o9966[LinkedList$Entry.previous]o10040) -> f13023_0_entry_FieldAccess(EOS(STATIC_13023), i3120, i3330, o9966[LinkedList$Entry.previous]o10040) :|: TRUE
f13022_0_entry_FieldAccess(EOS(STATIC_13022), i3120, i3330, o9966[LinkedList$Entry.previous]o9963, o9965[LinkedList$Entry.next]o9963) -> f13045_0_entry_FieldAccess(EOS(STATIC_13045), i3120, i3330, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) :|: o9966[LinkedList$Entry.previous]o9963 > 0
f13022_0_entry_FieldAccess(EOS(STATIC_13022), i3120, i3330, o9966[LinkedList$Entry.previous]o10125, o9965[LinkedList$Entry.next]o10125) -> f13046_0_entry_FieldAccess(EOS(STATIC_13046), i3120, i3330, o9965[LinkedList$Entry.next]o10125) :|: TRUE
f13045_0_entry_FieldAccess(EOS(STATIC_13045), i3120, i3330, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) -> f13074_0_entry_Store(EOS(STATIC_13074), i3120, i3330, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) :|: TRUE
f13074_0_entry_Store(EOS(STATIC_13074), i3120, i3330, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) -> f13094_0_entry_Inc(EOS(STATIC_13094), i3120, i3330, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) :|: TRUE
f13094_0_entry_Inc(EOS(STATIC_13094), i3120, i3330, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) -> f13115_0_entry_JMP(EOS(STATIC_13115), i3120, i3330 + -1, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) :|: TRUE
f13115_0_entry_JMP(EOS(STATIC_13115), i3120, i3410, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) -> f13133_0_entry_Load(EOS(STATIC_13133), i3120, i3410, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) :|: TRUE
f13133_0_entry_Load(EOS(STATIC_13133), i3120, i3410, o9965[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963) -> f12922_0_entry_Load(EOS(STATIC_12922), i3120, i3410, o9963[LinkedList$Entry.previous]o9966, o9963[LinkedList$Entry.next]o9963, o9966[LinkedList$Entry.previous]o9963, o9963[LinkedList$Entry.previous]o9963, o9966[LinkedList$Entry.previous]o9966) :|: o9963[LinkedList$Entry.previous]o9966 = 1
f13046_0_entry_FieldAccess(EOS(STATIC_13046), i3120, i3330, o9965[LinkedList$Entry.next]o10125) -> f13075_0_entry_Store(EOS(STATIC_13075), i3120, i3330, o9965[LinkedList$Entry.next]o10125) :|: TRUE
f13075_0_entry_Store(EOS(STATIC_13075), i3120, i3330, o9965[LinkedList$Entry.next]o10125) -> f13095_0_entry_Inc(EOS(STATIC_13095), i3120, i3330, o9965[LinkedList$Entry.next]o10125) :|: TRUE
f13095_0_entry_Inc(EOS(STATIC_13095), i3120, i3330, o9965[LinkedList$Entry.next]o10125) -> f13116_0_entry_JMP(EOS(STATIC_13116), i3120, i3330 + -1, o9965[LinkedList$Entry.next]o10125) :|: TRUE
f13116_0_entry_JMP(EOS(STATIC_13116), i3120, i3412, o9965[LinkedList$Entry.next]o10125) -> f13134_0_entry_Load(EOS(STATIC_13134), i3120, i3412, o9965[LinkedList$Entry.next]o10125) :|: TRUE
f13134_0_entry_Load(EOS(STATIC_13134), i3120, i3412, o9965[LinkedList$Entry.next]o10125) -> f12922_0_entry_Load(EOS(STATIC_12922), i3120, i3412, o10125[LinkedList$Entry.previous]o10125, o10125[LinkedList$Entry.next]o10125, o10125[LinkedList$Entry.previous]o10125, o10125[LinkedList$Entry.previous]o10125, o10125[LinkedList$Entry.previous]o10125) :|: o10125[LinkedList$Entry.previous]o10125 = 1 && o10125[LinkedList$Entry.previous]o10125 = 1 && o10125[LinkedList$Entry.previous]o10125 = 1 && o10125[LinkedList$Entry.previous]o10125 = 1
f13023_0_entry_FieldAccess(EOS(STATIC_13023), i3120, i3330, o9966[LinkedList$Entry.previous]o10040) -> f13047_0_entry_FieldAccess(EOS(STATIC_13047), i3120, i3330, o9966[LinkedList$Entry.previous]o10040) :|: o9966[LinkedList$Entry.previous]o10040 > 0
f13023_0_entry_FieldAccess(EOS(STATIC_13023), i3120, i3330, o9966[LinkedList$Entry.previous]o10128) -> f13048_0_entry_FieldAccess(EOS(STATIC_13048), i3120, i3330) :|: TRUE
f13047_0_entry_FieldAccess(EOS(STATIC_13047), i3120, i3330, o9966[LinkedList$Entry.previous]o10040) -> f13076_0_entry_Store(EOS(STATIC_13076), i3120, i3330, o9966[LinkedList$Entry.previous]o10040) :|: TRUE
f13076_0_entry_Store(EOS(STATIC_13076), i3120, i3330, o9966[LinkedList$Entry.previous]o10040) -> f13096_0_entry_Inc(EOS(STATIC_13096), i3120, i3330, o9966[LinkedList$Entry.previous]o10040) :|: TRUE
f13096_0_entry_Inc(EOS(STATIC_13096), i3120, i3330, o9966[LinkedList$Entry.previous]o10040) -> f13117_0_entry_JMP(EOS(STATIC_13117), i3120, i3330 + -1, o9966[LinkedList$Entry.previous]o10040) :|: TRUE
f13117_0_entry_JMP(EOS(STATIC_13117), i3120, i3413, o9966[LinkedList$Entry.previous]o10040) -> f13135_0_entry_Load(EOS(STATIC_13135), i3120, i3413, o9966[LinkedList$Entry.previous]o10040) :|: TRUE
f13135_0_entry_Load(EOS(STATIC_13135), i3120, i3413, o9966[LinkedList$Entry.previous]o10040) -> f12922_0_entry_Load(EOS(STATIC_12922), i3120, i3413, o10040[LinkedList$Entry.previous]o9966, o10040[LinkedList$Entry.next]o10040, o9966[LinkedList$Entry.previous]o10040, o10040[LinkedList$Entry.previous]o10040, o9966[LinkedList$Entry.previous]o9966) :|: o10040[LinkedList$Entry.previous]o9966 = 1 && o10040[LinkedList$Entry.next]o10040 = 1
f13048_0_entry_FieldAccess(EOS(STATIC_13048), i3120, i3330) -> f13077_0_entry_Store(EOS(STATIC_13077), i3120, i3330) :|: TRUE
f13077_0_entry_Store(EOS(STATIC_13077), i3120, i3330) -> f13097_0_entry_Inc(EOS(STATIC_13097), i3120, i3330) :|: TRUE
f13097_0_entry_Inc(EOS(STATIC_13097), i3120, i3330) -> f13118_0_entry_JMP(EOS(STATIC_13118), i3120, i3330 + -1) :|: TRUE
f13118_0_entry_JMP(EOS(STATIC_13118), i3120, i3417) -> f13136_0_entry_Load(EOS(STATIC_13136), i3120, i3417) :|: TRUE
f13136_0_entry_Load(EOS(STATIC_13136), i3120, i3417) -> f12922_0_entry_Load(EOS(STATIC_12922), i3120, i3417, o10128[LinkedList$Entry.previous]o10128, o10128[LinkedList$Entry.next]o10128, o10128[LinkedList$Entry.previous]o10128, o10128[LinkedList$Entry.previous]o10128, o10128[LinkedList$Entry.previous]o10128) :|: o10128[LinkedList$Entry.previous]o10128 = 1 && o10128[LinkedList$Entry.next]o10128 = 1 && o10128[LinkedList$Entry.previous]o10128 = 1 && o10128[LinkedList$Entry.previous]o10128 = 1 && o10128[LinkedList$Entry.previous]o10128 = 1
Combined rules. Obtained 5 IRulesP rules:
f12929_0_entry_Load(EOS(STATIC_12929), i3120:0, i3330:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(EOS(STATIC_12929), i3120:0, i3330:0 - 1, i3330:0 - 1, 1, o10125[LinkedList$Entry.next]o10125:0, 1, 1, 1) :|: i3330:0 > i3120:0 && o9798[LinkedList$Entry.next]o9798:0 > -1 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0 && o9965[LinkedList$Entry.next]o9963:0 > 0 && o9798[LinkedList$Entry.previous]o9796:0 > -1
f12929_0_entry_Load(EOS(STATIC_12929), i3120:0, i3330:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(EOS(STATIC_12929), i3120:0, i3330:0 - 1, i3330:0 - 1, 1, o9963[LinkedList$Entry.next]o9963:0, o9966[LinkedList$Entry.previous]o9963:0, o9963[LinkedList$Entry.previous]o9963:0, o9966[LinkedList$Entry.previous]o9966:0) :|: i3330:0 > i3120:0 && o9798[LinkedList$Entry.next]o9798:0 > -1 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0 && o9798[LinkedList$Entry.previous]o9796:0 > -1 && o9966[LinkedList$Entry.previous]o9963:0 > 0 && o9965[LinkedList$Entry.next]o9963:0 > 0
f12929_0_entry_Load(EOS(STATIC_12929), i3120:0, i3330:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9796[LinkedList$Entry.previous]o9798:0, o9798[LinkedList$Entry.previous]o9798:0, o9796[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(EOS(STATIC_12929), i3120:0, i3330:0 - 1, i3330:0 - 1, o9798[LinkedList$Entry.previous]o9962:0, o9798[LinkedList$Entry.next]o9798:0, o9962[LinkedList$Entry.previous]o9798:0, o9798[LinkedList$Entry.previous]o9798:0, o9962[LinkedList$Entry.previous]o9962:0) :|: o9798[LinkedList$Entry.previous]o9796:0 > 0 && o9796[LinkedList$Entry.previous]o9798:0 > 0 && o9796[LinkedList$Entry.previous]o9796:0 > 0 && o9798[LinkedList$Entry.next]o9798:0 > 0 && i3330:0 > i3120:0 && o9962[LinkedList$Entry.previous]o9798:0 < o9796[LinkedList$Entry.previous]o9798:0 && o9798[LinkedList$Entry.previous]o9798:0 > 0 && o9798[LinkedList$Entry.previous]o9962:0 > o9798[LinkedList$Entry.previous]o9796:0 && o9962[LinkedList$Entry.previous]o9959:0 < o9796[LinkedList$Entry.previous]o9796:0 && o9962[LinkedList$Entry.previous]o9959:0 > -1 && o9962[LinkedList$Entry.previous]o9962:0 > o9962[LinkedList$Entry.previous]o9959:0
f12929_0_entry_Load(EOS(STATIC_12929), i3120:0, i3330:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(EOS(STATIC_12929), i3120:0, i3330:0 - 1, i3330:0 - 1, 1, 1, o9966[LinkedList$Entry.previous]o9963:0, o10040[LinkedList$Entry.previous]o10040:0, o9966[LinkedList$Entry.previous]o9966:0) :|: i3330:0 > i3120:0 && o9798[LinkedList$Entry.next]o9798:0 > -1 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0 && o9966[LinkedList$Entry.previous]o9963:0 > 0 && o9798[LinkedList$Entry.previous]o9796:0 > -1
f12929_0_entry_Load(EOS(STATIC_12929), i3120:0, i3330:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(EOS(STATIC_12929), i3120:0, i3330:0 - 1, i3330:0 - 1, 1, 1, 1, 1, 1) :|: i3330:0 > i3120:0 && o9798[LinkedList$Entry.next]o9798:0 > -1 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9798[LinkedList$Entry.previous]o9796:0 > -1 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0
Filtered constant ground arguments:
   f12929_0_entry_Load(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f12929_0_entry_Load(x2, x3, x4, x5, x6, x7, x8, x9)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f12929_0_entry_Load(x1, x2, x3, x4, x5, x6, x7, x8) -> f12929_0_entry_Load(x1, x3, x4, x5, x6, x7, x8)
Finished conversion. Obtained 5 rules.P rules:
f12929_0_entry_Load(i3120:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(i3120:0, i3330:0 - 1, 1, o10125[LinkedList$Entry.next]o10125:0, 1, 1, 1) :|: o9798[LinkedList$Entry.next]o9798:0 > -1 && i3330:0 > i3120:0 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0 && o9798[LinkedList$Entry.previous]o9796:0 > -1 && o9965[LinkedList$Entry.next]o9963:0 > 0
f12929_0_entry_Load(i3120:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(i3120:0, i3330:0 - 1, 1, o9963[LinkedList$Entry.next]o9963:0, o9966[LinkedList$Entry.previous]o9963:0, o9963[LinkedList$Entry.previous]o9963:0, o9966[LinkedList$Entry.previous]o9966:0) :|: o9798[LinkedList$Entry.next]o9798:0 > -1 && i3330:0 > i3120:0 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0 && o9798[LinkedList$Entry.previous]o9796:0 > -1 && o9965[LinkedList$Entry.next]o9963:0 > 0 && o9966[LinkedList$Entry.previous]o9963:0 > 0
f12929_0_entry_Load(i3120:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9796[LinkedList$Entry.previous]o9798:0, o9798[LinkedList$Entry.previous]o9798:0, o9796[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(i3120:0, i3330:0 - 1, o9798[LinkedList$Entry.previous]o9962:0, o9798[LinkedList$Entry.next]o9798:0, o9962[LinkedList$Entry.previous]o9798:0, o9798[LinkedList$Entry.previous]o9798:0, o9962[LinkedList$Entry.previous]o9962:0) :|: o9796[LinkedList$Entry.previous]o9798:0 > 0 && o9798[LinkedList$Entry.previous]o9796:0 > 0 && o9796[LinkedList$Entry.previous]o9796:0 > 0 && o9798[LinkedList$Entry.next]o9798:0 > 0 && i3330:0 > i3120:0 && o9962[LinkedList$Entry.previous]o9798:0 < o9796[LinkedList$Entry.previous]o9798:0 && o9798[LinkedList$Entry.previous]o9798:0 > 0 && o9798[LinkedList$Entry.previous]o9962:0 > o9798[LinkedList$Entry.previous]o9796:0 && o9962[LinkedList$Entry.previous]o9959:0 < o9796[LinkedList$Entry.previous]o9796:0 && o9962[LinkedList$Entry.previous]o9962:0 > o9962[LinkedList$Entry.previous]o9959:0 && o9962[LinkedList$Entry.previous]o9959:0 > -1
f12929_0_entry_Load(i3120:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(i3120:0, i3330:0 - 1, 1, 1, o9966[LinkedList$Entry.previous]o9963:0, o10040[LinkedList$Entry.previous]o10040:0, o9966[LinkedList$Entry.previous]o9966:0) :|: o9798[LinkedList$Entry.next]o9798:0 > -1 && i3330:0 > i3120:0 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0 && o9798[LinkedList$Entry.previous]o9796:0 > -1 && o9966[LinkedList$Entry.previous]o9963:0 > 0
f12929_0_entry_Load(i3120:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(i3120:0, i3330:0 - 1, 1, 1, 1, 1, 1) :|: o9798[LinkedList$Entry.next]o9798:0 > -1 && i3330:0 > i3120:0 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0 && o9798[LinkedList$Entry.previous]o9796:0 > -1

----------------------------------------

(93)
Obligation:
Rules:
f12929_0_entry_Load(i3120:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(i3120:0, i3330:0 - 1, 1, o10125[LinkedList$Entry.next]o10125:0, 1, 1, 1) :|: o9798[LinkedList$Entry.next]o9798:0 > -1 && i3330:0 > i3120:0 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0 && o9798[LinkedList$Entry.previous]o9796:0 > -1 && o9965[LinkedList$Entry.next]o9963:0 > 0
f12929_0_entry_Load(x, x1, x2, x3, x2, x2, x2) -> f12929_0_entry_Load(x, x1 - 1, 1, x4, x5, x6, x7) :|: x3 > -1 && x1 > x && x8 < x3 && x5 < x2 && x2 > -1 && x8 > 0 && x5 > 0
f12929_0_entry_Load(x9, x10, x11, x12, x13, x14, x15) -> f12929_0_entry_Load(x9, x10 - 1, x16, x12, x17, x14, x18) :|: x13 > 0 && x11 > 0 && x15 > 0 && x12 > 0 && x10 > x9 && x17 < x13 && x14 > 0 && x16 > x11 && x19 < x15 && x18 > x19 && x19 > -1
f12929_0_entry_Load(x20, x21, x22, x23, x22, x22, x22) -> f12929_0_entry_Load(x20, x21 - 1, 1, 1, x24, x25, x26) :|: x23 > -1 && x21 > x20 && x27 < x23 && x24 < x22 && x22 > -1 && x24 > 0
f12929_0_entry_Load(x28, x29, x30, x31, x30, x30, x30) -> f12929_0_entry_Load(x28, x29 - 1, 1, 1, 1, 1, 1) :|: x31 > -1 && x29 > x28 && x32 < x31 && x33 < x30 && x30 > -1

----------------------------------------

(94) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(95)
Obligation:
Rules:
f12929_0_entry_Load(i3120:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(i3120:0, arith, 1, o10125[LinkedList$Entry.next]o10125:0, 1, 1, 1) :|: o9798[LinkedList$Entry.next]o9798:0 > -1 && i3330:0 > i3120:0 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0 && o9798[LinkedList$Entry.previous]o9796:0 > -1 && o9965[LinkedList$Entry.next]o9963:0 > 0 && arith = i3330:0 - 1
f12929_0_entry_Load(x34, x35, x36, x37, x36, x36, x36) -> f12929_0_entry_Load(x34, x38, 1, x39, x40, x41, x42) :|: x37 > -1 && x35 > x34 && x43 < x37 && x40 < x36 && x36 > -1 && x43 > 0 && x40 > 0 && x38 = x35 - 1
f12929_0_entry_Load(x44, x45, x46, x47, x48, x49, x50) -> f12929_0_entry_Load(x44, x51, x52, x47, x53, x49, x54) :|: x48 > 0 && x46 > 0 && x50 > 0 && x47 > 0 && x45 > x44 && x53 < x48 && x49 > 0 && x52 > x46 && x55 < x50 && x54 > x55 && x55 > -1 && x51 = x45 - 1
f12929_0_entry_Load(x56, x57, x58, x59, x58, x58, x58) -> f12929_0_entry_Load(x56, x60, 1, 1, x61, x62, x63) :|: x59 > -1 && x57 > x56 && x64 < x59 && x61 < x58 && x58 > -1 && x61 > 0 && x60 = x57 - 1
f12929_0_entry_Load(x65, x66, x67, x68, x67, x67, x67) -> f12929_0_entry_Load(x65, x69, 1, 1, 1, 1, 1) :|: x68 > -1 && x66 > x65 && x70 < x68 && x71 < x67 && x67 > -1 && x69 = x66 - 1

----------------------------------------

(96) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12929_0_entry_Load(i3120:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(i3120:0, arith, 1, o10125[LinkedList$Entry.next]o10125:0, 1, 1, 1) :|: o9798[LinkedList$Entry.next]o9798:0 > -1 && i3330:0 > i3120:0 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0 && o9798[LinkedList$Entry.previous]o9796:0 > -1 && o9965[LinkedList$Entry.next]o9963:0 > 0 && arith = i3330:0 - 1
(2) f12929_0_entry_Load(x34, x35, x36, x37, x36, x36, x36) -> f12929_0_entry_Load(x34, x38, 1, x39, x40, x41, x42) :|: x37 > -1 && x35 > x34 && x43 < x37 && x40 < x36 && x36 > -1 && x43 > 0 && x40 > 0 && x38 = x35 - 1
(3) f12929_0_entry_Load(x44, x45, x46, x47, x48, x49, x50) -> f12929_0_entry_Load(x44, x51, x52, x47, x53, x49, x54) :|: x48 > 0 && x46 > 0 && x50 > 0 && x47 > 0 && x45 > x44 && x53 < x48 && x49 > 0 && x52 > x46 && x55 < x50 && x54 > x55 && x55 > -1 && x51 = x45 - 1
(4) f12929_0_entry_Load(x56, x57, x58, x59, x58, x58, x58) -> f12929_0_entry_Load(x56, x60, 1, 1, x61, x62, x63) :|: x59 > -1 && x57 > x56 && x64 < x59 && x61 < x58 && x58 > -1 && x61 > 0 && x60 = x57 - 1
(5) f12929_0_entry_Load(x65, x66, x67, x68, x67, x67, x67) -> f12929_0_entry_Load(x65, x69, 1, 1, 1, 1, 1) :|: x68 > -1 && x66 > x65 && x70 < x68 && x71 < x67 && x67 > -1 && x69 = x66 - 1

Arcs:
(1) -> (1), (3), (5)
(2) -> (1), (3), (5)
(3) -> (1), (2), (3), (4), (5)
(4) -> (3), (5)
(5) -> (3), (5)

This digraph is fully evaluated!
----------------------------------------

(97)
Obligation:

Termination digraph:
Nodes:
(1) f12929_0_entry_Load(i3120:0, i3330:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.next]o9798:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0, o9798[LinkedList$Entry.previous]o9796:0) -> f12929_0_entry_Load(i3120:0, arith, 1, o10125[LinkedList$Entry.next]o10125:0, 1, 1, 1) :|: o9798[LinkedList$Entry.next]o9798:0 > -1 && i3330:0 > i3120:0 && o9965[LinkedList$Entry.next]o9963:0 < o9798[LinkedList$Entry.next]o9798:0 && o9966[LinkedList$Entry.previous]o9963:0 < o9798[LinkedList$Entry.previous]o9796:0 && o9798[LinkedList$Entry.previous]o9796:0 > -1 && o9965[LinkedList$Entry.next]o9963:0 > 0 && arith = i3330:0 - 1
(2) f12929_0_entry_Load(x34, x35, x36, x37, x36, x36, x36) -> f12929_0_entry_Load(x34, x38, 1, x39, x40, x41, x42) :|: x37 > -1 && x35 > x34 && x43 < x37 && x40 < x36 && x36 > -1 && x43 > 0 && x40 > 0 && x38 = x35 - 1
(3) f12929_0_entry_Load(x44, x45, x46, x47, x48, x49, x50) -> f12929_0_entry_Load(x44, x51, x52, x47, x53, x49, x54) :|: x48 > 0 && x46 > 0 && x50 > 0 && x47 > 0 && x45 > x44 && x53 < x48 && x49 > 0 && x52 > x46 && x55 < x50 && x54 > x55 && x55 > -1 && x51 = x45 - 1
(4) f12929_0_entry_Load(x65, x66, x67, x68, x67, x67, x67) -> f12929_0_entry_Load(x65, x69, 1, 1, 1, 1, 1) :|: x68 > -1 && x66 > x65 && x70 < x68 && x71 < x67 && x67 > -1 && x69 = x66 - 1
(5) f12929_0_entry_Load(x56, x57, x58, x59, x58, x58, x58) -> f12929_0_entry_Load(x56, x60, 1, 1, x61, x62, x63) :|: x59 > -1 && x57 > x56 && x64 < x59 && x61 < x58 && x58 > -1 && x61 > 0 && x60 = x57 - 1

Arcs:
(1) -> (1), (3), (4)
(2) -> (1), (3), (4)
(3) -> (1), (2), (3), (4), (5)
(4) -> (3), (4)
(5) -> (3), (4)

This digraph is fully evaluated!

----------------------------------------

(98) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(99)
Obligation:
Rules:
f12929_0_entry_Load(x34:0, x35:0, x36:0, x37:0, x36:0, x36:0, x36:0) -> f12929_0_entry_Load(x34:0, x35:0 - 1, 1, x39:0, x40:0, x41:0, x42:0) :|: x43:0 > 0 && x40:0 > 0 && x36:0 > -1 && x40:0 < x36:0 && x43:0 < x37:0 && x35:0 > x34:0 && x37:0 > -1
f12929_0_entry_Load(x65:0, x66:0, x67:0, x68:0, x67:0, x67:0, x67:0) -> f12929_0_entry_Load(x65:0, x66:0 - 1, 1, 1, 1, 1, 1) :|: x71:0 < x67:0 && x67:0 > -1 && x70:0 < x68:0 && x66:0 > x65:0 && x68:0 > -1
f12929_0_entry_Load(x56:0, x57:0, x58:0, x59:0, x58:0, x58:0, x58:0) -> f12929_0_entry_Load(x56:0, x57:0 - 1, 1, 1, x61:0, x62:0, x63:0) :|: x58:0 > -1 && x61:0 > 0 && x61:0 < x58:0 && x64:0 < x59:0 && x57:0 > x56:0 && x59:0 > -1
f12929_0_entry_Load(i3120:0:0, i3330:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.next]o9798:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.previous]o9796:0:0) -> f12929_0_entry_Load(i3120:0:0, i3330:0:0 - 1, 1, o10125[LinkedList$Entry.next]o10125:0:0, 1, 1, 1) :|: o9798[LinkedList$Entry.previous]o9796:0:0 > -1 && o9965[LinkedList$Entry.next]o9963:0:0 > 0 && o9966[LinkedList$Entry.previous]o9963:0:0 < o9798[LinkedList$Entry.previous]o9796:0:0 && o9965[LinkedList$Entry.next]o9963:0:0 < o9798[LinkedList$Entry.next]o9798:0:0 && i3330:0:0 > i3120:0:0 && o9798[LinkedList$Entry.next]o9798:0:0 > -1
f12929_0_entry_Load(x44:0, x45:0, x46:0, x47:0, x48:0, x49:0, x50:0) -> f12929_0_entry_Load(x44:0, x45:0 - 1, x52:0, x47:0, x53:0, x49:0, x54:0) :|: x55:0 < x54:0 && x55:0 > -1 && x55:0 < x50:0 && x52:0 > x46:0 && x49:0 > 0 && x53:0 < x48:0 && x45:0 > x44:0 && x47:0 > 0 && x50:0 > 0 && x46:0 > 0 && x48:0 > 0

----------------------------------------

(100) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12929_0_entry_Load(INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(101)
Obligation:
Rules:
f12929_0_entry_Load(x34:0, x35:0, x36:0, x37:0, x36:0, x36:0, x36:0) -> f12929_0_entry_Load(x34:0, c, c1, x39:0, x40:0, x41:0, x42:0) :|: c1 = 1 && c = x35:0 - 1 && (x43:0 > 0 && x40:0 > 0 && x36:0 > -1 && x40:0 < x36:0 && x43:0 < x37:0 && x35:0 > x34:0 && x37:0 > -1)
f12929_0_entry_Load(x65:0, x66:0, x67:0, x68:0, x67:0, x67:0, x67:0) -> f12929_0_entry_Load(x65:0, c2, c3, c4, c5, c6, c7) :|: c7 = 1 && (c6 = 1 && (c5 = 1 && (c4 = 1 && (c3 = 1 && c2 = x66:0 - 1)))) && (x71:0 < x67:0 && x67:0 > -1 && x70:0 < x68:0 && x66:0 > x65:0 && x68:0 > -1)
f12929_0_entry_Load(x56:0, x57:0, x58:0, x59:0, x58:0, x58:0, x58:0) -> f12929_0_entry_Load(x56:0, c8, c9, c10, x61:0, x62:0, x63:0) :|: c10 = 1 && (c9 = 1 && c8 = x57:0 - 1) && (x58:0 > -1 && x61:0 > 0 && x61:0 < x58:0 && x64:0 < x59:0 && x57:0 > x56:0 && x59:0 > -1)
f12929_0_entry_Load(i3120:0:0, i3330:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.next]o9798:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.previous]o9796:0:0) -> f12929_0_entry_Load(i3120:0:0, c11, c12, o10125[LinkedList$Entry.next]o10125:0:0, c13, c14, c15) :|: c15 = 1 && (c14 = 1 && (c13 = 1 && (c12 = 1 && c11 = i3330:0:0 - 1))) && (o9798[LinkedList$Entry.previous]o9796:0:0 > -1 && o9965[LinkedList$Entry.next]o9963:0:0 > 0 && o9966[LinkedList$Entry.previous]o9963:0:0 < o9798[LinkedList$Entry.previous]o9796:0:0 && o9965[LinkedList$Entry.next]o9963:0:0 < o9798[LinkedList$Entry.next]o9798:0:0 && i3330:0:0 > i3120:0:0 && o9798[LinkedList$Entry.next]o9798:0:0 > -1)
f12929_0_entry_Load(x44:0, x45:0, x46:0, x47:0, x48:0, x49:0, x50:0) -> f12929_0_entry_Load(x44:0, c16, x52:0, x47:0, x53:0, x49:0, x54:0) :|: c16 = x45:0 - 1 && (x55:0 < x54:0 && x55:0 > -1 && x55:0 < x50:0 && x52:0 > x46:0 && x49:0 > 0 && x53:0 < x48:0 && x45:0 > x44:0 && x47:0 > 0 && x50:0 > 0 && x46:0 > 0 && x48:0 > 0)

----------------------------------------

(102) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12929_0_entry_Load(x, x1, x2, x3, x4, x5, x6)] = -2 - x + x1 + x4

The following rules are decreasing:
f12929_0_entry_Load(x34:0, x35:0, x36:0, x37:0, x36:0, x36:0, x36:0) -> f12929_0_entry_Load(x34:0, c, c1, x39:0, x40:0, x41:0, x42:0) :|: c1 = 1 && c = x35:0 - 1 && (x43:0 > 0 && x40:0 > 0 && x36:0 > -1 && x40:0 < x36:0 && x43:0 < x37:0 && x35:0 > x34:0 && x37:0 > -1)
f12929_0_entry_Load(x56:0, x57:0, x58:0, x59:0, x58:0, x58:0, x58:0) -> f12929_0_entry_Load(x56:0, c8, c9, c10, x61:0, x62:0, x63:0) :|: c10 = 1 && (c9 = 1 && c8 = x57:0 - 1) && (x58:0 > -1 && x61:0 > 0 && x61:0 < x58:0 && x64:0 < x59:0 && x57:0 > x56:0 && x59:0 > -1)
f12929_0_entry_Load(x44:0, x45:0, x46:0, x47:0, x48:0, x49:0, x50:0) -> f12929_0_entry_Load(x44:0, c16, x52:0, x47:0, x53:0, x49:0, x54:0) :|: c16 = x45:0 - 1 && (x55:0 < x54:0 && x55:0 > -1 && x55:0 < x50:0 && x52:0 > x46:0 && x49:0 > 0 && x53:0 < x48:0 && x45:0 > x44:0 && x47:0 > 0 && x50:0 > 0 && x46:0 > 0 && x48:0 > 0)
The following rules are bounded:
f12929_0_entry_Load(x34:0, x35:0, x36:0, x37:0, x36:0, x36:0, x36:0) -> f12929_0_entry_Load(x34:0, c, c1, x39:0, x40:0, x41:0, x42:0) :|: c1 = 1 && c = x35:0 - 1 && (x43:0 > 0 && x40:0 > 0 && x36:0 > -1 && x40:0 < x36:0 && x43:0 < x37:0 && x35:0 > x34:0 && x37:0 > -1)
f12929_0_entry_Load(x56:0, x57:0, x58:0, x59:0, x58:0, x58:0, x58:0) -> f12929_0_entry_Load(x56:0, c8, c9, c10, x61:0, x62:0, x63:0) :|: c10 = 1 && (c9 = 1 && c8 = x57:0 - 1) && (x58:0 > -1 && x61:0 > 0 && x61:0 < x58:0 && x64:0 < x59:0 && x57:0 > x56:0 && x59:0 > -1)
f12929_0_entry_Load(x44:0, x45:0, x46:0, x47:0, x48:0, x49:0, x50:0) -> f12929_0_entry_Load(x44:0, c16, x52:0, x47:0, x53:0, x49:0, x54:0) :|: c16 = x45:0 - 1 && (x55:0 < x54:0 && x55:0 > -1 && x55:0 < x50:0 && x52:0 > x46:0 && x49:0 > 0 && x53:0 < x48:0 && x45:0 > x44:0 && x47:0 > 0 && x50:0 > 0 && x46:0 > 0 && x48:0 > 0)

----------------------------------------

(103)
Obligation:
Rules:
f12929_0_entry_Load(x65:0, x66:0, x67:0, x68:0, x67:0, x67:0, x67:0) -> f12929_0_entry_Load(x65:0, c2, c3, c4, c5, c6, c7) :|: c7 = 1 && (c6 = 1 && (c5 = 1 && (c4 = 1 && (c3 = 1 && c2 = x66:0 - 1)))) && (x71:0 < x67:0 && x67:0 > -1 && x70:0 < x68:0 && x66:0 > x65:0 && x68:0 > -1)
f12929_0_entry_Load(i3120:0:0, i3330:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.next]o9798:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.previous]o9796:0:0) -> f12929_0_entry_Load(i3120:0:0, c11, c12, o10125[LinkedList$Entry.next]o10125:0:0, c13, c14, c15) :|: c15 = 1 && (c14 = 1 && (c13 = 1 && (c12 = 1 && c11 = i3330:0:0 - 1))) && (o9798[LinkedList$Entry.previous]o9796:0:0 > -1 && o9965[LinkedList$Entry.next]o9963:0:0 > 0 && o9966[LinkedList$Entry.previous]o9963:0:0 < o9798[LinkedList$Entry.previous]o9796:0:0 && o9965[LinkedList$Entry.next]o9963:0:0 < o9798[LinkedList$Entry.next]o9798:0:0 && i3330:0:0 > i3120:0:0 && o9798[LinkedList$Entry.next]o9798:0:0 > -1)

----------------------------------------

(104) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f12929_0_entry_Load ] = f12929_0_entry_Load_2 + -1*f12929_0_entry_Load_1

The following rules are decreasing:
f12929_0_entry_Load(x65:0, x66:0, x67:0, x68:0, x67:0, x67:0, x67:0) -> f12929_0_entry_Load(x65:0, c2, c3, c4, c5, c6, c7) :|: c7 = 1 && (c6 = 1 && (c5 = 1 && (c4 = 1 && (c3 = 1 && c2 = x66:0 - 1)))) && (x71:0 < x67:0 && x67:0 > -1 && x70:0 < x68:0 && x66:0 > x65:0 && x68:0 > -1)
f12929_0_entry_Load(i3120:0:0, i3330:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.next]o9798:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.previous]o9796:0:0) -> f12929_0_entry_Load(i3120:0:0, c11, c12, o10125[LinkedList$Entry.next]o10125:0:0, c13, c14, c15) :|: c15 = 1 && (c14 = 1 && (c13 = 1 && (c12 = 1 && c11 = i3330:0:0 - 1))) && (o9798[LinkedList$Entry.previous]o9796:0:0 > -1 && o9965[LinkedList$Entry.next]o9963:0:0 > 0 && o9966[LinkedList$Entry.previous]o9963:0:0 < o9798[LinkedList$Entry.previous]o9796:0:0 && o9965[LinkedList$Entry.next]o9963:0:0 < o9798[LinkedList$Entry.next]o9798:0:0 && i3330:0:0 > i3120:0:0 && o9798[LinkedList$Entry.next]o9798:0:0 > -1)

The following rules are bounded:
f12929_0_entry_Load(x65:0, x66:0, x67:0, x68:0, x67:0, x67:0, x67:0) -> f12929_0_entry_Load(x65:0, c2, c3, c4, c5, c6, c7) :|: c7 = 1 && (c6 = 1 && (c5 = 1 && (c4 = 1 && (c3 = 1 && c2 = x66:0 - 1)))) && (x71:0 < x67:0 && x67:0 > -1 && x70:0 < x68:0 && x66:0 > x65:0 && x68:0 > -1)
f12929_0_entry_Load(i3120:0:0, i3330:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.next]o9798:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.previous]o9796:0:0, o9798[LinkedList$Entry.previous]o9796:0:0) -> f12929_0_entry_Load(i3120:0:0, c11, c12, o10125[LinkedList$Entry.next]o10125:0:0, c13, c14, c15) :|: c15 = 1 && (c14 = 1 && (c13 = 1 && (c12 = 1 && c11 = i3330:0:0 - 1))) && (o9798[LinkedList$Entry.previous]o9796:0:0 > -1 && o9965[LinkedList$Entry.next]o9963:0:0 > 0 && o9966[LinkedList$Entry.previous]o9963:0:0 < o9798[LinkedList$Entry.previous]o9796:0:0 && o9965[LinkedList$Entry.next]o9963:0:0 < o9798[LinkedList$Entry.next]o9798:0:0 && i3330:0:0 > i3120:0:0 && o9798[LinkedList$Entry.next]o9798:0:0 > -1)


----------------------------------------

(105)
YES

----------------------------------------

(106)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateLastIndexOf.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList: [header]
*javaUtilEx.LinkedList$Entry: [element, previous]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(107) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 62 IRulesP rules:
f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(o9337sub0), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335) -> f12771_0_lastIndexOf_FieldAccess(EOS(STATIC_12771), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(o9337sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335) :|: TRUE
f12771_0_lastIndexOf_FieldAccess(EOS(STATIC_12771), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(o9337sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335) -> f12779_0_lastIndexOf_EQ(EOS(STATIC_12779), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(o9337sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793, java.lang.Object(o9335sub514111793))), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335) :|: TRUE
f12779_0_lastIndexOf_EQ(EOS(STATIC_12779), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(o9337sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793, java.lang.Object(o9335sub514111793))), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335) -> f12786_0_lastIndexOf_EQ(EOS(STATIC_12786), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(o9337sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793, java.lang.Object(o9335sub514111793))), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335, o9337[LinkedList$Entry.previous]o9333) :|: o9337[LinkedList$Entry.previous]o9333 > 0
f12786_0_lastIndexOf_EQ(EOS(STATIC_12786), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(o9337sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793, java.lang.Object(o9335sub514111793))), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335, o9337[LinkedList$Entry.previous]o9333) -> f12795_0_lastIndexOf_Inc(EOS(STATIC_12795), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335, o9337[LinkedList$Entry.previous]o9333) :|: TRUE
f12795_0_lastIndexOf_Inc(EOS(STATIC_12795), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335, o9337[LinkedList$Entry.previous]o9333) -> f12805_0_lastIndexOf_Load(EOS(STATIC_12805), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335, o9337[LinkedList$Entry.previous]o9333) :|: TRUE
f12805_0_lastIndexOf_Load(EOS(STATIC_12805), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335, o9337[LinkedList$Entry.previous]o9333) -> f12813_0_lastIndexOf_Load(EOS(STATIC_12813), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(javaUtilEx.Content(EOC)), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335, o9337[LinkedList$Entry.previous]o9333) :|: TRUE
f12813_0_lastIndexOf_Load(EOS(STATIC_12813), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(javaUtilEx.Content(EOC)), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335, o9337[LinkedList$Entry.previous]o9333) -> f12822_0_lastIndexOf_FieldAccess(EOS(STATIC_12822), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335, o9337[LinkedList$Entry.previous]o9333) :|: TRUE
f12822_0_lastIndexOf_FieldAccess(EOS(STATIC_12822), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335, o9337[LinkedList$Entry.previous]o9333) -> f12834_0_lastIndexOf_FieldAccess(EOS(STATIC_12834), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335) :|: o9335[LinkedList$Entry.previous]o9337 > 0 && o9337[LinkedList$Entry.previous]o9335 > 0
f12822_0_lastIndexOf_FieldAccess(EOS(STATIC_12822), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9622sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9622sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9622sub0), o9622[LinkedList$Entry.previous]o9622, o9622[LinkedList$Entry.previous]o9333, o9622[LinkedList$Entry.previous]o9622, o9622[LinkedList$Entry.previous]o9333) -> f12835_0_lastIndexOf_FieldAccess(EOS(STATIC_12835), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9622sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9622sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9622sub0), o9622[LinkedList$Entry.previous]o9333, o9622[LinkedList$Entry.previous]o9622) :|: TRUE
f12834_0_lastIndexOf_FieldAccess(EOS(STATIC_12834), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), o9335[LinkedList$Entry.previous]o9641, o9335[LinkedList$Entry.previous]o9333, o9641[LinkedList$Entry.previous]o9333, o9641[LinkedList$Entry.previous]o9335) -> f12846_0_lastIndexOf_FieldAccess(EOS(STATIC_12846), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: o9644[LinkedList$Entry.previous]o9333 < o9641[LinkedList$Entry.previous]o9333 && o9641[LinkedList$Entry.previous]o9333 >= 0 && o9644[LinkedList$Entry.previous]o9335 < o9641[LinkedList$Entry.previous]o9335 && o9641[LinkedList$Entry.previous]o9335 >= 0
f12846_0_lastIndexOf_FieldAccess(EOS(STATIC_12846), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f12859_0_lastIndexOf_InvokeMethod(EOS(STATIC_12859), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), java.lang.Object(javaUtilEx.Content(EOC)), o96420, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: TRUE
f12859_0_lastIndexOf_InvokeMethod(EOS(STATIC_12859), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), java.lang.Object(javaUtilEx.Content(EOC)), o96420, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f12876_0_equals_Load(EOS(STATIC_12876), java.lang.Object(javaUtilEx.Content(EOC)), o96420, java.lang.Object(o9335sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793, java.lang.Object(o9335sub514111793))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), java.lang.Object(o9644sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96420, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: i3235 > 1 && i3298 < i2886
f12859_0_lastIndexOf_InvokeMethod(EOS(STATIC_12859), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), java.lang.Object(javaUtilEx.Content(EOC)), o96420, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f12876_1_equals_Load(EOS(STATIC_12876), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), java.lang.Object(javaUtilEx.Content(EOC)), o96420, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: i3235 > 1 && i3298 < i2886
f12876_0_equals_Load(EOS(STATIC_12876), java.lang.Object(javaUtilEx.Content(EOC)), o96420, java.lang.Object(o9335sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793, java.lang.Object(o9335sub514111793))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), java.lang.Object(o9644sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96420, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f14942_0_equals_Load(EOS(STATIC_14942), java.lang.Object(javaUtilEx.Content(EOC)), o96420, java.lang.Object(o9335sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793, java.lang.Object(o9335sub514111793))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065, java.lang.Object(o9644sub514202065))), java.lang.Object(o9644sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96420, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: TRUE
f13601_0_equals_Return(EOS(STATIC_13601), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9644sub514202065))), matching1, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f13066_0_equals_Return(EOS(STATIC_13066), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9644sub514202065))), 0, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: TRUE && matching1 = 0
f13066_0_equals_Return(EOS(STATIC_13066), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10207-1540579056, java.lang.Object(o10209sub-1540579056))), matching1, o10204[LinkedList$Entry.previous]o10202, o10204[LinkedList$Entry.previous]o10206, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204) -> f13087_0_lastIndexOf_EQ(EOS(STATIC_13087), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10207-1540579056, java.lang.Object(o10209sub-1540579056))), 0, o10204[LinkedList$Entry.previous]o10202, o10204[LinkedList$Entry.previous]o10206, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204) :|: TRUE && matching1 = 0
f13087_0_lastIndexOf_EQ(EOS(STATIC_13087), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10207-1540579056, java.lang.Object(o10209sub-1540579056))), matching1, o10204[LinkedList$Entry.previous]o10202, o10204[LinkedList$Entry.previous]o10206, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204) -> f13109_0_lastIndexOf_Load(EOS(STATIC_13109), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10207-1540579056, java.lang.Object(o10209sub-1540579056))), o10204[LinkedList$Entry.previous]o10202, o10204[LinkedList$Entry.previous]o10206, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204) :|: TRUE && matching1 = 0
f13109_0_lastIndexOf_Load(EOS(STATIC_13109), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10207-1540579056, java.lang.Object(o10209sub-1540579056))), o10204[LinkedList$Entry.previous]o10202, o10204[LinkedList$Entry.previous]o10206, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204) -> f13131_0_lastIndexOf_FieldAccess(EOS(STATIC_13131), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10207-1540579056, java.lang.Object(o10209sub-1540579056))), o10204[LinkedList$Entry.previous]o10202, o10204[LinkedList$Entry.previous]o10206, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204) :|: TRUE
f13131_0_lastIndexOf_FieldAccess(EOS(STATIC_13131), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10207-1540579056, java.lang.Object(o10209sub-1540579056))), o10204[LinkedList$Entry.previous]o10202, o10204[LinkedList$Entry.previous]o10206, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204) -> f13148_0_lastIndexOf_Store(EOS(STATIC_13148), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10209sub0), o10204[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204, o10204[LinkedList$Entry.previous]o10209) :|: o10204[LinkedList$Entry.previous]o10209 > o10204[LinkedList$Entry.previous]o10206 && o10204[LinkedList$Entry.previous]o10206 >= 0
f13148_0_lastIndexOf_Store(EOS(STATIC_13148), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10209sub0), o10204[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204, o10204[LinkedList$Entry.previous]o10209) -> f13162_0_lastIndexOf_JMP(EOS(STATIC_13162), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10209sub0), o10204[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204, o10204[LinkedList$Entry.previous]o10209) :|: TRUE
f13162_0_lastIndexOf_JMP(EOS(STATIC_13162), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10209sub0), o10204[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204, o10204[LinkedList$Entry.previous]o10209) -> f13177_0_lastIndexOf_Load(EOS(STATIC_13177), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10209sub0), o10204[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204, o10204[LinkedList$Entry.previous]o10209) :|: TRUE
f13177_0_lastIndexOf_Load(EOS(STATIC_13177), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10209sub0), o10204[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204, o10204[LinkedList$Entry.previous]o10209) -> f12755_0_lastIndexOf_Load(EOS(STATIC_12755), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102031213808905, java.lang.Object(o10204sub1213808905)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10209sub0), o10204[LinkedList$Entry.previous]o10209, o10204[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10202, o10209[LinkedList$Entry.previous]o10204) :|: TRUE
f12755_0_lastIndexOf_Load(EOS(STATIC_12755), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335) -> f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9337sub0), java.lang.Object(o9337sub0), o9335[LinkedList$Entry.previous]o9337, o9335[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9333, o9337[LinkedList$Entry.previous]o9335) :|: TRUE
f13614_0_equals_Return(EOS(STATIC_13614), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13280sub514202065), java.lang.Object(o9644sub514202065))), matching1, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f13066_0_equals_Return(EOS(STATIC_13066), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13280sub514202065), java.lang.Object(o9644sub514202065))), 0, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: TRUE && matching1 = 0
f13712_0_equals_Return(EOS(STATIC_13712), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9644sub514202065))), matching1, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f13232_0_equals_Return(EOS(STATIC_13232), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9644sub514202065))), 0, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: TRUE && matching1 = 0
f13232_0_equals_Return(EOS(STATIC_13232), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub-1539711335))), i3620, o11042[LinkedList$Entry.previous]o11040, o11042[LinkedList$Entry.previous]o11044, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042) -> f13247_0_lastIndexOf_EQ(EOS(STATIC_13247), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub-1539711335))), i3620, o11042[LinkedList$Entry.previous]o11040, o11042[LinkedList$Entry.previous]o11044, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042) :|: TRUE
f13247_0_lastIndexOf_EQ(EOS(STATIC_13247), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub-1539711335))), matching1, o11042[LinkedList$Entry.previous]o11040, o11042[LinkedList$Entry.previous]o11044, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042) -> f13259_0_lastIndexOf_EQ(EOS(STATIC_13259), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub-1539711335))), 0, o11042[LinkedList$Entry.previous]o11040, o11042[LinkedList$Entry.previous]o11044, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042) :|: TRUE && matching1 = 0
f13259_0_lastIndexOf_EQ(EOS(STATIC_13259), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub-1539711335))), matching1, o11042[LinkedList$Entry.previous]o11040, o11042[LinkedList$Entry.previous]o11044, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042) -> f13272_0_lastIndexOf_Load(EOS(STATIC_13272), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub-1539711335))), o11042[LinkedList$Entry.previous]o11040, o11042[LinkedList$Entry.previous]o11044, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042) :|: TRUE && matching1 = 0
f13272_0_lastIndexOf_Load(EOS(STATIC_13272), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub-1539711335))), o11042[LinkedList$Entry.previous]o11040, o11042[LinkedList$Entry.previous]o11044, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042) -> f13285_0_lastIndexOf_FieldAccess(EOS(STATIC_13285), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub-1539711335))), o11042[LinkedList$Entry.previous]o11040, o11042[LinkedList$Entry.previous]o11044, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042) :|: TRUE
f13285_0_lastIndexOf_FieldAccess(EOS(STATIC_13285), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub-1539711335))), o11042[LinkedList$Entry.previous]o11040, o11042[LinkedList$Entry.previous]o11044, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042) -> f13297_0_lastIndexOf_Store(EOS(STATIC_13297), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub0), o11042[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042, o11042[LinkedList$Entry.previous]o11047) :|: o11042[LinkedList$Entry.previous]o11047 > o11042[LinkedList$Entry.previous]o11044 && o11042[LinkedList$Entry.previous]o11044 >= 0
f13297_0_lastIndexOf_Store(EOS(STATIC_13297), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub0), o11042[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042, o11042[LinkedList$Entry.previous]o11047) -> f13148_0_lastIndexOf_Store(EOS(STATIC_13148), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110411215543696, java.lang.Object(o11042sub1215543696)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub0), o11042[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11040, o11047[LinkedList$Entry.previous]o11042, o11042[LinkedList$Entry.previous]o11047) :|: TRUE
f13721_0_equals_Return(EOS(STATIC_13721), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9644sub514202065))), matching1, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f13232_0_equals_Return(EOS(STATIC_13232), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9644sub514202065))), 1, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: TRUE && matching1 = 1
f12835_0_lastIndexOf_FieldAccess(EOS(STATIC_12835), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), o9645[LinkedList$Entry.previous]o9333, o9645[LinkedList$Entry.previous]o9645) -> f12847_0_lastIndexOf_FieldAccess(EOS(STATIC_12847), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: o9648[LinkedList$Entry.previous]o9333 < o9645[LinkedList$Entry.previous]o9333 && o9645[LinkedList$Entry.previous]o9333 >= 0 && o9648[LinkedList$Entry.previous]o9645 < o9645[LinkedList$Entry.previous]o9645 && o9645[LinkedList$Entry.previous]o9645 >= 0
f12847_0_lastIndexOf_FieldAccess(EOS(STATIC_12847), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f12860_0_lastIndexOf_InvokeMethod(EOS(STATIC_12860), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), java.lang.Object(javaUtilEx.Content(EOC)), o96460, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: TRUE
f12860_0_lastIndexOf_InvokeMethod(EOS(STATIC_12860), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), java.lang.Object(javaUtilEx.Content(EOC)), o96460, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f12877_0_equals_Load(EOS(STATIC_12877), java.lang.Object(javaUtilEx.Content(EOC)), o96460, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461028313982, java.lang.Object(o9648sub1028313982))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), java.lang.Object(o9648sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96460, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: i3235 > 1 && i3298 < i2886
f12860_0_lastIndexOf_InvokeMethod(EOS(STATIC_12860), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), java.lang.Object(javaUtilEx.Content(EOC)), o96460, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f12877_1_equals_Load(EOS(STATIC_12877), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), java.lang.Object(javaUtilEx.Content(EOC)), o96460, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: i3235 > 1 && i3298 < i2886
f12877_0_equals_Load(EOS(STATIC_12877), java.lang.Object(javaUtilEx.Content(EOC)), o96460, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461028313982, java.lang.Object(o9648sub1028313982))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), java.lang.Object(o9648sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96460, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f15012_0_equals_Load(EOS(STATIC_15012), java.lang.Object(javaUtilEx.Content(EOC)), o96460, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461028313982, java.lang.Object(o9648sub1028313982))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189, java.lang.Object(o9648sub514202189))), java.lang.Object(o9648sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96460, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: TRUE
f13602_0_equals_Return(EOS(STATIC_13602), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub514202189))), matching1, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f13068_0_equals_Return(EOS(STATIC_13068), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub514202189))), 0, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: TRUE && matching1 = 0
f13068_0_equals_Return(EOS(STATIC_13068), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102441213816655, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-326758588, java.lang.Object(o10248sub-326758588)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-1540575243, java.lang.Object(o10248sub-1540575243))), matching1, o10248[LinkedList$Entry.previous]o10243, o10248[LinkedList$Entry.previous]o10245) -> f13088_0_lastIndexOf_EQ(EOS(STATIC_13088), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102441213816655, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-326758588, java.lang.Object(o10248sub-326758588)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-1540575243, java.lang.Object(o10248sub-1540575243))), 0, o10248[LinkedList$Entry.previous]o10243, o10248[LinkedList$Entry.previous]o10245) :|: TRUE && matching1 = 0
f13088_0_lastIndexOf_EQ(EOS(STATIC_13088), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102441213816655, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-326758588, java.lang.Object(o10248sub-326758588)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-1540575243, java.lang.Object(o10248sub-1540575243))), matching1, o10248[LinkedList$Entry.previous]o10243, o10248[LinkedList$Entry.previous]o10245) -> f13110_0_lastIndexOf_Load(EOS(STATIC_13110), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102441213816655, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-326758588, java.lang.Object(o10248sub-326758588)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-1540575243, java.lang.Object(o10248sub-1540575243))), o10248[LinkedList$Entry.previous]o10243, o10248[LinkedList$Entry.previous]o10245) :|: TRUE && matching1 = 0
f13110_0_lastIndexOf_Load(EOS(STATIC_13110), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102441213816655, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-326758588, java.lang.Object(o10248sub-326758588)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-1540575243, java.lang.Object(o10248sub-1540575243))), o10248[LinkedList$Entry.previous]o10243, o10248[LinkedList$Entry.previous]o10245) -> f13132_0_lastIndexOf_FieldAccess(EOS(STATIC_13132), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102441213816655, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-326758588, java.lang.Object(o10248sub-326758588)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-1540575243, java.lang.Object(o10248sub-1540575243))), o10248[LinkedList$Entry.previous]o10243, o10248[LinkedList$Entry.previous]o10245) :|: TRUE
f13132_0_lastIndexOf_FieldAccess(EOS(STATIC_13132), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102441213816655, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-326758588, java.lang.Object(o10248sub-326758588)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-1540575243, java.lang.Object(o10248sub-1540575243))), o10248[LinkedList$Entry.previous]o10243, o10248[LinkedList$Entry.previous]o10245) -> f13149_0_lastIndexOf_Store(EOS(STATIC_13149), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102441213816655, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-326758588, java.lang.Object(o10248sub-326758588)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10248sub0), o10248[LinkedList$Entry.previous]o10243, o10248[LinkedList$Entry.previous]o10245) :|: TRUE
f13149_0_lastIndexOf_Store(EOS(STATIC_13149), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102441213816655, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-326758588, java.lang.Object(o10248sub-326758588)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10248sub0), o10248[LinkedList$Entry.previous]o10243, o10248[LinkedList$Entry.previous]o10245) -> f13297_0_lastIndexOf_Store(EOS(STATIC_13297), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o102441213816655, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10246-326758588, java.lang.Object(o10248sub-326758588)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10248sub0), o10245[LinkedList$Entry.previous]o10243, o10248[LinkedList$Entry.previous]o10243, o10248[LinkedList$Entry.previous]o10245, o10245[LinkedList$Entry.previous]o10248) :|: o10245[LinkedList$Entry.previous]o10248 = 1
f13615_0_equals_Return(EOS(STATIC_13615), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub1542425744), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub514202189), java.lang.Object(o9648sub514202189))), matching1, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f13068_0_equals_Return(EOS(STATIC_13068), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub1542425744), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub514202189), java.lang.Object(o9648sub514202189))), 0, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: TRUE && matching1 = 0
f13713_0_equals_Return(EOS(STATIC_13713), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub514202189))), matching1, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f13234_0_equals_Return(EOS(STATIC_13234), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub514202189))), 0, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: TRUE && matching1 = 0
f13234_0_equals_Return(EOS(STATIC_13234), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-1539708545))), i3636, o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) -> f13248_0_lastIndexOf_EQ(EOS(STATIC_13248), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-1539708545))), i3636, o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) :|: TRUE
f13248_0_lastIndexOf_EQ(EOS(STATIC_13248), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-1539708545))), matching1, o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) -> f13261_0_lastIndexOf_EQ(EOS(STATIC_13261), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-1539708545))), 0, o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) :|: TRUE && matching1 = 0
f13261_0_lastIndexOf_EQ(EOS(STATIC_13261), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-1539708545))), matching1, o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) -> f13274_0_lastIndexOf_Load(EOS(STATIC_13274), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-1539708545))), o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) :|: TRUE && matching1 = 0
f13274_0_lastIndexOf_Load(EOS(STATIC_13274), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-1539708545))), o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) -> f13286_0_lastIndexOf_FieldAccess(EOS(STATIC_13286), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-1539708545))), o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) :|: TRUE
f13286_0_lastIndexOf_FieldAccess(EOS(STATIC_13286), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-1539708545))), o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) -> f13298_0_lastIndexOf_Store(EOS(STATIC_13298), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub0), o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) :|: TRUE
f13298_0_lastIndexOf_Store(EOS(STATIC_13298), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub0), o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) -> f13308_0_lastIndexOf_JMP(EOS(STATIC_13308), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub0), o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) :|: TRUE
f13308_0_lastIndexOf_JMP(EOS(STATIC_13308), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub0), o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) -> f13322_0_lastIndexOf_Load(EOS(STATIC_13322), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub0), o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) :|: TRUE
f13322_0_lastIndexOf_Load(EOS(STATIC_13322), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub0), o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) -> f12755_0_lastIndexOf_Load(EOS(STATIC_12755), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110701215548749, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub-324159796)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub0), o11071[LinkedList$Entry.previous]o11074, o11071[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11069, o11074[LinkedList$Entry.previous]o11071) :|: o11071[LinkedList$Entry.previous]o11074 = 1
f13722_0_equals_Return(EOS(STATIC_13722), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub514202189))), matching1, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f13234_0_equals_Return(EOS(STATIC_13234), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub514202189))), 1, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: TRUE && matching1 = 1
f12876_1_equals_Load(EOS(STATIC_12876), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9644sub514202065))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f13601_0_equals_Return(EOS(STATIC_13601), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9644sub514202065))), 0, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: TRUE
f12876_1_equals_Load(EOS(STATIC_12876), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13280sub514202065), java.lang.Object(o9644sub514202065))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13280sub0), o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f13614_0_equals_Return(EOS(STATIC_13614), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13280sub514202065), java.lang.Object(o9644sub514202065))), 0, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: TRUE
f12876_1_equals_Load(EOS(STATIC_12876), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9644sub514202065))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f13712_0_equals_Return(EOS(STATIC_13712), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9644sub514202065))), 0, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: TRUE
f12876_1_equals_Load(EOS(STATIC_12876), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9644sub514202065))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) -> f13721_0_equals_Return(EOS(STATIC_13721), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(o9335sub1028223555)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9644sub514202065))), 1, o9335[LinkedList$Entry.previous]o9333, o9335[LinkedList$Entry.previous]o9641, o9644[LinkedList$Entry.previous]o9333, o9644[LinkedList$Entry.previous]o9335) :|: TRUE
f12877_1_equals_Load(EOS(STATIC_12877), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub514202189))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f13602_0_equals_Return(EOS(STATIC_13602), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub514202189))), 0, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: TRUE
f12877_1_equals_Load(EOS(STATIC_12877), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub1542425744), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub514202189), java.lang.Object(o9648sub514202189))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13294sub0), o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f13615_0_equals_Return(EOS(STATIC_13615), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub1542425744), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub514202189), java.lang.Object(o9648sub514202189))), 0, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: TRUE
f12877_1_equals_Load(EOS(STATIC_12877), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub514202189))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f13713_0_equals_Return(EOS(STATIC_13713), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub514202189))), 0, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: TRUE
f12877_1_equals_Load(EOS(STATIC_12877), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub514202189))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) -> f13722_0_equals_Return(EOS(STATIC_13722), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub1542425744)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub514202189))), 1, o9648[LinkedList$Entry.previous]o9333, o9648[LinkedList$Entry.previous]o9645) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub514202189:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub514202189:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0) -> f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10248sub0:0), java.lang.Object(o10248sub0:0), 1, o10245[LinkedList$Entry.previous]o10243:0, o9648[LinkedList$Entry.previous]o9333:0, o9648[LinkedList$Entry.previous]o9645:0) :|: o9335[LinkedList$Entry.previous]o9333:0 > 0 && o9648[LinkedList$Entry.previous]o9333:0 < o9335[LinkedList$Entry.previous]o9333:0 && o9648[LinkedList$Entry.previous]o9645:0 < o9335[LinkedList$Entry.previous]o9337:0 && o9335[LinkedList$Entry.previous]o9337:0 > -1 && i3235:0 > 1 && i3298:0 < i2886:0
f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9644sub514202065:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9644sub514202065:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9335:0) -> f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11047sub0:0), java.lang.Object(o11047sub0:0), o11042[LinkedList$Entry.previous]o11047:0, o9335[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9335:0) :|: o9337[LinkedList$Entry.previous]o9333:0 > 0 && o9337[LinkedList$Entry.previous]o9335:0 > 0 && o9335[LinkedList$Entry.previous]o9337:0 > 0 && o9644[LinkedList$Entry.previous]o9333:0 < o9337[LinkedList$Entry.previous]o9333:0 && o9644[LinkedList$Entry.previous]o9335:0 < o9337[LinkedList$Entry.previous]o9335:0 && o9335[LinkedList$Entry.previous]o9337:0 < o11042[LinkedList$Entry.previous]o11047:0 && i3235:0 > 1 && i3298:0 < i2886:0
f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub514202189:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub514202189:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0) -> f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11074sub0:0), java.lang.Object(o11074sub0:0), 1, o11071[LinkedList$Entry.previous]o11069:0, o9648[LinkedList$Entry.previous]o9333:0, o9648[LinkedList$Entry.previous]o9645:0) :|: o9335[LinkedList$Entry.previous]o9333:0 > 0 && o9648[LinkedList$Entry.previous]o9333:0 < o9335[LinkedList$Entry.previous]o9333:0 && o9648[LinkedList$Entry.previous]o9645:0 < o9335[LinkedList$Entry.previous]o9337:0 && o9335[LinkedList$Entry.previous]o9337:0 > -1 && i3235:0 > 1 && i3298:0 < i2886:0
f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9644sub514202065:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9644sub514202065:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9335:0) -> f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10209sub0:0), java.lang.Object(o10209sub0:0), o10204[LinkedList$Entry.previous]o10209:0, o9335[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9335:0) :|: o9337[LinkedList$Entry.previous]o9333:0 > 0 && o9337[LinkedList$Entry.previous]o9335:0 > 0 && o9335[LinkedList$Entry.previous]o9337:0 > 0 && o9644[LinkedList$Entry.previous]o9333:0 < o9337[LinkedList$Entry.previous]o9333:0 && o9335[LinkedList$Entry.previous]o9337:0 < o10204[LinkedList$Entry.previous]o10209:0 && o9644[LinkedList$Entry.previous]o9335:0 < o9337[LinkedList$Entry.previous]o9335:0 && i3235:0 > 1 && i3298:0 < i2886:0
f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub1542425744:0), java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub514202189:0), java.lang.Object(o9648sub514202189:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub514202189:0), java.lang.Object(o9648sub514202189:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0) -> f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13294sub1542425744:0), java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10248sub0:0), java.lang.Object(o10248sub0:0), 1, o10245[LinkedList$Entry.previous]o10243:0, o9648[LinkedList$Entry.previous]o9333:0, o9648[LinkedList$Entry.previous]o9645:0) :|: o9335[LinkedList$Entry.previous]o9333:0 > 0 && o9648[LinkedList$Entry.previous]o9333:0 < o9335[LinkedList$Entry.previous]o9333:0 && o9648[LinkedList$Entry.previous]o9645:0 < o9335[LinkedList$Entry.previous]o9337:0 && o9335[LinkedList$Entry.previous]o9337:0 > -1 && i3235:0 > 1 && i3298:0 < i2886:0
f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13280sub514202065:0), java.lang.Object(o9644sub514202065:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13280sub514202065:0), java.lang.Object(o9644sub514202065:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9335:0) -> f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10209sub0:0), java.lang.Object(o10209sub0:0), o10204[LinkedList$Entry.previous]o10209:0, o9335[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9335:0) :|: o9337[LinkedList$Entry.previous]o9333:0 > 0 && o9337[LinkedList$Entry.previous]o9335:0 > 0 && o9335[LinkedList$Entry.previous]o9337:0 > 0 && o9644[LinkedList$Entry.previous]o9333:0 < o9337[LinkedList$Entry.previous]o9333:0 && o9335[LinkedList$Entry.previous]o9337:0 < o10204[LinkedList$Entry.previous]o10209:0 && o9644[LinkedList$Entry.previous]o9335:0 < o9337[LinkedList$Entry.previous]o9335:0 && i3235:0 > 1 && i3298:0 < i2886:0
Removed following non-SCC rules:
f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744:0, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189:0, java.lang.Object(o9648sub514202189:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189:0, java.lang.Object(o9648sub514202189:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0) -> f15012_0_equals_Load(EOS(STATIC_15012), java.lang.Object(javaUtilEx.Content(EOC)), o96460:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461028313982:0, java.lang.Object(o9648sub1028313982:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9646514202189:0, java.lang.Object(o9648sub514202189:0))), java.lang.Object(o9648sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96461542425744:0, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96460:0, o9648[LinkedList$Entry.previous]o9333:0, o9648[LinkedList$Entry.previous]o9645:0) :|: o9335[LinkedList$Entry.previous]o9333:0 > 0 && o9648[LinkedList$Entry.previous]o9333:0 < o9335[LinkedList$Entry.previous]o9333:0 && o9648[LinkedList$Entry.previous]o9645:0 < o9335[LinkedList$Entry.previous]o9337:0 && o9335[LinkedList$Entry.previous]o9337:0 > -1 && i3235:0 > 1 && i3298:0 < i2886:0
f12763_0_lastIndexOf_Load(EOS(STATIC_12763), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065:0, java.lang.Object(o9644sub514202065:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065:0, java.lang.Object(o9644sub514202065:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9335:0) -> f14942_0_equals_Load(EOS(STATIC_14942), java.lang.Object(javaUtilEx.Content(EOC)), o96420:0, java.lang.Object(o9335sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9334514111793:0, java.lang.Object(o9335sub514111793:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9642514202065:0, java.lang.Object(o9644sub514202065:0))), java.lang.Object(o9644sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96420:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0, o9644[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9335:0) :|: o9337[LinkedList$Entry.previous]o9333:0 > 0 && o9337[LinkedList$Entry.previous]o9335:0 > 0 && o9644[LinkedList$Entry.previous]o9333:0 < o9337[LinkedList$Entry.previous]o9333:0 && o9644[LinkedList$Entry.previous]o9335:0 < o9337[LinkedList$Entry.previous]o9335:0 && o9335[LinkedList$Entry.previous]o9337:0 > 0 && i3235:0 > 1 && i3298:0 < i2886:0
Filtered constant ground arguments:
   f12763_0_lastIndexOf_Load(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f12763_0_lastIndexOf_Load(x2, x4, x5, x6, x7, x8, x9)
   EOS(x1) -> EOS
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f12763_0_lastIndexOf_Load(x1, x2, x3, x4, x5, x6, x7) -> f12763_0_lastIndexOf_Load(x1, x3, x4, x5, x6, x7)
Finished conversion. Obtained 6 rules.P rules:
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub514202189:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0, o93341028223555:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(o10248sub0:0), 1, o10245[LinkedList$Entry.previous]o10243:0, o9648[LinkedList$Entry.previous]o9333:0, o9648[LinkedList$Entry.previous]o9645:0, o93341028223555:0) :|: o9648[LinkedList$Entry.previous]o9333:0 < o9335[LinkedList$Entry.previous]o9333:0 && o9335[LinkedList$Entry.previous]o9333:0 > 0 && o9648[LinkedList$Entry.previous]o9645:0 < o9335[LinkedList$Entry.previous]o9337:0 && o9335[LinkedList$Entry.previous]o9337:0 > -1 && i3298:0 < i2886:0 && i3235:0 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o9644sub514202065:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9335:0, o93341028223555:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(o11047sub0:0), o11042[LinkedList$Entry.previous]o11047:0, o9335[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9335:0, o93341028223555:0) :|: o9337[LinkedList$Entry.previous]o9335:0 > 0 && o9337[LinkedList$Entry.previous]o9333:0 > 0 && o9335[LinkedList$Entry.previous]o9337:0 > 0 && o9644[LinkedList$Entry.previous]o9333:0 < o9337[LinkedList$Entry.previous]o9333:0 && o9644[LinkedList$Entry.previous]o9335:0 < o9337[LinkedList$Entry.previous]o9335:0 && o9335[LinkedList$Entry.previous]o9337:0 < o11042[LinkedList$Entry.previous]o11047:0 && i3298:0 < i2886:0 && i3235:0 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o9648sub514202189:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0, o93341028223555:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(o11074sub0:0), 1, o11071[LinkedList$Entry.previous]o11069:0, o9648[LinkedList$Entry.previous]o9333:0, o9648[LinkedList$Entry.previous]o9645:0, o93341028223555:0) :|: o9648[LinkedList$Entry.previous]o9333:0 < o9335[LinkedList$Entry.previous]o9333:0 && o9335[LinkedList$Entry.previous]o9333:0 > 0 && o9648[LinkedList$Entry.previous]o9645:0 < o9335[LinkedList$Entry.previous]o9337:0 && o9335[LinkedList$Entry.previous]o9337:0 > -1 && i3298:0 < i2886:0 && i3235:0 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9644sub514202065:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9335:0, o93341028223555:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(o10209sub0:0), o10204[LinkedList$Entry.previous]o10209:0, o9335[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9335:0, o93341028223555:0) :|: o9337[LinkedList$Entry.previous]o9335:0 > 0 && o9337[LinkedList$Entry.previous]o9333:0 > 0 && o9335[LinkedList$Entry.previous]o9337:0 > 0 && o9644[LinkedList$Entry.previous]o9333:0 < o9337[LinkedList$Entry.previous]o9333:0 && o9335[LinkedList$Entry.previous]o9337:0 < o10204[LinkedList$Entry.previous]o10209:0 && o9644[LinkedList$Entry.previous]o9335:0 < o9337[LinkedList$Entry.previous]o9335:0 && i3298:0 < i2886:0 && i3235:0 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13294sub1542425744:0), java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13294sub514202189:0), java.lang.Object(o9648sub514202189:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0, o93341028223555:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13294sub1542425744:0), java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(o10248sub0:0), 1, o10245[LinkedList$Entry.previous]o10243:0, o9648[LinkedList$Entry.previous]o9333:0, o9648[LinkedList$Entry.previous]o9645:0, o93341028223555:0) :|: o9648[LinkedList$Entry.previous]o9333:0 < o9335[LinkedList$Entry.previous]o9333:0 && o9335[LinkedList$Entry.previous]o9333:0 > 0 && o9648[LinkedList$Entry.previous]o9645:0 < o9335[LinkedList$Entry.previous]o9337:0 && o9335[LinkedList$Entry.previous]o9337:0 > -1 && i3298:0 < i2886:0 && i3235:0 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13280sub514202065:0), java.lang.Object(o9644sub514202065:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9333:0, o9337[LinkedList$Entry.previous]o9335:0, o93341028223555:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(o9335sub1028223555:0)))))))), java.lang.Object(o10209sub0:0), o10204[LinkedList$Entry.previous]o10209:0, o9335[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9333:0, o9644[LinkedList$Entry.previous]o9335:0, o93341028223555:0) :|: o9337[LinkedList$Entry.previous]o9335:0 > 0 && o9337[LinkedList$Entry.previous]o9333:0 > 0 && o9335[LinkedList$Entry.previous]o9337:0 > 0 && o9644[LinkedList$Entry.previous]o9333:0 < o9337[LinkedList$Entry.previous]o9333:0 && o9335[LinkedList$Entry.previous]o9337:0 < o10204[LinkedList$Entry.previous]o10209:0 && o9644[LinkedList$Entry.previous]o9335:0 < o9337[LinkedList$Entry.previous]o9335:0 && i3298:0 < i2886:0 && i3235:0 > 1

----------------------------------------

(108)
Obligation:
Rules:
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub514202189:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0, o93341028223555:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(o10248sub0:0), 1, o10245[LinkedList$Entry.previous]o10243:0, o9648[LinkedList$Entry.previous]o9333:0, o9648[LinkedList$Entry.previous]o9645:0, o93341028223555:0) :|: o9648[LinkedList$Entry.previous]o9333:0 < o9335[LinkedList$Entry.previous]o9333:0 && o9335[LinkedList$Entry.previous]o9333:0 > 0 && o9648[LinkedList$Entry.previous]o9645:0 < o9335[LinkedList$Entry.previous]o9337:0 && o9335[LinkedList$Entry.previous]o9337:0 > -1 && i3298:0 < i2886:0 && i3235:0 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x10 < x6 && x3 < x8 && x11 < x12 && x13 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x16))), x17, x18, x18, x17, x14) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(x19), 1, x20, x21, x22, x14) :|: x21 < x18 && x18 > 0 && x22 < x17 && x17 > -1 && x23 < x24 && x25 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(x27)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x28))), x29, x30, x31, x32, x26) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(x27)))))))), java.lang.Object(x33), x34, x30, x35, x36, x26) :|: x32 > 0 && x31 > 0 && x29 > 0 && x35 < x31 && x29 < x34 && x36 < x32 && x37 < x38 && x39 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x41), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x43), java.lang.Object(x44))), x45, x46, x46, x45, x40) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x41), java.lang.Object(x42)))))))))), java.lang.Object(x47), 1, x48, x49, x50, x40) :|: x49 < x46 && x46 > 0 && x50 < x45 && x45 > -1 && x51 < x52 && x53 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(x55)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x56), java.lang.Object(x57))), x58, x59, x60, x61, x54) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(x55)))))))), java.lang.Object(x62), x63, x59, x64, x65, x54) :|: x61 > 0 && x60 > 0 && x58 > 0 && x64 < x60 && x58 < x63 && x65 < x61 && x66 < x67 && x68 > 1

----------------------------------------

(109) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(110)
Obligation:
Rules:
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub514202189:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0, o93341028223555:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(o10248sub0:0), 1, o10245[LinkedList$Entry.previous]o10243:0, o9648[LinkedList$Entry.previous]o9333:0, o9648[LinkedList$Entry.previous]o9645:0, o93341028223555:0) :|: o9648[LinkedList$Entry.previous]o9333:0 < o9335[LinkedList$Entry.previous]o9333:0 && o9335[LinkedList$Entry.previous]o9333:0 > 0 && o9648[LinkedList$Entry.previous]o9645:0 < o9335[LinkedList$Entry.previous]o9337:0 && o9335[LinkedList$Entry.previous]o9337:0 > -1 && i3298:0 < i2886:0 && i3235:0 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x10 < x6 && x3 < x8 && x11 < x12 && x13 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x16))), x17, x18, x18, x17, x14) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(x19), 1, x20, x21, x22, x14) :|: x21 < x18 && x18 > 0 && x22 < x17 && x17 > -1 && x23 < x24 && x25 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(x27)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x28))), x29, x30, x31, x32, x26) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(x27)))))))), java.lang.Object(x33), x34, x30, x35, x36, x26) :|: x32 > 0 && x31 > 0 && x29 > 0 && x35 < x31 && x29 < x34 && x36 < x32 && x37 < x38 && x39 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x41), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x43), java.lang.Object(x44))), x45, x46, x46, x45, x40) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x41), java.lang.Object(x42)))))))))), java.lang.Object(x47), 1, x48, x49, x50, x40) :|: x49 < x46 && x46 > 0 && x50 < x45 && x45 > -1 && x51 < x52 && x53 > 1
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(x55)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x56), java.lang.Object(x57))), x58, x59, x60, x61, x54) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(x55)))))))), java.lang.Object(x62), x63, x59, x64, x65, x54) :|: x61 > 0 && x60 > 0 && x58 > 0 && x64 < x60 && x58 < x63 && x65 < x61 && x66 < x67 && x68 > 1

----------------------------------------

(111) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub514202189:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0, o93341028223555:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(o10248sub0:0), 1, o10245[LinkedList$Entry.previous]o10243:0, o9648[LinkedList$Entry.previous]o9333:0, o9648[LinkedList$Entry.previous]o9645:0, o93341028223555:0) :|: o9648[LinkedList$Entry.previous]o9333:0 < o9335[LinkedList$Entry.previous]o9333:0 && o9335[LinkedList$Entry.previous]o9333:0 > 0 && o9648[LinkedList$Entry.previous]o9645:0 < o9335[LinkedList$Entry.previous]o9337:0 && o9335[LinkedList$Entry.previous]o9337:0 > -1 && i3298:0 < i2886:0 && i3235:0 > 1
(2) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x10 < x6 && x3 < x8 && x11 < x12 && x13 > 1
(3) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x16))), x17, x18, x18, x17, x14) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(x19), 1, x20, x21, x22, x14) :|: x21 < x18 && x18 > 0 && x22 < x17 && x17 > -1 && x23 < x24 && x25 > 1
(4) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(x27)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x28))), x29, x30, x31, x32, x26) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(x27)))))))), java.lang.Object(x33), x34, x30, x35, x36, x26) :|: x32 > 0 && x31 > 0 && x29 > 0 && x35 < x31 && x29 < x34 && x36 < x32 && x37 < x38 && x39 > 1
(5) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x41), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x43), java.lang.Object(x44))), x45, x46, x46, x45, x40) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x41), java.lang.Object(x42)))))))))), java.lang.Object(x47), 1, x48, x49, x50, x40) :|: x49 < x46 && x46 > 0 && x50 < x45 && x45 > -1 && x51 < x52 && x53 > 1
(6) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(x55)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x56), java.lang.Object(x57))), x58, x59, x60, x61, x54) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(x55)))))))), java.lang.Object(x62), x63, x59, x64, x65, x54) :|: x61 > 0 && x60 > 0 && x58 > 0 && x64 < x60 && x58 < x63 && x65 < x61 && x66 < x67 && x68 > 1

Arcs:
(1) -> (1), (2), (4), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (2), (3), (4), (5), (6)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (2), (3), (4), (5), (6)
(6) -> (1), (2), (3), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(112)
Obligation:

Termination digraph:
Nodes:
(1) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub514202189:0))), o9335[LinkedList$Entry.previous]o9337:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9333:0, o9335[LinkedList$Entry.previous]o9337:0, o93341028223555:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0)))))))))), java.lang.Object(o10248sub0:0), 1, o10245[LinkedList$Entry.previous]o10243:0, o9648[LinkedList$Entry.previous]o9333:0, o9648[LinkedList$Entry.previous]o9645:0, o93341028223555:0) :|: o9648[LinkedList$Entry.previous]o9333:0 < o9335[LinkedList$Entry.previous]o9333:0 && o9335[LinkedList$Entry.previous]o9333:0 > 0 && o9648[LinkedList$Entry.previous]o9645:0 < o9335[LinkedList$Entry.previous]o9337:0 && o9335[LinkedList$Entry.previous]o9337:0 > -1 && i3298:0 < i2886:0 && i3235:0 > 1
(2) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x10 < x6 && x3 < x8 && x11 < x12 && x13 > 1
(3) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x16))), x17, x18, x18, x17, x14) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(x19), 1, x20, x21, x22, x14) :|: x21 < x18 && x18 > 0 && x22 < x17 && x17 > -1 && x23 < x24 && x25 > 1
(4) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(x27)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x28))), x29, x30, x31, x32, x26) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(x27)))))))), java.lang.Object(x33), x34, x30, x35, x36, x26) :|: x32 > 0 && x31 > 0 && x29 > 0 && x35 < x31 && x29 < x34 && x36 < x32 && x37 < x38 && x39 > 1
(5) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x41), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x43), java.lang.Object(x44))), x45, x46, x46, x45, x40) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x41), java.lang.Object(x42)))))))))), java.lang.Object(x47), 1, x48, x49, x50, x40) :|: x49 < x46 && x46 > 0 && x50 < x45 && x45 > -1 && x51 < x52 && x53 > 1
(6) f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(x55)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x56), java.lang.Object(x57))), x58, x59, x60, x61, x54) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(x55)))))))), java.lang.Object(x62), x63, x59, x64, x65, x54) :|: x61 > 0 && x60 > 0 && x58 > 0 && x64 < x60 && x58 < x63 && x65 < x61 && x66 < x67 && x68 > 1

Arcs:
(1) -> (1), (2), (4), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (2), (3), (4), (5), (6)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (2), (3), (4), (5), (6)
(6) -> (1), (2), (3), (4), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(113) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(114)
Obligation:
Rules:
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2:0))), x3:0, x4:0, x5:0, x6:0, x:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x7:0), x8:0, x4:0, x9:0, x10:0, x:0) :|: x12:0 > x11:0 && x13:0 > 1 && x8:0 > x3:0 && x6:0 > x10:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26:0, java.lang.Object(x27:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x28:0))), x29:0, x30:0, x31:0, x32:0, x26:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26:0, java.lang.Object(x27:0)))))))), java.lang.Object(x33:0), x34:0, x30:0, x35:0, x36:0, x26:0) :|: x38:0 > x37:0 && x39:0 > 1 && x36:0 < x32:0 && x34:0 > x29:0 && x35:0 < x31:0 && x29:0 > 0 && x31:0 > 0 && x32:0 > 0
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x41:0), java.lang.Object(x42:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x43:0), java.lang.Object(x44:0))), x45:0, x46:0, x46:0, x45:0, x40:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x41:0), java.lang.Object(x42:0)))))))))), java.lang.Object(x47:0), 1, x48:0, x49:0, x50:0, x40:0) :|: x52:0 > x51:0 && x53:0 > 1 && x45:0 > -1 && x50:0 < x45:0 && x46:0 > 0 && x49:0 < x46:0
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x16:0))), x17:0, x18:0, x18:0, x17:0, x14:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15:0)))))))))), java.lang.Object(x19:0), 1, x20:0, x21:0, x22:0, x14:0) :|: x24:0 > x23:0 && x25:0 > 1 && x17:0 > -1 && x22:0 < x17:0 && x18:0 > 0 && x21:0 < x18:0
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub514202189:0:0))), o9335[LinkedList$Entry.previous]o9337:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9337:0:0, o93341028223555:0:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o93341028223555:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9648sub1542425744:0:0)))))))))), java.lang.Object(o10248sub0:0:0), 1, o10245[LinkedList$Entry.previous]o10243:0:0, o9648[LinkedList$Entry.previous]o9333:0:0, o9648[LinkedList$Entry.previous]o9645:0:0, o93341028223555:0:0) :|: i3298:0:0 < i2886:0:0 && i3235:0:0 > 1 && o9335[LinkedList$Entry.previous]o9337:0:0 > -1 && o9648[LinkedList$Entry.previous]o9645:0:0 < o9335[LinkedList$Entry.previous]o9337:0:0 && o9335[LinkedList$Entry.previous]o9333:0:0 > 0 && o9648[LinkedList$Entry.previous]o9333:0:0 < o9335[LinkedList$Entry.previous]o9333:0:0
f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54:0, java.lang.Object(x55:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x56:0), java.lang.Object(x57:0))), x58:0, x59:0, x60:0, x61:0, x54:0) -> f12763_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54:0, java.lang.Object(x55:0)))))))), java.lang.Object(x62:0), x63:0, x59:0, x64:0, x65:0, x54:0) :|: x67:0 > x66:0 && x68:0 > 1 && x65:0 < x61:0 && x63:0 > x58:0 && x64:0 < x60:0 && x58:0 > 0 && x60:0 > 0 && x61:0 > 0

----------------------------------------

(115) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12763_0_lastIndexOf_Load(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
javaUtilEx.Content()
NULL()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(116)
Obligation:
Rules:
f12763_0_lastIndexOf_Load(c, c1, x3:0, x4:0, x5:0, x6:0, x:0) -> f12763_0_lastIndexOf_Load(c2, c3, x8:0, x4:0, x9:0, x10:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x12:0 > x11:0 && x13:0 > 1 && x8:0 > x3:0 && x6:0 > x10:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0)
f12763_0_lastIndexOf_Load(c4, c5, x29:0, x30:0, x31:0, x32:0, x26:0) -> f12763_0_lastIndexOf_Load(c6, c7, x34:0, x30:0, x35:0, x36:0, x26:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (x38:0 > x37:0 && x39:0 > 1 && x36:0 < x32:0 && x34:0 > x29:0 && x35:0 < x31:0 && x29:0 > 0 && x31:0 > 0 && x32:0 > 0)
f12763_0_lastIndexOf_Load(c8, c9, x45:0, x46:0, x46:0, x45:0, x40:0) -> f12763_0_lastIndexOf_Load(c10, c11, c12, x48:0, x49:0, x50:0, x40:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0))) && (x52:0 > x51:0 && x53:0 > 1 && x45:0 > -1 && x50:0 < x45:0 && x46:0 > 0 && x49:0 < x46:0)
f12763_0_lastIndexOf_Load(c18, c19, o9335[LinkedList$Entry.previous]o9337:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9337:0:0, o93341028223555:0:0) -> f12763_0_lastIndexOf_Load(c20, c21, c22, o10245[LinkedList$Entry.previous]o10243:0:0, o9648[LinkedList$Entry.previous]o9333:0:0, o9648[LinkedList$Entry.previous]o9645:0:0, o93341028223555:0:0) :|: c22 = 1 && (c21 = 0 && (c20 = 0 && (c19 = 0 && c18 = 0))) && (i3298:0:0 < i2886:0:0 && i3235:0:0 > 1 && o9335[LinkedList$Entry.previous]o9337:0:0 > -1 && o9648[LinkedList$Entry.previous]o9645:0:0 < o9335[LinkedList$Entry.previous]o9337:0:0 && o9335[LinkedList$Entry.previous]o9333:0:0 > 0 && o9648[LinkedList$Entry.previous]o9333:0:0 < o9335[LinkedList$Entry.previous]o9333:0:0)

----------------------------------------

(117) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12763_0_lastIndexOf_Load(x, x1, x2, x3, x4, x5, x6)] = -1 + c*x + c1*x1 + x5

The following rules are decreasing:
f12763_0_lastIndexOf_Load(c, c1, x3:0, x4:0, x5:0, x6:0, x:0) -> f12763_0_lastIndexOf_Load(c2, c3, x8:0, x4:0, x9:0, x10:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x12:0 > x11:0 && x13:0 > 1 && x8:0 > x3:0 && x6:0 > x10:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0)
f12763_0_lastIndexOf_Load(c4, c5, x29:0, x30:0, x31:0, x32:0, x26:0) -> f12763_0_lastIndexOf_Load(c6, c7, x34:0, x30:0, x35:0, x36:0, x26:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (x38:0 > x37:0 && x39:0 > 1 && x36:0 < x32:0 && x34:0 > x29:0 && x35:0 < x31:0 && x29:0 > 0 && x31:0 > 0 && x32:0 > 0)
f12763_0_lastIndexOf_Load(c8, c9, x45:0, x46:0, x46:0, x45:0, x40:0) -> f12763_0_lastIndexOf_Load(c10, c11, c12, x48:0, x49:0, x50:0, x40:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0))) && (x52:0 > x51:0 && x53:0 > 1 && x45:0 > -1 && x50:0 < x45:0 && x46:0 > 0 && x49:0 < x46:0)
f12763_0_lastIndexOf_Load(c18, c19, o9335[LinkedList$Entry.previous]o9337:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9337:0:0, o93341028223555:0:0) -> f12763_0_lastIndexOf_Load(c20, c21, c22, o10245[LinkedList$Entry.previous]o10243:0:0, o9648[LinkedList$Entry.previous]o9333:0:0, o9648[LinkedList$Entry.previous]o9645:0:0, o93341028223555:0:0) :|: c22 = 1 && (c21 = 0 && (c20 = 0 && (c19 = 0 && c18 = 0))) && (i3298:0:0 < i2886:0:0 && i3235:0:0 > 1 && o9335[LinkedList$Entry.previous]o9337:0:0 > -1 && o9648[LinkedList$Entry.previous]o9645:0:0 < o9335[LinkedList$Entry.previous]o9337:0:0 && o9335[LinkedList$Entry.previous]o9333:0:0 > 0 && o9648[LinkedList$Entry.previous]o9333:0:0 < o9335[LinkedList$Entry.previous]o9333:0:0)
The following rules are bounded:
f12763_0_lastIndexOf_Load(c, c1, x3:0, x4:0, x5:0, x6:0, x:0) -> f12763_0_lastIndexOf_Load(c2, c3, x8:0, x4:0, x9:0, x10:0, x:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x12:0 > x11:0 && x13:0 > 1 && x8:0 > x3:0 && x6:0 > x10:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0)
f12763_0_lastIndexOf_Load(c4, c5, x29:0, x30:0, x31:0, x32:0, x26:0) -> f12763_0_lastIndexOf_Load(c6, c7, x34:0, x30:0, x35:0, x36:0, x26:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (x38:0 > x37:0 && x39:0 > 1 && x36:0 < x32:0 && x34:0 > x29:0 && x35:0 < x31:0 && x29:0 > 0 && x31:0 > 0 && x32:0 > 0)

----------------------------------------

(118)
Obligation:
Rules:
f12763_0_lastIndexOf_Load(c8, c9, x45:0, x46:0, x46:0, x45:0, x40:0) -> f12763_0_lastIndexOf_Load(c10, c11, c12, x48:0, x49:0, x50:0, x40:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0))) && (x52:0 > x51:0 && x53:0 > 1 && x45:0 > -1 && x50:0 < x45:0 && x46:0 > 0 && x49:0 < x46:0)
f12763_0_lastIndexOf_Load(c18, c19, o9335[LinkedList$Entry.previous]o9337:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9337:0:0, o93341028223555:0:0) -> f12763_0_lastIndexOf_Load(c20, c21, c22, o10245[LinkedList$Entry.previous]o10243:0:0, o9648[LinkedList$Entry.previous]o9333:0:0, o9648[LinkedList$Entry.previous]o9645:0:0, o93341028223555:0:0) :|: c22 = 1 && (c21 = 0 && (c20 = 0 && (c19 = 0 && c18 = 0))) && (i3298:0:0 < i2886:0:0 && i3235:0:0 > 1 && o9335[LinkedList$Entry.previous]o9337:0:0 > -1 && o9648[LinkedList$Entry.previous]o9645:0:0 < o9335[LinkedList$Entry.previous]o9337:0:0 && o9335[LinkedList$Entry.previous]o9333:0:0 > 0 && o9648[LinkedList$Entry.previous]o9333:0:0 < o9335[LinkedList$Entry.previous]o9333:0:0)

----------------------------------------

(119) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12763_0_lastIndexOf_Load(x, x1, x2, x3, x4, x5, x6)] = c*x + c1*x1 + x5

The following rules are decreasing:
f12763_0_lastIndexOf_Load(c8, c9, x45:0, x46:0, x46:0, x45:0, x40:0) -> f12763_0_lastIndexOf_Load(c10, c11, c12, x48:0, x49:0, x50:0, x40:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0))) && (x52:0 > x51:0 && x53:0 > 1 && x45:0 > -1 && x50:0 < x45:0 && x46:0 > 0 && x49:0 < x46:0)
f12763_0_lastIndexOf_Load(c18, c19, o9335[LinkedList$Entry.previous]o9337:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9337:0:0, o93341028223555:0:0) -> f12763_0_lastIndexOf_Load(c20, c21, c22, o10245[LinkedList$Entry.previous]o10243:0:0, o9648[LinkedList$Entry.previous]o9333:0:0, o9648[LinkedList$Entry.previous]o9645:0:0, o93341028223555:0:0) :|: c22 = 1 && (c21 = 0 && (c20 = 0 && (c19 = 0 && c18 = 0))) && (i3298:0:0 < i2886:0:0 && i3235:0:0 > 1 && o9335[LinkedList$Entry.previous]o9337:0:0 > -1 && o9648[LinkedList$Entry.previous]o9645:0:0 < o9335[LinkedList$Entry.previous]o9337:0:0 && o9335[LinkedList$Entry.previous]o9333:0:0 > 0 && o9648[LinkedList$Entry.previous]o9333:0:0 < o9335[LinkedList$Entry.previous]o9333:0:0)
The following rules are bounded:
f12763_0_lastIndexOf_Load(c8, c9, x45:0, x46:0, x46:0, x45:0, x40:0) -> f12763_0_lastIndexOf_Load(c10, c11, c12, x48:0, x49:0, x50:0, x40:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0))) && (x52:0 > x51:0 && x53:0 > 1 && x45:0 > -1 && x50:0 < x45:0 && x46:0 > 0 && x49:0 < x46:0)
f12763_0_lastIndexOf_Load(c18, c19, o9335[LinkedList$Entry.previous]o9337:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9333:0:0, o9335[LinkedList$Entry.previous]o9337:0:0, o93341028223555:0:0) -> f12763_0_lastIndexOf_Load(c20, c21, c22, o10245[LinkedList$Entry.previous]o10243:0:0, o9648[LinkedList$Entry.previous]o9333:0:0, o9648[LinkedList$Entry.previous]o9645:0:0, o93341028223555:0:0) :|: c22 = 1 && (c21 = 0 && (c20 = 0 && (c19 = 0 && c18 = 0))) && (i3298:0:0 < i2886:0:0 && i3235:0:0 > 1 && o9335[LinkedList$Entry.previous]o9337:0:0 > -1 && o9648[LinkedList$Entry.previous]o9645:0:0 < o9335[LinkedList$Entry.previous]o9337:0:0 && o9335[LinkedList$Entry.previous]o9333:0:0 > 0 && o9648[LinkedList$Entry.previous]o9333:0:0 < o9335[LinkedList$Entry.previous]o9333:0:0)

----------------------------------------

(120)
YES

----------------------------------------

(121)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateLastIndexOf.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList: [header]
*javaUtilEx.LinkedList$Entry: [element, previous]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(122) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 62 IRulesP rules:
f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(o9239sub0), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237) -> f12770_0_lastIndexOf_FieldAccess(EOS(STATIC_12770), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(o9239sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237) :|: TRUE
f12770_0_lastIndexOf_FieldAccess(EOS(STATIC_12770), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(o9239sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237) -> f12778_0_lastIndexOf_EQ(EOS(STATIC_12778), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(o9239sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033, java.lang.Object(o9237sub514082033))), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237) :|: TRUE
f12778_0_lastIndexOf_EQ(EOS(STATIC_12778), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(o9239sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033, java.lang.Object(o9237sub514082033))), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237) -> f12784_0_lastIndexOf_EQ(EOS(STATIC_12784), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(o9239sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033, java.lang.Object(o9237sub514082033))), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237, o9239[LinkedList$Entry.previous]o9234) :|: o9239[LinkedList$Entry.previous]o9234 > 0
f12784_0_lastIndexOf_EQ(EOS(STATIC_12784), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(o9239sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033, java.lang.Object(o9237sub514082033))), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237, o9239[LinkedList$Entry.previous]o9234) -> f12793_0_lastIndexOf_Inc(EOS(STATIC_12793), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237, o9239[LinkedList$Entry.previous]o9234) :|: TRUE
f12793_0_lastIndexOf_Inc(EOS(STATIC_12793), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237, o9239[LinkedList$Entry.previous]o9234) -> f12803_0_lastIndexOf_Load(EOS(STATIC_12803), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237, o9239[LinkedList$Entry.previous]o9234) :|: TRUE
f12803_0_lastIndexOf_Load(EOS(STATIC_12803), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237, o9239[LinkedList$Entry.previous]o9234) -> f12811_0_lastIndexOf_Load(EOS(STATIC_12811), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(javaUtilEx.Content(EOC)), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237, o9239[LinkedList$Entry.previous]o9234) :|: TRUE
f12811_0_lastIndexOf_Load(EOS(STATIC_12811), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(javaUtilEx.Content(EOC)), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237, o9239[LinkedList$Entry.previous]o9234) -> f12820_0_lastIndexOf_FieldAccess(EOS(STATIC_12820), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237, o9239[LinkedList$Entry.previous]o9234) :|: TRUE
f12820_0_lastIndexOf_FieldAccess(EOS(STATIC_12820), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237, o9239[LinkedList$Entry.previous]o9234) -> f12831_0_lastIndexOf_FieldAccess(EOS(STATIC_12831), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237) :|: o9237[LinkedList$Entry.previous]o9239 > 0 && o9239[LinkedList$Entry.previous]o9237 > 0
f12820_0_lastIndexOf_FieldAccess(EOS(STATIC_12820), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9619sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9619sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9619sub0), o9619[LinkedList$Entry.previous]o9619, o9236[LinkedList$Entry.next]o9234, o9619[LinkedList$Entry.previous]o9234, o9619[LinkedList$Entry.previous]o9619, o9619[LinkedList$Entry.previous]o9234) -> f12832_0_lastIndexOf_FieldAccess(EOS(STATIC_12832), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9619sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9619sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9619sub0), o9236[LinkedList$Entry.next]o9234, o9619[LinkedList$Entry.previous]o9234, o9619[LinkedList$Entry.previous]o9619) :|: TRUE
f12831_0_lastIndexOf_FieldAccess(EOS(STATIC_12831), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), o9237[LinkedList$Entry.previous]o9633, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9633[LinkedList$Entry.previous]o9234, o9633[LinkedList$Entry.previous]o9237) -> f12844_0_lastIndexOf_FieldAccess(EOS(STATIC_12844), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: o9636[LinkedList$Entry.previous]o9234 < o9633[LinkedList$Entry.previous]o9234 && o9633[LinkedList$Entry.previous]o9234 >= 0 && o9636[LinkedList$Entry.previous]o9237 < o9633[LinkedList$Entry.previous]o9237 && o9633[LinkedList$Entry.previous]o9237 >= 0
f12844_0_lastIndexOf_FieldAccess(EOS(STATIC_12844), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f12857_0_lastIndexOf_InvokeMethod(EOS(STATIC_12857), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), java.lang.Object(javaUtilEx.Content(EOC)), o96340, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: TRUE
f12857_0_lastIndexOf_InvokeMethod(EOS(STATIC_12857), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), java.lang.Object(javaUtilEx.Content(EOC)), o96340, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f12874_0_equals_Load(EOS(STATIC_12874), java.lang.Object(javaUtilEx.Content(EOC)), o96340, java.lang.Object(o9237sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033, java.lang.Object(o9237sub514082033))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), java.lang.Object(o9636sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96340, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: i3209 > 1 && i3297 < i2886
f12857_0_lastIndexOf_InvokeMethod(EOS(STATIC_12857), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), java.lang.Object(javaUtilEx.Content(EOC)), o96340, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f12874_1_equals_Load(EOS(STATIC_12874), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), java.lang.Object(javaUtilEx.Content(EOC)), o96340, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: i3209 > 1 && i3297 < i2886
f12874_0_equals_Load(EOS(STATIC_12874), java.lang.Object(javaUtilEx.Content(EOC)), o96340, java.lang.Object(o9237sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033, java.lang.Object(o9237sub514082033))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), java.lang.Object(o9636sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96340, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f15160_0_equals_Load(EOS(STATIC_15160), java.lang.Object(javaUtilEx.Content(EOC)), o96340, java.lang.Object(o9237sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033, java.lang.Object(o9237sub514082033))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166, java.lang.Object(o9636sub514201166))), java.lang.Object(o9636sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96340, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: TRUE
f13599_0_equals_Return(EOS(STATIC_13599), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9636sub514201166))), matching1, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f13062_0_equals_Return(EOS(STATIC_13062), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9636sub514201166))), 0, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: TRUE && matching1 = 0
f13062_0_equals_Return(EOS(STATIC_13062), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10158-1540604011, java.lang.Object(o10160sub-1540604011))), matching1, o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10155[LinkedList$Entry.previous]o10157, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155) -> f13085_0_lastIndexOf_EQ(EOS(STATIC_13085), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10158-1540604011, java.lang.Object(o10160sub-1540604011))), 0, o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10155[LinkedList$Entry.previous]o10157, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155) :|: TRUE && matching1 = 0
f13085_0_lastIndexOf_EQ(EOS(STATIC_13085), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10158-1540604011, java.lang.Object(o10160sub-1540604011))), matching1, o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10155[LinkedList$Entry.previous]o10157, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155) -> f13107_0_lastIndexOf_Load(EOS(STATIC_13107), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10158-1540604011, java.lang.Object(o10160sub-1540604011))), o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10155[LinkedList$Entry.previous]o10157, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155) :|: TRUE && matching1 = 0
f13107_0_lastIndexOf_Load(EOS(STATIC_13107), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10158-1540604011, java.lang.Object(o10160sub-1540604011))), o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10155[LinkedList$Entry.previous]o10157, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155) -> f13129_0_lastIndexOf_FieldAccess(EOS(STATIC_13129), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10158-1540604011, java.lang.Object(o10160sub-1540604011))), o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10155[LinkedList$Entry.previous]o10157, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155) :|: TRUE
f13129_0_lastIndexOf_FieldAccess(EOS(STATIC_13129), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10158-1540604011, java.lang.Object(o10160sub-1540604011))), o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10155[LinkedList$Entry.previous]o10157, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155) -> f13146_0_lastIndexOf_Store(EOS(STATIC_13146), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10160sub0), o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155, o10155[LinkedList$Entry.previous]o10160) :|: o10155[LinkedList$Entry.previous]o10160 > o10155[LinkedList$Entry.previous]o10157 && o10155[LinkedList$Entry.previous]o10157 >= 0
f13146_0_lastIndexOf_Store(EOS(STATIC_13146), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10160sub0), o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155, o10155[LinkedList$Entry.previous]o10160) -> f13160_0_lastIndexOf_JMP(EOS(STATIC_13160), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10160sub0), o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155, o10155[LinkedList$Entry.previous]o10160) :|: TRUE
f13160_0_lastIndexOf_JMP(EOS(STATIC_13160), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10160sub0), o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155, o10155[LinkedList$Entry.previous]o10160) -> f13175_0_lastIndexOf_Load(EOS(STATIC_13175), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10160sub0), o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155, o10155[LinkedList$Entry.previous]o10160) :|: TRUE
f13175_0_lastIndexOf_Load(EOS(STATIC_13175), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10160sub0), o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155, o10155[LinkedList$Entry.previous]o10160) -> f12753_0_lastIndexOf_Load(EOS(STATIC_12753), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101531213758933, java.lang.Object(o10155sub1213758933)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10160sub0), o10155[LinkedList$Entry.previous]o10160, o10154[LinkedList$Entry.next]o10152, o10155[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10152, o10160[LinkedList$Entry.previous]o10155) :|: TRUE
f12753_0_lastIndexOf_Load(EOS(STATIC_12753), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237) -> f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9239sub0), java.lang.Object(o9239sub0), o9237[LinkedList$Entry.previous]o9239, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9234, o9239[LinkedList$Entry.previous]o9237) :|: TRUE
f13612_0_equals_Return(EOS(STATIC_13612), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13250sub514201166), java.lang.Object(o9636sub514201166))), matching1, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f13062_0_equals_Return(EOS(STATIC_13062), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13250sub514201166), java.lang.Object(o9636sub514201166))), 0, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: TRUE && matching1 = 0
f13710_0_equals_Return(EOS(STATIC_13710), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9636sub514201166))), matching1, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f13228_0_equals_Return(EOS(STATIC_13228), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9636sub514201166))), 0, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: TRUE && matching1 = 0
f13228_0_equals_Return(EOS(STATIC_13228), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub-1539713319))), i3606, o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11020[LinkedList$Entry.previous]o11022, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020) -> f13245_0_lastIndexOf_EQ(EOS(STATIC_13245), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub-1539713319))), i3606, o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11020[LinkedList$Entry.previous]o11022, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020) :|: TRUE
f13245_0_lastIndexOf_EQ(EOS(STATIC_13245), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub-1539713319))), matching1, o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11020[LinkedList$Entry.previous]o11022, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020) -> f13255_0_lastIndexOf_EQ(EOS(STATIC_13255), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub-1539713319))), 0, o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11020[LinkedList$Entry.previous]o11022, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020) :|: TRUE && matching1 = 0
f13255_0_lastIndexOf_EQ(EOS(STATIC_13255), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub-1539713319))), matching1, o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11020[LinkedList$Entry.previous]o11022, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020) -> f13268_0_lastIndexOf_Load(EOS(STATIC_13268), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub-1539713319))), o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11020[LinkedList$Entry.previous]o11022, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020) :|: TRUE && matching1 = 0
f13268_0_lastIndexOf_Load(EOS(STATIC_13268), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub-1539713319))), o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11020[LinkedList$Entry.previous]o11022, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020) -> f13283_0_lastIndexOf_FieldAccess(EOS(STATIC_13283), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub-1539713319))), o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11020[LinkedList$Entry.previous]o11022, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020) :|: TRUE
f13283_0_lastIndexOf_FieldAccess(EOS(STATIC_13283), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub-1539713319))), o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11020[LinkedList$Entry.previous]o11022, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020) -> f13295_0_lastIndexOf_Store(EOS(STATIC_13295), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub0), o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020, o11020[LinkedList$Entry.previous]o11025) :|: o11020[LinkedList$Entry.previous]o11025 > o11020[LinkedList$Entry.previous]o11022 && o11020[LinkedList$Entry.previous]o11022 >= 0
f13295_0_lastIndexOf_Store(EOS(STATIC_13295), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub0), o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020, o11020[LinkedList$Entry.previous]o11025) -> f13146_0_lastIndexOf_Store(EOS(STATIC_13146), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110181215539015, java.lang.Object(o11020sub1215539015)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub0), o11019[LinkedList$Entry.next]o11017, o11020[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11017, o11025[LinkedList$Entry.previous]o11020, o11020[LinkedList$Entry.previous]o11025) :|: TRUE
f13719_0_equals_Return(EOS(STATIC_13719), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9636sub514201166))), matching1, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f13228_0_equals_Return(EOS(STATIC_13228), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9636sub514201166))), 1, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: TRUE && matching1 = 1
f12832_0_lastIndexOf_FieldAccess(EOS(STATIC_12832), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), o9236[LinkedList$Entry.next]o9234, o9637[LinkedList$Entry.previous]o9234, o9637[LinkedList$Entry.previous]o9637) -> f12845_0_lastIndexOf_FieldAccess(EOS(STATIC_12845), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: o9640[LinkedList$Entry.previous]o9234 < o9637[LinkedList$Entry.previous]o9234 && o9637[LinkedList$Entry.previous]o9234 >= 0 && o9640[LinkedList$Entry.previous]o9637 < o9637[LinkedList$Entry.previous]o9637 && o9637[LinkedList$Entry.previous]o9637 >= 0
f12845_0_lastIndexOf_FieldAccess(EOS(STATIC_12845), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f12858_0_lastIndexOf_InvokeMethod(EOS(STATIC_12858), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), java.lang.Object(javaUtilEx.Content(EOC)), o96380, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: TRUE
f12858_0_lastIndexOf_InvokeMethod(EOS(STATIC_12858), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), java.lang.Object(javaUtilEx.Content(EOC)), o96380, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f12875_0_equals_Load(EOS(STATIC_12875), java.lang.Object(javaUtilEx.Content(EOC)), o96380, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381028283323, java.lang.Object(o9640sub1028283323))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), java.lang.Object(o9640sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96380, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: i3209 > 1 && i3297 < i2886
f12858_0_lastIndexOf_InvokeMethod(EOS(STATIC_12858), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), java.lang.Object(javaUtilEx.Content(EOC)), o96380, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f12875_1_equals_Load(EOS(STATIC_12875), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), java.lang.Object(javaUtilEx.Content(EOC)), o96380, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: i3209 > 1 && i3297 < i2886
f12875_0_equals_Load(EOS(STATIC_12875), java.lang.Object(javaUtilEx.Content(EOC)), o96380, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381028283323, java.lang.Object(o9640sub1028283323))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), java.lang.Object(o9640sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96380, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f15230_0_equals_Load(EOS(STATIC_15230), java.lang.Object(javaUtilEx.Content(EOC)), o96380, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381028283323, java.lang.Object(o9640sub1028283323))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290, java.lang.Object(o9640sub514201290))), java.lang.Object(o9640sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96380, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: TRUE
f13600_0_equals_Return(EOS(STATIC_13600), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub514201290))), matching1, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f13064_0_equals_Return(EOS(STATIC_13064), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub514201290))), 0, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: TRUE && matching1 = 0
f13064_0_equals_Return(EOS(STATIC_13064), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101771213763025, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-326839002, java.lang.Object(o10182sub-326839002)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-1540602027, java.lang.Object(o10182sub-1540602027))), matching1, o10178[LinkedList$Entry.next]o10176, o10182[LinkedList$Entry.previous]o10176, o10182[LinkedList$Entry.previous]o10179) -> f13086_0_lastIndexOf_EQ(EOS(STATIC_13086), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101771213763025, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-326839002, java.lang.Object(o10182sub-326839002)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-1540602027, java.lang.Object(o10182sub-1540602027))), 0, o10178[LinkedList$Entry.next]o10176, o10182[LinkedList$Entry.previous]o10176, o10182[LinkedList$Entry.previous]o10179) :|: TRUE && matching1 = 0
f13086_0_lastIndexOf_EQ(EOS(STATIC_13086), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101771213763025, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-326839002, java.lang.Object(o10182sub-326839002)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-1540602027, java.lang.Object(o10182sub-1540602027))), matching1, o10178[LinkedList$Entry.next]o10176, o10182[LinkedList$Entry.previous]o10176, o10182[LinkedList$Entry.previous]o10179) -> f13108_0_lastIndexOf_Load(EOS(STATIC_13108), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101771213763025, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-326839002, java.lang.Object(o10182sub-326839002)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-1540602027, java.lang.Object(o10182sub-1540602027))), o10178[LinkedList$Entry.next]o10176, o10182[LinkedList$Entry.previous]o10176, o10182[LinkedList$Entry.previous]o10179) :|: TRUE && matching1 = 0
f13108_0_lastIndexOf_Load(EOS(STATIC_13108), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101771213763025, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-326839002, java.lang.Object(o10182sub-326839002)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-1540602027, java.lang.Object(o10182sub-1540602027))), o10178[LinkedList$Entry.next]o10176, o10182[LinkedList$Entry.previous]o10176, o10182[LinkedList$Entry.previous]o10179) -> f13130_0_lastIndexOf_FieldAccess(EOS(STATIC_13130), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101771213763025, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-326839002, java.lang.Object(o10182sub-326839002)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-1540602027, java.lang.Object(o10182sub-1540602027))), o10178[LinkedList$Entry.next]o10176, o10182[LinkedList$Entry.previous]o10176, o10182[LinkedList$Entry.previous]o10179) :|: TRUE
f13130_0_lastIndexOf_FieldAccess(EOS(STATIC_13130), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101771213763025, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-326839002, java.lang.Object(o10182sub-326839002)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-1540602027, java.lang.Object(o10182sub-1540602027))), o10178[LinkedList$Entry.next]o10176, o10182[LinkedList$Entry.previous]o10176, o10182[LinkedList$Entry.previous]o10179) -> f13147_0_lastIndexOf_Store(EOS(STATIC_13147), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101771213763025, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-326839002, java.lang.Object(o10182sub-326839002)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10182sub0), o10178[LinkedList$Entry.next]o10176, o10182[LinkedList$Entry.previous]o10176, o10182[LinkedList$Entry.previous]o10179) :|: TRUE
f13147_0_lastIndexOf_Store(EOS(STATIC_13147), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101771213763025, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-326839002, java.lang.Object(o10182sub-326839002)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10182sub0), o10178[LinkedList$Entry.next]o10176, o10182[LinkedList$Entry.previous]o10176, o10182[LinkedList$Entry.previous]o10179) -> f13295_0_lastIndexOf_Store(EOS(STATIC_13295), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o101771213763025, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o10180-326839002, java.lang.Object(o10182sub-326839002)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10182sub0), o10178[LinkedList$Entry.next]o10176, o10179[LinkedList$Entry.previous]o10176, o10182[LinkedList$Entry.previous]o10176, o10182[LinkedList$Entry.previous]o10179, o10179[LinkedList$Entry.previous]o10182) :|: o10179[LinkedList$Entry.previous]o10182 = 1
f13613_0_equals_Return(EOS(STATIC_13613), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub1542365325), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub514201290), java.lang.Object(o9640sub514201290))), matching1, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f13064_0_equals_Return(EOS(STATIC_13064), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub1542365325), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub514201290), java.lang.Object(o9640sub514201290))), 0, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: TRUE && matching1 = 0
f13711_0_equals_Return(EOS(STATIC_13711), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub514201290))), matching1, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f13230_0_equals_Return(EOS(STATIC_13230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub514201290))), 0, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: TRUE && matching1 = 0
f13230_0_equals_Return(EOS(STATIC_13230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-1539712420))), i3612, o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) -> f13246_0_lastIndexOf_EQ(EOS(STATIC_13246), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-1539712420))), i3612, o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) :|: TRUE
f13246_0_lastIndexOf_EQ(EOS(STATIC_13246), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-1539712420))), matching1, o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) -> f13257_0_lastIndexOf_EQ(EOS(STATIC_13257), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-1539712420))), 0, o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) :|: TRUE && matching1 = 0
f13257_0_lastIndexOf_EQ(EOS(STATIC_13257), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-1539712420))), matching1, o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) -> f13270_0_lastIndexOf_Load(EOS(STATIC_13270), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-1539712420))), o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) :|: TRUE && matching1 = 0
f13270_0_lastIndexOf_Load(EOS(STATIC_13270), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-1539712420))), o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) -> f13284_0_lastIndexOf_FieldAccess(EOS(STATIC_13284), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-1539712420))), o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) :|: TRUE
f13284_0_lastIndexOf_FieldAccess(EOS(STATIC_13284), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-1539712420))), o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) -> f13296_0_lastIndexOf_Store(EOS(STATIC_13296), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub0), o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) :|: TRUE
f13296_0_lastIndexOf_Store(EOS(STATIC_13296), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub0), o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) -> f13307_0_lastIndexOf_JMP(EOS(STATIC_13307), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub0), o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) :|: TRUE
f13307_0_lastIndexOf_JMP(EOS(STATIC_13307), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub0), o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) -> f13321_0_lastIndexOf_Load(EOS(STATIC_13321), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub0), o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) :|: TRUE
f13321_0_lastIndexOf_Load(EOS(STATIC_13321), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub0), o11029[LinkedList$Entry.next]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) -> f12753_0_lastIndexOf_Load(EOS(STATIC_12753), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o110281215540937, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub-324171483)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub0), o11030[LinkedList$Entry.previous]o11033, o11029[LinkedList$Entry.next]o11027, o11030[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11027, o11033[LinkedList$Entry.previous]o11030) :|: o11030[LinkedList$Entry.previous]o11033 = 1
f13720_0_equals_Return(EOS(STATIC_13720), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub514201290))), matching1, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f13230_0_equals_Return(EOS(STATIC_13230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub514201290))), 1, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: TRUE && matching1 = 1
f12874_1_equals_Load(EOS(STATIC_12874), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9636sub514201166))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f13599_0_equals_Return(EOS(STATIC_13599), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9636sub514201166))), 0, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: TRUE
f12874_1_equals_Load(EOS(STATIC_12874), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13250sub514201166), java.lang.Object(o9636sub514201166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13250sub0), o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f13612_0_equals_Return(EOS(STATIC_13612), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13250sub514201166), java.lang.Object(o9636sub514201166))), 0, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: TRUE
f12874_1_equals_Load(EOS(STATIC_12874), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9636sub514201166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f13710_0_equals_Return(EOS(STATIC_13710), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9636sub514201166))), 0, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: TRUE
f12874_1_equals_Load(EOS(STATIC_12874), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9636sub514201166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) -> f13719_0_equals_Return(EOS(STATIC_13719), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(o9237sub1028164035)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9636sub514201166))), 1, o9236[LinkedList$Entry.next]o9234, o9237[LinkedList$Entry.previous]o9234, o9237[LinkedList$Entry.previous]o9633, o9636[LinkedList$Entry.previous]o9234, o9636[LinkedList$Entry.previous]o9237) :|: TRUE
f12875_1_equals_Load(EOS(STATIC_12875), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub514201290))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f13600_0_equals_Return(EOS(STATIC_13600), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub514201290))), 0, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: TRUE
f12875_1_equals_Load(EOS(STATIC_12875), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub1542365325), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub514201290), java.lang.Object(o9640sub514201290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13265sub0), o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f13613_0_equals_Return(EOS(STATIC_13613), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub1542365325), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub514201290), java.lang.Object(o9640sub514201290))), 0, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: TRUE
f12875_1_equals_Load(EOS(STATIC_12875), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub514201290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f13711_0_equals_Return(EOS(STATIC_13711), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub514201290))), 0, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: TRUE
f12875_1_equals_Load(EOS(STATIC_12875), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub514201290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) -> f13720_0_equals_Return(EOS(STATIC_13720), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub1542365325)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub514201290))), 1, o9236[LinkedList$Entry.next]o9234, o9640[LinkedList$Entry.previous]o9234, o9640[LinkedList$Entry.previous]o9637) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13250sub514201166:0), java.lang.Object(o9636sub514201166:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13250sub514201166:0), java.lang.Object(o9636sub514201166:0))), o9237[LinkedList$Entry.previous]o9239:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9237:0) -> f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10160sub0:0), java.lang.Object(o10160sub0:0), o10155[LinkedList$Entry.previous]o10160:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9237:0) :|: o9239[LinkedList$Entry.previous]o9234:0 > 0 && o9239[LinkedList$Entry.previous]o9237:0 > 0 && o9237[LinkedList$Entry.previous]o9239:0 > 0 && o9636[LinkedList$Entry.previous]o9234:0 < o9239[LinkedList$Entry.previous]o9234:0 && o9237[LinkedList$Entry.previous]o9239:0 < o10155[LinkedList$Entry.previous]o10160:0 && o9636[LinkedList$Entry.previous]o9237:0 < o9239[LinkedList$Entry.previous]o9237:0 && i3209:0 > 1 && i3297:0 < i2886:0
f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub514201290:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub514201290:0))), o9237[LinkedList$Entry.previous]o9239:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9239:0) -> f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10182sub0:0), java.lang.Object(o10182sub0:0), 1, o9236[LinkedList$Entry.next]o9234:0, o10179[LinkedList$Entry.previous]o10176:0, o9640[LinkedList$Entry.previous]o9234:0, o9640[LinkedList$Entry.previous]o9637:0) :|: o9237[LinkedList$Entry.previous]o9234:0 > 0 && o9640[LinkedList$Entry.previous]o9234:0 < o9237[LinkedList$Entry.previous]o9234:0 && o9640[LinkedList$Entry.previous]o9637:0 < o9237[LinkedList$Entry.previous]o9239:0 && o9237[LinkedList$Entry.previous]o9239:0 > -1 && i3209:0 > 1 && i3297:0 < i2886:0
f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9636sub514201166:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9636sub514201166:0))), o9237[LinkedList$Entry.previous]o9239:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9237:0) -> f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11025sub0:0), java.lang.Object(o11025sub0:0), o11020[LinkedList$Entry.previous]o11025:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9237:0) :|: o9239[LinkedList$Entry.previous]o9234:0 > 0 && o9239[LinkedList$Entry.previous]o9237:0 > 0 && o9237[LinkedList$Entry.previous]o9239:0 > 0 && o9636[LinkedList$Entry.previous]o9234:0 < o9239[LinkedList$Entry.previous]o9234:0 && o9636[LinkedList$Entry.previous]o9237:0 < o9239[LinkedList$Entry.previous]o9237:0 && o9237[LinkedList$Entry.previous]o9239:0 < o11020[LinkedList$Entry.previous]o11025:0 && i3209:0 > 1 && i3297:0 < i2886:0
f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub1542365325:0), java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub514201290:0), java.lang.Object(o9640sub514201290:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub514201290:0), java.lang.Object(o9640sub514201290:0))), o9237[LinkedList$Entry.previous]o9239:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9239:0) -> f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o13265sub1542365325:0), java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10182sub0:0), java.lang.Object(o10182sub0:0), 1, o9236[LinkedList$Entry.next]o9234:0, o10179[LinkedList$Entry.previous]o10176:0, o9640[LinkedList$Entry.previous]o9234:0, o9640[LinkedList$Entry.previous]o9637:0) :|: o9237[LinkedList$Entry.previous]o9234:0 > 0 && o9640[LinkedList$Entry.previous]o9234:0 < o9237[LinkedList$Entry.previous]o9234:0 && o9640[LinkedList$Entry.previous]o9637:0 < o9237[LinkedList$Entry.previous]o9239:0 && o9237[LinkedList$Entry.previous]o9239:0 > -1 && i3209:0 > 1 && i3297:0 < i2886:0
f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9636sub514201166:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o9636sub514201166:0))), o9237[LinkedList$Entry.previous]o9239:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9237:0) -> f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o10160sub0:0), java.lang.Object(o10160sub0:0), o10155[LinkedList$Entry.previous]o10160:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9237:0) :|: o9239[LinkedList$Entry.previous]o9234:0 > 0 && o9239[LinkedList$Entry.previous]o9237:0 > 0 && o9237[LinkedList$Entry.previous]o9239:0 > 0 && o9636[LinkedList$Entry.previous]o9234:0 < o9239[LinkedList$Entry.previous]o9234:0 && o9237[LinkedList$Entry.previous]o9239:0 < o10155[LinkedList$Entry.previous]o10160:0 && o9636[LinkedList$Entry.previous]o9237:0 < o9239[LinkedList$Entry.previous]o9237:0 && i3209:0 > 1 && i3297:0 < i2886:0
f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub514201290:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub514201290:0))), o9237[LinkedList$Entry.previous]o9239:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9239:0) -> f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11033sub0:0), java.lang.Object(o11033sub0:0), 1, o9236[LinkedList$Entry.next]o9234:0, o11030[LinkedList$Entry.previous]o11027:0, o9640[LinkedList$Entry.previous]o9234:0, o9640[LinkedList$Entry.previous]o9637:0) :|: o9237[LinkedList$Entry.previous]o9234:0 > 0 && o9640[LinkedList$Entry.previous]o9234:0 < o9237[LinkedList$Entry.previous]o9234:0 && o9640[LinkedList$Entry.previous]o9637:0 < o9237[LinkedList$Entry.previous]o9239:0 && o9237[LinkedList$Entry.previous]o9239:0 > -1 && i3209:0 > 1 && i3297:0 < i2886:0
Removed following non-SCC rules:
f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325:0, java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290:0, java.lang.Object(o9640sub514201290:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290:0, java.lang.Object(o9640sub514201290:0))), o9237[LinkedList$Entry.previous]o9239:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9239:0) -> f15230_0_equals_Load(EOS(STATIC_15230), java.lang.Object(javaUtilEx.Content(EOC)), o96380:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381028283323:0, java.lang.Object(o9640sub1028283323:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9638514201290:0, java.lang.Object(o9640sub514201290:0))), java.lang.Object(o9640sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o96381542365325:0, java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96380:0, o9236[LinkedList$Entry.next]o9234:0, o9640[LinkedList$Entry.previous]o9234:0, o9640[LinkedList$Entry.previous]o9637:0) :|: o9237[LinkedList$Entry.previous]o9234:0 > 0 && o9640[LinkedList$Entry.previous]o9234:0 < o9237[LinkedList$Entry.previous]o9234:0 && o9640[LinkedList$Entry.previous]o9637:0 < o9237[LinkedList$Entry.previous]o9239:0 && o9237[LinkedList$Entry.previous]o9239:0 > -1 && i3209:0 > 1 && i3297:0 < i2886:0
f12762_0_lastIndexOf_Load(EOS(STATIC_12762), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166:0, java.lang.Object(o9636sub514201166:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166:0, java.lang.Object(o9636sub514201166:0))), o9237[LinkedList$Entry.previous]o9239:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9237:0) -> f15160_0_equals_Load(EOS(STATIC_15160), java.lang.Object(javaUtilEx.Content(EOC)), o96340:0, java.lang.Object(o9237sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9235514082033:0, java.lang.Object(o9237sub514082033:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o9634514201166:0, java.lang.Object(o9636sub514201166:0))), java.lang.Object(o9636sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o96340:0, o9236[LinkedList$Entry.next]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9239:0, o9636[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9237:0) :|: o9239[LinkedList$Entry.previous]o9234:0 > 0 && o9239[LinkedList$Entry.previous]o9237:0 > 0 && o9636[LinkedList$Entry.previous]o9234:0 < o9239[LinkedList$Entry.previous]o9234:0 && o9636[LinkedList$Entry.previous]o9237:0 < o9239[LinkedList$Entry.previous]o9237:0 && o9237[LinkedList$Entry.previous]o9239:0 > 0 && i3209:0 > 1 && i3297:0 < i2886:0
Filtered constant ground arguments:
   f12762_0_lastIndexOf_Load(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f12762_0_lastIndexOf_Load(x2, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f12762_0_lastIndexOf_Load(x1, x2, x3, x4, x5, x6, x7, x8) -> f12762_0_lastIndexOf_Load(x1, x3, x4, x5, x6, x7, x8)
Filtered unneeded arguments:
   f12762_0_lastIndexOf_Load(x1, x2, x3, x4, x5, x6, x7) -> f12762_0_lastIndexOf_Load(x1, x2, x3, x5, x6, x7)
Finished conversion. Obtained 6 rules.P rules:
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13250sub514201166:0), java.lang.Object(o9636sub514201166:0))), o9237[LinkedList$Entry.previous]o9239:0, o9237[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9237:0, o92351028164035:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(o10160sub0:0), o10155[LinkedList$Entry.previous]o10160:0, o9237[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9237:0, o92351028164035:0) :|: o9239[LinkedList$Entry.previous]o9237:0 > 0 && o9239[LinkedList$Entry.previous]o9234:0 > 0 && o9237[LinkedList$Entry.previous]o9239:0 > 0 && o9636[LinkedList$Entry.previous]o9234:0 < o9239[LinkedList$Entry.previous]o9234:0 && o9237[LinkedList$Entry.previous]o9239:0 < o10155[LinkedList$Entry.previous]o10160:0 && o9636[LinkedList$Entry.previous]o9237:0 < o9239[LinkedList$Entry.previous]o9237:0 && i3297:0 < i2886:0 && i3209:0 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9640sub514201290:0))), o9237[LinkedList$Entry.previous]o9239:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9239:0, o92351028164035:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(o10182sub0:0), 1, o10179[LinkedList$Entry.previous]o10176:0, o9640[LinkedList$Entry.previous]o9234:0, o9640[LinkedList$Entry.previous]o9637:0, o92351028164035:0) :|: o9640[LinkedList$Entry.previous]o9234:0 < o9237[LinkedList$Entry.previous]o9234:0 && o9237[LinkedList$Entry.previous]o9234:0 > 0 && o9640[LinkedList$Entry.previous]o9637:0 < o9237[LinkedList$Entry.previous]o9239:0 && o9237[LinkedList$Entry.previous]o9239:0 > -1 && i3297:0 < i2886:0 && i3209:0 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o9636sub514201166:0))), o9237[LinkedList$Entry.previous]o9239:0, o9237[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9237:0, o92351028164035:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(o11025sub0:0), o11020[LinkedList$Entry.previous]o11025:0, o9237[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9237:0, o92351028164035:0) :|: o9239[LinkedList$Entry.previous]o9237:0 > 0 && o9239[LinkedList$Entry.previous]o9234:0 > 0 && o9237[LinkedList$Entry.previous]o9239:0 > 0 && o9636[LinkedList$Entry.previous]o9234:0 < o9239[LinkedList$Entry.previous]o9234:0 && o9636[LinkedList$Entry.previous]o9237:0 < o9239[LinkedList$Entry.previous]o9237:0 && o9237[LinkedList$Entry.previous]o9239:0 < o11020[LinkedList$Entry.previous]o11025:0 && i3297:0 < i2886:0 && i3209:0 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13265sub1542365325:0), java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13265sub514201290:0), java.lang.Object(o9640sub514201290:0))), o9237[LinkedList$Entry.previous]o9239:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9239:0, o92351028164035:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13265sub1542365325:0), java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(o10182sub0:0), 1, o10179[LinkedList$Entry.previous]o10176:0, o9640[LinkedList$Entry.previous]o9234:0, o9640[LinkedList$Entry.previous]o9637:0, o92351028164035:0) :|: o9640[LinkedList$Entry.previous]o9234:0 < o9237[LinkedList$Entry.previous]o9234:0 && o9237[LinkedList$Entry.previous]o9234:0 > 0 && o9640[LinkedList$Entry.previous]o9637:0 < o9237[LinkedList$Entry.previous]o9239:0 && o9237[LinkedList$Entry.previous]o9239:0 > -1 && i3297:0 < i2886:0 && i3209:0 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o9636sub514201166:0))), o9237[LinkedList$Entry.previous]o9239:0, o9237[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9237:0, o92351028164035:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(o10160sub0:0), o10155[LinkedList$Entry.previous]o10160:0, o9237[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9237:0, o92351028164035:0) :|: o9239[LinkedList$Entry.previous]o9237:0 > 0 && o9239[LinkedList$Entry.previous]o9234:0 > 0 && o9237[LinkedList$Entry.previous]o9239:0 > 0 && o9636[LinkedList$Entry.previous]o9234:0 < o9239[LinkedList$Entry.previous]o9234:0 && o9237[LinkedList$Entry.previous]o9239:0 < o10155[LinkedList$Entry.previous]o10160:0 && o9636[LinkedList$Entry.previous]o9237:0 < o9239[LinkedList$Entry.previous]o9237:0 && i3297:0 < i2886:0 && i3209:0 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o9640sub514201290:0))), o9237[LinkedList$Entry.previous]o9239:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9234:0, o9237[LinkedList$Entry.previous]o9239:0, o92351028164035:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o9640sub1542365325:0)))))))))), java.lang.Object(o11033sub0:0), 1, o11030[LinkedList$Entry.previous]o11027:0, o9640[LinkedList$Entry.previous]o9234:0, o9640[LinkedList$Entry.previous]o9637:0, o92351028164035:0) :|: o9640[LinkedList$Entry.previous]o9234:0 < o9237[LinkedList$Entry.previous]o9234:0 && o9237[LinkedList$Entry.previous]o9234:0 > 0 && o9640[LinkedList$Entry.previous]o9637:0 < o9237[LinkedList$Entry.previous]o9239:0 && o9237[LinkedList$Entry.previous]o9239:0 > -1 && i3297:0 < i2886:0 && i3209:0 > 1

----------------------------------------

(123)
Obligation:
Rules:
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13250sub514201166:0), java.lang.Object(o9636sub514201166:0))), o9237[LinkedList$Entry.previous]o9239:0, o9237[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9237:0, o92351028164035:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(o10160sub0:0), o10155[LinkedList$Entry.previous]o10160:0, o9237[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9237:0, o92351028164035:0) :|: o9239[LinkedList$Entry.previous]o9237:0 > 0 && o9239[LinkedList$Entry.previous]o9234:0 > 0 && o9237[LinkedList$Entry.previous]o9239:0 > 0 && o9636[LinkedList$Entry.previous]o9234:0 < o9239[LinkedList$Entry.previous]o9234:0 && o9237[LinkedList$Entry.previous]o9239:0 < o10155[LinkedList$Entry.previous]o10160:0 && o9636[LinkedList$Entry.previous]o9237:0 < o9239[LinkedList$Entry.previous]o9237:0 && i3297:0 < i2886:0 && i3209:0 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x4, x3, x) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x7 < x4 && x4 > 0 && x8 < x3 && x3 > -1 && x9 < x10 && x11 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(x13)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14))), x15, x16, x17, x18, x12) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(x13)))))))), java.lang.Object(x19), x20, x16, x21, x22, x12) :|: x18 > 0 && x17 > 0 && x15 > 0 && x21 < x17 && x22 < x18 && x15 < x20 && x23 < x24 && x25 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x27), java.lang.Object(x28)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x29), java.lang.Object(x30))), x31, x32, x32, x31, x26) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x27), java.lang.Object(x28)))))))))), java.lang.Object(x33), 1, x34, x35, x36, x26) :|: x35 < x32 && x32 > 0 && x36 < x31 && x31 > -1 && x37 < x38 && x39 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(x41)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x42))), x43, x44, x45, x46, x40) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(x41)))))))), java.lang.Object(x47), x48, x44, x49, x50, x40) :|: x46 > 0 && x45 > 0 && x43 > 0 && x49 < x45 && x43 < x48 && x50 < x46 && x51 < x52 && x53 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x55)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x56))), x57, x58, x58, x57, x54) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x55)))))))))), java.lang.Object(x59), 1, x60, x61, x62, x54) :|: x61 < x58 && x58 > 0 && x62 < x57 && x57 > -1 && x63 < x64 && x65 > 1

----------------------------------------

(124) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(125)
Obligation:
Rules:
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13250sub514201166:0), java.lang.Object(o9636sub514201166:0))), o9237[LinkedList$Entry.previous]o9239:0, o9237[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9237:0, o92351028164035:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(o10160sub0:0), o10155[LinkedList$Entry.previous]o10160:0, o9237[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9237:0, o92351028164035:0) :|: o9239[LinkedList$Entry.previous]o9237:0 > 0 && o9239[LinkedList$Entry.previous]o9234:0 > 0 && o9237[LinkedList$Entry.previous]o9239:0 > 0 && o9636[LinkedList$Entry.previous]o9234:0 < o9239[LinkedList$Entry.previous]o9234:0 && o9237[LinkedList$Entry.previous]o9239:0 < o10155[LinkedList$Entry.previous]o10160:0 && o9636[LinkedList$Entry.previous]o9237:0 < o9239[LinkedList$Entry.previous]o9237:0 && i3297:0 < i2886:0 && i3209:0 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x4, x3, x) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x7 < x4 && x4 > 0 && x8 < x3 && x3 > -1 && x9 < x10 && x11 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(x13)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14))), x15, x16, x17, x18, x12) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(x13)))))))), java.lang.Object(x19), x20, x16, x21, x22, x12) :|: x18 > 0 && x17 > 0 && x15 > 0 && x21 < x17 && x22 < x18 && x15 < x20 && x23 < x24 && x25 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x27), java.lang.Object(x28)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x29), java.lang.Object(x30))), x31, x32, x32, x31, x26) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x27), java.lang.Object(x28)))))))))), java.lang.Object(x33), 1, x34, x35, x36, x26) :|: x35 < x32 && x32 > 0 && x36 < x31 && x31 > -1 && x37 < x38 && x39 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(x41)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x42))), x43, x44, x45, x46, x40) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(x41)))))))), java.lang.Object(x47), x48, x44, x49, x50, x40) :|: x46 > 0 && x45 > 0 && x43 > 0 && x49 < x45 && x43 < x48 && x50 < x46 && x51 < x52 && x53 > 1
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x55)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x56))), x57, x58, x58, x57, x54) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x55)))))))))), java.lang.Object(x59), 1, x60, x61, x62, x54) :|: x61 < x58 && x58 > 0 && x62 < x57 && x57 > -1 && x63 < x64 && x65 > 1

----------------------------------------

(126) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13250sub514201166:0), java.lang.Object(o9636sub514201166:0))), o9237[LinkedList$Entry.previous]o9239:0, o9237[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9237:0, o92351028164035:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(o10160sub0:0), o10155[LinkedList$Entry.previous]o10160:0, o9237[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9237:0, o92351028164035:0) :|: o9239[LinkedList$Entry.previous]o9237:0 > 0 && o9239[LinkedList$Entry.previous]o9234:0 > 0 && o9237[LinkedList$Entry.previous]o9239:0 > 0 && o9636[LinkedList$Entry.previous]o9234:0 < o9239[LinkedList$Entry.previous]o9234:0 && o9237[LinkedList$Entry.previous]o9239:0 < o10155[LinkedList$Entry.previous]o10160:0 && o9636[LinkedList$Entry.previous]o9237:0 < o9239[LinkedList$Entry.previous]o9237:0 && i3297:0 < i2886:0 && i3209:0 > 1
(2) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x4, x3, x) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x7 < x4 && x4 > 0 && x8 < x3 && x3 > -1 && x9 < x10 && x11 > 1
(3) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(x13)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14))), x15, x16, x17, x18, x12) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(x13)))))))), java.lang.Object(x19), x20, x16, x21, x22, x12) :|: x18 > 0 && x17 > 0 && x15 > 0 && x21 < x17 && x22 < x18 && x15 < x20 && x23 < x24 && x25 > 1
(4) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x27), java.lang.Object(x28)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x29), java.lang.Object(x30))), x31, x32, x32, x31, x26) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x27), java.lang.Object(x28)))))))))), java.lang.Object(x33), 1, x34, x35, x36, x26) :|: x35 < x32 && x32 > 0 && x36 < x31 && x31 > -1 && x37 < x38 && x39 > 1
(5) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(x41)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x42))), x43, x44, x45, x46, x40) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(x41)))))))), java.lang.Object(x47), x48, x44, x49, x50, x40) :|: x46 > 0 && x45 > 0 && x43 > 0 && x49 < x45 && x43 < x48 && x50 < x46 && x51 < x52 && x53 > 1
(6) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x55)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x56))), x57, x58, x58, x57, x54) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x55)))))))))), java.lang.Object(x59), 1, x60, x61, x62, x54) :|: x61 < x58 && x58 > 0 && x62 < x57 && x57 > -1 && x63 < x64 && x65 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (5)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (3), (4), (5), (6)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (3), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(127)
Obligation:

Termination digraph:
Nodes:
(1) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13250sub514201166:0), java.lang.Object(o9636sub514201166:0))), o9237[LinkedList$Entry.previous]o9239:0, o9237[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9234:0, o9239[LinkedList$Entry.previous]o9237:0, o92351028164035:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0, java.lang.Object(o9237sub1028164035:0)))))))), java.lang.Object(o10160sub0:0), o10155[LinkedList$Entry.previous]o10160:0, o9237[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9234:0, o9636[LinkedList$Entry.previous]o9237:0, o92351028164035:0) :|: o9239[LinkedList$Entry.previous]o9237:0 > 0 && o9239[LinkedList$Entry.previous]o9234:0 > 0 && o9237[LinkedList$Entry.previous]o9239:0 > 0 && o9636[LinkedList$Entry.previous]o9234:0 < o9239[LinkedList$Entry.previous]o9234:0 && o9237[LinkedList$Entry.previous]o9239:0 < o10155[LinkedList$Entry.previous]o10160:0 && o9636[LinkedList$Entry.previous]o9237:0 < o9239[LinkedList$Entry.previous]o9237:0 && i3297:0 < i2886:0 && i3209:0 > 1
(2) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x4, x3, x) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x7 < x4 && x4 > 0 && x8 < x3 && x3 > -1 && x9 < x10 && x11 > 1
(3) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(x13)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14))), x15, x16, x17, x18, x12) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(x13)))))))), java.lang.Object(x19), x20, x16, x21, x22, x12) :|: x18 > 0 && x17 > 0 && x15 > 0 && x21 < x17 && x22 < x18 && x15 < x20 && x23 < x24 && x25 > 1
(4) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x27), java.lang.Object(x28)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x29), java.lang.Object(x30))), x31, x32, x32, x31, x26) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x27), java.lang.Object(x28)))))))))), java.lang.Object(x33), 1, x34, x35, x36, x26) :|: x35 < x32 && x32 > 0 && x36 < x31 && x31 > -1 && x37 < x38 && x39 > 1
(5) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(x41)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x42))), x43, x44, x45, x46, x40) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40, java.lang.Object(x41)))))))), java.lang.Object(x47), x48, x44, x49, x50, x40) :|: x46 > 0 && x45 > 0 && x43 > 0 && x49 < x45 && x43 < x48 && x50 < x46 && x51 < x52 && x53 > 1
(6) f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x55)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x56))), x57, x58, x58, x57, x54) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x55)))))))))), java.lang.Object(x59), 1, x60, x61, x62, x54) :|: x61 < x58 && x58 > 0 && x62 < x57 && x57 > -1 && x63 < x64 && x65 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (5)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (3), (4), (5), (6)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (3), (4), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(128) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(129)
Obligation:
Rules:
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12:0, java.lang.Object(x13:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x14:0))), x15:0, x16:0, x17:0, x18:0, x12:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12:0, java.lang.Object(x13:0)))))))), java.lang.Object(x19:0), x20:0, x16:0, x21:0, x22:0, x12:0) :|: x24:0 > x23:0 && x25:0 > 1 && x20:0 > x15:0 && x22:0 < x18:0 && x21:0 < x17:0 && x15:0 > 0 && x17:0 > 0 && x18:0 > 0
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2:0))), x3:0, x4:0, x4:0, x3:0, x:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1:0)))))))))), java.lang.Object(x5:0), 1, x6:0, x7:0, x8:0, x:0) :|: x9:0 < x10:0 && x11:0 > 1 && x3:0 > -1 && x8:0 < x3:0 && x4:0 > 0 && x7:0 < x4:0
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40:0, java.lang.Object(x41:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x42:0))), x43:0, x44:0, x45:0, x46:0, x40:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x40:0, java.lang.Object(x41:0)))))))), java.lang.Object(x47:0), x48:0, x44:0, x49:0, x50:0, x40:0) :|: x52:0 > x51:0 && x53:0 > 1 && x50:0 < x46:0 && x48:0 > x43:0 && x49:0 < x45:0 && x43:0 > 0 && x45:0 > 0 && x46:0 > 0
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0:0, java.lang.Object(o9237sub1028164035:0:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o13250sub514201166:0:0), java.lang.Object(o9636sub514201166:0:0))), o9237[LinkedList$Entry.previous]o9239:0:0, o9237[LinkedList$Entry.previous]o9234:0:0, o9239[LinkedList$Entry.previous]o9234:0:0, o9239[LinkedList$Entry.previous]o9237:0:0, o92351028164035:0:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o92351028164035:0:0, java.lang.Object(o9237sub1028164035:0:0)))))))), java.lang.Object(o10160sub0:0:0), o10155[LinkedList$Entry.previous]o10160:0:0, o9237[LinkedList$Entry.previous]o9234:0:0, o9636[LinkedList$Entry.previous]o9234:0:0, o9636[LinkedList$Entry.previous]o9237:0:0, o92351028164035:0:0) :|: i3297:0:0 < i2886:0:0 && i3209:0:0 > 1 && o9636[LinkedList$Entry.previous]o9237:0:0 < o9239[LinkedList$Entry.previous]o9237:0:0 && o9237[LinkedList$Entry.previous]o9239:0:0 < o10155[LinkedList$Entry.previous]o10160:0:0 && o9636[LinkedList$Entry.previous]o9234:0:0 < o9239[LinkedList$Entry.previous]o9234:0:0 && o9237[LinkedList$Entry.previous]o9239:0:0 > 0 && o9239[LinkedList$Entry.previous]o9234:0:0 > 0 && o9239[LinkedList$Entry.previous]o9237:0:0 > 0
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x27:0), java.lang.Object(x28:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x29:0), java.lang.Object(x30:0))), x31:0, x32:0, x32:0, x31:0, x26:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x27:0), java.lang.Object(x28:0)))))))))), java.lang.Object(x33:0), 1, x34:0, x35:0, x36:0, x26:0) :|: x38:0 > x37:0 && x39:0 > 1 && x31:0 > -1 && x36:0 < x31:0 && x32:0 > 0 && x35:0 < x32:0
f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x55:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x56:0))), x57:0, x58:0, x58:0, x57:0, x54:0) -> f12762_0_lastIndexOf_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x54:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x55:0)))))))))), java.lang.Object(x59:0), 1, x60:0, x61:0, x62:0, x54:0) :|: x64:0 > x63:0 && x65:0 > 1 && x57:0 > -1 && x62:0 < x57:0 && x58:0 > 0 && x61:0 < x58:0

----------------------------------------

(130) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12762_0_lastIndexOf_Load(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
javaUtilEx.Content()
NULL()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(131)
Obligation:
Rules:
f12762_0_lastIndexOf_Load(c, c1, x15:0, x16:0, x17:0, x18:0, x12:0) -> f12762_0_lastIndexOf_Load(c2, c3, x20:0, x16:0, x21:0, x22:0, x12:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x24:0 > x23:0 && x25:0 > 1 && x20:0 > x15:0 && x22:0 < x18:0 && x21:0 < x17:0 && x15:0 > 0 && x17:0 > 0 && x18:0 > 0)
f12762_0_lastIndexOf_Load(c4, c5, x3:0, x4:0, x4:0, x3:0, x:0) -> f12762_0_lastIndexOf_Load(c6, c7, c8, x6:0, x7:0, x8:0, x:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x9:0 < x10:0 && x11:0 > 1 && x3:0 > -1 && x8:0 < x3:0 && x4:0 > 0 && x7:0 < x4:0)
f12762_0_lastIndexOf_Load(c9, c10, x43:0, x44:0, x45:0, x46:0, x40:0) -> f12762_0_lastIndexOf_Load(c11, c12, x48:0, x44:0, x49:0, x50:0, x40:0) :|: c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0)) && (x52:0 > x51:0 && x53:0 > 1 && x50:0 < x46:0 && x48:0 > x43:0 && x49:0 < x45:0 && x43:0 > 0 && x45:0 > 0 && x46:0 > 0)
f12762_0_lastIndexOf_Load(c13, c14, o9237[LinkedList$Entry.previous]o9239:0:0, o9237[LinkedList$Entry.previous]o9234:0:0, o9239[LinkedList$Entry.previous]o9234:0:0, o9239[LinkedList$Entry.previous]o9237:0:0, o92351028164035:0:0) -> f12762_0_lastIndexOf_Load(c15, c16, o10155[LinkedList$Entry.previous]o10160:0:0, o9237[LinkedList$Entry.previous]o9234:0:0, o9636[LinkedList$Entry.previous]o9234:0:0, o9636[LinkedList$Entry.previous]o9237:0:0, o92351028164035:0:0) :|: c16 = 0 && (c15 = 0 && (c14 = 0 && c13 = 0)) && (i3297:0:0 < i2886:0:0 && i3209:0:0 > 1 && o9636[LinkedList$Entry.previous]o9237:0:0 < o9239[LinkedList$Entry.previous]o9237:0:0 && o9237[LinkedList$Entry.previous]o9239:0:0 < o10155[LinkedList$Entry.previous]o10160:0:0 && o9636[LinkedList$Entry.previous]o9234:0:0 < o9239[LinkedList$Entry.previous]o9234:0:0 && o9237[LinkedList$Entry.previous]o9239:0:0 > 0 && o9239[LinkedList$Entry.previous]o9234:0:0 > 0 && o9239[LinkedList$Entry.previous]o9237:0:0 > 0)
f12762_0_lastIndexOf_Load(c17, c18, x31:0, x32:0, x32:0, x31:0, x26:0) -> f12762_0_lastIndexOf_Load(c19, c20, c21, x34:0, x35:0, x36:0, x26:0) :|: c21 = 1 && (c20 = 0 && (c19 = 0 && (c18 = 0 && c17 = 0))) && (x38:0 > x37:0 && x39:0 > 1 && x31:0 > -1 && x36:0 < x31:0 && x32:0 > 0 && x35:0 < x32:0)

----------------------------------------

(132) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12762_0_lastIndexOf_Load(x, x1, x2, x3, x4, x5, x6)] = -1 + c*x + c1*x1 + x5

The following rules are decreasing:
f12762_0_lastIndexOf_Load(c, c1, x15:0, x16:0, x17:0, x18:0, x12:0) -> f12762_0_lastIndexOf_Load(c2, c3, x20:0, x16:0, x21:0, x22:0, x12:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x24:0 > x23:0 && x25:0 > 1 && x20:0 > x15:0 && x22:0 < x18:0 && x21:0 < x17:0 && x15:0 > 0 && x17:0 > 0 && x18:0 > 0)
f12762_0_lastIndexOf_Load(c4, c5, x3:0, x4:0, x4:0, x3:0, x:0) -> f12762_0_lastIndexOf_Load(c6, c7, c8, x6:0, x7:0, x8:0, x:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x9:0 < x10:0 && x11:0 > 1 && x3:0 > -1 && x8:0 < x3:0 && x4:0 > 0 && x7:0 < x4:0)
f12762_0_lastIndexOf_Load(c9, c10, x43:0, x44:0, x45:0, x46:0, x40:0) -> f12762_0_lastIndexOf_Load(c11, c12, x48:0, x44:0, x49:0, x50:0, x40:0) :|: c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0)) && (x52:0 > x51:0 && x53:0 > 1 && x50:0 < x46:0 && x48:0 > x43:0 && x49:0 < x45:0 && x43:0 > 0 && x45:0 > 0 && x46:0 > 0)
f12762_0_lastIndexOf_Load(c13, c14, o9237[LinkedList$Entry.previous]o9239:0:0, o9237[LinkedList$Entry.previous]o9234:0:0, o9239[LinkedList$Entry.previous]o9234:0:0, o9239[LinkedList$Entry.previous]o9237:0:0, o92351028164035:0:0) -> f12762_0_lastIndexOf_Load(c15, c16, o10155[LinkedList$Entry.previous]o10160:0:0, o9237[LinkedList$Entry.previous]o9234:0:0, o9636[LinkedList$Entry.previous]o9234:0:0, o9636[LinkedList$Entry.previous]o9237:0:0, o92351028164035:0:0) :|: c16 = 0 && (c15 = 0 && (c14 = 0 && c13 = 0)) && (i3297:0:0 < i2886:0:0 && i3209:0:0 > 1 && o9636[LinkedList$Entry.previous]o9237:0:0 < o9239[LinkedList$Entry.previous]o9237:0:0 && o9237[LinkedList$Entry.previous]o9239:0:0 < o10155[LinkedList$Entry.previous]o10160:0:0 && o9636[LinkedList$Entry.previous]o9234:0:0 < o9239[LinkedList$Entry.previous]o9234:0:0 && o9237[LinkedList$Entry.previous]o9239:0:0 > 0 && o9239[LinkedList$Entry.previous]o9234:0:0 > 0 && o9239[LinkedList$Entry.previous]o9237:0:0 > 0)
f12762_0_lastIndexOf_Load(c17, c18, x31:0, x32:0, x32:0, x31:0, x26:0) -> f12762_0_lastIndexOf_Load(c19, c20, c21, x34:0, x35:0, x36:0, x26:0) :|: c21 = 1 && (c20 = 0 && (c19 = 0 && (c18 = 0 && c17 = 0))) && (x38:0 > x37:0 && x39:0 > 1 && x31:0 > -1 && x36:0 < x31:0 && x32:0 > 0 && x35:0 < x32:0)
The following rules are bounded:
f12762_0_lastIndexOf_Load(c, c1, x15:0, x16:0, x17:0, x18:0, x12:0) -> f12762_0_lastIndexOf_Load(c2, c3, x20:0, x16:0, x21:0, x22:0, x12:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x24:0 > x23:0 && x25:0 > 1 && x20:0 > x15:0 && x22:0 < x18:0 && x21:0 < x17:0 && x15:0 > 0 && x17:0 > 0 && x18:0 > 0)
f12762_0_lastIndexOf_Load(c9, c10, x43:0, x44:0, x45:0, x46:0, x40:0) -> f12762_0_lastIndexOf_Load(c11, c12, x48:0, x44:0, x49:0, x50:0, x40:0) :|: c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0)) && (x52:0 > x51:0 && x53:0 > 1 && x50:0 < x46:0 && x48:0 > x43:0 && x49:0 < x45:0 && x43:0 > 0 && x45:0 > 0 && x46:0 > 0)
f12762_0_lastIndexOf_Load(c13, c14, o9237[LinkedList$Entry.previous]o9239:0:0, o9237[LinkedList$Entry.previous]o9234:0:0, o9239[LinkedList$Entry.previous]o9234:0:0, o9239[LinkedList$Entry.previous]o9237:0:0, o92351028164035:0:0) -> f12762_0_lastIndexOf_Load(c15, c16, o10155[LinkedList$Entry.previous]o10160:0:0, o9237[LinkedList$Entry.previous]o9234:0:0, o9636[LinkedList$Entry.previous]o9234:0:0, o9636[LinkedList$Entry.previous]o9237:0:0, o92351028164035:0:0) :|: c16 = 0 && (c15 = 0 && (c14 = 0 && c13 = 0)) && (i3297:0:0 < i2886:0:0 && i3209:0:0 > 1 && o9636[LinkedList$Entry.previous]o9237:0:0 < o9239[LinkedList$Entry.previous]o9237:0:0 && o9237[LinkedList$Entry.previous]o9239:0:0 < o10155[LinkedList$Entry.previous]o10160:0:0 && o9636[LinkedList$Entry.previous]o9234:0:0 < o9239[LinkedList$Entry.previous]o9234:0:0 && o9237[LinkedList$Entry.previous]o9239:0:0 > 0 && o9239[LinkedList$Entry.previous]o9234:0:0 > 0 && o9239[LinkedList$Entry.previous]o9237:0:0 > 0)

----------------------------------------

(133)
Obligation:
Rules:
f12762_0_lastIndexOf_Load(c4, c5, x3:0, x4:0, x4:0, x3:0, x:0) -> f12762_0_lastIndexOf_Load(c6, c7, c8, x6:0, x7:0, x8:0, x:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x9:0 < x10:0 && x11:0 > 1 && x3:0 > -1 && x8:0 < x3:0 && x4:0 > 0 && x7:0 < x4:0)
f12762_0_lastIndexOf_Load(c17, c18, x31:0, x32:0, x32:0, x31:0, x26:0) -> f12762_0_lastIndexOf_Load(c19, c20, c21, x34:0, x35:0, x36:0, x26:0) :|: c21 = 1 && (c20 = 0 && (c19 = 0 && (c18 = 0 && c17 = 0))) && (x38:0 > x37:0 && x39:0 > 1 && x31:0 > -1 && x36:0 < x31:0 && x32:0 > 0 && x35:0 < x32:0)

----------------------------------------

(134) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f12762_0_lastIndexOf_Load ] = f12762_0_lastIndexOf_Load_5

The following rules are decreasing:
f12762_0_lastIndexOf_Load(c4, c5, x3:0, x4:0, x4:0, x3:0, x:0) -> f12762_0_lastIndexOf_Load(c6, c7, c8, x6:0, x7:0, x8:0, x:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x9:0 < x10:0 && x11:0 > 1 && x3:0 > -1 && x8:0 < x3:0 && x4:0 > 0 && x7:0 < x4:0)
f12762_0_lastIndexOf_Load(c17, c18, x31:0, x32:0, x32:0, x31:0, x26:0) -> f12762_0_lastIndexOf_Load(c19, c20, c21, x34:0, x35:0, x36:0, x26:0) :|: c21 = 1 && (c20 = 0 && (c19 = 0 && (c18 = 0 && c17 = 0))) && (x38:0 > x37:0 && x39:0 > 1 && x31:0 > -1 && x36:0 < x31:0 && x32:0 > 0 && x35:0 < x32:0)

The following rules are bounded:
f12762_0_lastIndexOf_Load(c4, c5, x3:0, x4:0, x4:0, x3:0, x:0) -> f12762_0_lastIndexOf_Load(c6, c7, c8, x6:0, x7:0, x8:0, x:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x9:0 < x10:0 && x11:0 > 1 && x3:0 > -1 && x8:0 < x3:0 && x4:0 > 0 && x7:0 < x4:0)
f12762_0_lastIndexOf_Load(c17, c18, x31:0, x32:0, x32:0, x31:0, x26:0) -> f12762_0_lastIndexOf_Load(c19, c20, c21, x34:0, x35:0, x36:0, x26:0) :|: c21 = 1 && (c20 = 0 && (c19 = 0 && (c18 = 0 && c17 = 0))) && (x38:0 > x37:0 && x39:0 > 1 && x31:0 > -1 && x36:0 < x31:0 && x32:0 > 0 && x35:0 < x32:0)


----------------------------------------

(135)
YES
