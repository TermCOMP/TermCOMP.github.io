NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/AXARr.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCNonTerm [COMPLETE, 109 ms]
(4) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
package simple.marbie1;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		Marbie1.loop(args.length);

	}

}


package simple.marbie1;

/* source: http://marble.sru.edu/~mxm4333/loop/page_03.html */

public class Marbie1 {
	
	public static void loop(int i) {    
		
		/*
		 * for(i=4; i>2; i++)
	     *     alert("This is an infinite loop.");
		 */

	    
		while (i > 2) {
			i++;
		}
		
	}
		
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
package simple.marbie1;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		Marbie1.loop(args.length);

	}

}


package simple.marbie1;

/* source: http://marble.sru.edu/~mxm4333/loop/page_03.html */

public class Marbie1 {
	
	public static void loop(int i) {    
		
		/*
		 * for(i=4; i>2; i++)
	     *     alert("This is an infinite loop.");
		 */

	    
		while (i > 2) {
			i++;
		}
		
	}
		
}



----------------------------------------

(3) JBCNonTerm (COMPLETE)
Reached a loop using the following run: 

0:<simple.marbie1.Main.main||0: load ADDR args||args: a10|| ->
	a10([java.lang.String...]): length 3 -->{java.lang.Object...}
YES:  (JL1)
1:<simple.marbie1.Main.main||1: arraylength|| - ||a10>
	a10([java.lang.String...]): length 3 -->{java.lang.Object...}
YES:  (JL1)
2:<simple.marbie1.Main.main||2: simple.marbie1.Marbie1.loop(I)V|| - ||3>
YES:  (JL1)
3:<simple.marbie1.Marbie1.loop||0: load INT i||i: 3|| ->
<simple.marbie1.Main.main||2: simple.marbie1.Marbie1.loop|| - || ->
YES:  (JL1)
Start state of loop: 

<simple.marbie1.Marbie1.loop||0: load INT i||i: i15|| ->
[a4(lv_0_0)]
<simple.marbie1.Main.main||2: simple.marbie1.Marbie1.loop|| - || ->
	i15: [0,+inf)(l1)
	i16: [0,+inf)(l1)
	a4([java.lang.String...]): length i16 -->{java.lang.Object...}
YES:  (JL1)


In the loop head node, references [i15] were interesting.

All methods calls in the loop body are side-effect free, hence they can be ignored.

By SMT, we could prove

((0 <= initial_i15 and 0 <= initial_i16) and (((path1_i15 = path1_i27 and path1_i30 = (path1_i27 + 1) and path1_i30 = res_i15 and path1_i15 = initial_i15) and (T and 2 = 2 and path1_i27 > 2)) and ((res1_i15 = res1_i27 and res1_i30 = (res1_i27 + 1) and res_i15 = res1_i15) and !(T and 2 = 2 and res1_i27 > 2))))

to be UNSAT. Consequently, the loop will not terminate.
----------------------------------------

(4)
NO
