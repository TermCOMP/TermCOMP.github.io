YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/CGjOV.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 51 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 48 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) TRUE


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class Sharing {

    private Sharing next;

    public Sharing(Sharing next) {
	this.next = next;
    }

    public void iter(Sharing other) {
	Sharing cursor = this;

	while (cursor != null) {
	    other.next = new Sharing(null);
	    other = other.next;

	    cursor = cursor.next;
	}
    }

    public static void main(String[] args) {
	Sharing sh1 = new Sharing(new Sharing(new Sharing(null)));
	Sharing sh2 = new Sharing(new Sharing(null));
	sh2.next.next = sh2;
	sh1.iter(sh2);
    }
}


----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class Sharing {

    private Sharing next;

    public Sharing(Sharing next) {
	this.next = next;
    }

    public void iter(Sharing other) {
	Sharing cursor = this;

	while (cursor != null) {
	    other.next = new Sharing(null);
	    other = other.next;

	    cursor = cursor.next;
	}
    }

    public static void main(String[] args) {
	Sharing sh1 = new Sharing(new Sharing(new Sharing(null)));
	Sharing sh2 = new Sharing(new Sharing(null));
	sh2.next.next = sh2;
	sh1.iter(sh2);
    }
}


----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
Sharing.main([Ljava/lang/String;)V: Graph of 126 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Proven termination by absence of SCCs
----------------------------------------

(6)
TRUE
