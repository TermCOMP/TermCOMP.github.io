NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/VREw9.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCNonTerm [COMPLETE, 105 ms]
(4) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
package simple.complInterv2;

public class ComplInterv2 {

	public static void loop(int i) {
		while (i != 0) {
			if (i > -5 && i < 5) {
				if (i < 0) {
					i++;
				}
				if (i > 0) {
					i--;
				}
			} 			
		}
	}

}


package simple.complInterv2;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		ComplInterv2.loop(args.length);
	}

}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
package simple.complInterv2;

public class ComplInterv2 {

	public static void loop(int i) {
		while (i != 0) {
			if (i > -5 && i < 5) {
				if (i < 0) {
					i++;
				}
				if (i > 0) {
					i--;
				}
			} 			
		}
	}

}


package simple.complInterv2;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		ComplInterv2.loop(args.length);
	}

}



----------------------------------------

(3) JBCNonTerm (COMPLETE)
Constructed a run with a repetition. States 3 and 11 are repetitions (when considering only the interesting positions [lv_0_0]).

0:<simple.complInterv2.Main.main||0: load ADDR args||args: a2|| ->
	a2([java.lang.String...]): length 5 -->{java.lang.Object...}
YES:  (JL1)
1:<simple.complInterv2.Main.main||1: arraylength|| - ||a2>
	a2([java.lang.String...]): length 5 -->{java.lang.Object...}
YES:  (JL1)
2:<simple.complInterv2.Main.main||2: simple.complInterv2.ComplInterv2.loop(I)V|| - ||5>
YES:  (JL1)
3:<simple.complInterv2.ComplInterv2.loop||0: load INT i||i: 5|| ->
<simple.complInterv2.Main.main||2: simple.complInterv2.ComplInterv2.loop|| - || ->
YES:  (JL1)
4:<simple.complInterv2.ComplInterv2.loop||1: EQ 0||i: 5||5>
<simple.complInterv2.Main.main||2: simple.complInterv2.ComplInterv2.loop|| - || ->
YES:  (JL1)
5:<simple.complInterv2.ComplInterv2.loop||4: load INT i||i: 5|| ->
<simple.complInterv2.Main.main||2: simple.complInterv2.ComplInterv2.loop|| - || ->
YES:  (JL1)
6:<simple.complInterv2.ComplInterv2.loop||5: push -5||i: 5||5>
<simple.complInterv2.Main.main||2: simple.complInterv2.ComplInterv2.loop|| - || ->
YES:  (JL1)
7:<simple.complInterv2.ComplInterv2.loop||7: LE||i: 5||5, -5>
<simple.complInterv2.Main.main||2: simple.complInterv2.ComplInterv2.loop|| - || ->
YES:  (JL1)
8:<simple.complInterv2.ComplInterv2.loop||10: load INT i||i: 5|| ->
<simple.complInterv2.Main.main||2: simple.complInterv2.ComplInterv2.loop|| - || ->
YES:  (JL1)
9:<simple.complInterv2.ComplInterv2.loop||11: push 5||i: 5||5>
<simple.complInterv2.Main.main||2: simple.complInterv2.ComplInterv2.loop|| - || ->
YES:  (JL1)
10:<simple.complInterv2.ComplInterv2.loop||12: GE||i: 5||5, 5>
<simple.complInterv2.Main.main||2: simple.complInterv2.ComplInterv2.loop|| - || ->
YES:  (JL1)
11:<simple.complInterv2.ComplInterv2.loop||0: load INT i||i: 5|| ->
<simple.complInterv2.Main.main||2: simple.complInterv2.ComplInterv2.loop|| - || ->
YES:  (JL1)

----------------------------------------

(4)
NO
