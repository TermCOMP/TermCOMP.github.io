YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/IpqEs.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 2062 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) JBCTerminationSCC
        (8) SCCToIRSProof [SOUND, 111 ms]
        (9) IRSwT
        (10) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (11) IRSwT
        (12) IRSwTTerminationDigraphProof [EQUIVALENT, 30 ms]
        (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) TempFilterProof [SOUND, 34 ms]
        (17) IntTRS
        (18) PolynomialOrderProcessor [EQUIVALENT, 5 ms]
        (19) IntTRS
        (20) RankingReductionPairProof [EQUIVALENT, 7 ms]
        (21) YES
    (22) JBCTerminationSCC
        (23) SCCToIRSProof [SOUND, 163 ms]
        (24) IRSwT
        (25) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (26) IRSwT
        (27) IRSwTTerminationDigraphProof [EQUIVALENT, 136 ms]
        (28) IRSwT
        (29) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (30) IRSwT
        (31) TempFilterProof [SOUND, 18 ms]
        (32) IntTRS
        (33) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (34) IntTRS
        (35) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (36) YES
    (37) JBCTerminationSCC
        (38) SCCToIRSProof [SOUND, 154 ms]
        (39) IRSwT
        (40) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (41) IRSwT
        (42) IRSwTTerminationDigraphProof [EQUIVALENT, 132 ms]
        (43) IRSwT
        (44) IntTRSCompressionProof [EQUIVALENT, 1 ms]
        (45) IRSwT
        (46) TempFilterProof [SOUND, 19 ms]
        (47) IntTRS
        (48) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (49) IntTRS
        (50) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (51) YES
    (52) JBCTerminationSCC
        (53) SCCToIRSProof [SOUND, 80 ms]
        (54) IRSwT
        (55) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (56) IRSwT
        (57) IRSwTTerminationDigraphProof [EQUIVALENT, 16 ms]
        (58) IRSwT
        (59) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (60) IRSwT
        (61) TempFilterProof [SOUND, 21 ms]
        (62) IntTRS
        (63) PolynomialOrderProcessor [EQUIVALENT, 4 ms]
        (64) IntTRS
        (65) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (66) YES
    (67) JBCTerminationSCC
        (68) SCCToIRSProof [SOUND, 70 ms]
        (69) IRSwT
        (70) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (71) IRSwT
        (72) IRSwTTerminationDigraphProof [EQUIVALENT, 17 ms]
        (73) IRSwT
        (74) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (75) IRSwT
        (76) TempFilterProof [SOUND, 37 ms]
        (77) IntTRS
        (78) PolynomialOrderProcessor [EQUIVALENT, 11 ms]
        (79) IntTRS
        (80) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (81) YES
    (82) JBCTerminationSCC
        (83) SCCToIRSProof [SOUND, 61 ms]
        (84) IRSwT
        (85) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (86) IRSwT
        (87) IRSwTTerminationDigraphProof [EQUIVALENT, 140 ms]
        (88) IRSwT
        (89) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (90) IRSwT
        (91) TempFilterProof [SOUND, 13 ms]
        (92) IntTRS
        (93) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (94) YES
    (95) JBCTerminationSCC
        (96) SCCToIRSProof [SOUND, 78 ms]
        (97) IRSwT
        (98) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (99) IRSwT
        (100) IRSwTTerminationDigraphProof [EQUIVALENT, 165 ms]
        (101) IRSwT
        (102) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (103) IRSwT
        (104) TempFilterProof [SOUND, 23 ms]
        (105) IntTRS
        (106) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (107) IntTRS
        (108) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (109) YES
    (110) JBCTerminationSCC
        (111) SCCToIRSProof [SOUND, 126 ms]
        (112) IRSwT
        (113) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (114) IRSwT
        (115) IRSwTTerminationDigraphProof [EQUIVALENT, 119 ms]
        (116) IRSwT
        (117) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (118) IRSwT
        (119) TempFilterProof [SOUND, 18 ms]
        (120) IntTRS
        (121) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (122) IntTRS
        (123) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (124) YES
    (125) JBCTerminationSCC
        (126) SCCToIRSProof [SOUND, 128 ms]
        (127) IRSwT
        (128) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (129) IRSwT
        (130) IRSwTTerminationDigraphProof [EQUIVALENT, 138 ms]
        (131) IRSwT
        (132) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (133) IRSwT
        (134) TempFilterProof [SOUND, 9 ms]
        (135) IntTRS
        (136) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (137) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Collection</tt>
 * interface, to minimize the effort required to implement this interface. <p>
 *
 * To implement an unmodifiable collection, the programmer needs only to
 * extend this class and provide implementations for the <tt>iterator</tt> and
 * <tt>size</tt> methods.  (The iterator returned by the <tt>iterator</tt>
 * method must implement <tt>hasNext</tt> and <tt>next</tt>.)<p>
 *
 * To implement a modifiable collection, the programmer must additionally
 * override this class's <tt>add</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by the
 * <tt>iterator</tt> method must additionally implement its <tt>remove</tt>
 * method.<p>
 *
 * The programmer should generally provide a void (no argument) and
 * <tt>Collection</tt> constructor, as per the recommendation in the
 * <tt>Collection</tt> interface specification.<p>
 *
 * The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if
 * the collection being implemented admits a more efficient implementation.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractCollection<E> implements Collection<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractCollection() {
    }

    // Query Operations

    /**
     * Returns an iterator over the elements contained in this collection.
     *
     * @return an iterator over the elements contained in this collection
     */
    public abstract Iterator<E> iterator();

    public abstract int size();

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the elements in the collection,
     * checking each element in turn for equality with the specified element.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean contains(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return true;
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return true;
        }
        return false;
    }

    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     */
    public boolean add(E e) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the collection looking for the
     * specified element.  If it finds the element, it removes the element
     * from the collection using the iterator's remove method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's iterator method does not implement the <tt>remove</tt>
     * method and this collection contains the specified object.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public boolean remove(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext()) {
                if (e.next()==null) {
                    e.remove();
                    return true;
                }
            }
        } else {
            while (e.hasNext()) {
                if (o.equals(e.next())) {
                    e.remove();
                    return true;
                }
            }
        }
        return false;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection,
     * checking each element returned by the iterator in turn to see
     * if it's contained in this collection.  If all elements are so
     * contained <tt>true</tt> is returned, otherwise <tt>false</tt>.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @see #contains(Object)
     */
    public boolean containsAll(Collection<?> c) {
        Iterator<?> e = c.iterator();
        while (e.hasNext())
            if (!contains(e.next()))
                return false;
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection, and adds
     * each object returned by the iterator to this collection, in turn.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> unless <tt>add</tt> is
     * overridden (assuming the specified collection is non-empty).
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     *
     * @see #add(Object)
     */
    public boolean addAll(Collection<? extends E> c) {
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            if (add(e.next()))
                modified = true;
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's so contained, it's removed from
     * this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements in common with the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;
        Iterator<?> e = iterator();
        while (e.hasNext()) {
            if (c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's not so contained, it's removed
     * from this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements not present in the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean retainAll(Collection<?> c) {
        boolean modified = false;
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            if (!c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, removing each
     * element using the <tt>Iterator.remove</tt> operation.  Most
     * implementations will probably choose to override this method for
     * efficiency.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's <tt>iterator</tt> method does not implement the
     * <tt>remove</tt> method and this collection is non-empty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            e.next();
            e.remove();
        }
    }


    //  String conversion

    /**
     * Returns a string representation of this collection.  The string
     * representation consists of a list of the collection's elements in the
     * order they are returned by its iterator, enclosed in square brackets
     * (<tt>"[]"</tt>).  Adjacent elements are separated by the characters
     * <tt>", "</tt> (comma and space).  Elements are converted to strings as
     * by {@link String#valueOf(Object)}.
     *
     * @return a string representation of this collection
     */
    public String toString() {
        Iterator<E> i = iterator();
        if (! i.hasNext())
            return "[]";

        String sb = "";
        sb = sb + "[";
        for (;;) {
            E e = i.next();
            sb = sb + (e == this ? "(this Collection)" : e);
            if (! i.hasNext()) {
                sb = sb + "]";
		return sb;
            }
            sb = sb + ", ";
        }
    }

}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the {@link List}
 * interface to minimize the effort required to implement this interface
 * backed by a "random access" data store (such as an array).  For sequential
 * access data (such as a linked list), {@link AbstractSequentialList} should
 * be used in preference to this class.
 *
 * <p>To implement an unmodifiable list, the programmer needs only to extend
 * this class and provide implementations for the {@link #get(int)} and
 * {@link List#size() size()} methods.
 *
 * <p>To implement a modifiable list, the programmer must additionally
 * override the {@link #set(int, Object) set(int, E)} method (which otherwise
 * throws an {@code UnsupportedOperationException}).  If the list is
 * variable-size the programmer must additionally override the
 * {@link #add(int, Object) add(int, E)} and {@link #remove(int)} methods.
 *
 * <p>The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the {@link Collection} interface
 * specification.
 *
 * <p>Unlike the other abstract collection implementations, the programmer does
 * <i>not</i> have to provide an iterator implementation; the iterator and
 * list iterator are implemented by this class, on top of the "random access"
 * methods:
 * {@link #get(int)},
 * {@link #set(int, Object) set(int, E)},
 * {@link #add(int, Object) add(int, E)} and
 * {@link #remove(int)}.
 *
 * <p>The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if the
 * collection being implemented admits a more efficient implementation.
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @since 1.2
 */

public abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractList() {
    }

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * <p>This implementation calls {@code add(size(), e)}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @param e element to be appended to this list
     * @return {@code true} (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the {@code add} operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    public boolean add(E e) {
        add(size(), e);
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    abstract public E get(int index);

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        throw new UnsupportedOperationException();
    }


    // Search Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator (with
     * {@code listIterator()}).  Then, it iterates over the list until the
     * specified element is found or the end of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int indexOf(Object o) {
        ListIterator<E> e = listIterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return e.previousIndex();
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return e.previousIndex();
        }
        return -1;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator that points to the end
     * of the list (with {@code listIterator(size())}).  Then, it iterates
     * backwards over the list until the specified element is found, or the
     * beginning of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int lastIndexOf(Object o) {
        ListIterator<E> e = listIterator(size());
        if (o==null) {
            while (e.hasPrevious())
                if (e.previous()==null)
                    return e.nextIndex();
        } else {
            while (e.hasPrevious())
                if (o.equals(e.previous()))
                    return e.nextIndex();
        }
        return -1;
    }


    // Bulk Operations

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * <p>This implementation calls {@code removeRange(0, size())}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless {@code remove(int
     * index)} or {@code removeRange(int fromIndex, int toIndex)} is
     * overridden.
     *
     * @throws UnsupportedOperationException if the {@code clear} operation
     *         is not supported by this list
     */
    public void clear() {
        removeRange(0, size());
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation gets an iterator over the specified collection
     * and iterates over it, inserting the elements obtained from the
     * iterator into this list at the appropriate position, one at a time,
     * using {@code add(int, E)}.
     * Many implementations will override this method for efficiency.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            add(index++, e.next());
            modified = true;
        }
        return modified;
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * <p>This implementation returns a straightforward implementation of the
     * iterator interface, relying on the backing list's {@code size()},
     * {@code get(int)}, and {@code remove(int)} methods.
     *
     * <p>Note that the iterator returned by this method will throw an
     * {@link UnsupportedOperationException} in response to its
     * {@code remove} method unless the list's {@code remove(int)} method is
     * overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification
     * for the (protected) {@link #modCount} field.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    public Iterator<E> iterator() {
        return new Itr();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns {@code listIterator(0)}.
     *
     * @see #listIterator(int)
     */
    public ListIterator<E> listIterator() {
        return listIterator(0);
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a straightforward implementation of the
     * {@code ListIterator} interface that extends the implementation of the
     * {@code Iterator} interface returned by the {@code iterator()} method.
     * The {@code ListIterator} implementation relies on the backing list's
     * {@code get(int)}, {@code set(int, E)}, {@code add(int, E)}
     * and {@code remove(int)} methods.
     *
     * <p>Note that the list iterator returned by this implementation will
     * throw an {@link UnsupportedOperationException} in response to its
     * {@code remove}, {@code set} and {@code add} methods unless the
     * list's {@code remove(int)}, {@code set(int, E)}, and
     * {@code add(int, E)} methods are overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification for
     * the (protected) {@link #modCount} field.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public ListIterator<E> listIterator(final int index) {
        rangeCheckForAdd(index);

        return new ListItr(index);
    }

    private class Itr implements Iterator<E> {
        /**
         * Index of element to be returned by subsequent call to next.
         */
        int cursor = 0;

        /**
         * Index of element returned by most recent call to next or
         * previous.  Reset to -1 if this element is deleted by a call
         * to remove.
         */
        int lastRet = -1;

        /**
         * The modCount value that the iterator believes that the backing
         * List should have.  If this expectation is violated, the iterator
         * has detected concurrent modification.
         */
        int expectedModCount = modCount;

        public boolean hasNext() {
            return cursor != size();
        }

        public E next() {
            checkForComodification();
            try {
                int i = cursor;
                E next = get(i);
                lastRet = i;
                cursor = i + 1;
                return next;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public void remove() {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.remove(lastRet);
                if (lastRet < cursor)
                    cursor--;
                lastRet = -1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException e) {
                throw new ConcurrentModificationException();
            }
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private class ListItr extends Itr implements ListIterator<E> {
        ListItr(int index) {
            cursor = index;
        }

        public boolean hasPrevious() {
            return cursor != 0;
        }

        public E previous() {
            checkForComodification();
            try {
                int i = cursor - 1;
                E previous = get(i);
                lastRet = cursor = i;
                return previous;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public int nextIndex() {
            return cursor;
        }

        public int previousIndex() {
            return cursor-1;
        }

        public void set(E e) {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.set(lastRet, e);
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }

        public void add(E e) {
            checkForComodification();

            try {
                int i = cursor;
                AbstractList.this.add(i, e);
                lastRet = -1;
                cursor = i + 1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a list that subclasses
     * {@code AbstractList}.  The subclass stores, in private fields, the
     * offset of the subList within the backing list, the size of the subList
     * (which can change over its lifetime), and the expected
     * {@code modCount} value of the backing list.  There are two variants
     * of the subclass, one of which implements {@code RandomAccess}.
     * If this list implements {@code RandomAccess} the returned list will
     * be an instance of the subclass that implements {@code RandomAccess}.
     *
     * <p>The subclass's {@code set(int, E)}, {@code get(int)},
     * {@code add(int, E)}, {@code remove(int)}, {@code addAll(int,
     * Collection)} and {@code removeRange(int, int)} methods all
     * delegate to the corresponding methods on the backing abstract list,
     * after bounds-checking the index and adjusting for the offset.  The
     * {@code addAll(Collection c)} method merely returns {@code addAll(size,
     * c)}.
     *
     * <p>The {@code listIterator(int)} method returns a "wrapper object"
     * over a list iterator on the backing list, which is created with the
     * corresponding method on the backing list.  The {@code iterator} method
     * merely returns {@code listIterator()}, and the {@code size} method
     * merely returns the subclass's {@code size} field.
     *
     * <p>All methods first check to see if the actual {@code modCount} of
     * the backing list is equal to its expected value, and throw a
     * {@code ConcurrentModificationException} if it is not.
     *
     * @throws IndexOutOfBoundsException if an endpoint index value is out of range
     *         {@code (fromIndex < 0 || toIndex > size)}
     * @throws IllegalArgumentException if the endpoint indices are out of order
     *         {@code (fromIndex > toIndex)}
     */
    public List<E> subList(int fromIndex, int toIndex) {
        return (this instanceof RandomAccess ?
                new RandomAccessSubList<E>(this, fromIndex, toIndex) :
                new SubList<E>(this, fromIndex, toIndex));
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * {@code true} if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements {@code e1} and
     * {@code e2} are <i>equal</i> if {@code (e1==null ? e2==null :
     * e1.equals(e2))}.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.<p>
     *
     * This implementation first checks if the specified object is this
     * list. If so, it returns {@code true}; if not, it checks if the
     * specified object is a list. If not, it returns {@code false}; if so,
     * it iterates over both lists, comparing corresponding pairs of elements.
     * If any comparison returns {@code false}, this method returns
     * {@code false}.  If either iterator runs out of elements before the
     * other it returns {@code false} (as the lists are of unequal length);
     * otherwise it returns {@code true} when the iterations complete.
     *
     * @param o the object to be compared for equality with this list
     * @return {@code true} if the specified object is equal to this list
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;
        if (!(o instanceof List))
            return false;

        ListIterator<E> e1 = listIterator();
        ListIterator e2 = ((List) o).listIterator();
        while(e1.hasNext() && e2.hasNext()) {
            E o1 = e1.next();
            Object o2 = e2.next();
            if (!(o1==null ? o2==null : o1.equals(o2)))
                return false;
        }
        return !(e1.hasNext() || e2.hasNext());
    }

    /**
     * Returns the hash code value for this list.
     *
     * <p>This implementation uses exactly the code that is used to define the
     * list hash function in the documentation for the {@link List#hashCode}
     * method.
     *
     * @return the hash code value for this list
     */
    public int hashCode() {
        int hashCode = 1;
        Iterator<E> it = this.iterator();
        while (it.hasNext()) {
            E e = it.next();
            hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
        }
        return hashCode;
    }

    /**
     * Removes from this list all of the elements whose index is between
     * {@code fromIndex}, inclusive, and {@code toIndex}, exclusive.
     * Shifts any succeeding elements to the left (reduces their index).
     * This call shortens the list by {@code (toIndex - fromIndex)} elements.
     * (If {@code toIndex==fromIndex}, this operation has no effect.)
     *
     * <p>This method is called by the {@code clear} operation on this list
     * and its subLists.  Overriding this method to take advantage of
     * the internals of the list implementation can <i>substantially</i>
     * improve the performance of the {@code clear} operation on this list
     * and its subLists.
     *
     * <p>This implementation gets a list iterator positioned before
     * {@code fromIndex}, and repeatedly calls {@code ListIterator.next}
     * followed by {@code ListIterator.remove} until the entire range has
     * been removed.  <b>Note: if {@code ListIterator.remove} requires linear
     * time, this implementation requires quadratic time.</b>
     *
     * @param fromIndex index of first element to be removed
     * @param toIndex index after last element to be removed
     */
    protected void removeRange(int fromIndex, int toIndex) {
        ListIterator<E> it = listIterator(fromIndex);
        for (int i=0, n=toIndex-fromIndex; i<n; i++) {
            it.next();
            it.remove();
        }
    }

    /**
     * The number of times this list has been <i>structurally modified</i>.
     * Structural modifications are those that change the size of the
     * list, or otherwise perturb it in such a fashion that iterations in
     * progress may yield incorrect results.
     *
     * <p>This field is used by the iterator and list iterator implementation
     * returned by the {@code iterator} and {@code listIterator} methods.
     * If the value of this field changes unexpectedly, the iterator (or list
     * iterator) will throw a {@code ConcurrentModificationException} in
     * response to the {@code next}, {@code remove}, {@code previous},
     * {@code set} or {@code add} operations.  This provides
     * <i>fail-fast</i> behavior, rather than non-deterministic behavior in
     * the face of concurrent modification during iteration.
     *
     * <p><b>Use of this field by subclasses is optional.</b> If a subclass
     * wishes to provide fail-fast iterators (and list iterators), then it
     * merely has to increment this field in its {@code add(int, E)} and
     * {@code remove(int)} methods (and any other methods that it overrides
     * that result in structural modifications to the list).  A single call to
     * {@code add(int, E)} or {@code remove(int)} must add no more than
     * one to this field, or the iterators (and list iterators) will throw
     * bogus {@code ConcurrentModificationExceptions}.  If an implementation
     * does not wish to provide fail-fast iterators, this field may be
     * ignored.
     */
    protected transient int modCount = 0;

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size())
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }
}

class SubList<E> extends AbstractList<E> {
    private final AbstractList<E> l;
    private final int offset;
    private int size;

    SubList(AbstractList<E> list, int fromIndex, int toIndex) {
        if (fromIndex < 0)
            throw new IndexOutOfBoundsException();
        if (toIndex > list.size())
            throw new IndexOutOfBoundsException();
        if (fromIndex > toIndex)
            throw new IllegalArgumentException();
        l = list;
        offset = fromIndex;
        size = toIndex - fromIndex;
        this.modCount = l.modCount;
    }

    public E set(int index, E element) {
        rangeCheck(index);
        checkForComodification();
        return l.set(index+offset, element);
    }

    public E get(int index) {
        rangeCheck(index);
        checkForComodification();
        return l.get(index+offset);
    }

    public int size() {
        checkForComodification();
        return size;
    }

    public void add(int index, E element) {
        rangeCheckForAdd(index);
        checkForComodification();
        l.add(index+offset, element);
        this.modCount = l.modCount;
        size++;
    }

    public E remove(int index) {
        rangeCheck(index);
        checkForComodification();
        E result = l.remove(index+offset);
        this.modCount = l.modCount;
        size--;
        return result;
    }

    protected void removeRange(int fromIndex, int toIndex) {
        checkForComodification();
        l.removeRange(fromIndex+offset, toIndex+offset);
        this.modCount = l.modCount;
        size -= (toIndex-fromIndex);
    }

    public boolean addAll(Collection<? extends E> c) {
        return addAll(size, c);
    }

    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        int cSize = c.size();
        if (cSize==0)
            return false;

        checkForComodification();
        l.addAll(offset+index, c);
        this.modCount = l.modCount;
        size += cSize;
        return true;
    }

    public Iterator<E> iterator() {
        return listIterator();
    }

    public ListIterator<E> listIterator(final int index) {
        checkForComodification();
        rangeCheckForAdd(index);

        return new ListIterator<E>() {
            private final ListIterator<E> i = l.listIterator(index+offset);

            public boolean hasNext() {
                return nextIndex() < size;
            }

            public E next() {
                if (hasNext())
                    return i.next();
                else
                    throw new NoSuchElementException();
            }

            public boolean hasPrevious() {
                return previousIndex() >= 0;
            }

            public E previous() {
                if (hasPrevious())
                    return i.previous();
                else
                    throw new NoSuchElementException();
            }

            public int nextIndex() {
                return i.nextIndex() - offset;
            }

            public int previousIndex() {
                return i.previousIndex() - offset;
            }

            public void remove() {
                i.remove();
                SubList.this.modCount = l.modCount;
                size--;
            }

            public void set(E e) {
                i.set(e);
            }

            public void add(E e) {
                i.add(e);
                SubList.this.modCount = l.modCount;
                size++;
            }
        };
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new SubList<E>(this, fromIndex, toIndex);
    }

    private void rangeCheck(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }

    private void checkForComodification() {
        if (this.modCount != l.modCount)
            throw new ConcurrentModificationException();
    }
}

class RandomAccessSubList<E> extends SubList<E> implements RandomAccess {
    RandomAccessSubList(AbstractList<E> list, int fromIndex, int toIndex) {
        super(list, fromIndex, toIndex);
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new RandomAccessSubList<E>(this, fromIndex, toIndex);
    }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>List</tt>
 * interface to minimize the effort required to implement this interface
 * backed by a "sequential access" data store (such as a linked list).  For
 * random access data (such as an array), <tt>AbstractList</tt> should be used
 * in preference to this class.<p>
 *
 * This class is the opposite of the <tt>AbstractList</tt> class in the sense
 * that it implements the "random access" methods (<tt>get(int index)</tt>,
 * <tt>set(int index, E element)</tt>, <tt>add(int index, E element)</tt> and
 * <tt>remove(int index)</tt>) on top of the list's list iterator, instead of
 * the other way around.<p>
 *
 * To implement a list the programmer needs only to extend this class and
 * provide implementations for the <tt>listIterator</tt> and <tt>size</tt>
 * methods.  For an unmodifiable list, the programmer need only implement the
 * list iterator's <tt>hasNext</tt>, <tt>next</tt>, <tt>hasPrevious</tt>,
 * <tt>previous</tt> and <tt>index</tt> methods.<p>
 *
 * For a modifiable list the programmer should additionally implement the list
 * iterator's <tt>set</tt> method.  For a variable-size list the programmer
 * should additionally implement the list iterator's <tt>remove</tt> and
 * <tt>add</tt> methods.<p>
 *
 * The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the <tt>Collection</tt> interface
 * specification.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see List
 * @see AbstractList
 * @see AbstractCollection
 * @since 1.2
 */

public abstract class AbstractSequentialList<E> extends AbstractList<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractSequentialList() {
    }

    /**
     * Returns the element at the specified position in this list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the element using <tt>ListIterator.next</tt> and returns it.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        try {
            return listIterator(index).next();
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the current element using <tt>ListIterator.next</tt> and replaces it
     * with <tt>ListIterator.set</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>set</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        try {
            ListIterator<E> e = listIterator(index);
            E oldVal = e.next();
            e.set(element);
            return oldVal;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it
     * inserts the specified element with <tt>ListIterator.add</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>add</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        try {
            listIterator(index).add(element);
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it removes
     * the element with <tt>ListIterator.remove</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>remove</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        try {
            ListIterator<E> e = listIterator(index);
            E outCast = e.next();
            e.remove();
            return outCast;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Bulk Operations

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * <p>This implementation gets an iterator over the specified collection and
     * a list iterator over this list pointing to the indexed element (with
     * <tt>listIterator(index)</tt>).  Then, it iterates over the specified
     * collection, inserting the elements obtained from the iterator into this
     * list, one at a time, using <tt>ListIterator.add</tt> followed by
     * <tt>ListIterator.next</tt> (to skip over the added element).
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator returned by
     * the <tt>listIterator</tt> method does not implement the <tt>add</tt>
     * operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        try {
            boolean modified = false;
            ListIterator<E> e1 = listIterator(index);
            Iterator<? extends E> e2 = c.iterator();
            while (e2.hasNext()) {
                e1.add(e2.next());
                modified = true;
            }
            return modified;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list (in proper
     * sequence).<p>
     *
     * This implementation merely returns a list iterator over the list.
     *
     * @return an iterator over the elements in this list (in proper sequence)
     */
    public Iterator<E> iterator() {
        return listIterator();
    }

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @param  index index of first element to be returned from the list
     *         iterator (by a call to the <code>next</code> method)
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public abstract ListIterator<E> listIterator(int index);
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * The root interface in the <i>collection hierarchy</i>.  A collection
 * represents a group of objects, known as its <i>elements</i>.  Some
 * collections allow duplicate elements and others do not.  Some are ordered
 * and others unordered.  The JDK does not provide any <i>direct</i>
 * implementations of this interface: it provides implementations of more
 * specific subinterfaces like <tt>Set</tt> and <tt>List</tt>.  This interface
 * is typically used to pass collections around and manipulate them where
 * maximum generality is desired.
 *
 * <p><i>Bags</i> or <i>multisets</i> (unordered collections that may contain
 * duplicate elements) should implement this interface directly.
 *
 * <p>All general-purpose <tt>Collection</tt> implementation classes (which
 * typically implement <tt>Collection</tt> indirectly through one of its
 * subinterfaces) should provide two "standard" constructors: a void (no
 * arguments) constructor, which creates an empty collection, and a
 * constructor with a single argument of type <tt>Collection</tt>, which
 * creates a new collection with the same elements as its argument.  In
 * effect, the latter constructor allows the user to copy any collection,
 * producing an equivalent collection of the desired implementation type.
 * There is no way to enforce this convention (as interfaces cannot contain
 * constructors) but all of the general-purpose <tt>Collection</tt>
 * implementations in the Java platform libraries comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the collection on which they operate, are specified to
 * throw <tt>UnsupportedOperationException</tt> if this collection does not
 * support the operation.  If this is the case, these methods may, but are not
 * required to, throw an <tt>UnsupportedOperationException</tt> if the
 * invocation would have no effect on the collection.  For example, invoking
 * the {@link #addAll(Collection)} method on an unmodifiable collection may,
 * but is not required to, throw the exception if the collection to be added
 * is empty.
 *
 * <p>Some collection implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the collection may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>It is up to each collection to determine its own synchronization
 * policy.  In the absence of a stronger guarantee by the
 * implementation, undefined behavior may result from the invocation
 * of any method on a collection that is being mutated by another
 * thread; this includes direct invocations, passing the collection to
 * a method that might perform invocations, and using an existing
 * iterator to examine the collection.
 *
 * <p>Many methods in Collections Framework interfaces are defined in
 * terms of the {@link Object#equals(Object) equals} method.  For example,
 * the specification for the {@link #contains(Object) contains(Object o)}
 * method says: "returns <tt>true</tt> if and only if this collection
 * contains at least one element <tt>e</tt> such that
 * <tt>(o==null ? e==null : o.equals(e))</tt>."  This specification should
 * <i>not</i> be construed to imply that invoking <tt>Collection.contains</tt>
 * with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be
 * invoked for any element <tt>e</tt>.  Implementations are free to implement
 * optimizations whereby the <tt>equals</tt> invocation is avoided, for
 * example, by first comparing the hash codes of the two elements.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see     Set
 * @see     List
 * @see     Map
 * @see     SortedSet
 * @see     SortedMap
 * @see     HashSet
 * @see     TreeSet
 * @see     ArrayList
 * @see     LinkedList
 * @see     Vector
 * @see     Collections
 * @see     Arrays
 * @see     AbstractCollection
 * @since 1.2
 */

public interface Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this collection.  If this collection
     * contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this collection
     */
    int size();

    /**
     * Returns <tt>true</tt> if this collection contains no elements.
     *
     * @return <tt>true</tt> if this collection contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this collection contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this collection
     * contains at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this collection is to be tested
     * @return <tt>true</tt> if this collection contains the specified
     *         element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this collection.  There are no
     * guarantees concerning the order in which the elements are returned
     * (unless this collection is an instance of some class that provides a
     * guarantee).
     *
     * @return an <tt>Iterator</tt> over the elements in this collection
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Ensures that this collection contains the specified element (optional
     * operation).  Returns <tt>true</tt> if this collection changed as a
     * result of the call.  (Returns <tt>false</tt> if this collection does
     * not permit duplicates and already contains the specified element.)<p>
     *
     * Collections that support this operation may place limitations on what
     * elements may be added to this collection.  In particular, some
     * collections will refuse to add <tt>null</tt> elements, and others will
     * impose restrictions on the type of elements that may be added.
     * Collection classes should clearly specify in their documentation any
     * restrictions on what elements may be added.<p>
     *
     * If a collection refuses to add a particular element for any reason
     * other than that it already contains the element, it <i>must</i> throw
     * an exception (rather than returning <tt>false</tt>).  This preserves
     * the invariant that a collection always contains the specified element
     * after this call returns.
     *
     * @param e element whose presence in this collection is to be ensured
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this collection
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements
     * @throws IllegalArgumentException if some property of the element
     *         prevents it from being added to this collection
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to insertion restrictions
     */
    boolean add(E e);

    /**
     * Removes a single instance of the specified element from this
     * collection, if it is present (optional operation).  More formally,
     * removes an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this collection contains one or more such elements.  Returns
     * <tt>true</tt> if this collection contained the specified element (or
     * equivalently, if this collection changed as a result of the call).
     *
     * @param o element to be removed from this collection, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this collection
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this collection contains all of the elements
     * in the specified collection.
     *
     * @param  c collection to be checked for containment in this collection
     * @return <tt>true</tt> if this collection contains all of the elements
     *         in the specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         collection (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this collection
     * (optional operation).  The behavior of this operation is undefined if
     * the specified collection is modified while the operation is in progress.
     * (This implies that the behavior of this call is undefined if the
     * specified collection is this collection, and this collection is
     * nonempty.)
     *
     * @param c collection containing elements to be added to this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this collection
     * @throws NullPointerException if the specified collection contains a
     *         null element and this collection does not permit null elements,
     *         or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this
     *         collection
     * @throws IllegalStateException if not all the elements can be added at
     *         this time due to insertion restrictions
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Removes all of this collection's elements that are also contained in the
     * specified collection (optional operation).  After this call returns,
     * this collection will contain no elements in common with the specified
     * collection.
     *
     * @param c collection containing elements to be removed from this collection
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> method
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not support
     *         null elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this collection that are contained in the
     * specified collection (optional operation).  In other words, removes from
     * this collection all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this collection (optional operation).
     * The collection will be empty after this method returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this collection
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this collection for equality. <p>
     *
     * While the <tt>Collection</tt> interface adds no stipulations to the
     * general contract for the <tt>Object.equals</tt>, programmers who
     * implement the <tt>Collection</tt> interface "directly" (in other words,
     * create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt>
     * or a <tt>List</tt>) must exercise care if they choose to override the
     * <tt>Object.equals</tt>.  It is not necessary to do so, and the simplest
     * course of action is to rely on <tt>Object</tt>'s implementation, but
     * the implementor may wish to implement a "value comparison" in place of
     * the default "reference comparison."  (The <tt>List</tt> and
     * <tt>Set</tt> interfaces mandate such value comparisons.)<p>
     *
     * The general contract for the <tt>Object.equals</tt> method states that
     * equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and
     * only if <tt>b.equals(a)</tt>).  The contracts for <tt>List.equals</tt>
     * and <tt>Set.equals</tt> state that lists are only equal to other lists,
     * and sets to other sets.  Thus, a custom <tt>equals</tt> method for a
     * collection class that implements neither the <tt>List</tt> nor
     * <tt>Set</tt> interface must return <tt>false</tt> when this collection
     * is compared to any list or set.  (By the same logic, it is not possible
     * to write a class that correctly implements both the <tt>Set</tt> and
     * <tt>List</tt> interfaces.)
     *
     * @param o object to be compared for equality with this collection
     * @return <tt>true</tt> if the specified object is equal to this
     * collection
     *
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     * @see List#equals(Object)
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this collection.  While the
     * <tt>Collection</tt> interface adds no stipulations to the general
     * contract for the <tt>Object.hashCode</tt> method, programmers should
     * take note that any class that overrides the <tt>Object.equals</tt>
     * method must also override the <tt>Object.hashCode</tt> method in order
     * to satisfy the general contract for the <tt>Object.hashCode</tt>method.
     * In particular, <tt>c1.equals(c2)</tt> implies that
     * <tt>c1.hashCode()==c2.hashCode()</tt>.
     *
     * @return the hash code value for this collection
     *
     * @see Object#hashCode()
     * @see Object#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This exception may be thrown by methods that have detected concurrent
 * modification of an object when such modification is not permissible.
 * <p>
 * For example, it is not generally permissible for one thread to modify a Collection
 * while another thread is iterating over it.  In general, the results of the
 * iteration are undefined under these circumstances.  Some Iterator
 * implementations (including those of all the general purpose collection implementations
 * provided by the JRE) may choose to throw this exception if this behavior is
 * detected.  Iterators that do this are known as <i>fail-fast</i> iterators,
 * as they fail quickly and cleanly, rather that risking arbitrary,
 * non-deterministic behavior at an undetermined time in the future.
 * <p>
 * Note that this exception does not always indicate that an object has
 * been concurrently modified by a <i>different</i> thread.  If a single
 * thread issues a sequence of method invocations that violates the
 * contract of an object, the object may throw this exception.  For
 * example, if a thread modifies a collection directly while it is
 * iterating over the collection with a fail-fast iterator, the iterator
 * will throw this exception.
 *
 * <p>Note that fail-fast behavior cannot be guaranteed as it is, generally
 * speaking, impossible to make any hard guarantees in the presence of
 * unsynchronized concurrent modification.  Fail-fast operations
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i><tt>ConcurrentModificationException</tt>
 * should be used only to detect bugs.</i>
 *
 * @author  Josh Bloch
 * @see     Collection
 * @see     Iterator
 * @see     ListIterator
 * @see     Vector
 * @see     LinkedList
 * @see     HashSet
 * @see     Hashtable
 * @see     TreeMap
 * @see     AbstractList
 * @since   1.2
 */
public class ConcurrentModificationException extends RuntimeException {
    /**
     * Constructs a ConcurrentModificationException with no
     * detail message.
     */
    public ConcurrentModificationException() {
    }

    /**
     * Constructs a <tt>ConcurrentModificationException</tt> with the
     * specified detail message.
     *
     * @param message the detail message pertaining to this exception.
     */
    public ConcurrentModificationException(String message) {
        super(message);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea and Josh Bloch with assistance from members of
 * JCP JSR-166 Expert Group and released to the public domain, as explained
 * at http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A linear collection that supports element insertion and removal at
 * both ends.  The name <i>deque</i> is short for "double ended queue"
 * and is usually pronounced "deck".  Most <tt>Deque</tt>
 * implementations place no fixed limits on the number of elements
 * they may contain, but this interface supports capacity-restricted
 * deques as well as those with no fixed size limit.
 *
 * <p>This interface defines methods to access the elements at both
 * ends of the deque.  Methods are provided to insert, remove, and
 * examine the element.  Each of these methods exists in two forms:
 * one throws an exception if the operation fails, the other returns a
 * special value (either <tt>null</tt> or <tt>false</tt>, depending on
 * the operation).  The latter form of the insert operation is
 * designed specifically for use with capacity-restricted
 * <tt>Deque</tt> implementations; in most implementations, insert
 * operations cannot fail.
 *
 * <p>The twelve methods described above are summarized in the
 * following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>First Element (Head)</b></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>Last Element (Tail)</b></td>
 *  </tr>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *    <td>{@link #offerFirst offerFirst(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *    <td>{@link #removeLast removeLast()}</td>
 *    <td>{@link #pollLast pollLast()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #getFirst getFirst()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *    <td>{@link #getLast getLast()}</td>
 *    <td>{@link #peekLast peekLast()}</td>
 *  </tr>
 * </table>
 *
 * <p>This interface extends the {@link Queue} interface.  When a deque is
 * used as a queue, FIFO (First-In-First-Out) behavior results.  Elements are
 * added at the end of the deque and removed from the beginning.  The methods
 * inherited from the <tt>Queue</tt> interface are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b><tt>Queue</tt> Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#add add(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#offer offer(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#remove remove()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#poll poll()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#element element()}</td>
 *    <td>{@link #getFirst getFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#peek peek()}</td>
 *    <td>{@link #peek peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Deques can also be used as LIFO (Last-In-First-Out) stacks.  This
 * interface should be used in preference to the legacy {@link Stack} class.
 * When a deque is used as a stack, elements are pushed and popped from the
 * beginning of the deque.  Stack methods are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the table below:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b>Stack Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link #push push(e)}</td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #pop pop()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #peek peek()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Note that the {@link #peek peek} method works equally well when
 * a deque is used as a queue or a stack; in either case, elements are
 * drawn from the beginning of the deque.
 *
 * <p>This interface provides two methods to remove interior
 * elements, {@link #removeFirstOccurrence removeFirstOccurrence} and
 * {@link #removeLastOccurrence removeLastOccurrence}.
 *
 * <p>Unlike the {@link List} interface, this interface does not
 * provide support for indexed access to elements.
 *
 * <p>While <tt>Deque</tt> implementations are not strictly required
 * to prohibit the insertion of null elements, they are strongly
 * encouraged to do so.  Users of any <tt>Deque</tt> implementations
 * that do allow null elements are strongly encouraged <i>not</i> to
 * take advantage of the ability to insert nulls.  This is so because
 * <tt>null</tt> is used as a special return value by various methods
 * to indicated that the deque is empty.
 *
 * <p><tt>Deque</tt> implementations generally do not define
 * element-based versions of the <tt>equals</tt> and <tt>hashCode</tt>
 * methods, but instead inherit the identity-based versions from class
 * <tt>Object</tt>.
 *
 * <p>This interface is a member of the <a
 * href="{@docRoot}/../technotes/guides/collections/index.html"> Java Collections
 * Framework</a>.
 *
 * @author Doug Lea
 * @author Josh Bloch
 * @since  1.6
 * @param <E> the type of elements held in this collection
 */

public interface Deque<E> extends Queue<E> {
    /**
     * Inserts the specified element at the front of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerFirst}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addFirst(E e);

    /**
     * Inserts the specified element at the end of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerLast}.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addLast(E e);

    /**
     * Inserts the specified element at the front of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addFirst} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerFirst(E e);

    /**
     * Inserts the specified element at the end of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addLast} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerLast(E e);

    /**
     * Retrieves and removes the first element of this deque.  This method
     * differs from {@link #pollFirst pollFirst} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeFirst();

    /**
     * Retrieves and removes the last element of this deque.  This method
     * differs from {@link #pollLast pollLast} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeLast();

    /**
     * Retrieves and removes the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollFirst();

    /**
     * Retrieves and removes the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollLast();

    /**
     * Retrieves, but does not remove, the first element of this deque.
     *
     * This method differs from {@link #peekFirst peekFirst} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque.
     * This method differs from {@link #peekLast peekLast} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getLast();

    /**
     * Retrieves, but does not remove, the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekLast();

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeFirstOccurrence(Object o);

    /**
     * Removes the last occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the last element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeLastOccurrence(Object o);

    // *** Queue methods ***

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     * When using a capacity-restricted deque, it is generally preferable to
     * use {@link #offer(Object) offer}.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean add(E e);

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and <tt>false</tt> if no space is currently
     * available.  When using a capacity-restricted deque, this method is
     * generally preferable to the {@link #add} method, which can fail to
     * insert an element only by throwing an exception.
     *
     * <p>This method is equivalent to {@link #offerLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque).
     * This method differs from {@link #poll poll} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque), or returns
     * <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #pollFirst()}.
     *
     * @return the first element of this deque, or <tt>null</tt> if
     *         this deque is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque).
     * This method differs from {@link #peek peek} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #getFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque), or
     * returns <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #peekFirst()}.
     *
     * @return the head of the queue represented by this deque, or
     *         <tt>null</tt> if this deque is empty
     */
    E peek();


    // *** Stack methods ***

    /**
     * Pushes an element onto the stack represented by this deque (in other
     * words, at the head of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void push(E e);

    /**
     * Pops an element from the stack represented by this deque.  In other
     * words, removes and returns the first element of this deque.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this deque (which is the top
     *         of the stack represented by this deque)
     * @throws NoSuchElementException if this deque is empty
     */
    E pop();


    // *** Collection methods ***

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * <p>This method is equivalent to {@link #removeFirstOccurrence}.
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean remove(Object o);

    /**
     * Returns <tt>true</tt> if this deque contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this deque contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this deque is to be tested
     * @return <tt>true</tt> if this deque contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns the number of elements in this deque.
     *
     * @return the number of elements in this deque
     */
    public int size();

    /**
     * Returns an iterator over the elements in this deque in proper sequence.
     * The elements will be returned in order from first (head) to last (tail).
     *
     * @return an iterator over the elements in this deque in proper sequence
     */
    Iterator<E> iterator();

    /**
     * Returns an iterator over the elements in this deque in reverse
     * sequential order.  The elements will be returned in order from
     * last (tail) to first (head).
     *
     * @return an iterator over the elements in this deque in reverse
     * sequence
     */
    Iterator<E> descendingIterator();

}


/*
 * Copyright 1994-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that a method has been passed an illegal or
 * inappropriate argument.
 *
 * @author  unascribed
 * @see     java.lang.Thread#setPriority(int)
 * @since   JDK1.0
 */
public
class IllegalArgumentException extends RuntimeException {
    /**
     * Constructs an <code>IllegalArgumentException</code> with no
     * detail message.
     */
    public IllegalArgumentException() {
        super();
    }

    /**
     * Constructs an <code>IllegalArgumentException</code> with the
     * specified detail message.
     *
     * @param   s   the detail message.
     */
    public IllegalArgumentException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalArgumentException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalArgumentException(Throwable cause) {
        super(cause);
    }

    private static final long serialVersionUID = -5365630128856068164L;
}


/*
 * Copyright 1996-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Signals that a method has been invoked at an illegal or
 * inappropriate time.  In other words, the Java environment or
 * Java application is not in an appropriate state for the requested
 * operation.
 *
 * @author  Jonni Kanerva
 * @since   JDK1.1
 */
public
class IllegalStateException extends RuntimeException {
    /**
     * Constructs an IllegalStateException with no detail message.
     * A detail message is a String that describes this particular exception.
     */
    public IllegalStateException() {
        super();
    }

    /**
     * Constructs an IllegalStateException with the specified detail
     * message.  A detail message is a String that describes this particular
     * exception.
     *
     * @param s the String that contains a detailed message
     */
    public IllegalStateException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalStateException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalStateException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1848914673093119416L;
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator over a collection.  {@code Iterator} takes the place of
 * {@link Enumeration} in the Java Collections Framework.  Iterators
 * differ from enumerations in two ways:
 *
 * <ul>
 *      <li> Iterators allow the caller to remove elements from the
 *           underlying collection during the iteration with well-defined
 *           semantics.
 *      <li> Method names have been improved.
 * </ul>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see ListIterator
 * @see Iterable
 * @since 1.2
 */
public interface Iterator<E> {
    /**
     * Returns {@code true} if the iteration has more elements.
     * (In other words, returns {@code true} if {@link #next} would
     * return an element rather than throwing an exception.)
     *
     * @return {@code true} if the iteration has more elements
     */
    boolean hasNext();

    /**
     * Returns the next element in the iteration.
     *
     * @return the next element in the iteration
     * @throws NoSuchElementException if the iteration has no more elements
     */
    E next();

    /**
     * Removes from the underlying collection the last element returned
     * by this iterator (optional operation).  This method can be called
     * only once per call to {@link #next}.  The behavior of an iterator
     * is unspecified if the underlying collection is modified while the
     * iteration is in progress in any way other than by calling this
     * method.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this iterator
     *
     * @throws IllegalStateException if the {@code next} method has not
     *         yet been called, or the {@code remove} method has already
     *         been called after the last call to the {@code next}
     *         method
     */
    void remove();
}


package javaUtilEx;

public class juLinkedListCreateRemoveLastOccurrence {
	public static void main(String[] args) {
		Random.args = args;

		LinkedList<Content> l = createList(Random.random());
		Content c = new Content(Random.random());
		if (Random.random() > 42) {
			c = l.get(Random.random());
		}
		l.removeLastOccurrence(c);
	}

	public static LinkedList<Content> createList(int n) {
		LinkedList<Content> l = new LinkedList<Content>();
		while (n > 0) {
			l.addLast(new Content(Random.random()));
			n--;
		}
		return l;
	}
}

final class Content {
	int val;

	public Content(int v) {
		this.val = v;
	}

	public int hashCode() {
		return val^31;
	}

	public boolean equals(Object o) {
		if (o instanceof Content) {
			return this.val == ((Content) o).val;
		}
		return false;
	}
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Linked list implementation of the <tt>List</tt> interface.  Implements all
 * optional list operations, and permits all elements (including
 * <tt>null</tt>).  In addition to implementing the <tt>List</tt> interface,
 * the <tt>LinkedList</tt> class provides uniformly named methods to
 * <tt>get</tt>, <tt>remove</tt> and <tt>insert</tt> an element at the
 * beginning and end of the list.  These operations allow linked lists to be
 * used as a stack, {@linkplain Queue queue}, or {@linkplain Deque
 * double-ended queue}. <p>
 *
 * The class implements the <tt>Deque</tt> interface, providing
 * first-in-first-out queue operations for <tt>add</tt>,
 * <tt>poll</tt>, along with other stack and deque operations.<p>
 *
 * All of the operations perform as could be expected for a doubly-linked
 * list.  Operations that index into the list will traverse the list from
 * the beginning or the end, whichever is closer to the specified index.<p>
 *
 * <p><strong>Note that this implementation is not synchronized.</strong>
 * If multiple threads access a linked list concurrently, and at least
 * one of the threads modifies the list structurally, it <i>must</i> be
 * synchronized externally.  (A structural modification is any operation
 * that adds or deletes one or more elements; merely setting the value of
 * an element is not a structural modification.)  This is typically
 * accomplished by synchronizing on some object that naturally
 * encapsulates the list.
 *
 * If no such object exists, the list should be "wrapped" using the
 * {@link Collections#synchronizedList Collections.synchronizedList}
 * method.  This is best done at creation time, to prevent accidental
 * unsynchronized access to the list:<pre>
 *   List list = Collections.synchronizedList(new LinkedList(...));</pre>
 *
 * <p>The iterators returned by this class's <tt>iterator</tt> and
 * <tt>listIterator</tt> methods are <i>fail-fast</i>: if the list is
 * structurally modified at any time after the iterator is created, in
 * any way except through the Iterator's own <tt>remove</tt> or
 * <tt>add</tt> methods, the iterator will throw a {@link
 * ConcurrentModificationException}.  Thus, in the face of concurrent
 * modification, the iterator fails quickly and cleanly, rather than
 * risking arbitrary, non-deterministic behavior at an undetermined
 * time in the future.
 *
 * <p>Note that the fail-fast behavior of an iterator cannot be guaranteed
 * as it is, generally speaking, impossible to make any hard guarantees in the
 * presence of unsynchronized concurrent modification.  Fail-fast iterators
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness:   <i>the fail-fast behavior of iterators
 * should be used only to detect bugs.</i>
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see     List
 * @see     ArrayList
 * @see     Vector
 * @since 1.2
 * @param <E> the type of elements held in this collection
 */

public class LinkedList<E>
    extends AbstractSequentialList<E>
    implements List<E>, Deque<E>
{
    private transient Entry<E> header = new Entry<E>(null, null, null);
    private transient int size = 0;

    /**
     * Constructs an empty list.
     */
    public LinkedList() {
        header.next = header.previous = header;
    }

    /**
     * Constructs a list containing the elements of the specified
     * collection, in the order they are returned by the collection's
     * iterator.
     *
     * @param  c the collection whose elements are to be placed into this list
     * @throws NullPointerException if the specified collection is null
     */
    public LinkedList(Collection<? extends E> c) {
        this();
        addAll(c);
    }

    /**
     * Returns the first element in this list.
     *
     * @return the first element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getFirst() {
        if (size==0)
            throw new NoSuchElementException();

        return header.next.element;
    }

    /**
     * Returns the last element in this list.
     *
     * @return the last element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getLast()  {
        if (size==0)
            throw new NoSuchElementException();

        return header.previous.element;
    }

    /**
     * Removes and returns the first element from this list.
     *
     * @return the first element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeFirst() {
        return remove(header.next);
    }

    /**
     * Removes and returns the last element from this list.
     *
     * @return the last element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeLast() {
        return remove(header.previous);
    }

    /**
     * Inserts the specified element at the beginning of this list.
     *
     * @param e the element to add
     */
    public void addFirst(E e) {
        addBefore(e, header.next);
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     */
    public void addLast(E e) {
        addBefore(e, header);
    }

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     */
    public boolean contains(Object o) {
        return indexOf(o) != -1;
    }

    /**
     * Returns the number of elements in this list.
     *
     * @return the number of elements in this list
     */
    public int size() {
        return size;
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     */
    public boolean add(E e) {
        addBefore(e, header);
        return true;
    }

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present.  If this list does not contain the element, it is
     * unchanged.  More formally, removes the element with the lowest index
     * <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list
     * changed as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     */
    public boolean remove(Object o) {
        if (o==null) {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }
    /**
     * Removes all of the elements from this list.
     */
    public void clear() {
        Entry<E> e = header.next;
        while (e != header) {
            Entry<E> next = e.next;
            e.next = e.previous = null;
            e.element = null;
            e = next;
        }
        header.next = header.previous = header;
        size = 0;
        modCount++;
    }


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        return entry(index).element;
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element.
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E set(int index, E element) {
        Entry<E> e = entry(index);
        E oldVal = e.element;
        e.element = element;
        return oldVal;
    }

    /**
     * Inserts the specified element at the specified position in this list.
     * Shifts the element currently at that position (if any) and any
     * subsequent elements to the right (adds one to their indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public void add(int index, E element) {
        addBefore(element, (index==size ? header : entry(index)));
    }

    /**
     * Removes the element at the specified position in this list.  Shifts any
     * subsequent elements to the left (subtracts one from their indices).
     * Returns the element that was removed from the list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E remove(int index) {
        return remove(entry(index));
    }

    /**
     * Returns the indexed entry.
     */
    private Entry<E> entry(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException();
        Entry<E> e = header;
        if (index < (size >> 1)) {
            for (int i = 0; i <= index; i++)
                e = e.next;
        } else {
            for (int i = size; i > index; i--)
                e = e.previous;
        }
        return e;
    }


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int indexOf(Object o) {
        int index = 0;
        if (o==null) {
            for (Entry e = header.next; e != header; e = e.next) {
                if (e.element==null)
                    return index;
                index++;
            }
        } else {
            for (Entry e = header.next; e != header; e = e.next) {
                if (o.equals(e.element))
                    return index;
                index++;
            }
        }
        return -1;
    }

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int lastIndexOf(Object o) {
        int index = size;
        if (o==null) {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (e.element==null)
                    return index;
            }
        } else {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (o.equals(e.element))
                    return index;
            }
        }
        return -1;
    }

    // Queue operations.

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E peek() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E element() {
        return getFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E poll() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list.
     *
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E remove() {
        return removeFirst();
    }

    /**
     * Adds the specified element as the tail (last element) of this list.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Queue#offer})
     * @since 1.5
     */
    public boolean offer(E e) {
        return add(e);
    }

    // Deque operations
    /**
     * Inserts the specified element at the front of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerFirst})
     * @since 1.6
     */
    public boolean offerFirst(E e) {
        addFirst(e);
        return true;
    }

    /**
     * Inserts the specified element at the end of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerLast})
     * @since 1.6
     */
    public boolean offerLast(E e) {
        addLast(e);
        return true;
    }

    /**
     * Retrieves, but does not remove, the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekFirst() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekLast() {
        if (size==0)
            return null;
        return getLast();
    }

    /**
     * Retrieves and removes the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollFirst() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollLast() {
        if (size==0)
            return null;
        return removeLast();
    }

    /**
     * Pushes an element onto the stack represented by this list.  In other
     * words, inserts the element at the front of this list.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @since 1.6
     */
    public void push(E e) {
        addFirst(e);
    }

    /**
     * Pops an element from the stack represented by this list.  In other
     * words, removes and returns the first element of this list.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this list (which is the top
     *         of the stack represented by this list)
     * @throws NoSuchElementException if this list is empty
     * @since 1.6
     */
    public E pop() {
        return removeFirst();
    }

    /**
     * Removes the first occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeFirstOccurrence(Object o) {
        return remove(o);
    }

    /**
     * Removes the last occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeLastOccurrence(Object o) {
        if (o==null) {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * Returns a list-iterator of the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * Obeys the general contract of <tt>List.listIterator(int)</tt>.<p>
     *
     * The list-iterator is <i>fail-fast</i>: if the list is structurally
     * modified at any time after the Iterator is created, in any way except
     * through the list-iterator's own <tt>remove</tt> or <tt>add</tt>
     * methods, the list-iterator will throw a
     * <tt>ConcurrentModificationException</tt>.  Thus, in the face of
     * concurrent modification, the iterator fails quickly and cleanly, rather
     * than risking arbitrary, non-deterministic behavior at an undetermined
     * time in the future.
     *
     * @param index index of the first element to be returned from the
     *              list-iterator (by a call to <tt>next</tt>)
     * @return a ListIterator of the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     * @see List#listIterator(int)
     */
    public ListIterator<E> listIterator(int index) {
        return new ListItr(index);
    }

    private class ListItr implements ListIterator<E> {
        private Entry<E> lastReturned = header;
        private Entry<E> next;
        private int nextIndex;
        private int expectedModCount = modCount;

        ListItr(int index) {
            if (index < 0 || index > size)
                throw new IndexOutOfBoundsException();
            if (index < (size >> 1)) {
                next = header.next;
                for (nextIndex=0; nextIndex<index; nextIndex++)
                    next = next.next;
            } else {
                next = header;
                for (nextIndex=size; nextIndex>index; nextIndex--)
                    next = next.previous;
            }
        }

        public boolean hasNext() {
            return nextIndex != size;
        }

        public E next() {
            checkForComodification();
            if (nextIndex == size)
                throw new NoSuchElementException();

            lastReturned = next;
            next = next.next;
            nextIndex++;
            return lastReturned.element;
        }

        public boolean hasPrevious() {
            return nextIndex != 0;
        }

        public E previous() {
            if (nextIndex == 0)
                throw new NoSuchElementException();

            lastReturned = next = next.previous;
            nextIndex--;
            checkForComodification();
            return lastReturned.element;
        }

        public int nextIndex() {
            return nextIndex;
        }

        public int previousIndex() {
            return nextIndex-1;
        }

        public void remove() {
            checkForComodification();
            Entry<E> lastNext = lastReturned.next;
            try {
                LinkedList.this.remove(lastReturned);
            } catch (NoSuchElementException e) {
                throw new IllegalStateException();
            }
            if (next==lastReturned)
                next = lastNext;
            else
                nextIndex--;
            lastReturned = header;
            expectedModCount++;
        }

        public void set(E e) {
            if (lastReturned == header)
                throw new IllegalStateException();
            checkForComodification();
            lastReturned.element = e;
        }

        public void add(E e) {
            checkForComodification();
            lastReturned = header;
            addBefore(e, next);
            nextIndex++;
            expectedModCount++;
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private static class Entry<E> {
        E element;
        Entry<E> next;
        Entry<E> previous;

        Entry(E element, Entry<E> next, Entry<E> previous) {
            this.element = element;
            this.next = next;
            this.previous = previous;
        }
    }

    private Entry<E> addBefore(E e, Entry<E> entry) {
        Entry<E> newEntry = new Entry<E>(e, entry, entry.previous);
        newEntry.previous.next = newEntry;
        newEntry.next.previous = newEntry;
        size++;
        modCount++;
        return newEntry;
    }

    private E remove(Entry<E> e) {
        if (e == header)
            throw new NoSuchElementException();

        E result = e.element;
        e.previous.next = e.next;
        e.next.previous = e.previous;
        e.next = e.previous = null;
        e.element = null;
        size--;
        modCount++;
        return result;
    }

    /**
     * @since 1.6
     */
    public Iterator<E> descendingIterator() {
        return new DescendingIterator();
    }

    /** Adapter to provide descending iterators via ListItr.previous */
    private class DescendingIterator implements Iterator {
        final ListItr itr = new ListItr(size());
        public boolean hasNext() {
            return itr.hasPrevious();
        }
        public E next() {
            return itr.previous();
        }
        public void remove() {
            itr.remove();
        }
    }

    /**
     * Returns an array containing all of the elements in this list
     * in proper sequence (from first to last element).
     *
     * <p>The returned array will be "safe" in that no references to it are
     * maintained by this list.  (In other words, this method must allocate
     * a new array).  The caller is thus free to modify the returned array.
     *
     * <p>This method acts as bridge between array-based and collection-based
     * APIs.
     *
     * @return an array containing all of the elements in this list
     *         in proper sequence
     */
    public Object[] toArray() {
        Object[] result = new Object[size];
        int i = 0;
        for (Entry<E> e = header.next; e != header; e = e.next)
            result[i++] = e.element;
        return result;
    }

    private static final long serialVersionUID = 876323262645176354L;
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator for lists that allows the programmer
 * to traverse the list in either direction, modify
 * the list during iteration, and obtain the iterator's
 * current position in the list. A {@code ListIterator}
 * has no current element; its <I>cursor position</I> always
 * lies between the element that would be returned by a call
 * to {@code previous()} and the element that would be
 * returned by a call to {@code next()}.
 * An iterator for a list of length {@code n} has {@code n+1} possible
 * cursor positions, as illustrated by the carets ({@code ^}) below:
 * <PRE>
 *                      Element(0)   Element(1)   Element(2)   ... Element(n-1)
 * cursor positions:  ^            ^            ^            ^                  ^
 * </PRE>
 * Note that the {@link #remove} and {@link #set(Object)} methods are
 * <i>not</i> defined in terms of the cursor position;  they are defined to
 * operate on the last element returned by a call to {@link #next} or
 * {@link #previous()}.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see List
 * @see Iterator
 * @see Enumeration
 * @see List#listIterator()
 * @since   1.2
 */
public interface ListIterator<E> extends Iterator<E> {
    // Query Operations

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the forward direction. (In other words,
     * returns {@code true} if {@link #next} would return an element rather
     * than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the forward direction
     */
    boolean hasNext();

    /**
     * Returns the next element in the list and advances the cursor position.
     * This method may be called repeatedly to iterate through the list,
     * or intermixed with calls to {@link #previous} to go back and forth.
     * (Note that alternating calls to {@code next} and {@code previous}
     * will return the same element repeatedly.)
     *
     * @return the next element in the list
     * @throws NoSuchElementException if the iteration has no next element
     */
    E next();

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the reverse direction.  (In other words,
     * returns {@code true} if {@link #previous} would return an element
     * rather than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the reverse direction
     */
    boolean hasPrevious();

    /**
     * Returns the previous element in the list and moves the cursor
     * position backwards.  This method may be called repeatedly to
     * iterate through the list backwards, or intermixed with calls to
     * {@link #next} to go back and forth.  (Note that alternating calls
     * to {@code next} and {@code previous} will return the same
     * element repeatedly.)
     *
     * @return the previous element in the list
     * @throws NoSuchElementException if the iteration has no previous
     *         element
     */
    E previous();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #next}. (Returns list size if the list
     * iterator is at the end of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code next}, or list size if the list
     *         iterator is at the end of the list
     */
    int nextIndex();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #previous}. (Returns -1 if the list
     * iterator is at the beginning of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code previous}, or -1 if the list
     *         iterator is at the beginning of the list
     */
    int previousIndex();


    // Modification Operations

    /**
     * Removes from the list the last element that was returned by {@link
     * #next} or {@link #previous} (optional operation).  This call can
     * only be made once per call to {@code next} or {@code previous}.
     * It can be made only if {@link #add} has not been
     * called after the last call to {@code next} or {@code previous}.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this list iterator
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void remove();

    /**
     * Replaces the last element returned by {@link #next} or
     * {@link #previous} with the specified element (optional operation).
     * This call can be made only if neither {@link #remove} nor {@link
     * #add} have been called after the last call to {@code next} or
     * {@code previous}.
     *
     * @param e the element with which to replace the last element returned by
     *          {@code next} or {@code previous}
     * @throws UnsupportedOperationException if the {@code set} operation
     *         is not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of the specified
     *         element prevents it from being added to this list
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void set(E e);

    /**
     * Inserts the specified element into the list (optional operation).
     * The element is inserted immediately before the next element that
     * would be returned by {@link #next}, if any, and after the next
     * element that would be returned by {@link #previous}, if any.  (If the
     * list contains no elements, the new element becomes the sole element
     * on the list.)  The new element is inserted before the implicit
     * cursor: a subsequent call to {@code next} would be unaffected, and a
     * subsequent call to {@code previous} would return the new element.
     * (This call increases by one the value that would be returned by a
     * call to {@code nextIndex} or {@code previousIndex}.)
     *
     * @param e the element to insert
     * @throws UnsupportedOperationException if the {@code add} method is
     *         not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of this element
     *         prevents it from being added to this list
     */
    void add(E e);
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An ordered collection (also known as a <i>sequence</i>).  The user of this
 * interface has precise control over where in the list each element is
 * inserted.  The user can access elements by their integer index (position in
 * the list), and search for elements in the list.<p>
 *
 * Unlike sets, lists typically allow duplicate elements.  More formally,
 * lists typically allow pairs of elements <tt>e1</tt> and <tt>e2</tt>
 * such that <tt>e1.equals(e2)</tt>, and they typically allow multiple
 * null elements if they allow null elements at all.  It is not inconceivable
 * that someone might wish to implement a list that prohibits duplicates, by
 * throwing runtime exceptions when the user attempts to insert them, but we
 * expect this usage to be rare.<p>
 *
 * The <tt>List</tt> interface places additional stipulations, beyond those
 * specified in the <tt>Collection</tt> interface, on the contracts of the
 * <tt>iterator</tt>, <tt>add</tt>, <tt>remove</tt>, <tt>equals</tt>, and
 * <tt>hashCode</tt> methods.  Declarations for other inherited methods are
 * also included here for convenience.<p>
 *
 * The <tt>List</tt> interface provides four methods for positional (indexed)
 * access to list elements.  Lists (like Java arrays) are zero based.  Note
 * that these operations may execute in time proportional to the index value
 * for some implementations (the <tt>LinkedList</tt> class, for
 * example). Thus, iterating over the elements in a list is typically
 * preferable to indexing through it if the caller does not know the
 * implementation.<p>
 *
 * The <tt>List</tt> interface provides a special iterator, called a
 * <tt>ListIterator</tt>, that allows element insertion and replacement, and
 * bidirectional access in addition to the normal operations that the
 * <tt>Iterator</tt> interface provides.  A method is provided to obtain a
 * list iterator that starts at a specified position in the list.<p>
 *
 * The <tt>List</tt> interface provides two methods to search for a specified
 * object.  From a performance standpoint, these methods should be used with
 * caution.  In many implementations they will perform costly linear
 * searches.<p>
 *
 * The <tt>List</tt> interface provides two methods to efficiently insert and
 * remove multiple elements at an arbitrary point in the list.<p>
 *
 * Note: While it is permissible for lists to contain themselves as elements,
 * extreme caution is advised: the <tt>equals</tt> and <tt>hashCode</tt>
 * methods are no longer well defined on such a list.
 *
 * <p>Some list implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the list may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see Set
 * @see ArrayList
 * @see LinkedList
 * @see Vector
 * @see Arrays#asList(Object[])
 * @see Collections#nCopies(int, Object)
 * @see Collections#EMPTY_LIST
 * @see AbstractList
 * @see AbstractSequentialList
 * @since 1.2
 */

public interface List<E> extends Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this list.  If this list contains
     * more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this list
     */
    int size();

    /**
     * Returns <tt>true</tt> if this list contains no elements.
     *
     * @return <tt>true</tt> if this list contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    boolean add(E e);

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present (optional operation).  If this list does not contain
     * the element, it is unchanged.  More formally, removes the element with
     * the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list changed
     * as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     */
    boolean remove(Object o);


    // Bulk Modification Operations

    /**
     * Returns <tt>true</tt> if this list contains all of the elements of the
     * specified collection.
     *
     * @param  c collection to be checked for containment in this list
     * @return <tt>true</tt> if this list contains all of the elements of the
     *         specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         list (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Appends all of the elements in the specified collection to the end of
     * this list, in the order that they are returned by the specified
     * collection's iterator (optional operation).  The behavior of this
     * operation is undefined if the specified collection is modified while
     * the operation is in progress.  (Note that this will occur if the
     * specified collection is this list, and it's nonempty.)
     *
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * @param index index at which to insert the first element from the
     *              specified collection
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    boolean addAll(int index, Collection<? extends E> c);

    /**
     * Removes from this list all of its elements that are contained in the
     * specified collection (optional operation).
     *
     * @param c collection containing elements to be removed from this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this list that are contained in the
     * specified collection (optional operation).  In other words, removes
     * from this list all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this list
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * <tt>true</tt> if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements <tt>e1</tt> and
     * <tt>e2</tt> are <i>equal</i> if <tt>(e1==null ? e2==null :
     * e1.equals(e2))</tt>.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.  This
     * definition ensures that the equals method works properly across
     * different implementations of the <tt>List</tt> interface.
     *
     * @param o the object to be compared for equality with this list
     * @return <tt>true</tt> if the specified object is equal to this list
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this list.  The hash code of a list
     * is defined to be the result of the following calculation:
     * <pre>
     *  int hashCode = 1;
     *  for (E e : list)
     *      hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
     * </pre>
     * This ensures that <tt>list1.equals(list2)</tt> implies that
     * <tt>list1.hashCode()==list2.hashCode()</tt> for any two lists,
     * <tt>list1</tt> and <tt>list2</tt>, as required by the general
     * contract of {@link Object#hashCode}.
     *
     * @return the hash code value for this list
     * @see Object#equals(Object)
     * @see #equals(Object)
     */
    int hashCode();


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E get(int index);

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>set</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E set(int index, E element);

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    void add(int index, E element);

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E remove(int index);


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int indexOf(Object o);

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int lastIndexOf(Object o);


    // List Iterators

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     */
    ListIterator<E> listIterator();

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * The specified index indicates the first element that would be
     * returned by an initial call to {@link ListIterator#next next}.
     * An initial call to {@link ListIterator#previous previous} would
     * return the element with the specified index minus one.
     *
     * @param index index of the first element to be returned from the
     *        list iterator (by a call to {@link ListIterator#next next})
     * @return a list iterator over the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         ({@code index < 0 || index > size()})
     */
    ListIterator<E> listIterator(int index);

    // View

    /**
     * Returns a view of the portion of this list between the specified
     * <tt>fromIndex</tt>, inclusive, and <tt>toIndex</tt>, exclusive.  (If
     * <tt>fromIndex</tt> and <tt>toIndex</tt> are equal, the returned list is
     * empty.)  The returned list is backed by this list, so non-structural
     * changes in the returned list are reflected in this list, and vice-versa.
     * The returned list supports all of the optional list operations supported
     * by this list.<p>
     *
     * This method eliminates the need for explicit range operations (of
     * the sort that commonly exist for arrays).  Any operation that expects
     * a list can be used as a range operation by passing a subList view
     * instead of a whole list.  For example, the following idiom
     * removes a range of elements from a list:
     * <pre>
     *      list.subList(from, to).clear();
     * </pre>
     * Similar idioms may be constructed for <tt>indexOf</tt> and
     * <tt>lastIndexOf</tt>, and all of the algorithms in the
     * <tt>Collections</tt> class can be applied to a subList.<p>
     *
     * The semantics of the list returned by this method become undefined if
     * the backing list (i.e., this list) is <i>structurally modified</i> in
     * any way other than via the returned list.  (Structural modifications are
     * those that change the size of this list, or otherwise perturb it in such
     * a fashion that iterations in progress may yield incorrect results.)
     *
     * @param fromIndex low endpoint (inclusive) of the subList
     * @param toIndex high endpoint (exclusive) of the subList
     * @return a view of the specified range within this list
     * @throws IndexOutOfBoundsException for an illegal endpoint index value
     *         (<tt>fromIndex &lt; 0 || toIndex &gt; size ||
     *         fromIndex &gt; toIndex</tt>)
     */
    List<E> subList(int fromIndex, int toIndex);
}


/*
 * Copyright 1994-1998 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown by the <code>nextElement</code> method of an
 * <code>Enumeration</code> to indicate that there are no more
 * elements in the enumeration.
 *
 * @author  unascribed
 * @see     java.util.Enumeration
 * @see     java.util.Enumeration#nextElement()
 * @since   JDK1.0
 */
public
class NoSuchElementException extends RuntimeException {
    /**
     * Constructs a <code>NoSuchElementException</code> with <tt>null</tt>
     * as its error message string.
     */
    public NoSuchElementException() {
        super();
    }

    /**
     * Constructs a <code>NoSuchElementException</code>, saving a reference
     * to the error message string <tt>s</tt> for later retrieval by the
     * <tt>getMessage</tt> method.
     *
     * @param   s   the detail message.
     */
    public NoSuchElementException(String s) {
        super(s);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea with assistance from members of JCP JSR-166
 * Expert Group and released to the public domain, as explained at
 * http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A collection designed for holding elements prior to processing.
 * Besides basic {@link java.util.Collection Collection} operations,
 * queues provide additional insertion, extraction, and inspection
 * operations.  Each of these methods exists in two forms: one throws
 * an exception if the operation fails, the other returns a special
 * value (either <tt>null</tt> or <tt>false</tt>, depending on the
 * operation).  The latter form of the insert operation is designed
 * specifically for use with capacity-restricted <tt>Queue</tt>
 * implementations; in most implementations, insert operations cannot
 * fail.
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Returns special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #add add(e)}</td>
 *    <td>{@link #offer offer(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #remove remove()}</td>
 *    <td>{@link #poll poll()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #element element()}</td>
 *    <td>{@link #peek peek()}</td>
 *  </tr>
 * </table>
 *
 * <p>Queues typically, but do not necessarily, order elements in a
 * FIFO (first-in-first-out) manner.  Among the exceptions are
 * priority queues, which order elements according to a supplied
 * comparator, or the elements' natural ordering, and LIFO queues (or
 * stacks) which order the elements LIFO (last-in-first-out).
 * Whatever the ordering used, the <em>head</em> of the queue is that
 * element which would be removed by a call to {@link #remove() } or
 * {@link #poll()}.  In a FIFO queue, all new elements are inserted at
 * the <em> tail</em> of the queue. Other kinds of queues may use
 * different placement rules.  Every <tt>Queue</tt> implementation
 * must specify its ordering properties.
 *
 * <p>The {@link #offer offer} method inserts an element if possible,
 * otherwise returning <tt>false</tt>.  This differs from the {@link
 * java.util.Collection#add Collection.add} method, which can fail to
 * add an element only by throwing an unchecked exception.  The
 * <tt>offer</tt> method is designed for use when failure is a normal,
 * rather than exceptional occurrence, for example, in fixed-capacity
 * (or &quot;bounded&quot;) queues.
 *
 * <p>The {@link #remove()} and {@link #poll()} methods remove and
 * return the head of the queue.
 * Exactly which element is removed from the queue is a
 * function of the queue's ordering policy, which differs from
 * implementation to implementation. The <tt>remove()</tt> and
 * <tt>poll()</tt> methods differ only in their behavior when the
 * queue is empty: the <tt>remove()</tt> method throws an exception,
 * while the <tt>poll()</tt> method returns <tt>null</tt>.
 *
 * <p>The {@link #element()} and {@link #peek()} methods return, but do
 * not remove, the head of the queue.
 *
 * <p>The <tt>Queue</tt> interface does not define the <i>blocking queue
 * methods</i>, which are common in concurrent programming.  These methods,
 * which wait for elements to appear or for space to become available, are
 * defined in the {@link java.util.concurrent.BlockingQueue} interface, which
 * extends this interface.
 *
 * <p><tt>Queue</tt> implementations generally do not allow insertion
 * of <tt>null</tt> elements, although some implementations, such as
 * {@link LinkedList}, do not prohibit insertion of <tt>null</tt>.
 * Even in the implementations that permit it, <tt>null</tt> should
 * not be inserted into a <tt>Queue</tt>, as <tt>null</tt> is also
 * used as a special return value by the <tt>poll</tt> method to
 * indicate that the queue contains no elements.
 *
 * <p><tt>Queue</tt> implementations generally do not define
 * element-based versions of methods <tt>equals</tt> and
 * <tt>hashCode</tt> but instead inherit the identity based versions
 * from class <tt>Object</tt>, because element-based equality is not
 * always well-defined for queues with the same elements but different
 * ordering properties.
 *
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @see java.util.Collection
 * @see LinkedList
 * @see PriorityQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.BlockingQueue
 * @see java.util.concurrent.ArrayBlockingQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.PriorityBlockingQueue
 * @since 1.5
 * @author Doug Lea
 * @param <E> the type of elements held in this collection
 */
public interface Queue<E> extends Collection<E> {
    /**
     * Inserts the specified element into this queue if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt>
     * if no space is currently available.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean add(E e);

    /**
     * Inserts the specified element into this queue if it is possible to do
     * so immediately without violating capacity restrictions.
     * When using a capacity-restricted queue, this method is generally
     * preferable to {@link #add}, which can fail to insert an element only
     * by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this queue, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of this queue.  This method differs
     * from {@link #poll poll} only in that it throws an exception if this
     * queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of this queue.  This method
     * differs from {@link #peek peek} only in that it throws an exception
     * if this queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E peek();
}


/*
 * Copyright 2000-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Marker interface used by <tt>List</tt> implementations to indicate that
 * they support fast (generally constant time) random access.  The primary
 * purpose of this interface is to allow generic algorithms to alter their
 * behavior to provide good performance when applied to either random or
 * sequential access lists.
 *
 * <p>The best algorithms for manipulating random access lists (such as
 * <tt>ArrayList</tt>) can produce quadratic behavior when applied to
 * sequential access lists (such as <tt>LinkedList</tt>).  Generic list
 * algorithms are encouraged to check whether the given list is an
 * <tt>instanceof</tt> this interface before applying an algorithm that would
 * provide poor performance if it were applied to a sequential access list,
 * and to alter their behavior if necessary to guarantee acceptable
 * performance.
 *
 * <p>It is recognized that the distinction between random and sequential
 * access is often fuzzy.  For example, some <tt>List</tt> implementations
 * provide asymptotically linear access times if they get huge, but constant
 * access times in practice.  Such a <tt>List</tt> implementation
 * should generally implement this interface.  As a rule of thumb, a
 * <tt>List</tt> implementation should implement this interface if,
 * for typical instances of the class, this loop:
 * <pre>
 *     for (int i=0, n=list.size(); i &lt; n; i++)
 *         list.get(i);
 * </pre>
 * runs faster than this loop:
 * <pre>
 *     for (Iterator i=list.iterator(); i.hasNext(); )
 *         i.next();
 * </pre>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @since 1.4
 */
public interface RandomAccess {
}


package javaUtilEx;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that the requested operation is not supported.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @since   1.2
 */
public class UnsupportedOperationException extends RuntimeException {
    /**
     * Constructs an UnsupportedOperationException with no detail message.
     */
    public UnsupportedOperationException() {
    }

    /**
     * Constructs an UnsupportedOperationException with the specified
     * detail message.
     *
     * @param message the detail message
     */
    public UnsupportedOperationException(String message) {
        super(message);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public UnsupportedOperationException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public UnsupportedOperationException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1242599979055084673L;
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Collection</tt>
 * interface, to minimize the effort required to implement this interface. <p>
 *
 * To implement an unmodifiable collection, the programmer needs only to
 * extend this class and provide implementations for the <tt>iterator</tt> and
 * <tt>size</tt> methods.  (The iterator returned by the <tt>iterator</tt>
 * method must implement <tt>hasNext</tt> and <tt>next</tt>.)<p>
 *
 * To implement a modifiable collection, the programmer must additionally
 * override this class's <tt>add</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by the
 * <tt>iterator</tt> method must additionally implement its <tt>remove</tt>
 * method.<p>
 *
 * The programmer should generally provide a void (no argument) and
 * <tt>Collection</tt> constructor, as per the recommendation in the
 * <tt>Collection</tt> interface specification.<p>
 *
 * The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if
 * the collection being implemented admits a more efficient implementation.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractCollection<E> implements Collection<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractCollection() {
    }

    // Query Operations

    /**
     * Returns an iterator over the elements contained in this collection.
     *
     * @return an iterator over the elements contained in this collection
     */
    public abstract Iterator<E> iterator();

    public abstract int size();

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the elements in the collection,
     * checking each element in turn for equality with the specified element.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean contains(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return true;
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return true;
        }
        return false;
    }

    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     */
    public boolean add(E e) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the collection looking for the
     * specified element.  If it finds the element, it removes the element
     * from the collection using the iterator's remove method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's iterator method does not implement the <tt>remove</tt>
     * method and this collection contains the specified object.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public boolean remove(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext()) {
                if (e.next()==null) {
                    e.remove();
                    return true;
                }
            }
        } else {
            while (e.hasNext()) {
                if (o.equals(e.next())) {
                    e.remove();
                    return true;
                }
            }
        }
        return false;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection,
     * checking each element returned by the iterator in turn to see
     * if it's contained in this collection.  If all elements are so
     * contained <tt>true</tt> is returned, otherwise <tt>false</tt>.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @see #contains(Object)
     */
    public boolean containsAll(Collection<?> c) {
        Iterator<?> e = c.iterator();
        while (e.hasNext())
            if (!contains(e.next()))
                return false;
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection, and adds
     * each object returned by the iterator to this collection, in turn.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> unless <tt>add</tt> is
     * overridden (assuming the specified collection is non-empty).
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     *
     * @see #add(Object)
     */
    public boolean addAll(Collection<? extends E> c) {
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            if (add(e.next()))
                modified = true;
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's so contained, it's removed from
     * this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements in common with the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;
        Iterator<?> e = iterator();
        while (e.hasNext()) {
            if (c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's not so contained, it's removed
     * from this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements not present in the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean retainAll(Collection<?> c) {
        boolean modified = false;
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            if (!c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, removing each
     * element using the <tt>Iterator.remove</tt> operation.  Most
     * implementations will probably choose to override this method for
     * efficiency.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's <tt>iterator</tt> method does not implement the
     * <tt>remove</tt> method and this collection is non-empty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            e.next();
            e.remove();
        }
    }


    //  String conversion

    /**
     * Returns a string representation of this collection.  The string
     * representation consists of a list of the collection's elements in the
     * order they are returned by its iterator, enclosed in square brackets
     * (<tt>"[]"</tt>).  Adjacent elements are separated by the characters
     * <tt>", "</tt> (comma and space).  Elements are converted to strings as
     * by {@link String#valueOf(Object)}.
     *
     * @return a string representation of this collection
     */
    public String toString() {
        Iterator<E> i = iterator();
        if (! i.hasNext())
            return "[]";

        String sb = "";
        sb = sb + "[";
        for (;;) {
            E e = i.next();
            sb = sb + (e == this ? "(this Collection)" : e);
            if (! i.hasNext()) {
                sb = sb + "]";
		return sb;
            }
            sb = sb + ", ";
        }
    }

}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the {@link List}
 * interface to minimize the effort required to implement this interface
 * backed by a "random access" data store (such as an array).  For sequential
 * access data (such as a linked list), {@link AbstractSequentialList} should
 * be used in preference to this class.
 *
 * <p>To implement an unmodifiable list, the programmer needs only to extend
 * this class and provide implementations for the {@link #get(int)} and
 * {@link List#size() size()} methods.
 *
 * <p>To implement a modifiable list, the programmer must additionally
 * override the {@link #set(int, Object) set(int, E)} method (which otherwise
 * throws an {@code UnsupportedOperationException}).  If the list is
 * variable-size the programmer must additionally override the
 * {@link #add(int, Object) add(int, E)} and {@link #remove(int)} methods.
 *
 * <p>The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the {@link Collection} interface
 * specification.
 *
 * <p>Unlike the other abstract collection implementations, the programmer does
 * <i>not</i> have to provide an iterator implementation; the iterator and
 * list iterator are implemented by this class, on top of the "random access"
 * methods:
 * {@link #get(int)},
 * {@link #set(int, Object) set(int, E)},
 * {@link #add(int, Object) add(int, E)} and
 * {@link #remove(int)}.
 *
 * <p>The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if the
 * collection being implemented admits a more efficient implementation.
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @since 1.2
 */

public abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractList() {
    }

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * <p>This implementation calls {@code add(size(), e)}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @param e element to be appended to this list
     * @return {@code true} (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the {@code add} operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    public boolean add(E e) {
        add(size(), e);
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    abstract public E get(int index);

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        throw new UnsupportedOperationException();
    }


    // Search Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator (with
     * {@code listIterator()}).  Then, it iterates over the list until the
     * specified element is found or the end of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int indexOf(Object o) {
        ListIterator<E> e = listIterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return e.previousIndex();
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return e.previousIndex();
        }
        return -1;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator that points to the end
     * of the list (with {@code listIterator(size())}).  Then, it iterates
     * backwards over the list until the specified element is found, or the
     * beginning of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int lastIndexOf(Object o) {
        ListIterator<E> e = listIterator(size());
        if (o==null) {
            while (e.hasPrevious())
                if (e.previous()==null)
                    return e.nextIndex();
        } else {
            while (e.hasPrevious())
                if (o.equals(e.previous()))
                    return e.nextIndex();
        }
        return -1;
    }


    // Bulk Operations

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * <p>This implementation calls {@code removeRange(0, size())}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless {@code remove(int
     * index)} or {@code removeRange(int fromIndex, int toIndex)} is
     * overridden.
     *
     * @throws UnsupportedOperationException if the {@code clear} operation
     *         is not supported by this list
     */
    public void clear() {
        removeRange(0, size());
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation gets an iterator over the specified collection
     * and iterates over it, inserting the elements obtained from the
     * iterator into this list at the appropriate position, one at a time,
     * using {@code add(int, E)}.
     * Many implementations will override this method for efficiency.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            add(index++, e.next());
            modified = true;
        }
        return modified;
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * <p>This implementation returns a straightforward implementation of the
     * iterator interface, relying on the backing list's {@code size()},
     * {@code get(int)}, and {@code remove(int)} methods.
     *
     * <p>Note that the iterator returned by this method will throw an
     * {@link UnsupportedOperationException} in response to its
     * {@code remove} method unless the list's {@code remove(int)} method is
     * overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification
     * for the (protected) {@link #modCount} field.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    public Iterator<E> iterator() {
        return new Itr();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns {@code listIterator(0)}.
     *
     * @see #listIterator(int)
     */
    public ListIterator<E> listIterator() {
        return listIterator(0);
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a straightforward implementation of the
     * {@code ListIterator} interface that extends the implementation of the
     * {@code Iterator} interface returned by the {@code iterator()} method.
     * The {@code ListIterator} implementation relies on the backing list's
     * {@code get(int)}, {@code set(int, E)}, {@code add(int, E)}
     * and {@code remove(int)} methods.
     *
     * <p>Note that the list iterator returned by this implementation will
     * throw an {@link UnsupportedOperationException} in response to its
     * {@code remove}, {@code set} and {@code add} methods unless the
     * list's {@code remove(int)}, {@code set(int, E)}, and
     * {@code add(int, E)} methods are overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification for
     * the (protected) {@link #modCount} field.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public ListIterator<E> listIterator(final int index) {
        rangeCheckForAdd(index);

        return new ListItr(index);
    }

    private class Itr implements Iterator<E> {
        /**
         * Index of element to be returned by subsequent call to next.
         */
        int cursor = 0;

        /**
         * Index of element returned by most recent call to next or
         * previous.  Reset to -1 if this element is deleted by a call
         * to remove.
         */
        int lastRet = -1;

        /**
         * The modCount value that the iterator believes that the backing
         * List should have.  If this expectation is violated, the iterator
         * has detected concurrent modification.
         */
        int expectedModCount = modCount;

        public boolean hasNext() {
            return cursor != size();
        }

        public E next() {
            checkForComodification();
            try {
                int i = cursor;
                E next = get(i);
                lastRet = i;
                cursor = i + 1;
                return next;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public void remove() {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.remove(lastRet);
                if (lastRet < cursor)
                    cursor--;
                lastRet = -1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException e) {
                throw new ConcurrentModificationException();
            }
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private class ListItr extends Itr implements ListIterator<E> {
        ListItr(int index) {
            cursor = index;
        }

        public boolean hasPrevious() {
            return cursor != 0;
        }

        public E previous() {
            checkForComodification();
            try {
                int i = cursor - 1;
                E previous = get(i);
                lastRet = cursor = i;
                return previous;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public int nextIndex() {
            return cursor;
        }

        public int previousIndex() {
            return cursor-1;
        }

        public void set(E e) {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.set(lastRet, e);
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }

        public void add(E e) {
            checkForComodification();

            try {
                int i = cursor;
                AbstractList.this.add(i, e);
                lastRet = -1;
                cursor = i + 1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a list that subclasses
     * {@code AbstractList}.  The subclass stores, in private fields, the
     * offset of the subList within the backing list, the size of the subList
     * (which can change over its lifetime), and the expected
     * {@code modCount} value of the backing list.  There are two variants
     * of the subclass, one of which implements {@code RandomAccess}.
     * If this list implements {@code RandomAccess} the returned list will
     * be an instance of the subclass that implements {@code RandomAccess}.
     *
     * <p>The subclass's {@code set(int, E)}, {@code get(int)},
     * {@code add(int, E)}, {@code remove(int)}, {@code addAll(int,
     * Collection)} and {@code removeRange(int, int)} methods all
     * delegate to the corresponding methods on the backing abstract list,
     * after bounds-checking the index and adjusting for the offset.  The
     * {@code addAll(Collection c)} method merely returns {@code addAll(size,
     * c)}.
     *
     * <p>The {@code listIterator(int)} method returns a "wrapper object"
     * over a list iterator on the backing list, which is created with the
     * corresponding method on the backing list.  The {@code iterator} method
     * merely returns {@code listIterator()}, and the {@code size} method
     * merely returns the subclass's {@code size} field.
     *
     * <p>All methods first check to see if the actual {@code modCount} of
     * the backing list is equal to its expected value, and throw a
     * {@code ConcurrentModificationException} if it is not.
     *
     * @throws IndexOutOfBoundsException if an endpoint index value is out of range
     *         {@code (fromIndex < 0 || toIndex > size)}
     * @throws IllegalArgumentException if the endpoint indices are out of order
     *         {@code (fromIndex > toIndex)}
     */
    public List<E> subList(int fromIndex, int toIndex) {
        return (this instanceof RandomAccess ?
                new RandomAccessSubList<E>(this, fromIndex, toIndex) :
                new SubList<E>(this, fromIndex, toIndex));
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * {@code true} if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements {@code e1} and
     * {@code e2} are <i>equal</i> if {@code (e1==null ? e2==null :
     * e1.equals(e2))}.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.<p>
     *
     * This implementation first checks if the specified object is this
     * list. If so, it returns {@code true}; if not, it checks if the
     * specified object is a list. If not, it returns {@code false}; if so,
     * it iterates over both lists, comparing corresponding pairs of elements.
     * If any comparison returns {@code false}, this method returns
     * {@code false}.  If either iterator runs out of elements before the
     * other it returns {@code false} (as the lists are of unequal length);
     * otherwise it returns {@code true} when the iterations complete.
     *
     * @param o the object to be compared for equality with this list
     * @return {@code true} if the specified object is equal to this list
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;
        if (!(o instanceof List))
            return false;

        ListIterator<E> e1 = listIterator();
        ListIterator e2 = ((List) o).listIterator();
        while(e1.hasNext() && e2.hasNext()) {
            E o1 = e1.next();
            Object o2 = e2.next();
            if (!(o1==null ? o2==null : o1.equals(o2)))
                return false;
        }
        return !(e1.hasNext() || e2.hasNext());
    }

    /**
     * Returns the hash code value for this list.
     *
     * <p>This implementation uses exactly the code that is used to define the
     * list hash function in the documentation for the {@link List#hashCode}
     * method.
     *
     * @return the hash code value for this list
     */
    public int hashCode() {
        int hashCode = 1;
        Iterator<E> it = this.iterator();
        while (it.hasNext()) {
            E e = it.next();
            hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
        }
        return hashCode;
    }

    /**
     * Removes from this list all of the elements whose index is between
     * {@code fromIndex}, inclusive, and {@code toIndex}, exclusive.
     * Shifts any succeeding elements to the left (reduces their index).
     * This call shortens the list by {@code (toIndex - fromIndex)} elements.
     * (If {@code toIndex==fromIndex}, this operation has no effect.)
     *
     * <p>This method is called by the {@code clear} operation on this list
     * and its subLists.  Overriding this method to take advantage of
     * the internals of the list implementation can <i>substantially</i>
     * improve the performance of the {@code clear} operation on this list
     * and its subLists.
     *
     * <p>This implementation gets a list iterator positioned before
     * {@code fromIndex}, and repeatedly calls {@code ListIterator.next}
     * followed by {@code ListIterator.remove} until the entire range has
     * been removed.  <b>Note: if {@code ListIterator.remove} requires linear
     * time, this implementation requires quadratic time.</b>
     *
     * @param fromIndex index of first element to be removed
     * @param toIndex index after last element to be removed
     */
    protected void removeRange(int fromIndex, int toIndex) {
        ListIterator<E> it = listIterator(fromIndex);
        for (int i=0, n=toIndex-fromIndex; i<n; i++) {
            it.next();
            it.remove();
        }
    }

    /**
     * The number of times this list has been <i>structurally modified</i>.
     * Structural modifications are those that change the size of the
     * list, or otherwise perturb it in such a fashion that iterations in
     * progress may yield incorrect results.
     *
     * <p>This field is used by the iterator and list iterator implementation
     * returned by the {@code iterator} and {@code listIterator} methods.
     * If the value of this field changes unexpectedly, the iterator (or list
     * iterator) will throw a {@code ConcurrentModificationException} in
     * response to the {@code next}, {@code remove}, {@code previous},
     * {@code set} or {@code add} operations.  This provides
     * <i>fail-fast</i> behavior, rather than non-deterministic behavior in
     * the face of concurrent modification during iteration.
     *
     * <p><b>Use of this field by subclasses is optional.</b> If a subclass
     * wishes to provide fail-fast iterators (and list iterators), then it
     * merely has to increment this field in its {@code add(int, E)} and
     * {@code remove(int)} methods (and any other methods that it overrides
     * that result in structural modifications to the list).  A single call to
     * {@code add(int, E)} or {@code remove(int)} must add no more than
     * one to this field, or the iterators (and list iterators) will throw
     * bogus {@code ConcurrentModificationExceptions}.  If an implementation
     * does not wish to provide fail-fast iterators, this field may be
     * ignored.
     */
    protected transient int modCount = 0;

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size())
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }
}

class SubList<E> extends AbstractList<E> {
    private final AbstractList<E> l;
    private final int offset;
    private int size;

    SubList(AbstractList<E> list, int fromIndex, int toIndex) {
        if (fromIndex < 0)
            throw new IndexOutOfBoundsException();
        if (toIndex > list.size())
            throw new IndexOutOfBoundsException();
        if (fromIndex > toIndex)
            throw new IllegalArgumentException();
        l = list;
        offset = fromIndex;
        size = toIndex - fromIndex;
        this.modCount = l.modCount;
    }

    public E set(int index, E element) {
        rangeCheck(index);
        checkForComodification();
        return l.set(index+offset, element);
    }

    public E get(int index) {
        rangeCheck(index);
        checkForComodification();
        return l.get(index+offset);
    }

    public int size() {
        checkForComodification();
        return size;
    }

    public void add(int index, E element) {
        rangeCheckForAdd(index);
        checkForComodification();
        l.add(index+offset, element);
        this.modCount = l.modCount;
        size++;
    }

    public E remove(int index) {
        rangeCheck(index);
        checkForComodification();
        E result = l.remove(index+offset);
        this.modCount = l.modCount;
        size--;
        return result;
    }

    protected void removeRange(int fromIndex, int toIndex) {
        checkForComodification();
        l.removeRange(fromIndex+offset, toIndex+offset);
        this.modCount = l.modCount;
        size -= (toIndex-fromIndex);
    }

    public boolean addAll(Collection<? extends E> c) {
        return addAll(size, c);
    }

    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        int cSize = c.size();
        if (cSize==0)
            return false;

        checkForComodification();
        l.addAll(offset+index, c);
        this.modCount = l.modCount;
        size += cSize;
        return true;
    }

    public Iterator<E> iterator() {
        return listIterator();
    }

    public ListIterator<E> listIterator(final int index) {
        checkForComodification();
        rangeCheckForAdd(index);

        return new ListIterator<E>() {
            private final ListIterator<E> i = l.listIterator(index+offset);

            public boolean hasNext() {
                return nextIndex() < size;
            }

            public E next() {
                if (hasNext())
                    return i.next();
                else
                    throw new NoSuchElementException();
            }

            public boolean hasPrevious() {
                return previousIndex() >= 0;
            }

            public E previous() {
                if (hasPrevious())
                    return i.previous();
                else
                    throw new NoSuchElementException();
            }

            public int nextIndex() {
                return i.nextIndex() - offset;
            }

            public int previousIndex() {
                return i.previousIndex() - offset;
            }

            public void remove() {
                i.remove();
                SubList.this.modCount = l.modCount;
                size--;
            }

            public void set(E e) {
                i.set(e);
            }

            public void add(E e) {
                i.add(e);
                SubList.this.modCount = l.modCount;
                size++;
            }
        };
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new SubList<E>(this, fromIndex, toIndex);
    }

    private void rangeCheck(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }

    private void checkForComodification() {
        if (this.modCount != l.modCount)
            throw new ConcurrentModificationException();
    }
}

class RandomAccessSubList<E> extends SubList<E> implements RandomAccess {
    RandomAccessSubList(AbstractList<E> list, int fromIndex, int toIndex) {
        super(list, fromIndex, toIndex);
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new RandomAccessSubList<E>(this, fromIndex, toIndex);
    }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>List</tt>
 * interface to minimize the effort required to implement this interface
 * backed by a "sequential access" data store (such as a linked list).  For
 * random access data (such as an array), <tt>AbstractList</tt> should be used
 * in preference to this class.<p>
 *
 * This class is the opposite of the <tt>AbstractList</tt> class in the sense
 * that it implements the "random access" methods (<tt>get(int index)</tt>,
 * <tt>set(int index, E element)</tt>, <tt>add(int index, E element)</tt> and
 * <tt>remove(int index)</tt>) on top of the list's list iterator, instead of
 * the other way around.<p>
 *
 * To implement a list the programmer needs only to extend this class and
 * provide implementations for the <tt>listIterator</tt> and <tt>size</tt>
 * methods.  For an unmodifiable list, the programmer need only implement the
 * list iterator's <tt>hasNext</tt>, <tt>next</tt>, <tt>hasPrevious</tt>,
 * <tt>previous</tt> and <tt>index</tt> methods.<p>
 *
 * For a modifiable list the programmer should additionally implement the list
 * iterator's <tt>set</tt> method.  For a variable-size list the programmer
 * should additionally implement the list iterator's <tt>remove</tt> and
 * <tt>add</tt> methods.<p>
 *
 * The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the <tt>Collection</tt> interface
 * specification.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see List
 * @see AbstractList
 * @see AbstractCollection
 * @since 1.2
 */

public abstract class AbstractSequentialList<E> extends AbstractList<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractSequentialList() {
    }

    /**
     * Returns the element at the specified position in this list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the element using <tt>ListIterator.next</tt> and returns it.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        try {
            return listIterator(index).next();
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the current element using <tt>ListIterator.next</tt> and replaces it
     * with <tt>ListIterator.set</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>set</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        try {
            ListIterator<E> e = listIterator(index);
            E oldVal = e.next();
            e.set(element);
            return oldVal;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it
     * inserts the specified element with <tt>ListIterator.add</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>add</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        try {
            listIterator(index).add(element);
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it removes
     * the element with <tt>ListIterator.remove</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>remove</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        try {
            ListIterator<E> e = listIterator(index);
            E outCast = e.next();
            e.remove();
            return outCast;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Bulk Operations

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * <p>This implementation gets an iterator over the specified collection and
     * a list iterator over this list pointing to the indexed element (with
     * <tt>listIterator(index)</tt>).  Then, it iterates over the specified
     * collection, inserting the elements obtained from the iterator into this
     * list, one at a time, using <tt>ListIterator.add</tt> followed by
     * <tt>ListIterator.next</tt> (to skip over the added element).
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator returned by
     * the <tt>listIterator</tt> method does not implement the <tt>add</tt>
     * operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        try {
            boolean modified = false;
            ListIterator<E> e1 = listIterator(index);
            Iterator<? extends E> e2 = c.iterator();
            while (e2.hasNext()) {
                e1.add(e2.next());
                modified = true;
            }
            return modified;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list (in proper
     * sequence).<p>
     *
     * This implementation merely returns a list iterator over the list.
     *
     * @return an iterator over the elements in this list (in proper sequence)
     */
    public Iterator<E> iterator() {
        return listIterator();
    }

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @param  index index of first element to be returned from the list
     *         iterator (by a call to the <code>next</code> method)
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public abstract ListIterator<E> listIterator(int index);
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * The root interface in the <i>collection hierarchy</i>.  A collection
 * represents a group of objects, known as its <i>elements</i>.  Some
 * collections allow duplicate elements and others do not.  Some are ordered
 * and others unordered.  The JDK does not provide any <i>direct</i>
 * implementations of this interface: it provides implementations of more
 * specific subinterfaces like <tt>Set</tt> and <tt>List</tt>.  This interface
 * is typically used to pass collections around and manipulate them where
 * maximum generality is desired.
 *
 * <p><i>Bags</i> or <i>multisets</i> (unordered collections that may contain
 * duplicate elements) should implement this interface directly.
 *
 * <p>All general-purpose <tt>Collection</tt> implementation classes (which
 * typically implement <tt>Collection</tt> indirectly through one of its
 * subinterfaces) should provide two "standard" constructors: a void (no
 * arguments) constructor, which creates an empty collection, and a
 * constructor with a single argument of type <tt>Collection</tt>, which
 * creates a new collection with the same elements as its argument.  In
 * effect, the latter constructor allows the user to copy any collection,
 * producing an equivalent collection of the desired implementation type.
 * There is no way to enforce this convention (as interfaces cannot contain
 * constructors) but all of the general-purpose <tt>Collection</tt>
 * implementations in the Java platform libraries comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the collection on which they operate, are specified to
 * throw <tt>UnsupportedOperationException</tt> if this collection does not
 * support the operation.  If this is the case, these methods may, but are not
 * required to, throw an <tt>UnsupportedOperationException</tt> if the
 * invocation would have no effect on the collection.  For example, invoking
 * the {@link #addAll(Collection)} method on an unmodifiable collection may,
 * but is not required to, throw the exception if the collection to be added
 * is empty.
 *
 * <p>Some collection implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the collection may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>It is up to each collection to determine its own synchronization
 * policy.  In the absence of a stronger guarantee by the
 * implementation, undefined behavior may result from the invocation
 * of any method on a collection that is being mutated by another
 * thread; this includes direct invocations, passing the collection to
 * a method that might perform invocations, and using an existing
 * iterator to examine the collection.
 *
 * <p>Many methods in Collections Framework interfaces are defined in
 * terms of the {@link Object#equals(Object) equals} method.  For example,
 * the specification for the {@link #contains(Object) contains(Object o)}
 * method says: "returns <tt>true</tt> if and only if this collection
 * contains at least one element <tt>e</tt> such that
 * <tt>(o==null ? e==null : o.equals(e))</tt>."  This specification should
 * <i>not</i> be construed to imply that invoking <tt>Collection.contains</tt>
 * with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be
 * invoked for any element <tt>e</tt>.  Implementations are free to implement
 * optimizations whereby the <tt>equals</tt> invocation is avoided, for
 * example, by first comparing the hash codes of the two elements.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see     Set
 * @see     List
 * @see     Map
 * @see     SortedSet
 * @see     SortedMap
 * @see     HashSet
 * @see     TreeSet
 * @see     ArrayList
 * @see     LinkedList
 * @see     Vector
 * @see     Collections
 * @see     Arrays
 * @see     AbstractCollection
 * @since 1.2
 */

public interface Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this collection.  If this collection
     * contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this collection
     */
    int size();

    /**
     * Returns <tt>true</tt> if this collection contains no elements.
     *
     * @return <tt>true</tt> if this collection contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this collection contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this collection
     * contains at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this collection is to be tested
     * @return <tt>true</tt> if this collection contains the specified
     *         element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this collection.  There are no
     * guarantees concerning the order in which the elements are returned
     * (unless this collection is an instance of some class that provides a
     * guarantee).
     *
     * @return an <tt>Iterator</tt> over the elements in this collection
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Ensures that this collection contains the specified element (optional
     * operation).  Returns <tt>true</tt> if this collection changed as a
     * result of the call.  (Returns <tt>false</tt> if this collection does
     * not permit duplicates and already contains the specified element.)<p>
     *
     * Collections that support this operation may place limitations on what
     * elements may be added to this collection.  In particular, some
     * collections will refuse to add <tt>null</tt> elements, and others will
     * impose restrictions on the type of elements that may be added.
     * Collection classes should clearly specify in their documentation any
     * restrictions on what elements may be added.<p>
     *
     * If a collection refuses to add a particular element for any reason
     * other than that it already contains the element, it <i>must</i> throw
     * an exception (rather than returning <tt>false</tt>).  This preserves
     * the invariant that a collection always contains the specified element
     * after this call returns.
     *
     * @param e element whose presence in this collection is to be ensured
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this collection
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements
     * @throws IllegalArgumentException if some property of the element
     *         prevents it from being added to this collection
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to insertion restrictions
     */
    boolean add(E e);

    /**
     * Removes a single instance of the specified element from this
     * collection, if it is present (optional operation).  More formally,
     * removes an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this collection contains one or more such elements.  Returns
     * <tt>true</tt> if this collection contained the specified element (or
     * equivalently, if this collection changed as a result of the call).
     *
     * @param o element to be removed from this collection, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this collection
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this collection contains all of the elements
     * in the specified collection.
     *
     * @param  c collection to be checked for containment in this collection
     * @return <tt>true</tt> if this collection contains all of the elements
     *         in the specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         collection (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this collection
     * (optional operation).  The behavior of this operation is undefined if
     * the specified collection is modified while the operation is in progress.
     * (This implies that the behavior of this call is undefined if the
     * specified collection is this collection, and this collection is
     * nonempty.)
     *
     * @param c collection containing elements to be added to this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this collection
     * @throws NullPointerException if the specified collection contains a
     *         null element and this collection does not permit null elements,
     *         or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this
     *         collection
     * @throws IllegalStateException if not all the elements can be added at
     *         this time due to insertion restrictions
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Removes all of this collection's elements that are also contained in the
     * specified collection (optional operation).  After this call returns,
     * this collection will contain no elements in common with the specified
     * collection.
     *
     * @param c collection containing elements to be removed from this collection
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> method
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not support
     *         null elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this collection that are contained in the
     * specified collection (optional operation).  In other words, removes from
     * this collection all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this collection (optional operation).
     * The collection will be empty after this method returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this collection
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this collection for equality. <p>
     *
     * While the <tt>Collection</tt> interface adds no stipulations to the
     * general contract for the <tt>Object.equals</tt>, programmers who
     * implement the <tt>Collection</tt> interface "directly" (in other words,
     * create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt>
     * or a <tt>List</tt>) must exercise care if they choose to override the
     * <tt>Object.equals</tt>.  It is not necessary to do so, and the simplest
     * course of action is to rely on <tt>Object</tt>'s implementation, but
     * the implementor may wish to implement a "value comparison" in place of
     * the default "reference comparison."  (The <tt>List</tt> and
     * <tt>Set</tt> interfaces mandate such value comparisons.)<p>
     *
     * The general contract for the <tt>Object.equals</tt> method states that
     * equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and
     * only if <tt>b.equals(a)</tt>).  The contracts for <tt>List.equals</tt>
     * and <tt>Set.equals</tt> state that lists are only equal to other lists,
     * and sets to other sets.  Thus, a custom <tt>equals</tt> method for a
     * collection class that implements neither the <tt>List</tt> nor
     * <tt>Set</tt> interface must return <tt>false</tt> when this collection
     * is compared to any list or set.  (By the same logic, it is not possible
     * to write a class that correctly implements both the <tt>Set</tt> and
     * <tt>List</tt> interfaces.)
     *
     * @param o object to be compared for equality with this collection
     * @return <tt>true</tt> if the specified object is equal to this
     * collection
     *
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     * @see List#equals(Object)
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this collection.  While the
     * <tt>Collection</tt> interface adds no stipulations to the general
     * contract for the <tt>Object.hashCode</tt> method, programmers should
     * take note that any class that overrides the <tt>Object.equals</tt>
     * method must also override the <tt>Object.hashCode</tt> method in order
     * to satisfy the general contract for the <tt>Object.hashCode</tt>method.
     * In particular, <tt>c1.equals(c2)</tt> implies that
     * <tt>c1.hashCode()==c2.hashCode()</tt>.
     *
     * @return the hash code value for this collection
     *
     * @see Object#hashCode()
     * @see Object#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This exception may be thrown by methods that have detected concurrent
 * modification of an object when such modification is not permissible.
 * <p>
 * For example, it is not generally permissible for one thread to modify a Collection
 * while another thread is iterating over it.  In general, the results of the
 * iteration are undefined under these circumstances.  Some Iterator
 * implementations (including those of all the general purpose collection implementations
 * provided by the JRE) may choose to throw this exception if this behavior is
 * detected.  Iterators that do this are known as <i>fail-fast</i> iterators,
 * as they fail quickly and cleanly, rather that risking arbitrary,
 * non-deterministic behavior at an undetermined time in the future.
 * <p>
 * Note that this exception does not always indicate that an object has
 * been concurrently modified by a <i>different</i> thread.  If a single
 * thread issues a sequence of method invocations that violates the
 * contract of an object, the object may throw this exception.  For
 * example, if a thread modifies a collection directly while it is
 * iterating over the collection with a fail-fast iterator, the iterator
 * will throw this exception.
 *
 * <p>Note that fail-fast behavior cannot be guaranteed as it is, generally
 * speaking, impossible to make any hard guarantees in the presence of
 * unsynchronized concurrent modification.  Fail-fast operations
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i><tt>ConcurrentModificationException</tt>
 * should be used only to detect bugs.</i>
 *
 * @author  Josh Bloch
 * @see     Collection
 * @see     Iterator
 * @see     ListIterator
 * @see     Vector
 * @see     LinkedList
 * @see     HashSet
 * @see     Hashtable
 * @see     TreeMap
 * @see     AbstractList
 * @since   1.2
 */
public class ConcurrentModificationException extends RuntimeException {
    /**
     * Constructs a ConcurrentModificationException with no
     * detail message.
     */
    public ConcurrentModificationException() {
    }

    /**
     * Constructs a <tt>ConcurrentModificationException</tt> with the
     * specified detail message.
     *
     * @param message the detail message pertaining to this exception.
     */
    public ConcurrentModificationException(String message) {
        super(message);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea and Josh Bloch with assistance from members of
 * JCP JSR-166 Expert Group and released to the public domain, as explained
 * at http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A linear collection that supports element insertion and removal at
 * both ends.  The name <i>deque</i> is short for "double ended queue"
 * and is usually pronounced "deck".  Most <tt>Deque</tt>
 * implementations place no fixed limits on the number of elements
 * they may contain, but this interface supports capacity-restricted
 * deques as well as those with no fixed size limit.
 *
 * <p>This interface defines methods to access the elements at both
 * ends of the deque.  Methods are provided to insert, remove, and
 * examine the element.  Each of these methods exists in two forms:
 * one throws an exception if the operation fails, the other returns a
 * special value (either <tt>null</tt> or <tt>false</tt>, depending on
 * the operation).  The latter form of the insert operation is
 * designed specifically for use with capacity-restricted
 * <tt>Deque</tt> implementations; in most implementations, insert
 * operations cannot fail.
 *
 * <p>The twelve methods described above are summarized in the
 * following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>First Element (Head)</b></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>Last Element (Tail)</b></td>
 *  </tr>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *    <td>{@link #offerFirst offerFirst(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *    <td>{@link #removeLast removeLast()}</td>
 *    <td>{@link #pollLast pollLast()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #getFirst getFirst()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *    <td>{@link #getLast getLast()}</td>
 *    <td>{@link #peekLast peekLast()}</td>
 *  </tr>
 * </table>
 *
 * <p>This interface extends the {@link Queue} interface.  When a deque is
 * used as a queue, FIFO (First-In-First-Out) behavior results.  Elements are
 * added at the end of the deque and removed from the beginning.  The methods
 * inherited from the <tt>Queue</tt> interface are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b><tt>Queue</tt> Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#add add(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#offer offer(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#remove remove()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#poll poll()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#element element()}</td>
 *    <td>{@link #getFirst getFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#peek peek()}</td>
 *    <td>{@link #peek peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Deques can also be used as LIFO (Last-In-First-Out) stacks.  This
 * interface should be used in preference to the legacy {@link Stack} class.
 * When a deque is used as a stack, elements are pushed and popped from the
 * beginning of the deque.  Stack methods are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the table below:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b>Stack Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link #push push(e)}</td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #pop pop()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #peek peek()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Note that the {@link #peek peek} method works equally well when
 * a deque is used as a queue or a stack; in either case, elements are
 * drawn from the beginning of the deque.
 *
 * <p>This interface provides two methods to remove interior
 * elements, {@link #removeFirstOccurrence removeFirstOccurrence} and
 * {@link #removeLastOccurrence removeLastOccurrence}.
 *
 * <p>Unlike the {@link List} interface, this interface does not
 * provide support for indexed access to elements.
 *
 * <p>While <tt>Deque</tt> implementations are not strictly required
 * to prohibit the insertion of null elements, they are strongly
 * encouraged to do so.  Users of any <tt>Deque</tt> implementations
 * that do allow null elements are strongly encouraged <i>not</i> to
 * take advantage of the ability to insert nulls.  This is so because
 * <tt>null</tt> is used as a special return value by various methods
 * to indicated that the deque is empty.
 *
 * <p><tt>Deque</tt> implementations generally do not define
 * element-based versions of the <tt>equals</tt> and <tt>hashCode</tt>
 * methods, but instead inherit the identity-based versions from class
 * <tt>Object</tt>.
 *
 * <p>This interface is a member of the <a
 * href="{@docRoot}/../technotes/guides/collections/index.html"> Java Collections
 * Framework</a>.
 *
 * @author Doug Lea
 * @author Josh Bloch
 * @since  1.6
 * @param <E> the type of elements held in this collection
 */

public interface Deque<E> extends Queue<E> {
    /**
     * Inserts the specified element at the front of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerFirst}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addFirst(E e);

    /**
     * Inserts the specified element at the end of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerLast}.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addLast(E e);

    /**
     * Inserts the specified element at the front of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addFirst} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerFirst(E e);

    /**
     * Inserts the specified element at the end of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addLast} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerLast(E e);

    /**
     * Retrieves and removes the first element of this deque.  This method
     * differs from {@link #pollFirst pollFirst} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeFirst();

    /**
     * Retrieves and removes the last element of this deque.  This method
     * differs from {@link #pollLast pollLast} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeLast();

    /**
     * Retrieves and removes the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollFirst();

    /**
     * Retrieves and removes the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollLast();

    /**
     * Retrieves, but does not remove, the first element of this deque.
     *
     * This method differs from {@link #peekFirst peekFirst} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque.
     * This method differs from {@link #peekLast peekLast} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getLast();

    /**
     * Retrieves, but does not remove, the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekLast();

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeFirstOccurrence(Object o);

    /**
     * Removes the last occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the last element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeLastOccurrence(Object o);

    // *** Queue methods ***

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     * When using a capacity-restricted deque, it is generally preferable to
     * use {@link #offer(Object) offer}.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean add(E e);

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and <tt>false</tt> if no space is currently
     * available.  When using a capacity-restricted deque, this method is
     * generally preferable to the {@link #add} method, which can fail to
     * insert an element only by throwing an exception.
     *
     * <p>This method is equivalent to {@link #offerLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque).
     * This method differs from {@link #poll poll} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque), or returns
     * <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #pollFirst()}.
     *
     * @return the first element of this deque, or <tt>null</tt> if
     *         this deque is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque).
     * This method differs from {@link #peek peek} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #getFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque), or
     * returns <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #peekFirst()}.
     *
     * @return the head of the queue represented by this deque, or
     *         <tt>null</tt> if this deque is empty
     */
    E peek();


    // *** Stack methods ***

    /**
     * Pushes an element onto the stack represented by this deque (in other
     * words, at the head of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void push(E e);

    /**
     * Pops an element from the stack represented by this deque.  In other
     * words, removes and returns the first element of this deque.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this deque (which is the top
     *         of the stack represented by this deque)
     * @throws NoSuchElementException if this deque is empty
     */
    E pop();


    // *** Collection methods ***

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * <p>This method is equivalent to {@link #removeFirstOccurrence}.
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean remove(Object o);

    /**
     * Returns <tt>true</tt> if this deque contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this deque contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this deque is to be tested
     * @return <tt>true</tt> if this deque contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns the number of elements in this deque.
     *
     * @return the number of elements in this deque
     */
    public int size();

    /**
     * Returns an iterator over the elements in this deque in proper sequence.
     * The elements will be returned in order from first (head) to last (tail).
     *
     * @return an iterator over the elements in this deque in proper sequence
     */
    Iterator<E> iterator();

    /**
     * Returns an iterator over the elements in this deque in reverse
     * sequential order.  The elements will be returned in order from
     * last (tail) to first (head).
     *
     * @return an iterator over the elements in this deque in reverse
     * sequence
     */
    Iterator<E> descendingIterator();

}


/*
 * Copyright 1994-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that a method has been passed an illegal or
 * inappropriate argument.
 *
 * @author  unascribed
 * @see     java.lang.Thread#setPriority(int)
 * @since   JDK1.0
 */
public
class IllegalArgumentException extends RuntimeException {
    /**
     * Constructs an <code>IllegalArgumentException</code> with no
     * detail message.
     */
    public IllegalArgumentException() {
        super();
    }

    /**
     * Constructs an <code>IllegalArgumentException</code> with the
     * specified detail message.
     *
     * @param   s   the detail message.
     */
    public IllegalArgumentException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalArgumentException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalArgumentException(Throwable cause) {
        super(cause);
    }

    private static final long serialVersionUID = -5365630128856068164L;
}


/*
 * Copyright 1996-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Signals that a method has been invoked at an illegal or
 * inappropriate time.  In other words, the Java environment or
 * Java application is not in an appropriate state for the requested
 * operation.
 *
 * @author  Jonni Kanerva
 * @since   JDK1.1
 */
public
class IllegalStateException extends RuntimeException {
    /**
     * Constructs an IllegalStateException with no detail message.
     * A detail message is a String that describes this particular exception.
     */
    public IllegalStateException() {
        super();
    }

    /**
     * Constructs an IllegalStateException with the specified detail
     * message.  A detail message is a String that describes this particular
     * exception.
     *
     * @param s the String that contains a detailed message
     */
    public IllegalStateException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalStateException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalStateException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1848914673093119416L;
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator over a collection.  {@code Iterator} takes the place of
 * {@link Enumeration} in the Java Collections Framework.  Iterators
 * differ from enumerations in two ways:
 *
 * <ul>
 *      <li> Iterators allow the caller to remove elements from the
 *           underlying collection during the iteration with well-defined
 *           semantics.
 *      <li> Method names have been improved.
 * </ul>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see ListIterator
 * @see Iterable
 * @since 1.2
 */
public interface Iterator<E> {
    /**
     * Returns {@code true} if the iteration has more elements.
     * (In other words, returns {@code true} if {@link #next} would
     * return an element rather than throwing an exception.)
     *
     * @return {@code true} if the iteration has more elements
     */
    boolean hasNext();

    /**
     * Returns the next element in the iteration.
     *
     * @return the next element in the iteration
     * @throws NoSuchElementException if the iteration has no more elements
     */
    E next();

    /**
     * Removes from the underlying collection the last element returned
     * by this iterator (optional operation).  This method can be called
     * only once per call to {@link #next}.  The behavior of an iterator
     * is unspecified if the underlying collection is modified while the
     * iteration is in progress in any way other than by calling this
     * method.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this iterator
     *
     * @throws IllegalStateException if the {@code next} method has not
     *         yet been called, or the {@code remove} method has already
     *         been called after the last call to the {@code next}
     *         method
     */
    void remove();
}


package javaUtilEx;

public class juLinkedListCreateRemoveLastOccurrence {
	public static void main(String[] args) {
		Random.args = args;

		LinkedList<Content> l = createList(Random.random());
		Content c = new Content(Random.random());
		if (Random.random() > 42) {
			c = l.get(Random.random());
		}
		l.removeLastOccurrence(c);
	}

	public static LinkedList<Content> createList(int n) {
		LinkedList<Content> l = new LinkedList<Content>();
		while (n > 0) {
			l.addLast(new Content(Random.random()));
			n--;
		}
		return l;
	}
}

final class Content {
	int val;

	public Content(int v) {
		this.val = v;
	}

	public int hashCode() {
		return val^31;
	}

	public boolean equals(Object o) {
		if (o instanceof Content) {
			return this.val == ((Content) o).val;
		}
		return false;
	}
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Linked list implementation of the <tt>List</tt> interface.  Implements all
 * optional list operations, and permits all elements (including
 * <tt>null</tt>).  In addition to implementing the <tt>List</tt> interface,
 * the <tt>LinkedList</tt> class provides uniformly named methods to
 * <tt>get</tt>, <tt>remove</tt> and <tt>insert</tt> an element at the
 * beginning and end of the list.  These operations allow linked lists to be
 * used as a stack, {@linkplain Queue queue}, or {@linkplain Deque
 * double-ended queue}. <p>
 *
 * The class implements the <tt>Deque</tt> interface, providing
 * first-in-first-out queue operations for <tt>add</tt>,
 * <tt>poll</tt>, along with other stack and deque operations.<p>
 *
 * All of the operations perform as could be expected for a doubly-linked
 * list.  Operations that index into the list will traverse the list from
 * the beginning or the end, whichever is closer to the specified index.<p>
 *
 * <p><strong>Note that this implementation is not synchronized.</strong>
 * If multiple threads access a linked list concurrently, and at least
 * one of the threads modifies the list structurally, it <i>must</i> be
 * synchronized externally.  (A structural modification is any operation
 * that adds or deletes one or more elements; merely setting the value of
 * an element is not a structural modification.)  This is typically
 * accomplished by synchronizing on some object that naturally
 * encapsulates the list.
 *
 * If no such object exists, the list should be "wrapped" using the
 * {@link Collections#synchronizedList Collections.synchronizedList}
 * method.  This is best done at creation time, to prevent accidental
 * unsynchronized access to the list:<pre>
 *   List list = Collections.synchronizedList(new LinkedList(...));</pre>
 *
 * <p>The iterators returned by this class's <tt>iterator</tt> and
 * <tt>listIterator</tt> methods are <i>fail-fast</i>: if the list is
 * structurally modified at any time after the iterator is created, in
 * any way except through the Iterator's own <tt>remove</tt> or
 * <tt>add</tt> methods, the iterator will throw a {@link
 * ConcurrentModificationException}.  Thus, in the face of concurrent
 * modification, the iterator fails quickly and cleanly, rather than
 * risking arbitrary, non-deterministic behavior at an undetermined
 * time in the future.
 *
 * <p>Note that the fail-fast behavior of an iterator cannot be guaranteed
 * as it is, generally speaking, impossible to make any hard guarantees in the
 * presence of unsynchronized concurrent modification.  Fail-fast iterators
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness:   <i>the fail-fast behavior of iterators
 * should be used only to detect bugs.</i>
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see     List
 * @see     ArrayList
 * @see     Vector
 * @since 1.2
 * @param <E> the type of elements held in this collection
 */

public class LinkedList<E>
    extends AbstractSequentialList<E>
    implements List<E>, Deque<E>
{
    private transient Entry<E> header = new Entry<E>(null, null, null);
    private transient int size = 0;

    /**
     * Constructs an empty list.
     */
    public LinkedList() {
        header.next = header.previous = header;
    }

    /**
     * Constructs a list containing the elements of the specified
     * collection, in the order they are returned by the collection's
     * iterator.
     *
     * @param  c the collection whose elements are to be placed into this list
     * @throws NullPointerException if the specified collection is null
     */
    public LinkedList(Collection<? extends E> c) {
        this();
        addAll(c);
    }

    /**
     * Returns the first element in this list.
     *
     * @return the first element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getFirst() {
        if (size==0)
            throw new NoSuchElementException();

        return header.next.element;
    }

    /**
     * Returns the last element in this list.
     *
     * @return the last element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getLast()  {
        if (size==0)
            throw new NoSuchElementException();

        return header.previous.element;
    }

    /**
     * Removes and returns the first element from this list.
     *
     * @return the first element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeFirst() {
        return remove(header.next);
    }

    /**
     * Removes and returns the last element from this list.
     *
     * @return the last element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeLast() {
        return remove(header.previous);
    }

    /**
     * Inserts the specified element at the beginning of this list.
     *
     * @param e the element to add
     */
    public void addFirst(E e) {
        addBefore(e, header.next);
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     */
    public void addLast(E e) {
        addBefore(e, header);
    }

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     */
    public boolean contains(Object o) {
        return indexOf(o) != -1;
    }

    /**
     * Returns the number of elements in this list.
     *
     * @return the number of elements in this list
     */
    public int size() {
        return size;
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     */
    public boolean add(E e) {
        addBefore(e, header);
        return true;
    }

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present.  If this list does not contain the element, it is
     * unchanged.  More formally, removes the element with the lowest index
     * <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list
     * changed as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     */
    public boolean remove(Object o) {
        if (o==null) {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }
    /**
     * Removes all of the elements from this list.
     */
    public void clear() {
        Entry<E> e = header.next;
        while (e != header) {
            Entry<E> next = e.next;
            e.next = e.previous = null;
            e.element = null;
            e = next;
        }
        header.next = header.previous = header;
        size = 0;
        modCount++;
    }


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        return entry(index).element;
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element.
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E set(int index, E element) {
        Entry<E> e = entry(index);
        E oldVal = e.element;
        e.element = element;
        return oldVal;
    }

    /**
     * Inserts the specified element at the specified position in this list.
     * Shifts the element currently at that position (if any) and any
     * subsequent elements to the right (adds one to their indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public void add(int index, E element) {
        addBefore(element, (index==size ? header : entry(index)));
    }

    /**
     * Removes the element at the specified position in this list.  Shifts any
     * subsequent elements to the left (subtracts one from their indices).
     * Returns the element that was removed from the list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E remove(int index) {
        return remove(entry(index));
    }

    /**
     * Returns the indexed entry.
     */
    private Entry<E> entry(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException();
        Entry<E> e = header;
        if (index < (size >> 1)) {
            for (int i = 0; i <= index; i++)
                e = e.next;
        } else {
            for (int i = size; i > index; i--)
                e = e.previous;
        }
        return e;
    }


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int indexOf(Object o) {
        int index = 0;
        if (o==null) {
            for (Entry e = header.next; e != header; e = e.next) {
                if (e.element==null)
                    return index;
                index++;
            }
        } else {
            for (Entry e = header.next; e != header; e = e.next) {
                if (o.equals(e.element))
                    return index;
                index++;
            }
        }
        return -1;
    }

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int lastIndexOf(Object o) {
        int index = size;
        if (o==null) {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (e.element==null)
                    return index;
            }
        } else {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (o.equals(e.element))
                    return index;
            }
        }
        return -1;
    }

    // Queue operations.

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E peek() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E element() {
        return getFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E poll() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list.
     *
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E remove() {
        return removeFirst();
    }

    /**
     * Adds the specified element as the tail (last element) of this list.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Queue#offer})
     * @since 1.5
     */
    public boolean offer(E e) {
        return add(e);
    }

    // Deque operations
    /**
     * Inserts the specified element at the front of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerFirst})
     * @since 1.6
     */
    public boolean offerFirst(E e) {
        addFirst(e);
        return true;
    }

    /**
     * Inserts the specified element at the end of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerLast})
     * @since 1.6
     */
    public boolean offerLast(E e) {
        addLast(e);
        return true;
    }

    /**
     * Retrieves, but does not remove, the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekFirst() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekLast() {
        if (size==0)
            return null;
        return getLast();
    }

    /**
     * Retrieves and removes the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollFirst() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollLast() {
        if (size==0)
            return null;
        return removeLast();
    }

    /**
     * Pushes an element onto the stack represented by this list.  In other
     * words, inserts the element at the front of this list.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @since 1.6
     */
    public void push(E e) {
        addFirst(e);
    }

    /**
     * Pops an element from the stack represented by this list.  In other
     * words, removes and returns the first element of this list.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this list (which is the top
     *         of the stack represented by this list)
     * @throws NoSuchElementException if this list is empty
     * @since 1.6
     */
    public E pop() {
        return removeFirst();
    }

    /**
     * Removes the first occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeFirstOccurrence(Object o) {
        return remove(o);
    }

    /**
     * Removes the last occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeLastOccurrence(Object o) {
        if (o==null) {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * Returns a list-iterator of the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * Obeys the general contract of <tt>List.listIterator(int)</tt>.<p>
     *
     * The list-iterator is <i>fail-fast</i>: if the list is structurally
     * modified at any time after the Iterator is created, in any way except
     * through the list-iterator's own <tt>remove</tt> or <tt>add</tt>
     * methods, the list-iterator will throw a
     * <tt>ConcurrentModificationException</tt>.  Thus, in the face of
     * concurrent modification, the iterator fails quickly and cleanly, rather
     * than risking arbitrary, non-deterministic behavior at an undetermined
     * time in the future.
     *
     * @param index index of the first element to be returned from the
     *              list-iterator (by a call to <tt>next</tt>)
     * @return a ListIterator of the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     * @see List#listIterator(int)
     */
    public ListIterator<E> listIterator(int index) {
        return new ListItr(index);
    }

    private class ListItr implements ListIterator<E> {
        private Entry<E> lastReturned = header;
        private Entry<E> next;
        private int nextIndex;
        private int expectedModCount = modCount;

        ListItr(int index) {
            if (index < 0 || index > size)
                throw new IndexOutOfBoundsException();
            if (index < (size >> 1)) {
                next = header.next;
                for (nextIndex=0; nextIndex<index; nextIndex++)
                    next = next.next;
            } else {
                next = header;
                for (nextIndex=size; nextIndex>index; nextIndex--)
                    next = next.previous;
            }
        }

        public boolean hasNext() {
            return nextIndex != size;
        }

        public E next() {
            checkForComodification();
            if (nextIndex == size)
                throw new NoSuchElementException();

            lastReturned = next;
            next = next.next;
            nextIndex++;
            return lastReturned.element;
        }

        public boolean hasPrevious() {
            return nextIndex != 0;
        }

        public E previous() {
            if (nextIndex == 0)
                throw new NoSuchElementException();

            lastReturned = next = next.previous;
            nextIndex--;
            checkForComodification();
            return lastReturned.element;
        }

        public int nextIndex() {
            return nextIndex;
        }

        public int previousIndex() {
            return nextIndex-1;
        }

        public void remove() {
            checkForComodification();
            Entry<E> lastNext = lastReturned.next;
            try {
                LinkedList.this.remove(lastReturned);
            } catch (NoSuchElementException e) {
                throw new IllegalStateException();
            }
            if (next==lastReturned)
                next = lastNext;
            else
                nextIndex--;
            lastReturned = header;
            expectedModCount++;
        }

        public void set(E e) {
            if (lastReturned == header)
                throw new IllegalStateException();
            checkForComodification();
            lastReturned.element = e;
        }

        public void add(E e) {
            checkForComodification();
            lastReturned = header;
            addBefore(e, next);
            nextIndex++;
            expectedModCount++;
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private static class Entry<E> {
        E element;
        Entry<E> next;
        Entry<E> previous;

        Entry(E element, Entry<E> next, Entry<E> previous) {
            this.element = element;
            this.next = next;
            this.previous = previous;
        }
    }

    private Entry<E> addBefore(E e, Entry<E> entry) {
        Entry<E> newEntry = new Entry<E>(e, entry, entry.previous);
        newEntry.previous.next = newEntry;
        newEntry.next.previous = newEntry;
        size++;
        modCount++;
        return newEntry;
    }

    private E remove(Entry<E> e) {
        if (e == header)
            throw new NoSuchElementException();

        E result = e.element;
        e.previous.next = e.next;
        e.next.previous = e.previous;
        e.next = e.previous = null;
        e.element = null;
        size--;
        modCount++;
        return result;
    }

    /**
     * @since 1.6
     */
    public Iterator<E> descendingIterator() {
        return new DescendingIterator();
    }

    /** Adapter to provide descending iterators via ListItr.previous */
    private class DescendingIterator implements Iterator {
        final ListItr itr = new ListItr(size());
        public boolean hasNext() {
            return itr.hasPrevious();
        }
        public E next() {
            return itr.previous();
        }
        public void remove() {
            itr.remove();
        }
    }

    /**
     * Returns an array containing all of the elements in this list
     * in proper sequence (from first to last element).
     *
     * <p>The returned array will be "safe" in that no references to it are
     * maintained by this list.  (In other words, this method must allocate
     * a new array).  The caller is thus free to modify the returned array.
     *
     * <p>This method acts as bridge between array-based and collection-based
     * APIs.
     *
     * @return an array containing all of the elements in this list
     *         in proper sequence
     */
    public Object[] toArray() {
        Object[] result = new Object[size];
        int i = 0;
        for (Entry<E> e = header.next; e != header; e = e.next)
            result[i++] = e.element;
        return result;
    }

    private static final long serialVersionUID = 876323262645176354L;
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator for lists that allows the programmer
 * to traverse the list in either direction, modify
 * the list during iteration, and obtain the iterator's
 * current position in the list. A {@code ListIterator}
 * has no current element; its <I>cursor position</I> always
 * lies between the element that would be returned by a call
 * to {@code previous()} and the element that would be
 * returned by a call to {@code next()}.
 * An iterator for a list of length {@code n} has {@code n+1} possible
 * cursor positions, as illustrated by the carets ({@code ^}) below:
 * <PRE>
 *                      Element(0)   Element(1)   Element(2)   ... Element(n-1)
 * cursor positions:  ^            ^            ^            ^                  ^
 * </PRE>
 * Note that the {@link #remove} and {@link #set(Object)} methods are
 * <i>not</i> defined in terms of the cursor position;  they are defined to
 * operate on the last element returned by a call to {@link #next} or
 * {@link #previous()}.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see List
 * @see Iterator
 * @see Enumeration
 * @see List#listIterator()
 * @since   1.2
 */
public interface ListIterator<E> extends Iterator<E> {
    // Query Operations

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the forward direction. (In other words,
     * returns {@code true} if {@link #next} would return an element rather
     * than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the forward direction
     */
    boolean hasNext();

    /**
     * Returns the next element in the list and advances the cursor position.
     * This method may be called repeatedly to iterate through the list,
     * or intermixed with calls to {@link #previous} to go back and forth.
     * (Note that alternating calls to {@code next} and {@code previous}
     * will return the same element repeatedly.)
     *
     * @return the next element in the list
     * @throws NoSuchElementException if the iteration has no next element
     */
    E next();

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the reverse direction.  (In other words,
     * returns {@code true} if {@link #previous} would return an element
     * rather than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the reverse direction
     */
    boolean hasPrevious();

    /**
     * Returns the previous element in the list and moves the cursor
     * position backwards.  This method may be called repeatedly to
     * iterate through the list backwards, or intermixed with calls to
     * {@link #next} to go back and forth.  (Note that alternating calls
     * to {@code next} and {@code previous} will return the same
     * element repeatedly.)
     *
     * @return the previous element in the list
     * @throws NoSuchElementException if the iteration has no previous
     *         element
     */
    E previous();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #next}. (Returns list size if the list
     * iterator is at the end of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code next}, or list size if the list
     *         iterator is at the end of the list
     */
    int nextIndex();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #previous}. (Returns -1 if the list
     * iterator is at the beginning of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code previous}, or -1 if the list
     *         iterator is at the beginning of the list
     */
    int previousIndex();


    // Modification Operations

    /**
     * Removes from the list the last element that was returned by {@link
     * #next} or {@link #previous} (optional operation).  This call can
     * only be made once per call to {@code next} or {@code previous}.
     * It can be made only if {@link #add} has not been
     * called after the last call to {@code next} or {@code previous}.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this list iterator
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void remove();

    /**
     * Replaces the last element returned by {@link #next} or
     * {@link #previous} with the specified element (optional operation).
     * This call can be made only if neither {@link #remove} nor {@link
     * #add} have been called after the last call to {@code next} or
     * {@code previous}.
     *
     * @param e the element with which to replace the last element returned by
     *          {@code next} or {@code previous}
     * @throws UnsupportedOperationException if the {@code set} operation
     *         is not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of the specified
     *         element prevents it from being added to this list
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void set(E e);

    /**
     * Inserts the specified element into the list (optional operation).
     * The element is inserted immediately before the next element that
     * would be returned by {@link #next}, if any, and after the next
     * element that would be returned by {@link #previous}, if any.  (If the
     * list contains no elements, the new element becomes the sole element
     * on the list.)  The new element is inserted before the implicit
     * cursor: a subsequent call to {@code next} would be unaffected, and a
     * subsequent call to {@code previous} would return the new element.
     * (This call increases by one the value that would be returned by a
     * call to {@code nextIndex} or {@code previousIndex}.)
     *
     * @param e the element to insert
     * @throws UnsupportedOperationException if the {@code add} method is
     *         not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of this element
     *         prevents it from being added to this list
     */
    void add(E e);
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An ordered collection (also known as a <i>sequence</i>).  The user of this
 * interface has precise control over where in the list each element is
 * inserted.  The user can access elements by their integer index (position in
 * the list), and search for elements in the list.<p>
 *
 * Unlike sets, lists typically allow duplicate elements.  More formally,
 * lists typically allow pairs of elements <tt>e1</tt> and <tt>e2</tt>
 * such that <tt>e1.equals(e2)</tt>, and they typically allow multiple
 * null elements if they allow null elements at all.  It is not inconceivable
 * that someone might wish to implement a list that prohibits duplicates, by
 * throwing runtime exceptions when the user attempts to insert them, but we
 * expect this usage to be rare.<p>
 *
 * The <tt>List</tt> interface places additional stipulations, beyond those
 * specified in the <tt>Collection</tt> interface, on the contracts of the
 * <tt>iterator</tt>, <tt>add</tt>, <tt>remove</tt>, <tt>equals</tt>, and
 * <tt>hashCode</tt> methods.  Declarations for other inherited methods are
 * also included here for convenience.<p>
 *
 * The <tt>List</tt> interface provides four methods for positional (indexed)
 * access to list elements.  Lists (like Java arrays) are zero based.  Note
 * that these operations may execute in time proportional to the index value
 * for some implementations (the <tt>LinkedList</tt> class, for
 * example). Thus, iterating over the elements in a list is typically
 * preferable to indexing through it if the caller does not know the
 * implementation.<p>
 *
 * The <tt>List</tt> interface provides a special iterator, called a
 * <tt>ListIterator</tt>, that allows element insertion and replacement, and
 * bidirectional access in addition to the normal operations that the
 * <tt>Iterator</tt> interface provides.  A method is provided to obtain a
 * list iterator that starts at a specified position in the list.<p>
 *
 * The <tt>List</tt> interface provides two methods to search for a specified
 * object.  From a performance standpoint, these methods should be used with
 * caution.  In many implementations they will perform costly linear
 * searches.<p>
 *
 * The <tt>List</tt> interface provides two methods to efficiently insert and
 * remove multiple elements at an arbitrary point in the list.<p>
 *
 * Note: While it is permissible for lists to contain themselves as elements,
 * extreme caution is advised: the <tt>equals</tt> and <tt>hashCode</tt>
 * methods are no longer well defined on such a list.
 *
 * <p>Some list implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the list may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see Set
 * @see ArrayList
 * @see LinkedList
 * @see Vector
 * @see Arrays#asList(Object[])
 * @see Collections#nCopies(int, Object)
 * @see Collections#EMPTY_LIST
 * @see AbstractList
 * @see AbstractSequentialList
 * @since 1.2
 */

public interface List<E> extends Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this list.  If this list contains
     * more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this list
     */
    int size();

    /**
     * Returns <tt>true</tt> if this list contains no elements.
     *
     * @return <tt>true</tt> if this list contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    boolean add(E e);

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present (optional operation).  If this list does not contain
     * the element, it is unchanged.  More formally, removes the element with
     * the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list changed
     * as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     */
    boolean remove(Object o);


    // Bulk Modification Operations

    /**
     * Returns <tt>true</tt> if this list contains all of the elements of the
     * specified collection.
     *
     * @param  c collection to be checked for containment in this list
     * @return <tt>true</tt> if this list contains all of the elements of the
     *         specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         list (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Appends all of the elements in the specified collection to the end of
     * this list, in the order that they are returned by the specified
     * collection's iterator (optional operation).  The behavior of this
     * operation is undefined if the specified collection is modified while
     * the operation is in progress.  (Note that this will occur if the
     * specified collection is this list, and it's nonempty.)
     *
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * @param index index at which to insert the first element from the
     *              specified collection
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    boolean addAll(int index, Collection<? extends E> c);

    /**
     * Removes from this list all of its elements that are contained in the
     * specified collection (optional operation).
     *
     * @param c collection containing elements to be removed from this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this list that are contained in the
     * specified collection (optional operation).  In other words, removes
     * from this list all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this list
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * <tt>true</tt> if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements <tt>e1</tt> and
     * <tt>e2</tt> are <i>equal</i> if <tt>(e1==null ? e2==null :
     * e1.equals(e2))</tt>.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.  This
     * definition ensures that the equals method works properly across
     * different implementations of the <tt>List</tt> interface.
     *
     * @param o the object to be compared for equality with this list
     * @return <tt>true</tt> if the specified object is equal to this list
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this list.  The hash code of a list
     * is defined to be the result of the following calculation:
     * <pre>
     *  int hashCode = 1;
     *  for (E e : list)
     *      hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
     * </pre>
     * This ensures that <tt>list1.equals(list2)</tt> implies that
     * <tt>list1.hashCode()==list2.hashCode()</tt> for any two lists,
     * <tt>list1</tt> and <tt>list2</tt>, as required by the general
     * contract of {@link Object#hashCode}.
     *
     * @return the hash code value for this list
     * @see Object#equals(Object)
     * @see #equals(Object)
     */
    int hashCode();


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E get(int index);

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>set</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E set(int index, E element);

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    void add(int index, E element);

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E remove(int index);


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int indexOf(Object o);

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int lastIndexOf(Object o);


    // List Iterators

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     */
    ListIterator<E> listIterator();

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * The specified index indicates the first element that would be
     * returned by an initial call to {@link ListIterator#next next}.
     * An initial call to {@link ListIterator#previous previous} would
     * return the element with the specified index minus one.
     *
     * @param index index of the first element to be returned from the
     *        list iterator (by a call to {@link ListIterator#next next})
     * @return a list iterator over the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         ({@code index < 0 || index > size()})
     */
    ListIterator<E> listIterator(int index);

    // View

    /**
     * Returns a view of the portion of this list between the specified
     * <tt>fromIndex</tt>, inclusive, and <tt>toIndex</tt>, exclusive.  (If
     * <tt>fromIndex</tt> and <tt>toIndex</tt> are equal, the returned list is
     * empty.)  The returned list is backed by this list, so non-structural
     * changes in the returned list are reflected in this list, and vice-versa.
     * The returned list supports all of the optional list operations supported
     * by this list.<p>
     *
     * This method eliminates the need for explicit range operations (of
     * the sort that commonly exist for arrays).  Any operation that expects
     * a list can be used as a range operation by passing a subList view
     * instead of a whole list.  For example, the following idiom
     * removes a range of elements from a list:
     * <pre>
     *      list.subList(from, to).clear();
     * </pre>
     * Similar idioms may be constructed for <tt>indexOf</tt> and
     * <tt>lastIndexOf</tt>, and all of the algorithms in the
     * <tt>Collections</tt> class can be applied to a subList.<p>
     *
     * The semantics of the list returned by this method become undefined if
     * the backing list (i.e., this list) is <i>structurally modified</i> in
     * any way other than via the returned list.  (Structural modifications are
     * those that change the size of this list, or otherwise perturb it in such
     * a fashion that iterations in progress may yield incorrect results.)
     *
     * @param fromIndex low endpoint (inclusive) of the subList
     * @param toIndex high endpoint (exclusive) of the subList
     * @return a view of the specified range within this list
     * @throws IndexOutOfBoundsException for an illegal endpoint index value
     *         (<tt>fromIndex &lt; 0 || toIndex &gt; size ||
     *         fromIndex &gt; toIndex</tt>)
     */
    List<E> subList(int fromIndex, int toIndex);
}


/*
 * Copyright 1994-1998 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown by the <code>nextElement</code> method of an
 * <code>Enumeration</code> to indicate that there are no more
 * elements in the enumeration.
 *
 * @author  unascribed
 * @see     java.util.Enumeration
 * @see     java.util.Enumeration#nextElement()
 * @since   JDK1.0
 */
public
class NoSuchElementException extends RuntimeException {
    /**
     * Constructs a <code>NoSuchElementException</code> with <tt>null</tt>
     * as its error message string.
     */
    public NoSuchElementException() {
        super();
    }

    /**
     * Constructs a <code>NoSuchElementException</code>, saving a reference
     * to the error message string <tt>s</tt> for later retrieval by the
     * <tt>getMessage</tt> method.
     *
     * @param   s   the detail message.
     */
    public NoSuchElementException(String s) {
        super(s);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea with assistance from members of JCP JSR-166
 * Expert Group and released to the public domain, as explained at
 * http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A collection designed for holding elements prior to processing.
 * Besides basic {@link java.util.Collection Collection} operations,
 * queues provide additional insertion, extraction, and inspection
 * operations.  Each of these methods exists in two forms: one throws
 * an exception if the operation fails, the other returns a special
 * value (either <tt>null</tt> or <tt>false</tt>, depending on the
 * operation).  The latter form of the insert operation is designed
 * specifically for use with capacity-restricted <tt>Queue</tt>
 * implementations; in most implementations, insert operations cannot
 * fail.
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Returns special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #add add(e)}</td>
 *    <td>{@link #offer offer(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #remove remove()}</td>
 *    <td>{@link #poll poll()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #element element()}</td>
 *    <td>{@link #peek peek()}</td>
 *  </tr>
 * </table>
 *
 * <p>Queues typically, but do not necessarily, order elements in a
 * FIFO (first-in-first-out) manner.  Among the exceptions are
 * priority queues, which order elements according to a supplied
 * comparator, or the elements' natural ordering, and LIFO queues (or
 * stacks) which order the elements LIFO (last-in-first-out).
 * Whatever the ordering used, the <em>head</em> of the queue is that
 * element which would be removed by a call to {@link #remove() } or
 * {@link #poll()}.  In a FIFO queue, all new elements are inserted at
 * the <em> tail</em> of the queue. Other kinds of queues may use
 * different placement rules.  Every <tt>Queue</tt> implementation
 * must specify its ordering properties.
 *
 * <p>The {@link #offer offer} method inserts an element if possible,
 * otherwise returning <tt>false</tt>.  This differs from the {@link
 * java.util.Collection#add Collection.add} method, which can fail to
 * add an element only by throwing an unchecked exception.  The
 * <tt>offer</tt> method is designed for use when failure is a normal,
 * rather than exceptional occurrence, for example, in fixed-capacity
 * (or &quot;bounded&quot;) queues.
 *
 * <p>The {@link #remove()} and {@link #poll()} methods remove and
 * return the head of the queue.
 * Exactly which element is removed from the queue is a
 * function of the queue's ordering policy, which differs from
 * implementation to implementation. The <tt>remove()</tt> and
 * <tt>poll()</tt> methods differ only in their behavior when the
 * queue is empty: the <tt>remove()</tt> method throws an exception,
 * while the <tt>poll()</tt> method returns <tt>null</tt>.
 *
 * <p>The {@link #element()} and {@link #peek()} methods return, but do
 * not remove, the head of the queue.
 *
 * <p>The <tt>Queue</tt> interface does not define the <i>blocking queue
 * methods</i>, which are common in concurrent programming.  These methods,
 * which wait for elements to appear or for space to become available, are
 * defined in the {@link java.util.concurrent.BlockingQueue} interface, which
 * extends this interface.
 *
 * <p><tt>Queue</tt> implementations generally do not allow insertion
 * of <tt>null</tt> elements, although some implementations, such as
 * {@link LinkedList}, do not prohibit insertion of <tt>null</tt>.
 * Even in the implementations that permit it, <tt>null</tt> should
 * not be inserted into a <tt>Queue</tt>, as <tt>null</tt> is also
 * used as a special return value by the <tt>poll</tt> method to
 * indicate that the queue contains no elements.
 *
 * <p><tt>Queue</tt> implementations generally do not define
 * element-based versions of methods <tt>equals</tt> and
 * <tt>hashCode</tt> but instead inherit the identity based versions
 * from class <tt>Object</tt>, because element-based equality is not
 * always well-defined for queues with the same elements but different
 * ordering properties.
 *
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @see java.util.Collection
 * @see LinkedList
 * @see PriorityQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.BlockingQueue
 * @see java.util.concurrent.ArrayBlockingQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.PriorityBlockingQueue
 * @since 1.5
 * @author Doug Lea
 * @param <E> the type of elements held in this collection
 */
public interface Queue<E> extends Collection<E> {
    /**
     * Inserts the specified element into this queue if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt>
     * if no space is currently available.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean add(E e);

    /**
     * Inserts the specified element into this queue if it is possible to do
     * so immediately without violating capacity restrictions.
     * When using a capacity-restricted queue, this method is generally
     * preferable to {@link #add}, which can fail to insert an element only
     * by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this queue, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of this queue.  This method differs
     * from {@link #poll poll} only in that it throws an exception if this
     * queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of this queue.  This method
     * differs from {@link #peek peek} only in that it throws an exception
     * if this queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E peek();
}


/*
 * Copyright 2000-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Marker interface used by <tt>List</tt> implementations to indicate that
 * they support fast (generally constant time) random access.  The primary
 * purpose of this interface is to allow generic algorithms to alter their
 * behavior to provide good performance when applied to either random or
 * sequential access lists.
 *
 * <p>The best algorithms for manipulating random access lists (such as
 * <tt>ArrayList</tt>) can produce quadratic behavior when applied to
 * sequential access lists (such as <tt>LinkedList</tt>).  Generic list
 * algorithms are encouraged to check whether the given list is an
 * <tt>instanceof</tt> this interface before applying an algorithm that would
 * provide poor performance if it were applied to a sequential access list,
 * and to alter their behavior if necessary to guarantee acceptable
 * performance.
 *
 * <p>It is recognized that the distinction between random and sequential
 * access is often fuzzy.  For example, some <tt>List</tt> implementations
 * provide asymptotically linear access times if they get huge, but constant
 * access times in practice.  Such a <tt>List</tt> implementation
 * should generally implement this interface.  As a rule of thumb, a
 * <tt>List</tt> implementation should implement this interface if,
 * for typical instances of the class, this loop:
 * <pre>
 *     for (int i=0, n=list.size(); i &lt; n; i++)
 *         list.get(i);
 * </pre>
 * runs faster than this loop:
 * <pre>
 *     for (Iterator i=list.iterator(); i.hasNext(); )
 *         i.next();
 * </pre>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @since 1.4
 */
public interface RandomAccess {
}


package javaUtilEx;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that the requested operation is not supported.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @since   1.2
 */
public class UnsupportedOperationException extends RuntimeException {
    /**
     * Constructs an UnsupportedOperationException with no detail message.
     */
    public UnsupportedOperationException() {
    }

    /**
     * Constructs an UnsupportedOperationException with the specified
     * detail message.
     *
     * @param message the detail message
     */
    public UnsupportedOperationException(String message) {
        super(message);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public UnsupportedOperationException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public UnsupportedOperationException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1242599979055084673L;
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
javaUtilEx.juLinkedListCreateRemoveLastOccurrence.main([Ljava/lang/String;)V: Graph of 1397 nodes with 8 SCCs.



javaUtilEx.juLinkedListCreateRemoveLastOccurrence.createList(I)LjavaUtilEx/LinkedList;: Graph of 250 nodes with 1 SCC.



javaUtilEx.Content.equals(Ljava/lang/Object;)Z: Graph of 32 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 9 SCCss.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveLastOccurrence.createList(I)LjavaUtilEx/LinkedList;
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*java.lang.String: [count]
*javaUtilEx.LinkedList: [header, size]
*javaUtilEx.LinkedList$Entry: [previous, next]
*javaUtilEx.AbstractList: [modCount]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(8) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 118 IRulesP rules:
f12243_0_createList_LE(EOS(STATIC_12243(java.lang.Object(o12051sub), i3571)), i3593, i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12250_0_createList_LE(EOS(STATIC_12250(java.lang.Object(o12051sub), i3571)), i3593, i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12250_0_createList_LE(EOS(STATIC_12250(java.lang.Object(o12051sub), i3571)), i3593, i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12259_0_createList_Load(EOS(STATIC_12259(java.lang.Object(o12051sub), i3571)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: i3593 > 0
f12259_0_createList_Load(EOS(STATIC_12259(java.lang.Object(o12051sub), i3571)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12270_0_createList_New(EOS(STATIC_12270(java.lang.Object(o12051sub), i3571)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12270_0_createList_New(EOS(STATIC_12270(java.lang.Object(o12051sub), i3571)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12278_0_createList_Duplicate(EOS(STATIC_12278(java.lang.Object(o12051sub), i3571)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12278_0_createList_Duplicate(EOS(STATIC_12278(java.lang.Object(o12051sub), i3571)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12285_0_createList_InvokeMethod(EOS(STATIC_12285(java.lang.Object(o12051sub), i3571)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12285_0_createList_InvokeMethod(EOS(STATIC_12285(java.lang.Object(o12051sub), i3571)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12293_0_random_FieldAccess(EOS(STATIC_12293(java.lang.Object(o12051sub), i3571)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12293_0_random_FieldAccess(EOS(STATIC_12293(java.lang.Object(o12051sub), i3571)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12306_0_random_FieldAccess(EOS(STATIC_12306(java.lang.Object(o12051sub), i3571)), i3593, java.lang.Object(o12051sub), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12306_0_random_FieldAccess(EOS(STATIC_12306(java.lang.Object(o12051sub), i3571)), i3593, java.lang.Object(o12051sub), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12315_0_random_ArrayAccess(EOS(STATIC_12315(java.lang.Object(o12051sub), i3571)), i3593, java.lang.Object(o12051sub), i3571, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12315_0_random_ArrayAccess(EOS(STATIC_12315(java.lang.Object(ARRAY(i3655)), i3571)), i3593, java.lang.Object(ARRAY(i3655)), i3571, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12321_0_random_ArrayAccess(EOS(STATIC_12321(java.lang.Object(ARRAY(i3655)), i3571)), i3593, java.lang.Object(ARRAY(i3655)), i3571, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: i3655 >= 0
f12321_0_random_ArrayAccess(EOS(STATIC_12321(java.lang.Object(ARRAY(i3655)), i3663)), i3593, java.lang.Object(ARRAY(i3655)), i3663, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12328_0_random_ArrayAccess(EOS(STATIC_12328(java.lang.Object(ARRAY(i3655)), i3663)), i3593, java.lang.Object(ARRAY(i3655)), i3663, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12328_0_random_ArrayAccess(EOS(STATIC_12328(java.lang.Object(ARRAY(i3655)), i3663)), i3593, java.lang.Object(ARRAY(i3655)), i3663, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12335_0_random_ArrayAccess(EOS(STATIC_12335(java.lang.Object(ARRAY(i3655)), i3663)), i3593, java.lang.Object(ARRAY(i3655)), i3663, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12335_0_random_ArrayAccess(EOS(STATIC_12335(java.lang.Object(ARRAY(i3655)), i3663)), i3593, java.lang.Object(ARRAY(i3655)), i3663, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12343_0_random_Store(EOS(STATIC_12343(java.lang.Object(ARRAY(i3655)), i3663)), i3593, o12609, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: i3663 < i3655
f12343_0_random_Store(EOS(STATIC_12343(java.lang.Object(ARRAY(i3655)), i3663)), i3593, o12609, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12353_0_random_FieldAccess(EOS(STATIC_12353(java.lang.Object(ARRAY(i3655)), i3663)), i3593, o12609, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12353_0_random_FieldAccess(EOS(STATIC_12353(java.lang.Object(ARRAY(i3655)), i3663)), i3593, o12609, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12361_0_random_ConstantStackPush(EOS(STATIC_12361(java.lang.Object(ARRAY(i3655)), i3663)), i3593, o12609, i3663, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12361_0_random_ConstantStackPush(EOS(STATIC_12361(java.lang.Object(ARRAY(i3655)), i3663)), i3593, o12609, i3663, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12368_0_random_IntArithmetic(EOS(STATIC_12368(java.lang.Object(ARRAY(i3655)), i3663)), i3593, o12609, i3663, 1, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12368_0_random_IntArithmetic(EOS(STATIC_12368(java.lang.Object(ARRAY(i3655)), i3663)), i3593, o12609, i3663, matching1, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12379_0_random_FieldAccess(EOS(STATIC_12379(java.lang.Object(ARRAY(i3655)), i3663)), i3593, o12609, i3663 + 1, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: i3663 >= 0 && matching1 = 1
f12379_0_random_FieldAccess(EOS(STATIC_12379(java.lang.Object(ARRAY(i3655)), i3663)), i3593, o12609, i3687, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12389_0_random_Load(EOS(STATIC_12389(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12609, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12389_0_random_Load(EOS(STATIC_12389(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12609, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12398_0_random_InvokeMethod(EOS(STATIC_12398(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12609, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12398_0_random_InvokeMethod(EOS(STATIC_12398(java.lang.Object(ARRAY(i3655)), i3687)), i3593, java.lang.Object(o12712sub), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12408_0_random_InvokeMethod(EOS(STATIC_12408(java.lang.Object(ARRAY(i3655)), i3687)), i3593, java.lang.Object(o12712sub), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12408_0_random_InvokeMethod(EOS(STATIC_12408(java.lang.Object(ARRAY(i3655)), i3687)), i3593, java.lang.Object(o12716sub), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12419_0_random_InvokeMethod(EOS(STATIC_12419(java.lang.Object(ARRAY(i3655)), i3687)), i3593, java.lang.Object(o12716sub), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12419_0_random_InvokeMethod(EOS(STATIC_12419(java.lang.Object(ARRAY(i3655)), i3687)), i3593, java.lang.Object(o12716sub), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12432_0_length_Load(EOS(STATIC_12432(java.lang.Object(ARRAY(i3655)), i3687)), i3593, java.lang.Object(o12716sub), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12432_0_length_Load(EOS(STATIC_12432(java.lang.Object(ARRAY(i3655)), i3687)), i3593, java.lang.Object(o12716sub), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12458_0_length_FieldAccess(EOS(STATIC_12458(java.lang.Object(ARRAY(i3655)), i3687)), i3593, java.lang.Object(o12716sub), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12458_0_length_FieldAccess(EOS(STATIC_12458(java.lang.Object(ARRAY(i3655)), i3687)), i3593, java.lang.Object(java.lang.String(EOC, i3703)), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12475_0_length_FieldAccess(EOS(STATIC_12475(java.lang.Object(ARRAY(i3655)), i3687)), i3593, java.lang.Object(java.lang.String(EOC, i3703)), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12475_0_length_FieldAccess(EOS(STATIC_12475(java.lang.Object(ARRAY(i3655)), i3687)), i3593, java.lang.Object(java.lang.String(EOC, i3703)), o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12487_0_length_Return(EOS(STATIC_12487(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12487_0_length_Return(EOS(STATIC_12487(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12499_0_random_Return(EOS(STATIC_12499(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12499_0_random_Return(EOS(STATIC_12499(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12510_0_createList_InvokeMethod(EOS(STATIC_12510(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12510_0_createList_InvokeMethod(EOS(STATIC_12510(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12520_0__init__Load(EOS(STATIC_12520(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12520_0__init__Load(EOS(STATIC_12520(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12541_0__init__InvokeMethod(EOS(STATIC_12541(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12541_0__init__InvokeMethod(EOS(STATIC_12541(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12555_0__init__Load(EOS(STATIC_12555(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12555_0__init__Load(EOS(STATIC_12555(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12573_0__init__Load(EOS(STATIC_12573(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12573_0__init__Load(EOS(STATIC_12573(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12590_0__init__FieldAccess(EOS(STATIC_12590(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12590_0__init__FieldAccess(EOS(STATIC_12590(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12610_0__init__Return(EOS(STATIC_12610(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12610_0__init__Return(EOS(STATIC_12610(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12632_0_createList_InvokeMethod(EOS(STATIC_12632(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12632_0_createList_InvokeMethod(EOS(STATIC_12632(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12657_0_addLast_Load(EOS(STATIC_12657(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12657_0_addLast_Load(EOS(STATIC_12657(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12701_0_addLast_Load(EOS(STATIC_12701(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12701_0_addLast_Load(EOS(STATIC_12701(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12720_0_addLast_Load(EOS(STATIC_12720(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12720_0_addLast_Load(EOS(STATIC_12720(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12732_0_addLast_FieldAccess(EOS(STATIC_12732(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12732_0_addLast_FieldAccess(EOS(STATIC_12732(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12745_0_addLast_InvokeMethod(EOS(STATIC_12745(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12745_0_addLast_InvokeMethod(EOS(STATIC_12745(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12765_0_addBefore_New(EOS(STATIC_12765(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12765_0_addBefore_New(EOS(STATIC_12765(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12792_0_addBefore_Duplicate(EOS(STATIC_12792(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12792_0_addBefore_Duplicate(EOS(STATIC_12792(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12812_0_addBefore_Load(EOS(STATIC_12812(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12812_0_addBefore_Load(EOS(STATIC_12812(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12831_0_addBefore_Load(EOS(STATIC_12831(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12831_0_addBefore_Load(EOS(STATIC_12831(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12850_0_addBefore_Load(EOS(STATIC_12850(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12850_0_addBefore_Load(EOS(STATIC_12850(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12861_0_addBefore_FieldAccess(EOS(STATIC_12861(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12861_0_addBefore_FieldAccess(EOS(STATIC_12861(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12868_0_addBefore_FieldAccess(EOS(STATIC_12868(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: o12056[LinkedList$Entry.next]o12056 > 0 && o12056[LinkedList$Entry.next]o12054 > 0 && o12056[LinkedList$Entry.previous]o12054 > 0 && o12056[LinkedList$Entry.previous]o12056 > 0
f12868_0_addBefore_FieldAccess(EOS(STATIC_12868(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12883_0_addBefore_FieldAccess(EOS(STATIC_12883(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: o12055[LinkedList$Entry.previous]o12055 > 0 && o12055[LinkedList$Entry.previous]o12054 > 0
f12883_0_addBefore_FieldAccess(EOS(STATIC_12883(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12900_0_addBefore_FieldAccess(EOS(STATIC_12900(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: o12057[LinkedList$Entry.previous]o12054 > 0 && o12057[LinkedList$Entry.previous]o12057 > 0
f12900_0_addBefore_FieldAccess(EOS(STATIC_12900(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12917_0_addBefore_InvokeMethod(EOS(STATIC_12917(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12917_0_addBefore_InvokeMethod(EOS(STATIC_12917(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12934_0__init__Load(EOS(STATIC_12934(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12934_0__init__Load(EOS(STATIC_12934(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12969_0__init__InvokeMethod(EOS(STATIC_12969(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12969_0__init__InvokeMethod(EOS(STATIC_12969(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12990_0__init__Load(EOS(STATIC_12990(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f12990_0__init__Load(EOS(STATIC_12990(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13011_0__init__Load(EOS(STATIC_13011(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13011_0__init__Load(EOS(STATIC_13011(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13028_0__init__FieldAccess(EOS(STATIC_13028(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13028_0__init__FieldAccess(EOS(STATIC_13028(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13040_0__init__Load(EOS(STATIC_13040(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13040_0__init__Load(EOS(STATIC_13040(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13054_0__init__Load(EOS(STATIC_13054(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13054_0__init__Load(EOS(STATIC_13054(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13069_0__init__FieldAccess(EOS(STATIC_13069(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13069_0__init__FieldAccess(EOS(STATIC_13069(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13085_0__init__Load(EOS(STATIC_13085(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13085_0__init__Load(EOS(STATIC_13085(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13100_0__init__Load(EOS(STATIC_13100(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13100_0__init__Load(EOS(STATIC_13100(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13117_0__init__FieldAccess(EOS(STATIC_13117(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13117_0__init__FieldAccess(EOS(STATIC_13117(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13133_0__init__Return(EOS(STATIC_13133(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13133_0__init__Return(EOS(STATIC_13133(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13146_0_addBefore_Store(EOS(STATIC_13146(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13146_0_addBefore_Store(EOS(STATIC_13146(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13161_0_addBefore_Load(EOS(STATIC_13161(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13161_0_addBefore_Load(EOS(STATIC_13161(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13177_0_addBefore_FieldAccess(EOS(STATIC_13177(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13177_0_addBefore_FieldAccess(EOS(STATIC_13177(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13197_0_addBefore_Load(EOS(STATIC_13197(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13197_0_addBefore_Load(EOS(STATIC_13197(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13217_0_addBefore_FieldAccess(EOS(STATIC_13217(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13217_0_addBefore_FieldAccess(EOS(STATIC_13217(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f13236_0_addBefore_FieldAccess(EOS(STATIC_13236(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: o12056[LinkedList$Entry.next]o12056 > 0 && o12057[LinkedList$Entry.previous]o12056 > 0 && o12056[LinkedList$Entry.previous]o12056 > 0 && o12056[LinkedList$Entry.next]o12057 > 0 && o12056[LinkedList$Entry.previous]o12057 > 0 && o12057[LinkedList$Entry.previous]o12057 > 0
f13217_0_addBefore_FieldAccess(EOS(STATIC_13217(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.next]o12055, o17121[LinkedList$Entry.previous]o12055, o17121[LinkedList$Entry.previous]o12055, o17121[LinkedList$Entry.next]o17121, o17121[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.next]o17121, o17121[LinkedList$Entry.previous]o17121, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13237_0_addBefore_FieldAccess(EOS(STATIC_13237(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13236_0_addBefore_FieldAccess(EOS(STATIC_13236(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13250_0_addBefore_FieldAccess(EOS(STATIC_13250(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: o12057[LinkedList$Entry.previous]o12055 > 0 && o12055[LinkedList$Entry.previous]o12055 > 0 && o12055[LinkedList$Entry.previous]o12057 > 0 && o12057[LinkedList$Entry.previous]o12057 > 0
f13250_0_addBefore_FieldAccess(EOS(STATIC_13250(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13265_0_addBefore_Load(EOS(STATIC_13265(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13265_0_addBefore_Load(EOS(STATIC_13265(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13284_0_addBefore_FieldAccess(EOS(STATIC_13284(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13284_0_addBefore_FieldAccess(EOS(STATIC_13284(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13308_0_addBefore_Load(EOS(STATIC_13308(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13308_0_addBefore_Load(EOS(STATIC_13308(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13326_0_addBefore_FieldAccess(EOS(STATIC_13326(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13326_0_addBefore_FieldAccess(EOS(STATIC_13326(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13345_0_addBefore_Load(EOS(STATIC_13345(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13345_0_addBefore_Load(EOS(STATIC_13345(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13362_0_addBefore_Duplicate(EOS(STATIC_13362(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13362_0_addBefore_Duplicate(EOS(STATIC_13362(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13380_0_addBefore_FieldAccess(EOS(STATIC_13380(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13380_0_addBefore_FieldAccess(EOS(STATIC_13380(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13394_0_addBefore_ConstantStackPush(EOS(STATIC_13394(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13394_0_addBefore_ConstantStackPush(EOS(STATIC_13394(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13408_0_addBefore_IntArithmetic(EOS(STATIC_13408(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13408_0_addBefore_IntArithmetic(EOS(STATIC_13408(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13421_0_addBefore_FieldAccess(EOS(STATIC_13421(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13421_0_addBefore_FieldAccess(EOS(STATIC_13421(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13433_0_addBefore_Load(EOS(STATIC_13433(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13433_0_addBefore_Load(EOS(STATIC_13433(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13448_0_addBefore_Duplicate(EOS(STATIC_13448(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13448_0_addBefore_Duplicate(EOS(STATIC_13448(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13465_0_addBefore_FieldAccess(EOS(STATIC_13465(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13465_0_addBefore_FieldAccess(EOS(STATIC_13465(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13478_0_addBefore_ConstantStackPush(EOS(STATIC_13478(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13478_0_addBefore_ConstantStackPush(EOS(STATIC_13478(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13489_0_addBefore_IntArithmetic(EOS(STATIC_13489(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13489_0_addBefore_IntArithmetic(EOS(STATIC_13489(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13500_0_addBefore_FieldAccess(EOS(STATIC_13500(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13500_0_addBefore_FieldAccess(EOS(STATIC_13500(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13513_0_addBefore_Load(EOS(STATIC_13513(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13513_0_addBefore_Load(EOS(STATIC_13513(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13526_0_addBefore_Return(EOS(STATIC_13526(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13526_0_addBefore_Return(EOS(STATIC_13526(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13539_0_addLast_StackPop(EOS(STATIC_13539(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13539_0_addLast_StackPop(EOS(STATIC_13539(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13552_0_addLast_Return(EOS(STATIC_13552(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13552_0_addLast_Return(EOS(STATIC_13552(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13567_0_createList_Inc(EOS(STATIC_13567(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13567_0_createList_Inc(EOS(STATIC_13567(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13582_0_createList_JMP(EOS(STATIC_13582(java.lang.Object(ARRAY(i3655)), i3687)), i3593 + -1, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13582_0_createList_JMP(EOS(STATIC_13582(java.lang.Object(ARRAY(i3655)), i3687)), i5042, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f13596_0_createList_Load(EOS(STATIC_13596(java.lang.Object(ARRAY(i3655)), i3687)), i5042, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) :|: TRUE
f13596_0_createList_Load(EOS(STATIC_13596(java.lang.Object(ARRAY(i3655)), i3687)), i5042, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057, o12056[LinkedList$Entry.previous]o12057) -> f12236_0_createList_Load(EOS(STATIC_12236(java.lang.Object(ARRAY(i3655)), i3687)), i5042, o12056[LinkedList$Entry.next]o12055, o14529[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o14529[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o14529[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o14529, o12056[LinkedList$Entry.previous]o14529, o12055[LinkedList$Entry.previous]o14529, o14529[LinkedList$Entry.previous]o14529) :|: TRUE
f12236_0_createList_Load(EOS(STATIC_12236(java.lang.Object(o12051sub), i3571)), i3573, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) -> f12243_0_createList_LE(EOS(STATIC_12243(java.lang.Object(o12051sub), i3571)), i3573, i3573, o12056[LinkedList$Entry.next]o12055, o12057[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.previous]o12055, o12056[LinkedList$Entry.next]o12056, o12056[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o12057[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o12056, o12057[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.previous]o12054, o12056[LinkedList$Entry.previous]o12056, o12056[LinkedList$Entry.next]o12057, o12056[LinkedList$Entry.previous]o12057, o12055[LinkedList$Entry.previous]o12057, o12057[LinkedList$Entry.previous]o12057) :|: TRUE
f13237_0_addBefore_FieldAccess(EOS(STATIC_13237(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13252_0_addBefore_FieldAccess(EOS(STATIC_13252(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: o17121[LinkedList$Entry.previous]o12055 > 0 && o12055[LinkedList$Entry.previous]o12055 > 0 && o12055[LinkedList$Entry.previous]o17121 > 0 && o17121[LinkedList$Entry.previous]o17121 > 0
f13252_0_addBefore_FieldAccess(EOS(STATIC_13252(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13266_0_addBefore_Load(EOS(STATIC_13266(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13266_0_addBefore_Load(EOS(STATIC_13266(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13285_0_addBefore_FieldAccess(EOS(STATIC_13285(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13285_0_addBefore_FieldAccess(EOS(STATIC_13285(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13309_0_addBefore_Load(EOS(STATIC_13309(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13309_0_addBefore_Load(EOS(STATIC_13309(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13327_0_addBefore_FieldAccess(EOS(STATIC_13327(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13327_0_addBefore_FieldAccess(EOS(STATIC_13327(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13346_0_addBefore_Load(EOS(STATIC_13346(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13346_0_addBefore_Load(EOS(STATIC_13346(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13363_0_addBefore_Duplicate(EOS(STATIC_13363(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13363_0_addBefore_Duplicate(EOS(STATIC_13363(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13381_0_addBefore_FieldAccess(EOS(STATIC_13381(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13381_0_addBefore_FieldAccess(EOS(STATIC_13381(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13395_0_addBefore_ConstantStackPush(EOS(STATIC_13395(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13395_0_addBefore_ConstantStackPush(EOS(STATIC_13395(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13409_0_addBefore_IntArithmetic(EOS(STATIC_13409(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13409_0_addBefore_IntArithmetic(EOS(STATIC_13409(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13422_0_addBefore_FieldAccess(EOS(STATIC_13422(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13422_0_addBefore_FieldAccess(EOS(STATIC_13422(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13434_0_addBefore_Load(EOS(STATIC_13434(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13434_0_addBefore_Load(EOS(STATIC_13434(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13449_0_addBefore_Duplicate(EOS(STATIC_13449(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13449_0_addBefore_Duplicate(EOS(STATIC_13449(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13466_0_addBefore_FieldAccess(EOS(STATIC_13466(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13466_0_addBefore_FieldAccess(EOS(STATIC_13466(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13479_0_addBefore_ConstantStackPush(EOS(STATIC_13479(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13479_0_addBefore_ConstantStackPush(EOS(STATIC_13479(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13490_0_addBefore_IntArithmetic(EOS(STATIC_13490(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13490_0_addBefore_IntArithmetic(EOS(STATIC_13490(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13501_0_addBefore_FieldAccess(EOS(STATIC_13501(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13501_0_addBefore_FieldAccess(EOS(STATIC_13501(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13514_0_addBefore_Load(EOS(STATIC_13514(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13514_0_addBefore_Load(EOS(STATIC_13514(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13527_0_addBefore_Return(EOS(STATIC_13527(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13527_0_addBefore_Return(EOS(STATIC_13527(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13540_0_addLast_StackPop(EOS(STATIC_13540(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13540_0_addLast_StackPop(EOS(STATIC_13540(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13553_0_addLast_Return(EOS(STATIC_13553(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13553_0_addLast_Return(EOS(STATIC_13553(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13568_0_createList_Inc(EOS(STATIC_13568(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13568_0_createList_Inc(EOS(STATIC_13568(java.lang.Object(ARRAY(i3655)), i3687)), i3593, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13583_0_createList_JMP(EOS(STATIC_13583(java.lang.Object(ARRAY(i3655)), i3687)), i3593 + -1, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13583_0_createList_JMP(EOS(STATIC_13583(java.lang.Object(ARRAY(i3655)), i3687)), i5043, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f13597_0_createList_Load(EOS(STATIC_13597(java.lang.Object(ARRAY(i3655)), i3687)), i5043, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) :|: TRUE
f13597_0_createList_Load(EOS(STATIC_13597(java.lang.Object(ARRAY(i3655)), i3687)), i5043, o17121[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o17121) -> f12236_0_createList_Load(EOS(STATIC_12236(java.lang.Object(ARRAY(i3655)), i3687)), i5043, o17121[LinkedList$Entry.next]o12055, o14529[LinkedList$Entry.previous]o12055, o17121[LinkedList$Entry.previous]o12055, o17121[LinkedList$Entry.next]o17121, o17121[LinkedList$Entry.next]o12054, o12055[LinkedList$Entry.previous]o12055, o12055[LinkedList$Entry.previous]o12054, o14529[LinkedList$Entry.previous]o12054, o12055[LinkedList$Entry.previous]o17121, o14529[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.previous]o12054, o17121[LinkedList$Entry.previous]o17121, o17121[LinkedList$Entry.next]o14529, o17121[LinkedList$Entry.previous]o14529, o12055[LinkedList$Entry.previous]o14529, o14529[LinkedList$Entry.previous]o14529) :|: o17121[LinkedList$Entry.next]o17121 = 4 && o14529[LinkedList$Entry.previous]o17121 = 1 && o17121[LinkedList$Entry.next]o14529 = 1
Combined rules. Obtained 2 IRulesP rules:
f12243_0_createList_LE(EOS(STATIC_12243(java.lang.Object(ARRAY(i3655:0)), i3571:0)), i3593:0, i3593:0, o12056[LinkedList$Entry.next]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.next]o12056:0, o12056[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.next]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0) -> f12243_0_createList_LE(EOS(STATIC_12243(java.lang.Object(ARRAY(i3655:0)), i3571:0 + 1)), i3593:0 - 1, i3593:0 - 1, o17121[LinkedList$Entry.next]o12055:0, o14529[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, 4, o17121[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o14529[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, 1, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, 1, o17121[LinkedList$Entry.previous]o14529:0, o12055[LinkedList$Entry.previous]o14529:0, o14529[LinkedList$Entry.previous]o14529:0) :|: i3593:0 > 0 && i3655:0 > -1 && i3655:0 > i3571:0 && i3571:0 > -1 && o12056[LinkedList$Entry.next]o12054:0 > 0 && o12056[LinkedList$Entry.next]o12056:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0 > 0 && o12055[LinkedList$Entry.previous]o12056:0 > 0
f12243_0_createList_LE(EOS(STATIC_12243(java.lang.Object(ARRAY(i3655:0)), i3571:0)), i3593:0, i3593:0, o12056[LinkedList$Entry.next]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.next]o12056:0, o12056[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.previous]o12054:0, o12056[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.next]o12057:0, o12056[LinkedList$Entry.previous]o12057:0, o12055[LinkedList$Entry.previous]o12057:0, o12057[LinkedList$Entry.previous]o12057:0) -> f12243_0_createList_LE(EOS(STATIC_12243(java.lang.Object(ARRAY(i3655:0)), i3571:0 + 1)), i3593:0 - 1, i3593:0 - 1, o12056[LinkedList$Entry.next]o12055:0, o14529[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.next]o12056:0, o12056[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o14529[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, o14529[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.previous]o12054:0, o12056[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.next]o14529:0, o12056[LinkedList$Entry.previous]o14529:0, o12055[LinkedList$Entry.previous]o14529:0, o14529[LinkedList$Entry.previous]o14529:0) :|: i3593:0 > 0 && i3655:0 > -1 && i3655:0 > i3571:0 && i3571:0 > -1 && o12056[LinkedList$Entry.next]o12054:0 > 0 && o12056[LinkedList$Entry.next]o12056:0 > 0 && o12056[LinkedList$Entry.previous]o12054:0 > 0 && o12056[LinkedList$Entry.previous]o12056:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0 > 0 && o12057[LinkedList$Entry.previous]o12057:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0 > 0 && o12056[LinkedList$Entry.next]o12057:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0 > 0 && o12056[LinkedList$Entry.previous]o12057:0 > 0 && o12055[LinkedList$Entry.previous]o12057:0 > 0
Filtered duplicate arguments:
   f12243_0_createList_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f12243_0_createList_LE(x1, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)
Filtered unneeded arguments:
   f12243_0_createList_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f12243_0_createList_LE(x1, x2, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)
Finished conversion. Obtained 2 rules.P rules:
f12243_0_createList_LE(i3593:0, o12057[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.next]o12056:0, o12056[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.next]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, i3655:0, i3571:0) -> f12243_0_createList_LE(i3593:0 - 1, o14529[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, 4, o17121[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o14529[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, 1, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, 1, o17121[LinkedList$Entry.previous]o14529:0, o12055[LinkedList$Entry.previous]o14529:0, o14529[LinkedList$Entry.previous]o14529:0, i3655:0, i3571:0 + 1) :|: i3655:0 > -1 && i3593:0 > 0 && i3655:0 > i3571:0 && i3571:0 > -1 && o12056[LinkedList$Entry.next]o12054:0 > 0 && o12056[LinkedList$Entry.next]o12056:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0 > 0 && o12055[LinkedList$Entry.previous]o12056:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0 > 0
f12243_0_createList_LE(i3593:0, o12057[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.next]o12056:0, o12056[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.previous]o12054:0, o12056[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.next]o12057:0, o12056[LinkedList$Entry.previous]o12057:0, o12055[LinkedList$Entry.previous]o12057:0, o12057[LinkedList$Entry.previous]o12057:0, i3655:0, i3571:0) -> f12243_0_createList_LE(i3593:0 - 1, o14529[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.next]o12056:0, o12056[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o14529[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, o14529[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.previous]o12054:0, o12056[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.next]o14529:0, o12056[LinkedList$Entry.previous]o14529:0, o12055[LinkedList$Entry.previous]o14529:0, o14529[LinkedList$Entry.previous]o14529:0, i3655:0, i3571:0 + 1) :|: i3655:0 > -1 && i3593:0 > 0 && i3655:0 > i3571:0 && i3571:0 > -1 && o12056[LinkedList$Entry.next]o12054:0 > 0 && o12056[LinkedList$Entry.next]o12056:0 > 0 && o12056[LinkedList$Entry.previous]o12054:0 > 0 && o12056[LinkedList$Entry.previous]o12056:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0 > 0 && o12057[LinkedList$Entry.previous]o12057:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0 > 0 && o12056[LinkedList$Entry.next]o12057:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0 > 0 && o12055[LinkedList$Entry.previous]o12057:0 > 0 && o12056[LinkedList$Entry.previous]o12057:0 > 0

----------------------------------------

(9)
Obligation:
Rules:
f12243_0_createList_LE(i3593:0, o12057[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.next]o12056:0, o12056[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.next]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, i3655:0, i3571:0) -> f12243_0_createList_LE(i3593:0 - 1, o14529[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, 4, o17121[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o14529[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, 1, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, 1, o17121[LinkedList$Entry.previous]o14529:0, o12055[LinkedList$Entry.previous]o14529:0, o14529[LinkedList$Entry.previous]o14529:0, i3655:0, i3571:0 + 1) :|: i3655:0 > -1 && i3593:0 > 0 && i3655:0 > i3571:0 && i3571:0 > -1 && o12056[LinkedList$Entry.next]o12054:0 > 0 && o12056[LinkedList$Entry.next]o12056:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0 > 0 && o12055[LinkedList$Entry.previous]o12056:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0 > 0
f12243_0_createList_LE(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17) -> f12243_0_createList_LE(x - 1, x18, x2, x3, x4, x5, x6, x19, x8, x20, x10, x11, x21, x22, x23, x24, x16, x17 + 1) :|: x16 > -1 && x > 0 && x16 > x17 && x17 > -1 && x4 > 0 && x3 > 0 && x10 > 0 && x11 > 0 && x6 > 0 && x5 > 0 && x15 > 0 && x7 > 0 && x9 > 0 && x12 > 0 && x1 > 0 && x14 > 0 && x13 > 0

----------------------------------------

(10) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(11)
Obligation:
Rules:
f12243_0_createList_LE(i3593:0, o12057[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.next]o12056:0, o12056[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.next]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, i3655:0, i3571:0) -> f12243_0_createList_LE(arith, o14529[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, 4, o17121[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o14529[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, 1, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, 1, o17121[LinkedList$Entry.previous]o14529:0, o12055[LinkedList$Entry.previous]o14529:0, o14529[LinkedList$Entry.previous]o14529:0, i3655:0, arith1) :|: i3655:0 > -1 && i3593:0 > 0 && i3655:0 > i3571:0 && i3571:0 > -1 && o12056[LinkedList$Entry.next]o12054:0 > 0 && o12056[LinkedList$Entry.next]o12056:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0 > 0 && o12055[LinkedList$Entry.previous]o12056:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0 > 0 && arith = i3593:0 - 1 && arith1 = i3571:0 + 1
f12243_0_createList_LE(x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f12243_0_createList_LE(x43, x44, x27, x28, x29, x30, x31, x45, x33, x46, x35, x36, x47, x48, x49, x50, x41, x51) :|: x41 > -1 && x25 > 0 && x41 > x42 && x42 > -1 && x29 > 0 && x28 > 0 && x35 > 0 && x36 > 0 && x31 > 0 && x30 > 0 && x40 > 0 && x32 > 0 && x34 > 0 && x37 > 0 && x26 > 0 && x39 > 0 && x38 > 0 && x43 = x25 - 1 && x51 = x42 + 1

----------------------------------------

(12) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12243_0_createList_LE(i3593:0, o12057[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.next]o12056:0, o12056[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.next]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, i3655:0, i3571:0) -> f12243_0_createList_LE(arith, o14529[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, 4, o17121[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o14529[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, 1, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, 1, o17121[LinkedList$Entry.previous]o14529:0, o12055[LinkedList$Entry.previous]o14529:0, o14529[LinkedList$Entry.previous]o14529:0, i3655:0, arith1) :|: i3655:0 > -1 && i3593:0 > 0 && i3655:0 > i3571:0 && i3571:0 > -1 && o12056[LinkedList$Entry.next]o12054:0 > 0 && o12056[LinkedList$Entry.next]o12056:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0 > 0 && o12055[LinkedList$Entry.previous]o12056:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0 > 0 && arith = i3593:0 - 1 && arith1 = i3571:0 + 1
(2) f12243_0_createList_LE(x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f12243_0_createList_LE(x43, x44, x27, x28, x29, x30, x31, x45, x33, x46, x35, x36, x47, x48, x49, x50, x41, x51) :|: x41 > -1 && x25 > 0 && x41 > x42 && x42 > -1 && x29 > 0 && x28 > 0 && x35 > 0 && x36 > 0 && x31 > 0 && x30 > 0 && x40 > 0 && x32 > 0 && x34 > 0 && x37 > 0 && x26 > 0 && x39 > 0 && x38 > 0 && x43 = x25 - 1 && x51 = x42 + 1

Arcs:
(1) -> (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f12243_0_createList_LE(i3593:0, o12057[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, o12056[LinkedList$Entry.next]o12056:0, o12056[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, o12056[LinkedList$Entry.next]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, o12055[LinkedList$Entry.previous]o12056:0, o12057[LinkedList$Entry.previous]o12056:0, i3655:0, i3571:0) -> f12243_0_createList_LE(arith, o14529[LinkedList$Entry.previous]o12055:0, o12057[LinkedList$Entry.previous]o12055:0, 4, o17121[LinkedList$Entry.next]o12054:0, o12055[LinkedList$Entry.previous]o12055:0, o12055[LinkedList$Entry.previous]o12054:0, o14529[LinkedList$Entry.previous]o12054:0, o12055[LinkedList$Entry.previous]o12056:0, 1, o12057[LinkedList$Entry.previous]o12054:0, o12057[LinkedList$Entry.previous]o12056:0, 1, o17121[LinkedList$Entry.previous]o14529:0, o12055[LinkedList$Entry.previous]o14529:0, o14529[LinkedList$Entry.previous]o14529:0, i3655:0, arith1) :|: i3655:0 > -1 && i3593:0 > 0 && i3655:0 > i3571:0 && i3571:0 > -1 && o12056[LinkedList$Entry.next]o12054:0 > 0 && o12056[LinkedList$Entry.next]o12056:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0 > 0 && o12055[LinkedList$Entry.previous]o12056:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0 > 0 && arith = i3593:0 - 1 && arith1 = i3571:0 + 1
(2) f12243_0_createList_LE(x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f12243_0_createList_LE(x43, x44, x27, x28, x29, x30, x31, x45, x33, x46, x35, x36, x47, x48, x49, x50, x41, x51) :|: x41 > -1 && x25 > 0 && x41 > x42 && x42 > -1 && x29 > 0 && x28 > 0 && x35 > 0 && x36 > 0 && x31 > 0 && x30 > 0 && x40 > 0 && x32 > 0 && x34 > 0 && x37 > 0 && x26 > 0 && x39 > 0 && x38 > 0 && x43 = x25 - 1 && x51 = x42 + 1

Arcs:
(1) -> (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f12243_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12243_0_createList_LE(x25:0 - 1, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, x42:0 + 1) :|: x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1
f12243_0_createList_LE(i3593:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12056[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, i3655:0:0, i3571:0:0) -> f12243_0_createList_LE(i3593:0:0 - 1, o14529[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, 4, o17121[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o14529[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, 1, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, 1, o17121[LinkedList$Entry.previous]o14529:0:0, o12055[LinkedList$Entry.previous]o14529:0:0, o14529[LinkedList$Entry.previous]o14529:0:0, i3655:0:0, i3571:0:0 + 1) :|: o12055[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0:0 > 0 && o12056[LinkedList$Entry.next]o12056:0:0 > 0 && o12056[LinkedList$Entry.next]o12054:0:0 > 0 && i3571:0:0 > -1 && i3655:0:0 > i3571:0:0 && i3593:0:0 > 0 && i3655:0:0 > -1

----------------------------------------

(16) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12243_0_createList_LE(INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(17)
Obligation:
Rules:
f12243_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12243_0_createList_LE(c, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, c1) :|: c1 = x42:0 + 1 && c = x25:0 - 1 && (x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1)
f12243_0_createList_LE(i3593:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12056[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, i3655:0:0, i3571:0:0) -> f12243_0_createList_LE(c2, o14529[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, c3, o17121[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o14529[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, c4, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, c5, o17121[LinkedList$Entry.previous]o14529:0:0, o12055[LinkedList$Entry.previous]o14529:0:0, o14529[LinkedList$Entry.previous]o14529:0:0, i3655:0:0, c6) :|: c6 = i3571:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i3593:0:0 - 1))) && (o12055[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0:0 > 0 && o12056[LinkedList$Entry.next]o12056:0:0 > 0 && o12056[LinkedList$Entry.next]o12054:0:0 > 0 && i3571:0:0 > -1 && i3655:0:0 > i3571:0:0 && i3593:0:0 > 0 && i3655:0:0 > -1)

----------------------------------------

(18) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12243_0_createList_LE(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17)] = 3*x + x3

The following rules are decreasing:
f12243_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12243_0_createList_LE(c, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, c1) :|: c1 = x42:0 + 1 && c = x25:0 - 1 && (x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1)
The following rules are bounded:
f12243_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12243_0_createList_LE(c, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, c1) :|: c1 = x42:0 + 1 && c = x25:0 - 1 && (x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1)
f12243_0_createList_LE(i3593:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12056[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, i3655:0:0, i3571:0:0) -> f12243_0_createList_LE(c2, o14529[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, c3, o17121[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o14529[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, c4, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, c5, o17121[LinkedList$Entry.previous]o14529:0:0, o12055[LinkedList$Entry.previous]o14529:0:0, o14529[LinkedList$Entry.previous]o14529:0:0, i3655:0:0, c6) :|: c6 = i3571:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i3593:0:0 - 1))) && (o12055[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0:0 > 0 && o12056[LinkedList$Entry.next]o12056:0:0 > 0 && o12056[LinkedList$Entry.next]o12054:0:0 > 0 && i3571:0:0 > -1 && i3655:0:0 > i3571:0:0 && i3593:0:0 > 0 && i3655:0:0 > -1)

----------------------------------------

(19)
Obligation:
Rules:
f12243_0_createList_LE(i3593:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12056[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, i3655:0:0, i3571:0:0) -> f12243_0_createList_LE(c2, o14529[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, c3, o17121[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o14529[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, c4, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, c5, o17121[LinkedList$Entry.previous]o14529:0:0, o12055[LinkedList$Entry.previous]o14529:0:0, o14529[LinkedList$Entry.previous]o14529:0:0, i3655:0:0, c6) :|: c6 = i3571:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i3593:0:0 - 1))) && (o12055[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0:0 > 0 && o12056[LinkedList$Entry.next]o12056:0:0 > 0 && o12056[LinkedList$Entry.next]o12054:0:0 > 0 && i3571:0:0 > -1 && i3655:0:0 > i3571:0:0 && i3593:0:0 > 0 && i3655:0:0 > -1)

----------------------------------------

(20) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f12243_0_createList_LE ] = f12243_0_createList_LE_1

The following rules are decreasing:
f12243_0_createList_LE(i3593:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12056[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, i3655:0:0, i3571:0:0) -> f12243_0_createList_LE(c2, o14529[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, c3, o17121[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o14529[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, c4, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, c5, o17121[LinkedList$Entry.previous]o14529:0:0, o12055[LinkedList$Entry.previous]o14529:0:0, o14529[LinkedList$Entry.previous]o14529:0:0, i3655:0:0, c6) :|: c6 = i3571:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i3593:0:0 - 1))) && (o12055[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0:0 > 0 && o12056[LinkedList$Entry.next]o12056:0:0 > 0 && o12056[LinkedList$Entry.next]o12054:0:0 > 0 && i3571:0:0 > -1 && i3655:0:0 > i3571:0:0 && i3593:0:0 > 0 && i3655:0:0 > -1)

The following rules are bounded:
f12243_0_createList_LE(i3593:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12056[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12056[LinkedList$Entry.next]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, i3655:0:0, i3571:0:0) -> f12243_0_createList_LE(c2, o14529[LinkedList$Entry.previous]o12055:0:0, o12057[LinkedList$Entry.previous]o12055:0:0, c3, o17121[LinkedList$Entry.next]o12054:0:0, o12055[LinkedList$Entry.previous]o12055:0:0, o12055[LinkedList$Entry.previous]o12054:0:0, o14529[LinkedList$Entry.previous]o12054:0:0, o12055[LinkedList$Entry.previous]o12056:0:0, c4, o12057[LinkedList$Entry.previous]o12054:0:0, o12057[LinkedList$Entry.previous]o12056:0:0, c5, o17121[LinkedList$Entry.previous]o14529:0:0, o12055[LinkedList$Entry.previous]o14529:0:0, o14529[LinkedList$Entry.previous]o14529:0:0, i3655:0:0, c6) :|: c6 = i3571:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i3593:0:0 - 1))) && (o12055[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12055:0:0 > 0 && o12055[LinkedList$Entry.previous]o12054:0:0 > 0 && o12057[LinkedList$Entry.previous]o12056:0:0 > 0 && o12057[LinkedList$Entry.previous]o12054:0:0 > 0 && o12056[LinkedList$Entry.next]o12056:0:0 > 0 && o12056[LinkedList$Entry.next]o12054:0:0 > 0 && i3571:0:0 > -1 && i3655:0:0 > i3571:0:0 && i3593:0:0 > 0 && i3655:0:0 > -1)


----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveLastOccurrence.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, previous]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(23) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 65 IRulesP rules:
f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18548sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703, java.lang.Object(o18546sub1312293703))), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546, o18548[LinkedList$Entry.previous]o18544) -> f13472_0_removeLastOccurrence_Load(EOS(STATIC_13472), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546, o18548[LinkedList$Entry.previous]o18544) :|: TRUE
f13472_0_removeLastOccurrence_Load(EOS(STATIC_13472), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546, o18548[LinkedList$Entry.previous]o18544) -> f13484_0_removeLastOccurrence_Load(EOS(STATIC_13484), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18547sub0), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546, o18548[LinkedList$Entry.previous]o18544) :|: TRUE
f13484_0_removeLastOccurrence_Load(EOS(STATIC_13484), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18547sub0), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546, o18548[LinkedList$Entry.previous]o18544) -> f13495_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13495), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546, o18548[LinkedList$Entry.previous]o18544) :|: TRUE
f13495_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13495), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546, o18548[LinkedList$Entry.previous]o18544) -> f13507_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13507), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546) :|: o18546[LinkedList$Entry.previous]o18548 > 0 && o18548[LinkedList$Entry.previous]o18546 > 0
f13495_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13495), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o19506sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o19506sub0), java.lang.Object(o18547sub0), java.lang.Object(o19506sub0), o19506[LinkedList$Entry.previous]o19506, o19506[LinkedList$Entry.previous]o18544, o19506[LinkedList$Entry.previous]o19506, o19506[LinkedList$Entry.previous]o18544) -> f13508_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13508), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o19506sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o19506sub0), java.lang.Object(o18547sub0), java.lang.Object(o19506sub0), o19506[LinkedList$Entry.previous]o18544, o19506[LinkedList$Entry.previous]o19506) :|: TRUE
f13507_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13507), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), o18546[LinkedList$Entry.previous]o19560, o18546[LinkedList$Entry.previous]o18544, o19560[LinkedList$Entry.previous]o18544, o19560[LinkedList$Entry.previous]o18546) -> f13520_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13520), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: o19563[LinkedList$Entry.previous]o18544 < o19560[LinkedList$Entry.previous]o18544 && o19560[LinkedList$Entry.previous]o18544 >= 0 && o19563[LinkedList$Entry.previous]o18546 < o19560[LinkedList$Entry.previous]o18546 && o19560[LinkedList$Entry.previous]o18546 >= 0
f13520_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13520), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f13533_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13533), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), java.lang.Object(o18547sub0), o195610, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: TRUE
f13533_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13533), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), java.lang.Object(o18547sub0), o195610, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f13546_0_equals_Load(EOS(STATIC_13546), java.lang.Object(o18547sub0), o195610, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703, java.lang.Object(o18546sub1312293703))), java.lang.Object(o18546sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), java.lang.Object(o19563sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), o195610, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: i4674 > 1 && i3322 >= 1
f13533_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13533), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), java.lang.Object(o18547sub0), o195610, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f13546_1_equals_Load(EOS(STATIC_13546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), java.lang.Object(o18547sub0), o195610, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: i4674 > 1 && i3322 >= 1
f13546_0_equals_Load(EOS(STATIC_13546), java.lang.Object(o18547sub0), o195610, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703, java.lang.Object(o18546sub1312293703))), java.lang.Object(o18546sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), java.lang.Object(o19563sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), o195610, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f14091_0_equals_Load(EOS(STATIC_14091), java.lang.Object(o18547sub0), o195610, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703, java.lang.Object(o18546sub1312293703))), java.lang.Object(o18546sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022, java.lang.Object(o19563sub1313219022))), java.lang.Object(o19563sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), o195610, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: TRUE
f13621_0_equals_Return(EOS(STATIC_13621), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o20312sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19563sub1313219022))), matching1, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f13623_0_equals_Return(EOS(STATIC_13623), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o20312sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19563sub1313219022))), 0, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: TRUE && matching1 = 0
f13623_0_equals_Return(EOS(STATIC_13623), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205561333535678, java.lang.Object(o20558sub1333535678))), matching1, o20553[LinkedList$Entry.previous]o20551, o20553[LinkedList$Entry.previous]o20555, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553) -> f13641_0_removeLastOccurrence_EQ(EOS(STATIC_13641), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205561333535678, java.lang.Object(o20558sub1333535678))), 0, o20553[LinkedList$Entry.previous]o20551, o20553[LinkedList$Entry.previous]o20555, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553) :|: TRUE && matching1 = 0
f13641_0_removeLastOccurrence_EQ(EOS(STATIC_13641), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205561333535678, java.lang.Object(o20558sub1333535678))), matching1, o20553[LinkedList$Entry.previous]o20551, o20553[LinkedList$Entry.previous]o20555, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553) -> f13653_0_removeLastOccurrence_Load(EOS(STATIC_13653), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205561333535678, java.lang.Object(o20558sub1333535678))), o20553[LinkedList$Entry.previous]o20551, o20553[LinkedList$Entry.previous]o20555, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553) :|: TRUE && matching1 = 0
f13653_0_removeLastOccurrence_Load(EOS(STATIC_13653), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205561333535678, java.lang.Object(o20558sub1333535678))), o20553[LinkedList$Entry.previous]o20551, o20553[LinkedList$Entry.previous]o20555, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553) -> f13668_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13668), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205561333535678, java.lang.Object(o20558sub1333535678))), o20553[LinkedList$Entry.previous]o20551, o20553[LinkedList$Entry.previous]o20555, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553) :|: TRUE
f13668_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13668), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205561333535678, java.lang.Object(o20558sub1333535678))), o20553[LinkedList$Entry.previous]o20551, o20553[LinkedList$Entry.previous]o20555, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553) -> f13683_0_removeLastOccurrence_Store(EOS(STATIC_13683), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(o20558sub0), o20553[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553, o20553[LinkedList$Entry.previous]o20558) :|: o20553[LinkedList$Entry.previous]o20558 > o20553[LinkedList$Entry.previous]o20555 && o20553[LinkedList$Entry.previous]o20555 >= 0
f13683_0_removeLastOccurrence_Store(EOS(STATIC_13683), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(o20558sub0), o20553[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553, o20553[LinkedList$Entry.previous]o20558) -> f13698_0_removeLastOccurrence_JMP(EOS(STATIC_13698), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(o20558sub0), o20553[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553, o20553[LinkedList$Entry.previous]o20558) :|: TRUE
f13698_0_removeLastOccurrence_JMP(EOS(STATIC_13698), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(o20558sub0), o20553[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553, o20553[LinkedList$Entry.previous]o20558) -> f13715_0_removeLastOccurrence_Load(EOS(STATIC_13715), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(o20558sub0), o20553[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553, o20553[LinkedList$Entry.previous]o20558) :|: TRUE
f13715_0_removeLastOccurrence_Load(EOS(STATIC_13715), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(o20558sub0), o20553[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553, o20553[LinkedList$Entry.previous]o20558) -> f13403_0_removeLastOccurrence_Load(EOS(STATIC_13403), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20552-1627896219, java.lang.Object(o20553sub-1627896219)))))))), java.lang.Object(o20554sub0), java.lang.Object(o20558sub0), o20553[LinkedList$Entry.previous]o20558, o20553[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20551, o20558[LinkedList$Entry.previous]o20553) :|: TRUE
f13403_0_removeLastOccurrence_Load(EOS(STATIC_13403), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546) -> f13416_0_removeLastOccurrence_Load(EOS(STATIC_13416), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18548sub0), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546) :|: TRUE
f13416_0_removeLastOccurrence_Load(EOS(STATIC_13416), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18548sub0), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546) -> f13428_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13428), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18548sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546) :|: TRUE
f13428_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13428), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18548sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546) -> f13443_0_removeLastOccurrence_EQ(EOS(STATIC_13443), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18548sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703, java.lang.Object(o18546sub1312293703))), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546) :|: TRUE
f13443_0_removeLastOccurrence_EQ(EOS(STATIC_13443), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18548sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703, java.lang.Object(o18546sub1312293703))), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546) -> f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o18547sub0), java.lang.Object(o18548sub0), java.lang.Object(o18548sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703, java.lang.Object(o18546sub1312293703))), o18546[LinkedList$Entry.previous]o18548, o18546[LinkedList$Entry.previous]o18544, o18548[LinkedList$Entry.previous]o18546, o18548[LinkedList$Entry.previous]o18544) :|: o18548[LinkedList$Entry.previous]o18544 > 0
f13622_0_equals_Return(EOS(STATIC_13622), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o20325sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20327sub1313219022), java.lang.Object(o19563sub1313219022))), matching1, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f13623_0_equals_Return(EOS(STATIC_13623), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o20325sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20327sub1313219022), java.lang.Object(o19563sub1313219022))), 0, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: TRUE && matching1 = 0
f13624_0_equals_Return(EOS(STATIC_13624), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19563sub1313219022))), matching1, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f13626_0_equals_Return(EOS(STATIC_13626), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19563sub1313219022))), 0, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: TRUE && matching1 = 0
f13626_0_equals_Return(EOS(STATIC_13626), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub1333539398))), i5151, o20589[LinkedList$Entry.previous]o20587, o20589[LinkedList$Entry.previous]o20591, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589) -> f13642_0_removeLastOccurrence_EQ(EOS(STATIC_13642), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub1333539398))), i5151, o20589[LinkedList$Entry.previous]o20587, o20589[LinkedList$Entry.previous]o20591, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589) :|: TRUE
f13642_0_removeLastOccurrence_EQ(EOS(STATIC_13642), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub1333539398))), matching1, o20589[LinkedList$Entry.previous]o20587, o20589[LinkedList$Entry.previous]o20591, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589) -> f13655_0_removeLastOccurrence_EQ(EOS(STATIC_13655), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub1333539398))), 0, o20589[LinkedList$Entry.previous]o20587, o20589[LinkedList$Entry.previous]o20591, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589) :|: TRUE && matching1 = 0
f13655_0_removeLastOccurrence_EQ(EOS(STATIC_13655), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub1333539398))), matching1, o20589[LinkedList$Entry.previous]o20587, o20589[LinkedList$Entry.previous]o20591, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589) -> f13670_0_removeLastOccurrence_Load(EOS(STATIC_13670), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub1333539398))), o20589[LinkedList$Entry.previous]o20587, o20589[LinkedList$Entry.previous]o20591, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589) :|: TRUE && matching1 = 0
f13670_0_removeLastOccurrence_Load(EOS(STATIC_13670), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub1333539398))), o20589[LinkedList$Entry.previous]o20587, o20589[LinkedList$Entry.previous]o20591, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589) -> f13685_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13685), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub1333539398))), o20589[LinkedList$Entry.previous]o20587, o20589[LinkedList$Entry.previous]o20591, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589) :|: TRUE
f13685_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13685), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub1333539398))), o20589[LinkedList$Entry.previous]o20587, o20589[LinkedList$Entry.previous]o20591, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589) -> f13700_0_removeLastOccurrence_Store(EOS(STATIC_13700), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub0), o20589[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589, o20589[LinkedList$Entry.previous]o20594) :|: o20589[LinkedList$Entry.previous]o20594 > o20589[LinkedList$Entry.previous]o20591 && o20589[LinkedList$Entry.previous]o20591 >= 0
f13700_0_removeLastOccurrence_Store(EOS(STATIC_13700), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub0), o20589[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589, o20589[LinkedList$Entry.previous]o20594) -> f13717_0_removeLastOccurrence_JMP(EOS(STATIC_13717), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub0), o20589[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589, o20589[LinkedList$Entry.previous]o20594) :|: TRUE
f13717_0_removeLastOccurrence_JMP(EOS(STATIC_13717), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub0), o20589[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589, o20589[LinkedList$Entry.previous]o20594) -> f13728_0_removeLastOccurrence_Load(EOS(STATIC_13728), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub0), o20589[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589, o20589[LinkedList$Entry.previous]o20594) :|: TRUE
f13728_0_removeLastOccurrence_Load(EOS(STATIC_13728), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub0), o20589[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589, o20589[LinkedList$Entry.previous]o20594) -> f13403_0_removeLastOccurrence_Load(EOS(STATIC_13403), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20588-1627890081, java.lang.Object(o20589sub-1627890081)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub0), o20589[LinkedList$Entry.previous]o20594, o20589[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20587, o20594[LinkedList$Entry.previous]o20589) :|: TRUE
f13625_0_equals_Return(EOS(STATIC_13625), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19563sub1313219022))), matching1, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f13626_0_equals_Return(EOS(STATIC_13626), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19563sub1313219022))), 1, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: TRUE && matching1 = 1
f13508_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13508), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), o19564[LinkedList$Entry.previous]o18544, o19564[LinkedList$Entry.previous]o19564) -> f13521_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13521), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: o19567[LinkedList$Entry.previous]o18544 < o19564[LinkedList$Entry.previous]o18544 && o19564[LinkedList$Entry.previous]o18544 >= 0 && o19567[LinkedList$Entry.previous]o19564 < o19564[LinkedList$Entry.previous]o19564 && o19564[LinkedList$Entry.previous]o19564 >= 0
f13521_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13521), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f13534_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13534), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), java.lang.Object(o18547sub0), o195650, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: TRUE
f13534_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13534), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), java.lang.Object(o18547sub0), o195650, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f13547_0_equals_Load(EOS(STATIC_13547), java.lang.Object(o18547sub0), o195650, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-1669454447, java.lang.Object(o19567sub-1669454447))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), java.lang.Object(o19567sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o18547sub0), o195650, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: i4674 > 1 && i3322 >= 1
f13534_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13534), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), java.lang.Object(o18547sub0), o195650, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f13547_1_equals_Load(EOS(STATIC_13547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o18547sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), java.lang.Object(o18547sub0), o195650, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: i4674 > 1 && i3322 >= 1
f13547_0_equals_Load(EOS(STATIC_13547), java.lang.Object(o18547sub0), o195650, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-1669454447, java.lang.Object(o19567sub-1669454447))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), java.lang.Object(o19567sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o18547sub0), o195650, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f14171_0_equals_Load(EOS(STATIC_14171), java.lang.Object(o18547sub0), o195650, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-1669454447, java.lang.Object(o19567sub-1669454447))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146, java.lang.Object(o19567sub1313219146))), java.lang.Object(o19567sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o18547sub0), o195650, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: TRUE
f13628_0_equals_Return(EOS(STATIC_13628), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o20393sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub1313219146))), matching1, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f13630_0_equals_Return(EOS(STATIC_13630), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o20393sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub1313219146))), 0, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: TRUE && matching1 = 0
f13630_0_equals_Return(EOS(STATIC_13630), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o206241333562524, java.lang.Object(o20626sub1333562524))), matching1, o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) -> f13643_0_removeLastOccurrence_EQ(EOS(STATIC_13643), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o206241333562524, java.lang.Object(o20626sub1333562524))), 0, o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) :|: TRUE && matching1 = 0
f13643_0_removeLastOccurrence_EQ(EOS(STATIC_13643), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o206241333562524, java.lang.Object(o20626sub1333562524))), matching1, o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) -> f13656_0_removeLastOccurrence_Load(EOS(STATIC_13656), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o206241333562524, java.lang.Object(o20626sub1333562524))), o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) :|: TRUE && matching1 = 0
f13656_0_removeLastOccurrence_Load(EOS(STATIC_13656), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o206241333562524, java.lang.Object(o20626sub1333562524))), o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) -> f13671_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13671), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o206241333562524, java.lang.Object(o20626sub1333562524))), o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) :|: TRUE
f13671_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13671), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o206241333562524, java.lang.Object(o20626sub1333562524))), o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) -> f13686_0_removeLastOccurrence_Store(EOS(STATIC_13686), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(o20626sub0), o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) :|: TRUE
f13686_0_removeLastOccurrence_Store(EOS(STATIC_13686), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(o20626sub0), o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) -> f13701_0_removeLastOccurrence_JMP(EOS(STATIC_13701), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(o20626sub0), o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) :|: TRUE
f13701_0_removeLastOccurrence_JMP(EOS(STATIC_13701), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(o20626sub0), o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) -> f13718_0_removeLastOccurrence_Load(EOS(STATIC_13718), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(o20626sub0), o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) :|: TRUE
f13718_0_removeLastOccurrence_Load(EOS(STATIC_13718), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(o20626sub0), o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) -> f13403_0_removeLastOccurrence_Load(EOS(STATIC_13403), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20622-1627842403, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20624-294279879, java.lang.Object(o20626sub-294279879)))))))))), java.lang.Object(o20627sub0), java.lang.Object(o20626sub0), o20623[LinkedList$Entry.previous]o20626, o20623[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20621, o20626[LinkedList$Entry.previous]o20623) :|: o20623[LinkedList$Entry.previous]o20626 = 1
f13629_0_equals_Return(EOS(STATIC_13629), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub-357160775), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o20405sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub1313219146), java.lang.Object(o19567sub1313219146))), matching1, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f13630_0_equals_Return(EOS(STATIC_13630), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub-357160775), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o20405sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub1313219146), java.lang.Object(o19567sub1313219146))), 0, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: TRUE && matching1 = 0
f13631_0_equals_Return(EOS(STATIC_13631), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub1313219146))), matching1, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f13633_0_equals_Return(EOS(STATIC_13633), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub1313219146))), 0, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: TRUE && matching1 = 0
f13633_0_equals_Return(EOS(STATIC_13633), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub1333565376))), i5171, o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) -> f13644_0_removeLastOccurrence_EQ(EOS(STATIC_13644), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub1333565376))), i5171, o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) :|: TRUE
f13644_0_removeLastOccurrence_EQ(EOS(STATIC_13644), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub1333565376))), matching1, o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) -> f13658_0_removeLastOccurrence_EQ(EOS(STATIC_13658), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub1333565376))), 0, o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) :|: TRUE && matching1 = 0
f13658_0_removeLastOccurrence_EQ(EOS(STATIC_13658), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub1333565376))), matching1, o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) -> f13673_0_removeLastOccurrence_Load(EOS(STATIC_13673), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub1333565376))), o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) :|: TRUE && matching1 = 0
f13673_0_removeLastOccurrence_Load(EOS(STATIC_13673), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub1333565376))), o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) -> f13688_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13688), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub1333565376))), o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) :|: TRUE
f13688_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13688), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub1333565376))), o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) -> f13703_0_removeLastOccurrence_Store(EOS(STATIC_13703), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub0), o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) :|: TRUE
f13703_0_removeLastOccurrence_Store(EOS(STATIC_13703), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub0), o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) -> f13720_0_removeLastOccurrence_JMP(EOS(STATIC_13720), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub0), o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) :|: TRUE
f13720_0_removeLastOccurrence_JMP(EOS(STATIC_13720), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub0), o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) -> f13729_0_removeLastOccurrence_Load(EOS(STATIC_13729), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub0), o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) :|: TRUE
f13729_0_removeLastOccurrence_Load(EOS(STATIC_13729), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub0), o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) -> f13403_0_removeLastOccurrence_Load(EOS(STATIC_13403), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20651-1627837350, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub-294271974)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub0), o20652[LinkedList$Entry.previous]o20655, o20652[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20650, o20655[LinkedList$Entry.previous]o20652) :|: o20652[LinkedList$Entry.previous]o20655 = 1
f13632_0_equals_Return(EOS(STATIC_13632), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub1313219146))), matching1, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f13633_0_equals_Return(EOS(STATIC_13633), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub1313219146))), 1, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: TRUE && matching1 = 1
f13546_1_equals_Load(EOS(STATIC_13546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o20312sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19563sub1313219022))), java.lang.Object(o20312sub0), NULL, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f13621_0_equals_Return(EOS(STATIC_13621), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o20312sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19563sub1313219022))), 0, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: TRUE
f13546_1_equals_Load(EOS(STATIC_13546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o20325sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20327sub1313219022), java.lang.Object(o19563sub1313219022))), java.lang.Object(o20325sub0), java.lang.Object(o20327sub0), o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f13622_0_equals_Return(EOS(STATIC_13622), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(o20325sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20327sub1313219022), java.lang.Object(o19563sub1313219022))), 0, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: TRUE
f13546_1_equals_Load(EOS(STATIC_13546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19563sub1313219022))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f13624_0_equals_Return(EOS(STATIC_13624), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19563sub1313219022))), 0, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: TRUE
f13546_1_equals_Load(EOS(STATIC_13546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19563sub1313219022))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) -> f13625_0_equals_Return(EOS(STATIC_13625), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(o18546sub-1670379921)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19563sub1313219022))), 1, o18546[LinkedList$Entry.previous]o18544, o18546[LinkedList$Entry.previous]o19560, o19563[LinkedList$Entry.previous]o18544, o19563[LinkedList$Entry.previous]o18546) :|: TRUE
f13547_1_equals_Load(EOS(STATIC_13547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o20393sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub1313219146))), java.lang.Object(o20393sub0), NULL, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f13628_0_equals_Return(EOS(STATIC_13628), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o20393sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub1313219146))), 0, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: TRUE
f13547_1_equals_Load(EOS(STATIC_13547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub-357160775), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o20405sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub1313219146), java.lang.Object(o19567sub1313219146))), java.lang.Object(o20405sub0), java.lang.Object(o20407sub0), o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f13629_0_equals_Return(EOS(STATIC_13629), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub-357160775), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(o20405sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub1313219146), java.lang.Object(o19567sub1313219146))), 0, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: TRUE
f13547_1_equals_Load(EOS(STATIC_13547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub1313219146))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f13631_0_equals_Return(EOS(STATIC_13631), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub1313219146))), 0, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: TRUE
f13547_1_equals_Load(EOS(STATIC_13547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub1313219146))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) -> f13632_0_equals_Return(EOS(STATIC_13632), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub-357160775)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub1313219146))), 1, o19567[LinkedList$Entry.previous]o18544, o19567[LinkedList$Entry.previous]o19564) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19563sub1313219022:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19563sub1313219022:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:0, java.lang.Object(o18546sub1312293703:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18548[LinkedList$Entry.previous]o18546:0, o18548[LinkedList$Entry.previous]o18544:0) -> f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20558sub0:0), java.lang.Object(o20558sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:1, java.lang.Object(o18546sub1312293703:1))), o20553[LinkedList$Entry.previous]o20558:0, o18546[LinkedList$Entry.previous]o18544:0, o19563[LinkedList$Entry.previous]o18546:0, o19563[LinkedList$Entry.previous]o18544:0) :|: o18548[LinkedList$Entry.previous]o18546:0 > 0 && o18546[LinkedList$Entry.previous]o18548:0 > 0 && o20553[LinkedList$Entry.previous]o20558:0 > o18546[LinkedList$Entry.previous]o18548:0 && o18548[LinkedList$Entry.previous]o18544:0 > -1 && o19563[LinkedList$Entry.previous]o18544:0 < o18548[LinkedList$Entry.previous]o18544:0 && o19563[LinkedList$Entry.previous]o18546:0 < o18548[LinkedList$Entry.previous]o18546:0 && i3322:0 > 0 && o19563[LinkedList$Entry.previous]o18544:0 > 0 && i4674:0 > 1
f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub1313219146:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub1313219146:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:0, java.lang.Object(o18546sub1312293703:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0) -> f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20655sub0:0), java.lang.Object(o20655sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:1, java.lang.Object(o18546sub1312293703:1))), 1, o20652[LinkedList$Entry.previous]o20650:0, o19567[LinkedList$Entry.previous]o19564:0, o19567[LinkedList$Entry.previous]o18544:0) :|: o18546[LinkedList$Entry.previous]o18544:0 > -1 && o19567[LinkedList$Entry.previous]o18544:0 < o18546[LinkedList$Entry.previous]o18544:0 && o19567[LinkedList$Entry.previous]o19564:0 < o18546[LinkedList$Entry.previous]o18548:0 && o18546[LinkedList$Entry.previous]o18548:0 > -1 && i3322:0 > 0 && o19567[LinkedList$Entry.previous]o18544:0 > 0 && i4674:0 > 1
f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20327sub1313219022:0), java.lang.Object(o19563sub1313219022:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20327sub1313219022:0), java.lang.Object(o19563sub1313219022:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:0, java.lang.Object(o18546sub1312293703:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18548[LinkedList$Entry.previous]o18546:0, o18548[LinkedList$Entry.previous]o18544:0) -> f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20558sub0:0), java.lang.Object(o20558sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:1, java.lang.Object(o18546sub1312293703:1))), o20553[LinkedList$Entry.previous]o20558:0, o18546[LinkedList$Entry.previous]o18544:0, o19563[LinkedList$Entry.previous]o18546:0, o19563[LinkedList$Entry.previous]o18544:0) :|: o18548[LinkedList$Entry.previous]o18546:0 > 0 && o18546[LinkedList$Entry.previous]o18548:0 > 0 && o20553[LinkedList$Entry.previous]o20558:0 > o18546[LinkedList$Entry.previous]o18548:0 && o18548[LinkedList$Entry.previous]o18544:0 > -1 && o19563[LinkedList$Entry.previous]o18544:0 < o18548[LinkedList$Entry.previous]o18544:0 && o19563[LinkedList$Entry.previous]o18546:0 < o18548[LinkedList$Entry.previous]o18546:0 && i3322:0 > 0 && o19563[LinkedList$Entry.previous]o18544:0 > 0 && i4674:0 > 1
f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub1313219146:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub1313219146:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:0, java.lang.Object(o18546sub1312293703:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0) -> f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20626sub0:0), java.lang.Object(o20626sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:1, java.lang.Object(o18546sub1312293703:1))), 1, o20623[LinkedList$Entry.previous]o20621:0, o19567[LinkedList$Entry.previous]o19564:0, o19567[LinkedList$Entry.previous]o18544:0) :|: o18546[LinkedList$Entry.previous]o18544:0 > -1 && o19567[LinkedList$Entry.previous]o18544:0 < o18546[LinkedList$Entry.previous]o18544:0 && o19567[LinkedList$Entry.previous]o19564:0 < o18546[LinkedList$Entry.previous]o18548:0 && o18546[LinkedList$Entry.previous]o18548:0 > -1 && i3322:0 > 0 && o19567[LinkedList$Entry.previous]o18544:0 > 0 && i4674:0 > 1
f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19563sub1313219022:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19563sub1313219022:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:0, java.lang.Object(o18546sub1312293703:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18548[LinkedList$Entry.previous]o18546:0, o18548[LinkedList$Entry.previous]o18544:0) -> f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20594sub0:0), java.lang.Object(o20594sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:1, java.lang.Object(o18546sub1312293703:1))), o20589[LinkedList$Entry.previous]o20594:0, o18546[LinkedList$Entry.previous]o18544:0, o19563[LinkedList$Entry.previous]o18546:0, o19563[LinkedList$Entry.previous]o18544:0) :|: o18548[LinkedList$Entry.previous]o18546:0 > 0 && o18546[LinkedList$Entry.previous]o18548:0 > 0 && o18548[LinkedList$Entry.previous]o18544:0 > -1 && o19563[LinkedList$Entry.previous]o18544:0 < o18548[LinkedList$Entry.previous]o18544:0 && o19563[LinkedList$Entry.previous]o18546:0 < o18548[LinkedList$Entry.previous]o18546:0 && o20589[LinkedList$Entry.previous]o20594:0 > o18546[LinkedList$Entry.previous]o18548:0 && i3322:0 > 0 && o19563[LinkedList$Entry.previous]o18544:0 > 0 && i4674:0 > 1
f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub-357160775:0), java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub1313219146:0), java.lang.Object(o19567sub1313219146:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub1313219146:0), java.lang.Object(o19567sub1313219146:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:0, java.lang.Object(o18546sub1312293703:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0) -> f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20407sub-357160775:0), java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20626sub0:0), java.lang.Object(o20626sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:1, java.lang.Object(o18546sub1312293703:1))), 1, o20623[LinkedList$Entry.previous]o20621:0, o19567[LinkedList$Entry.previous]o19564:0, o19567[LinkedList$Entry.previous]o18544:0) :|: o18546[LinkedList$Entry.previous]o18544:0 > -1 && o19567[LinkedList$Entry.previous]o18544:0 < o18546[LinkedList$Entry.previous]o18544:0 && o19567[LinkedList$Entry.previous]o19564:0 < o18546[LinkedList$Entry.previous]o18548:0 && o18546[LinkedList$Entry.previous]o18548:0 > -1 && i3322:0 > 0 && o19567[LinkedList$Entry.previous]o18544:0 > 0 && i4674:0 > 1
Removed following non-SCC rules:
f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022:0, java.lang.Object(o19563sub1313219022:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022:0, java.lang.Object(o19563sub1313219022:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:0, java.lang.Object(o18546sub1312293703:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18548[LinkedList$Entry.previous]o18546:0, o18548[LinkedList$Entry.previous]o18544:0) -> f14091_0_equals_Load(EOS(STATIC_14091), java.lang.Object(o18547sub0:0), o195610:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:1, java.lang.Object(o18546sub1312293703:1))), java.lang.Object(o18546sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195611313219022:0, java.lang.Object(o19563sub1313219022:0))), java.lang.Object(o19563sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), o195610:0, o18546[LinkedList$Entry.previous]o18544:0, o18546[LinkedList$Entry.previous]o18548:0, o19563[LinkedList$Entry.previous]o18544:0, o19563[LinkedList$Entry.previous]o18546:0) :|: o18548[LinkedList$Entry.previous]o18546:0 > 0 && o18548[LinkedList$Entry.previous]o18544:0 > -1 && o19563[LinkedList$Entry.previous]o18544:0 < o18548[LinkedList$Entry.previous]o18544:0 && o19563[LinkedList$Entry.previous]o18546:0 < o18548[LinkedList$Entry.previous]o18546:0 && o18546[LinkedList$Entry.previous]o18548:0 > 0 && i4674:0 > 1 && i3322:0 > 0
f13459_0_removeLastOccurrence_EQ(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775:0, java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146:0, java.lang.Object(o19567sub1313219146:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146:0, java.lang.Object(o19567sub1313219146:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:0, java.lang.Object(o18546sub1312293703:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0) -> f14171_0_equals_Load(EOS(STATIC_14171), java.lang.Object(o18547sub0:0), o195650:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o185451312293703:1, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-1669454447:0, java.lang.Object(o19567sub-1669454447:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195651313219146:0, java.lang.Object(o19567sub1313219146:0))), java.lang.Object(o19567sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19565-357160775:0, java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(o18547sub0:0), o195650:0, o19567[LinkedList$Entry.previous]o18544:0, o19567[LinkedList$Entry.previous]o19564:0) :|: o18546[LinkedList$Entry.previous]o18544:0 > -1 && o19567[LinkedList$Entry.previous]o18544:0 < o18546[LinkedList$Entry.previous]o18544:0 && o19567[LinkedList$Entry.previous]o19564:0 < o18546[LinkedList$Entry.previous]o18548:0 && o18546[LinkedList$Entry.previous]o18548:0 > -1 && i4674:0 > 1 && i3322:0 > 0
Filtered constant ground arguments:
   f13459_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13459_0_removeLastOccurrence_EQ(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13459_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13459_0_removeLastOccurrence_EQ(x1, x2, x4, x5, x6, x7, x8, x9)
Filtered unneeded arguments:
   f13459_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f13459_0_removeLastOccurrence_EQ(x1, x2, x3, x5, x6, x7, x8)
Finished conversion. Obtained 6 rules.P rules:
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19563sub1313219022:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18548[LinkedList$Entry.previous]o18546:0, o18548[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20558sub0:0), o20553[LinkedList$Entry.previous]o20558:0, o18546[LinkedList$Entry.previous]o18544:0, o19563[LinkedList$Entry.previous]o18546:0, o19563[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) :|: o18546[LinkedList$Entry.previous]o18548:0 > 0 && o18548[LinkedList$Entry.previous]o18546:0 > 0 && o20553[LinkedList$Entry.previous]o20558:0 > o18546[LinkedList$Entry.previous]o18548:0 && o18548[LinkedList$Entry.previous]o18544:0 > -1 && o19563[LinkedList$Entry.previous]o18544:0 < o18548[LinkedList$Entry.previous]o18544:0 && o19563[LinkedList$Entry.previous]o18546:0 < o18548[LinkedList$Entry.previous]o18546:0 && i3322:0 > 0 && i4674:0 > 1 && o19563[LinkedList$Entry.previous]o18544:0 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o19567sub1313219146:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o20655sub0:0), 1, o20652[LinkedList$Entry.previous]o20650:0, o19567[LinkedList$Entry.previous]o19564:0, o19567[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) :|: o19567[LinkedList$Entry.previous]o18544:0 < o18546[LinkedList$Entry.previous]o18544:0 && o18546[LinkedList$Entry.previous]o18544:0 > -1 && o19567[LinkedList$Entry.previous]o19564:0 < o18546[LinkedList$Entry.previous]o18548:0 && o18546[LinkedList$Entry.previous]o18548:0 > -1 && i3322:0 > 0 && i4674:0 > 1 && o19567[LinkedList$Entry.previous]o18544:0 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o20327sub1313219022:0), java.lang.Object(o19563sub1313219022:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18548[LinkedList$Entry.previous]o18546:0, o18548[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20558sub0:0), o20553[LinkedList$Entry.previous]o20558:0, o18546[LinkedList$Entry.previous]o18544:0, o19563[LinkedList$Entry.previous]o18546:0, o19563[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) :|: o18546[LinkedList$Entry.previous]o18548:0 > 0 && o18548[LinkedList$Entry.previous]o18546:0 > 0 && o20553[LinkedList$Entry.previous]o20558:0 > o18546[LinkedList$Entry.previous]o18548:0 && o18548[LinkedList$Entry.previous]o18544:0 > -1 && o19563[LinkedList$Entry.previous]o18544:0 < o18548[LinkedList$Entry.previous]o18544:0 && o19563[LinkedList$Entry.previous]o18546:0 < o18548[LinkedList$Entry.previous]o18546:0 && i3322:0 > 0 && i4674:0 > 1 && o19563[LinkedList$Entry.previous]o18544:0 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19567sub1313219146:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20626sub0:0), 1, o20623[LinkedList$Entry.previous]o20621:0, o19567[LinkedList$Entry.previous]o19564:0, o19567[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) :|: o19567[LinkedList$Entry.previous]o18544:0 < o18546[LinkedList$Entry.previous]o18544:0 && o18546[LinkedList$Entry.previous]o18544:0 > -1 && o19567[LinkedList$Entry.previous]o19564:0 < o18546[LinkedList$Entry.previous]o18548:0 && o18546[LinkedList$Entry.previous]o18548:0 > -1 && i3322:0 > 0 && i4674:0 > 1 && o19567[LinkedList$Entry.previous]o18544:0 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o19563sub1313219022:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18548[LinkedList$Entry.previous]o18546:0, o18548[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o20594sub0:0), o20589[LinkedList$Entry.previous]o20594:0, o18546[LinkedList$Entry.previous]o18544:0, o19563[LinkedList$Entry.previous]o18546:0, o19563[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) :|: o18546[LinkedList$Entry.previous]o18548:0 > 0 && o18548[LinkedList$Entry.previous]o18546:0 > 0 && o18548[LinkedList$Entry.previous]o18544:0 > -1 && o19563[LinkedList$Entry.previous]o18544:0 < o18548[LinkedList$Entry.previous]o18544:0 && o19563[LinkedList$Entry.previous]o18546:0 < o18548[LinkedList$Entry.previous]o18546:0 && o20589[LinkedList$Entry.previous]o20594:0 > o18546[LinkedList$Entry.previous]o18548:0 && i3322:0 > 0 && i4674:0 > 1 && o19563[LinkedList$Entry.previous]o18544:0 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o20407sub-357160775:0), java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o20407sub1313219146:0), java.lang.Object(o19567sub1313219146:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o20407sub-357160775:0), java.lang.Object(o19567sub-357160775:0)))))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20626sub0:0), 1, o20623[LinkedList$Entry.previous]o20621:0, o19567[LinkedList$Entry.previous]o19564:0, o19567[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) :|: o19567[LinkedList$Entry.previous]o18544:0 < o18546[LinkedList$Entry.previous]o18544:0 && o18546[LinkedList$Entry.previous]o18544:0 > -1 && o19567[LinkedList$Entry.previous]o19564:0 < o18546[LinkedList$Entry.previous]o18548:0 && o18546[LinkedList$Entry.previous]o18548:0 > -1 && i3322:0 > 0 && i4674:0 > 1 && o19567[LinkedList$Entry.previous]o18544:0 > 0

----------------------------------------

(24)
Obligation:
Rules:
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19563sub1313219022:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18548[LinkedList$Entry.previous]o18546:0, o18548[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20558sub0:0), o20553[LinkedList$Entry.previous]o20558:0, o18546[LinkedList$Entry.previous]o18544:0, o19563[LinkedList$Entry.previous]o18546:0, o19563[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) :|: o18546[LinkedList$Entry.previous]o18548:0 > 0 && o18548[LinkedList$Entry.previous]o18546:0 > 0 && o20553[LinkedList$Entry.previous]o20558:0 > o18546[LinkedList$Entry.previous]o18548:0 && o18548[LinkedList$Entry.previous]o18544:0 > -1 && o19563[LinkedList$Entry.previous]o18544:0 < o18548[LinkedList$Entry.previous]o18544:0 && o19563[LinkedList$Entry.previous]o18546:0 < o18548[LinkedList$Entry.previous]o18546:0 && i3322:0 > 0 && i4674:0 > 1 && o19563[LinkedList$Entry.previous]o18544:0 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x3, x4, x) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x8 < x4 && x4 > -1 && x7 < x3 && x3 > -1 && x9 > 0 && x10 > 1 && x8 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x11, java.lang.Object(x12)))))))), java.lang.Object(x13), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(x15))), x16, x17, x18, x19, x11) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x11, java.lang.Object(x12)))))))), java.lang.Object(x13), java.lang.Object(x20), x21, x17, x22, x23, x11) :|: x16 > 0 && x18 > 0 && x21 > x16 && x19 > -1 && x23 < x19 && x22 < x18 && x24 > 0 && x25 > 1 && x23 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x29))), x30, x31, x30, x31, x26) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(x32), 1, x33, x34, x35, x26) :|: x35 < x31 && x31 > -1 && x34 < x30 && x30 > -1 && x36 > 0 && x37 > 1 && x35 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x38, java.lang.Object(x39)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40))), x41, x42, x43, x44, x38) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x38, java.lang.Object(x39)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x45), x46, x42, x47, x48, x38) :|: x41 > 0 && x43 > 0 && x44 > -1 && x48 < x44 && x47 < x43 && x46 > x41 && x49 > 0 && x50 > 1 && x48 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x51, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x52), java.lang.Object(x53)))))))))), java.lang.Object(x54), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x55), java.lang.Object(x56))), x57, x58, x57, x58, x51) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x51, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x52), java.lang.Object(x53)))))))))), java.lang.Object(x54), java.lang.Object(x59), 1, x60, x61, x62, x51) :|: x62 < x58 && x58 > -1 && x61 < x57 && x57 > -1 && x63 > 0 && x64 > 1 && x62 > 0

----------------------------------------

(25) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(26)
Obligation:
Rules:
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19563sub1313219022:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18548[LinkedList$Entry.previous]o18546:0, o18548[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20558sub0:0), o20553[LinkedList$Entry.previous]o20558:0, o18546[LinkedList$Entry.previous]o18544:0, o19563[LinkedList$Entry.previous]o18546:0, o19563[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) :|: o18546[LinkedList$Entry.previous]o18548:0 > 0 && o18548[LinkedList$Entry.previous]o18546:0 > 0 && o20553[LinkedList$Entry.previous]o20558:0 > o18546[LinkedList$Entry.previous]o18548:0 && o18548[LinkedList$Entry.previous]o18544:0 > -1 && o19563[LinkedList$Entry.previous]o18544:0 < o18548[LinkedList$Entry.previous]o18544:0 && o19563[LinkedList$Entry.previous]o18546:0 < o18548[LinkedList$Entry.previous]o18546:0 && i3322:0 > 0 && i4674:0 > 1 && o19563[LinkedList$Entry.previous]o18544:0 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x3, x4, x) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x8 < x4 && x4 > -1 && x7 < x3 && x3 > -1 && x9 > 0 && x10 > 1 && x8 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x11, java.lang.Object(x12)))))))), java.lang.Object(x13), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(x15))), x16, x17, x18, x19, x11) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x11, java.lang.Object(x12)))))))), java.lang.Object(x13), java.lang.Object(x20), x21, x17, x22, x23, x11) :|: x16 > 0 && x18 > 0 && x21 > x16 && x19 > -1 && x23 < x19 && x22 < x18 && x24 > 0 && x25 > 1 && x23 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x29))), x30, x31, x30, x31, x26) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(x32), 1, x33, x34, x35, x26) :|: x35 < x31 && x31 > -1 && x34 < x30 && x30 > -1 && x36 > 0 && x37 > 1 && x35 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x38, java.lang.Object(x39)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40))), x41, x42, x43, x44, x38) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x38, java.lang.Object(x39)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x45), x46, x42, x47, x48, x38) :|: x41 > 0 && x43 > 0 && x44 > -1 && x48 < x44 && x47 < x43 && x46 > x41 && x49 > 0 && x50 > 1 && x48 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x51, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x52), java.lang.Object(x53)))))))))), java.lang.Object(x54), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x55), java.lang.Object(x56))), x57, x58, x57, x58, x51) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x51, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x52), java.lang.Object(x53)))))))))), java.lang.Object(x54), java.lang.Object(x59), 1, x60, x61, x62, x51) :|: x62 < x58 && x58 > -1 && x61 < x57 && x57 > -1 && x63 > 0 && x64 > 1 && x62 > 0

----------------------------------------

(27) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19563sub1313219022:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18548[LinkedList$Entry.previous]o18546:0, o18548[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20558sub0:0), o20553[LinkedList$Entry.previous]o20558:0, o18546[LinkedList$Entry.previous]o18544:0, o19563[LinkedList$Entry.previous]o18546:0, o19563[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) :|: o18546[LinkedList$Entry.previous]o18548:0 > 0 && o18548[LinkedList$Entry.previous]o18546:0 > 0 && o20553[LinkedList$Entry.previous]o20558:0 > o18546[LinkedList$Entry.previous]o18548:0 && o18548[LinkedList$Entry.previous]o18544:0 > -1 && o19563[LinkedList$Entry.previous]o18544:0 < o18548[LinkedList$Entry.previous]o18544:0 && o19563[LinkedList$Entry.previous]o18546:0 < o18548[LinkedList$Entry.previous]o18546:0 && i3322:0 > 0 && i4674:0 > 1 && o19563[LinkedList$Entry.previous]o18544:0 > 0
(2) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x3, x4, x) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x8 < x4 && x4 > -1 && x7 < x3 && x3 > -1 && x9 > 0 && x10 > 1 && x8 > 0
(3) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x11, java.lang.Object(x12)))))))), java.lang.Object(x13), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(x15))), x16, x17, x18, x19, x11) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x11, java.lang.Object(x12)))))))), java.lang.Object(x13), java.lang.Object(x20), x21, x17, x22, x23, x11) :|: x16 > 0 && x18 > 0 && x21 > x16 && x19 > -1 && x23 < x19 && x22 < x18 && x24 > 0 && x25 > 1 && x23 > 0
(4) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x29))), x30, x31, x30, x31, x26) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(x32), 1, x33, x34, x35, x26) :|: x35 < x31 && x31 > -1 && x34 < x30 && x30 > -1 && x36 > 0 && x37 > 1 && x35 > 0
(5) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x38, java.lang.Object(x39)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40))), x41, x42, x43, x44, x38) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x38, java.lang.Object(x39)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x45), x46, x42, x47, x48, x38) :|: x41 > 0 && x43 > 0 && x44 > -1 && x48 < x44 && x47 < x43 && x46 > x41 && x49 > 0 && x50 > 1 && x48 > 0
(6) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x51, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x52), java.lang.Object(x53)))))))))), java.lang.Object(x54), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x55), java.lang.Object(x56))), x57, x58, x57, x58, x51) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x51, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x52), java.lang.Object(x53)))))))))), java.lang.Object(x54), java.lang.Object(x59), 1, x60, x61, x62, x51) :|: x62 < x58 && x58 > -1 && x61 < x57 && x57 > -1 && x63 > 0 && x64 > 1 && x62 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (5), (6)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (3), (4), (5)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (2), (3), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(28)
Obligation:

Termination digraph:
Nodes:
(1) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19563sub1313219022:0))), o18546[LinkedList$Entry.previous]o18548:0, o18546[LinkedList$Entry.previous]o18544:0, o18548[LinkedList$Entry.previous]o18546:0, o18548[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0, java.lang.Object(o18546sub-1670379921:0)))))))), java.lang.Object(o18547sub0:0), java.lang.Object(o20558sub0:0), o20553[LinkedList$Entry.previous]o20558:0, o18546[LinkedList$Entry.previous]o18544:0, o19563[LinkedList$Entry.previous]o18546:0, o19563[LinkedList$Entry.previous]o18544:0, o18545-1670379921:0) :|: o18546[LinkedList$Entry.previous]o18548:0 > 0 && o18548[LinkedList$Entry.previous]o18546:0 > 0 && o20553[LinkedList$Entry.previous]o20558:0 > o18546[LinkedList$Entry.previous]o18548:0 && o18548[LinkedList$Entry.previous]o18544:0 > -1 && o19563[LinkedList$Entry.previous]o18544:0 < o18548[LinkedList$Entry.previous]o18544:0 && o19563[LinkedList$Entry.previous]o18546:0 < o18548[LinkedList$Entry.previous]o18546:0 && i3322:0 > 0 && i4674:0 > 1 && o19563[LinkedList$Entry.previous]o18544:0 > 0
(2) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x3, x4, x) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x8 < x4 && x4 > -1 && x7 < x3 && x3 > -1 && x9 > 0 && x10 > 1 && x8 > 0
(3) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x11, java.lang.Object(x12)))))))), java.lang.Object(x13), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14), java.lang.Object(x15))), x16, x17, x18, x19, x11) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x11, java.lang.Object(x12)))))))), java.lang.Object(x13), java.lang.Object(x20), x21, x17, x22, x23, x11) :|: x16 > 0 && x18 > 0 && x21 > x16 && x19 > -1 && x23 < x19 && x22 < x18 && x24 > 0 && x25 > 1 && x23 > 0
(4) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x29))), x30, x31, x30, x31, x26) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(x32), 1, x33, x34, x35, x26) :|: x35 < x31 && x31 > -1 && x34 < x30 && x30 > -1 && x36 > 0 && x37 > 1 && x35 > 0
(5) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x38, java.lang.Object(x39)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40))), x41, x42, x43, x44, x38) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x38, java.lang.Object(x39)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x45), x46, x42, x47, x48, x38) :|: x41 > 0 && x43 > 0 && x44 > -1 && x48 < x44 && x47 < x43 && x46 > x41 && x49 > 0 && x50 > 1 && x48 > 0
(6) f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x51, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x52), java.lang.Object(x53)))))))))), java.lang.Object(x54), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x55), java.lang.Object(x56))), x57, x58, x57, x58, x51) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x51, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x52), java.lang.Object(x53)))))))))), java.lang.Object(x54), java.lang.Object(x59), 1, x60, x61, x62, x51) :|: x62 < x58 && x58 > -1 && x61 < x57 && x57 > -1 && x63 > 0 && x64 > 1 && x62 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (5), (6)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (3), (4), (5)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (2), (3), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(29) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(30)
Obligation:
Rules:
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0:0, java.lang.Object(o18546sub-1670379921:0:0)))))))), java.lang.Object(o18547sub0:0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19563sub1313219022:0:0))), o18546[LinkedList$Entry.previous]o18548:0:0, o18546[LinkedList$Entry.previous]o18544:0:0, o18548[LinkedList$Entry.previous]o18546:0:0, o18548[LinkedList$Entry.previous]o18544:0:0, o18545-1670379921:0:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18545-1670379921:0:0, java.lang.Object(o18546sub-1670379921:0:0)))))))), java.lang.Object(o18547sub0:0:0), java.lang.Object(o20558sub0:0:0), o20553[LinkedList$Entry.previous]o20558:0:0, o18546[LinkedList$Entry.previous]o18544:0:0, o19563[LinkedList$Entry.previous]o18546:0:0, o19563[LinkedList$Entry.previous]o18544:0:0, o18545-1670379921:0:0) :|: i4674:0:0 > 1 && o19563[LinkedList$Entry.previous]o18544:0:0 > 0 && i3322:0:0 > 0 && o19563[LinkedList$Entry.previous]o18546:0:0 < o18548[LinkedList$Entry.previous]o18546:0:0 && o19563[LinkedList$Entry.previous]o18544:0:0 < o18548[LinkedList$Entry.previous]o18544:0:0 && o18548[LinkedList$Entry.previous]o18544:0:0 > -1 && o20553[LinkedList$Entry.previous]o20558:0:0 > o18546[LinkedList$Entry.previous]o18548:0:0 && o18548[LinkedList$Entry.previous]o18546:0:0 > 0 && o18546[LinkedList$Entry.previous]o18548:0:0 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x11:0, java.lang.Object(x12:0)))))))), java.lang.Object(x13:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x14:0), java.lang.Object(x15:0))), x16:0, x17:0, x18:0, x19:0, x11:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x11:0, java.lang.Object(x12:0)))))))), java.lang.Object(x13:0), java.lang.Object(x20:0), x21:0, x17:0, x22:0, x23:0, x11:0) :|: x25:0 > 1 && x23:0 > 0 && x24:0 > 0 && x22:0 < x18:0 && x23:0 < x19:0 && x19:0 > -1 && x21:0 > x16:0 && x18:0 > 0 && x16:0 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2:0))), x3:0, x4:0, x3:0, x4:0, x:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x1:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x5:0), 1, x6:0, x7:0, x8:0, x:0) :|: x10:0 > 1 && x8:0 > 0 && x9:0 > 0 && x3:0 > -1 && x7:0 < x3:0 && x4:0 > -1 && x8:0 < x4:0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x38:0, java.lang.Object(x39:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40:0))), x41:0, x42:0, x43:0, x44:0, x38:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x38:0, java.lang.Object(x39:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x45:0), x46:0, x42:0, x47:0, x48:0, x38:0) :|: x50:0 > 1 && x48:0 > 0 && x49:0 > 0 && x46:0 > x41:0 && x47:0 < x43:0 && x48:0 < x44:0 && x44:0 > -1 && x43:0 > 0 && x41:0 > 0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x51:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x52:0), java.lang.Object(x53:0)))))))))), java.lang.Object(x54:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x55:0), java.lang.Object(x56:0))), x57:0, x58:0, x57:0, x58:0, x51:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x51:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x52:0), java.lang.Object(x53:0)))))))))), java.lang.Object(x54:0), java.lang.Object(x59:0), 1, x60:0, x61:0, x62:0, x51:0) :|: x64:0 > 1 && x62:0 > 0 && x63:0 > 0 && x57:0 > -1 && x61:0 < x57:0 && x58:0 > -1 && x62:0 < x58:0
f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x27:0)))))))))), java.lang.Object(x28:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x29:0))), x30:0, x31:0, x30:0, x31:0, x26:0) -> f13459_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x26:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x27:0)))))))))), java.lang.Object(x28:0), java.lang.Object(x32:0), 1, x33:0, x34:0, x35:0, x26:0) :|: x37:0 > 1 && x35:0 > 0 && x36:0 > 0 && x30:0 > -1 && x34:0 < x30:0 && x31:0 > -1 && x35:0 < x31:0

----------------------------------------

(31) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13459_0_removeLastOccurrence_EQ(VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
NULL()
javaUtilEx.Content()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(32)
Obligation:
Rules:
f13459_0_removeLastOccurrence_EQ(c, c1, c2, o18546[LinkedList$Entry.previous]o18548:0:0, o18546[LinkedList$Entry.previous]o18544:0:0, o18548[LinkedList$Entry.previous]o18546:0:0, o18548[LinkedList$Entry.previous]o18544:0:0, o18545-1670379921:0:0) -> f13459_0_removeLastOccurrence_EQ(c3, c4, c5, o20553[LinkedList$Entry.previous]o20558:0:0, o18546[LinkedList$Entry.previous]o18544:0:0, o19563[LinkedList$Entry.previous]o18546:0:0, o19563[LinkedList$Entry.previous]o18544:0:0, o18545-1670379921:0:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i4674:0:0 > 1 && o19563[LinkedList$Entry.previous]o18544:0:0 > 0 && i3322:0:0 > 0 && o19563[LinkedList$Entry.previous]o18546:0:0 < o18548[LinkedList$Entry.previous]o18546:0:0 && o19563[LinkedList$Entry.previous]o18544:0:0 < o18548[LinkedList$Entry.previous]o18544:0:0 && o18548[LinkedList$Entry.previous]o18544:0:0 > -1 && o20553[LinkedList$Entry.previous]o20558:0:0 > o18546[LinkedList$Entry.previous]o18548:0:0 && o18548[LinkedList$Entry.previous]o18546:0:0 > 0 && o18546[LinkedList$Entry.previous]o18548:0:0 > 0)
f13459_0_removeLastOccurrence_EQ(c12, c13, c14, x3:0, x4:0, x3:0, x4:0, x:0) -> f13459_0_removeLastOccurrence_EQ(c15, c16, c17, c18, x6:0, x7:0, x8:0, x:0) :|: c18 = 1 && (c17 = 0 && (c16 = 0 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))))) && (x10:0 > 1 && x8:0 > 0 && x9:0 > 0 && x3:0 > -1 && x7:0 < x3:0 && x4:0 > -1 && x8:0 < x4:0)
f13459_0_removeLastOccurrence_EQ(c19, c20, c21, x41:0, x42:0, x43:0, x44:0, x38:0) -> f13459_0_removeLastOccurrence_EQ(c22, c23, c24, x46:0, x42:0, x47:0, x48:0, x38:0) :|: c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0)))) && (x50:0 > 1 && x48:0 > 0 && x49:0 > 0 && x46:0 > x41:0 && x47:0 < x43:0 && x48:0 < x44:0 && x44:0 > -1 && x43:0 > 0 && x41:0 > 0)

----------------------------------------

(33) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13459_0_removeLastOccurrence_EQ(x, x1, x2, x3, x4, x5, x6, x7)] = -1 + c*x + c1*x1 + c2*x2 + x5

The following rules are decreasing:
f13459_0_removeLastOccurrence_EQ(c, c1, c2, o18546[LinkedList$Entry.previous]o18548:0:0, o18546[LinkedList$Entry.previous]o18544:0:0, o18548[LinkedList$Entry.previous]o18546:0:0, o18548[LinkedList$Entry.previous]o18544:0:0, o18545-1670379921:0:0) -> f13459_0_removeLastOccurrence_EQ(c3, c4, c5, o20553[LinkedList$Entry.previous]o20558:0:0, o18546[LinkedList$Entry.previous]o18544:0:0, o19563[LinkedList$Entry.previous]o18546:0:0, o19563[LinkedList$Entry.previous]o18544:0:0, o18545-1670379921:0:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i4674:0:0 > 1 && o19563[LinkedList$Entry.previous]o18544:0:0 > 0 && i3322:0:0 > 0 && o19563[LinkedList$Entry.previous]o18546:0:0 < o18548[LinkedList$Entry.previous]o18546:0:0 && o19563[LinkedList$Entry.previous]o18544:0:0 < o18548[LinkedList$Entry.previous]o18544:0:0 && o18548[LinkedList$Entry.previous]o18544:0:0 > -1 && o20553[LinkedList$Entry.previous]o20558:0:0 > o18546[LinkedList$Entry.previous]o18548:0:0 && o18548[LinkedList$Entry.previous]o18546:0:0 > 0 && o18546[LinkedList$Entry.previous]o18548:0:0 > 0)
f13459_0_removeLastOccurrence_EQ(c12, c13, c14, x3:0, x4:0, x3:0, x4:0, x:0) -> f13459_0_removeLastOccurrence_EQ(c15, c16, c17, c18, x6:0, x7:0, x8:0, x:0) :|: c18 = 1 && (c17 = 0 && (c16 = 0 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))))) && (x10:0 > 1 && x8:0 > 0 && x9:0 > 0 && x3:0 > -1 && x7:0 < x3:0 && x4:0 > -1 && x8:0 < x4:0)
f13459_0_removeLastOccurrence_EQ(c19, c20, c21, x41:0, x42:0, x43:0, x44:0, x38:0) -> f13459_0_removeLastOccurrence_EQ(c22, c23, c24, x46:0, x42:0, x47:0, x48:0, x38:0) :|: c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0)))) && (x50:0 > 1 && x48:0 > 0 && x49:0 > 0 && x46:0 > x41:0 && x47:0 < x43:0 && x48:0 < x44:0 && x44:0 > -1 && x43:0 > 0 && x41:0 > 0)
The following rules are bounded:
f13459_0_removeLastOccurrence_EQ(c, c1, c2, o18546[LinkedList$Entry.previous]o18548:0:0, o18546[LinkedList$Entry.previous]o18544:0:0, o18548[LinkedList$Entry.previous]o18546:0:0, o18548[LinkedList$Entry.previous]o18544:0:0, o18545-1670379921:0:0) -> f13459_0_removeLastOccurrence_EQ(c3, c4, c5, o20553[LinkedList$Entry.previous]o20558:0:0, o18546[LinkedList$Entry.previous]o18544:0:0, o19563[LinkedList$Entry.previous]o18546:0:0, o19563[LinkedList$Entry.previous]o18544:0:0, o18545-1670379921:0:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i4674:0:0 > 1 && o19563[LinkedList$Entry.previous]o18544:0:0 > 0 && i3322:0:0 > 0 && o19563[LinkedList$Entry.previous]o18546:0:0 < o18548[LinkedList$Entry.previous]o18546:0:0 && o19563[LinkedList$Entry.previous]o18544:0:0 < o18548[LinkedList$Entry.previous]o18544:0:0 && o18548[LinkedList$Entry.previous]o18544:0:0 > -1 && o20553[LinkedList$Entry.previous]o20558:0:0 > o18546[LinkedList$Entry.previous]o18548:0:0 && o18548[LinkedList$Entry.previous]o18546:0:0 > 0 && o18546[LinkedList$Entry.previous]o18548:0:0 > 0)
f13459_0_removeLastOccurrence_EQ(c19, c20, c21, x41:0, x42:0, x43:0, x44:0, x38:0) -> f13459_0_removeLastOccurrence_EQ(c22, c23, c24, x46:0, x42:0, x47:0, x48:0, x38:0) :|: c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0)))) && (x50:0 > 1 && x48:0 > 0 && x49:0 > 0 && x46:0 > x41:0 && x47:0 < x43:0 && x48:0 < x44:0 && x44:0 > -1 && x43:0 > 0 && x41:0 > 0)

----------------------------------------

(34)
Obligation:
Rules:
f13459_0_removeLastOccurrence_EQ(c12, c13, c14, x3:0, x4:0, x3:0, x4:0, x:0) -> f13459_0_removeLastOccurrence_EQ(c15, c16, c17, c18, x6:0, x7:0, x8:0, x:0) :|: c18 = 1 && (c17 = 0 && (c16 = 0 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))))) && (x10:0 > 1 && x8:0 > 0 && x9:0 > 0 && x3:0 > -1 && x7:0 < x3:0 && x4:0 > -1 && x8:0 < x4:0)

----------------------------------------

(35) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13459_0_removeLastOccurrence_EQ(x, x1, x2, x3, x4, x5, x6, x7)] = c*x + c1*x1 + c2*x2 + x6

The following rules are decreasing:
f13459_0_removeLastOccurrence_EQ(c12, c13, c14, x3:0, x4:0, x3:0, x4:0, x:0) -> f13459_0_removeLastOccurrence_EQ(c15, c16, c17, c18, x6:0, x7:0, x8:0, x:0) :|: c18 = 1 && (c17 = 0 && (c16 = 0 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))))) && (x10:0 > 1 && x8:0 > 0 && x9:0 > 0 && x3:0 > -1 && x7:0 < x3:0 && x4:0 > -1 && x8:0 < x4:0)
The following rules are bounded:
f13459_0_removeLastOccurrence_EQ(c12, c13, c14, x3:0, x4:0, x3:0, x4:0, x:0) -> f13459_0_removeLastOccurrence_EQ(c15, c16, c17, c18, x6:0, x7:0, x8:0, x:0) :|: c18 = 1 && (c17 = 0 && (c16 = 0 && (c15 = 0 && (c14 = 0 && (c13 = 0 && c12 = 0))))) && (x10:0 > 1 && x8:0 > 0 && x9:0 > 0 && x3:0 > -1 && x7:0 < x3:0 && x4:0 > -1 && x8:0 < x4:0)

----------------------------------------

(36)
YES

----------------------------------------

(37)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveLastOccurrence.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, previous]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(38) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 65 IRulesP rules:
f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18401sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988, java.lang.Object(o18399sub1312238988))), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399, o18401[LinkedList$Entry.previous]o18396) -> f13470_0_removeLastOccurrence_Load(EOS(STATIC_13470), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399, o18401[LinkedList$Entry.previous]o18396) :|: TRUE
f13470_0_removeLastOccurrence_Load(EOS(STATIC_13470), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399, o18401[LinkedList$Entry.previous]o18396) -> f13483_0_removeLastOccurrence_Load(EOS(STATIC_13483), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18400sub0), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399, o18401[LinkedList$Entry.previous]o18396) :|: TRUE
f13483_0_removeLastOccurrence_Load(EOS(STATIC_13483), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18400sub0), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399, o18401[LinkedList$Entry.previous]o18396) -> f13494_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13494), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399, o18401[LinkedList$Entry.previous]o18396) :|: TRUE
f13494_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13494), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399, o18401[LinkedList$Entry.previous]o18396) -> f13505_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13505), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399) :|: o18399[LinkedList$Entry.previous]o18401 > 0 && o18401[LinkedList$Entry.previous]o18399 > 0
f13494_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13494), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o19503sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o19503sub0), java.lang.Object(o18400sub0), java.lang.Object(o19503sub0), o19503[LinkedList$Entry.previous]o19503, o18398[LinkedList$Entry.next]o18396, o19503[LinkedList$Entry.previous]o18396, o19503[LinkedList$Entry.previous]o19503, o19503[LinkedList$Entry.previous]o18396) -> f13506_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13506), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o19503sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o19503sub0), java.lang.Object(o18400sub0), java.lang.Object(o19503sub0), o18398[LinkedList$Entry.next]o18396, o19503[LinkedList$Entry.previous]o18396, o19503[LinkedList$Entry.previous]o19503) :|: TRUE
f13505_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13505), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), o18399[LinkedList$Entry.previous]o19552, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o19552[LinkedList$Entry.previous]o18396, o19552[LinkedList$Entry.previous]o18399) -> f13518_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13518), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: o19555[LinkedList$Entry.previous]o18396 < o19552[LinkedList$Entry.previous]o18396 && o19552[LinkedList$Entry.previous]o18396 >= 0 && o19555[LinkedList$Entry.previous]o18399 < o19552[LinkedList$Entry.previous]o18399 && o19552[LinkedList$Entry.previous]o18399 >= 0
f13518_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13518), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f13531_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13531), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), java.lang.Object(o18400sub0), o195530, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: TRUE
f13531_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13531), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), java.lang.Object(o18400sub0), o195530, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f13544_0_equals_Load(EOS(STATIC_13544), java.lang.Object(o18400sub0), o195530, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988, java.lang.Object(o18399sub1312238988))), java.lang.Object(o18399sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), java.lang.Object(o19555sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), o195530, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: i4643 > 1 && i3322 >= 1
f13531_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13531), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), java.lang.Object(o18400sub0), o195530, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f13544_1_equals_Load(EOS(STATIC_13544), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), java.lang.Object(o18400sub0), o195530, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: i4643 > 1 && i3322 >= 1
f13544_0_equals_Load(EOS(STATIC_13544), java.lang.Object(o18400sub0), o195530, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988, java.lang.Object(o18399sub1312238988))), java.lang.Object(o18399sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), java.lang.Object(o19555sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), o195530, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f14315_0_equals_Load(EOS(STATIC_14315), java.lang.Object(o18400sub0), o195530, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988, java.lang.Object(o18399sub1312238988))), java.lang.Object(o18399sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123, java.lang.Object(o19555sub1313218123))), java.lang.Object(o19555sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), o195530, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: TRUE
f13607_0_equals_Return(EOS(STATIC_13607), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o20145sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19555sub1313218123))), matching1, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f13609_0_equals_Return(EOS(STATIC_13609), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o20145sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19555sub1313218123))), 0, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: TRUE && matching1 = 0
f13609_0_equals_Return(EOS(STATIC_13609), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o204841333508708, java.lang.Object(o20486sub1333508708))), matching1, o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20481[LinkedList$Entry.previous]o20483, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481) -> f13637_0_removeLastOccurrence_EQ(EOS(STATIC_13637), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o204841333508708, java.lang.Object(o20486sub1333508708))), 0, o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20481[LinkedList$Entry.previous]o20483, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481) :|: TRUE && matching1 = 0
f13637_0_removeLastOccurrence_EQ(EOS(STATIC_13637), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o204841333508708, java.lang.Object(o20486sub1333508708))), matching1, o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20481[LinkedList$Entry.previous]o20483, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481) -> f13647_0_removeLastOccurrence_Load(EOS(STATIC_13647), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o204841333508708, java.lang.Object(o20486sub1333508708))), o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20481[LinkedList$Entry.previous]o20483, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481) :|: TRUE && matching1 = 0
f13647_0_removeLastOccurrence_Load(EOS(STATIC_13647), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o204841333508708, java.lang.Object(o20486sub1333508708))), o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20481[LinkedList$Entry.previous]o20483, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481) -> f13662_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13662), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o204841333508708, java.lang.Object(o20486sub1333508708))), o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20481[LinkedList$Entry.previous]o20483, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481) :|: TRUE
f13662_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13662), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o204841333508708, java.lang.Object(o20486sub1333508708))), o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20481[LinkedList$Entry.previous]o20483, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481) -> f13677_0_removeLastOccurrence_Store(EOS(STATIC_13677), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(o20486sub0), o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481, o20481[LinkedList$Entry.previous]o20486) :|: o20481[LinkedList$Entry.previous]o20486 > o20481[LinkedList$Entry.previous]o20483 && o20481[LinkedList$Entry.previous]o20483 >= 0
f13677_0_removeLastOccurrence_Store(EOS(STATIC_13677), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(o20486sub0), o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481, o20481[LinkedList$Entry.previous]o20486) -> f13692_0_removeLastOccurrence_JMP(EOS(STATIC_13692), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(o20486sub0), o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481, o20481[LinkedList$Entry.previous]o20486) :|: TRUE
f13692_0_removeLastOccurrence_JMP(EOS(STATIC_13692), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(o20486sub0), o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481, o20481[LinkedList$Entry.previous]o20486) -> f13709_0_removeLastOccurrence_Load(EOS(STATIC_13709), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(o20486sub0), o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481, o20481[LinkedList$Entry.previous]o20486) :|: TRUE
f13709_0_removeLastOccurrence_Load(EOS(STATIC_13709), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(o20486sub0), o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481, o20481[LinkedList$Entry.previous]o20486) -> f13401_0_removeLastOccurrence_Load(EOS(STATIC_13401), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20479-1627951523, java.lang.Object(o20481sub-1627951523)))))))), java.lang.Object(o20482sub0), java.lang.Object(o20486sub0), o20481[LinkedList$Entry.previous]o20486, o20480[LinkedList$Entry.next]o20478, o20481[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20478, o20486[LinkedList$Entry.previous]o20481) :|: TRUE
f13401_0_removeLastOccurrence_Load(EOS(STATIC_13401), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399) -> f13415_0_removeLastOccurrence_Load(EOS(STATIC_13415), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18401sub0), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399) :|: TRUE
f13415_0_removeLastOccurrence_Load(EOS(STATIC_13415), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18401sub0), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399) -> f13427_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13427), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18401sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399) :|: TRUE
f13427_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13427), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18401sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399) -> f13442_0_removeLastOccurrence_EQ(EOS(STATIC_13442), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18401sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988, java.lang.Object(o18399sub1312238988))), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399) :|: TRUE
f13442_0_removeLastOccurrence_EQ(EOS(STATIC_13442), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18401sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988, java.lang.Object(o18399sub1312238988))), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399) -> f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o18400sub0), java.lang.Object(o18401sub0), java.lang.Object(o18401sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988, java.lang.Object(o18399sub1312238988))), o18399[LinkedList$Entry.previous]o18401, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18401[LinkedList$Entry.previous]o18399, o18401[LinkedList$Entry.previous]o18396) :|: o18401[LinkedList$Entry.previous]o18396 > 0
f13608_0_equals_Return(EOS(STATIC_13608), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o20159sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20161sub1313218123), java.lang.Object(o19555sub1313218123))), matching1, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f13609_0_equals_Return(EOS(STATIC_13609), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o20159sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20161sub1313218123), java.lang.Object(o19555sub1313218123))), 0, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: TRUE && matching1 = 0
f13610_0_equals_Return(EOS(STATIC_13610), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19555sub1313218123))), matching1, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f13612_0_equals_Return(EOS(STATIC_13612), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19555sub1313218123))), 0, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: TRUE && matching1 = 0
f13612_0_equals_Return(EOS(STATIC_13612), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub1333530749))), i5128, o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20499[LinkedList$Entry.previous]o20501, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499) -> f13638_0_removeLastOccurrence_EQ(EOS(STATIC_13638), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub1333530749))), i5128, o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20499[LinkedList$Entry.previous]o20501, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499) :|: TRUE
f13638_0_removeLastOccurrence_EQ(EOS(STATIC_13638), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub1333530749))), matching1, o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20499[LinkedList$Entry.previous]o20501, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499) -> f13649_0_removeLastOccurrence_EQ(EOS(STATIC_13649), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub1333530749))), 0, o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20499[LinkedList$Entry.previous]o20501, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499) :|: TRUE && matching1 = 0
f13649_0_removeLastOccurrence_EQ(EOS(STATIC_13649), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub1333530749))), matching1, o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20499[LinkedList$Entry.previous]o20501, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499) -> f13664_0_removeLastOccurrence_Load(EOS(STATIC_13664), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub1333530749))), o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20499[LinkedList$Entry.previous]o20501, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499) :|: TRUE && matching1 = 0
f13664_0_removeLastOccurrence_Load(EOS(STATIC_13664), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub1333530749))), o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20499[LinkedList$Entry.previous]o20501, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499) -> f13679_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13679), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub1333530749))), o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20499[LinkedList$Entry.previous]o20501, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499) :|: TRUE
f13679_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13679), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub1333530749))), o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20499[LinkedList$Entry.previous]o20501, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499) -> f13694_0_removeLastOccurrence_Store(EOS(STATIC_13694), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub0), o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499, o20499[LinkedList$Entry.previous]o20504) :|: o20499[LinkedList$Entry.previous]o20504 > o20499[LinkedList$Entry.previous]o20501 && o20499[LinkedList$Entry.previous]o20501 >= 0
f13694_0_removeLastOccurrence_Store(EOS(STATIC_13694), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub0), o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499, o20499[LinkedList$Entry.previous]o20504) -> f13711_0_removeLastOccurrence_JMP(EOS(STATIC_13711), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub0), o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499, o20499[LinkedList$Entry.previous]o20504) :|: TRUE
f13711_0_removeLastOccurrence_JMP(EOS(STATIC_13711), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub0), o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499, o20499[LinkedList$Entry.previous]o20504) -> f13726_0_removeLastOccurrence_Load(EOS(STATIC_13726), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub0), o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499, o20499[LinkedList$Entry.previous]o20504) :|: TRUE
f13726_0_removeLastOccurrence_Load(EOS(STATIC_13726), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub0), o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499, o20499[LinkedList$Entry.previous]o20504) -> f13401_0_removeLastOccurrence_Load(EOS(STATIC_13401), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20497-1627947803, java.lang.Object(o20499sub-1627947803)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub0), o20499[LinkedList$Entry.previous]o20504, o20498[LinkedList$Entry.next]o20496, o20499[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20496, o20504[LinkedList$Entry.previous]o20499) :|: TRUE
f13611_0_equals_Return(EOS(STATIC_13611), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19555sub1313218123))), matching1, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f13612_0_equals_Return(EOS(STATIC_13612), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19555sub1313218123))), 1, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: TRUE && matching1 = 1
f13506_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13506), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), o18398[LinkedList$Entry.next]o18396, o19556[LinkedList$Entry.previous]o18396, o19556[LinkedList$Entry.previous]o19556) -> f13519_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13519), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: o19559[LinkedList$Entry.previous]o18396 < o19556[LinkedList$Entry.previous]o18396 && o19556[LinkedList$Entry.previous]o18396 >= 0 && o19559[LinkedList$Entry.previous]o19556 < o19556[LinkedList$Entry.previous]o19556 && o19556[LinkedList$Entry.previous]o19556 >= 0
f13519_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13519), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f13532_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13532), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), java.lang.Object(o18400sub0), o195570, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: TRUE
f13532_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13532), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), java.lang.Object(o18400sub0), o195570, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f13545_0_equals_Load(EOS(STATIC_13545), java.lang.Object(o18400sub0), o195570, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-1669510061, java.lang.Object(o19559sub-1669510061))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), java.lang.Object(o19559sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o18400sub0), o195570, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: i4643 > 1 && i3322 >= 1
f13532_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_13532), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), java.lang.Object(o18400sub0), o195570, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f13545_1_equals_Load(EOS(STATIC_13545), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o18400sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), java.lang.Object(o18400sub0), o195570, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: i4643 > 1 && i3322 >= 1
f13545_0_equals_Load(EOS(STATIC_13545), java.lang.Object(o18400sub0), o195570, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-1669510061, java.lang.Object(o19559sub-1669510061))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), java.lang.Object(o19559sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o18400sub0), o195570, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f14395_0_equals_Load(EOS(STATIC_14395), java.lang.Object(o18400sub0), o195570, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-1669510061, java.lang.Object(o19559sub-1669510061))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247, java.lang.Object(o19559sub1313218247))), java.lang.Object(o19559sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o18400sub0), o195570, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: TRUE
f13614_0_equals_Return(EOS(STATIC_13614), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o20230sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub1313218247))), matching1, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f13616_0_equals_Return(EOS(STATIC_13616), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o20230sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub1313218247))), 0, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: TRUE && matching1 = 0
f13616_0_equals_Return(EOS(STATIC_13616), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205161333531834, java.lang.Object(o20518sub1333531834))), matching1, o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) -> f13639_0_removeLastOccurrence_EQ(EOS(STATIC_13639), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205161333531834, java.lang.Object(o20518sub1333531834))), 0, o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) :|: TRUE && matching1 = 0
f13639_0_removeLastOccurrence_EQ(EOS(STATIC_13639), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205161333531834, java.lang.Object(o20518sub1333531834))), matching1, o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) -> f13650_0_removeLastOccurrence_Load(EOS(STATIC_13650), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205161333531834, java.lang.Object(o20518sub1333531834))), o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) :|: TRUE && matching1 = 0
f13650_0_removeLastOccurrence_Load(EOS(STATIC_13650), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205161333531834, java.lang.Object(o20518sub1333531834))), o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) -> f13665_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13665), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205161333531834, java.lang.Object(o20518sub1333531834))), o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) :|: TRUE
f13665_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13665), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o205161333531834, java.lang.Object(o20518sub1333531834))), o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) -> f13680_0_removeLastOccurrence_Store(EOS(STATIC_13680), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(o20518sub0), o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) :|: TRUE
f13680_0_removeLastOccurrence_Store(EOS(STATIC_13680), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(o20518sub0), o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) -> f13695_0_removeLastOccurrence_JMP(EOS(STATIC_13695), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(o20518sub0), o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) :|: TRUE
f13695_0_removeLastOccurrence_JMP(EOS(STATIC_13695), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(o20518sub0), o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) -> f13712_0_removeLastOccurrence_Load(EOS(STATIC_13712), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(o20518sub0), o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) :|: TRUE
f13712_0_removeLastOccurrence_Load(EOS(STATIC_13712), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(o20518sub0), o20514[LinkedList$Entry.next]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) -> f13401_0_removeLastOccurrence_Load(EOS(STATIC_13401), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20513-1627903845, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20516-294372011, java.lang.Object(o20518sub-294372011)))))))))), java.lang.Object(o20519sub0), java.lang.Object(o20518sub0), o20515[LinkedList$Entry.previous]o20518, o20514[LinkedList$Entry.next]o20512, o20515[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20512, o20518[LinkedList$Entry.previous]o20515) :|: o20515[LinkedList$Entry.previous]o20518 = 1
f13615_0_equals_Return(EOS(STATIC_13615), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub-357271104), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o20243sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub1313218247), java.lang.Object(o19559sub1313218247))), matching1, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f13616_0_equals_Return(EOS(STATIC_13616), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub-357271104), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o20243sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub1313218247), java.lang.Object(o19559sub1313218247))), 0, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: TRUE && matching1 = 0
f13617_0_equals_Return(EOS(STATIC_13617), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub1313218247))), matching1, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f13619_0_equals_Return(EOS(STATIC_13619), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub1313218247))), 0, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: TRUE && matching1 = 0
f13619_0_equals_Return(EOS(STATIC_13619), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub1333533725))), i5138, o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) -> f13640_0_removeLastOccurrence_EQ(EOS(STATIC_13640), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub1333533725))), i5138, o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) :|: TRUE
f13640_0_removeLastOccurrence_EQ(EOS(STATIC_13640), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub1333533725))), matching1, o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) -> f13652_0_removeLastOccurrence_EQ(EOS(STATIC_13652), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub1333533725))), 0, o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) :|: TRUE && matching1 = 0
f13652_0_removeLastOccurrence_EQ(EOS(STATIC_13652), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub1333533725))), matching1, o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) -> f13667_0_removeLastOccurrence_Load(EOS(STATIC_13667), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub1333533725))), o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) :|: TRUE && matching1 = 0
f13667_0_removeLastOccurrence_Load(EOS(STATIC_13667), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub1333533725))), o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) -> f13682_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13682), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub1333533725))), o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) :|: TRUE
f13682_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13682), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub1333533725))), o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) -> f13697_0_removeLastOccurrence_Store(EOS(STATIC_13697), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub0), o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) :|: TRUE
f13697_0_removeLastOccurrence_Store(EOS(STATIC_13697), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub0), o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) -> f13714_0_removeLastOccurrence_JMP(EOS(STATIC_13714), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub0), o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) :|: TRUE
f13714_0_removeLastOccurrence_JMP(EOS(STATIC_13714), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub0), o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) -> f13727_0_removeLastOccurrence_Load(EOS(STATIC_13727), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub0), o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) :|: TRUE
f13727_0_removeLastOccurrence_Load(EOS(STATIC_13727), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub0), o20533[LinkedList$Entry.next]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) -> f13401_0_removeLastOccurrence_Load(EOS(STATIC_13401), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20532-1627900063, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub-294366338)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub0), o20534[LinkedList$Entry.previous]o20537, o20533[LinkedList$Entry.next]o20531, o20534[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20531, o20537[LinkedList$Entry.previous]o20534) :|: o20534[LinkedList$Entry.previous]o20537 = 1
f13618_0_equals_Return(EOS(STATIC_13618), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub1313218247))), matching1, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f13619_0_equals_Return(EOS(STATIC_13619), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub1313218247))), 1, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: TRUE && matching1 = 1
f13544_1_equals_Load(EOS(STATIC_13544), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o20145sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19555sub1313218123))), java.lang.Object(o20145sub0), NULL, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f13607_0_equals_Return(EOS(STATIC_13607), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o20145sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19555sub1313218123))), 0, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: TRUE
f13544_1_equals_Load(EOS(STATIC_13544), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o20159sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20161sub1313218123), java.lang.Object(o19555sub1313218123))), java.lang.Object(o20159sub0), java.lang.Object(o20161sub0), o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f13608_0_equals_Return(EOS(STATIC_13608), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(o20159sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20161sub1313218123), java.lang.Object(o19555sub1313218123))), 0, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: TRUE
f13544_1_equals_Load(EOS(STATIC_13544), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19555sub1313218123))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f13610_0_equals_Return(EOS(STATIC_13610), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19555sub1313218123))), 0, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: TRUE
f13544_1_equals_Load(EOS(STATIC_13544), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19555sub1313218123))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) -> f13611_0_equals_Return(EOS(STATIC_13611), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(o18399sub-1670489351)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19555sub1313218123))), 1, o18398[LinkedList$Entry.next]o18396, o18399[LinkedList$Entry.previous]o18396, o18399[LinkedList$Entry.previous]o19552, o19555[LinkedList$Entry.previous]o18396, o19555[LinkedList$Entry.previous]o18399) :|: TRUE
f13545_1_equals_Load(EOS(STATIC_13545), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o20230sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub1313218247))), java.lang.Object(o20230sub0), NULL, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f13614_0_equals_Return(EOS(STATIC_13614), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o20230sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub1313218247))), 0, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: TRUE
f13545_1_equals_Load(EOS(STATIC_13545), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub-357271104), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o20243sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub1313218247), java.lang.Object(o19559sub1313218247))), java.lang.Object(o20243sub0), java.lang.Object(o20245sub0), o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f13615_0_equals_Return(EOS(STATIC_13615), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub-357271104), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(o20243sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub1313218247), java.lang.Object(o19559sub1313218247))), 0, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: TRUE
f13545_1_equals_Load(EOS(STATIC_13545), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub1313218247))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f13617_0_equals_Return(EOS(STATIC_13617), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub1313218247))), 0, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: TRUE
f13545_1_equals_Load(EOS(STATIC_13545), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub1313218247))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) -> f13618_0_equals_Return(EOS(STATIC_13618), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub-357271104)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub1313218247))), 1, o18398[LinkedList$Entry.next]o18396, o19559[LinkedList$Entry.previous]o18396, o19559[LinkedList$Entry.previous]o19556) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19555sub1313218123:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19555sub1313218123:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:0, java.lang.Object(o18399sub1312238988:0))), o18399[LinkedList$Entry.previous]o18401:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o18401[LinkedList$Entry.previous]o18399:0, o18401[LinkedList$Entry.previous]o18396:0) -> f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20486sub0:0), java.lang.Object(o20486sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:1, java.lang.Object(o18399sub1312238988:1))), o20481[LinkedList$Entry.previous]o20486:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o19555[LinkedList$Entry.previous]o18399:0, o19555[LinkedList$Entry.previous]o18396:0) :|: o18401[LinkedList$Entry.previous]o18399:0 > 0 && o18399[LinkedList$Entry.previous]o18401:0 > 0 && o20481[LinkedList$Entry.previous]o20486:0 > o18399[LinkedList$Entry.previous]o18401:0 && o18401[LinkedList$Entry.previous]o18396:0 > -1 && o19555[LinkedList$Entry.previous]o18396:0 < o18401[LinkedList$Entry.previous]o18396:0 && o19555[LinkedList$Entry.previous]o18399:0 < o18401[LinkedList$Entry.previous]o18399:0 && i3322:0 > 0 && o19555[LinkedList$Entry.previous]o18396:0 > 0 && i4643:0 > 1
f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub-357271104:0), java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub1313218247:0), java.lang.Object(o19559sub1313218247:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub1313218247:0), java.lang.Object(o19559sub1313218247:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:0, java.lang.Object(o18399sub1312238988:0))), o18399[LinkedList$Entry.previous]o18401:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0) -> f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20245sub-357271104:0), java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20518sub0:0), java.lang.Object(o20518sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:1, java.lang.Object(o18399sub1312238988:1))), 1, o18398[LinkedList$Entry.next]o18396:0, o20515[LinkedList$Entry.previous]o20512:0, o19559[LinkedList$Entry.previous]o19556:0, o19559[LinkedList$Entry.previous]o18396:0) :|: o18399[LinkedList$Entry.previous]o18396:0 > -1 && o19559[LinkedList$Entry.previous]o18396:0 < o18399[LinkedList$Entry.previous]o18396:0 && o19559[LinkedList$Entry.previous]o19556:0 < o18399[LinkedList$Entry.previous]o18401:0 && o18399[LinkedList$Entry.previous]o18401:0 > -1 && i3322:0 > 0 && o19559[LinkedList$Entry.previous]o18396:0 > 0 && i4643:0 > 1
f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20161sub1313218123:0), java.lang.Object(o19555sub1313218123:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o20161sub1313218123:0), java.lang.Object(o19555sub1313218123:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:0, java.lang.Object(o18399sub1312238988:0))), o18399[LinkedList$Entry.previous]o18401:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o18401[LinkedList$Entry.previous]o18399:0, o18401[LinkedList$Entry.previous]o18396:0) -> f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20486sub0:0), java.lang.Object(o20486sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:1, java.lang.Object(o18399sub1312238988:1))), o20481[LinkedList$Entry.previous]o20486:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o19555[LinkedList$Entry.previous]o18399:0, o19555[LinkedList$Entry.previous]o18396:0) :|: o18401[LinkedList$Entry.previous]o18399:0 > 0 && o18399[LinkedList$Entry.previous]o18401:0 > 0 && o20481[LinkedList$Entry.previous]o20486:0 > o18399[LinkedList$Entry.previous]o18401:0 && o18401[LinkedList$Entry.previous]o18396:0 > -1 && o19555[LinkedList$Entry.previous]o18396:0 < o18401[LinkedList$Entry.previous]o18396:0 && o19555[LinkedList$Entry.previous]o18399:0 < o18401[LinkedList$Entry.previous]o18399:0 && i3322:0 > 0 && o19555[LinkedList$Entry.previous]o18396:0 > 0 && i4643:0 > 1
f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub1313218247:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub1313218247:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:0, java.lang.Object(o18399sub1312238988:0))), o18399[LinkedList$Entry.previous]o18401:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0) -> f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20518sub0:0), java.lang.Object(o20518sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:1, java.lang.Object(o18399sub1312238988:1))), 1, o18398[LinkedList$Entry.next]o18396:0, o20515[LinkedList$Entry.previous]o20512:0, o19559[LinkedList$Entry.previous]o19556:0, o19559[LinkedList$Entry.previous]o18396:0) :|: o18399[LinkedList$Entry.previous]o18396:0 > -1 && o19559[LinkedList$Entry.previous]o18396:0 < o18399[LinkedList$Entry.previous]o18396:0 && o19559[LinkedList$Entry.previous]o19556:0 < o18399[LinkedList$Entry.previous]o18401:0 && o18399[LinkedList$Entry.previous]o18401:0 > -1 && i3322:0 > 0 && o19559[LinkedList$Entry.previous]o18396:0 > 0 && i4643:0 > 1
f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub1313218247:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub1313218247:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:0, java.lang.Object(o18399sub1312238988:0))), o18399[LinkedList$Entry.previous]o18401:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0) -> f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20537sub0:0), java.lang.Object(o20537sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:1, java.lang.Object(o18399sub1312238988:1))), 1, o18398[LinkedList$Entry.next]o18396:0, o20534[LinkedList$Entry.previous]o20531:0, o19559[LinkedList$Entry.previous]o19556:0, o19559[LinkedList$Entry.previous]o18396:0) :|: o18399[LinkedList$Entry.previous]o18396:0 > -1 && o19559[LinkedList$Entry.previous]o18396:0 < o18399[LinkedList$Entry.previous]o18396:0 && o19559[LinkedList$Entry.previous]o19556:0 < o18399[LinkedList$Entry.previous]o18401:0 && o18399[LinkedList$Entry.previous]o18401:0 > -1 && i3322:0 > 0 && o19559[LinkedList$Entry.previous]o18396:0 > 0 && i4643:0 > 1
f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19555sub1313218123:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o19555sub1313218123:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:0, java.lang.Object(o18399sub1312238988:0))), o18399[LinkedList$Entry.previous]o18401:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o18401[LinkedList$Entry.previous]o18399:0, o18401[LinkedList$Entry.previous]o18396:0) -> f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20504sub0:0), java.lang.Object(o20504sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:1, java.lang.Object(o18399sub1312238988:1))), o20499[LinkedList$Entry.previous]o20504:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o19555[LinkedList$Entry.previous]o18399:0, o19555[LinkedList$Entry.previous]o18396:0) :|: o18401[LinkedList$Entry.previous]o18399:0 > 0 && o18399[LinkedList$Entry.previous]o18401:0 > 0 && o18401[LinkedList$Entry.previous]o18396:0 > -1 && o19555[LinkedList$Entry.previous]o18396:0 < o18401[LinkedList$Entry.previous]o18396:0 && o19555[LinkedList$Entry.previous]o18399:0 < o18401[LinkedList$Entry.previous]o18399:0 && o20499[LinkedList$Entry.previous]o20504:0 > o18399[LinkedList$Entry.previous]o18401:0 && i3322:0 > 0 && o19555[LinkedList$Entry.previous]o18396:0 > 0 && i4643:0 > 1
Removed following non-SCC rules:
f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104:0, java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247:0, java.lang.Object(o19559sub1313218247:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247:0, java.lang.Object(o19559sub1313218247:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:0, java.lang.Object(o18399sub1312238988:0))), o18399[LinkedList$Entry.previous]o18401:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0) -> f14395_0_equals_Load(EOS(STATIC_14395), java.lang.Object(o18400sub0:0), o195570:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:1, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-1669510061:0, java.lang.Object(o19559sub-1669510061:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195571313218247:0, java.lang.Object(o19559sub1313218247:0))), java.lang.Object(o19559sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o19557-357271104:0, java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(o18400sub0:0), o195570:0, o18398[LinkedList$Entry.next]o18396:0, o19559[LinkedList$Entry.previous]o18396:0, o19559[LinkedList$Entry.previous]o19556:0) :|: o18399[LinkedList$Entry.previous]o18396:0 > -1 && o19559[LinkedList$Entry.previous]o18396:0 < o18399[LinkedList$Entry.previous]o18396:0 && o19559[LinkedList$Entry.previous]o19556:0 < o18399[LinkedList$Entry.previous]o18401:0 && o18399[LinkedList$Entry.previous]o18401:0 > -1 && i4643:0 > 1 && i3322:0 > 0
f13457_0_removeLastOccurrence_EQ(EOS(STATIC_13457), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123:0, java.lang.Object(o19555sub1313218123:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123:0, java.lang.Object(o19555sub1313218123:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:0, java.lang.Object(o18399sub1312238988:0))), o18399[LinkedList$Entry.previous]o18401:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o18401[LinkedList$Entry.previous]o18399:0, o18401[LinkedList$Entry.previous]o18396:0) -> f14315_0_equals_Load(EOS(STATIC_14315), java.lang.Object(o18400sub0:0), o195530:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o183971312238988:1, java.lang.Object(o18399sub1312238988:1))), java.lang.Object(o18399sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o195531313218123:0, java.lang.Object(o19555sub1313218123:0))), java.lang.Object(o19555sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), o195530:0, o18398[LinkedList$Entry.next]o18396:0, o18399[LinkedList$Entry.previous]o18396:0, o18399[LinkedList$Entry.previous]o18401:0, o19555[LinkedList$Entry.previous]o18396:0, o19555[LinkedList$Entry.previous]o18399:0) :|: o18401[LinkedList$Entry.previous]o18399:0 > 0 && o18401[LinkedList$Entry.previous]o18396:0 > -1 && o19555[LinkedList$Entry.previous]o18396:0 < o18401[LinkedList$Entry.previous]o18396:0 && o19555[LinkedList$Entry.previous]o18399:0 < o18401[LinkedList$Entry.previous]o18399:0 && o18399[LinkedList$Entry.previous]o18401:0 > 0 && i4643:0 > 1 && i3322:0 > 0
Filtered constant ground arguments:
   f13457_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f13457_0_removeLastOccurrence_EQ(x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13457_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13457_0_removeLastOccurrence_EQ(x1, x2, x4, x5, x6, x7, x8, x9, x10)
Filtered unneeded arguments:
   f13457_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13457_0_removeLastOccurrence_EQ(x1, x2, x3, x5, x7, x8, x9)
Finished conversion. Obtained 6 rules.P rules:
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19555sub1313218123:0))), o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18401[LinkedList$Entry.previous]o18399:0, o18401[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20486sub0:0), o20481[LinkedList$Entry.previous]o20486:0, o18399[LinkedList$Entry.previous]o18396:0, o19555[LinkedList$Entry.previous]o18399:0, o19555[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) :|: o18399[LinkedList$Entry.previous]o18401:0 > 0 && o18401[LinkedList$Entry.previous]o18399:0 > 0 && o20481[LinkedList$Entry.previous]o20486:0 > o18399[LinkedList$Entry.previous]o18401:0 && o18401[LinkedList$Entry.previous]o18396:0 > -1 && o19555[LinkedList$Entry.previous]o18396:0 < o18401[LinkedList$Entry.previous]o18396:0 && o19555[LinkedList$Entry.previous]o18399:0 < o18401[LinkedList$Entry.previous]o18399:0 && i3322:0 > 0 && i4643:0 > 1 && o19555[LinkedList$Entry.previous]o18396:0 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o20245sub-357271104:0), java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o20245sub1313218247:0), java.lang.Object(o19559sub1313218247:0))), o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o20245sub-357271104:0), java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20518sub0:0), 1, o20515[LinkedList$Entry.previous]o20512:0, o19559[LinkedList$Entry.previous]o19556:0, o19559[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) :|: o19559[LinkedList$Entry.previous]o18396:0 < o18399[LinkedList$Entry.previous]o18396:0 && o18399[LinkedList$Entry.previous]o18396:0 > -1 && o19559[LinkedList$Entry.previous]o19556:0 < o18399[LinkedList$Entry.previous]o18401:0 && o18399[LinkedList$Entry.previous]o18401:0 > -1 && i3322:0 > 0 && i4643:0 > 1 && o19559[LinkedList$Entry.previous]o18396:0 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o20161sub1313218123:0), java.lang.Object(o19555sub1313218123:0))), o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18401[LinkedList$Entry.previous]o18399:0, o18401[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20486sub0:0), o20481[LinkedList$Entry.previous]o20486:0, o18399[LinkedList$Entry.previous]o18396:0, o19555[LinkedList$Entry.previous]o18399:0, o19555[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) :|: o18399[LinkedList$Entry.previous]o18401:0 > 0 && o18401[LinkedList$Entry.previous]o18399:0 > 0 && o20481[LinkedList$Entry.previous]o20486:0 > o18399[LinkedList$Entry.previous]o18401:0 && o18401[LinkedList$Entry.previous]o18396:0 > -1 && o19555[LinkedList$Entry.previous]o18396:0 < o18401[LinkedList$Entry.previous]o18396:0 && o19555[LinkedList$Entry.previous]o18399:0 < o18401[LinkedList$Entry.previous]o18399:0 && i3322:0 > 0 && i4643:0 > 1 && o19555[LinkedList$Entry.previous]o18396:0 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19559sub1313218247:0))), o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20518sub0:0), 1, o20515[LinkedList$Entry.previous]o20512:0, o19559[LinkedList$Entry.previous]o19556:0, o19559[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) :|: o19559[LinkedList$Entry.previous]o18396:0 < o18399[LinkedList$Entry.previous]o18396:0 && o18399[LinkedList$Entry.previous]o18396:0 > -1 && o19559[LinkedList$Entry.previous]o19556:0 < o18399[LinkedList$Entry.previous]o18401:0 && o18399[LinkedList$Entry.previous]o18401:0 > -1 && i3322:0 > 0 && i4643:0 > 1 && o19559[LinkedList$Entry.previous]o18396:0 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o19559sub1313218247:0))), o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o19559sub-357271104:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o20537sub0:0), 1, o20534[LinkedList$Entry.previous]o20531:0, o19559[LinkedList$Entry.previous]o19556:0, o19559[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) :|: o19559[LinkedList$Entry.previous]o18396:0 < o18399[LinkedList$Entry.previous]o18396:0 && o18399[LinkedList$Entry.previous]o18396:0 > -1 && o19559[LinkedList$Entry.previous]o19556:0 < o18399[LinkedList$Entry.previous]o18401:0 && o18399[LinkedList$Entry.previous]o18401:0 > -1 && i3322:0 > 0 && i4643:0 > 1 && o19559[LinkedList$Entry.previous]o18396:0 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o19555sub1313218123:0))), o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18401[LinkedList$Entry.previous]o18399:0, o18401[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o20504sub0:0), o20499[LinkedList$Entry.previous]o20504:0, o18399[LinkedList$Entry.previous]o18396:0, o19555[LinkedList$Entry.previous]o18399:0, o19555[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) :|: o18399[LinkedList$Entry.previous]o18401:0 > 0 && o18401[LinkedList$Entry.previous]o18399:0 > 0 && o18401[LinkedList$Entry.previous]o18396:0 > -1 && o19555[LinkedList$Entry.previous]o18396:0 < o18401[LinkedList$Entry.previous]o18396:0 && o19555[LinkedList$Entry.previous]o18399:0 < o18401[LinkedList$Entry.previous]o18399:0 && o20499[LinkedList$Entry.previous]o20504:0 > o18399[LinkedList$Entry.previous]o18401:0 && i3322:0 > 0 && i4643:0 > 1 && o19555[LinkedList$Entry.previous]o18396:0 > 0

----------------------------------------

(39)
Obligation:
Rules:
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19555sub1313218123:0))), o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18401[LinkedList$Entry.previous]o18399:0, o18401[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20486sub0:0), o20481[LinkedList$Entry.previous]o20486:0, o18399[LinkedList$Entry.previous]o18396:0, o19555[LinkedList$Entry.previous]o18399:0, o19555[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) :|: o18399[LinkedList$Entry.previous]o18401:0 > 0 && o18401[LinkedList$Entry.previous]o18399:0 > 0 && o20481[LinkedList$Entry.previous]o20486:0 > o18399[LinkedList$Entry.previous]o18401:0 && o18401[LinkedList$Entry.previous]o18396:0 > -1 && o19555[LinkedList$Entry.previous]o18396:0 < o18401[LinkedList$Entry.previous]o18396:0 && o19555[LinkedList$Entry.previous]o18399:0 < o18401[LinkedList$Entry.previous]o18399:0 && i3322:0 > 0 && i4643:0 > 1 && o19555[LinkedList$Entry.previous]o18396:0 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x6, x7, x) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(x8), 1, x9, x10, x11, x) :|: x11 < x7 && x7 > -1 && x10 < x6 && x6 > -1 && x12 > 0 && x13 > 1 && x11 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(x15)))))))), java.lang.Object(x16), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x17), java.lang.Object(x18))), x19, x20, x21, x22, x14) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(x15)))))))), java.lang.Object(x16), java.lang.Object(x23), x24, x20, x25, x26, x14) :|: x19 > 0 && x21 > 0 && x24 > x19 && x22 > -1 && x26 < x22 && x25 < x21 && x27 > 0 && x28 > 1 && x26 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x30)))))))))), java.lang.Object(x31), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x32))), x33, x34, x33, x34, x29) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x30)))))))))), java.lang.Object(x31), java.lang.Object(x35), 1, x36, x37, x38, x29) :|: x38 < x34 && x34 > -1 && x37 < x33 && x33 > -1 && x39 > 0 && x40 > 1 && x38 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x41, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x43))), x44, x45, x44, x45, x41) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x41, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x46), 1, x47, x48, x49, x41) :|: x49 < x45 && x45 > -1 && x48 < x44 && x44 > -1 && x50 > 0 && x51 > 1 && x49 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x52, java.lang.Object(x53)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x54))), x55, x56, x57, x58, x52) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x52, java.lang.Object(x53)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x59), x60, x56, x61, x62, x52) :|: x55 > 0 && x57 > 0 && x58 > -1 && x62 < x58 && x61 < x57 && x60 > x55 && x63 > 0 && x64 > 1 && x62 > 0

----------------------------------------

(40) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(41)
Obligation:
Rules:
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19555sub1313218123:0))), o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18401[LinkedList$Entry.previous]o18399:0, o18401[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20486sub0:0), o20481[LinkedList$Entry.previous]o20486:0, o18399[LinkedList$Entry.previous]o18396:0, o19555[LinkedList$Entry.previous]o18399:0, o19555[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) :|: o18399[LinkedList$Entry.previous]o18401:0 > 0 && o18401[LinkedList$Entry.previous]o18399:0 > 0 && o20481[LinkedList$Entry.previous]o20486:0 > o18399[LinkedList$Entry.previous]o18401:0 && o18401[LinkedList$Entry.previous]o18396:0 > -1 && o19555[LinkedList$Entry.previous]o18396:0 < o18401[LinkedList$Entry.previous]o18396:0 && o19555[LinkedList$Entry.previous]o18399:0 < o18401[LinkedList$Entry.previous]o18399:0 && i3322:0 > 0 && i4643:0 > 1 && o19555[LinkedList$Entry.previous]o18396:0 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x6, x7, x) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(x8), 1, x9, x10, x11, x) :|: x11 < x7 && x7 > -1 && x10 < x6 && x6 > -1 && x12 > 0 && x13 > 1 && x11 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(x15)))))))), java.lang.Object(x16), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x17), java.lang.Object(x18))), x19, x20, x21, x22, x14) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(x15)))))))), java.lang.Object(x16), java.lang.Object(x23), x24, x20, x25, x26, x14) :|: x19 > 0 && x21 > 0 && x24 > x19 && x22 > -1 && x26 < x22 && x25 < x21 && x27 > 0 && x28 > 1 && x26 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x30)))))))))), java.lang.Object(x31), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x32))), x33, x34, x33, x34, x29) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x30)))))))))), java.lang.Object(x31), java.lang.Object(x35), 1, x36, x37, x38, x29) :|: x38 < x34 && x34 > -1 && x37 < x33 && x33 > -1 && x39 > 0 && x40 > 1 && x38 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x41, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x43))), x44, x45, x44, x45, x41) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x41, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x46), 1, x47, x48, x49, x41) :|: x49 < x45 && x45 > -1 && x48 < x44 && x44 > -1 && x50 > 0 && x51 > 1 && x49 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x52, java.lang.Object(x53)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x54))), x55, x56, x57, x58, x52) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x52, java.lang.Object(x53)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x59), x60, x56, x61, x62, x52) :|: x55 > 0 && x57 > 0 && x58 > -1 && x62 < x58 && x61 < x57 && x60 > x55 && x63 > 0 && x64 > 1 && x62 > 0

----------------------------------------

(42) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19555sub1313218123:0))), o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18401[LinkedList$Entry.previous]o18399:0, o18401[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20486sub0:0), o20481[LinkedList$Entry.previous]o20486:0, o18399[LinkedList$Entry.previous]o18396:0, o19555[LinkedList$Entry.previous]o18399:0, o19555[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) :|: o18399[LinkedList$Entry.previous]o18401:0 > 0 && o18401[LinkedList$Entry.previous]o18399:0 > 0 && o20481[LinkedList$Entry.previous]o20486:0 > o18399[LinkedList$Entry.previous]o18401:0 && o18401[LinkedList$Entry.previous]o18396:0 > -1 && o19555[LinkedList$Entry.previous]o18396:0 < o18401[LinkedList$Entry.previous]o18396:0 && o19555[LinkedList$Entry.previous]o18399:0 < o18401[LinkedList$Entry.previous]o18399:0 && i3322:0 > 0 && i4643:0 > 1 && o19555[LinkedList$Entry.previous]o18396:0 > 0
(2) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x6, x7, x) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(x8), 1, x9, x10, x11, x) :|: x11 < x7 && x7 > -1 && x10 < x6 && x6 > -1 && x12 > 0 && x13 > 1 && x11 > 0
(3) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(x15)))))))), java.lang.Object(x16), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x17), java.lang.Object(x18))), x19, x20, x21, x22, x14) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(x15)))))))), java.lang.Object(x16), java.lang.Object(x23), x24, x20, x25, x26, x14) :|: x19 > 0 && x21 > 0 && x24 > x19 && x22 > -1 && x26 < x22 && x25 < x21 && x27 > 0 && x28 > 1 && x26 > 0
(4) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x30)))))))))), java.lang.Object(x31), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x32))), x33, x34, x33, x34, x29) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x30)))))))))), java.lang.Object(x31), java.lang.Object(x35), 1, x36, x37, x38, x29) :|: x38 < x34 && x34 > -1 && x37 < x33 && x33 > -1 && x39 > 0 && x40 > 1 && x38 > 0
(5) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x41, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x43))), x44, x45, x44, x45, x41) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x41, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x46), 1, x47, x48, x49, x41) :|: x49 < x45 && x45 > -1 && x48 < x44 && x44 > -1 && x50 > 0 && x51 > 1 && x49 > 0
(6) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x52, java.lang.Object(x53)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x54))), x55, x56, x57, x58, x52) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x52, java.lang.Object(x53)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x59), x60, x56, x61, x62, x52) :|: x55 > 0 && x57 > 0 && x58 > -1 && x62 < x58 && x61 < x57 && x60 > x55 && x63 > 0 && x64 > 1 && x62 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (5), (6)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (3), (4), (6)
(5) -> (1), (2), (3), (5), (6)
(6) -> (1), (2), (3), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(43)
Obligation:

Termination digraph:
Nodes:
(1) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19555sub1313218123:0))), o18399[LinkedList$Entry.previous]o18401:0, o18399[LinkedList$Entry.previous]o18396:0, o18401[LinkedList$Entry.previous]o18399:0, o18401[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0, java.lang.Object(o18399sub-1670489351:0)))))))), java.lang.Object(o18400sub0:0), java.lang.Object(o20486sub0:0), o20481[LinkedList$Entry.previous]o20486:0, o18399[LinkedList$Entry.previous]o18396:0, o19555[LinkedList$Entry.previous]o18399:0, o19555[LinkedList$Entry.previous]o18396:0, o18397-1670489351:0) :|: o18399[LinkedList$Entry.previous]o18401:0 > 0 && o18401[LinkedList$Entry.previous]o18399:0 > 0 && o20481[LinkedList$Entry.previous]o20486:0 > o18399[LinkedList$Entry.previous]o18401:0 && o18401[LinkedList$Entry.previous]o18396:0 > -1 && o19555[LinkedList$Entry.previous]o18396:0 < o18401[LinkedList$Entry.previous]o18396:0 && o19555[LinkedList$Entry.previous]o18399:0 < o18401[LinkedList$Entry.previous]o18399:0 && i3322:0 > 0 && i4643:0 > 1 && o19555[LinkedList$Entry.previous]o18396:0 > 0
(2) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x6, x7, x) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(x8), 1, x9, x10, x11, x) :|: x11 < x7 && x7 > -1 && x10 < x6 && x6 > -1 && x12 > 0 && x13 > 1 && x11 > 0
(3) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(x15)))))))), java.lang.Object(x16), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x17), java.lang.Object(x18))), x19, x20, x21, x22, x14) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(x15)))))))), java.lang.Object(x16), java.lang.Object(x23), x24, x20, x25, x26, x14) :|: x19 > 0 && x21 > 0 && x24 > x19 && x22 > -1 && x26 < x22 && x25 < x21 && x27 > 0 && x28 > 1 && x26 > 0
(4) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x30)))))))))), java.lang.Object(x31), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x32))), x33, x34, x33, x34, x29) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x30)))))))))), java.lang.Object(x31), java.lang.Object(x35), 1, x36, x37, x38, x29) :|: x38 < x34 && x34 > -1 && x37 < x33 && x33 > -1 && x39 > 0 && x40 > 1 && x38 > 0
(5) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x52, java.lang.Object(x53)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x54))), x55, x56, x57, x58, x52) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x52, java.lang.Object(x53)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x59), x60, x56, x61, x62, x52) :|: x55 > 0 && x57 > 0 && x58 > -1 && x62 < x58 && x61 < x57 && x60 > x55 && x63 > 0 && x64 > 1 && x62 > 0
(6) f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x41, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x43))), x44, x45, x44, x45, x41) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x41, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x42)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x46), 1, x47, x48, x49, x41) :|: x49 < x45 && x45 > -1 && x48 < x44 && x44 > -1 && x50 > 0 && x51 > 1 && x49 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (5), (6)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (3), (4), (5)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (2), (3), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(44) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(45)
Obligation:
Rules:
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x30:0)))))))))), java.lang.Object(x31:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x32:0))), x33:0, x34:0, x33:0, x34:0, x29:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x29:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x30:0)))))))))), java.lang.Object(x31:0), java.lang.Object(x35:0), 1, x36:0, x37:0, x38:0, x29:0) :|: x40:0 > 1 && x38:0 > 0 && x39:0 > 0 && x33:0 > -1 && x37:0 < x33:0 && x34:0 > -1 && x38:0 < x34:0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x41:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x42:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x43:0))), x44:0, x45:0, x44:0, x45:0, x41:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x41:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x42:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x46:0), 1, x47:0, x48:0, x49:0, x41:0) :|: x51:0 > 1 && x49:0 > 0 && x50:0 > 0 && x44:0 > -1 && x48:0 < x44:0 && x45:0 > -1 && x49:0 < x45:0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14:0, java.lang.Object(x15:0)))))))), java.lang.Object(x16:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x17:0), java.lang.Object(x18:0))), x19:0, x20:0, x21:0, x22:0, x14:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14:0, java.lang.Object(x15:0)))))))), java.lang.Object(x16:0), java.lang.Object(x23:0), x24:0, x20:0, x25:0, x26:0, x14:0) :|: x28:0 > 1 && x26:0 > 0 && x27:0 > 0 && x25:0 < x21:0 && x26:0 < x22:0 && x22:0 > -1 && x24:0 > x19:0 && x21:0 > 0 && x19:0 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x52:0, java.lang.Object(x53:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x54:0))), x55:0, x56:0, x57:0, x58:0, x52:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x52:0, java.lang.Object(x53:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x59:0), x60:0, x56:0, x61:0, x62:0, x52:0) :|: x64:0 > 1 && x62:0 > 0 && x63:0 > 0 && x60:0 > x55:0 && x61:0 < x57:0 && x62:0 < x58:0 && x58:0 > -1 && x57:0 > 0 && x55:0 > 0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1:0), java.lang.Object(x2:0)))))))))), java.lang.Object(x3:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4:0), java.lang.Object(x5:0))), x6:0, x7:0, x6:0, x7:0, x:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1:0), java.lang.Object(x2:0)))))))))), java.lang.Object(x3:0), java.lang.Object(x8:0), 1, x9:0, x10:0, x11:0, x:0) :|: x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0
f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0:0, java.lang.Object(o18399sub-1670489351:0:0)))))))), java.lang.Object(o18400sub0:0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o19555sub1313218123:0:0))), o18399[LinkedList$Entry.previous]o18401:0:0, o18399[LinkedList$Entry.previous]o18396:0:0, o18401[LinkedList$Entry.previous]o18399:0:0, o18401[LinkedList$Entry.previous]o18396:0:0, o18397-1670489351:0:0) -> f13457_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o18397-1670489351:0:0, java.lang.Object(o18399sub-1670489351:0:0)))))))), java.lang.Object(o18400sub0:0:0), java.lang.Object(o20486sub0:0:0), o20481[LinkedList$Entry.previous]o20486:0:0, o18399[LinkedList$Entry.previous]o18396:0:0, o19555[LinkedList$Entry.previous]o18399:0:0, o19555[LinkedList$Entry.previous]o18396:0:0, o18397-1670489351:0:0) :|: i4643:0:0 > 1 && o19555[LinkedList$Entry.previous]o18396:0:0 > 0 && i3322:0:0 > 0 && o19555[LinkedList$Entry.previous]o18399:0:0 < o18401[LinkedList$Entry.previous]o18399:0:0 && o19555[LinkedList$Entry.previous]o18396:0:0 < o18401[LinkedList$Entry.previous]o18396:0:0 && o18401[LinkedList$Entry.previous]o18396:0:0 > -1 && o20481[LinkedList$Entry.previous]o20486:0:0 > o18399[LinkedList$Entry.previous]o18401:0:0 && o18401[LinkedList$Entry.previous]o18399:0:0 > 0 && o18399[LinkedList$Entry.previous]o18401:0:0 > 0

----------------------------------------

(46) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13457_0_removeLastOccurrence_EQ(VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
NULL()
javaUtilEx.Content()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(47)
Obligation:
Rules:
f13457_0_removeLastOccurrence_EQ(c, c1, c2, x33:0, x34:0, x33:0, x34:0, x29:0) -> f13457_0_removeLastOccurrence_EQ(c3, c4, c5, c6, x36:0, x37:0, x38:0, x29:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x40:0 > 1 && x38:0 > 0 && x39:0 > 0 && x33:0 > -1 && x37:0 < x33:0 && x34:0 > -1 && x38:0 < x34:0)
f13457_0_removeLastOccurrence_EQ(c14, c15, c16, x19:0, x20:0, x21:0, x22:0, x14:0) -> f13457_0_removeLastOccurrence_EQ(c17, c18, c19, x24:0, x20:0, x25:0, x26:0, x14:0) :|: c19 = 0 && (c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)))) && (x28:0 > 1 && x26:0 > 0 && x27:0 > 0 && x25:0 < x21:0 && x26:0 < x22:0 && x22:0 > -1 && x24:0 > x19:0 && x21:0 > 0 && x19:0 > 0)
f13457_0_removeLastOccurrence_EQ(c20, c21, c22, x55:0, x56:0, x57:0, x58:0, x52:0) -> f13457_0_removeLastOccurrence_EQ(c23, c24, c25, x60:0, x56:0, x61:0, x62:0, x52:0) :|: c25 = 0 && (c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && c20 = 0)))) && (x64:0 > 1 && x62:0 > 0 && x63:0 > 0 && x60:0 > x55:0 && x61:0 < x57:0 && x62:0 < x58:0 && x58:0 > -1 && x57:0 > 0 && x55:0 > 0)
f13457_0_removeLastOccurrence_EQ(c26, c27, c28, x6:0, x7:0, x6:0, x7:0, x:0) -> f13457_0_removeLastOccurrence_EQ(c29, c30, c31, c32, x9:0, x10:0, x11:0, x:0) :|: c32 = 1 && (c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0))))) && (x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0)

----------------------------------------

(48) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13457_0_removeLastOccurrence_EQ(x, x1, x2, x3, x4, x5, x6, x7)] = -1 + c*x + c1*x1 + c2*x2 + 2*x5

The following rules are decreasing:
f13457_0_removeLastOccurrence_EQ(c, c1, c2, x33:0, x34:0, x33:0, x34:0, x29:0) -> f13457_0_removeLastOccurrence_EQ(c3, c4, c5, c6, x36:0, x37:0, x38:0, x29:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x40:0 > 1 && x38:0 > 0 && x39:0 > 0 && x33:0 > -1 && x37:0 < x33:0 && x34:0 > -1 && x38:0 < x34:0)
f13457_0_removeLastOccurrence_EQ(c14, c15, c16, x19:0, x20:0, x21:0, x22:0, x14:0) -> f13457_0_removeLastOccurrence_EQ(c17, c18, c19, x24:0, x20:0, x25:0, x26:0, x14:0) :|: c19 = 0 && (c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)))) && (x28:0 > 1 && x26:0 > 0 && x27:0 > 0 && x25:0 < x21:0 && x26:0 < x22:0 && x22:0 > -1 && x24:0 > x19:0 && x21:0 > 0 && x19:0 > 0)
f13457_0_removeLastOccurrence_EQ(c20, c21, c22, x55:0, x56:0, x57:0, x58:0, x52:0) -> f13457_0_removeLastOccurrence_EQ(c23, c24, c25, x60:0, x56:0, x61:0, x62:0, x52:0) :|: c25 = 0 && (c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && c20 = 0)))) && (x64:0 > 1 && x62:0 > 0 && x63:0 > 0 && x60:0 > x55:0 && x61:0 < x57:0 && x62:0 < x58:0 && x58:0 > -1 && x57:0 > 0 && x55:0 > 0)
f13457_0_removeLastOccurrence_EQ(c26, c27, c28, x6:0, x7:0, x6:0, x7:0, x:0) -> f13457_0_removeLastOccurrence_EQ(c29, c30, c31, c32, x9:0, x10:0, x11:0, x:0) :|: c32 = 1 && (c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0))))) && (x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0)
The following rules are bounded:
f13457_0_removeLastOccurrence_EQ(c14, c15, c16, x19:0, x20:0, x21:0, x22:0, x14:0) -> f13457_0_removeLastOccurrence_EQ(c17, c18, c19, x24:0, x20:0, x25:0, x26:0, x14:0) :|: c19 = 0 && (c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)))) && (x28:0 > 1 && x26:0 > 0 && x27:0 > 0 && x25:0 < x21:0 && x26:0 < x22:0 && x22:0 > -1 && x24:0 > x19:0 && x21:0 > 0 && x19:0 > 0)
f13457_0_removeLastOccurrence_EQ(c20, c21, c22, x55:0, x56:0, x57:0, x58:0, x52:0) -> f13457_0_removeLastOccurrence_EQ(c23, c24, c25, x60:0, x56:0, x61:0, x62:0, x52:0) :|: c25 = 0 && (c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && c20 = 0)))) && (x64:0 > 1 && x62:0 > 0 && x63:0 > 0 && x60:0 > x55:0 && x61:0 < x57:0 && x62:0 < x58:0 && x58:0 > -1 && x57:0 > 0 && x55:0 > 0)

----------------------------------------

(49)
Obligation:
Rules:
f13457_0_removeLastOccurrence_EQ(c, c1, c2, x33:0, x34:0, x33:0, x34:0, x29:0) -> f13457_0_removeLastOccurrence_EQ(c3, c4, c5, c6, x36:0, x37:0, x38:0, x29:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x40:0 > 1 && x38:0 > 0 && x39:0 > 0 && x33:0 > -1 && x37:0 < x33:0 && x34:0 > -1 && x38:0 < x34:0)
f13457_0_removeLastOccurrence_EQ(c26, c27, c28, x6:0, x7:0, x6:0, x7:0, x:0) -> f13457_0_removeLastOccurrence_EQ(c29, c30, c31, c32, x9:0, x10:0, x11:0, x:0) :|: c32 = 1 && (c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0))))) && (x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0)

----------------------------------------

(50) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13457_0_removeLastOccurrence_EQ(x, x1, x2, x3, x4, x5, x6, x7)] = c*x + c1*x1 + c2*x2 + x5

The following rules are decreasing:
f13457_0_removeLastOccurrence_EQ(c, c1, c2, x33:0, x34:0, x33:0, x34:0, x29:0) -> f13457_0_removeLastOccurrence_EQ(c3, c4, c5, c6, x36:0, x37:0, x38:0, x29:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x40:0 > 1 && x38:0 > 0 && x39:0 > 0 && x33:0 > -1 && x37:0 < x33:0 && x34:0 > -1 && x38:0 < x34:0)
f13457_0_removeLastOccurrence_EQ(c26, c27, c28, x6:0, x7:0, x6:0, x7:0, x:0) -> f13457_0_removeLastOccurrence_EQ(c29, c30, c31, c32, x9:0, x10:0, x11:0, x:0) :|: c32 = 1 && (c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0))))) && (x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0)
The following rules are bounded:
f13457_0_removeLastOccurrence_EQ(c, c1, c2, x33:0, x34:0, x33:0, x34:0, x29:0) -> f13457_0_removeLastOccurrence_EQ(c3, c4, c5, c6, x36:0, x37:0, x38:0, x29:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x40:0 > 1 && x38:0 > 0 && x39:0 > 0 && x33:0 > -1 && x37:0 < x33:0 && x34:0 > -1 && x38:0 < x34:0)
f13457_0_removeLastOccurrence_EQ(c26, c27, c28, x6:0, x7:0, x6:0, x7:0, x:0) -> f13457_0_removeLastOccurrence_EQ(c29, c30, c31, c32, x9:0, x10:0, x11:0, x:0) :|: c32 = 1 && (c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && (c27 = 0 && c26 = 0))))) && (x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0)

----------------------------------------

(51)
YES

----------------------------------------

(52)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveLastOccurrence.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, previous]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(53) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 26 IRulesP rules:
f13186_0_removeLastOccurrence_EQ(EOS(STATIC_13186), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), java.lang.Object(o16591sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165891310450629, java.lang.Object(o16590sub1310450629))), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590, o16591[LinkedList$Entry.previous]o16588) -> f13207_0_removeLastOccurrence_Load(EOS(STATIC_13207), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590, o16591[LinkedList$Entry.previous]o16588) :|: TRUE
f13207_0_removeLastOccurrence_Load(EOS(STATIC_13207), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590, o16591[LinkedList$Entry.previous]o16588) -> f13227_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13227), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), java.lang.Object(o16591sub0), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590, o16591[LinkedList$Entry.previous]o16588) :|: TRUE
f13227_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13227), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), java.lang.Object(o16591sub0), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590, o16591[LinkedList$Entry.previous]o16588) -> f13248_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13248), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), java.lang.Object(o16591sub0), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590) :|: o16590[LinkedList$Entry.previous]o16591 > 0 && o16591[LinkedList$Entry.previous]o16590 > 0
f13227_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13227), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o17150sub-1674066069)))))))), java.lang.Object(o17150sub0), java.lang.Object(o17150sub0), o17150[LinkedList$Entry.previous]o17150, o17150[LinkedList$Entry.previous]o16588, o17150[LinkedList$Entry.previous]o17150, o17150[LinkedList$Entry.previous]o16588) -> f13249_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13249), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o17150sub-1674066069)))))))), java.lang.Object(o17150sub0), java.lang.Object(o17150sub0), o17150[LinkedList$Entry.previous]o16588, o17150[LinkedList$Entry.previous]o17150) :|: TRUE
f13248_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13248), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172691311282855, java.lang.Object(o17271sub1311282855))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172691311282855, java.lang.Object(o17271sub1311282855))), o16590[LinkedList$Entry.previous]o17268, o16590[LinkedList$Entry.previous]o16588, o17268[LinkedList$Entry.previous]o16588, o17268[LinkedList$Entry.previous]o16590) -> f13263_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13263), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172691311282855, java.lang.Object(o17271sub1311282855))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172691311282855, java.lang.Object(o17271sub1311282855))), o16590[LinkedList$Entry.previous]o16588, o16590[LinkedList$Entry.previous]o17268, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590) :|: o17271[LinkedList$Entry.previous]o16588 < o17268[LinkedList$Entry.previous]o16588 && o17268[LinkedList$Entry.previous]o16588 >= 0 && o17271[LinkedList$Entry.previous]o16590 < o17268[LinkedList$Entry.previous]o16590 && o17268[LinkedList$Entry.previous]o16590 >= 0
f13263_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13263), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172691311282855, java.lang.Object(o17271sub1311282855))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172691311282855, java.lang.Object(o17271sub1311282855))), o16590[LinkedList$Entry.previous]o16588, o16590[LinkedList$Entry.previous]o17268, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590) -> f13282_0_removeLastOccurrence_NONNULL(EOS(STATIC_13282), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172691311282855, java.lang.Object(o17271sub1311282855))), o172690, o16590[LinkedList$Entry.previous]o16588, o16590[LinkedList$Entry.previous]o17268, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590) :|: TRUE
f13282_0_removeLastOccurrence_NONNULL(EOS(STATIC_13282), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17722sub1311282855), java.lang.Object(o17271sub1311282855))), java.lang.Object(o17722sub0), o16590[LinkedList$Entry.previous]o16588, o16590[LinkedList$Entry.previous]o17268, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590) -> f13304_0_removeLastOccurrence_NONNULL(EOS(STATIC_13304), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17722sub1311282855), java.lang.Object(o17271sub1311282855))), java.lang.Object(o17722sub0), o16590[LinkedList$Entry.previous]o16588, o16590[LinkedList$Entry.previous]o17268, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590) :|: TRUE
f13304_0_removeLastOccurrence_NONNULL(EOS(STATIC_13304), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17722sub1311282855), java.lang.Object(o17271sub1311282855))), java.lang.Object(o17722sub0), o16590[LinkedList$Entry.previous]o16588, o16590[LinkedList$Entry.previous]o17268, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590) -> f13322_0_removeLastOccurrence_Load(EOS(STATIC_13322), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17722sub1311282855), java.lang.Object(o17271sub1311282855))), o16590[LinkedList$Entry.previous]o16588, o16590[LinkedList$Entry.previous]o17268, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590) :|: TRUE
f13322_0_removeLastOccurrence_Load(EOS(STATIC_13322), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17722sub1311282855), java.lang.Object(o17271sub1311282855))), o16590[LinkedList$Entry.previous]o16588, o16590[LinkedList$Entry.previous]o17268, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590) -> f13341_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13341), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17722sub1311282855), java.lang.Object(o17271sub1311282855))), o16590[LinkedList$Entry.previous]o16588, o16590[LinkedList$Entry.previous]o17268, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590) :|: TRUE
f13341_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13341), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17722sub1311282855), java.lang.Object(o17271sub1311282855))), o16590[LinkedList$Entry.previous]o16588, o16590[LinkedList$Entry.previous]o17268, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590) -> f13358_0_removeLastOccurrence_Store(EOS(STATIC_13358), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o17271sub0), o16590[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590, o16590[LinkedList$Entry.previous]o17271) :|: o16590[LinkedList$Entry.previous]o17271 > o16590[LinkedList$Entry.previous]o17268 && o16590[LinkedList$Entry.previous]o17268 >= 0
f13358_0_removeLastOccurrence_Store(EOS(STATIC_13358), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o17271sub0), o16590[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590, o16590[LinkedList$Entry.previous]o17271) -> f13376_0_removeLastOccurrence_JMP(EOS(STATIC_13376), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o17271sub0), o16590[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590, o16590[LinkedList$Entry.previous]o17271) :|: TRUE
f13376_0_removeLastOccurrence_JMP(EOS(STATIC_13376), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o17271sub0), o16590[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590, o16590[LinkedList$Entry.previous]o17271) -> f13392_0_removeLastOccurrence_Load(EOS(STATIC_13392), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o17271sub0), o16590[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590, o16590[LinkedList$Entry.previous]o17271) :|: TRUE
f13392_0_removeLastOccurrence_Load(EOS(STATIC_13392), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o17271sub0), o16590[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590, o16590[LinkedList$Entry.previous]o17271) -> f13129_0_removeLastOccurrence_Load(EOS(STATIC_13129), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o17271sub0), o16590[LinkedList$Entry.previous]o17271, o16590[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16588, o17271[LinkedList$Entry.previous]o16590) :|: TRUE
f13129_0_removeLastOccurrence_Load(EOS(STATIC_13129), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590) -> f13140_0_removeLastOccurrence_Load(EOS(STATIC_13140), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), java.lang.Object(o16591sub0), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590) :|: TRUE
f13140_0_removeLastOccurrence_Load(EOS(STATIC_13140), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), java.lang.Object(o16591sub0), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590) -> f13153_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13153), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), java.lang.Object(o16591sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590) :|: TRUE
f13153_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13153), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), java.lang.Object(o16591sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590) -> f13168_0_removeLastOccurrence_EQ(EOS(STATIC_13168), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), java.lang.Object(o16591sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165891310450629, java.lang.Object(o16590sub1310450629))), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590) :|: TRUE
f13168_0_removeLastOccurrence_EQ(EOS(STATIC_13168), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), java.lang.Object(o16591sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165891310450629, java.lang.Object(o16590sub1310450629))), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590) -> f13186_0_removeLastOccurrence_EQ(EOS(STATIC_13186), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(o16590sub-1674066069)))))))), java.lang.Object(o16591sub0), java.lang.Object(o16591sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165891310450629, java.lang.Object(o16590sub1310450629))), o16590[LinkedList$Entry.previous]o16591, o16590[LinkedList$Entry.previous]o16588, o16591[LinkedList$Entry.previous]o16590, o16591[LinkedList$Entry.previous]o16588) :|: o16591[LinkedList$Entry.previous]o16588 > 0
f13249_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13249), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17273-362782439, java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172731311283630, java.lang.Object(o17275sub1311283630))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172731311283630, java.lang.Object(o17275sub1311283630))), o17272[LinkedList$Entry.previous]o16588, o17272[LinkedList$Entry.previous]o17272) -> f13264_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13264), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17273-362782439, java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172731311283630, java.lang.Object(o17275sub1311283630))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172731311283630, java.lang.Object(o17275sub1311283630))), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) :|: o17275[LinkedList$Entry.previous]o16588 < o17272[LinkedList$Entry.previous]o16588 && o17272[LinkedList$Entry.previous]o16588 >= 0 && o17275[LinkedList$Entry.previous]o17272 < o17272[LinkedList$Entry.previous]o17272 && o17272[LinkedList$Entry.previous]o17272 >= 0
f13264_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13264), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17273-362782439, java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172731311283630, java.lang.Object(o17275sub1311283630))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172731311283630, java.lang.Object(o17275sub1311283630))), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) -> f13283_0_removeLastOccurrence_NONNULL(EOS(STATIC_13283), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17273-362782439, java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172731311283630, java.lang.Object(o17275sub1311283630))), o172730, o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) :|: TRUE
f13283_0_removeLastOccurrence_NONNULL(EOS(STATIC_13283), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub1311283630), java.lang.Object(o17275sub1311283630))), java.lang.Object(o17723sub0), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) -> f13306_0_removeLastOccurrence_NONNULL(EOS(STATIC_13306), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub1311283630), java.lang.Object(o17275sub1311283630))), java.lang.Object(o17723sub0), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) :|: TRUE
f13306_0_removeLastOccurrence_NONNULL(EOS(STATIC_13306), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub1311283630), java.lang.Object(o17275sub1311283630))), java.lang.Object(o17723sub0), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) -> f13324_0_removeLastOccurrence_Load(EOS(STATIC_13324), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub1311283630), java.lang.Object(o17275sub1311283630))), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) :|: TRUE
f13324_0_removeLastOccurrence_Load(EOS(STATIC_13324), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub1311283630), java.lang.Object(o17275sub1311283630))), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) -> f13343_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13343), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub1311283630), java.lang.Object(o17275sub1311283630))), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) :|: TRUE
f13343_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13343), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub1311283630), java.lang.Object(o17275sub1311283630))), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) -> f13360_0_removeLastOccurrence_Store(EOS(STATIC_13360), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(o17275sub0), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) :|: TRUE
f13360_0_removeLastOccurrence_Store(EOS(STATIC_13360), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(o17275sub0), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) -> f13378_0_removeLastOccurrence_JMP(EOS(STATIC_13378), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(o17275sub0), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) :|: TRUE
f13378_0_removeLastOccurrence_JMP(EOS(STATIC_13378), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(o17275sub0), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) -> f13393_0_removeLastOccurrence_Load(EOS(STATIC_13393), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(o17275sub0), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) :|: TRUE
f13393_0_removeLastOccurrence_Load(EOS(STATIC_13393), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(o17275sub0), o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) -> f13129_0_removeLastOccurrence_Load(EOS(STATIC_13129), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439), java.lang.Object(o17275sub-362782439)))))))))), java.lang.Object(o17275sub0), o17272[LinkedList$Entry.previous]o17275, o17272[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o16588, o17275[LinkedList$Entry.previous]o17272) :|: o17272[LinkedList$Entry.previous]o17275 = 1
Combined rules. Obtained 2 IRulesP rules:
f13186_0_removeLastOccurrence_EQ(EOS(STATIC_13186), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub1311283630:0), java.lang.Object(o17275sub1311283630:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub1311283630:0), java.lang.Object(o17275sub1311283630:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165891310450629:0, java.lang.Object(o16590sub1310450629:0))), o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0) -> f13186_0_removeLastOccurrence_EQ(EOS(STATIC_13186), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(o17275sub0:0), java.lang.Object(o17275sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165891310450629:1, java.lang.Object(o16590sub1310450629:1))), 1, o17272[LinkedList$Entry.previous]o16588:0, o17275[LinkedList$Entry.previous]o17272:0, o17275[LinkedList$Entry.previous]o16588:0) :|: o16590[LinkedList$Entry.previous]o16588:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0 < o16590[LinkedList$Entry.previous]o16588:0 && o17275[LinkedList$Entry.previous]o17272:0 < o16590[LinkedList$Entry.previous]o16591:0 && o17275[LinkedList$Entry.previous]o16588:0 > 0 && o16590[LinkedList$Entry.previous]o16591:0 > -1
f13186_0_removeLastOccurrence_EQ(EOS(STATIC_13186), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069:0, java.lang.Object(o16590sub-1674066069:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17722sub1311282855:0), java.lang.Object(o17271sub1311282855:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17722sub1311282855:0), java.lang.Object(o17271sub1311282855:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165891310450629:0, java.lang.Object(o16590sub1310450629:0))), o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16591[LinkedList$Entry.previous]o16590:0, o16591[LinkedList$Entry.previous]o16588:0) -> f13186_0_removeLastOccurrence_EQ(EOS(STATIC_13186), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16589-1674066069:0, java.lang.Object(o16590sub-1674066069:0)))))))), java.lang.Object(o17271sub0:0), java.lang.Object(o17271sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165891310450629:1, java.lang.Object(o16590sub1310450629:1))), o16590[LinkedList$Entry.previous]o17271:0, o16590[LinkedList$Entry.previous]o16588:0, o17271[LinkedList$Entry.previous]o16590:0, o17271[LinkedList$Entry.previous]o16588:0) :|: o16591[LinkedList$Entry.previous]o16590:0 > 0 && o16590[LinkedList$Entry.previous]o16591:0 > 0 && o16591[LinkedList$Entry.previous]o16588:0 > -1 && o17271[LinkedList$Entry.previous]o16588:0 < o16591[LinkedList$Entry.previous]o16588:0 && o17271[LinkedList$Entry.previous]o16590:0 < o16591[LinkedList$Entry.previous]o16590:0 && o17271[LinkedList$Entry.previous]o16588:0 > 0 && o16590[LinkedList$Entry.previous]o17271:0 > o16590[LinkedList$Entry.previous]o16591:0
Filtered constant ground arguments:
   f13186_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13186_0_removeLastOccurrence_EQ(x2, x3, x4, x5, x6, x7, x8, x9)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13186_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f13186_0_removeLastOccurrence_EQ(x1, x3, x4, x5, x6, x7, x8)
Filtered unneeded arguments:
   f13186_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7) -> f13186_0_removeLastOccurrence_EQ(x1, x2, x4, x5, x6, x7)
Finished conversion. Obtained 2 rules.P rules:
f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub1311283630:0), java.lang.Object(o17275sub1311283630:0))), o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(o17275sub0:0), 1, o17272[LinkedList$Entry.previous]o16588:0, o17275[LinkedList$Entry.previous]o17272:0, o17275[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) :|: o17275[LinkedList$Entry.previous]o16588:0 < o16590[LinkedList$Entry.previous]o16588:0 && o16590[LinkedList$Entry.previous]o16588:0 > -1 && o17275[LinkedList$Entry.previous]o17272:0 < o16590[LinkedList$Entry.previous]o16591:0 && o16590[LinkedList$Entry.previous]o16591:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0 > 0
f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(o16590sub-1674066069:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17722sub1311282855:0), java.lang.Object(o17271sub1311282855:0))), o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16591[LinkedList$Entry.previous]o16590:0, o16591[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(o16590sub-1674066069:0)))))))), java.lang.Object(o17271sub0:0), o16590[LinkedList$Entry.previous]o17271:0, o16590[LinkedList$Entry.previous]o16588:0, o17271[LinkedList$Entry.previous]o16590:0, o17271[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) :|: o16590[LinkedList$Entry.previous]o16591:0 > 0 && o16591[LinkedList$Entry.previous]o16590:0 > 0 && o16591[LinkedList$Entry.previous]o16588:0 > -1 && o17271[LinkedList$Entry.previous]o16588:0 < o16591[LinkedList$Entry.previous]o16588:0 && o17271[LinkedList$Entry.previous]o16590:0 < o16591[LinkedList$Entry.previous]o16590:0 && o16590[LinkedList$Entry.previous]o17271:0 > o16590[LinkedList$Entry.previous]o16591:0 && o17271[LinkedList$Entry.previous]o16588:0 > 0

----------------------------------------

(54)
Obligation:
Rules:
f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub1311283630:0), java.lang.Object(o17275sub1311283630:0))), o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(o17275sub0:0), 1, o17272[LinkedList$Entry.previous]o16588:0, o17275[LinkedList$Entry.previous]o17272:0, o17275[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) :|: o17275[LinkedList$Entry.previous]o16588:0 < o16590[LinkedList$Entry.previous]o16588:0 && o16590[LinkedList$Entry.previous]o16588:0 > -1 && o17275[LinkedList$Entry.previous]o17272:0 < o16590[LinkedList$Entry.previous]o16591:0 && o16590[LinkedList$Entry.previous]o16591:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0 > 0
f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

----------------------------------------

(55) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(56)
Obligation:
Rules:
f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub1311283630:0), java.lang.Object(o17275sub1311283630:0))), o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(o17275sub0:0), 1, o17272[LinkedList$Entry.previous]o16588:0, o17275[LinkedList$Entry.previous]o17272:0, o17275[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) :|: o17275[LinkedList$Entry.previous]o16588:0 < o16590[LinkedList$Entry.previous]o16588:0 && o16590[LinkedList$Entry.previous]o16588:0 > -1 && o17275[LinkedList$Entry.previous]o17272:0 < o16590[LinkedList$Entry.previous]o16591:0 && o16590[LinkedList$Entry.previous]o16591:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0 > 0
f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

----------------------------------------

(57) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub1311283630:0), java.lang.Object(o17275sub1311283630:0))), o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(o17275sub0:0), 1, o17272[LinkedList$Entry.previous]o16588:0, o17275[LinkedList$Entry.previous]o17272:0, o17275[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) :|: o17275[LinkedList$Entry.previous]o16588:0 < o16590[LinkedList$Entry.previous]o16588:0 && o16590[LinkedList$Entry.previous]o16588:0 > -1 && o17275[LinkedList$Entry.previous]o17272:0 < o16590[LinkedList$Entry.previous]o16591:0 && o16590[LinkedList$Entry.previous]o16591:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0 > 0
(2) f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(58)
Obligation:

Termination digraph:
Nodes:
(1) f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub1311283630:0), java.lang.Object(o17275sub1311283630:0))), o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16590[LinkedList$Entry.previous]o16591:0, o16590[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0), java.lang.Object(o17275sub-362782439:0)))))))))), java.lang.Object(o17275sub0:0), 1, o17272[LinkedList$Entry.previous]o16588:0, o17275[LinkedList$Entry.previous]o17272:0, o17275[LinkedList$Entry.previous]o16588:0, o16589-1674066069:0) :|: o17275[LinkedList$Entry.previous]o16588:0 < o16590[LinkedList$Entry.previous]o16588:0 && o16590[LinkedList$Entry.previous]o16588:0 > -1 && o17275[LinkedList$Entry.previous]o17272:0 < o16590[LinkedList$Entry.previous]o16591:0 && o16590[LinkedList$Entry.previous]o16591:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0 > 0
(2) f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(59) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(60)
Obligation:
Rules:
f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0:0), java.lang.Object(o17275sub-362782439:0:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub1311283630:0:0), java.lang.Object(o17275sub1311283630:0:0))), o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16589-1674066069:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17723sub-362782439:0:0), java.lang.Object(o17275sub-362782439:0:0)))))))))), java.lang.Object(o17275sub0:0:0), 1, o17272[LinkedList$Entry.previous]o16588:0:0, o17275[LinkedList$Entry.previous]o17272:0:0, o17275[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) :|: o16590[LinkedList$Entry.previous]o16591:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 > 0 && o17275[LinkedList$Entry.previous]o17272:0:0 < o16590[LinkedList$Entry.previous]o16591:0:0 && o16590[LinkedList$Entry.previous]o16588:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 < o16590[LinkedList$Entry.previous]o16588:0:0
f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2:0), java.lang.Object(x3:0))), x4:0, x5:0, x6:0, x7:0, x:0) -> f13186_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x8:0), x9:0, x5:0, x10:0, x11:0, x:0) :|: x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0

----------------------------------------

(61) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13186_0_removeLastOccurrence_EQ(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(62)
Obligation:
Rules:
f13186_0_removeLastOccurrence_EQ(c, c1, o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) -> f13186_0_removeLastOccurrence_EQ(c2, c3, c4, o17272[LinkedList$Entry.previous]o16588:0:0, o17275[LinkedList$Entry.previous]o17272:0:0, o17275[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o16590[LinkedList$Entry.previous]o16591:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 > 0 && o17275[LinkedList$Entry.previous]o17272:0:0 < o16590[LinkedList$Entry.previous]o16591:0:0 && o16590[LinkedList$Entry.previous]o16588:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 < o16590[LinkedList$Entry.previous]o16588:0:0)
f13186_0_removeLastOccurrence_EQ(c5, c6, x4:0, x5:0, x6:0, x7:0, x:0) -> f13186_0_removeLastOccurrence_EQ(c7, c8, x9:0, x5:0, x10:0, x11:0, x:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0)

----------------------------------------

(63) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13186_0_removeLastOccurrence_EQ(x, x1, x2, x3, x4, x5, x6)] = -1 + c*x + c1*x1 + 2*x4

The following rules are decreasing:
f13186_0_removeLastOccurrence_EQ(c, c1, o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) -> f13186_0_removeLastOccurrence_EQ(c2, c3, c4, o17272[LinkedList$Entry.previous]o16588:0:0, o17275[LinkedList$Entry.previous]o17272:0:0, o17275[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o16590[LinkedList$Entry.previous]o16591:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 > 0 && o17275[LinkedList$Entry.previous]o17272:0:0 < o16590[LinkedList$Entry.previous]o16591:0:0 && o16590[LinkedList$Entry.previous]o16588:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 < o16590[LinkedList$Entry.previous]o16588:0:0)
f13186_0_removeLastOccurrence_EQ(c5, c6, x4:0, x5:0, x6:0, x7:0, x:0) -> f13186_0_removeLastOccurrence_EQ(c7, c8, x9:0, x5:0, x10:0, x11:0, x:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0)
The following rules are bounded:
f13186_0_removeLastOccurrence_EQ(c5, c6, x4:0, x5:0, x6:0, x7:0, x:0) -> f13186_0_removeLastOccurrence_EQ(c7, c8, x9:0, x5:0, x10:0, x11:0, x:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0)

----------------------------------------

(64)
Obligation:
Rules:
f13186_0_removeLastOccurrence_EQ(c, c1, o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) -> f13186_0_removeLastOccurrence_EQ(c2, c3, c4, o17272[LinkedList$Entry.previous]o16588:0:0, o17275[LinkedList$Entry.previous]o17272:0:0, o17275[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o16590[LinkedList$Entry.previous]o16591:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 > 0 && o17275[LinkedList$Entry.previous]o17272:0:0 < o16590[LinkedList$Entry.previous]o16591:0:0 && o16590[LinkedList$Entry.previous]o16588:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 < o16590[LinkedList$Entry.previous]o16588:0:0)

----------------------------------------

(65) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13186_0_removeLastOccurrence_EQ(x, x1, x2, x3, x4, x5, x6)] = c*x + c1*x1 + x5

The following rules are decreasing:
f13186_0_removeLastOccurrence_EQ(c, c1, o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) -> f13186_0_removeLastOccurrence_EQ(c2, c3, c4, o17272[LinkedList$Entry.previous]o16588:0:0, o17275[LinkedList$Entry.previous]o17272:0:0, o17275[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o16590[LinkedList$Entry.previous]o16591:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 > 0 && o17275[LinkedList$Entry.previous]o17272:0:0 < o16590[LinkedList$Entry.previous]o16591:0:0 && o16590[LinkedList$Entry.previous]o16588:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 < o16590[LinkedList$Entry.previous]o16588:0:0)
The following rules are bounded:
f13186_0_removeLastOccurrence_EQ(c, c1, o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16590[LinkedList$Entry.previous]o16591:0:0, o16590[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) -> f13186_0_removeLastOccurrence_EQ(c2, c3, c4, o17272[LinkedList$Entry.previous]o16588:0:0, o17275[LinkedList$Entry.previous]o17272:0:0, o17275[LinkedList$Entry.previous]o16588:0:0, o16589-1674066069:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o16590[LinkedList$Entry.previous]o16591:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 > 0 && o17275[LinkedList$Entry.previous]o17272:0:0 < o16590[LinkedList$Entry.previous]o16591:0:0 && o16590[LinkedList$Entry.previous]o16588:0:0 > -1 && o17275[LinkedList$Entry.previous]o16588:0:0 < o16590[LinkedList$Entry.previous]o16588:0:0)

----------------------------------------

(66)
YES

----------------------------------------

(67)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveLastOccurrence.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, previous]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(68) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 26 IRulesP rules:
f13184_0_removeLastOccurrence_EQ(EOS(STATIC_13184), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), java.lang.Object(o16528sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165251310444739, java.lang.Object(o16527sub1310444739))), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527, o16528[LinkedList$Entry.previous]o16524) -> f13205_0_removeLastOccurrence_Load(EOS(STATIC_13205), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527, o16528[LinkedList$Entry.previous]o16524) :|: TRUE
f13205_0_removeLastOccurrence_Load(EOS(STATIC_13205), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527, o16528[LinkedList$Entry.previous]o16524) -> f13226_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13226), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), java.lang.Object(o16528sub0), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527, o16528[LinkedList$Entry.previous]o16524) :|: TRUE
f13226_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13226), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), java.lang.Object(o16528sub0), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527, o16528[LinkedList$Entry.previous]o16524) -> f13246_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13246), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), java.lang.Object(o16528sub0), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527) :|: o16527[LinkedList$Entry.previous]o16528 > 0 && o16528[LinkedList$Entry.previous]o16527 > 0
f13226_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13226), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o17147sub-1674077849)))))))), java.lang.Object(o17147sub0), java.lang.Object(o17147sub0), o17147[LinkedList$Entry.previous]o17147, o16526[LinkedList$Entry.next]o16524, o17147[LinkedList$Entry.previous]o16524, o17147[LinkedList$Entry.previous]o17147, o17147[LinkedList$Entry.previous]o16524) -> f13247_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13247), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o17147sub-1674077849)))))))), java.lang.Object(o17147sub0), java.lang.Object(o17147sub0), o16526[LinkedList$Entry.next]o16524, o17147[LinkedList$Entry.previous]o16524, o17147[LinkedList$Entry.previous]o17147) :|: TRUE
f13246_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13246), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172611311282607, java.lang.Object(o17263sub1311282607))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172611311282607, java.lang.Object(o17263sub1311282607))), o16527[LinkedList$Entry.previous]o17260, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o17260[LinkedList$Entry.previous]o16524, o17260[LinkedList$Entry.previous]o16527) -> f13261_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13261), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172611311282607, java.lang.Object(o17263sub1311282607))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172611311282607, java.lang.Object(o17263sub1311282607))), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16527[LinkedList$Entry.previous]o17260, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527) :|: o17263[LinkedList$Entry.previous]o16524 < o17260[LinkedList$Entry.previous]o16524 && o17260[LinkedList$Entry.previous]o16524 >= 0 && o17263[LinkedList$Entry.previous]o16527 < o17260[LinkedList$Entry.previous]o16527 && o17260[LinkedList$Entry.previous]o16527 >= 0
f13261_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13261), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172611311282607, java.lang.Object(o17263sub1311282607))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172611311282607, java.lang.Object(o17263sub1311282607))), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16527[LinkedList$Entry.previous]o17260, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527) -> f13280_0_removeLastOccurrence_NONNULL(EOS(STATIC_13280), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172611311282607, java.lang.Object(o17263sub1311282607))), o172610, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16527[LinkedList$Entry.previous]o17260, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527) :|: TRUE
f13280_0_removeLastOccurrence_NONNULL(EOS(STATIC_13280), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17720sub1311282607), java.lang.Object(o17263sub1311282607))), java.lang.Object(o17720sub0), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16527[LinkedList$Entry.previous]o17260, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527) -> f13300_0_removeLastOccurrence_NONNULL(EOS(STATIC_13300), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17720sub1311282607), java.lang.Object(o17263sub1311282607))), java.lang.Object(o17720sub0), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16527[LinkedList$Entry.previous]o17260, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527) :|: TRUE
f13300_0_removeLastOccurrence_NONNULL(EOS(STATIC_13300), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17720sub1311282607), java.lang.Object(o17263sub1311282607))), java.lang.Object(o17720sub0), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16527[LinkedList$Entry.previous]o17260, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527) -> f13318_0_removeLastOccurrence_Load(EOS(STATIC_13318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17720sub1311282607), java.lang.Object(o17263sub1311282607))), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16527[LinkedList$Entry.previous]o17260, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527) :|: TRUE
f13318_0_removeLastOccurrence_Load(EOS(STATIC_13318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17720sub1311282607), java.lang.Object(o17263sub1311282607))), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16527[LinkedList$Entry.previous]o17260, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527) -> f13337_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13337), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17720sub1311282607), java.lang.Object(o17263sub1311282607))), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16527[LinkedList$Entry.previous]o17260, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527) :|: TRUE
f13337_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13337), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17720sub1311282607), java.lang.Object(o17263sub1311282607))), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16527[LinkedList$Entry.previous]o17260, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527) -> f13354_0_removeLastOccurrence_Store(EOS(STATIC_13354), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o17263sub0), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527, o16527[LinkedList$Entry.previous]o17263) :|: o16527[LinkedList$Entry.previous]o17263 > o16527[LinkedList$Entry.previous]o17260 && o16527[LinkedList$Entry.previous]o17260 >= 0
f13354_0_removeLastOccurrence_Store(EOS(STATIC_13354), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o17263sub0), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527, o16527[LinkedList$Entry.previous]o17263) -> f13372_0_removeLastOccurrence_JMP(EOS(STATIC_13372), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o17263sub0), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527, o16527[LinkedList$Entry.previous]o17263) :|: TRUE
f13372_0_removeLastOccurrence_JMP(EOS(STATIC_13372), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o17263sub0), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527, o16527[LinkedList$Entry.previous]o17263) -> f13390_0_removeLastOccurrence_Load(EOS(STATIC_13390), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o17263sub0), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527, o16527[LinkedList$Entry.previous]o17263) :|: TRUE
f13390_0_removeLastOccurrence_Load(EOS(STATIC_13390), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o17263sub0), o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527, o16527[LinkedList$Entry.previous]o17263) -> f13127_0_removeLastOccurrence_Load(EOS(STATIC_13127), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o17263sub0), o16527[LinkedList$Entry.previous]o17263, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16524, o17263[LinkedList$Entry.previous]o16527) :|: TRUE
f13127_0_removeLastOccurrence_Load(EOS(STATIC_13127), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527) -> f13139_0_removeLastOccurrence_Load(EOS(STATIC_13139), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), java.lang.Object(o16528sub0), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527) :|: TRUE
f13139_0_removeLastOccurrence_Load(EOS(STATIC_13139), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), java.lang.Object(o16528sub0), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527) -> f13152_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13152), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), java.lang.Object(o16528sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527) :|: TRUE
f13152_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13152), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), java.lang.Object(o16528sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527) -> f13167_0_removeLastOccurrence_EQ(EOS(STATIC_13167), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), java.lang.Object(o16528sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165251310444739, java.lang.Object(o16527sub1310444739))), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527) :|: TRUE
f13167_0_removeLastOccurrence_EQ(EOS(STATIC_13167), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), java.lang.Object(o16528sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165251310444739, java.lang.Object(o16527sub1310444739))), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527) -> f13184_0_removeLastOccurrence_EQ(EOS(STATIC_13184), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(o16527sub-1674077849)))))))), java.lang.Object(o16528sub0), java.lang.Object(o16528sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165251310444739, java.lang.Object(o16527sub1310444739))), o16527[LinkedList$Entry.previous]o16528, o16526[LinkedList$Entry.next]o16524, o16527[LinkedList$Entry.previous]o16524, o16528[LinkedList$Entry.previous]o16527, o16528[LinkedList$Entry.previous]o16524) :|: o16528[LinkedList$Entry.previous]o16524 > 0
f13247_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13247), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17265-362795118, java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172651311282731, java.lang.Object(o17267sub1311282731))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172651311282731, java.lang.Object(o17267sub1311282731))), o16526[LinkedList$Entry.next]o16524, o17264[LinkedList$Entry.previous]o16524, o17264[LinkedList$Entry.previous]o17264) -> f13262_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13262), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17265-362795118, java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172651311282731, java.lang.Object(o17267sub1311282731))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172651311282731, java.lang.Object(o17267sub1311282731))), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) :|: o17267[LinkedList$Entry.previous]o16524 < o17264[LinkedList$Entry.previous]o16524 && o17264[LinkedList$Entry.previous]o16524 >= 0 && o17267[LinkedList$Entry.previous]o17264 < o17264[LinkedList$Entry.previous]o17264 && o17264[LinkedList$Entry.previous]o17264 >= 0
f13262_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13262), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17265-362795118, java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172651311282731, java.lang.Object(o17267sub1311282731))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172651311282731, java.lang.Object(o17267sub1311282731))), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) -> f13281_0_removeLastOccurrence_NONNULL(EOS(STATIC_13281), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17265-362795118, java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o172651311282731, java.lang.Object(o17267sub1311282731))), o172650, o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) :|: TRUE
f13281_0_removeLastOccurrence_NONNULL(EOS(STATIC_13281), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub1311282731), java.lang.Object(o17267sub1311282731))), java.lang.Object(o17721sub0), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) -> f13302_0_removeLastOccurrence_NONNULL(EOS(STATIC_13302), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub1311282731), java.lang.Object(o17267sub1311282731))), java.lang.Object(o17721sub0), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) :|: TRUE
f13302_0_removeLastOccurrence_NONNULL(EOS(STATIC_13302), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub1311282731), java.lang.Object(o17267sub1311282731))), java.lang.Object(o17721sub0), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) -> f13320_0_removeLastOccurrence_Load(EOS(STATIC_13320), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub1311282731), java.lang.Object(o17267sub1311282731))), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) :|: TRUE
f13320_0_removeLastOccurrence_Load(EOS(STATIC_13320), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub1311282731), java.lang.Object(o17267sub1311282731))), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) -> f13339_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13339), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub1311282731), java.lang.Object(o17267sub1311282731))), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) :|: TRUE
f13339_0_removeLastOccurrence_FieldAccess(EOS(STATIC_13339), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub1311282731), java.lang.Object(o17267sub1311282731))), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) -> f13356_0_removeLastOccurrence_Store(EOS(STATIC_13356), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(o17267sub0), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) :|: TRUE
f13356_0_removeLastOccurrence_Store(EOS(STATIC_13356), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(o17267sub0), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) -> f13374_0_removeLastOccurrence_JMP(EOS(STATIC_13374), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(o17267sub0), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) :|: TRUE
f13374_0_removeLastOccurrence_JMP(EOS(STATIC_13374), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(o17267sub0), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) -> f13391_0_removeLastOccurrence_Load(EOS(STATIC_13391), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(o17267sub0), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) :|: TRUE
f13391_0_removeLastOccurrence_Load(EOS(STATIC_13391), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(o17267sub0), o16526[LinkedList$Entry.next]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) -> f13127_0_removeLastOccurrence_Load(EOS(STATIC_13127), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118), java.lang.Object(o17267sub-362795118)))))))))), java.lang.Object(o17267sub0), o17264[LinkedList$Entry.previous]o17267, o16526[LinkedList$Entry.next]o16524, o17264[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o16524, o17267[LinkedList$Entry.previous]o17264) :|: o17264[LinkedList$Entry.previous]o17267 = 1
Combined rules. Obtained 2 IRulesP rules:
f13184_0_removeLastOccurrence_EQ(EOS(STATIC_13184), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub1311282731:0), java.lang.Object(o17267sub1311282731:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub1311282731:0), java.lang.Object(o17267sub1311282731:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165251310444739:0, java.lang.Object(o16527sub1310444739:0))), o16527[LinkedList$Entry.previous]o16528:0, o16526[LinkedList$Entry.next]o16524:0, o16527[LinkedList$Entry.previous]o16524:0, o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0) -> f13184_0_removeLastOccurrence_EQ(EOS(STATIC_13184), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(o17267sub0:0), java.lang.Object(o17267sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165251310444739:1, java.lang.Object(o16527sub1310444739:1))), 1, o16526[LinkedList$Entry.next]o16524:0, o17264[LinkedList$Entry.previous]o16524:0, o17267[LinkedList$Entry.previous]o17264:0, o17267[LinkedList$Entry.previous]o16524:0) :|: o16527[LinkedList$Entry.previous]o16524:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0 < o16527[LinkedList$Entry.previous]o16524:0 && o17267[LinkedList$Entry.previous]o17264:0 < o16527[LinkedList$Entry.previous]o16528:0 && o17267[LinkedList$Entry.previous]o16524:0 > 0 && o16527[LinkedList$Entry.previous]o16528:0 > -1
f13184_0_removeLastOccurrence_EQ(EOS(STATIC_13184), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849:0, java.lang.Object(o16527sub-1674077849:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17720sub1311282607:0), java.lang.Object(o17263sub1311282607:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17720sub1311282607:0), java.lang.Object(o17263sub1311282607:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165251310444739:0, java.lang.Object(o16527sub1310444739:0))), o16527[LinkedList$Entry.previous]o16528:0, o16526[LinkedList$Entry.next]o16524:0, o16527[LinkedList$Entry.previous]o16524:0, o16528[LinkedList$Entry.previous]o16527:0, o16528[LinkedList$Entry.previous]o16524:0) -> f13184_0_removeLastOccurrence_EQ(EOS(STATIC_13184), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16525-1674077849:0, java.lang.Object(o16527sub-1674077849:0)))))))), java.lang.Object(o17263sub0:0), java.lang.Object(o17263sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o165251310444739:1, java.lang.Object(o16527sub1310444739:1))), o16527[LinkedList$Entry.previous]o17263:0, o16526[LinkedList$Entry.next]o16524:0, o16527[LinkedList$Entry.previous]o16524:0, o17263[LinkedList$Entry.previous]o16527:0, o17263[LinkedList$Entry.previous]o16524:0) :|: o16528[LinkedList$Entry.previous]o16527:0 > 0 && o16527[LinkedList$Entry.previous]o16528:0 > 0 && o16528[LinkedList$Entry.previous]o16524:0 > -1 && o17263[LinkedList$Entry.previous]o16524:0 < o16528[LinkedList$Entry.previous]o16524:0 && o17263[LinkedList$Entry.previous]o16527:0 < o16528[LinkedList$Entry.previous]o16527:0 && o17263[LinkedList$Entry.previous]o16524:0 > 0 && o16527[LinkedList$Entry.previous]o17263:0 > o16527[LinkedList$Entry.previous]o16528:0
Filtered constant ground arguments:
   f13184_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13184_0_removeLastOccurrence_EQ(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13184_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13184_0_removeLastOccurrence_EQ(x1, x3, x4, x5, x6, x7, x8, x9)
Filtered unneeded arguments:
   f13184_0_removeLastOccurrence_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f13184_0_removeLastOccurrence_EQ(x1, x2, x4, x6, x7, x8)
Finished conversion. Obtained 2 rules.P rules:
f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub1311282731:0), java.lang.Object(o17267sub1311282731:0))), o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0, o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(o17267sub0:0), 1, o17264[LinkedList$Entry.previous]o16524:0, o17267[LinkedList$Entry.previous]o17264:0, o17267[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) :|: o17267[LinkedList$Entry.previous]o16524:0 < o16527[LinkedList$Entry.previous]o16524:0 && o16527[LinkedList$Entry.previous]o16524:0 > -1 && o17267[LinkedList$Entry.previous]o17264:0 < o16527[LinkedList$Entry.previous]o16528:0 && o16527[LinkedList$Entry.previous]o16528:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0 > 0
f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(o16527sub-1674077849:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17720sub1311282607:0), java.lang.Object(o17263sub1311282607:0))), o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0, o16528[LinkedList$Entry.previous]o16527:0, o16528[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(o16527sub-1674077849:0)))))))), java.lang.Object(o17263sub0:0), o16527[LinkedList$Entry.previous]o17263:0, o16527[LinkedList$Entry.previous]o16524:0, o17263[LinkedList$Entry.previous]o16527:0, o17263[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) :|: o16527[LinkedList$Entry.previous]o16528:0 > 0 && o16528[LinkedList$Entry.previous]o16527:0 > 0 && o16528[LinkedList$Entry.previous]o16524:0 > -1 && o17263[LinkedList$Entry.previous]o16524:0 < o16528[LinkedList$Entry.previous]o16524:0 && o17263[LinkedList$Entry.previous]o16527:0 < o16528[LinkedList$Entry.previous]o16527:0 && o16527[LinkedList$Entry.previous]o17263:0 > o16527[LinkedList$Entry.previous]o16528:0 && o17263[LinkedList$Entry.previous]o16524:0 > 0

----------------------------------------

(69)
Obligation:
Rules:
f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub1311282731:0), java.lang.Object(o17267sub1311282731:0))), o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0, o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(o17267sub0:0), 1, o17264[LinkedList$Entry.previous]o16524:0, o17267[LinkedList$Entry.previous]o17264:0, o17267[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) :|: o17267[LinkedList$Entry.previous]o16524:0 < o16527[LinkedList$Entry.previous]o16524:0 && o16527[LinkedList$Entry.previous]o16524:0 > -1 && o17267[LinkedList$Entry.previous]o17264:0 < o16527[LinkedList$Entry.previous]o16528:0 && o16527[LinkedList$Entry.previous]o16528:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0 > 0
f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

----------------------------------------

(70) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(71)
Obligation:
Rules:
f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub1311282731:0), java.lang.Object(o17267sub1311282731:0))), o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0, o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(o17267sub0:0), 1, o17264[LinkedList$Entry.previous]o16524:0, o17267[LinkedList$Entry.previous]o17264:0, o17267[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) :|: o17267[LinkedList$Entry.previous]o16524:0 < o16527[LinkedList$Entry.previous]o16524:0 && o16527[LinkedList$Entry.previous]o16524:0 > -1 && o17267[LinkedList$Entry.previous]o17264:0 < o16527[LinkedList$Entry.previous]o16528:0 && o16527[LinkedList$Entry.previous]o16528:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0 > 0
f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

----------------------------------------

(72) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub1311282731:0), java.lang.Object(o17267sub1311282731:0))), o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0, o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(o17267sub0:0), 1, o17264[LinkedList$Entry.previous]o16524:0, o17267[LinkedList$Entry.previous]o17264:0, o17267[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) :|: o17267[LinkedList$Entry.previous]o16524:0 < o16527[LinkedList$Entry.previous]o16524:0 && o16527[LinkedList$Entry.previous]o16524:0 > -1 && o17267[LinkedList$Entry.previous]o17264:0 < o16527[LinkedList$Entry.previous]o16528:0 && o16527[LinkedList$Entry.previous]o16528:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0 > 0
(2) f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(73)
Obligation:

Termination digraph:
Nodes:
(1) f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub1311282731:0), java.lang.Object(o17267sub1311282731:0))), o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0, o16527[LinkedList$Entry.previous]o16528:0, o16527[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0), java.lang.Object(o17267sub-362795118:0)))))))))), java.lang.Object(o17267sub0:0), 1, o17264[LinkedList$Entry.previous]o16524:0, o17267[LinkedList$Entry.previous]o17264:0, o17267[LinkedList$Entry.previous]o16524:0, o16525-1674077849:0) :|: o17267[LinkedList$Entry.previous]o16524:0 < o16527[LinkedList$Entry.previous]o16524:0 && o16527[LinkedList$Entry.previous]o16524:0 > -1 && o17267[LinkedList$Entry.previous]o17264:0 < o16527[LinkedList$Entry.previous]o16528:0 && o16527[LinkedList$Entry.previous]o16528:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0 > 0
(2) f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(74) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(75)
Obligation:
Rules:
f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0:0), java.lang.Object(o17267sub-362795118:0:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub1311282731:0:0), java.lang.Object(o17267sub1311282731:0:0))), o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o16525-1674077849:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17721sub-362795118:0:0), java.lang.Object(o17267sub-362795118:0:0)))))))))), java.lang.Object(o17267sub0:0:0), 1, o17264[LinkedList$Entry.previous]o16524:0:0, o17267[LinkedList$Entry.previous]o17264:0:0, o17267[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) :|: o16527[LinkedList$Entry.previous]o16528:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 > 0 && o17267[LinkedList$Entry.previous]o17264:0:0 < o16527[LinkedList$Entry.previous]o16528:0:0 && o16527[LinkedList$Entry.previous]o16524:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 < o16527[LinkedList$Entry.previous]o16524:0:0
f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2:0), java.lang.Object(x3:0))), x4:0, x5:0, x6:0, x7:0, x:0) -> f13184_0_removeLastOccurrence_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x8:0), x9:0, x5:0, x10:0, x11:0, x:0) :|: x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0

----------------------------------------

(76) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13184_0_removeLastOccurrence_EQ(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(77)
Obligation:
Rules:
f13184_0_removeLastOccurrence_EQ(c, c1, o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) -> f13184_0_removeLastOccurrence_EQ(c2, c3, c4, o17264[LinkedList$Entry.previous]o16524:0:0, o17267[LinkedList$Entry.previous]o17264:0:0, o17267[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o16527[LinkedList$Entry.previous]o16528:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 > 0 && o17267[LinkedList$Entry.previous]o17264:0:0 < o16527[LinkedList$Entry.previous]o16528:0:0 && o16527[LinkedList$Entry.previous]o16524:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 < o16527[LinkedList$Entry.previous]o16524:0:0)
f13184_0_removeLastOccurrence_EQ(c5, c6, x4:0, x5:0, x6:0, x7:0, x:0) -> f13184_0_removeLastOccurrence_EQ(c7, c8, x9:0, x5:0, x10:0, x11:0, x:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0)

----------------------------------------

(78) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13184_0_removeLastOccurrence_EQ(x, x1, x2, x3, x4, x5, x6)] = -1 + c*x + c1*x1 + 2*x4

The following rules are decreasing:
f13184_0_removeLastOccurrence_EQ(c, c1, o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) -> f13184_0_removeLastOccurrence_EQ(c2, c3, c4, o17264[LinkedList$Entry.previous]o16524:0:0, o17267[LinkedList$Entry.previous]o17264:0:0, o17267[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o16527[LinkedList$Entry.previous]o16528:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 > 0 && o17267[LinkedList$Entry.previous]o17264:0:0 < o16527[LinkedList$Entry.previous]o16528:0:0 && o16527[LinkedList$Entry.previous]o16524:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 < o16527[LinkedList$Entry.previous]o16524:0:0)
f13184_0_removeLastOccurrence_EQ(c5, c6, x4:0, x5:0, x6:0, x7:0, x:0) -> f13184_0_removeLastOccurrence_EQ(c7, c8, x9:0, x5:0, x10:0, x11:0, x:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0)
The following rules are bounded:
f13184_0_removeLastOccurrence_EQ(c5, c6, x4:0, x5:0, x6:0, x7:0, x:0) -> f13184_0_removeLastOccurrence_EQ(c7, c8, x9:0, x5:0, x10:0, x11:0, x:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0)

----------------------------------------

(79)
Obligation:
Rules:
f13184_0_removeLastOccurrence_EQ(c, c1, o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) -> f13184_0_removeLastOccurrence_EQ(c2, c3, c4, o17264[LinkedList$Entry.previous]o16524:0:0, o17267[LinkedList$Entry.previous]o17264:0:0, o17267[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o16527[LinkedList$Entry.previous]o16528:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 > 0 && o17267[LinkedList$Entry.previous]o17264:0:0 < o16527[LinkedList$Entry.previous]o16528:0:0 && o16527[LinkedList$Entry.previous]o16524:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 < o16527[LinkedList$Entry.previous]o16524:0:0)

----------------------------------------

(80) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13184_0_removeLastOccurrence_EQ(x, x1, x2, x3, x4, x5, x6)] = c*x + c1*x1 + x5

The following rules are decreasing:
f13184_0_removeLastOccurrence_EQ(c, c1, o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) -> f13184_0_removeLastOccurrence_EQ(c2, c3, c4, o17264[LinkedList$Entry.previous]o16524:0:0, o17267[LinkedList$Entry.previous]o17264:0:0, o17267[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o16527[LinkedList$Entry.previous]o16528:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 > 0 && o17267[LinkedList$Entry.previous]o17264:0:0 < o16527[LinkedList$Entry.previous]o16528:0:0 && o16527[LinkedList$Entry.previous]o16524:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 < o16527[LinkedList$Entry.previous]o16524:0:0)
The following rules are bounded:
f13184_0_removeLastOccurrence_EQ(c, c1, o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16527[LinkedList$Entry.previous]o16528:0:0, o16527[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) -> f13184_0_removeLastOccurrence_EQ(c2, c3, c4, o17264[LinkedList$Entry.previous]o16524:0:0, o17267[LinkedList$Entry.previous]o17264:0:0, o17267[LinkedList$Entry.previous]o16524:0:0, o16525-1674077849:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o16527[LinkedList$Entry.previous]o16528:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 > 0 && o17267[LinkedList$Entry.previous]o17264:0:0 < o16527[LinkedList$Entry.previous]o16528:0:0 && o16527[LinkedList$Entry.previous]o16524:0:0 > -1 && o17267[LinkedList$Entry.previous]o16524:0:0 < o16527[LinkedList$Entry.previous]o16524:0:0)

----------------------------------------

(81)
YES

----------------------------------------

(82)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveLastOccurrence.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [next]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(83) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 40 IRulesP rules:
f13068_0_entry_GT(EOS(STATIC_13068), i3556, i4363, i4363, i3556, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15930[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930) -> f13084_0_entry_Load(EOS(STATIC_13084), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15930[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930) :|: i4363 <= i3556
f13084_0_entry_Load(EOS(STATIC_13084), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15930[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930) -> f13099_0_entry_FieldAccess(EOS(STATIC_13099), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15930[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930) :|: TRUE
f13099_0_entry_FieldAccess(EOS(STATIC_13099), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15930[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930) -> f13115_0_entry_FieldAccess(EOS(STATIC_13115), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15932) :|: o15932[LinkedList$Entry.next]o15932 > 0 && o15932[LinkedList$Entry.previous]o15932 > 0 && o15930[LinkedList$Entry.next]o15932 > 0 && o15932[LinkedList$Entry.next]o15930 > 0 && o15930[LinkedList$Entry.next]o15930 > 0
f13099_0_entry_FieldAccess(EOS(STATIC_13099), i3556, i4363, o16425[LinkedList$Entry.next]o16425, o16425[LinkedList$Entry.previous]o16425, o16425[LinkedList$Entry.next]o16425, o16425[LinkedList$Entry.next]o16425, o16425[LinkedList$Entry.next]o16425) -> f13116_0_entry_FieldAccess(EOS(STATIC_13116), i3556, i4363, o16425[LinkedList$Entry.next]o16425, o16425[LinkedList$Entry.previous]o16425) :|: TRUE
f13115_0_entry_FieldAccess(EOS(STATIC_13115), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15932[LinkedList$Entry.next]o16639, o16639[LinkedList$Entry.next]o16639, o16639[LinkedList$Entry.next]o15932) -> f13131_0_entry_FieldAccess(EOS(STATIC_13131), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15932[LinkedList$Entry.next]o16639, o16641[LinkedList$Entry.next]o15932, o16641[LinkedList$Entry.next]o16639) :|: o16641[LinkedList$Entry.next]o16639 < o16639[LinkedList$Entry.next]o16639 && o16639[LinkedList$Entry.next]o16639 >= 0 && o16641[LinkedList$Entry.next]o15932 < o16639[LinkedList$Entry.next]o15932 && o16639[LinkedList$Entry.next]o15932 >= 0
f13131_0_entry_FieldAccess(EOS(STATIC_13131), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15932[LinkedList$Entry.next]o16639, o16641[LinkedList$Entry.next]o15932, o16641[LinkedList$Entry.next]o16639) -> f13143_0_entry_Store(EOS(STATIC_13143), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o16641[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o16641, o16641[LinkedList$Entry.next]o16641) :|: o15932[LinkedList$Entry.next]o16641 > o15932[LinkedList$Entry.next]o16639 && o15932[LinkedList$Entry.next]o16639 >= 0 && o16641[LinkedList$Entry.next]o16641 > o16641[LinkedList$Entry.next]o16639 && o16641[LinkedList$Entry.next]o16639 >= 0
f13143_0_entry_Store(EOS(STATIC_13143), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o16641[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o16641, o16641[LinkedList$Entry.next]o16641) -> f13156_0_entry_Inc(EOS(STATIC_13156), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o16641[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o16641, o16641[LinkedList$Entry.next]o16641) :|: TRUE
f13156_0_entry_Inc(EOS(STATIC_13156), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o16641[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o16641, o16641[LinkedList$Entry.next]o16641) -> f13172_0_entry_JMP(EOS(STATIC_13172), i3556, i4363 + 1, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o16641[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o16641, o16641[LinkedList$Entry.next]o16641) :|: TRUE
f13172_0_entry_JMP(EOS(STATIC_13172), i3556, i4457, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o16641[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o16641, o16641[LinkedList$Entry.next]o16641) -> f13192_0_entry_Load(EOS(STATIC_13192), i3556, i4457, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o16641[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o16641, o16641[LinkedList$Entry.next]o16641) :|: TRUE
f13192_0_entry_Load(EOS(STATIC_13192), i3556, i4457, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o16641[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o16641, o16641[LinkedList$Entry.next]o16641) -> f13027_0_entry_Load(EOS(STATIC_13027), i3556, i4457, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o16641[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o16641, o16641[LinkedList$Entry.next]o16641) :|: TRUE
f13027_0_entry_Load(EOS(STATIC_13027), i3556, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15930[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930) -> f13039_0_entry_Load(EOS(STATIC_13039), i3556, i4363, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15930[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930) :|: TRUE
f13039_0_entry_Load(EOS(STATIC_13039), i3556, i4363, i4363, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15930[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930) -> f13053_0_entry_GT(EOS(STATIC_13053), i3556, i4363, i4363, i3556, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15930[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930) :|: TRUE
f13053_0_entry_GT(EOS(STATIC_13053), i3556, i4363, i4363, i3556, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15930[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930) -> f13068_0_entry_GT(EOS(STATIC_13068), i3556, i4363, i4363, i3556, o15932[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.previous]o15932, o15930[LinkedList$Entry.next]o15932, o15932[LinkedList$Entry.next]o15930, o15930[LinkedList$Entry.next]o15930) :|: i4363 <= i3556
f13116_0_entry_FieldAccess(EOS(STATIC_13116), i3556, i4363, o16643[LinkedList$Entry.next]o16643, o16643[LinkedList$Entry.previous]o16643) -> f13132_0_entry_FieldAccess(EOS(STATIC_13132), i3556, i4363, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) :|: o16645[LinkedList$Entry.next]o16643 < o16643[LinkedList$Entry.next]o16643 && o16643[LinkedList$Entry.next]o16643 >= 0 && o16646[LinkedList$Entry.previous]o16643 < o16643[LinkedList$Entry.previous]o16643 && o16643[LinkedList$Entry.previous]o16643 >= 0
f13132_0_entry_FieldAccess(EOS(STATIC_13132), i3556, i4363, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) -> f13144_0_entry_FieldAccess(EOS(STATIC_13144), i3556, i4363, o16646[LinkedList$Entry.previous]o16643, o16645[LinkedList$Entry.next]o16643) :|: o16645[LinkedList$Entry.next]o16643 > 0
f13132_0_entry_FieldAccess(EOS(STATIC_13132), i3556, i4363, o16645[LinkedList$Entry.next]o16742, o16646[LinkedList$Entry.previous]o16742) -> f13145_0_entry_FieldAccess(EOS(STATIC_13145), i3556, i4363, o16646[LinkedList$Entry.previous]o16742) :|: TRUE
f13144_0_entry_FieldAccess(EOS(STATIC_13144), i3556, i4363, o16646[LinkedList$Entry.previous]o16643, o16645[LinkedList$Entry.next]o16643) -> f13157_0_entry_FieldAccess(EOS(STATIC_13157), i3556, i4363, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) :|: o16646[LinkedList$Entry.previous]o16643 > 0
f13144_0_entry_FieldAccess(EOS(STATIC_13144), i3556, i4363, o16646[LinkedList$Entry.previous]o16790, o16645[LinkedList$Entry.next]o16790) -> f13158_0_entry_FieldAccess(EOS(STATIC_13158), i3556, i4363, o16645[LinkedList$Entry.next]o16790) :|: TRUE
f13157_0_entry_FieldAccess(EOS(STATIC_13157), i3556, i4363, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) -> f13173_0_entry_Store(EOS(STATIC_13173), i3556, i4363, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) :|: TRUE
f13173_0_entry_Store(EOS(STATIC_13173), i3556, i4363, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) -> f13193_0_entry_Inc(EOS(STATIC_13193), i3556, i4363, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) :|: TRUE
f13193_0_entry_Inc(EOS(STATIC_13193), i3556, i4363, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) -> f13213_0_entry_JMP(EOS(STATIC_13213), i3556, i4363 + 1, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) :|: TRUE
f13213_0_entry_JMP(EOS(STATIC_13213), i3556, i4465, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) -> f13232_0_entry_Load(EOS(STATIC_13232), i3556, i4465, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) :|: TRUE
f13232_0_entry_Load(EOS(STATIC_13232), i3556, i4465, o16645[LinkedList$Entry.next]o16643, o16646[LinkedList$Entry.previous]o16643) -> f13027_0_entry_Load(EOS(STATIC_13027), i3556, i4465, o16643[LinkedList$Entry.next]o16643, o16643[LinkedList$Entry.previous]o16643, o16645[LinkedList$Entry.next]o16643, o16643[LinkedList$Entry.next]o16645, o16645[LinkedList$Entry.next]o16645) :|: o16643[LinkedList$Entry.next]o16645 = 1
f13158_0_entry_FieldAccess(EOS(STATIC_13158), i3556, i4363, o16645[LinkedList$Entry.next]o16790) -> f13174_0_entry_Store(EOS(STATIC_13174), i3556, i4363, o16645[LinkedList$Entry.next]o16790) :|: TRUE
f13174_0_entry_Store(EOS(STATIC_13174), i3556, i4363, o16645[LinkedList$Entry.next]o16790) -> f13194_0_entry_Inc(EOS(STATIC_13194), i3556, i4363, o16645[LinkedList$Entry.next]o16790) :|: TRUE
f13194_0_entry_Inc(EOS(STATIC_13194), i3556, i4363, o16645[LinkedList$Entry.next]o16790) -> f13214_0_entry_JMP(EOS(STATIC_13214), i3556, i4363 + 1, o16645[LinkedList$Entry.next]o16790) :|: TRUE
f13214_0_entry_JMP(EOS(STATIC_13214), i3556, i4467, o16645[LinkedList$Entry.next]o16790) -> f13233_0_entry_Load(EOS(STATIC_13233), i3556, i4467, o16645[LinkedList$Entry.next]o16790) :|: TRUE
f13233_0_entry_Load(EOS(STATIC_13233), i3556, i4467, o16645[LinkedList$Entry.next]o16790) -> f13027_0_entry_Load(EOS(STATIC_13027), i3556, i4467, o16790[LinkedList$Entry.next]o16790, o16790[LinkedList$Entry.previous]o16790, o16645[LinkedList$Entry.next]o16790, o16790[LinkedList$Entry.next]o16645, o16645[LinkedList$Entry.next]o16645) :|: o16790[LinkedList$Entry.previous]o16790 = 1 && o16790[LinkedList$Entry.next]o16645 = 1
f13145_0_entry_FieldAccess(EOS(STATIC_13145), i3556, i4363, o16646[LinkedList$Entry.previous]o16742) -> f13159_0_entry_FieldAccess(EOS(STATIC_13159), i3556, i4363, o16646[LinkedList$Entry.previous]o16742) :|: o16646[LinkedList$Entry.previous]o16742 > 0
f13145_0_entry_FieldAccess(EOS(STATIC_13145), i3556, i4363, o16646[LinkedList$Entry.previous]o16793) -> f13160_0_entry_FieldAccess(EOS(STATIC_13160), i3556, i4363) :|: TRUE
f13159_0_entry_FieldAccess(EOS(STATIC_13159), i3556, i4363, o16646[LinkedList$Entry.previous]o16742) -> f13175_0_entry_Store(EOS(STATIC_13175), i3556, i4363, o16646[LinkedList$Entry.previous]o16742) :|: TRUE
f13175_0_entry_Store(EOS(STATIC_13175), i3556, i4363, o16646[LinkedList$Entry.previous]o16742) -> f13195_0_entry_Inc(EOS(STATIC_13195), i3556, i4363, o16646[LinkedList$Entry.previous]o16742) :|: TRUE
f13195_0_entry_Inc(EOS(STATIC_13195), i3556, i4363, o16646[LinkedList$Entry.previous]o16742) -> f13215_0_entry_JMP(EOS(STATIC_13215), i3556, i4363 + 1, o16646[LinkedList$Entry.previous]o16742) :|: TRUE
f13215_0_entry_JMP(EOS(STATIC_13215), i3556, i4470, o16646[LinkedList$Entry.previous]o16742) -> f13234_0_entry_Load(EOS(STATIC_13234), i3556, i4470, o16646[LinkedList$Entry.previous]o16742) :|: TRUE
f13234_0_entry_Load(EOS(STATIC_13234), i3556, i4470, o16646[LinkedList$Entry.previous]o16742) -> f13027_0_entry_Load(EOS(STATIC_13027), i3556, i4470, o16742[LinkedList$Entry.next]o16742, o16742[LinkedList$Entry.previous]o16742, o16742[LinkedList$Entry.next]o16742, o16742[LinkedList$Entry.next]o16742, o16742[LinkedList$Entry.next]o16742) :|: o16742[LinkedList$Entry.next]o16742 = 1 && o16742[LinkedList$Entry.next]o16742 = 1 && o16742[LinkedList$Entry.next]o16742 = 1 && o16742[LinkedList$Entry.next]o16742 = 1
f13160_0_entry_FieldAccess(EOS(STATIC_13160), i3556, i4363) -> f13176_0_entry_Store(EOS(STATIC_13176), i3556, i4363) :|: TRUE
f13176_0_entry_Store(EOS(STATIC_13176), i3556, i4363) -> f13196_0_entry_Inc(EOS(STATIC_13196), i3556, i4363) :|: TRUE
f13196_0_entry_Inc(EOS(STATIC_13196), i3556, i4363) -> f13216_0_entry_JMP(EOS(STATIC_13216), i3556, i4363 + 1) :|: TRUE
f13216_0_entry_JMP(EOS(STATIC_13216), i3556, i4471) -> f13235_0_entry_Load(EOS(STATIC_13235), i3556, i4471) :|: TRUE
f13235_0_entry_Load(EOS(STATIC_13235), i3556, i4471) -> f13027_0_entry_Load(EOS(STATIC_13027), i3556, i4471, o16793[LinkedList$Entry.next]o16793, o16793[LinkedList$Entry.previous]o16793, o16793[LinkedList$Entry.next]o16793, o16793[LinkedList$Entry.next]o16793, o16793[LinkedList$Entry.next]o16793) :|: o16793[LinkedList$Entry.next]o16793 = 1 && o16793[LinkedList$Entry.previous]o16793 = 1 && o16793[LinkedList$Entry.next]o16793 = 1 && o16793[LinkedList$Entry.next]o16793 = 1 && o16793[LinkedList$Entry.next]o16793 = 1
Combined rules. Obtained 5 IRulesP rules:
f13068_0_entry_GT(EOS(STATIC_13068), i3556:0, i4363:0, i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(EOS(STATIC_13068), i3556:0, i4363:0 + 1, i4363:0 + 1, i3556:0, o16790[LinkedList$Entry.next]o16790:0, 1, o16645[LinkedList$Entry.next]o16643:0, 1, o16645[LinkedList$Entry.next]o16645:0) :|: i4363:0 + 1 <= i3556:0 && o15932[LinkedList$Entry.next]o15932:0 > -1 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0 && o16645[LinkedList$Entry.next]o16643:0 > 0 && o15932[LinkedList$Entry.previous]o15932:0 > -1
f13068_0_entry_GT(EOS(STATIC_13068), i3556:0, i4363:0, i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(EOS(STATIC_13068), i3556:0, i4363:0 + 1, i4363:0 + 1, i3556:0, o16643[LinkedList$Entry.next]o16643:0, o16643[LinkedList$Entry.previous]o16643:0, o16645[LinkedList$Entry.next]o16643:0, 1, o16645[LinkedList$Entry.next]o16645:0) :|: i4363:0 + 1 <= i3556:0 && o15932[LinkedList$Entry.next]o15932:0 > -1 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0 && o15932[LinkedList$Entry.previous]o15932:0 > -1 && o16646[LinkedList$Entry.previous]o16643:0 > 0 && o16645[LinkedList$Entry.next]o16643:0 > 0
f13068_0_entry_GT(EOS(STATIC_13068), i3556:0, i4363:0, i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15930[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15930:0, o15930[LinkedList$Entry.next]o15930:0) -> f13068_0_entry_GT(EOS(STATIC_13068), i3556:0, i4363:0 + 1, i4363:0 + 1, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o16641[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o16641:0, o16641[LinkedList$Entry.next]o16641:0) :|: o15930[LinkedList$Entry.next]o15932:0 > 0 && o15932[LinkedList$Entry.next]o15930:0 > 0 && o15930[LinkedList$Entry.next]o15930:0 > 0 && i4363:0 + 1 <= i3556:0 && o15932[LinkedList$Entry.previous]o15932:0 > 0 && o15932[LinkedList$Entry.next]o15932:0 > 0 && o16641[LinkedList$Entry.next]o16639:0 < o15930[LinkedList$Entry.next]o15930:0 && o15932[LinkedList$Entry.next]o16641:0 > o15932[LinkedList$Entry.next]o15930:0 && o16641[LinkedList$Entry.next]o15932:0 < o15930[LinkedList$Entry.next]o15932:0 && o16641[LinkedList$Entry.next]o16639:0 > -1 && o16641[LinkedList$Entry.next]o16641:0 > o16641[LinkedList$Entry.next]o16639:0
f13068_0_entry_GT(EOS(STATIC_13068), i3556:0, i4363:0, i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(EOS(STATIC_13068), i3556:0, i4363:0 + 1, i4363:0 + 1, i3556:0, 1, o16742[LinkedList$Entry.previous]o16742:0, 1, 1, 1) :|: i4363:0 + 1 <= i3556:0 && o15932[LinkedList$Entry.next]o15932:0 > -1 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 > 0 && o15932[LinkedList$Entry.previous]o15932:0 > -1
f13068_0_entry_GT(EOS(STATIC_13068), i3556:0, i4363:0, i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(EOS(STATIC_13068), i3556:0, i4363:0 + 1, i4363:0 + 1, i3556:0, 1, 1, 1, 1, 1) :|: i4363:0 + 1 <= i3556:0 && o15932[LinkedList$Entry.next]o15932:0 > -1 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o15932[LinkedList$Entry.previous]o15932:0 > -1 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0
Filtered constant ground arguments:
   f13068_0_entry_GT(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13068_0_entry_GT(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f13068_0_entry_GT(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13068_0_entry_GT(x3, x4, x5, x6, x7, x8, x9)
Finished conversion. Obtained 5 rules.P rules:
f13068_0_entry_GT(i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(i4363:0 + 1, i3556:0, o16790[LinkedList$Entry.next]o16790:0, 1, o16645[LinkedList$Entry.next]o16643:0, 1, o16645[LinkedList$Entry.next]o16645:0) :|: o15932[LinkedList$Entry.next]o15932:0 > -1 && i4363:0 + 1 <= i3556:0 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0 && o15932[LinkedList$Entry.previous]o15932:0 > -1 && o16645[LinkedList$Entry.next]o16643:0 > 0
f13068_0_entry_GT(i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(i4363:0 + 1, i3556:0, o16643[LinkedList$Entry.next]o16643:0, o16643[LinkedList$Entry.previous]o16643:0, o16645[LinkedList$Entry.next]o16643:0, 1, o16645[LinkedList$Entry.next]o16645:0) :|: o15932[LinkedList$Entry.next]o15932:0 > -1 && i4363:0 + 1 <= i3556:0 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0 && o15932[LinkedList$Entry.previous]o15932:0 > -1 && o16645[LinkedList$Entry.next]o16643:0 > 0 && o16646[LinkedList$Entry.previous]o16643:0 > 0
f13068_0_entry_GT(i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15930[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15930:0, o15930[LinkedList$Entry.next]o15930:0) -> f13068_0_entry_GT(i4363:0 + 1, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o16641[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o16641:0, o16641[LinkedList$Entry.next]o16641:0) :|: o15932[LinkedList$Entry.next]o15930:0 > 0 && o15930[LinkedList$Entry.next]o15932:0 > 0 && o15930[LinkedList$Entry.next]o15930:0 > 0 && i4363:0 + 1 <= i3556:0 && o15932[LinkedList$Entry.previous]o15932:0 > 0 && o15932[LinkedList$Entry.next]o15932:0 > 0 && o16641[LinkedList$Entry.next]o16639:0 < o15930[LinkedList$Entry.next]o15930:0 && o15932[LinkedList$Entry.next]o16641:0 > o15932[LinkedList$Entry.next]o15930:0 && o16641[LinkedList$Entry.next]o15932:0 < o15930[LinkedList$Entry.next]o15932:0 && o16641[LinkedList$Entry.next]o16641:0 > o16641[LinkedList$Entry.next]o16639:0 && o16641[LinkedList$Entry.next]o16639:0 > -1
f13068_0_entry_GT(i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(i4363:0 + 1, i3556:0, 1, o16742[LinkedList$Entry.previous]o16742:0, 1, 1, 1) :|: o15932[LinkedList$Entry.next]o15932:0 > -1 && i4363:0 + 1 <= i3556:0 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0 && o15932[LinkedList$Entry.previous]o15932:0 > -1 && o16646[LinkedList$Entry.previous]o16643:0 > 0
f13068_0_entry_GT(i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(i4363:0 + 1, i3556:0, 1, 1, 1, 1, 1) :|: o15932[LinkedList$Entry.next]o15932:0 > -1 && i4363:0 + 1 <= i3556:0 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0 && o15932[LinkedList$Entry.previous]o15932:0 > -1

----------------------------------------

(84)
Obligation:
Rules:
f13068_0_entry_GT(i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(i4363:0 + 1, i3556:0, o16790[LinkedList$Entry.next]o16790:0, 1, o16645[LinkedList$Entry.next]o16643:0, 1, o16645[LinkedList$Entry.next]o16645:0) :|: o15932[LinkedList$Entry.next]o15932:0 > -1 && i4363:0 + 1 <= i3556:0 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0 && o15932[LinkedList$Entry.previous]o15932:0 > -1 && o16645[LinkedList$Entry.next]o16643:0 > 0
f13068_0_entry_GT(x, x1, x2, x3, x2, x2, x2) -> f13068_0_entry_GT(x + 1, x1, x4, x5, x6, 1, x7) :|: x2 > -1 && x + 1 <= x1 && x6 < x2 && x8 < x3 && x3 > -1 && x6 > 0 && x8 > 0
f13068_0_entry_GT(x9, x10, x11, x12, x13, x14, x15) -> f13068_0_entry_GT(x9 + 1, x10, x11, x12, x16, x17, x18) :|: x14 > 0 && x13 > 0 && x15 > 0 && x9 + 1 <= x10 && x12 > 0 && x11 > 0 && x19 < x15 && x17 > x14 && x16 < x13 && x18 > x19 && x19 > -1
f13068_0_entry_GT(x20, x21, x22, x23, x22, x22, x22) -> f13068_0_entry_GT(x20 + 1, x21, 1, x24, 1, 1, 1) :|: x22 > -1 && x20 + 1 <= x21 && x25 < x22 && x26 < x23 && x23 > -1 && x26 > 0
f13068_0_entry_GT(x27, x28, x29, x30, x29, x29, x29) -> f13068_0_entry_GT(x27 + 1, x28, 1, 1, 1, 1, 1) :|: x29 > -1 && x27 + 1 <= x28 && x31 < x29 && x32 < x30 && x30 > -1

----------------------------------------

(85) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(86)
Obligation:
Rules:
f13068_0_entry_GT(i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(arith, i3556:0, o16790[LinkedList$Entry.next]o16790:0, 1, o16645[LinkedList$Entry.next]o16643:0, 1, o16645[LinkedList$Entry.next]o16645:0) :|: o15932[LinkedList$Entry.next]o15932:0 > -1 && i4363:0 + 1 <= i3556:0 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0 && o15932[LinkedList$Entry.previous]o15932:0 > -1 && o16645[LinkedList$Entry.next]o16643:0 > 0 && arith = i4363:0 + 1
f13068_0_entry_GT(x33, x34, x35, x36, x35, x35, x35) -> f13068_0_entry_GT(x37, x34, x38, x39, x40, 1, x41) :|: x35 > -1 && x33 + 1 <= x34 && x40 < x35 && x42 < x36 && x36 > -1 && x40 > 0 && x42 > 0 && x37 = x33 + 1
f13068_0_entry_GT(x43, x44, x45, x46, x47, x48, x49) -> f13068_0_entry_GT(x50, x44, x45, x46, x51, x52, x53) :|: x48 > 0 && x47 > 0 && x49 > 0 && x43 + 1 <= x44 && x46 > 0 && x45 > 0 && x54 < x49 && x52 > x48 && x51 < x47 && x53 > x54 && x54 > -1 && x50 = x43 + 1
f13068_0_entry_GT(x55, x56, x57, x58, x57, x57, x57) -> f13068_0_entry_GT(x59, x56, 1, x60, 1, 1, 1) :|: x57 > -1 && x55 + 1 <= x56 && x61 < x57 && x62 < x58 && x58 > -1 && x62 > 0 && x59 = x55 + 1
f13068_0_entry_GT(x63, x64, x65, x66, x65, x65, x65) -> f13068_0_entry_GT(x67, x64, 1, 1, 1, 1, 1) :|: x65 > -1 && x63 + 1 <= x64 && x68 < x65 && x69 < x66 && x66 > -1 && x67 = x63 + 1

----------------------------------------

(87) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13068_0_entry_GT(i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(arith, i3556:0, o16790[LinkedList$Entry.next]o16790:0, 1, o16645[LinkedList$Entry.next]o16643:0, 1, o16645[LinkedList$Entry.next]o16645:0) :|: o15932[LinkedList$Entry.next]o15932:0 > -1 && i4363:0 + 1 <= i3556:0 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0 && o15932[LinkedList$Entry.previous]o15932:0 > -1 && o16645[LinkedList$Entry.next]o16643:0 > 0 && arith = i4363:0 + 1
(2) f13068_0_entry_GT(x33, x34, x35, x36, x35, x35, x35) -> f13068_0_entry_GT(x37, x34, x38, x39, x40, 1, x41) :|: x35 > -1 && x33 + 1 <= x34 && x40 < x35 && x42 < x36 && x36 > -1 && x40 > 0 && x42 > 0 && x37 = x33 + 1
(3) f13068_0_entry_GT(x43, x44, x45, x46, x47, x48, x49) -> f13068_0_entry_GT(x50, x44, x45, x46, x51, x52, x53) :|: x48 > 0 && x47 > 0 && x49 > 0 && x43 + 1 <= x44 && x46 > 0 && x45 > 0 && x54 < x49 && x52 > x48 && x51 < x47 && x53 > x54 && x54 > -1 && x50 = x43 + 1
(4) f13068_0_entry_GT(x55, x56, x57, x58, x57, x57, x57) -> f13068_0_entry_GT(x59, x56, 1, x60, 1, 1, 1) :|: x57 > -1 && x55 + 1 <= x56 && x61 < x57 && x62 < x58 && x58 > -1 && x62 > 0 && x59 = x55 + 1
(5) f13068_0_entry_GT(x63, x64, x65, x66, x65, x65, x65) -> f13068_0_entry_GT(x67, x64, 1, 1, 1, 1, 1) :|: x65 > -1 && x63 + 1 <= x64 && x68 < x65 && x69 < x66 && x66 > -1 && x67 = x63 + 1

Arcs:
(1) -> (3), (5)
(2) -> (3), (4), (5)
(3) -> (1), (2), (3), (4), (5)
(4) -> (3), (4), (5)
(5) -> (3), (5)

This digraph is fully evaluated!
----------------------------------------

(88)
Obligation:

Termination digraph:
Nodes:
(1) f13068_0_entry_GT(i4363:0, i3556:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.previous]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0, o15932[LinkedList$Entry.next]o15932:0) -> f13068_0_entry_GT(arith, i3556:0, o16790[LinkedList$Entry.next]o16790:0, 1, o16645[LinkedList$Entry.next]o16643:0, 1, o16645[LinkedList$Entry.next]o16645:0) :|: o15932[LinkedList$Entry.next]o15932:0 > -1 && i4363:0 + 1 <= i3556:0 && o16645[LinkedList$Entry.next]o16643:0 < o15932[LinkedList$Entry.next]o15932:0 && o16646[LinkedList$Entry.previous]o16643:0 < o15932[LinkedList$Entry.previous]o15932:0 && o15932[LinkedList$Entry.previous]o15932:0 > -1 && o16645[LinkedList$Entry.next]o16643:0 > 0 && arith = i4363:0 + 1
(2) f13068_0_entry_GT(x43, x44, x45, x46, x47, x48, x49) -> f13068_0_entry_GT(x50, x44, x45, x46, x51, x52, x53) :|: x48 > 0 && x47 > 0 && x49 > 0 && x43 + 1 <= x44 && x46 > 0 && x45 > 0 && x54 < x49 && x52 > x48 && x51 < x47 && x53 > x54 && x54 > -1 && x50 = x43 + 1
(3) f13068_0_entry_GT(x63, x64, x65, x66, x65, x65, x65) -> f13068_0_entry_GT(x67, x64, 1, 1, 1, 1, 1) :|: x65 > -1 && x63 + 1 <= x64 && x68 < x65 && x69 < x66 && x66 > -1 && x67 = x63 + 1
(4) f13068_0_entry_GT(x55, x56, x57, x58, x57, x57, x57) -> f13068_0_entry_GT(x59, x56, 1, x60, 1, 1, 1) :|: x57 > -1 && x55 + 1 <= x56 && x61 < x57 && x62 < x58 && x58 > -1 && x62 > 0 && x59 = x55 + 1
(5) f13068_0_entry_GT(x33, x34, x35, x36, x35, x35, x35) -> f13068_0_entry_GT(x37, x34, x38, x39, x40, 1, x41) :|: x35 > -1 && x33 + 1 <= x34 && x40 < x35 && x42 < x36 && x36 > -1 && x40 > 0 && x42 > 0 && x37 = x33 + 1

Arcs:
(1) -> (2), (3)
(2) -> (1), (2), (3), (4), (5)
(3) -> (2), (3)
(4) -> (2), (3), (4)
(5) -> (2), (3), (4)

This digraph is fully evaluated!

----------------------------------------

(89) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(90)
Obligation:
Rules:
f13068_0_entry_GT(x63:0, x64:0, x65:0, x66:0, x65:0, x65:0, x65:0) -> f13068_0_entry_GT(x63:0 + 1, x64:0, 1, 1, 1, 1, 1) :|: x69:0 < x66:0 && x66:0 > -1 && x68:0 < x65:0 && x64:0 >= x63:0 + 1 && x65:0 > -1
f13068_0_entry_GT(x33:0, x34:0, x35:0, x36:0, x35:0, x35:0, x35:0) -> f13068_0_entry_GT(x33:0 + 1, x34:0, x38:0, x39:0, x40:0, 1, x41:0) :|: x40:0 > 0 && x42:0 > 0 && x36:0 > -1 && x42:0 < x36:0 && x40:0 < x35:0 && x34:0 >= x33:0 + 1 && x35:0 > -1
f13068_0_entry_GT(x43:0, x44:0, x45:0, x46:0, x47:0, x48:0, x49:0) -> f13068_0_entry_GT(x43:0 + 1, x44:0, x45:0, x46:0, x51:0, x52:0, x53:0) :|: x54:0 < x53:0 && x54:0 > -1 && x51:0 < x47:0 && x52:0 > x48:0 && x54:0 < x49:0 && x45:0 > 0 && x46:0 > 0 && x44:0 >= x43:0 + 1 && x49:0 > 0 && x47:0 > 0 && x48:0 > 0
f13068_0_entry_GT(i4363:0:0, i3556:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.previous]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0) -> f13068_0_entry_GT(i4363:0:0 + 1, i3556:0:0, o16790[LinkedList$Entry.next]o16790:0:0, 1, o16645[LinkedList$Entry.next]o16643:0:0, 1, o16645[LinkedList$Entry.next]o16645:0:0) :|: o15932[LinkedList$Entry.previous]o15932:0:0 > -1 && o16645[LinkedList$Entry.next]o16643:0:0 > 0 && o16646[LinkedList$Entry.previous]o16643:0:0 < o15932[LinkedList$Entry.previous]o15932:0:0 && o16645[LinkedList$Entry.next]o16643:0:0 < o15932[LinkedList$Entry.next]o15932:0:0 && i4363:0:0 + 1 <= i3556:0:0 && o15932[LinkedList$Entry.next]o15932:0:0 > -1
f13068_0_entry_GT(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f13068_0_entry_GT(x55:0 + 1, x56:0, 1, x60:0, 1, 1, 1) :|: x58:0 > -1 && x62:0 > 0 && x62:0 < x58:0 && x61:0 < x57:0 && x56:0 >= x55:0 + 1 && x57:0 > -1

----------------------------------------

(91) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13068_0_entry_GT(INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(92)
Obligation:
Rules:
f13068_0_entry_GT(x63:0, x64:0, x65:0, x66:0, x65:0, x65:0, x65:0) -> f13068_0_entry_GT(c, x64:0, c1, c2, c3, c4, c5) :|: c5 = 1 && (c4 = 1 && (c3 = 1 && (c2 = 1 && (c1 = 1 && c = x63:0 + 1)))) && (x69:0 < x66:0 && x66:0 > -1 && x68:0 < x65:0 && x64:0 >= x63:0 + 1 && x65:0 > -1)
f13068_0_entry_GT(x33:0, x34:0, x35:0, x36:0, x35:0, x35:0, x35:0) -> f13068_0_entry_GT(c6, x34:0, x38:0, x39:0, x40:0, c7, x41:0) :|: c7 = 1 && c6 = x33:0 + 1 && (x40:0 > 0 && x42:0 > 0 && x36:0 > -1 && x42:0 < x36:0 && x40:0 < x35:0 && x34:0 >= x33:0 + 1 && x35:0 > -1)
f13068_0_entry_GT(x43:0, x44:0, x45:0, x46:0, x47:0, x48:0, x49:0) -> f13068_0_entry_GT(c8, x44:0, x45:0, x46:0, x51:0, x52:0, x53:0) :|: c8 = x43:0 + 1 && (x54:0 < x53:0 && x54:0 > -1 && x51:0 < x47:0 && x52:0 > x48:0 && x54:0 < x49:0 && x45:0 > 0 && x46:0 > 0 && x44:0 >= x43:0 + 1 && x49:0 > 0 && x47:0 > 0 && x48:0 > 0)
f13068_0_entry_GT(i4363:0:0, i3556:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.previous]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0) -> f13068_0_entry_GT(c9, i3556:0:0, o16790[LinkedList$Entry.next]o16790:0:0, c10, o16645[LinkedList$Entry.next]o16643:0:0, c11, o16645[LinkedList$Entry.next]o16645:0:0) :|: c11 = 1 && (c10 = 1 && c9 = i4363:0:0 + 1) && (o15932[LinkedList$Entry.previous]o15932:0:0 > -1 && o16645[LinkedList$Entry.next]o16643:0:0 > 0 && o16646[LinkedList$Entry.previous]o16643:0:0 < o15932[LinkedList$Entry.previous]o15932:0:0 && o16645[LinkedList$Entry.next]o16643:0:0 < o15932[LinkedList$Entry.next]o15932:0:0 && i4363:0:0 + 1 <= i3556:0:0 && o15932[LinkedList$Entry.next]o15932:0:0 > -1)
f13068_0_entry_GT(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f13068_0_entry_GT(c12, x56:0, c13, x60:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x55:0 + 1))) && (x58:0 > -1 && x62:0 > 0 && x62:0 < x58:0 && x61:0 < x57:0 && x56:0 >= x55:0 + 1 && x57:0 > -1)

----------------------------------------

(93) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f13068_0_entry_GT ] = f13068_0_entry_GT_2 + -1*f13068_0_entry_GT_1

The following rules are decreasing:
f13068_0_entry_GT(x63:0, x64:0, x65:0, x66:0, x65:0, x65:0, x65:0) -> f13068_0_entry_GT(c, x64:0, c1, c2, c3, c4, c5) :|: c5 = 1 && (c4 = 1 && (c3 = 1 && (c2 = 1 && (c1 = 1 && c = x63:0 + 1)))) && (x69:0 < x66:0 && x66:0 > -1 && x68:0 < x65:0 && x64:0 >= x63:0 + 1 && x65:0 > -1)
f13068_0_entry_GT(x33:0, x34:0, x35:0, x36:0, x35:0, x35:0, x35:0) -> f13068_0_entry_GT(c6, x34:0, x38:0, x39:0, x40:0, c7, x41:0) :|: c7 = 1 && c6 = x33:0 + 1 && (x40:0 > 0 && x42:0 > 0 && x36:0 > -1 && x42:0 < x36:0 && x40:0 < x35:0 && x34:0 >= x33:0 + 1 && x35:0 > -1)
f13068_0_entry_GT(x43:0, x44:0, x45:0, x46:0, x47:0, x48:0, x49:0) -> f13068_0_entry_GT(c8, x44:0, x45:0, x46:0, x51:0, x52:0, x53:0) :|: c8 = x43:0 + 1 && (x54:0 < x53:0 && x54:0 > -1 && x51:0 < x47:0 && x52:0 > x48:0 && x54:0 < x49:0 && x45:0 > 0 && x46:0 > 0 && x44:0 >= x43:0 + 1 && x49:0 > 0 && x47:0 > 0 && x48:0 > 0)
f13068_0_entry_GT(i4363:0:0, i3556:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.previous]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0) -> f13068_0_entry_GT(c9, i3556:0:0, o16790[LinkedList$Entry.next]o16790:0:0, c10, o16645[LinkedList$Entry.next]o16643:0:0, c11, o16645[LinkedList$Entry.next]o16645:0:0) :|: c11 = 1 && (c10 = 1 && c9 = i4363:0:0 + 1) && (o15932[LinkedList$Entry.previous]o15932:0:0 > -1 && o16645[LinkedList$Entry.next]o16643:0:0 > 0 && o16646[LinkedList$Entry.previous]o16643:0:0 < o15932[LinkedList$Entry.previous]o15932:0:0 && o16645[LinkedList$Entry.next]o16643:0:0 < o15932[LinkedList$Entry.next]o15932:0:0 && i4363:0:0 + 1 <= i3556:0:0 && o15932[LinkedList$Entry.next]o15932:0:0 > -1)
f13068_0_entry_GT(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f13068_0_entry_GT(c12, x56:0, c13, x60:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x55:0 + 1))) && (x58:0 > -1 && x62:0 > 0 && x62:0 < x58:0 && x61:0 < x57:0 && x56:0 >= x55:0 + 1 && x57:0 > -1)

The following rules are bounded:
f13068_0_entry_GT(x63:0, x64:0, x65:0, x66:0, x65:0, x65:0, x65:0) -> f13068_0_entry_GT(c, x64:0, c1, c2, c3, c4, c5) :|: c5 = 1 && (c4 = 1 && (c3 = 1 && (c2 = 1 && (c1 = 1 && c = x63:0 + 1)))) && (x69:0 < x66:0 && x66:0 > -1 && x68:0 < x65:0 && x64:0 >= x63:0 + 1 && x65:0 > -1)
f13068_0_entry_GT(x33:0, x34:0, x35:0, x36:0, x35:0, x35:0, x35:0) -> f13068_0_entry_GT(c6, x34:0, x38:0, x39:0, x40:0, c7, x41:0) :|: c7 = 1 && c6 = x33:0 + 1 && (x40:0 > 0 && x42:0 > 0 && x36:0 > -1 && x42:0 < x36:0 && x40:0 < x35:0 && x34:0 >= x33:0 + 1 && x35:0 > -1)
f13068_0_entry_GT(x43:0, x44:0, x45:0, x46:0, x47:0, x48:0, x49:0) -> f13068_0_entry_GT(c8, x44:0, x45:0, x46:0, x51:0, x52:0, x53:0) :|: c8 = x43:0 + 1 && (x54:0 < x53:0 && x54:0 > -1 && x51:0 < x47:0 && x52:0 > x48:0 && x54:0 < x49:0 && x45:0 > 0 && x46:0 > 0 && x44:0 >= x43:0 + 1 && x49:0 > 0 && x47:0 > 0 && x48:0 > 0)
f13068_0_entry_GT(i4363:0:0, i3556:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.previous]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0, o15932[LinkedList$Entry.next]o15932:0:0) -> f13068_0_entry_GT(c9, i3556:0:0, o16790[LinkedList$Entry.next]o16790:0:0, c10, o16645[LinkedList$Entry.next]o16643:0:0, c11, o16645[LinkedList$Entry.next]o16645:0:0) :|: c11 = 1 && (c10 = 1 && c9 = i4363:0:0 + 1) && (o15932[LinkedList$Entry.previous]o15932:0:0 > -1 && o16645[LinkedList$Entry.next]o16643:0:0 > 0 && o16646[LinkedList$Entry.previous]o16643:0:0 < o15932[LinkedList$Entry.previous]o15932:0:0 && o16645[LinkedList$Entry.next]o16643:0:0 < o15932[LinkedList$Entry.next]o15932:0:0 && i4363:0:0 + 1 <= i3556:0:0 && o15932[LinkedList$Entry.next]o15932:0:0 > -1)
f13068_0_entry_GT(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f13068_0_entry_GT(c12, x56:0, c13, x60:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x55:0 + 1))) && (x58:0 > -1 && x62:0 > 0 && x62:0 < x58:0 && x61:0 < x57:0 && x56:0 >= x55:0 + 1 && x57:0 > -1)


----------------------------------------

(94)
YES

----------------------------------------

(95)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveLastOccurrence.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [previous]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(96) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 40 IRulesP rules:
f12536_0_entry_LE(EOS(STATIC_12536), i3556, i3714, i3714, i3556, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) -> f12549_0_entry_Load(EOS(STATIC_12549), i3556, i3714, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) :|: i3714 > i3556
f12549_0_entry_Load(EOS(STATIC_12549), i3556, i3714, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) -> f12568_0_entry_FieldAccess(EOS(STATIC_12568), i3556, i3714, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) :|: TRUE
f12568_0_entry_FieldAccess(EOS(STATIC_12568), i3556, i3714, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) -> f12582_0_entry_FieldAccess(EOS(STATIC_12582), i3556, i3714, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) :|: o12949[LinkedList$Entry.previous]o12947 > 0 && o12949[LinkedList$Entry.next]o12949 > 0 && o12947[LinkedList$Entry.previous]o12949 > 0 && o12949[LinkedList$Entry.previous]o12949 > 0 && o12947[LinkedList$Entry.previous]o12947 > 0
f12568_0_entry_FieldAccess(EOS(STATIC_12568), i3556, i3714, o13265[LinkedList$Entry.previous]o13265, o13265[LinkedList$Entry.next]o13265, o13265[LinkedList$Entry.previous]o13265, o13265[LinkedList$Entry.previous]o13265, o13265[LinkedList$Entry.previous]o13265) -> f12583_0_entry_FieldAccess(EOS(STATIC_12583), i3556, i3714, o13265[LinkedList$Entry.next]o13265, o13265[LinkedList$Entry.previous]o13265) :|: TRUE
f12582_0_entry_FieldAccess(EOS(STATIC_12582), i3556, i3714, o12949[LinkedList$Entry.previous]o13316, o12949[LinkedList$Entry.next]o12949, o13316[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o13316[LinkedList$Entry.previous]o13316) -> f12600_0_entry_FieldAccess(EOS(STATIC_12600), i3556, i3714, o12949[LinkedList$Entry.next]o12949, o12949[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o13316, o13319[LinkedList$Entry.previous]o12949, o13319[LinkedList$Entry.previous]o13316) :|: o13319[LinkedList$Entry.previous]o12949 < o13316[LinkedList$Entry.previous]o12949 && o13316[LinkedList$Entry.previous]o12949 >= 0 && o13319[LinkedList$Entry.previous]o13316 < o13316[LinkedList$Entry.previous]o13316 && o13316[LinkedList$Entry.previous]o13316 >= 0
f12600_0_entry_FieldAccess(EOS(STATIC_12600), i3556, i3714, o12949[LinkedList$Entry.next]o12949, o12949[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o13316, o13319[LinkedList$Entry.previous]o12949, o13319[LinkedList$Entry.previous]o13316) -> f12620_0_entry_Store(EOS(STATIC_12620), i3556, i3714, o12949[LinkedList$Entry.next]o12949, o12949[LinkedList$Entry.previous]o12949, o13319[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o13319, o13319[LinkedList$Entry.previous]o13319) :|: o12949[LinkedList$Entry.previous]o13319 > o12949[LinkedList$Entry.previous]o13316 && o12949[LinkedList$Entry.previous]o13316 >= 0 && o13319[LinkedList$Entry.previous]o13319 > o13319[LinkedList$Entry.previous]o13316 && o13319[LinkedList$Entry.previous]o13316 >= 0
f12620_0_entry_Store(EOS(STATIC_12620), i3556, i3714, o12949[LinkedList$Entry.next]o12949, o12949[LinkedList$Entry.previous]o12949, o13319[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o13319, o13319[LinkedList$Entry.previous]o13319) -> f12644_0_entry_Inc(EOS(STATIC_12644), i3556, i3714, o12949[LinkedList$Entry.next]o12949, o12949[LinkedList$Entry.previous]o12949, o13319[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o13319, o13319[LinkedList$Entry.previous]o13319) :|: TRUE
f12644_0_entry_Inc(EOS(STATIC_12644), i3556, i3714, o12949[LinkedList$Entry.next]o12949, o12949[LinkedList$Entry.previous]o12949, o13319[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o13319, o13319[LinkedList$Entry.previous]o13319) -> f12670_0_entry_JMP(EOS(STATIC_12670), i3556, i3714 + -1, o12949[LinkedList$Entry.next]o12949, o12949[LinkedList$Entry.previous]o12949, o13319[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o13319, o13319[LinkedList$Entry.previous]o13319) :|: TRUE
f12670_0_entry_JMP(EOS(STATIC_12670), i3556, i3793, o12949[LinkedList$Entry.next]o12949, o12949[LinkedList$Entry.previous]o12949, o13319[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o13319, o13319[LinkedList$Entry.previous]o13319) -> f12691_0_entry_Load(EOS(STATIC_12691), i3556, i3793, o12949[LinkedList$Entry.next]o12949, o12949[LinkedList$Entry.previous]o12949, o13319[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o13319, o13319[LinkedList$Entry.previous]o13319) :|: TRUE
f12691_0_entry_Load(EOS(STATIC_12691), i3556, i3793, o12949[LinkedList$Entry.next]o12949, o12949[LinkedList$Entry.previous]o12949, o13319[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o13319, o13319[LinkedList$Entry.previous]o13319) -> f12506_0_entry_Load(EOS(STATIC_12506), i3556, i3793, o12949[LinkedList$Entry.previous]o13319, o12949[LinkedList$Entry.next]o12949, o13319[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o13319[LinkedList$Entry.previous]o13319) :|: TRUE
f12506_0_entry_Load(EOS(STATIC_12506), i3556, i3714, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) -> f12515_0_entry_Load(EOS(STATIC_12515), i3556, i3714, i3714, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) :|: TRUE
f12515_0_entry_Load(EOS(STATIC_12515), i3556, i3714, i3714, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) -> f12526_0_entry_LE(EOS(STATIC_12526), i3556, i3714, i3714, i3556, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) :|: TRUE
f12526_0_entry_LE(EOS(STATIC_12526), i3556, i3714, i3714, i3556, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) -> f12536_0_entry_LE(EOS(STATIC_12536), i3556, i3714, i3714, i3556, o12949[LinkedList$Entry.previous]o12947, o12949[LinkedList$Entry.next]o12949, o12947[LinkedList$Entry.previous]o12949, o12949[LinkedList$Entry.previous]o12949, o12947[LinkedList$Entry.previous]o12947) :|: i3714 > i3556
f12583_0_entry_FieldAccess(EOS(STATIC_12583), i3556, i3714, o13320[LinkedList$Entry.next]o13320, o13320[LinkedList$Entry.previous]o13320) -> f12601_0_entry_FieldAccess(EOS(STATIC_12601), i3556, i3714, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) :|: o13322[LinkedList$Entry.next]o13320 < o13320[LinkedList$Entry.next]o13320 && o13320[LinkedList$Entry.next]o13320 >= 0 && o13323[LinkedList$Entry.previous]o13320 < o13320[LinkedList$Entry.previous]o13320 && o13320[LinkedList$Entry.previous]o13320 >= 0
f12601_0_entry_FieldAccess(EOS(STATIC_12601), i3556, i3714, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) -> f12621_0_entry_FieldAccess(EOS(STATIC_12621), i3556, i3714, o13323[LinkedList$Entry.previous]o13320, o13322[LinkedList$Entry.next]o13320) :|: o13322[LinkedList$Entry.next]o13320 > 0
f12601_0_entry_FieldAccess(EOS(STATIC_12601), i3556, i3714, o13322[LinkedList$Entry.next]o13388, o13323[LinkedList$Entry.previous]o13388) -> f12622_0_entry_FieldAccess(EOS(STATIC_12622), i3556, i3714, o13323[LinkedList$Entry.previous]o13388) :|: TRUE
f12621_0_entry_FieldAccess(EOS(STATIC_12621), i3556, i3714, o13323[LinkedList$Entry.previous]o13320, o13322[LinkedList$Entry.next]o13320) -> f12645_0_entry_FieldAccess(EOS(STATIC_12645), i3556, i3714, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) :|: o13323[LinkedList$Entry.previous]o13320 > 0
f12621_0_entry_FieldAccess(EOS(STATIC_12621), i3556, i3714, o13323[LinkedList$Entry.previous]o13447, o13322[LinkedList$Entry.next]o13447) -> f12646_0_entry_FieldAccess(EOS(STATIC_12646), i3556, i3714, o13322[LinkedList$Entry.next]o13447) :|: TRUE
f12645_0_entry_FieldAccess(EOS(STATIC_12645), i3556, i3714, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) -> f12671_0_entry_Store(EOS(STATIC_12671), i3556, i3714, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) :|: TRUE
f12671_0_entry_Store(EOS(STATIC_12671), i3556, i3714, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) -> f12692_0_entry_Inc(EOS(STATIC_12692), i3556, i3714, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) :|: TRUE
f12692_0_entry_Inc(EOS(STATIC_12692), i3556, i3714, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) -> f12710_0_entry_JMP(EOS(STATIC_12710), i3556, i3714 + -1, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) :|: TRUE
f12710_0_entry_JMP(EOS(STATIC_12710), i3556, i3807, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) -> f12724_0_entry_Load(EOS(STATIC_12724), i3556, i3807, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) :|: TRUE
f12724_0_entry_Load(EOS(STATIC_12724), i3556, i3807, o13322[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320) -> f12506_0_entry_Load(EOS(STATIC_12506), i3556, i3807, o13320[LinkedList$Entry.previous]o13323, o13320[LinkedList$Entry.next]o13320, o13323[LinkedList$Entry.previous]o13320, o13320[LinkedList$Entry.previous]o13320, o13323[LinkedList$Entry.previous]o13323) :|: o13320[LinkedList$Entry.previous]o13323 = 1
f12646_0_entry_FieldAccess(EOS(STATIC_12646), i3556, i3714, o13322[LinkedList$Entry.next]o13447) -> f12672_0_entry_Store(EOS(STATIC_12672), i3556, i3714, o13322[LinkedList$Entry.next]o13447) :|: TRUE
f12672_0_entry_Store(EOS(STATIC_12672), i3556, i3714, o13322[LinkedList$Entry.next]o13447) -> f12693_0_entry_Inc(EOS(STATIC_12693), i3556, i3714, o13322[LinkedList$Entry.next]o13447) :|: TRUE
f12693_0_entry_Inc(EOS(STATIC_12693), i3556, i3714, o13322[LinkedList$Entry.next]o13447) -> f12711_0_entry_JMP(EOS(STATIC_12711), i3556, i3714 + -1, o13322[LinkedList$Entry.next]o13447) :|: TRUE
f12711_0_entry_JMP(EOS(STATIC_12711), i3556, i3809, o13322[LinkedList$Entry.next]o13447) -> f12725_0_entry_Load(EOS(STATIC_12725), i3556, i3809, o13322[LinkedList$Entry.next]o13447) :|: TRUE
f12725_0_entry_Load(EOS(STATIC_12725), i3556, i3809, o13322[LinkedList$Entry.next]o13447) -> f12506_0_entry_Load(EOS(STATIC_12506), i3556, i3809, o13447[LinkedList$Entry.previous]o13447, o13447[LinkedList$Entry.next]o13447, o13447[LinkedList$Entry.previous]o13447, o13447[LinkedList$Entry.previous]o13447, o13447[LinkedList$Entry.previous]o13447) :|: o13447[LinkedList$Entry.previous]o13447 = 1 && o13447[LinkedList$Entry.previous]o13447 = 1 && o13447[LinkedList$Entry.previous]o13447 = 1 && o13447[LinkedList$Entry.previous]o13447 = 1
f12622_0_entry_FieldAccess(EOS(STATIC_12622), i3556, i3714, o13323[LinkedList$Entry.previous]o13388) -> f12647_0_entry_FieldAccess(EOS(STATIC_12647), i3556, i3714, o13323[LinkedList$Entry.previous]o13388) :|: o13323[LinkedList$Entry.previous]o13388 > 0
f12622_0_entry_FieldAccess(EOS(STATIC_12622), i3556, i3714, o13323[LinkedList$Entry.previous]o13450) -> f12648_0_entry_FieldAccess(EOS(STATIC_12648), i3556, i3714) :|: TRUE
f12647_0_entry_FieldAccess(EOS(STATIC_12647), i3556, i3714, o13323[LinkedList$Entry.previous]o13388) -> f12673_0_entry_Store(EOS(STATIC_12673), i3556, i3714, o13323[LinkedList$Entry.previous]o13388) :|: TRUE
f12673_0_entry_Store(EOS(STATIC_12673), i3556, i3714, o13323[LinkedList$Entry.previous]o13388) -> f12694_0_entry_Inc(EOS(STATIC_12694), i3556, i3714, o13323[LinkedList$Entry.previous]o13388) :|: TRUE
f12694_0_entry_Inc(EOS(STATIC_12694), i3556, i3714, o13323[LinkedList$Entry.previous]o13388) -> f12712_0_entry_JMP(EOS(STATIC_12712), i3556, i3714 + -1, o13323[LinkedList$Entry.previous]o13388) :|: TRUE
f12712_0_entry_JMP(EOS(STATIC_12712), i3556, i3810, o13323[LinkedList$Entry.previous]o13388) -> f12726_0_entry_Load(EOS(STATIC_12726), i3556, i3810, o13323[LinkedList$Entry.previous]o13388) :|: TRUE
f12726_0_entry_Load(EOS(STATIC_12726), i3556, i3810, o13323[LinkedList$Entry.previous]o13388) -> f12506_0_entry_Load(EOS(STATIC_12506), i3556, i3810, o13388[LinkedList$Entry.previous]o13323, o13388[LinkedList$Entry.next]o13388, o13323[LinkedList$Entry.previous]o13388, o13388[LinkedList$Entry.previous]o13388, o13323[LinkedList$Entry.previous]o13323) :|: o13388[LinkedList$Entry.previous]o13323 = 1 && o13388[LinkedList$Entry.next]o13388 = 1
f12648_0_entry_FieldAccess(EOS(STATIC_12648), i3556, i3714) -> f12674_0_entry_Store(EOS(STATIC_12674), i3556, i3714) :|: TRUE
f12674_0_entry_Store(EOS(STATIC_12674), i3556, i3714) -> f12695_0_entry_Inc(EOS(STATIC_12695), i3556, i3714) :|: TRUE
f12695_0_entry_Inc(EOS(STATIC_12695), i3556, i3714) -> f12713_0_entry_JMP(EOS(STATIC_12713), i3556, i3714 + -1) :|: TRUE
f12713_0_entry_JMP(EOS(STATIC_12713), i3556, i3814) -> f12727_0_entry_Load(EOS(STATIC_12727), i3556, i3814) :|: TRUE
f12727_0_entry_Load(EOS(STATIC_12727), i3556, i3814) -> f12506_0_entry_Load(EOS(STATIC_12506), i3556, i3814, o13450[LinkedList$Entry.previous]o13450, o13450[LinkedList$Entry.next]o13450, o13450[LinkedList$Entry.previous]o13450, o13450[LinkedList$Entry.previous]o13450, o13450[LinkedList$Entry.previous]o13450) :|: o13450[LinkedList$Entry.previous]o13450 = 1 && o13450[LinkedList$Entry.next]o13450 = 1 && o13450[LinkedList$Entry.previous]o13450 = 1 && o13450[LinkedList$Entry.previous]o13450 = 1 && o13450[LinkedList$Entry.previous]o13450 = 1
Combined rules. Obtained 5 IRulesP rules:
f12536_0_entry_LE(EOS(STATIC_12536), i3556:0, i3714:0, i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12947[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o12947[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(EOS(STATIC_12536), i3556:0, i3714:0 - 1, i3714:0 - 1, i3556:0, o12949[LinkedList$Entry.previous]o13319:0, o12949[LinkedList$Entry.next]o12949:0, o13319[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o13319[LinkedList$Entry.previous]o13319:0) :|: o12949[LinkedList$Entry.previous]o12947:0 > 0 && o12947[LinkedList$Entry.previous]o12949:0 > 0 && o12947[LinkedList$Entry.previous]o12947:0 > 0 && o12949[LinkedList$Entry.next]o12949:0 > 0 && o13319[LinkedList$Entry.previous]o12949:0 < o12947[LinkedList$Entry.previous]o12949:0 && o12949[LinkedList$Entry.previous]o12949:0 > 0 && o12949[LinkedList$Entry.previous]o13319:0 > o12949[LinkedList$Entry.previous]o12947:0 && o13319[LinkedList$Entry.previous]o13316:0 < o12947[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o13319[LinkedList$Entry.previous]o13319:0 > o13319[LinkedList$Entry.previous]o13316:0 && i3714:0 - 1 > i3556:0 && o13319[LinkedList$Entry.previous]o13316:0 > -1
f12536_0_entry_LE(EOS(STATIC_12536), i3556:0, i3714:0, i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(EOS(STATIC_12536), i3556:0, i3714:0 - 1, i3714:0 - 1, i3556:0, 1, o13447[LinkedList$Entry.next]o13447:0, 1, 1, 1) :|: o12949[LinkedList$Entry.next]o12949:0 > -1 && o13322[LinkedList$Entry.next]o13320:0 < o12949[LinkedList$Entry.next]o12949:0 && o13323[LinkedList$Entry.previous]o13320:0 < o12949[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o12949[LinkedList$Entry.previous]o12947:0 > -1 && i3714:0 - 1 > i3556:0 && o13322[LinkedList$Entry.next]o13320:0 > 0
f12536_0_entry_LE(EOS(STATIC_12536), i3556:0, i3714:0, i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(EOS(STATIC_12536), i3556:0, i3714:0 - 1, i3714:0 - 1, i3556:0, 1, 1, 1, 1, 1) :|: o12949[LinkedList$Entry.next]o12949:0 > -1 && o13322[LinkedList$Entry.next]o13320:0 < o12949[LinkedList$Entry.next]o12949:0 && o13323[LinkedList$Entry.previous]o13320:0 < o12949[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && i3714:0 - 1 > i3556:0 && o12949[LinkedList$Entry.previous]o12947:0 > -1
f12536_0_entry_LE(EOS(STATIC_12536), i3556:0, i3714:0, i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(EOS(STATIC_12536), i3556:0, i3714:0 - 1, i3714:0 - 1, i3556:0, 1, 1, o13323[LinkedList$Entry.previous]o13320:0, o13388[LinkedList$Entry.previous]o13388:0, o13323[LinkedList$Entry.previous]o13323:0) :|: o12949[LinkedList$Entry.next]o12949:0 > -1 && o13322[LinkedList$Entry.next]o13320:0 < o12949[LinkedList$Entry.next]o12949:0 && o13323[LinkedList$Entry.previous]o13320:0 < o12949[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o12949[LinkedList$Entry.previous]o12947:0 > -1 && i3714:0 - 1 > i3556:0 && o13323[LinkedList$Entry.previous]o13320:0 > 0
f12536_0_entry_LE(EOS(STATIC_12536), i3556:0, i3714:0, i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(EOS(STATIC_12536), i3556:0, i3714:0 - 1, i3714:0 - 1, i3556:0, 1, o13320[LinkedList$Entry.next]o13320:0, o13323[LinkedList$Entry.previous]o13320:0, o13320[LinkedList$Entry.previous]o13320:0, o13323[LinkedList$Entry.previous]o13323:0) :|: o12949[LinkedList$Entry.next]o12949:0 > -1 && o13322[LinkedList$Entry.next]o13320:0 < o12949[LinkedList$Entry.next]o12949:0 && o13323[LinkedList$Entry.previous]o13320:0 < o12949[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o12949[LinkedList$Entry.previous]o12947:0 > -1 && o13322[LinkedList$Entry.next]o13320:0 > 0 && i3714:0 - 1 > i3556:0 && o13323[LinkedList$Entry.previous]o13320:0 > 0
Filtered constant ground arguments:
   f12536_0_entry_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f12536_0_entry_LE(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f12536_0_entry_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f12536_0_entry_LE(x3, x4, x5, x6, x7, x8, x9)
Finished conversion. Obtained 5 rules.P rules:
f12536_0_entry_LE(i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12947[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o12947[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(i3714:0 - 1, i3556:0, o12949[LinkedList$Entry.previous]o13319:0, o12949[LinkedList$Entry.next]o12949:0, o13319[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o13319[LinkedList$Entry.previous]o13319:0) :|: o12947[LinkedList$Entry.previous]o12949:0 > 0 && o12949[LinkedList$Entry.previous]o12947:0 > 0 && o12947[LinkedList$Entry.previous]o12947:0 > 0 && o12949[LinkedList$Entry.next]o12949:0 > 0 && o13319[LinkedList$Entry.previous]o12949:0 < o12947[LinkedList$Entry.previous]o12949:0 && o12949[LinkedList$Entry.previous]o12949:0 > 0 && o12949[LinkedList$Entry.previous]o13319:0 > o12949[LinkedList$Entry.previous]o12947:0 && o13319[LinkedList$Entry.previous]o13316:0 < o12947[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o13319[LinkedList$Entry.previous]o13319:0 > o13319[LinkedList$Entry.previous]o13316:0 && o13319[LinkedList$Entry.previous]o13316:0 > -1 && i3714:0 - 1 > i3556:0
f12536_0_entry_LE(i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(i3714:0 - 1, i3556:0, 1, o13447[LinkedList$Entry.next]o13447:0, 1, 1, 1) :|: o13322[LinkedList$Entry.next]o13320:0 < o12949[LinkedList$Entry.next]o12949:0 && o12949[LinkedList$Entry.next]o12949:0 > -1 && o13323[LinkedList$Entry.previous]o13320:0 < o12949[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o12949[LinkedList$Entry.previous]o12947:0 > -1 && o13322[LinkedList$Entry.next]o13320:0 > 0 && i3714:0 - 1 > i3556:0
f12536_0_entry_LE(i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(i3714:0 - 1, i3556:0, 1, 1, 1, 1, 1) :|: o13322[LinkedList$Entry.next]o13320:0 < o12949[LinkedList$Entry.next]o12949:0 && o12949[LinkedList$Entry.next]o12949:0 > -1 && o13323[LinkedList$Entry.previous]o13320:0 < o12949[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o12949[LinkedList$Entry.previous]o12947:0 > -1 && i3714:0 - 1 > i3556:0
f12536_0_entry_LE(i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(i3714:0 - 1, i3556:0, 1, 1, o13323[LinkedList$Entry.previous]o13320:0, o13388[LinkedList$Entry.previous]o13388:0, o13323[LinkedList$Entry.previous]o13323:0) :|: o13322[LinkedList$Entry.next]o13320:0 < o12949[LinkedList$Entry.next]o12949:0 && o12949[LinkedList$Entry.next]o12949:0 > -1 && o13323[LinkedList$Entry.previous]o13320:0 < o12949[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o12949[LinkedList$Entry.previous]o12947:0 > -1 && o13323[LinkedList$Entry.previous]o13320:0 > 0 && i3714:0 - 1 > i3556:0
f12536_0_entry_LE(i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(i3714:0 - 1, i3556:0, 1, o13320[LinkedList$Entry.next]o13320:0, o13323[LinkedList$Entry.previous]o13320:0, o13320[LinkedList$Entry.previous]o13320:0, o13323[LinkedList$Entry.previous]o13323:0) :|: o13322[LinkedList$Entry.next]o13320:0 < o12949[LinkedList$Entry.next]o12949:0 && o12949[LinkedList$Entry.next]o12949:0 > -1 && o13323[LinkedList$Entry.previous]o13320:0 < o12949[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o12949[LinkedList$Entry.previous]o12947:0 > -1 && o13322[LinkedList$Entry.next]o13320:0 > 0 && o13323[LinkedList$Entry.previous]o13320:0 > 0 && i3714:0 - 1 > i3556:0

----------------------------------------

(97)
Obligation:
Rules:
f12536_0_entry_LE(i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12947[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o12947[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(i3714:0 - 1, i3556:0, o12949[LinkedList$Entry.previous]o13319:0, o12949[LinkedList$Entry.next]o12949:0, o13319[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o13319[LinkedList$Entry.previous]o13319:0) :|: o12947[LinkedList$Entry.previous]o12949:0 > 0 && o12949[LinkedList$Entry.previous]o12947:0 > 0 && o12947[LinkedList$Entry.previous]o12947:0 > 0 && o12949[LinkedList$Entry.next]o12949:0 > 0 && o13319[LinkedList$Entry.previous]o12949:0 < o12947[LinkedList$Entry.previous]o12949:0 && o12949[LinkedList$Entry.previous]o12949:0 > 0 && o12949[LinkedList$Entry.previous]o13319:0 > o12949[LinkedList$Entry.previous]o12947:0 && o13319[LinkedList$Entry.previous]o13316:0 < o12947[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o13319[LinkedList$Entry.previous]o13319:0 > o13319[LinkedList$Entry.previous]o13316:0 && o13319[LinkedList$Entry.previous]o13316:0 > -1 && i3714:0 - 1 > i3556:0
f12536_0_entry_LE(x, x1, x2, x3, x2, x2, x2) -> f12536_0_entry_LE(x - 1, x1, 1, x4, 1, 1, 1) :|: x5 < x3 && x3 > -1 && x6 < x2 && x > x1 && x2 > -1 && x5 > 0 && x - 1 > x1
f12536_0_entry_LE(x7, x8, x9, x10, x9, x9, x9) -> f12536_0_entry_LE(x7 - 1, x8, 1, 1, 1, 1, 1) :|: x11 < x10 && x10 > -1 && x12 < x9 && x7 > x8 && x9 > -1 && x7 - 1 > x8
f12536_0_entry_LE(x13, x14, x15, x16, x15, x15, x15) -> f12536_0_entry_LE(x13 - 1, x14, 1, 1, x17, x18, x19) :|: x20 < x16 && x16 > -1 && x17 < x15 && x13 > x14 && x15 > -1 && x17 > 0 && x13 - 1 > x14
f12536_0_entry_LE(x21, x22, x23, x24, x23, x23, x23) -> f12536_0_entry_LE(x21 - 1, x22, 1, x25, x26, x27, x28) :|: x29 < x24 && x24 > -1 && x26 < x23 && x21 > x22 && x23 > -1 && x29 > 0 && x26 > 0 && x21 - 1 > x22

----------------------------------------

(98) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(99)
Obligation:
Rules:
f12536_0_entry_LE(i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12947[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o12947[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(arith, i3556:0, o12949[LinkedList$Entry.previous]o13319:0, o12949[LinkedList$Entry.next]o12949:0, o13319[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o13319[LinkedList$Entry.previous]o13319:0) :|: o12947[LinkedList$Entry.previous]o12949:0 > 0 && o12949[LinkedList$Entry.previous]o12947:0 > 0 && o12947[LinkedList$Entry.previous]o12947:0 > 0 && o12949[LinkedList$Entry.next]o12949:0 > 0 && o13319[LinkedList$Entry.previous]o12949:0 < o12947[LinkedList$Entry.previous]o12949:0 && o12949[LinkedList$Entry.previous]o12949:0 > 0 && o12949[LinkedList$Entry.previous]o13319:0 > o12949[LinkedList$Entry.previous]o12947:0 && o13319[LinkedList$Entry.previous]o13316:0 < o12947[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o13319[LinkedList$Entry.previous]o13319:0 > o13319[LinkedList$Entry.previous]o13316:0 && o13319[LinkedList$Entry.previous]o13316:0 > -1 && i3714:0 - 1 > i3556:0 && arith = i3714:0 - 1
f12536_0_entry_LE(x30, x31, x32, x33, x32, x32, x32) -> f12536_0_entry_LE(x34, x31, 1, x35, 1, 1, 1) :|: x36 < x33 && x33 > -1 && x37 < x32 && x30 > x31 && x32 > -1 && x36 > 0 && x30 - 1 > x31 && x34 = x30 - 1
f12536_0_entry_LE(x38, x39, x40, x41, x40, x40, x40) -> f12536_0_entry_LE(x42, x39, 1, 1, 1, 1, 1) :|: x43 < x41 && x41 > -1 && x44 < x40 && x38 > x39 && x40 > -1 && x38 - 1 > x39 && x42 = x38 - 1
f12536_0_entry_LE(x45, x46, x47, x48, x47, x47, x47) -> f12536_0_entry_LE(x49, x46, 1, 1, x50, x51, x52) :|: x53 < x48 && x48 > -1 && x50 < x47 && x45 > x46 && x47 > -1 && x50 > 0 && x45 - 1 > x46 && x49 = x45 - 1
f12536_0_entry_LE(x54, x55, x56, x57, x56, x56, x56) -> f12536_0_entry_LE(x58, x55, 1, x59, x60, x61, x62) :|: x63 < x57 && x57 > -1 && x60 < x56 && x54 > x55 && x56 > -1 && x63 > 0 && x60 > 0 && x54 - 1 > x55 && x58 = x54 - 1

----------------------------------------

(100) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12536_0_entry_LE(i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12947[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o12947[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(arith, i3556:0, o12949[LinkedList$Entry.previous]o13319:0, o12949[LinkedList$Entry.next]o12949:0, o13319[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o13319[LinkedList$Entry.previous]o13319:0) :|: o12947[LinkedList$Entry.previous]o12949:0 > 0 && o12949[LinkedList$Entry.previous]o12947:0 > 0 && o12947[LinkedList$Entry.previous]o12947:0 > 0 && o12949[LinkedList$Entry.next]o12949:0 > 0 && o13319[LinkedList$Entry.previous]o12949:0 < o12947[LinkedList$Entry.previous]o12949:0 && o12949[LinkedList$Entry.previous]o12949:0 > 0 && o12949[LinkedList$Entry.previous]o13319:0 > o12949[LinkedList$Entry.previous]o12947:0 && o13319[LinkedList$Entry.previous]o13316:0 < o12947[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o13319[LinkedList$Entry.previous]o13319:0 > o13319[LinkedList$Entry.previous]o13316:0 && o13319[LinkedList$Entry.previous]o13316:0 > -1 && i3714:0 - 1 > i3556:0 && arith = i3714:0 - 1
(2) f12536_0_entry_LE(x30, x31, x32, x33, x32, x32, x32) -> f12536_0_entry_LE(x34, x31, 1, x35, 1, 1, 1) :|: x36 < x33 && x33 > -1 && x37 < x32 && x30 > x31 && x32 > -1 && x36 > 0 && x30 - 1 > x31 && x34 = x30 - 1
(3) f12536_0_entry_LE(x38, x39, x40, x41, x40, x40, x40) -> f12536_0_entry_LE(x42, x39, 1, 1, 1, 1, 1) :|: x43 < x41 && x41 > -1 && x44 < x40 && x38 > x39 && x40 > -1 && x38 - 1 > x39 && x42 = x38 - 1
(4) f12536_0_entry_LE(x45, x46, x47, x48, x47, x47, x47) -> f12536_0_entry_LE(x49, x46, 1, 1, x50, x51, x52) :|: x53 < x48 && x48 > -1 && x50 < x47 && x45 > x46 && x47 > -1 && x50 > 0 && x45 - 1 > x46 && x49 = x45 - 1
(5) f12536_0_entry_LE(x54, x55, x56, x57, x56, x56, x56) -> f12536_0_entry_LE(x58, x55, 1, x59, x60, x61, x62) :|: x63 < x57 && x57 > -1 && x60 < x56 && x54 > x55 && x56 > -1 && x63 > 0 && x60 > 0 && x54 - 1 > x55 && x58 = x54 - 1

Arcs:
(1) -> (1), (2), (3), (4), (5)
(2) -> (1), (2), (3)
(3) -> (1), (3)
(4) -> (1), (3)
(5) -> (1), (2), (3)

This digraph is fully evaluated!
----------------------------------------

(101)
Obligation:

Termination digraph:
Nodes:
(1) f12536_0_entry_LE(i3714:0, i3556:0, o12949[LinkedList$Entry.previous]o12947:0, o12949[LinkedList$Entry.next]o12949:0, o12947[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o12947[LinkedList$Entry.previous]o12947:0) -> f12536_0_entry_LE(arith, i3556:0, o12949[LinkedList$Entry.previous]o13319:0, o12949[LinkedList$Entry.next]o12949:0, o13319[LinkedList$Entry.previous]o12949:0, o12949[LinkedList$Entry.previous]o12949:0, o13319[LinkedList$Entry.previous]o13319:0) :|: o12947[LinkedList$Entry.previous]o12949:0 > 0 && o12949[LinkedList$Entry.previous]o12947:0 > 0 && o12947[LinkedList$Entry.previous]o12947:0 > 0 && o12949[LinkedList$Entry.next]o12949:0 > 0 && o13319[LinkedList$Entry.previous]o12949:0 < o12947[LinkedList$Entry.previous]o12949:0 && o12949[LinkedList$Entry.previous]o12949:0 > 0 && o12949[LinkedList$Entry.previous]o13319:0 > o12949[LinkedList$Entry.previous]o12947:0 && o13319[LinkedList$Entry.previous]o13316:0 < o12947[LinkedList$Entry.previous]o12947:0 && i3714:0 > i3556:0 && o13319[LinkedList$Entry.previous]o13319:0 > o13319[LinkedList$Entry.previous]o13316:0 && o13319[LinkedList$Entry.previous]o13316:0 > -1 && i3714:0 - 1 > i3556:0 && arith = i3714:0 - 1
(2) f12536_0_entry_LE(x38, x39, x40, x41, x40, x40, x40) -> f12536_0_entry_LE(x42, x39, 1, 1, 1, 1, 1) :|: x43 < x41 && x41 > -1 && x44 < x40 && x38 > x39 && x40 > -1 && x38 - 1 > x39 && x42 = x38 - 1
(3) f12536_0_entry_LE(x45, x46, x47, x48, x47, x47, x47) -> f12536_0_entry_LE(x49, x46, 1, 1, x50, x51, x52) :|: x53 < x48 && x48 > -1 && x50 < x47 && x45 > x46 && x47 > -1 && x50 > 0 && x45 - 1 > x46 && x49 = x45 - 1
(4) f12536_0_entry_LE(x30, x31, x32, x33, x32, x32, x32) -> f12536_0_entry_LE(x34, x31, 1, x35, 1, 1, 1) :|: x36 < x33 && x33 > -1 && x37 < x32 && x30 > x31 && x32 > -1 && x36 > 0 && x30 - 1 > x31 && x34 = x30 - 1
(5) f12536_0_entry_LE(x54, x55, x56, x57, x56, x56, x56) -> f12536_0_entry_LE(x58, x55, 1, x59, x60, x61, x62) :|: x63 < x57 && x57 > -1 && x60 < x56 && x54 > x55 && x56 > -1 && x63 > 0 && x60 > 0 && x54 - 1 > x55 && x58 = x54 - 1

Arcs:
(1) -> (1), (2), (3), (4), (5)
(2) -> (1), (2)
(3) -> (1), (2)
(4) -> (1), (2), (4)
(5) -> (1), (2), (4)

This digraph is fully evaluated!

----------------------------------------

(102) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(103)
Obligation:
Rules:
f12536_0_entry_LE(x45:0, x46:0, x47:0, x48:0, x47:0, x47:0, x47:0) -> f12536_0_entry_LE(x45:0 - 1, x46:0, 1, 1, x50:0, x51:0, x52:0) :|: x50:0 > 0 && x46:0 < x45:0 - 1 && x47:0 > -1 && x46:0 < x45:0 && x50:0 < x47:0 && x48:0 > -1 && x53:0 < x48:0
f12536_0_entry_LE(x54:0, x55:0, x56:0, x57:0, x56:0, x56:0, x56:0) -> f12536_0_entry_LE(x54:0 - 1, x55:0, 1, x59:0, x60:0, x61:0, x62:0) :|: x60:0 > 0 && x55:0 < x54:0 - 1 && x63:0 > 0 && x56:0 > -1 && x55:0 < x54:0 && x60:0 < x56:0 && x57:0 > -1 && x63:0 < x57:0
f12536_0_entry_LE(i3714:0:0, i3556:0:0, o12949[LinkedList$Entry.previous]o12947:0:0, o12949[LinkedList$Entry.next]o12949:0:0, o12947[LinkedList$Entry.previous]o12949:0:0, o12949[LinkedList$Entry.previous]o12949:0:0, o12947[LinkedList$Entry.previous]o12947:0:0) -> f12536_0_entry_LE(i3714:0:0 - 1, i3556:0:0, o12949[LinkedList$Entry.previous]o13319:0:0, o12949[LinkedList$Entry.next]o12949:0:0, o13319[LinkedList$Entry.previous]o12949:0:0, o12949[LinkedList$Entry.previous]o12949:0:0, o13319[LinkedList$Entry.previous]o13319:0:0) :|: o13319[LinkedList$Entry.previous]o13316:0:0 > -1 && i3714:0:0 - 1 > i3556:0:0 && o13319[LinkedList$Entry.previous]o13319:0:0 > o13319[LinkedList$Entry.previous]o13316:0:0 && i3714:0:0 > i3556:0:0 && o13319[LinkedList$Entry.previous]o13316:0:0 < o12947[LinkedList$Entry.previous]o12947:0:0 && o12949[LinkedList$Entry.previous]o13319:0:0 > o12949[LinkedList$Entry.previous]o12947:0:0 && o12949[LinkedList$Entry.previous]o12949:0:0 > 0 && o13319[LinkedList$Entry.previous]o12949:0:0 < o12947[LinkedList$Entry.previous]o12949:0:0 && o12949[LinkedList$Entry.next]o12949:0:0 > 0 && o12947[LinkedList$Entry.previous]o12947:0:0 > 0 && o12949[LinkedList$Entry.previous]o12947:0:0 > 0 && o12947[LinkedList$Entry.previous]o12949:0:0 > 0
f12536_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12536_0_entry_LE(x38:0 - 1, x39:0, 1, 1, 1, 1, 1) :|: x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0
f12536_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12536_0_entry_LE(x30:0 - 1, x31:0, 1, x35:0, 1, 1, 1) :|: x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0

----------------------------------------

(104) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12536_0_entry_LE(INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(105)
Obligation:
Rules:
f12536_0_entry_LE(x45:0, x46:0, x47:0, x48:0, x47:0, x47:0, x47:0) -> f12536_0_entry_LE(c, x46:0, c1, c2, x50:0, x51:0, x52:0) :|: c2 = 1 && (c1 = 1 && c = x45:0 - 1) && (x50:0 > 0 && x46:0 < x45:0 - 1 && x47:0 > -1 && x46:0 < x45:0 && x50:0 < x47:0 && x48:0 > -1 && x53:0 < x48:0)
f12536_0_entry_LE(x54:0, x55:0, x56:0, x57:0, x56:0, x56:0, x56:0) -> f12536_0_entry_LE(c3, x55:0, c4, x59:0, x60:0, x61:0, x62:0) :|: c4 = 1 && c3 = x54:0 - 1 && (x60:0 > 0 && x55:0 < x54:0 - 1 && x63:0 > 0 && x56:0 > -1 && x55:0 < x54:0 && x60:0 < x56:0 && x57:0 > -1 && x63:0 < x57:0)
f12536_0_entry_LE(i3714:0:0, i3556:0:0, o12949[LinkedList$Entry.previous]o12947:0:0, o12949[LinkedList$Entry.next]o12949:0:0, o12947[LinkedList$Entry.previous]o12949:0:0, o12949[LinkedList$Entry.previous]o12949:0:0, o12947[LinkedList$Entry.previous]o12947:0:0) -> f12536_0_entry_LE(c5, i3556:0:0, o12949[LinkedList$Entry.previous]o13319:0:0, o12949[LinkedList$Entry.next]o12949:0:0, o13319[LinkedList$Entry.previous]o12949:0:0, o12949[LinkedList$Entry.previous]o12949:0:0, o13319[LinkedList$Entry.previous]o13319:0:0) :|: c5 = i3714:0:0 - 1 && (o13319[LinkedList$Entry.previous]o13316:0:0 > -1 && i3714:0:0 - 1 > i3556:0:0 && o13319[LinkedList$Entry.previous]o13319:0:0 > o13319[LinkedList$Entry.previous]o13316:0:0 && i3714:0:0 > i3556:0:0 && o13319[LinkedList$Entry.previous]o13316:0:0 < o12947[LinkedList$Entry.previous]o12947:0:0 && o12949[LinkedList$Entry.previous]o13319:0:0 > o12949[LinkedList$Entry.previous]o12947:0:0 && o12949[LinkedList$Entry.previous]o12949:0:0 > 0 && o13319[LinkedList$Entry.previous]o12949:0:0 < o12947[LinkedList$Entry.previous]o12949:0:0 && o12949[LinkedList$Entry.next]o12949:0:0 > 0 && o12947[LinkedList$Entry.previous]o12947:0:0 > 0 && o12949[LinkedList$Entry.previous]o12947:0:0 > 0 && o12947[LinkedList$Entry.previous]o12949:0:0 > 0)
f12536_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12536_0_entry_LE(c6, x39:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x38:0 - 1)))) && (x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0)
f12536_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12536_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

----------------------------------------

(106) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12536_0_entry_LE(x, x1, x2, x3, x4, x5, x6)] = x - x1 + x4

The following rules are decreasing:
f12536_0_entry_LE(x45:0, x46:0, x47:0, x48:0, x47:0, x47:0, x47:0) -> f12536_0_entry_LE(c, x46:0, c1, c2, x50:0, x51:0, x52:0) :|: c2 = 1 && (c1 = 1 && c = x45:0 - 1) && (x50:0 > 0 && x46:0 < x45:0 - 1 && x47:0 > -1 && x46:0 < x45:0 && x50:0 < x47:0 && x48:0 > -1 && x53:0 < x48:0)
f12536_0_entry_LE(x54:0, x55:0, x56:0, x57:0, x56:0, x56:0, x56:0) -> f12536_0_entry_LE(c3, x55:0, c4, x59:0, x60:0, x61:0, x62:0) :|: c4 = 1 && c3 = x54:0 - 1 && (x60:0 > 0 && x55:0 < x54:0 - 1 && x63:0 > 0 && x56:0 > -1 && x55:0 < x54:0 && x60:0 < x56:0 && x57:0 > -1 && x63:0 < x57:0)
f12536_0_entry_LE(i3714:0:0, i3556:0:0, o12949[LinkedList$Entry.previous]o12947:0:0, o12949[LinkedList$Entry.next]o12949:0:0, o12947[LinkedList$Entry.previous]o12949:0:0, o12949[LinkedList$Entry.previous]o12949:0:0, o12947[LinkedList$Entry.previous]o12947:0:0) -> f12536_0_entry_LE(c5, i3556:0:0, o12949[LinkedList$Entry.previous]o13319:0:0, o12949[LinkedList$Entry.next]o12949:0:0, o13319[LinkedList$Entry.previous]o12949:0:0, o12949[LinkedList$Entry.previous]o12949:0:0, o13319[LinkedList$Entry.previous]o13319:0:0) :|: c5 = i3714:0:0 - 1 && (o13319[LinkedList$Entry.previous]o13316:0:0 > -1 && i3714:0:0 - 1 > i3556:0:0 && o13319[LinkedList$Entry.previous]o13319:0:0 > o13319[LinkedList$Entry.previous]o13316:0:0 && i3714:0:0 > i3556:0:0 && o13319[LinkedList$Entry.previous]o13316:0:0 < o12947[LinkedList$Entry.previous]o12947:0:0 && o12949[LinkedList$Entry.previous]o13319:0:0 > o12949[LinkedList$Entry.previous]o12947:0:0 && o12949[LinkedList$Entry.previous]o12949:0:0 > 0 && o13319[LinkedList$Entry.previous]o12949:0:0 < o12947[LinkedList$Entry.previous]o12949:0:0 && o12949[LinkedList$Entry.next]o12949:0:0 > 0 && o12947[LinkedList$Entry.previous]o12947:0:0 > 0 && o12949[LinkedList$Entry.previous]o12947:0:0 > 0 && o12947[LinkedList$Entry.previous]o12949:0:0 > 0)
The following rules are bounded:
f12536_0_entry_LE(x45:0, x46:0, x47:0, x48:0, x47:0, x47:0, x47:0) -> f12536_0_entry_LE(c, x46:0, c1, c2, x50:0, x51:0, x52:0) :|: c2 = 1 && (c1 = 1 && c = x45:0 - 1) && (x50:0 > 0 && x46:0 < x45:0 - 1 && x47:0 > -1 && x46:0 < x45:0 && x50:0 < x47:0 && x48:0 > -1 && x53:0 < x48:0)
f12536_0_entry_LE(x54:0, x55:0, x56:0, x57:0, x56:0, x56:0, x56:0) -> f12536_0_entry_LE(c3, x55:0, c4, x59:0, x60:0, x61:0, x62:0) :|: c4 = 1 && c3 = x54:0 - 1 && (x60:0 > 0 && x55:0 < x54:0 - 1 && x63:0 > 0 && x56:0 > -1 && x55:0 < x54:0 && x60:0 < x56:0 && x57:0 > -1 && x63:0 < x57:0)
f12536_0_entry_LE(i3714:0:0, i3556:0:0, o12949[LinkedList$Entry.previous]o12947:0:0, o12949[LinkedList$Entry.next]o12949:0:0, o12947[LinkedList$Entry.previous]o12949:0:0, o12949[LinkedList$Entry.previous]o12949:0:0, o12947[LinkedList$Entry.previous]o12947:0:0) -> f12536_0_entry_LE(c5, i3556:0:0, o12949[LinkedList$Entry.previous]o13319:0:0, o12949[LinkedList$Entry.next]o12949:0:0, o13319[LinkedList$Entry.previous]o12949:0:0, o12949[LinkedList$Entry.previous]o12949:0:0, o13319[LinkedList$Entry.previous]o13319:0:0) :|: c5 = i3714:0:0 - 1 && (o13319[LinkedList$Entry.previous]o13316:0:0 > -1 && i3714:0:0 - 1 > i3556:0:0 && o13319[LinkedList$Entry.previous]o13319:0:0 > o13319[LinkedList$Entry.previous]o13316:0:0 && i3714:0:0 > i3556:0:0 && o13319[LinkedList$Entry.previous]o13316:0:0 < o12947[LinkedList$Entry.previous]o12947:0:0 && o12949[LinkedList$Entry.previous]o13319:0:0 > o12949[LinkedList$Entry.previous]o12947:0:0 && o12949[LinkedList$Entry.previous]o12949:0:0 > 0 && o13319[LinkedList$Entry.previous]o12949:0:0 < o12947[LinkedList$Entry.previous]o12949:0:0 && o12949[LinkedList$Entry.next]o12949:0:0 > 0 && o12947[LinkedList$Entry.previous]o12947:0:0 > 0 && o12949[LinkedList$Entry.previous]o12947:0:0 > 0 && o12947[LinkedList$Entry.previous]o12949:0:0 > 0)
f12536_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12536_0_entry_LE(c6, x39:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x38:0 - 1)))) && (x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0)
f12536_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12536_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

----------------------------------------

(107)
Obligation:
Rules:
f12536_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12536_0_entry_LE(c6, x39:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x38:0 - 1)))) && (x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0)
f12536_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12536_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

----------------------------------------

(108) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f12536_0_entry_LE ] = -1*f12536_0_entry_LE_2 + f12536_0_entry_LE_1

The following rules are decreasing:
f12536_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12536_0_entry_LE(c6, x39:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x38:0 - 1)))) && (x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0)
f12536_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12536_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

The following rules are bounded:
f12536_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12536_0_entry_LE(c6, x39:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x38:0 - 1)))) && (x40:0 > -1 && x39:0 < x38:0 - 1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x43:0 < x41:0)
f12536_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12536_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)


----------------------------------------

(109)
YES

----------------------------------------

(110)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveLastOccurrence.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList: [header]
*javaUtilEx.LinkedList$Entry: [element, previous]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(111) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 61 IRulesP rules:
f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(o12373sub0), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371) -> f12324_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12324), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(o12373sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371) :|: TRUE
f12324_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12324), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(o12373sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371) -> f12330_0_removeLastOccurrence_EQ(EOS(STATIC_12330), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(o12373sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072, java.lang.Object(o12371sub1306695072))), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371) :|: TRUE
f12330_0_removeLastOccurrence_EQ(EOS(STATIC_12330), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(o12373sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072, java.lang.Object(o12371sub1306695072))), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371) -> f12339_0_removeLastOccurrence_EQ(EOS(STATIC_12339), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(o12373sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072, java.lang.Object(o12371sub1306695072))), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371, o12373[LinkedList$Entry.previous]o12369) :|: o12373[LinkedList$Entry.previous]o12369 > 0
f12339_0_removeLastOccurrence_EQ(EOS(STATIC_12339), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(o12373sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072, java.lang.Object(o12371sub1306695072))), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371, o12373[LinkedList$Entry.previous]o12369) -> f12347_0_removeLastOccurrence_Load(EOS(STATIC_12347), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371, o12373[LinkedList$Entry.previous]o12369) :|: TRUE
f12347_0_removeLastOccurrence_Load(EOS(STATIC_12347), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371, o12373[LinkedList$Entry.previous]o12369) -> f12356_0_removeLastOccurrence_Load(EOS(STATIC_12356), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(javaUtilEx.Content(EOC)), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371, o12373[LinkedList$Entry.previous]o12369) :|: TRUE
f12356_0_removeLastOccurrence_Load(EOS(STATIC_12356), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(javaUtilEx.Content(EOC)), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371, o12373[LinkedList$Entry.previous]o12369) -> f12365_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12365), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371, o12373[LinkedList$Entry.previous]o12369) :|: TRUE
f12365_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12365), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371, o12373[LinkedList$Entry.previous]o12369) -> f12373_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12373), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371) :|: o12371[LinkedList$Entry.previous]o12373 > 0 && o12373[LinkedList$Entry.previous]o12371 > 0
f12365_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12365), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12651sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12651sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12651sub0), o12651[LinkedList$Entry.previous]o12651, o12651[LinkedList$Entry.previous]o12369, o12651[LinkedList$Entry.previous]o12651, o12651[LinkedList$Entry.previous]o12369) -> f12374_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12374), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12651sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12651sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12651sub0), o12651[LinkedList$Entry.previous]o12369, o12651[LinkedList$Entry.previous]o12651) :|: TRUE
f12373_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12373), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), o12371[LinkedList$Entry.previous]o12660, o12371[LinkedList$Entry.previous]o12369, o12660[LinkedList$Entry.previous]o12369, o12660[LinkedList$Entry.previous]o12371) -> f12383_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12383), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: o12663[LinkedList$Entry.previous]o12369 < o12660[LinkedList$Entry.previous]o12369 && o12660[LinkedList$Entry.previous]o12369 >= 0 && o12663[LinkedList$Entry.previous]o12371 < o12660[LinkedList$Entry.previous]o12371 && o12660[LinkedList$Entry.previous]o12371 >= 0
f12383_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12383), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f12393_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12393), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), java.lang.Object(javaUtilEx.Content(EOC)), o126610, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: TRUE
f12393_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12393), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), java.lang.Object(javaUtilEx.Content(EOC)), o126610, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f12402_0_equals_Load(EOS(STATIC_12402), java.lang.Object(javaUtilEx.Content(EOC)), o126610, java.lang.Object(o12371sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072, java.lang.Object(o12371sub1306695072))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), java.lang.Object(o12663sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126610, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: i3642 > 1
f12393_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12393), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), java.lang.Object(javaUtilEx.Content(EOC)), o126610, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f12402_1_equals_Load(EOS(STATIC_12402), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), java.lang.Object(javaUtilEx.Content(EOC)), o126610, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: i3642 > 1
f12402_0_equals_Load(EOS(STATIC_12402), java.lang.Object(javaUtilEx.Content(EOC)), o126610, java.lang.Object(o12371sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072, java.lang.Object(o12371sub1306695072))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), java.lang.Object(o12663sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126610, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f14809_0_equals_Load(EOS(STATIC_14809), java.lang.Object(javaUtilEx.Content(EOC)), o126610, java.lang.Object(o12371sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072, java.lang.Object(o12371sub1306695072))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166, java.lang.Object(o12663sub1306784166))), java.lang.Object(o12663sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126610, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: TRUE
f13276_0_equals_Return(EOS(STATIC_13276), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12663sub1306784166))), matching1, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f12564_0_equals_Return(EOS(STATIC_12564), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12663sub1306784166))), 0, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: TRUE && matching1 = 0
f12564_0_equals_Return(EOS(STATIC_12564), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131391307556097, java.lang.Object(o13141sub1307556097))), matching1, o13136[LinkedList$Entry.previous]o13134, o13136[LinkedList$Entry.previous]o13138, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136) -> f12579_0_removeLastOccurrence_EQ(EOS(STATIC_12579), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131391307556097, java.lang.Object(o13141sub1307556097))), 0, o13136[LinkedList$Entry.previous]o13134, o13136[LinkedList$Entry.previous]o13138, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136) :|: TRUE && matching1 = 0
f12579_0_removeLastOccurrence_EQ(EOS(STATIC_12579), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131391307556097, java.lang.Object(o13141sub1307556097))), matching1, o13136[LinkedList$Entry.previous]o13134, o13136[LinkedList$Entry.previous]o13138, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136) -> f12596_0_removeLastOccurrence_Load(EOS(STATIC_12596), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131391307556097, java.lang.Object(o13141sub1307556097))), o13136[LinkedList$Entry.previous]o13134, o13136[LinkedList$Entry.previous]o13138, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136) :|: TRUE && matching1 = 0
f12596_0_removeLastOccurrence_Load(EOS(STATIC_12596), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131391307556097, java.lang.Object(o13141sub1307556097))), o13136[LinkedList$Entry.previous]o13134, o13136[LinkedList$Entry.previous]o13138, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136) -> f12616_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12616), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131391307556097, java.lang.Object(o13141sub1307556097))), o13136[LinkedList$Entry.previous]o13134, o13136[LinkedList$Entry.previous]o13138, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136) :|: TRUE
f12616_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12616), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131391307556097, java.lang.Object(o13141sub1307556097))), o13136[LinkedList$Entry.previous]o13134, o13136[LinkedList$Entry.previous]o13138, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136) -> f12639_0_removeLastOccurrence_Store(EOS(STATIC_12639), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13141sub0), o13136[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136, o13136[LinkedList$Entry.previous]o13141) :|: o13136[LinkedList$Entry.previous]o13141 > o13136[LinkedList$Entry.previous]o13138 && o13136[LinkedList$Entry.previous]o13138 >= 0
f12639_0_removeLastOccurrence_Store(EOS(STATIC_12639), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13141sub0), o13136[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136, o13136[LinkedList$Entry.previous]o13141) -> f12664_0_removeLastOccurrence_JMP(EOS(STATIC_12664), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13141sub0), o13136[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136, o13136[LinkedList$Entry.previous]o13141) :|: TRUE
f12664_0_removeLastOccurrence_JMP(EOS(STATIC_12664), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13141sub0), o13136[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136, o13136[LinkedList$Entry.previous]o13141) -> f12685_0_removeLastOccurrence_Load(EOS(STATIC_12685), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13141sub0), o13136[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136, o13136[LinkedList$Entry.previous]o13141) :|: TRUE
f12685_0_removeLastOccurrence_Load(EOS(STATIC_12685), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13141sub0), o13136[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136, o13136[LinkedList$Entry.previous]o13141) -> f12312_0_removeLastOccurrence_Load(EOS(STATIC_12312), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13135-1679855381, java.lang.Object(o13136sub-1679855381)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13141sub0), o13136[LinkedList$Entry.previous]o13141, o13136[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13134, o13141[LinkedList$Entry.previous]o13136) :|: TRUE
f12312_0_removeLastOccurrence_Load(EOS(STATIC_12312), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371) -> f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12373sub0), java.lang.Object(o12373sub0), o12371[LinkedList$Entry.previous]o12373, o12371[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12369, o12373[LinkedList$Entry.previous]o12371) :|: TRUE
f13294_0_equals_Return(EOS(STATIC_13294), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17369sub1306784166), java.lang.Object(o12663sub1306784166))), matching1, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f12564_0_equals_Return(EOS(STATIC_12564), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17369sub1306784166), java.lang.Object(o12663sub1306784166))), 0, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: TRUE && matching1 = 0
f13440_0_equals_Return(EOS(STATIC_13440), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12663sub1306784166))), matching1, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f12756_0_equals_Return(EOS(STATIC_12756), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12663sub1306784166))), 0, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: TRUE && matching1 = 0
f12756_0_equals_Return(EOS(STATIC_12756), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub1308448680))), i3949, o14020[LinkedList$Entry.previous]o14018, o14020[LinkedList$Entry.previous]o14022, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020) -> f12770_0_removeLastOccurrence_EQ(EOS(STATIC_12770), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub1308448680))), i3949, o14020[LinkedList$Entry.previous]o14018, o14020[LinkedList$Entry.previous]o14022, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020) :|: TRUE
f12770_0_removeLastOccurrence_EQ(EOS(STATIC_12770), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub1308448680))), matching1, o14020[LinkedList$Entry.previous]o14018, o14020[LinkedList$Entry.previous]o14022, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020) -> f12782_0_removeLastOccurrence_EQ(EOS(STATIC_12782), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub1308448680))), 0, o14020[LinkedList$Entry.previous]o14018, o14020[LinkedList$Entry.previous]o14022, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020) :|: TRUE && matching1 = 0
f12782_0_removeLastOccurrence_EQ(EOS(STATIC_12782), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub1308448680))), matching1, o14020[LinkedList$Entry.previous]o14018, o14020[LinkedList$Entry.previous]o14022, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020) -> f12799_0_removeLastOccurrence_Load(EOS(STATIC_12799), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub1308448680))), o14020[LinkedList$Entry.previous]o14018, o14020[LinkedList$Entry.previous]o14022, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020) :|: TRUE && matching1 = 0
f12799_0_removeLastOccurrence_Load(EOS(STATIC_12799), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub1308448680))), o14020[LinkedList$Entry.previous]o14018, o14020[LinkedList$Entry.previous]o14022, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020) -> f12818_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12818), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub1308448680))), o14020[LinkedList$Entry.previous]o14018, o14020[LinkedList$Entry.previous]o14022, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020) :|: TRUE
f12818_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12818), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub1308448680))), o14020[LinkedList$Entry.previous]o14018, o14020[LinkedList$Entry.previous]o14022, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020) -> f12838_0_removeLastOccurrence_Store(EOS(STATIC_12838), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub0), o14020[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020, o14020[LinkedList$Entry.previous]o14025) :|: o14020[LinkedList$Entry.previous]o14025 > o14020[LinkedList$Entry.previous]o14022 && o14020[LinkedList$Entry.previous]o14022 >= 0
f12838_0_removeLastOccurrence_Store(EOS(STATIC_12838), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub0), o14020[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020, o14020[LinkedList$Entry.previous]o14025) -> f12639_0_removeLastOccurrence_Store(EOS(STATIC_12639), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14019-1678071517, java.lang.Object(o14020sub-1678071517)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub0), o14020[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14018, o14025[LinkedList$Entry.previous]o14020, o14020[LinkedList$Entry.previous]o14025) :|: TRUE
f13455_0_equals_Return(EOS(STATIC_13455), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12663sub1306784166))), matching1, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f12756_0_equals_Return(EOS(STATIC_12756), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12663sub1306784166))), 1, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: TRUE && matching1 = 1
f12374_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12374), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), o12664[LinkedList$Entry.previous]o12369, o12664[LinkedList$Entry.previous]o12664) -> f12384_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12384), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: o12667[LinkedList$Entry.previous]o12369 < o12664[LinkedList$Entry.previous]o12369 && o12664[LinkedList$Entry.previous]o12369 >= 0 && o12667[LinkedList$Entry.previous]o12664 < o12664[LinkedList$Entry.previous]o12664 && o12664[LinkedList$Entry.previous]o12664 >= 0
f12384_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12384), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f12394_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12394), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), java.lang.Object(javaUtilEx.Content(EOC)), o126650, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: TRUE
f12394_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12394), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), java.lang.Object(javaUtilEx.Content(EOC)), o126650, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f12403_0_equals_Load(EOS(STATIC_12403), java.lang.Object(javaUtilEx.Content(EOC)), o126650, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-1681487934, java.lang.Object(o12667sub-1681487934))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), java.lang.Object(o12667sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126650, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: i3642 > 1
f12394_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12394), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), java.lang.Object(javaUtilEx.Content(EOC)), o126650, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f12403_1_equals_Load(EOS(STATIC_12403), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), java.lang.Object(javaUtilEx.Content(EOC)), o126650, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: i3642 > 1
f12403_0_equals_Load(EOS(STATIC_12403), java.lang.Object(javaUtilEx.Content(EOC)), o126650, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-1681487934, java.lang.Object(o12667sub-1681487934))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), java.lang.Object(o12667sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126650, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f14879_0_equals_Load(EOS(STATIC_14879), java.lang.Object(javaUtilEx.Content(EOC)), o126650, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-1681487934, java.lang.Object(o12667sub-1681487934))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290, java.lang.Object(o12667sub1306784290))), java.lang.Object(o12667sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126650, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: TRUE
f13277_0_equals_Return(EOS(STATIC_13277), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub1306784290))), matching1, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f12566_0_equals_Return(EOS(STATIC_12566), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub1306784290))), 0, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: TRUE && matching1 = 0
f12566_0_equals_Return(EOS(STATIC_12566), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13176-1679847631, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13178-372287721, java.lang.Object(o13180sub-372287721)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131781307559910, java.lang.Object(o13180sub1307559910))), matching1, o13180[LinkedList$Entry.previous]o13175, o13180[LinkedList$Entry.previous]o13177) -> f12580_0_removeLastOccurrence_EQ(EOS(STATIC_12580), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13176-1679847631, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13178-372287721, java.lang.Object(o13180sub-372287721)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131781307559910, java.lang.Object(o13180sub1307559910))), 0, o13180[LinkedList$Entry.previous]o13175, o13180[LinkedList$Entry.previous]o13177) :|: TRUE && matching1 = 0
f12580_0_removeLastOccurrence_EQ(EOS(STATIC_12580), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13176-1679847631, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13178-372287721, java.lang.Object(o13180sub-372287721)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131781307559910, java.lang.Object(o13180sub1307559910))), matching1, o13180[LinkedList$Entry.previous]o13175, o13180[LinkedList$Entry.previous]o13177) -> f12597_0_removeLastOccurrence_Load(EOS(STATIC_12597), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13176-1679847631, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13178-372287721, java.lang.Object(o13180sub-372287721)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131781307559910, java.lang.Object(o13180sub1307559910))), o13180[LinkedList$Entry.previous]o13175, o13180[LinkedList$Entry.previous]o13177) :|: TRUE && matching1 = 0
f12597_0_removeLastOccurrence_Load(EOS(STATIC_12597), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13176-1679847631, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13178-372287721, java.lang.Object(o13180sub-372287721)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131781307559910, java.lang.Object(o13180sub1307559910))), o13180[LinkedList$Entry.previous]o13175, o13180[LinkedList$Entry.previous]o13177) -> f12617_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12617), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13176-1679847631, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13178-372287721, java.lang.Object(o13180sub-372287721)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131781307559910, java.lang.Object(o13180sub1307559910))), o13180[LinkedList$Entry.previous]o13175, o13180[LinkedList$Entry.previous]o13177) :|: TRUE
f12617_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12617), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13176-1679847631, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13178-372287721, java.lang.Object(o13180sub-372287721)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131781307559910, java.lang.Object(o13180sub1307559910))), o13180[LinkedList$Entry.previous]o13175, o13180[LinkedList$Entry.previous]o13177) -> f12640_0_removeLastOccurrence_Store(EOS(STATIC_12640), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13176-1679847631, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13178-372287721, java.lang.Object(o13180sub-372287721)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13180sub0), o13180[LinkedList$Entry.previous]o13175, o13180[LinkedList$Entry.previous]o13177) :|: TRUE
f12640_0_removeLastOccurrence_Store(EOS(STATIC_12640), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13176-1679847631, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13178-372287721, java.lang.Object(o13180sub-372287721)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13180sub0), o13180[LinkedList$Entry.previous]o13175, o13180[LinkedList$Entry.previous]o13177) -> f12838_0_removeLastOccurrence_Store(EOS(STATIC_12838), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13176-1679847631, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13178-372287721, java.lang.Object(o13180sub-372287721)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13180sub0), o13177[LinkedList$Entry.previous]o13175, o13180[LinkedList$Entry.previous]o13175, o13180[LinkedList$Entry.previous]o13177, o13177[LinkedList$Entry.previous]o13180) :|: o13177[LinkedList$Entry.previous]o13180 = 1
f13295_0_equals_Return(EOS(STATIC_13295), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub-374792893), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub1306784290), java.lang.Object(o12667sub1306784290))), matching1, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f12566_0_equals_Return(EOS(STATIC_12566), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub-374792893), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub1306784290), java.lang.Object(o12667sub1306784290))), 0, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: TRUE && matching1 = 0
f13441_0_equals_Return(EOS(STATIC_13441), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub1306784290))), matching1, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f12758_0_equals_Return(EOS(STATIC_12758), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub1306784290))), 0, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: TRUE && matching1 = 0
f12758_0_equals_Return(EOS(STATIC_12758), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub1308450819))), i3963, o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) -> f12771_0_removeLastOccurrence_EQ(EOS(STATIC_12771), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub1308450819))), i3963, o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) :|: TRUE
f12771_0_removeLastOccurrence_EQ(EOS(STATIC_12771), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub1308450819))), matching1, o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) -> f12784_0_removeLastOccurrence_EQ(EOS(STATIC_12784), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub1308450819))), 0, o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) :|: TRUE && matching1 = 0
f12784_0_removeLastOccurrence_EQ(EOS(STATIC_12784), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub1308450819))), matching1, o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) -> f12801_0_removeLastOccurrence_Load(EOS(STATIC_12801), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub1308450819))), o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) :|: TRUE && matching1 = 0
f12801_0_removeLastOccurrence_Load(EOS(STATIC_12801), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub1308450819))), o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) -> f12820_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12820), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub1308450819))), o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) :|: TRUE
f12820_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12820), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub1308450819))), o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) -> f12840_0_removeLastOccurrence_Store(EOS(STATIC_12840), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub0), o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) :|: TRUE
f12840_0_removeLastOccurrence_Store(EOS(STATIC_12840), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub0), o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) -> f12856_0_removeLastOccurrence_JMP(EOS(STATIC_12856), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub0), o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) :|: TRUE
f12856_0_removeLastOccurrence_JMP(EOS(STATIC_12856), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub0), o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) -> f12863_0_removeLastOccurrence_Load(EOS(STATIC_12863), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub0), o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) :|: TRUE
f12863_0_removeLastOccurrence_Load(EOS(STATIC_12863), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub0), o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) -> f12312_0_removeLastOccurrence_Load(EOS(STATIC_12312), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14048-1678065813, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub-369614994)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub0), o14049[LinkedList$Entry.previous]o14052, o14049[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14047, o14052[LinkedList$Entry.previous]o14049) :|: o14049[LinkedList$Entry.previous]o14052 = 1
f13456_0_equals_Return(EOS(STATIC_13456), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub1306784290))), matching1, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f12758_0_equals_Return(EOS(STATIC_12758), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub1306784290))), 1, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: TRUE && matching1 = 1
f12402_1_equals_Load(EOS(STATIC_12402), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12663sub1306784166))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f13276_0_equals_Return(EOS(STATIC_13276), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12663sub1306784166))), 0, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: TRUE
f12402_1_equals_Load(EOS(STATIC_12402), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17369sub1306784166), java.lang.Object(o12663sub1306784166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17369sub0), o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f13294_0_equals_Return(EOS(STATIC_13294), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17369sub1306784166), java.lang.Object(o12663sub1306784166))), 0, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: TRUE
f12402_1_equals_Load(EOS(STATIC_12402), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12663sub1306784166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f13440_0_equals_Return(EOS(STATIC_13440), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12663sub1306784166))), 0, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: TRUE
f12402_1_equals_Load(EOS(STATIC_12402), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12663sub1306784166))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) -> f13455_0_equals_Return(EOS(STATIC_13455), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(o12371sub-1681577183)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12663sub1306784166))), 1, o12371[LinkedList$Entry.previous]o12369, o12371[LinkedList$Entry.previous]o12660, o12663[LinkedList$Entry.previous]o12369, o12663[LinkedList$Entry.previous]o12371) :|: TRUE
f12403_1_equals_Load(EOS(STATIC_12403), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub1306784290))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f13277_0_equals_Return(EOS(STATIC_13277), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub1306784290))), 0, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: TRUE
f12403_1_equals_Load(EOS(STATIC_12403), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub-374792893), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub1306784290), java.lang.Object(o12667sub1306784290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17383sub0), o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f13295_0_equals_Return(EOS(STATIC_13295), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub-374792893), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub1306784290), java.lang.Object(o12667sub1306784290))), 0, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: TRUE
f12403_1_equals_Load(EOS(STATIC_12403), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub1306784290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f13441_0_equals_Return(EOS(STATIC_13441), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub1306784290))), 0, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: TRUE
f12403_1_equals_Load(EOS(STATIC_12403), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub1306784290))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) -> f13456_0_equals_Return(EOS(STATIC_13456), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub-374792893)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub1306784290))), 1, o12667[LinkedList$Entry.previous]o12369, o12667[LinkedList$Entry.previous]o12664) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub1306784290:0), java.lang.Object(o12667sub1306784290:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub1306784290:0), java.lang.Object(o12667sub1306784290:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0) -> f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13180sub0:0), java.lang.Object(o13180sub0:0), 1, o13177[LinkedList$Entry.previous]o13175:0, o12667[LinkedList$Entry.previous]o12369:0, o12667[LinkedList$Entry.previous]o12664:0) :|: o12371[LinkedList$Entry.previous]o12369:0 > 0 && o12667[LinkedList$Entry.previous]o12369:0 < o12371[LinkedList$Entry.previous]o12369:0 && o12667[LinkedList$Entry.previous]o12664:0 < o12371[LinkedList$Entry.previous]o12373:0 && i3642:0 > 1 && o12371[LinkedList$Entry.previous]o12373:0 > -1
f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17369sub1306784166:0), java.lang.Object(o12663sub1306784166:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17369sub1306784166:0), java.lang.Object(o12663sub1306784166:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12371:0) -> f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13141sub0:0), java.lang.Object(o13141sub0:0), o13136[LinkedList$Entry.previous]o13141:0, o12371[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12371:0) :|: o12373[LinkedList$Entry.previous]o12369:0 > 0 && o12373[LinkedList$Entry.previous]o12371:0 > 0 && o12371[LinkedList$Entry.previous]o12373:0 > 0 && o12663[LinkedList$Entry.previous]o12369:0 < o12373[LinkedList$Entry.previous]o12369:0 && o13136[LinkedList$Entry.previous]o13141:0 > o12371[LinkedList$Entry.previous]o12373:0 && i3642:0 > 1 && o12663[LinkedList$Entry.previous]o12371:0 < o12373[LinkedList$Entry.previous]o12371:0
f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub1306784290:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub1306784290:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0) -> f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13180sub0:0), java.lang.Object(o13180sub0:0), 1, o13177[LinkedList$Entry.previous]o13175:0, o12667[LinkedList$Entry.previous]o12369:0, o12667[LinkedList$Entry.previous]o12664:0) :|: o12371[LinkedList$Entry.previous]o12369:0 > 0 && o12667[LinkedList$Entry.previous]o12369:0 < o12371[LinkedList$Entry.previous]o12369:0 && o12667[LinkedList$Entry.previous]o12664:0 < o12371[LinkedList$Entry.previous]o12373:0 && i3642:0 > 1 && o12371[LinkedList$Entry.previous]o12373:0 > -1
f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub1306784290:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub1306784290:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0) -> f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14052sub0:0), java.lang.Object(o14052sub0:0), 1, o14049[LinkedList$Entry.previous]o14047:0, o12667[LinkedList$Entry.previous]o12369:0, o12667[LinkedList$Entry.previous]o12664:0) :|: o12371[LinkedList$Entry.previous]o12369:0 > 0 && o12667[LinkedList$Entry.previous]o12369:0 < o12371[LinkedList$Entry.previous]o12369:0 && o12667[LinkedList$Entry.previous]o12664:0 < o12371[LinkedList$Entry.previous]o12373:0 && i3642:0 > 1 && o12371[LinkedList$Entry.previous]o12373:0 > -1
f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12663sub1306784166:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12663sub1306784166:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12371:0) -> f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13141sub0:0), java.lang.Object(o13141sub0:0), o13136[LinkedList$Entry.previous]o13141:0, o12371[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12371:0) :|: o12373[LinkedList$Entry.previous]o12369:0 > 0 && o12373[LinkedList$Entry.previous]o12371:0 > 0 && o12371[LinkedList$Entry.previous]o12373:0 > 0 && o12663[LinkedList$Entry.previous]o12369:0 < o12373[LinkedList$Entry.previous]o12369:0 && o13136[LinkedList$Entry.previous]o13141:0 > o12371[LinkedList$Entry.previous]o12373:0 && i3642:0 > 1 && o12663[LinkedList$Entry.previous]o12371:0 < o12373[LinkedList$Entry.previous]o12371:0
f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12663sub1306784166:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12663sub1306784166:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12371:0) -> f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14025sub0:0), java.lang.Object(o14025sub0:0), o14020[LinkedList$Entry.previous]o14025:0, o12371[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12371:0) :|: o12373[LinkedList$Entry.previous]o12369:0 > 0 && o12373[LinkedList$Entry.previous]o12371:0 > 0 && o12371[LinkedList$Entry.previous]o12373:0 > 0 && o12663[LinkedList$Entry.previous]o12369:0 < o12373[LinkedList$Entry.previous]o12369:0 && o12663[LinkedList$Entry.previous]o12371:0 < o12373[LinkedList$Entry.previous]o12371:0 && i3642:0 > 1 && o14020[LinkedList$Entry.previous]o14025:0 > o12371[LinkedList$Entry.previous]o12373:0
Removed following non-SCC rules:
f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166:0, java.lang.Object(o12663sub1306784166:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166:0, java.lang.Object(o12663sub1306784166:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12371:0) -> f14809_0_equals_Load(EOS(STATIC_14809), java.lang.Object(javaUtilEx.Content(EOC)), o126610:0, java.lang.Object(o12371sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072:0, java.lang.Object(o12371sub1306695072:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126611306784166:0, java.lang.Object(o12663sub1306784166:0))), java.lang.Object(o12663sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126610:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0, o12663[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12371:0) :|: o12373[LinkedList$Entry.previous]o12369:0 > 0 && o12373[LinkedList$Entry.previous]o12371:0 > 0 && o12663[LinkedList$Entry.previous]o12369:0 < o12373[LinkedList$Entry.previous]o12369:0 && o12663[LinkedList$Entry.previous]o12371:0 < o12373[LinkedList$Entry.previous]o12371:0 && i3642:0 > 1 && o12371[LinkedList$Entry.previous]o12373:0 > 0
f12319_0_removeLastOccurrence_Load(EOS(STATIC_12319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893:0, java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290:0, java.lang.Object(o12667sub1306784290:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290:0, java.lang.Object(o12667sub1306784290:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0) -> f14879_0_equals_Load(EOS(STATIC_14879), java.lang.Object(javaUtilEx.Content(EOC)), o126650:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o123701306695072:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-1681487934:0, java.lang.Object(o12667sub-1681487934:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126651306784290:0, java.lang.Object(o12667sub1306784290:0))), java.lang.Object(o12667sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12665-374792893:0, java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126650:0, o12667[LinkedList$Entry.previous]o12369:0, o12667[LinkedList$Entry.previous]o12664:0) :|: o12371[LinkedList$Entry.previous]o12369:0 > 0 && o12667[LinkedList$Entry.previous]o12369:0 < o12371[LinkedList$Entry.previous]o12369:0 && o12667[LinkedList$Entry.previous]o12664:0 < o12371[LinkedList$Entry.previous]o12373:0 && i3642:0 > 1 && o12371[LinkedList$Entry.previous]o12373:0 > -1
Filtered constant ground arguments:
   f12319_0_removeLastOccurrence_Load(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f12319_0_removeLastOccurrence_Load(x2, x4, x5, x6, x7, x8, x9)
   EOS(x1) -> EOS
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f12319_0_removeLastOccurrence_Load(x1, x2, x3, x4, x5, x6, x7) -> f12319_0_removeLastOccurrence_Load(x1, x3, x4, x5, x6, x7)
Finished conversion. Obtained 6 rules.P rules:
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub1306784290:0), java.lang.Object(o12667sub1306784290:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0, o12370-1681577183:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(o13180sub0:0), 1, o13177[LinkedList$Entry.previous]o13175:0, o12667[LinkedList$Entry.previous]o12369:0, o12667[LinkedList$Entry.previous]o12664:0, o12370-1681577183:0) :|: o12667[LinkedList$Entry.previous]o12369:0 < o12371[LinkedList$Entry.previous]o12369:0 && o12371[LinkedList$Entry.previous]o12369:0 > 0 && o12667[LinkedList$Entry.previous]o12664:0 < o12371[LinkedList$Entry.previous]o12373:0 && o12371[LinkedList$Entry.previous]o12373:0 > -1 && i3642:0 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17369sub1306784166:0), java.lang.Object(o12663sub1306784166:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12371:0, o12370-1681577183:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(o13141sub0:0), o13136[LinkedList$Entry.previous]o13141:0, o12371[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12371:0, o12370-1681577183:0) :|: o12373[LinkedList$Entry.previous]o12371:0 > 0 && o12373[LinkedList$Entry.previous]o12369:0 > 0 && o12371[LinkedList$Entry.previous]o12373:0 > 0 && o12663[LinkedList$Entry.previous]o12369:0 < o12373[LinkedList$Entry.previous]o12369:0 && o13136[LinkedList$Entry.previous]o13141:0 > o12371[LinkedList$Entry.previous]o12373:0 && o12663[LinkedList$Entry.previous]o12371:0 < o12373[LinkedList$Entry.previous]o12371:0 && i3642:0 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o12667sub1306784290:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0, o12370-1681577183:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(o13180sub0:0), 1, o13177[LinkedList$Entry.previous]o13175:0, o12667[LinkedList$Entry.previous]o12369:0, o12667[LinkedList$Entry.previous]o12664:0, o12370-1681577183:0) :|: o12667[LinkedList$Entry.previous]o12369:0 < o12371[LinkedList$Entry.previous]o12369:0 && o12371[LinkedList$Entry.previous]o12369:0 > 0 && o12667[LinkedList$Entry.previous]o12664:0 < o12371[LinkedList$Entry.previous]o12373:0 && o12371[LinkedList$Entry.previous]o12373:0 > -1 && i3642:0 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12667sub1306784290:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0, o12370-1681577183:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(o14052sub0:0), 1, o14049[LinkedList$Entry.previous]o14047:0, o12667[LinkedList$Entry.previous]o12369:0, o12667[LinkedList$Entry.previous]o12664:0, o12370-1681577183:0) :|: o12667[LinkedList$Entry.previous]o12369:0 < o12371[LinkedList$Entry.previous]o12369:0 && o12371[LinkedList$Entry.previous]o12369:0 > 0 && o12667[LinkedList$Entry.previous]o12664:0 < o12371[LinkedList$Entry.previous]o12373:0 && o12371[LinkedList$Entry.previous]o12373:0 > -1 && i3642:0 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o12663sub1306784166:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12371:0, o12370-1681577183:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(o13141sub0:0), o13136[LinkedList$Entry.previous]o13141:0, o12371[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12371:0, o12370-1681577183:0) :|: o12373[LinkedList$Entry.previous]o12371:0 > 0 && o12373[LinkedList$Entry.previous]o12369:0 > 0 && o12371[LinkedList$Entry.previous]o12373:0 > 0 && o12663[LinkedList$Entry.previous]o12369:0 < o12373[LinkedList$Entry.previous]o12369:0 && o13136[LinkedList$Entry.previous]o13141:0 > o12371[LinkedList$Entry.previous]o12373:0 && o12663[LinkedList$Entry.previous]o12371:0 < o12373[LinkedList$Entry.previous]o12371:0 && i3642:0 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12663sub1306784166:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12369:0, o12373[LinkedList$Entry.previous]o12371:0, o12370-1681577183:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(o12371sub-1681577183:0)))))))), java.lang.Object(o14025sub0:0), o14020[LinkedList$Entry.previous]o14025:0, o12371[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12369:0, o12663[LinkedList$Entry.previous]o12371:0, o12370-1681577183:0) :|: o12373[LinkedList$Entry.previous]o12371:0 > 0 && o12373[LinkedList$Entry.previous]o12369:0 > 0 && o12371[LinkedList$Entry.previous]o12373:0 > 0 && o12663[LinkedList$Entry.previous]o12369:0 < o12373[LinkedList$Entry.previous]o12369:0 && o12663[LinkedList$Entry.previous]o12371:0 < o12373[LinkedList$Entry.previous]o12371:0 && o14020[LinkedList$Entry.previous]o14025:0 > o12371[LinkedList$Entry.previous]o12373:0 && i3642:0 > 1

----------------------------------------

(112)
Obligation:
Rules:
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub1306784290:0), java.lang.Object(o12667sub1306784290:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0, o12370-1681577183:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(o13180sub0:0), 1, o13177[LinkedList$Entry.previous]o13175:0, o12667[LinkedList$Entry.previous]o12369:0, o12667[LinkedList$Entry.previous]o12664:0, o12370-1681577183:0) :|: o12667[LinkedList$Entry.previous]o12369:0 < o12371[LinkedList$Entry.previous]o12369:0 && o12371[LinkedList$Entry.previous]o12369:0 > 0 && o12667[LinkedList$Entry.previous]o12664:0 < o12371[LinkedList$Entry.previous]o12373:0 && o12371[LinkedList$Entry.previous]o12373:0 > -1 && i3642:0 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x7 > 0 && x6 > 0 && x4 > 0 && x10 < x6 && x9 > x4 && x11 < x7 && x12 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x15))), x16, x17, x17, x16, x13) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x18), 1, x19, x20, x21, x13) :|: x20 < x17 && x17 > 0 && x21 < x16 && x16 > -1 && x22 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x25))), x26, x27, x27, x26, x23) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24)))))))))), java.lang.Object(x28), 1, x29, x30, x31, x23) :|: x30 < x27 && x27 > 0 && x31 < x26 && x26 > -1 && x32 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x41, x37, x42, x43, x33) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x41 > x36 && x43 < x39 && x44 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(x46)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x47))), x48, x49, x50, x51, x45) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(x46)))))))), java.lang.Object(x52), x53, x49, x54, x55, x45) :|: x51 > 0 && x50 > 0 && x48 > 0 && x54 < x50 && x55 < x51 && x53 > x48 && x56 > 1

----------------------------------------

(113) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(114)
Obligation:
Rules:
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub1306784290:0), java.lang.Object(o12667sub1306784290:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0, o12370-1681577183:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(o13180sub0:0), 1, o13177[LinkedList$Entry.previous]o13175:0, o12667[LinkedList$Entry.previous]o12369:0, o12667[LinkedList$Entry.previous]o12664:0, o12370-1681577183:0) :|: o12667[LinkedList$Entry.previous]o12369:0 < o12371[LinkedList$Entry.previous]o12369:0 && o12371[LinkedList$Entry.previous]o12369:0 > 0 && o12667[LinkedList$Entry.previous]o12664:0 < o12371[LinkedList$Entry.previous]o12373:0 && o12371[LinkedList$Entry.previous]o12373:0 > -1 && i3642:0 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x7 > 0 && x6 > 0 && x4 > 0 && x10 < x6 && x9 > x4 && x11 < x7 && x12 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x15))), x16, x17, x17, x16, x13) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x18), 1, x19, x20, x21, x13) :|: x20 < x17 && x17 > 0 && x21 < x16 && x16 > -1 && x22 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x25))), x26, x27, x27, x26, x23) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24)))))))))), java.lang.Object(x28), 1, x29, x30, x31, x23) :|: x30 < x27 && x27 > 0 && x31 < x26 && x26 > -1 && x32 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x41, x37, x42, x43, x33) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x41 > x36 && x43 < x39 && x44 > 1
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(x46)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x47))), x48, x49, x50, x51, x45) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(x46)))))))), java.lang.Object(x52), x53, x49, x54, x55, x45) :|: x51 > 0 && x50 > 0 && x48 > 0 && x54 < x50 && x55 < x51 && x53 > x48 && x56 > 1

----------------------------------------

(115) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub1306784290:0), java.lang.Object(o12667sub1306784290:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0, o12370-1681577183:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(o13180sub0:0), 1, o13177[LinkedList$Entry.previous]o13175:0, o12667[LinkedList$Entry.previous]o12369:0, o12667[LinkedList$Entry.previous]o12664:0, o12370-1681577183:0) :|: o12667[LinkedList$Entry.previous]o12369:0 < o12371[LinkedList$Entry.previous]o12369:0 && o12371[LinkedList$Entry.previous]o12369:0 > 0 && o12667[LinkedList$Entry.previous]o12664:0 < o12371[LinkedList$Entry.previous]o12373:0 && o12371[LinkedList$Entry.previous]o12373:0 > -1 && i3642:0 > 1
(2) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x7 > 0 && x6 > 0 && x4 > 0 && x10 < x6 && x9 > x4 && x11 < x7 && x12 > 1
(3) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x15))), x16, x17, x17, x16, x13) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x18), 1, x19, x20, x21, x13) :|: x20 < x17 && x17 > 0 && x21 < x16 && x16 > -1 && x22 > 1
(4) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x25))), x26, x27, x27, x26, x23) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24)))))))))), java.lang.Object(x28), 1, x29, x30, x31, x23) :|: x30 < x27 && x27 > 0 && x31 < x26 && x26 > -1 && x32 > 1
(5) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x41, x37, x42, x43, x33) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x41 > x36 && x43 < x39 && x44 > 1
(6) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(x46)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x47))), x48, x49, x50, x51, x45) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(x46)))))))), java.lang.Object(x52), x53, x49, x54, x55, x45) :|: x51 > 0 && x50 > 0 && x48 > 0 && x54 < x50 && x55 < x51 && x53 > x48 && x56 > 1

Arcs:
(1) -> (1), (2), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (2), (3), (5), (6)
(4) -> (1), (2), (4), (5), (6)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (2), (3), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(116)
Obligation:

Termination digraph:
Nodes:
(1) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub1306784290:0), java.lang.Object(o12667sub1306784290:0))), o12371[LinkedList$Entry.previous]o12373:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12369:0, o12371[LinkedList$Entry.previous]o12373:0, o12370-1681577183:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0), java.lang.Object(o12667sub-374792893:0)))))))))), java.lang.Object(o13180sub0:0), 1, o13177[LinkedList$Entry.previous]o13175:0, o12667[LinkedList$Entry.previous]o12369:0, o12667[LinkedList$Entry.previous]o12664:0, o12370-1681577183:0) :|: o12667[LinkedList$Entry.previous]o12369:0 < o12371[LinkedList$Entry.previous]o12369:0 && o12371[LinkedList$Entry.previous]o12369:0 > 0 && o12667[LinkedList$Entry.previous]o12664:0 < o12371[LinkedList$Entry.previous]o12373:0 && o12371[LinkedList$Entry.previous]o12373:0 > -1 && i3642:0 > 1
(2) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x7 > 0 && x6 > 0 && x4 > 0 && x10 < x6 && x9 > x4 && x11 < x7 && x12 > 1
(3) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x15))), x16, x17, x17, x16, x13) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x18), 1, x19, x20, x21, x13) :|: x20 < x17 && x17 > 0 && x21 < x16 && x16 > -1 && x22 > 1
(4) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x41, x37, x42, x43, x33) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x41 > x36 && x43 < x39 && x44 > 1
(5) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x25))), x26, x27, x27, x26, x23) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24)))))))))), java.lang.Object(x28), 1, x29, x30, x31, x23) :|: x30 < x27 && x27 > 0 && x31 < x26 && x26 > -1 && x32 > 1
(6) f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(x46)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x47))), x48, x49, x50, x51, x45) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(x46)))))))), java.lang.Object(x52), x53, x49, x54, x55, x45) :|: x51 > 0 && x50 > 0 && x48 > 0 && x54 < x50 && x55 < x51 && x53 > x48 && x56 > 1

Arcs:
(1) -> (1), (2), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (2), (3), (4), (6)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (2), (4), (5), (6)
(6) -> (1), (2), (3), (4), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(117) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(118)
Obligation:
Rules:
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0:0), java.lang.Object(o12667sub-374792893:0:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub1306784290:0:0), java.lang.Object(o12667sub1306784290:0:0))), o12371[LinkedList$Entry.previous]o12373:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12373:0:0, o12370-1681577183:0:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12370-1681577183:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17383sub-374792893:0:0), java.lang.Object(o12667sub-374792893:0:0)))))))))), java.lang.Object(o13180sub0:0:0), 1, o13177[LinkedList$Entry.previous]o13175:0:0, o12667[LinkedList$Entry.previous]o12369:0:0, o12667[LinkedList$Entry.previous]o12664:0:0, o12370-1681577183:0:0) :|: o12371[LinkedList$Entry.previous]o12373:0:0 > -1 && i3642:0:0 > 1 && o12667[LinkedList$Entry.previous]o12664:0:0 < o12371[LinkedList$Entry.previous]o12373:0:0 && o12371[LinkedList$Entry.previous]o12369:0:0 > 0 && o12667[LinkedList$Entry.previous]o12369:0:0 < o12371[LinkedList$Entry.previous]o12369:0:0
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x15:0))), x16:0, x17:0, x17:0, x16:0, x13:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14:0)))))))))), java.lang.Object(x18:0), 1, x19:0, x20:0, x21:0, x13:0) :|: x16:0 > -1 && x22:0 > 1 && x21:0 < x16:0 && x17:0 > 0 && x20:0 < x17:0
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45:0, java.lang.Object(x46:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x47:0))), x48:0, x49:0, x50:0, x51:0, x45:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45:0, java.lang.Object(x46:0)))))))), java.lang.Object(x52:0), x53:0, x49:0, x54:0, x55:0, x45:0) :|: x53:0 > x48:0 && x56:0 > 1 && x55:0 < x51:0 && x54:0 < x50:0 && x48:0 > 0 && x50:0 > 0 && x51:0 > 0
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x25:0))), x26:0, x27:0, x27:0, x26:0, x23:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x23:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24:0)))))))))), java.lang.Object(x28:0), 1, x29:0, x30:0, x31:0, x23:0) :|: x26:0 > -1 && x32:0 > 1 && x31:0 < x26:0 && x27:0 > 0 && x30:0 < x27:0
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33:0, java.lang.Object(x34:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x35:0))), x36:0, x37:0, x38:0, x39:0, x33:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33:0, java.lang.Object(x34:0)))))))), java.lang.Object(x40:0), x41:0, x37:0, x42:0, x43:0, x33:0) :|: x43:0 < x39:0 && x44:0 > 1 && x41:0 > x36:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0
f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2:0), java.lang.Object(x3:0))), x4:0, x5:0, x6:0, x7:0, x:0) -> f12319_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x8:0), x9:0, x5:0, x10:0, x11:0, x:0) :|: x7:0 > x11:0 && x12:0 > 1 && x9:0 > x4:0 && x6:0 > x10:0 && x4:0 > 0 && x6:0 > 0 && x7:0 > 0

----------------------------------------

(119) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12319_0_removeLastOccurrence_Load(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
NULL()
javaUtilEx.Content()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(120)
Obligation:
Rules:
f12319_0_removeLastOccurrence_Load(c, c1, o12371[LinkedList$Entry.previous]o12373:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12373:0:0, o12370-1681577183:0:0) -> f12319_0_removeLastOccurrence_Load(c2, c3, c4, o13177[LinkedList$Entry.previous]o13175:0:0, o12667[LinkedList$Entry.previous]o12369:0:0, o12667[LinkedList$Entry.previous]o12664:0:0, o12370-1681577183:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o12371[LinkedList$Entry.previous]o12373:0:0 > -1 && i3642:0:0 > 1 && o12667[LinkedList$Entry.previous]o12664:0:0 < o12371[LinkedList$Entry.previous]o12373:0:0 && o12371[LinkedList$Entry.previous]o12369:0:0 > 0 && o12667[LinkedList$Entry.previous]o12369:0:0 < o12371[LinkedList$Entry.previous]o12369:0:0)
f12319_0_removeLastOccurrence_Load(c10, c11, x48:0, x49:0, x50:0, x51:0, x45:0) -> f12319_0_removeLastOccurrence_Load(c12, c13, x53:0, x49:0, x54:0, x55:0, x45:0) :|: c13 = 0 && (c12 = 0 && (c11 = 0 && c10 = 0)) && (x53:0 > x48:0 && x56:0 > 1 && x55:0 < x51:0 && x54:0 < x50:0 && x48:0 > 0 && x50:0 > 0 && x51:0 > 0)
f12319_0_removeLastOccurrence_Load(c19, c20, x36:0, x37:0, x38:0, x39:0, x33:0) -> f12319_0_removeLastOccurrence_Load(c21, c22, x41:0, x37:0, x42:0, x43:0, x33:0) :|: c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0)) && (x43:0 < x39:0 && x44:0 > 1 && x41:0 > x36:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0)
f12319_0_removeLastOccurrence_Load(c23, c24, x4:0, x5:0, x6:0, x7:0, x:0) -> f12319_0_removeLastOccurrence_Load(c25, c26, x9:0, x5:0, x10:0, x11:0, x:0) :|: c26 = 0 && (c25 = 0 && (c24 = 0 && c23 = 0)) && (x7:0 > x11:0 && x12:0 > 1 && x9:0 > x4:0 && x6:0 > x10:0 && x4:0 > 0 && x6:0 > 0 && x7:0 > 0)

----------------------------------------

(121) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12319_0_removeLastOccurrence_Load(x, x1, x2, x3, x4, x5, x6)] = -1 + c*x + c1*x1 + 2*x5

The following rules are decreasing:
f12319_0_removeLastOccurrence_Load(c, c1, o12371[LinkedList$Entry.previous]o12373:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12373:0:0, o12370-1681577183:0:0) -> f12319_0_removeLastOccurrence_Load(c2, c3, c4, o13177[LinkedList$Entry.previous]o13175:0:0, o12667[LinkedList$Entry.previous]o12369:0:0, o12667[LinkedList$Entry.previous]o12664:0:0, o12370-1681577183:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o12371[LinkedList$Entry.previous]o12373:0:0 > -1 && i3642:0:0 > 1 && o12667[LinkedList$Entry.previous]o12664:0:0 < o12371[LinkedList$Entry.previous]o12373:0:0 && o12371[LinkedList$Entry.previous]o12369:0:0 > 0 && o12667[LinkedList$Entry.previous]o12369:0:0 < o12371[LinkedList$Entry.previous]o12369:0:0)
f12319_0_removeLastOccurrence_Load(c10, c11, x48:0, x49:0, x50:0, x51:0, x45:0) -> f12319_0_removeLastOccurrence_Load(c12, c13, x53:0, x49:0, x54:0, x55:0, x45:0) :|: c13 = 0 && (c12 = 0 && (c11 = 0 && c10 = 0)) && (x53:0 > x48:0 && x56:0 > 1 && x55:0 < x51:0 && x54:0 < x50:0 && x48:0 > 0 && x50:0 > 0 && x51:0 > 0)
f12319_0_removeLastOccurrence_Load(c19, c20, x36:0, x37:0, x38:0, x39:0, x33:0) -> f12319_0_removeLastOccurrence_Load(c21, c22, x41:0, x37:0, x42:0, x43:0, x33:0) :|: c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0)) && (x43:0 < x39:0 && x44:0 > 1 && x41:0 > x36:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0)
f12319_0_removeLastOccurrence_Load(c23, c24, x4:0, x5:0, x6:0, x7:0, x:0) -> f12319_0_removeLastOccurrence_Load(c25, c26, x9:0, x5:0, x10:0, x11:0, x:0) :|: c26 = 0 && (c25 = 0 && (c24 = 0 && c23 = 0)) && (x7:0 > x11:0 && x12:0 > 1 && x9:0 > x4:0 && x6:0 > x10:0 && x4:0 > 0 && x6:0 > 0 && x7:0 > 0)
The following rules are bounded:
f12319_0_removeLastOccurrence_Load(c10, c11, x48:0, x49:0, x50:0, x51:0, x45:0) -> f12319_0_removeLastOccurrence_Load(c12, c13, x53:0, x49:0, x54:0, x55:0, x45:0) :|: c13 = 0 && (c12 = 0 && (c11 = 0 && c10 = 0)) && (x53:0 > x48:0 && x56:0 > 1 && x55:0 < x51:0 && x54:0 < x50:0 && x48:0 > 0 && x50:0 > 0 && x51:0 > 0)
f12319_0_removeLastOccurrence_Load(c19, c20, x36:0, x37:0, x38:0, x39:0, x33:0) -> f12319_0_removeLastOccurrence_Load(c21, c22, x41:0, x37:0, x42:0, x43:0, x33:0) :|: c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0)) && (x43:0 < x39:0 && x44:0 > 1 && x41:0 > x36:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0)
f12319_0_removeLastOccurrence_Load(c23, c24, x4:0, x5:0, x6:0, x7:0, x:0) -> f12319_0_removeLastOccurrence_Load(c25, c26, x9:0, x5:0, x10:0, x11:0, x:0) :|: c26 = 0 && (c25 = 0 && (c24 = 0 && c23 = 0)) && (x7:0 > x11:0 && x12:0 > 1 && x9:0 > x4:0 && x6:0 > x10:0 && x4:0 > 0 && x6:0 > 0 && x7:0 > 0)

----------------------------------------

(122)
Obligation:
Rules:
f12319_0_removeLastOccurrence_Load(c, c1, o12371[LinkedList$Entry.previous]o12373:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12373:0:0, o12370-1681577183:0:0) -> f12319_0_removeLastOccurrence_Load(c2, c3, c4, o13177[LinkedList$Entry.previous]o13175:0:0, o12667[LinkedList$Entry.previous]o12369:0:0, o12667[LinkedList$Entry.previous]o12664:0:0, o12370-1681577183:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o12371[LinkedList$Entry.previous]o12373:0:0 > -1 && i3642:0:0 > 1 && o12667[LinkedList$Entry.previous]o12664:0:0 < o12371[LinkedList$Entry.previous]o12373:0:0 && o12371[LinkedList$Entry.previous]o12369:0:0 > 0 && o12667[LinkedList$Entry.previous]o12369:0:0 < o12371[LinkedList$Entry.previous]o12369:0:0)

----------------------------------------

(123) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f12319_0_removeLastOccurrence_Load ] = f12319_0_removeLastOccurrence_Load_5

The following rules are decreasing:
f12319_0_removeLastOccurrence_Load(c, c1, o12371[LinkedList$Entry.previous]o12373:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12373:0:0, o12370-1681577183:0:0) -> f12319_0_removeLastOccurrence_Load(c2, c3, c4, o13177[LinkedList$Entry.previous]o13175:0:0, o12667[LinkedList$Entry.previous]o12369:0:0, o12667[LinkedList$Entry.previous]o12664:0:0, o12370-1681577183:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o12371[LinkedList$Entry.previous]o12373:0:0 > -1 && i3642:0:0 > 1 && o12667[LinkedList$Entry.previous]o12664:0:0 < o12371[LinkedList$Entry.previous]o12373:0:0 && o12371[LinkedList$Entry.previous]o12369:0:0 > 0 && o12667[LinkedList$Entry.previous]o12369:0:0 < o12371[LinkedList$Entry.previous]o12369:0:0)

The following rules are bounded:
f12319_0_removeLastOccurrence_Load(c, c1, o12371[LinkedList$Entry.previous]o12373:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12369:0:0, o12371[LinkedList$Entry.previous]o12373:0:0, o12370-1681577183:0:0) -> f12319_0_removeLastOccurrence_Load(c2, c3, c4, o13177[LinkedList$Entry.previous]o13175:0:0, o12667[LinkedList$Entry.previous]o12369:0:0, o12667[LinkedList$Entry.previous]o12664:0:0, o12370-1681577183:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o12371[LinkedList$Entry.previous]o12373:0:0 > -1 && i3642:0:0 > 1 && o12667[LinkedList$Entry.previous]o12664:0:0 < o12371[LinkedList$Entry.previous]o12373:0:0 && o12371[LinkedList$Entry.previous]o12369:0:0 > 0 && o12667[LinkedList$Entry.previous]o12369:0:0 < o12371[LinkedList$Entry.previous]o12369:0:0)


----------------------------------------

(124)
YES

----------------------------------------

(125)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveLastOccurrence.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList: [header]
*javaUtilEx.LinkedList$Entry: [element, previous]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(126) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 61 IRulesP rules:
f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(o12271sub0), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269) -> f12323_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12323), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(o12271sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269) :|: TRUE
f12323_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12323), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(o12271sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269) -> f12329_0_removeLastOccurrence_EQ(EOS(STATIC_12329), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(o12271sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188, java.lang.Object(o12269sub1306665188))), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269) :|: TRUE
f12329_0_removeLastOccurrence_EQ(EOS(STATIC_12329), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(o12271sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188, java.lang.Object(o12269sub1306665188))), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269) -> f12337_0_removeLastOccurrence_EQ(EOS(STATIC_12337), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(o12271sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188, java.lang.Object(o12269sub1306665188))), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269, o12271[LinkedList$Entry.previous]o12266) :|: o12271[LinkedList$Entry.previous]o12266 > 0
f12337_0_removeLastOccurrence_EQ(EOS(STATIC_12337), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(o12271sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188, java.lang.Object(o12269sub1306665188))), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269, o12271[LinkedList$Entry.previous]o12266) -> f12345_0_removeLastOccurrence_Load(EOS(STATIC_12345), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269, o12271[LinkedList$Entry.previous]o12266) :|: TRUE
f12345_0_removeLastOccurrence_Load(EOS(STATIC_12345), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269, o12271[LinkedList$Entry.previous]o12266) -> f12354_0_removeLastOccurrence_Load(EOS(STATIC_12354), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(javaUtilEx.Content(EOC)), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269, o12271[LinkedList$Entry.previous]o12266) :|: TRUE
f12354_0_removeLastOccurrence_Load(EOS(STATIC_12354), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(javaUtilEx.Content(EOC)), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269, o12271[LinkedList$Entry.previous]o12266) -> f12363_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12363), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269, o12271[LinkedList$Entry.previous]o12266) :|: TRUE
f12363_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12363), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269, o12271[LinkedList$Entry.previous]o12266) -> f12370_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12370), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269) :|: o12269[LinkedList$Entry.previous]o12271 > 0 && o12271[LinkedList$Entry.previous]o12269 > 0
f12363_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12363), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12648sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12648sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12648sub0), o12648[LinkedList$Entry.previous]o12648, o12268[LinkedList$Entry.next]o12266, o12648[LinkedList$Entry.previous]o12266, o12648[LinkedList$Entry.previous]o12648, o12648[LinkedList$Entry.previous]o12266) -> f12371_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12371), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12648sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12648sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12648sub0), o12268[LinkedList$Entry.next]o12266, o12648[LinkedList$Entry.previous]o12266, o12648[LinkedList$Entry.previous]o12648) :|: TRUE
f12370_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12370), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), o12269[LinkedList$Entry.previous]o12652, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12652[LinkedList$Entry.previous]o12266, o12652[LinkedList$Entry.previous]o12269) -> f12380_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12380), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: o12655[LinkedList$Entry.previous]o12266 < o12652[LinkedList$Entry.previous]o12266 && o12652[LinkedList$Entry.previous]o12266 >= 0 && o12655[LinkedList$Entry.previous]o12269 < o12652[LinkedList$Entry.previous]o12269 && o12652[LinkedList$Entry.previous]o12269 >= 0
f12380_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12380), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f12391_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12391), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), java.lang.Object(javaUtilEx.Content(EOC)), o126530, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: TRUE
f12391_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12391), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), java.lang.Object(javaUtilEx.Content(EOC)), o126530, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f12400_0_equals_Load(EOS(STATIC_12400), java.lang.Object(javaUtilEx.Content(EOC)), o126530, java.lang.Object(o12269sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188, java.lang.Object(o12269sub1306665188))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), java.lang.Object(o12655sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126530, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: i3627 > 1
f12391_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12391), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), java.lang.Object(javaUtilEx.Content(EOC)), o126530, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f12400_1_equals_Load(EOS(STATIC_12400), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), java.lang.Object(javaUtilEx.Content(EOC)), o126530, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: i3627 > 1
f12400_0_equals_Load(EOS(STATIC_12400), java.lang.Object(javaUtilEx.Content(EOC)), o126530, java.lang.Object(o12269sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188, java.lang.Object(o12269sub1306665188))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), java.lang.Object(o12655sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126530, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f15025_0_equals_Load(EOS(STATIC_15025), java.lang.Object(javaUtilEx.Content(EOC)), o126530, java.lang.Object(o12269sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188, java.lang.Object(o12269sub1306665188))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267, java.lang.Object(o12655sub1306783267))), java.lang.Object(o12655sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126530, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: TRUE
f13274_0_equals_Return(EOS(STATIC_13274), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12655sub1306783267))), matching1, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f12560_0_equals_Return(EOS(STATIC_12560), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12655sub1306783267))), 0, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: TRUE && matching1 = 0
f12560_0_equals_Return(EOS(STATIC_12560), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o130901307531142, java.lang.Object(o13092sub1307531142))), matching1, o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13087[LinkedList$Entry.previous]o13089, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087) -> f12577_0_removeLastOccurrence_EQ(EOS(STATIC_12577), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o130901307531142, java.lang.Object(o13092sub1307531142))), 0, o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13087[LinkedList$Entry.previous]o13089, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087) :|: TRUE && matching1 = 0
f12577_0_removeLastOccurrence_EQ(EOS(STATIC_12577), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o130901307531142, java.lang.Object(o13092sub1307531142))), matching1, o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13087[LinkedList$Entry.previous]o13089, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087) -> f12594_0_removeLastOccurrence_Load(EOS(STATIC_12594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o130901307531142, java.lang.Object(o13092sub1307531142))), o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13087[LinkedList$Entry.previous]o13089, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087) :|: TRUE && matching1 = 0
f12594_0_removeLastOccurrence_Load(EOS(STATIC_12594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o130901307531142, java.lang.Object(o13092sub1307531142))), o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13087[LinkedList$Entry.previous]o13089, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087) -> f12614_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12614), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o130901307531142, java.lang.Object(o13092sub1307531142))), o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13087[LinkedList$Entry.previous]o13089, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087) :|: TRUE
f12614_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12614), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o130901307531142, java.lang.Object(o13092sub1307531142))), o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13087[LinkedList$Entry.previous]o13089, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087) -> f12637_0_removeLastOccurrence_Store(EOS(STATIC_12637), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13092sub0), o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087, o13087[LinkedList$Entry.previous]o13092) :|: o13087[LinkedList$Entry.previous]o13092 > o13087[LinkedList$Entry.previous]o13089 && o13087[LinkedList$Entry.previous]o13089 >= 0
f12637_0_removeLastOccurrence_Store(EOS(STATIC_12637), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13092sub0), o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087, o13087[LinkedList$Entry.previous]o13092) -> f12662_0_removeLastOccurrence_JMP(EOS(STATIC_12662), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13092sub0), o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087, o13087[LinkedList$Entry.previous]o13092) :|: TRUE
f12662_0_removeLastOccurrence_JMP(EOS(STATIC_12662), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13092sub0), o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087, o13087[LinkedList$Entry.previous]o13092) -> f12683_0_removeLastOccurrence_Load(EOS(STATIC_12683), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13092sub0), o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087, o13087[LinkedList$Entry.previous]o13092) :|: TRUE
f12683_0_removeLastOccurrence_Load(EOS(STATIC_12683), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13092sub0), o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087, o13087[LinkedList$Entry.previous]o13092) -> f12310_0_removeLastOccurrence_Load(EOS(STATIC_12310), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13085-1679905353, java.lang.Object(o13087sub-1679905353)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13092sub0), o13087[LinkedList$Entry.previous]o13092, o13086[LinkedList$Entry.next]o13084, o13087[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13084, o13092[LinkedList$Entry.previous]o13087) :|: TRUE
f12310_0_removeLastOccurrence_Load(EOS(STATIC_12310), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269) -> f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12271sub0), java.lang.Object(o12271sub0), o12269[LinkedList$Entry.previous]o12271, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12266, o12271[LinkedList$Entry.previous]o12269) :|: TRUE
f13292_0_equals_Return(EOS(STATIC_13292), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17339sub1306783267), java.lang.Object(o12655sub1306783267))), matching1, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f12560_0_equals_Return(EOS(STATIC_12560), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17339sub1306783267), java.lang.Object(o12655sub1306783267))), 0, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: TRUE && matching1 = 0
f13438_0_equals_Return(EOS(STATIC_13438), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12655sub1306783267))), matching1, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f12752_0_equals_Return(EOS(STATIC_12752), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12655sub1306783267))), 0, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: TRUE && matching1 = 0
f12752_0_equals_Return(EOS(STATIC_12752), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub1308446696))), i3935, o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o13998[LinkedList$Entry.previous]o14000, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998) -> f12768_0_removeLastOccurrence_EQ(EOS(STATIC_12768), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub1308446696))), i3935, o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o13998[LinkedList$Entry.previous]o14000, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998) :|: TRUE
f12768_0_removeLastOccurrence_EQ(EOS(STATIC_12768), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub1308446696))), matching1, o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o13998[LinkedList$Entry.previous]o14000, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998) -> f12778_0_removeLastOccurrence_EQ(EOS(STATIC_12778), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub1308446696))), 0, o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o13998[LinkedList$Entry.previous]o14000, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998) :|: TRUE && matching1 = 0
f12778_0_removeLastOccurrence_EQ(EOS(STATIC_12778), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub1308446696))), matching1, o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o13998[LinkedList$Entry.previous]o14000, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998) -> f12795_0_removeLastOccurrence_Load(EOS(STATIC_12795), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub1308446696))), o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o13998[LinkedList$Entry.previous]o14000, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998) :|: TRUE && matching1 = 0
f12795_0_removeLastOccurrence_Load(EOS(STATIC_12795), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub1308446696))), o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o13998[LinkedList$Entry.previous]o14000, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998) -> f12814_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12814), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub1308446696))), o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o13998[LinkedList$Entry.previous]o14000, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998) :|: TRUE
f12814_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12814), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub1308446696))), o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o13998[LinkedList$Entry.previous]o14000, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998) -> f12834_0_removeLastOccurrence_Store(EOS(STATIC_12834), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub0), o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998, o13998[LinkedList$Entry.previous]o14003) :|: o13998[LinkedList$Entry.previous]o14003 > o13998[LinkedList$Entry.previous]o14000 && o13998[LinkedList$Entry.previous]o14000 >= 0
f12834_0_removeLastOccurrence_Store(EOS(STATIC_12834), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub0), o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998, o13998[LinkedList$Entry.previous]o14003) -> f12637_0_removeLastOccurrence_Store(EOS(STATIC_12637), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13996-1679367131, java.lang.Object(o13998sub-1679367131)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub0), o13997[LinkedList$Entry.next]o13995, o13998[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13995, o14003[LinkedList$Entry.previous]o13998, o13998[LinkedList$Entry.previous]o14003) :|: TRUE
f13453_0_equals_Return(EOS(STATIC_13453), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12655sub1306783267))), matching1, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f12752_0_equals_Return(EOS(STATIC_12752), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12655sub1306783267))), 1, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: TRUE && matching1 = 1
f12371_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12371), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), o12268[LinkedList$Entry.next]o12266, o12656[LinkedList$Entry.previous]o12266, o12656[LinkedList$Entry.previous]o12656) -> f12381_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12381), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: o12659[LinkedList$Entry.previous]o12266 < o12656[LinkedList$Entry.previous]o12266 && o12656[LinkedList$Entry.previous]o12266 >= 0 && o12659[LinkedList$Entry.previous]o12656 < o12656[LinkedList$Entry.previous]o12656 && o12656[LinkedList$Entry.previous]o12656 >= 0
f12381_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12381), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f12392_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12392), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), java.lang.Object(javaUtilEx.Content(EOC)), o126570, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: TRUE
f12392_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12392), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), java.lang.Object(javaUtilEx.Content(EOC)), o126570, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f12401_0_equals_Load(EOS(STATIC_12401), java.lang.Object(javaUtilEx.Content(EOC)), o126570, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-1681518717, java.lang.Object(o12659sub-1681518717))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), java.lang.Object(o12659sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126570, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: i3627 > 1
f12392_0_removeLastOccurrence_InvokeMethod(EOS(STATIC_12392), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), java.lang.Object(javaUtilEx.Content(EOC)), o126570, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f12401_1_equals_Load(EOS(STATIC_12401), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), java.lang.Object(javaUtilEx.Content(EOC)), o126570, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: i3627 > 1
f12401_0_equals_Load(EOS(STATIC_12401), java.lang.Object(javaUtilEx.Content(EOC)), o126570, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-1681518717, java.lang.Object(o12659sub-1681518717))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), java.lang.Object(o12659sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126570, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f15095_0_equals_Load(EOS(STATIC_15095), java.lang.Object(javaUtilEx.Content(EOC)), o126570, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-1681518717, java.lang.Object(o12659sub-1681518717))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391, java.lang.Object(o12659sub1306783391))), java.lang.Object(o12659sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126570, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: TRUE
f13275_0_equals_Return(EOS(STATIC_13275), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub1306783391))), matching1, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f12562_0_equals_Return(EOS(STATIC_12562), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub1306783391))), 0, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: TRUE && matching1 = 0
f12562_0_equals_Return(EOS(STATIC_12562), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13109-1679860899, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13112-372306941, java.lang.Object(o13114sub-372306941)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131121307553958, java.lang.Object(o13114sub1307553958))), matching1, o13110[LinkedList$Entry.next]o13108, o13114[LinkedList$Entry.previous]o13108, o13114[LinkedList$Entry.previous]o13111) -> f12578_0_removeLastOccurrence_EQ(EOS(STATIC_12578), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13109-1679860899, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13112-372306941, java.lang.Object(o13114sub-372306941)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131121307553958, java.lang.Object(o13114sub1307553958))), 0, o13110[LinkedList$Entry.next]o13108, o13114[LinkedList$Entry.previous]o13108, o13114[LinkedList$Entry.previous]o13111) :|: TRUE && matching1 = 0
f12578_0_removeLastOccurrence_EQ(EOS(STATIC_12578), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13109-1679860899, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13112-372306941, java.lang.Object(o13114sub-372306941)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131121307553958, java.lang.Object(o13114sub1307553958))), matching1, o13110[LinkedList$Entry.next]o13108, o13114[LinkedList$Entry.previous]o13108, o13114[LinkedList$Entry.previous]o13111) -> f12595_0_removeLastOccurrence_Load(EOS(STATIC_12595), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13109-1679860899, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13112-372306941, java.lang.Object(o13114sub-372306941)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131121307553958, java.lang.Object(o13114sub1307553958))), o13110[LinkedList$Entry.next]o13108, o13114[LinkedList$Entry.previous]o13108, o13114[LinkedList$Entry.previous]o13111) :|: TRUE && matching1 = 0
f12595_0_removeLastOccurrence_Load(EOS(STATIC_12595), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13109-1679860899, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13112-372306941, java.lang.Object(o13114sub-372306941)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131121307553958, java.lang.Object(o13114sub1307553958))), o13110[LinkedList$Entry.next]o13108, o13114[LinkedList$Entry.previous]o13108, o13114[LinkedList$Entry.previous]o13111) -> f12615_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12615), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13109-1679860899, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13112-372306941, java.lang.Object(o13114sub-372306941)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131121307553958, java.lang.Object(o13114sub1307553958))), o13110[LinkedList$Entry.next]o13108, o13114[LinkedList$Entry.previous]o13108, o13114[LinkedList$Entry.previous]o13111) :|: TRUE
f12615_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12615), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13109-1679860899, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13112-372306941, java.lang.Object(o13114sub-372306941)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o131121307553958, java.lang.Object(o13114sub1307553958))), o13110[LinkedList$Entry.next]o13108, o13114[LinkedList$Entry.previous]o13108, o13114[LinkedList$Entry.previous]o13111) -> f12638_0_removeLastOccurrence_Store(EOS(STATIC_12638), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13109-1679860899, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13112-372306941, java.lang.Object(o13114sub-372306941)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13114sub0), o13110[LinkedList$Entry.next]o13108, o13114[LinkedList$Entry.previous]o13108, o13114[LinkedList$Entry.previous]o13111) :|: TRUE
f12638_0_removeLastOccurrence_Store(EOS(STATIC_12638), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13109-1679860899, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13112-372306941, java.lang.Object(o13114sub-372306941)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13114sub0), o13110[LinkedList$Entry.next]o13108, o13114[LinkedList$Entry.previous]o13108, o13114[LinkedList$Entry.previous]o13111) -> f12834_0_removeLastOccurrence_Store(EOS(STATIC_12834), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13109-1679860899, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13112-372306941, java.lang.Object(o13114sub-372306941)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13114sub0), o13110[LinkedList$Entry.next]o13108, o13111[LinkedList$Entry.previous]o13108, o13114[LinkedList$Entry.previous]o13108, o13114[LinkedList$Entry.previous]o13111, o13111[LinkedList$Entry.previous]o13114) :|: o13111[LinkedList$Entry.previous]o13114 = 1
f13293_0_equals_Return(EOS(STATIC_13293), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub-374853560), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub1306783391), java.lang.Object(o12659sub1306783391))), matching1, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f12562_0_equals_Return(EOS(STATIC_12562), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub-374853560), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub1306783391), java.lang.Object(o12659sub1306783391))), 0, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: TRUE && matching1 = 0
f13439_0_equals_Return(EOS(STATIC_13439), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub1306783391))), matching1, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f12754_0_equals_Return(EOS(STATIC_12754), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub1306783391))), 0, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: TRUE && matching1 = 0
f12754_0_equals_Return(EOS(STATIC_12754), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub1308446944))), i3941, o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) -> f12769_0_removeLastOccurrence_EQ(EOS(STATIC_12769), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub1308446944))), i3941, o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) :|: TRUE
f12769_0_removeLastOccurrence_EQ(EOS(STATIC_12769), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub1308446944))), matching1, o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) -> f12780_0_removeLastOccurrence_EQ(EOS(STATIC_12780), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub1308446944))), 0, o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) :|: TRUE && matching1 = 0
f12780_0_removeLastOccurrence_EQ(EOS(STATIC_12780), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub1308446944))), matching1, o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) -> f12797_0_removeLastOccurrence_Load(EOS(STATIC_12797), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub1308446944))), o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) :|: TRUE && matching1 = 0
f12797_0_removeLastOccurrence_Load(EOS(STATIC_12797), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub1308446944))), o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) -> f12816_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12816), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub1308446944))), o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) :|: TRUE
f12816_0_removeLastOccurrence_FieldAccess(EOS(STATIC_12816), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub1308446944))), o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) -> f12836_0_removeLastOccurrence_Store(EOS(STATIC_12836), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub0), o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) :|: TRUE
f12836_0_removeLastOccurrence_Store(EOS(STATIC_12836), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub0), o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) -> f12853_0_removeLastOccurrence_JMP(EOS(STATIC_12853), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub0), o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) :|: TRUE
f12853_0_removeLastOccurrence_JMP(EOS(STATIC_12853), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub0), o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) -> f12862_0_removeLastOccurrence_Load(EOS(STATIC_12862), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub0), o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) :|: TRUE
f12862_0_removeLastOccurrence_Load(EOS(STATIC_12862), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub0), o14007[LinkedList$Entry.next]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) -> f12310_0_removeLastOccurrence_Load(EOS(STATIC_12310), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o14006-1678073625, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub-369626681)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub0), o14008[LinkedList$Entry.previous]o14011, o14007[LinkedList$Entry.next]o14005, o14008[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14005, o14011[LinkedList$Entry.previous]o14008) :|: o14008[LinkedList$Entry.previous]o14011 = 1
f13454_0_equals_Return(EOS(STATIC_13454), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub1306783391))), matching1, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f12754_0_equals_Return(EOS(STATIC_12754), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub1306783391))), 1, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: TRUE && matching1 = 1
f12400_1_equals_Load(EOS(STATIC_12400), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12655sub1306783267))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f13274_0_equals_Return(EOS(STATIC_13274), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12655sub1306783267))), 0, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: TRUE
f12400_1_equals_Load(EOS(STATIC_12400), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17339sub1306783267), java.lang.Object(o12655sub1306783267))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17339sub0), o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f13292_0_equals_Return(EOS(STATIC_13292), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17339sub1306783267), java.lang.Object(o12655sub1306783267))), 0, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: TRUE
f12400_1_equals_Load(EOS(STATIC_12400), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12655sub1306783267))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f13438_0_equals_Return(EOS(STATIC_13438), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12655sub1306783267))), 0, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: TRUE
f12400_1_equals_Load(EOS(STATIC_12400), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12655sub1306783267))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) -> f13453_0_equals_Return(EOS(STATIC_13453), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(o12269sub-1681636951)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12655sub1306783267))), 1, o12268[LinkedList$Entry.next]o12266, o12269[LinkedList$Entry.previous]o12266, o12269[LinkedList$Entry.previous]o12652, o12655[LinkedList$Entry.previous]o12266, o12655[LinkedList$Entry.previous]o12269) :|: TRUE
f12401_1_equals_Load(EOS(STATIC_12401), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub1306783391))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f13275_0_equals_Return(EOS(STATIC_13275), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub1306783391))), 0, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: TRUE
f12401_1_equals_Load(EOS(STATIC_12401), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub-374853560), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub1306783391), java.lang.Object(o12659sub1306783391))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o17354sub0), o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f13293_0_equals_Return(EOS(STATIC_13293), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub-374853560), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub1306783391), java.lang.Object(o12659sub1306783391))), 0, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: TRUE
f12401_1_equals_Load(EOS(STATIC_12401), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub1306783391))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f13439_0_equals_Return(EOS(STATIC_13439), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub1306783391))), 0, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: TRUE
f12401_1_equals_Load(EOS(STATIC_12401), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub1306783391))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) -> f13454_0_equals_Return(EOS(STATIC_13454), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub-374853560)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub1306783391))), 1, o12268[LinkedList$Entry.next]o12266, o12659[LinkedList$Entry.previous]o12266, o12659[LinkedList$Entry.previous]o12656) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12655sub1306783267:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12655sub1306783267:0))), o12269[LinkedList$Entry.previous]o12271:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12269:0) -> f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14003sub0:0), java.lang.Object(o14003sub0:0), o13998[LinkedList$Entry.previous]o14003:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12269:0) :|: o12271[LinkedList$Entry.previous]o12266:0 > 0 && o12271[LinkedList$Entry.previous]o12269:0 > 0 && o12269[LinkedList$Entry.previous]o12271:0 > 0 && o12655[LinkedList$Entry.previous]o12266:0 < o12271[LinkedList$Entry.previous]o12266:0 && o12655[LinkedList$Entry.previous]o12269:0 < o12271[LinkedList$Entry.previous]o12269:0 && i3627:0 > 1 && o13998[LinkedList$Entry.previous]o14003:0 > o12269[LinkedList$Entry.previous]o12271:0
f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12655sub1306783267:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12655sub1306783267:0))), o12269[LinkedList$Entry.previous]o12271:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12269:0) -> f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13092sub0:0), java.lang.Object(o13092sub0:0), o13087[LinkedList$Entry.previous]o13092:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12269:0) :|: o12271[LinkedList$Entry.previous]o12266:0 > 0 && o12271[LinkedList$Entry.previous]o12269:0 > 0 && o12269[LinkedList$Entry.previous]o12271:0 > 0 && o12655[LinkedList$Entry.previous]o12266:0 < o12271[LinkedList$Entry.previous]o12266:0 && o13087[LinkedList$Entry.previous]o13092:0 > o12269[LinkedList$Entry.previous]o12271:0 && i3627:0 > 1 && o12655[LinkedList$Entry.previous]o12269:0 < o12271[LinkedList$Entry.previous]o12269:0
f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub1306783391:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub1306783391:0))), o12269[LinkedList$Entry.previous]o12271:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12271:0) -> f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13114sub0:0), java.lang.Object(o13114sub0:0), 1, o12268[LinkedList$Entry.next]o12266:0, o13111[LinkedList$Entry.previous]o13108:0, o12659[LinkedList$Entry.previous]o12266:0, o12659[LinkedList$Entry.previous]o12656:0) :|: o12269[LinkedList$Entry.previous]o12266:0 > 0 && o12659[LinkedList$Entry.previous]o12266:0 < o12269[LinkedList$Entry.previous]o12266:0 && o12659[LinkedList$Entry.previous]o12656:0 < o12269[LinkedList$Entry.previous]o12271:0 && i3627:0 > 1 && o12269[LinkedList$Entry.previous]o12271:0 > -1
f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17339sub1306783267:0), java.lang.Object(o12655sub1306783267:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17339sub1306783267:0), java.lang.Object(o12655sub1306783267:0))), o12269[LinkedList$Entry.previous]o12271:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12269:0) -> f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13092sub0:0), java.lang.Object(o13092sub0:0), o13087[LinkedList$Entry.previous]o13092:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12269:0) :|: o12271[LinkedList$Entry.previous]o12266:0 > 0 && o12271[LinkedList$Entry.previous]o12269:0 > 0 && o12269[LinkedList$Entry.previous]o12271:0 > 0 && o12655[LinkedList$Entry.previous]o12266:0 < o12271[LinkedList$Entry.previous]o12266:0 && o13087[LinkedList$Entry.previous]o13092:0 > o12269[LinkedList$Entry.previous]o12271:0 && i3627:0 > 1 && o12655[LinkedList$Entry.previous]o12269:0 < o12271[LinkedList$Entry.previous]o12269:0
f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub-374853560:0), java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub1306783391:0), java.lang.Object(o12659sub1306783391:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub1306783391:0), java.lang.Object(o12659sub1306783391:0))), o12269[LinkedList$Entry.previous]o12271:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12271:0) -> f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17354sub-374853560:0), java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13114sub0:0), java.lang.Object(o13114sub0:0), 1, o12268[LinkedList$Entry.next]o12266:0, o13111[LinkedList$Entry.previous]o13108:0, o12659[LinkedList$Entry.previous]o12266:0, o12659[LinkedList$Entry.previous]o12656:0) :|: o12269[LinkedList$Entry.previous]o12266:0 > 0 && o12659[LinkedList$Entry.previous]o12266:0 < o12269[LinkedList$Entry.previous]o12266:0 && o12659[LinkedList$Entry.previous]o12656:0 < o12269[LinkedList$Entry.previous]o12271:0 && i3627:0 > 1 && o12269[LinkedList$Entry.previous]o12271:0 > -1
f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub1306783391:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub1306783391:0))), o12269[LinkedList$Entry.previous]o12271:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12271:0) -> f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o14011sub0:0), java.lang.Object(o14011sub0:0), 1, o12268[LinkedList$Entry.next]o12266:0, o14008[LinkedList$Entry.previous]o14005:0, o12659[LinkedList$Entry.previous]o12266:0, o12659[LinkedList$Entry.previous]o12656:0) :|: o12269[LinkedList$Entry.previous]o12266:0 > 0 && o12659[LinkedList$Entry.previous]o12266:0 < o12269[LinkedList$Entry.previous]o12266:0 && o12659[LinkedList$Entry.previous]o12656:0 < o12269[LinkedList$Entry.previous]o12271:0 && i3627:0 > 1 && o12269[LinkedList$Entry.previous]o12271:0 > -1
Removed following non-SCC rules:
f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267:0, java.lang.Object(o12655sub1306783267:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267:0, java.lang.Object(o12655sub1306783267:0))), o12269[LinkedList$Entry.previous]o12271:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12269:0) -> f15025_0_equals_Load(EOS(STATIC_15025), java.lang.Object(javaUtilEx.Content(EOC)), o126530:0, java.lang.Object(o12269sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188:0, java.lang.Object(o12269sub1306665188:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126531306783267:0, java.lang.Object(o12655sub1306783267:0))), java.lang.Object(o12655sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126530:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12271:0, o12655[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12269:0) :|: o12271[LinkedList$Entry.previous]o12266:0 > 0 && o12271[LinkedList$Entry.previous]o12269:0 > 0 && o12655[LinkedList$Entry.previous]o12266:0 < o12271[LinkedList$Entry.previous]o12266:0 && o12655[LinkedList$Entry.previous]o12269:0 < o12271[LinkedList$Entry.previous]o12269:0 && i3627:0 > 1 && o12269[LinkedList$Entry.previous]o12271:0 > 0
f12318_0_removeLastOccurrence_Load(EOS(STATIC_12318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560:0, java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391:0, java.lang.Object(o12659sub1306783391:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391:0, java.lang.Object(o12659sub1306783391:0))), o12269[LinkedList$Entry.previous]o12271:0, o12268[LinkedList$Entry.next]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12271:0) -> f15095_0_equals_Load(EOS(STATIC_15095), java.lang.Object(javaUtilEx.Content(EOC)), o126570:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o122671306665188:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-1681518717:0, java.lang.Object(o12659sub-1681518717:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o126571306783391:0, java.lang.Object(o12659sub1306783391:0))), java.lang.Object(o12659sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12657-374853560:0, java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o126570:0, o12268[LinkedList$Entry.next]o12266:0, o12659[LinkedList$Entry.previous]o12266:0, o12659[LinkedList$Entry.previous]o12656:0) :|: o12269[LinkedList$Entry.previous]o12266:0 > 0 && o12659[LinkedList$Entry.previous]o12266:0 < o12269[LinkedList$Entry.previous]o12266:0 && o12659[LinkedList$Entry.previous]o12656:0 < o12269[LinkedList$Entry.previous]o12271:0 && i3627:0 > 1 && o12269[LinkedList$Entry.previous]o12271:0 > -1
Filtered constant ground arguments:
   f12318_0_removeLastOccurrence_Load(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f12318_0_removeLastOccurrence_Load(x2, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f12318_0_removeLastOccurrence_Load(x1, x2, x3, x4, x5, x6, x7, x8) -> f12318_0_removeLastOccurrence_Load(x1, x3, x4, x5, x6, x7, x8)
Filtered unneeded arguments:
   f12318_0_removeLastOccurrence_Load(x1, x2, x3, x4, x5, x6, x7) -> f12318_0_removeLastOccurrence_Load(x1, x2, x3, x5, x6, x7)
Finished conversion. Obtained 6 rules.P rules:
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12655sub1306783267:0))), o12269[LinkedList$Entry.previous]o12271:0, o12269[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(o14003sub0:0), o13998[LinkedList$Entry.previous]o14003:0, o12269[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) :|: o12271[LinkedList$Entry.previous]o12269:0 > 0 && o12271[LinkedList$Entry.previous]o12266:0 > 0 && o12269[LinkedList$Entry.previous]o12271:0 > 0 && o12655[LinkedList$Entry.previous]o12266:0 < o12271[LinkedList$Entry.previous]o12266:0 && o12655[LinkedList$Entry.previous]o12269:0 < o12271[LinkedList$Entry.previous]o12269:0 && o13998[LinkedList$Entry.previous]o14003:0 > o12269[LinkedList$Entry.previous]o12271:0 && i3627:0 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o12655sub1306783267:0))), o12269[LinkedList$Entry.previous]o12271:0, o12269[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(o13092sub0:0), o13087[LinkedList$Entry.previous]o13092:0, o12269[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) :|: o12271[LinkedList$Entry.previous]o12269:0 > 0 && o12271[LinkedList$Entry.previous]o12266:0 > 0 && o12269[LinkedList$Entry.previous]o12271:0 > 0 && o12655[LinkedList$Entry.previous]o12266:0 < o12271[LinkedList$Entry.previous]o12266:0 && o13087[LinkedList$Entry.previous]o13092:0 > o12269[LinkedList$Entry.previous]o12271:0 && o12655[LinkedList$Entry.previous]o12269:0 < o12271[LinkedList$Entry.previous]o12269:0 && i3627:0 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o12659sub1306783391:0))), o12269[LinkedList$Entry.previous]o12271:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12271:0, o12267-1681636951:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(o13114sub0:0), 1, o13111[LinkedList$Entry.previous]o13108:0, o12659[LinkedList$Entry.previous]o12266:0, o12659[LinkedList$Entry.previous]o12656:0, o12267-1681636951:0) :|: o12659[LinkedList$Entry.previous]o12266:0 < o12269[LinkedList$Entry.previous]o12266:0 && o12269[LinkedList$Entry.previous]o12266:0 > 0 && o12659[LinkedList$Entry.previous]o12656:0 < o12269[LinkedList$Entry.previous]o12271:0 && o12269[LinkedList$Entry.previous]o12271:0 > -1 && i3627:0 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17339sub1306783267:0), java.lang.Object(o12655sub1306783267:0))), o12269[LinkedList$Entry.previous]o12271:0, o12269[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(o13092sub0:0), o13087[LinkedList$Entry.previous]o13092:0, o12269[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) :|: o12271[LinkedList$Entry.previous]o12269:0 > 0 && o12271[LinkedList$Entry.previous]o12266:0 > 0 && o12269[LinkedList$Entry.previous]o12271:0 > 0 && o12655[LinkedList$Entry.previous]o12266:0 < o12271[LinkedList$Entry.previous]o12266:0 && o13087[LinkedList$Entry.previous]o13092:0 > o12269[LinkedList$Entry.previous]o12271:0 && o12655[LinkedList$Entry.previous]o12269:0 < o12271[LinkedList$Entry.previous]o12269:0 && i3627:0 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17354sub-374853560:0), java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17354sub1306783391:0), java.lang.Object(o12659sub1306783391:0))), o12269[LinkedList$Entry.previous]o12271:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12271:0, o12267-1681636951:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17354sub-374853560:0), java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(o13114sub0:0), 1, o13111[LinkedList$Entry.previous]o13108:0, o12659[LinkedList$Entry.previous]o12266:0, o12659[LinkedList$Entry.previous]o12656:0, o12267-1681636951:0) :|: o12659[LinkedList$Entry.previous]o12266:0 < o12269[LinkedList$Entry.previous]o12266:0 && o12269[LinkedList$Entry.previous]o12266:0 > 0 && o12659[LinkedList$Entry.previous]o12656:0 < o12269[LinkedList$Entry.previous]o12271:0 && o12269[LinkedList$Entry.previous]o12271:0 > -1 && i3627:0 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12659sub1306783391:0))), o12269[LinkedList$Entry.previous]o12271:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12266:0, o12269[LinkedList$Entry.previous]o12271:0, o12267-1681636951:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12659sub-374853560:0)))))))))), java.lang.Object(o14011sub0:0), 1, o14008[LinkedList$Entry.previous]o14005:0, o12659[LinkedList$Entry.previous]o12266:0, o12659[LinkedList$Entry.previous]o12656:0, o12267-1681636951:0) :|: o12659[LinkedList$Entry.previous]o12266:0 < o12269[LinkedList$Entry.previous]o12266:0 && o12269[LinkedList$Entry.previous]o12266:0 > 0 && o12659[LinkedList$Entry.previous]o12656:0 < o12269[LinkedList$Entry.previous]o12271:0 && o12269[LinkedList$Entry.previous]o12271:0 > -1 && i3627:0 > 1

----------------------------------------

(127)
Obligation:
Rules:
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12655sub1306783267:0))), o12269[LinkedList$Entry.previous]o12271:0, o12269[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(o14003sub0:0), o13998[LinkedList$Entry.previous]o14003:0, o12269[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) :|: o12271[LinkedList$Entry.previous]o12269:0 > 0 && o12271[LinkedList$Entry.previous]o12266:0 > 0 && o12269[LinkedList$Entry.previous]o12271:0 > 0 && o12655[LinkedList$Entry.previous]o12266:0 < o12271[LinkedList$Entry.previous]o12266:0 && o12655[LinkedList$Entry.previous]o12269:0 < o12271[LinkedList$Entry.previous]o12269:0 && o13998[LinkedList$Entry.previous]o14003:0 > o12269[LinkedList$Entry.previous]o12271:0 && i3627:0 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x8 > x3 && x10 < x6 && x11 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14))), x15, x16, x16, x15, x12) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(x17), 1, x18, x19, x20, x12) :|: x19 < x16 && x16 > 0 && x20 < x15 && x15 > -1 && x21 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(x23)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x24), java.lang.Object(x25))), x26, x27, x28, x29, x22) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(x23)))))))), java.lang.Object(x30), x31, x27, x32, x33, x22) :|: x29 > 0 && x28 > 0 && x26 > 0 && x32 < x28 && x31 > x26 && x33 < x29 && x34 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x35, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x36), java.lang.Object(x37)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x38), java.lang.Object(x39))), x40, x41, x41, x40, x35) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x35, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x36), java.lang.Object(x37)))))))))), java.lang.Object(x42), 1, x43, x44, x45, x35) :|: x44 < x41 && x41 > 0 && x45 < x40 && x40 > -1 && x46 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x47, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x48)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x49))), x50, x51, x51, x50, x47) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x47, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x48)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x47) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

----------------------------------------

(128) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(129)
Obligation:
Rules:
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12655sub1306783267:0))), o12269[LinkedList$Entry.previous]o12271:0, o12269[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(o14003sub0:0), o13998[LinkedList$Entry.previous]o14003:0, o12269[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) :|: o12271[LinkedList$Entry.previous]o12269:0 > 0 && o12271[LinkedList$Entry.previous]o12266:0 > 0 && o12269[LinkedList$Entry.previous]o12271:0 > 0 && o12655[LinkedList$Entry.previous]o12266:0 < o12271[LinkedList$Entry.previous]o12266:0 && o12655[LinkedList$Entry.previous]o12269:0 < o12271[LinkedList$Entry.previous]o12269:0 && o13998[LinkedList$Entry.previous]o14003:0 > o12269[LinkedList$Entry.previous]o12271:0 && i3627:0 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x8 > x3 && x10 < x6 && x11 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14))), x15, x16, x16, x15, x12) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(x17), 1, x18, x19, x20, x12) :|: x19 < x16 && x16 > 0 && x20 < x15 && x15 > -1 && x21 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(x23)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x24), java.lang.Object(x25))), x26, x27, x28, x29, x22) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(x23)))))))), java.lang.Object(x30), x31, x27, x32, x33, x22) :|: x29 > 0 && x28 > 0 && x26 > 0 && x32 < x28 && x31 > x26 && x33 < x29 && x34 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x35, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x36), java.lang.Object(x37)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x38), java.lang.Object(x39))), x40, x41, x41, x40, x35) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x35, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x36), java.lang.Object(x37)))))))))), java.lang.Object(x42), 1, x43, x44, x45, x35) :|: x44 < x41 && x41 > 0 && x45 < x40 && x40 > -1 && x46 > 1
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x47, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x48)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x49))), x50, x51, x51, x50, x47) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x47, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x48)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x47) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

----------------------------------------

(130) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12655sub1306783267:0))), o12269[LinkedList$Entry.previous]o12271:0, o12269[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(o14003sub0:0), o13998[LinkedList$Entry.previous]o14003:0, o12269[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) :|: o12271[LinkedList$Entry.previous]o12269:0 > 0 && o12271[LinkedList$Entry.previous]o12266:0 > 0 && o12269[LinkedList$Entry.previous]o12271:0 > 0 && o12655[LinkedList$Entry.previous]o12266:0 < o12271[LinkedList$Entry.previous]o12266:0 && o12655[LinkedList$Entry.previous]o12269:0 < o12271[LinkedList$Entry.previous]o12269:0 && o13998[LinkedList$Entry.previous]o14003:0 > o12269[LinkedList$Entry.previous]o12271:0 && i3627:0 > 1
(2) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x8 > x3 && x10 < x6 && x11 > 1
(3) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14))), x15, x16, x16, x15, x12) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(x17), 1, x18, x19, x20, x12) :|: x19 < x16 && x16 > 0 && x20 < x15 && x15 > -1 && x21 > 1
(4) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(x23)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x24), java.lang.Object(x25))), x26, x27, x28, x29, x22) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(x23)))))))), java.lang.Object(x30), x31, x27, x32, x33, x22) :|: x29 > 0 && x28 > 0 && x26 > 0 && x32 < x28 && x31 > x26 && x33 < x29 && x34 > 1
(5) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x35, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x36), java.lang.Object(x37)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x38), java.lang.Object(x39))), x40, x41, x41, x40, x35) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x35, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x36), java.lang.Object(x37)))))))))), java.lang.Object(x42), 1, x43, x44, x45, x35) :|: x44 < x41 && x41 > 0 && x45 < x40 && x40 > -1 && x46 > 1
(6) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x47, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x48)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x49))), x50, x51, x51, x50, x47) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x47, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x48)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x47) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (4)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (2), (4), (5), (6)
(6) -> (1), (2), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(131)
Obligation:

Termination digraph:
Nodes:
(1) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12655sub1306783267:0))), o12269[LinkedList$Entry.previous]o12271:0, o12269[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12266:0, o12271[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0, java.lang.Object(o12269sub-1681636951:0)))))))), java.lang.Object(o14003sub0:0), o13998[LinkedList$Entry.previous]o14003:0, o12269[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12266:0, o12655[LinkedList$Entry.previous]o12269:0, o12267-1681636951:0) :|: o12271[LinkedList$Entry.previous]o12269:0 > 0 && o12271[LinkedList$Entry.previous]o12266:0 > 0 && o12269[LinkedList$Entry.previous]o12271:0 > 0 && o12655[LinkedList$Entry.previous]o12266:0 < o12271[LinkedList$Entry.previous]o12266:0 && o12655[LinkedList$Entry.previous]o12269:0 < o12271[LinkedList$Entry.previous]o12269:0 && o13998[LinkedList$Entry.previous]o14003:0 > o12269[LinkedList$Entry.previous]o12271:0 && i3627:0 > 1
(2) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x8 > x3 && x10 < x6 && x11 > 1
(3) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14))), x15, x16, x16, x15, x12) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(x17), 1, x18, x19, x20, x12) :|: x19 < x16 && x16 > 0 && x20 < x15 && x15 > -1 && x21 > 1
(4) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(x23)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x24), java.lang.Object(x25))), x26, x27, x28, x29, x22) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(x23)))))))), java.lang.Object(x30), x31, x27, x32, x33, x22) :|: x29 > 0 && x28 > 0 && x26 > 0 && x32 < x28 && x31 > x26 && x33 < x29 && x34 > 1
(5) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x35, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x36), java.lang.Object(x37)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x38), java.lang.Object(x39))), x40, x41, x41, x40, x35) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x35, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x36), java.lang.Object(x37)))))))))), java.lang.Object(x42), 1, x43, x44, x45, x35) :|: x44 < x41 && x41 > 0 && x45 < x40 && x40 > -1 && x46 > 1
(6) f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x47, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x48)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x49))), x50, x51, x51, x50, x47) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x47, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x48)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x47) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (4)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (2), (4), (5), (6)
(6) -> (1), (2), (4), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(132) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(133)
Obligation:
Rules:
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22:0, java.lang.Object(x23:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x24:0), java.lang.Object(x25:0))), x26:0, x27:0, x28:0, x29:0, x22:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22:0, java.lang.Object(x23:0)))))))), java.lang.Object(x30:0), x31:0, x27:0, x32:0, x33:0, x22:0) :|: x33:0 < x29:0 && x34:0 > 1 && x31:0 > x26:0 && x32:0 < x28:0 && x26:0 > 0 && x28:0 > 0 && x29:0 > 0
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2:0))), x3:0, x4:0, x5:0, x6:0, x:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x7:0), x8:0, x4:0, x9:0, x10:0, x:0) :|: x6:0 > x10:0 && x11:0 > 1 && x8:0 > x3:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14:0))), x15:0, x16:0, x16:0, x15:0, x12:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13:0)))))))))), java.lang.Object(x17:0), 1, x18:0, x19:0, x20:0, x12:0) :|: x15:0 > -1 && x21:0 > 1 && x20:0 < x15:0 && x16:0 > 0 && x19:0 < x16:0
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x35:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x36:0), java.lang.Object(x37:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x38:0), java.lang.Object(x39:0))), x40:0, x41:0, x41:0, x40:0, x35:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x35:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x36:0), java.lang.Object(x37:0)))))))))), java.lang.Object(x42:0), 1, x43:0, x44:0, x45:0, x35:0) :|: x40:0 > -1 && x46:0 > 1 && x45:0 < x40:0 && x41:0 > 0 && x44:0 < x41:0
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x47:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x48:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x49:0))), x50:0, x51:0, x51:0, x50:0, x47:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x47:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x48:0)))))))))), java.lang.Object(x52:0), 1, x53:0, x54:0, x55:0, x47:0) :|: x50:0 > -1 && x56:0 > 1 && x55:0 < x50:0 && x51:0 > 0 && x54:0 < x51:0
f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0:0, java.lang.Object(o12269sub-1681636951:0:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o12655sub1306783267:0:0))), o12269[LinkedList$Entry.previous]o12271:0:0, o12269[LinkedList$Entry.previous]o12266:0:0, o12271[LinkedList$Entry.previous]o12266:0:0, o12271[LinkedList$Entry.previous]o12269:0:0, o12267-1681636951:0:0) -> f12318_0_removeLastOccurrence_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o12267-1681636951:0:0, java.lang.Object(o12269sub-1681636951:0:0)))))))), java.lang.Object(o14003sub0:0:0), o13998[LinkedList$Entry.previous]o14003:0:0, o12269[LinkedList$Entry.previous]o12266:0:0, o12655[LinkedList$Entry.previous]o12266:0:0, o12655[LinkedList$Entry.previous]o12269:0:0, o12267-1681636951:0:0) :|: o13998[LinkedList$Entry.previous]o14003:0:0 > o12269[LinkedList$Entry.previous]o12271:0:0 && i3627:0:0 > 1 && o12655[LinkedList$Entry.previous]o12269:0:0 < o12271[LinkedList$Entry.previous]o12269:0:0 && o12655[LinkedList$Entry.previous]o12266:0:0 < o12271[LinkedList$Entry.previous]o12266:0:0 && o12269[LinkedList$Entry.previous]o12271:0:0 > 0 && o12271[LinkedList$Entry.previous]o12266:0:0 > 0 && o12271[LinkedList$Entry.previous]o12269:0:0 > 0

----------------------------------------

(134) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12318_0_removeLastOccurrence_Load(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
NULL()
javaUtilEx.Content()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(135)
Obligation:
Rules:
f12318_0_removeLastOccurrence_Load(c, c1, x26:0, x27:0, x28:0, x29:0, x22:0) -> f12318_0_removeLastOccurrence_Load(c2, c3, x31:0, x27:0, x32:0, x33:0, x22:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x33:0 < x29:0 && x34:0 > 1 && x31:0 > x26:0 && x32:0 < x28:0 && x26:0 > 0 && x28:0 > 0 && x29:0 > 0)
f12318_0_removeLastOccurrence_Load(c4, c5, x3:0, x4:0, x5:0, x6:0, x:0) -> f12318_0_removeLastOccurrence_Load(c6, c7, x8:0, x4:0, x9:0, x10:0, x:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (x6:0 > x10:0 && x11:0 > 1 && x8:0 > x3:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0)
f12318_0_removeLastOccurrence_Load(c8, c9, x15:0, x16:0, x16:0, x15:0, x12:0) -> f12318_0_removeLastOccurrence_Load(c10, c11, c12, x18:0, x19:0, x20:0, x12:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0))) && (x15:0 > -1 && x21:0 > 1 && x20:0 < x15:0 && x16:0 > 0 && x19:0 < x16:0)
f12318_0_removeLastOccurrence_Load(c23, c24, o12269[LinkedList$Entry.previous]o12271:0:0, o12269[LinkedList$Entry.previous]o12266:0:0, o12271[LinkedList$Entry.previous]o12266:0:0, o12271[LinkedList$Entry.previous]o12269:0:0, o12267-1681636951:0:0) -> f12318_0_removeLastOccurrence_Load(c25, c26, o13998[LinkedList$Entry.previous]o14003:0:0, o12269[LinkedList$Entry.previous]o12266:0:0, o12655[LinkedList$Entry.previous]o12266:0:0, o12655[LinkedList$Entry.previous]o12269:0:0, o12267-1681636951:0:0) :|: c26 = 0 && (c25 = 0 && (c24 = 0 && c23 = 0)) && (o13998[LinkedList$Entry.previous]o14003:0:0 > o12269[LinkedList$Entry.previous]o12271:0:0 && i3627:0:0 > 1 && o12655[LinkedList$Entry.previous]o12269:0:0 < o12271[LinkedList$Entry.previous]o12269:0:0 && o12655[LinkedList$Entry.previous]o12266:0:0 < o12271[LinkedList$Entry.previous]o12266:0:0 && o12269[LinkedList$Entry.previous]o12271:0:0 > 0 && o12271[LinkedList$Entry.previous]o12266:0:0 > 0 && o12271[LinkedList$Entry.previous]o12269:0:0 > 0)

----------------------------------------

(136) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f12318_0_removeLastOccurrence_Load ] = f12318_0_removeLastOccurrence_Load_6

The following rules are decreasing:
f12318_0_removeLastOccurrence_Load(c, c1, x26:0, x27:0, x28:0, x29:0, x22:0) -> f12318_0_removeLastOccurrence_Load(c2, c3, x31:0, x27:0, x32:0, x33:0, x22:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x33:0 < x29:0 && x34:0 > 1 && x31:0 > x26:0 && x32:0 < x28:0 && x26:0 > 0 && x28:0 > 0 && x29:0 > 0)
f12318_0_removeLastOccurrence_Load(c4, c5, x3:0, x4:0, x5:0, x6:0, x:0) -> f12318_0_removeLastOccurrence_Load(c6, c7, x8:0, x4:0, x9:0, x10:0, x:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (x6:0 > x10:0 && x11:0 > 1 && x8:0 > x3:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0)
f12318_0_removeLastOccurrence_Load(c8, c9, x15:0, x16:0, x16:0, x15:0, x12:0) -> f12318_0_removeLastOccurrence_Load(c10, c11, c12, x18:0, x19:0, x20:0, x12:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0))) && (x15:0 > -1 && x21:0 > 1 && x20:0 < x15:0 && x16:0 > 0 && x19:0 < x16:0)
f12318_0_removeLastOccurrence_Load(c23, c24, o12269[LinkedList$Entry.previous]o12271:0:0, o12269[LinkedList$Entry.previous]o12266:0:0, o12271[LinkedList$Entry.previous]o12266:0:0, o12271[LinkedList$Entry.previous]o12269:0:0, o12267-1681636951:0:0) -> f12318_0_removeLastOccurrence_Load(c25, c26, o13998[LinkedList$Entry.previous]o14003:0:0, o12269[LinkedList$Entry.previous]o12266:0:0, o12655[LinkedList$Entry.previous]o12266:0:0, o12655[LinkedList$Entry.previous]o12269:0:0, o12267-1681636951:0:0) :|: c26 = 0 && (c25 = 0 && (c24 = 0 && c23 = 0)) && (o13998[LinkedList$Entry.previous]o14003:0:0 > o12269[LinkedList$Entry.previous]o12271:0:0 && i3627:0:0 > 1 && o12655[LinkedList$Entry.previous]o12269:0:0 < o12271[LinkedList$Entry.previous]o12269:0:0 && o12655[LinkedList$Entry.previous]o12266:0:0 < o12271[LinkedList$Entry.previous]o12266:0:0 && o12269[LinkedList$Entry.previous]o12271:0:0 > 0 && o12271[LinkedList$Entry.previous]o12266:0:0 > 0 && o12271[LinkedList$Entry.previous]o12269:0:0 > 0)

The following rules are bounded:
f12318_0_removeLastOccurrence_Load(c, c1, x26:0, x27:0, x28:0, x29:0, x22:0) -> f12318_0_removeLastOccurrence_Load(c2, c3, x31:0, x27:0, x32:0, x33:0, x22:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x33:0 < x29:0 && x34:0 > 1 && x31:0 > x26:0 && x32:0 < x28:0 && x26:0 > 0 && x28:0 > 0 && x29:0 > 0)
f12318_0_removeLastOccurrence_Load(c4, c5, x3:0, x4:0, x5:0, x6:0, x:0) -> f12318_0_removeLastOccurrence_Load(c6, c7, x8:0, x4:0, x9:0, x10:0, x:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (x6:0 > x10:0 && x11:0 > 1 && x8:0 > x3:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0)
f12318_0_removeLastOccurrence_Load(c8, c9, x15:0, x16:0, x16:0, x15:0, x12:0) -> f12318_0_removeLastOccurrence_Load(c10, c11, c12, x18:0, x19:0, x20:0, x12:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0))) && (x15:0 > -1 && x21:0 > 1 && x20:0 < x15:0 && x16:0 > 0 && x19:0 < x16:0)
f12318_0_removeLastOccurrence_Load(c23, c24, o12269[LinkedList$Entry.previous]o12271:0:0, o12269[LinkedList$Entry.previous]o12266:0:0, o12271[LinkedList$Entry.previous]o12266:0:0, o12271[LinkedList$Entry.previous]o12269:0:0, o12267-1681636951:0:0) -> f12318_0_removeLastOccurrence_Load(c25, c26, o13998[LinkedList$Entry.previous]o14003:0:0, o12269[LinkedList$Entry.previous]o12266:0:0, o12655[LinkedList$Entry.previous]o12266:0:0, o12655[LinkedList$Entry.previous]o12269:0:0, o12267-1681636951:0:0) :|: c26 = 0 && (c25 = 0 && (c24 = 0 && c23 = 0)) && (o13998[LinkedList$Entry.previous]o14003:0:0 > o12269[LinkedList$Entry.previous]o12271:0:0 && i3627:0:0 > 1 && o12655[LinkedList$Entry.previous]o12269:0:0 < o12271[LinkedList$Entry.previous]o12269:0:0 && o12655[LinkedList$Entry.previous]o12266:0:0 < o12271[LinkedList$Entry.previous]o12266:0:0 && o12269[LinkedList$Entry.previous]o12271:0:0 > 0 && o12271[LinkedList$Entry.previous]o12266:0:0 > 0 && o12271[LinkedList$Entry.previous]o12269:0:0 > 0)


----------------------------------------

(137)
YES
