NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/vXQVq.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 121 ms]
(4) JBCTerminationGraph
(5) JBCNonTerm [COMPLETE, 44 ms]
(6) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
package simple.cousot;

public class Cousot {

	public static void loop(int i, int j) {
		while (true) {
			if (i < j) {
				i = i+4;
			} else {
				j = j+1;
				i = i+2;
			}
		}
	}
}


package simple.cousot;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		Cousot.loop(args[0].length(), args[1].length());
	}

}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
package simple.cousot;

public class Cousot {

	public static void loop(int i, int j) {
		while (true) {
			if (i < j) {
				i = i+4;
			} else {
				j = j+1;
				i = i+2;
			}
		}
	}
}


package simple.cousot;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		Cousot.loop(args[0].length(), args[1].length());
	}

}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
simple.cousot.Main.main([Ljava/lang/String;)V: Graph of 135 nodes with 1 SCC.





----------------------------------------

(5) JBCNonTerm (COMPLETE)
Reached a loop using the following run: 

0:<simple.cousot.Main.main||0: load ADDR args||args: a2|| ->
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o13, o36} -->{java.lang.Object...}
	o13!: String(count=0, hash=#, offset=0, value=o14?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o14:: [CHAR] -->{java.lang.Object...}
a2-><-o38
a2-><-o36
a2-><-o14
a2-><-o13
YES:  (JL1)
1:<simple.cousot.Main.main||1: push 0||args: a2||a2>
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o13, o36} -->{java.lang.Object...}
	o13!: String(count=0, hash=#, offset=0, value=o14?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o14:: [CHAR] -->{java.lang.Object...}
a2-><-o38
a2-><-o36
a2-><-o14
a2-><-o13
YES:  (JL1)
2:<simple.cousot.Main.main||2: Read ADDR from array||args: a2||a2, 0>
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o13, o36} -->{java.lang.Object...}
	o13!: String(count=0, hash=#, offset=0, value=o14?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o14:: [CHAR] -->{java.lang.Object...}
a2-><-o38
a2-><-o36
a2-><-o14
a2-><-o13
YES:  (JL1)
3:<simple.cousot.Main.main||3: java.lang.String.length()I||args: a2||o13>
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o13, o36} -->{java.lang.Object...}
	o13!: String(count=0, hash=#, offset=0, value=o14?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o14:: [CHAR] -->{java.lang.Object...}
a2-><-o38
a2-><-o36
a2-><-o14
a2-><-o13
YES:  (JL1)
4:<java.lang.String.length||0: load ADDR this||this: o13|| ->
<simple.cousot.Main.main||3: java.lang.String.length||args: a2|| ->
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o13, o36} -->{java.lang.Object...}
	o13!: String(count=0, hash=#, offset=0, value=o14?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o14:: [CHAR] -->{java.lang.Object...}
a2-><-o38
a2-><-o36
a2-><-o14
a2-><-o13
YES:  (JL1)
5:<java.lang.String.length||1: Read from count|| - ||o13>
<simple.cousot.Main.main||3: java.lang.String.length||args: a2|| ->
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o13, o36} -->{java.lang.Object...}
	o13!: String(count=0, hash=#, offset=0, value=o14?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o14:: [CHAR] -->{java.lang.Object...}
a2-><-o38
a2-><-o36
a2-><-o14
a2-><-o13
YES:  (JL1)
6:<java.lang.String.length||4: return INT|| - ||0>
<simple.cousot.Main.main||3: java.lang.String.length||args: a2|| ->
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o13, o36} -->{java.lang.Object...}
	o13!: String(count=0, hash=#, offset=0, value=o14?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o14:: [CHAR] -->{java.lang.Object...}
a2-><-o38
a2-><-o36
a2-><-o14
a2-><-o13
YES:  (JL1)
7:<simple.cousot.Main.main||6: load ADDR args||args: a2||0>
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o13, o36} -->{java.lang.Object...}
	o13!: String(count=0, hash=#, offset=0, value=o14?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o14:: [CHAR] -->{java.lang.Object...}
a2-><-o38
a2-><-o36
a2-><-o14
a2-><-o13
YES:  (JL1)
8:<simple.cousot.Main.main||7: push 1|| - ||0, a2>
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o13, o36} -->{java.lang.Object...}
	o13!: String(count=0, hash=#, offset=0, value=o14?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o14:: [CHAR] -->{java.lang.Object...}
a2-><-o38
a2-><-o36
a2-><-o14
a2-><-o13
YES:  (JL1)
9:<simple.cousot.Main.main||8: Read ADDR from array|| - ||0, a2, 1>
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o13, o36} -->{java.lang.Object...}
	o13!: String(count=0, hash=#, offset=0, value=o14?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o14:: [CHAR] -->{java.lang.Object...}
a2-><-o38
a2-><-o36
a2-><-o14
a2-><-o13
YES:  (JL1)
10:<simple.cousot.Main.main||9: java.lang.String.length()I|| - ||0, o36>
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
11:<java.lang.String.length||0: load ADDR this||this: o36|| ->
<simple.cousot.Main.main||9: java.lang.String.length|| - ||0>
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
12:<java.lang.String.length||1: Read from count|| - ||o36>
<simple.cousot.Main.main||9: java.lang.String.length|| - ||0>
	o36!: String(count=1, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
13:<java.lang.String.length||4: return INT|| - ||1>
<simple.cousot.Main.main||9: java.lang.String.length|| - ||0>
YES:  (JL1)
14:<simple.cousot.Main.main||12: simple.cousot.Cousot.loop(II)V|| - ||0, 1>
YES:  (JL1)
15:<simple.cousot.Cousot.loop||0: load INT i||i: 0, j: 1|| ->
<simple.cousot.Main.main||12: simple.cousot.Cousot.loop|| - || ->
YES:  (JL1)
Start state of loop: 

<simple.cousot.Cousot.loop||0: load INT i||i: i8, j: i29|| ->
[a2(lv_0_0)]
<simple.cousot.Main.main||12: simple.cousot.Cousot.loop|| - || ->
	a2([java.lang.String...]): length i16 -->{java.lang.Object...}
	i8: [0,+inf)
	i16: [2,+inf){0,+inf}
	i29: [0,+inf)
YES:  (JL1)


In the loop head node, references [i8, i29] were interesting.

All methods calls in the loop body are side-effect free, hence they can be ignored.

By SMT, we could prove

((0 <= initial_i8 and 0 <= initial_i29 and 2 <= initial_i16) and ((((path1_i36 = (path1_i8 + 4) and path1_i36 = res_i8 and path1_i29 = res_i29 and path1_i8 = initial_i8 and path1_i29 = initial_i29) and (path1_i8 < path1_i29 and path1_i8 < path1_i29)) or ((path2_i35 = (path2_i29 + 1) and path2_i213 = (path2_i8 + 2) and path2_i213 = res_i8 and path2_i35 = res_i29 and path2_i8 = initial_i8 and path2_i29 = initial_i29) and (path2_i8 >= path2_i29 and path2_i8 >= path2_i29))) and (((res1_i36 = (res1_i8 + 4) and res_i8 = res1_i8 and res_i29 = res1_i29) and !(res1_i8 < res1_i29 and res1_i8 < res1_i29)) and ((res2_i35 = (res2_i29 + 1) and res2_i213 = (res2_i8 + 2) and res_i8 = res2_i8 and res_i29 = res2_i29) and !(res2_i8 >= res2_i29 and res2_i8 >= res2_i29)))))

to be UNSAT. Consequently, the loop will not terminate.
----------------------------------------

(6)
NO
