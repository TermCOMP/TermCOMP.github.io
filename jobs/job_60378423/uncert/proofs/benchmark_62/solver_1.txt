YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/0dN4U.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 55 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 177 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) JBCTerminationSCC
(7) SCCToIRSProof [SOUND, 86 ms]
(8) IRSwT
(9) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
(10) IRSwT
(11) IRSwTTerminationDigraphProof [EQUIVALENT, 13 ms]
(12) AND
    (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (17) IRSwT
        (18) TempFilterProof [SOUND, 15 ms]
        (19) IntTRS
        (20) PolynomialOrderProcessor [EQUIVALENT, 4 ms]
        (21) YES
    (22) IRSwT
        (23) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (24) IRSwT
        (25) TempFilterProof [SOUND, 12 ms]
        (26) IntTRS
        (27) PolynomialOrderProcessor [EQUIVALENT, 5 ms]
        (28) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
/**
 * Example taken from "A Term Rewriting Approach to the Automated Termination
 * Analysis of Imperative Programs" (http://www.cs.unm.edu/~spf/papers/2009-02.pdf)
 * and converted to Java.
 */

public class PastaC11 {
    public static void main(String[] args) {
        Random.args = args;
        int x = Random.random();
        int y = Random.random();

        while (true) {
			if (x >= 0) {
				x--;
				y = Random.random();
			} else if (y >= 0) {
				y--;
			} else {
				break;
			}
        }
    } 
}


public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
/**
 * Example taken from "A Term Rewriting Approach to the Automated Termination
 * Analysis of Imperative Programs" (http://www.cs.unm.edu/~spf/papers/2009-02.pdf)
 * and converted to Java.
 */

public class PastaC11 {
    public static void main(String[] args) {
        Random.args = args;
        int x = Random.random();
        int y = Random.random();

        while (true) {
			if (x >= 0) {
				x--;
				y = Random.random();
			} else if (y >= 0) {
				y--;
			} else {
				break;
			}
        }
    } 
}


public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
PastaC11.main([Ljava/lang/String;)V: Graph of 249 nodes with 1 SCC.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 1 SCCs.
----------------------------------------

(6)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: PastaC11.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*java.lang.String: [count]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(7) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 34 IRulesP rules:
f2273_0_main_LT(EOS(STATIC_2273(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), matching1, i126, matching2) -> f2278_0_main_LT(EOS(STATIC_2278(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), -1, i126, -1) :|: TRUE && matching1 = -1 && matching2 = -1
f2273_0_main_LT(EOS(STATIC_2273(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i405, i126, i405) -> f2279_0_main_LT(EOS(STATIC_2279(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i405, i126, i405) :|: TRUE
f2278_0_main_LT(EOS(STATIC_2278(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), matching1, i126, matching2) -> f2281_0_main_Load(EOS(STATIC_2281(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), -1, i126) :|: -1 < 0 && matching1 = -1 && matching2 = -1
f2281_0_main_Load(EOS(STATIC_2281(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), matching1, i126) -> f2287_0_main_LT(EOS(STATIC_2287(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), -1, i126, i126) :|: TRUE && matching1 = -1
f2287_0_main_LT(EOS(STATIC_2287(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), matching1, i408, i408) -> f2295_0_main_LT(EOS(STATIC_2295(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), -1, i408, i408) :|: TRUE && matching1 = -1
f2295_0_main_LT(EOS(STATIC_2295(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), matching1, i408, i408) -> f2302_0_main_Inc(EOS(STATIC_2302(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), -1, i408) :|: i408 >= 0 && matching1 = -1
f2302_0_main_Inc(EOS(STATIC_2302(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), matching1, i408) -> f2304_0_main_JMP(EOS(STATIC_2304(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), -1, i408 + -1) :|: TRUE && matching1 = -1
f2304_0_main_JMP(EOS(STATIC_2304(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), matching1, i411) -> f2436_0_main_Load(EOS(STATIC_2436(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), -1, i411) :|: TRUE && matching1 = -1
f2436_0_main_Load(EOS(STATIC_2436(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), matching1, i411) -> f2263_0_main_Load(EOS(STATIC_2263(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), -1, i411) :|: TRUE && matching1 = -1
f2263_0_main_Load(EOS(STATIC_2263(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i125, i126) -> f2273_0_main_LT(EOS(STATIC_2273(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i125, i126, i125) :|: TRUE
f2279_0_main_LT(EOS(STATIC_2279(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i405, i126, i405) -> f2284_0_main_Inc(EOS(STATIC_2284(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i405) :|: i405 >= 0
f2284_0_main_Inc(EOS(STATIC_2284(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i405) -> f2289_0_main_InvokeMethod(EOS(STATIC_2289(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i405 + -1) :|: TRUE
f2289_0_main_InvokeMethod(EOS(STATIC_2289(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406) -> f2297_0_random_FieldAccess(EOS(STATIC_2297(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406) :|: TRUE
f2297_0_random_FieldAccess(EOS(STATIC_2297(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406) -> f2307_0_random_FieldAccess(EOS(STATIC_2307(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(ARRAY(i4))) :|: TRUE
f2307_0_random_FieldAccess(EOS(STATIC_2307(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(ARRAY(i4))) -> f2456_0_random_ArrayAccess(EOS(STATIC_2456(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(ARRAY(i4))) :|: TRUE
f2456_0_random_ArrayAccess(EOS(STATIC_2456(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(ARRAY(i4))) -> f2459_0_random_ArrayAccess(EOS(STATIC_2459(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(ARRAY(i4))) :|: TRUE
f2459_0_random_ArrayAccess(EOS(STATIC_2459(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(ARRAY(i4))) -> f2469_0_random_Store(EOS(STATIC_2469(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) :|: TRUE
f2469_0_random_Store(EOS(STATIC_2469(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) -> f2472_0_random_FieldAccess(EOS(STATIC_2472(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) :|: TRUE
f2472_0_random_FieldAccess(EOS(STATIC_2472(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) -> f2473_0_random_ConstantStackPush(EOS(STATIC_2473(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) :|: TRUE
f2473_0_random_ConstantStackPush(EOS(STATIC_2473(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) -> f2479_0_random_IntArithmetic(EOS(STATIC_2479(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) :|: TRUE
f2479_0_random_IntArithmetic(EOS(STATIC_2479(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) -> f2488_0_random_FieldAccess(EOS(STATIC_2488(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) :|: TRUE
f2488_0_random_FieldAccess(EOS(STATIC_2488(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) -> f2495_0_random_Load(EOS(STATIC_2495(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) :|: TRUE
f2495_0_random_Load(EOS(STATIC_2495(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) -> f2516_0_random_InvokeMethod(EOS(STATIC_2516(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, o123) :|: TRUE
f2516_0_random_InvokeMethod(EOS(STATIC_2516(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(o126sub)) -> f2518_0_random_InvokeMethod(EOS(STATIC_2518(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(o126sub)) :|: TRUE
f2518_0_random_InvokeMethod(EOS(STATIC_2518(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(o127sub)) -> f2520_0_random_InvokeMethod(EOS(STATIC_2520(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(o127sub)) :|: TRUE
f2520_0_random_InvokeMethod(EOS(STATIC_2520(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(o127sub)) -> f2523_0_length_Load(EOS(STATIC_2523(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(o127sub)) :|: TRUE
f2523_0_length_Load(EOS(STATIC_2523(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(o127sub)) -> f2526_0_length_FieldAccess(EOS(STATIC_2526(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(o127sub)) :|: TRUE
f2526_0_length_FieldAccess(EOS(STATIC_2526(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(java.lang.String(EOC, i474))) -> f2529_0_length_FieldAccess(EOS(STATIC_2529(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(java.lang.String(EOC, i474))) :|: i474 >= 0
f2529_0_length_FieldAccess(EOS(STATIC_2529(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, java.lang.Object(java.lang.String(EOC, i474))) -> f2531_0_length_Return(EOS(STATIC_2531(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, i474) :|: TRUE
f2531_0_length_Return(EOS(STATIC_2531(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, i474) -> f2533_0_random_Return(EOS(STATIC_2533(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, i474) :|: TRUE
f2533_0_random_Return(EOS(STATIC_2533(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, i474) -> f2536_0_main_Store(EOS(STATIC_2536(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, i474) :|: TRUE
f2536_0_main_Store(EOS(STATIC_2536(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, i474) -> f2538_0_main_JMP(EOS(STATIC_2538(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, i474) :|: TRUE
f2538_0_main_JMP(EOS(STATIC_2538(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, i474) -> f2541_0_main_Load(EOS(STATIC_2541(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, i474) :|: TRUE
f2541_0_main_Load(EOS(STATIC_2541(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, i474) -> f2263_0_main_Load(EOS(STATIC_2263(java.lang.Object(ARRAY(i4)))), java.lang.Object(ARRAY(i4)), i406, i474) :|: TRUE
Combined rules. Obtained 2 IRulesP rules:
f2273_0_main_LT(EOS(STATIC_2273(java.lang.Object(ARRAY(i4:0)))), java.lang.Object(ARRAY(i4:0)), -1, i126:0, -1) -> f2273_0_main_LT(EOS(STATIC_2273(java.lang.Object(ARRAY(i4:0)))), java.lang.Object(ARRAY(i4:0)), -1, i126:0 - 1, -1) :|: i126:0 > -1
f2273_0_main_LT(EOS(STATIC_2273(java.lang.Object(ARRAY(i4:0)))), java.lang.Object(ARRAY(i4:0)), i405:0, i126:0, i405:0) -> f2273_0_main_LT(EOS(STATIC_2273(java.lang.Object(ARRAY(i4:0)))), java.lang.Object(ARRAY(i4:0)), i405:0 - 1, i474:0, i405:0 - 1) :|: i474:0 > -1 && i405:0 > -1
Filtered duplicate arguments:
   f2273_0_main_LT(x1, x2, x3, x4, x5) -> f2273_0_main_LT(x1, x2, x4, x5)
Filtered unneeded arguments:
   f2273_0_main_LT(x1, x2, x3, x4) -> f2273_0_main_LT(x3, x4)
Finished conversion. Obtained 2 rules.P rules:
f2273_0_main_LT(i126:0, cons_-1) -> f2273_0_main_LT(i126:0 - 1, -1) :|: i126:0 > -1 && cons_-1 = -1
f2273_0_main_LT(i126:0, i405:0) -> f2273_0_main_LT(i474:0, i405:0 - 1) :|: i474:0 > -1 && i405:0 > -1

----------------------------------------

(8)
Obligation:
Rules:
f2273_0_main_LT(i126:0, cons_-1) -> f2273_0_main_LT(i126:0 - 1, -1) :|: i126:0 > -1 && cons_-1 = -1
f2273_0_main_LT(x, x1) -> f2273_0_main_LT(x2, x1 - 1) :|: x2 > -1 && x1 > -1

----------------------------------------

(9) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(10)
Obligation:
Rules:
f2273_0_main_LT(i126:0, cons_-1) -> f2273_0_main_LT(arith, -1) :|: i126:0 > -1 && cons_-1 = -1 && arith = i126:0 - 1
f2273_0_main_LT(x3, x4) -> f2273_0_main_LT(x5, x6) :|: x5 > -1 && x4 > -1 && x6 = x4 - 1

----------------------------------------

(11) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f2273_0_main_LT(i126:0, cons_-1) -> f2273_0_main_LT(arith, -1) :|: i126:0 > -1 && cons_-1 = -1 && arith = i126:0 - 1
(2) f2273_0_main_LT(x3, x4) -> f2273_0_main_LT(x5, x6) :|: x5 > -1 && x4 > -1 && x6 = x4 - 1

Arcs:
(1) -> (1)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(12)
Complex Obligation (AND)

----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f2273_0_main_LT(x3, x4) -> f2273_0_main_LT(x5, x6) :|: x5 > -1 && x4 > -1 && x6 = x4 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f2273_0_main_LT(x3:0, x4:0) -> f2273_0_main_LT(x5:0, x4:0 - 1) :|: x5:0 > -1 && x4:0 > -1

----------------------------------------

(16) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f2273_0_main_LT(x1, x2) -> f2273_0_main_LT(x2)

----------------------------------------

(17)
Obligation:
Rules:
f2273_0_main_LT(x4:0) -> f2273_0_main_LT(x4:0 - 1) :|: x5:0 > -1 && x4:0 > -1

----------------------------------------

(18) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f2273_0_main_LT(INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(19)
Obligation:
Rules:
f2273_0_main_LT(x4:0) -> f2273_0_main_LT(c) :|: c = x4:0 - 1 && (x5:0 > -1 && x4:0 > -1)

----------------------------------------

(20) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f2273_0_main_LT(x)] = x

The following rules are decreasing:
f2273_0_main_LT(x4:0) -> f2273_0_main_LT(c) :|: c = x4:0 - 1 && (x5:0 > -1 && x4:0 > -1)
The following rules are bounded:
f2273_0_main_LT(x4:0) -> f2273_0_main_LT(c) :|: c = x4:0 - 1 && (x5:0 > -1 && x4:0 > -1)

----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:

Termination digraph:
Nodes:
(1) f2273_0_main_LT(i126:0, cons_-1) -> f2273_0_main_LT(arith, -1) :|: i126:0 > -1 && cons_-1 = -1 && arith = i126:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(23) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(24)
Obligation:
Rules:
f2273_0_main_LT(i126:0:0, cons_-1) -> f2273_0_main_LT(i126:0:0 - 1, -1) :|: i126:0:0 > -1 && cons_-1 = -1

----------------------------------------

(25) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f2273_0_main_LT(INTEGER, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(26)
Obligation:
Rules:
f2273_0_main_LT(i126:0:0, c) -> f2273_0_main_LT(c1, c2) :|: c2 = -1 && (c1 = i126:0:0 - 1 && c = -1) && (i126:0:0 > -1 && cons_-1 = -1)

----------------------------------------

(27) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f2273_0_main_LT(x, x1)] = x

The following rules are decreasing:
f2273_0_main_LT(i126:0:0, c) -> f2273_0_main_LT(c1, c2) :|: c2 = -1 && (c1 = i126:0:0 - 1 && c = -1) && (i126:0:0 > -1 && cons_-1 = -1)
The following rules are bounded:
f2273_0_main_LT(i126:0:0, c) -> f2273_0_main_LT(c1, c2) :|: c2 = -1 && (c1 = i126:0:0 - 1 && c = -1) && (i126:0:0 > -1 && cons_-1 = -1)

----------------------------------------

(28)
YES
