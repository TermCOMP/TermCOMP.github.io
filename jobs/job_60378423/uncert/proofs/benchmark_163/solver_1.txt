NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/tmBKK.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCNonTerm [COMPLETE, 93 ms]
(4) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
package simple.whileTrue;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		WhileTrue.endless(args.length);
	}

}


package simple.whileTrue;

public class WhileTrue {

	public static void endless(int i) {
		while (true) {
			i++;
		}
	}
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
package simple.whileTrue;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		WhileTrue.endless(args.length);
	}

}


package simple.whileTrue;

public class WhileTrue {

	public static void endless(int i) {
		while (true) {
			i++;
		}
	}
}



----------------------------------------

(3) JBCNonTerm (COMPLETE)
Symbolic evaluation of method public static main([Ljava/lang/String;)V never reaches a method end (by explicit return or exception).

As this is the main method, we can conclude non-termination of the input program.
----------------------------------------

(4)
NO
