YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Y1jtZ.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 2512 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) JBCTerminationSCC
        (8) SCCToQDPProof [SOUND, 544 ms]
        (9) QDP
        (10) DependencyGraphProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) JBCTerminationSCC
        (15) SCCToIRSProof [SOUND, 116 ms]
        (16) IRSwT
        (17) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (18) IRSwT
        (19) IRSwTTerminationDigraphProof [EQUIVALENT, 17 ms]
        (20) IRSwT
        (21) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (22) IRSwT
        (23) TempFilterProof [SOUND, 345 ms]
        (24) IRSwT
        (25) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
        (26) IRSwT
        (27) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (28) IRSwT
        (29) TempFilterProof [SOUND, 9 ms]
        (30) IRSwT
        (31) IRSwTToQDPProof [SOUND, 2 ms]
        (32) QDP
        (33) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (34) YES
    (35) JBCTerminationSCC
        (36) SCCToIRSProof [SOUND, 99 ms]
        (37) IRSwT
        (38) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (39) IRSwT
        (40) IRSwTTerminationDigraphProof [EQUIVALENT, 22 ms]
        (41) IRSwT
        (42) TempFilterProof [SOUND, 1 ms]
        (43) IRSwT
        (44) IRSwTToQDPProof [SOUND, 0 ms]
        (45) QDP
        (46) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (47) YES
    (48) JBCTerminationSCC
        (49) SCCToIRSProof [SOUND, 325 ms]
        (50) IRSwT
        (51) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (52) IRSwT
        (53) IRSwTTerminationDigraphProof [EQUIVALENT, 8 ms]
        (54) IRSwT
        (55) IntTRSCompressionProof [EQUIVALENT, 1 ms]
        (56) IRSwT
        (57) TempFilterProof [SOUND, 603 ms]
        (58) IRSwT
        (59) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
        (60) IRSwT
        (61) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (62) IRSwT
        (63) TempFilterProof [SOUND, 22 ms]
        (64) IRSwT
        (65) IRSwTToQDPProof [SOUND, 0 ms]
        (66) QDP
        (67) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
        (68) QDP
        (69) PisEmptyProof [EQUIVALENT, 0 ms]
        (70) YES
    (71) JBCTerminationSCC
        (72) SCCToIRSProof [SOUND, 37 ms]
        (73) IRSwT
        (74) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (75) IRSwT
        (76) IRSwTTerminationDigraphProof [EQUIVALENT, 16 ms]
        (77) IRSwT
        (78) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (79) IRSwT
        (80) TempFilterProof [SOUND, 20 ms]
        (81) IntTRS
        (82) PolynomialOrderProcessor [EQUIVALENT, 8 ms]
        (83) YES
    (84) JBCTerminationSCC
        (85) SCCToIRSProof [SOUND, 317 ms]
        (86) IRSwT
        (87) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (88) IRSwT
        (89) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
        (90) IRSwT
        (91) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (92) IRSwT
        (93) TempFilterProof [SOUND, 2 ms]
        (94) IntTRS
        (95) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (96) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Collection</tt>
 * interface, to minimize the effort required to implement this interface. <p>
 *
 * To implement an unmodifiable collection, the programmer needs only to
 * extend this class and provide implementations for the <tt>iterator</tt> and
 * <tt>size</tt> methods.  (The iterator returned by the <tt>iterator</tt>
 * method must implement <tt>hasNext</tt> and <tt>next</tt>.)<p>
 *
 * To implement a modifiable collection, the programmer must additionally
 * override this class's <tt>add</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by the
 * <tt>iterator</tt> method must additionally implement its <tt>remove</tt>
 * method.<p>
 *
 * The programmer should generally provide a void (no argument) and
 * <tt>Collection</tt> constructor, as per the recommendation in the
 * <tt>Collection</tt> interface specification.<p>
 *
 * The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if
 * the collection being implemented admits a more efficient implementation.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractCollection<E> implements Collection<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractCollection() {
    }

    // Query Operations

    /**
     * Returns an iterator over the elements contained in this collection.
     *
     * @return an iterator over the elements contained in this collection
     */
    public abstract Iterator<E> iterator();

    public abstract int size();

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the elements in the collection,
     * checking each element in turn for equality with the specified element.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean contains(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return true;
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return true;
        }
        return false;
    }

    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     */
    public boolean add(E e) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the collection looking for the
     * specified element.  If it finds the element, it removes the element
     * from the collection using the iterator's remove method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's iterator method does not implement the <tt>remove</tt>
     * method and this collection contains the specified object.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public boolean remove(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext()) {
                if (e.next()==null) {
                    e.remove();
                    return true;
                }
            }
        } else {
            while (e.hasNext()) {
                if (o.equals(e.next())) {
                    e.remove();
                    return true;
                }
            }
        }
        return false;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection,
     * checking each element returned by the iterator in turn to see
     * if it's contained in this collection.  If all elements are so
     * contained <tt>true</tt> is returned, otherwise <tt>false</tt>.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @see #contains(Object)
     */
    public boolean containsAll(Collection<?> c) {
        Iterator<?> e = c.iterator();
        while (e.hasNext())
            if (!contains(e.next()))
                return false;
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection, and adds
     * each object returned by the iterator to this collection, in turn.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> unless <tt>add</tt> is
     * overridden (assuming the specified collection is non-empty).
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     *
     * @see #add(Object)
     */
    public boolean addAll(Collection<? extends E> c) {
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            if (add(e.next()))
                modified = true;
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's so contained, it's removed from
     * this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements in common with the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;
        Iterator<?> e = iterator();
        while (e.hasNext()) {
            if (c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's not so contained, it's removed
     * from this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements not present in the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean retainAll(Collection<?> c) {
        boolean modified = false;
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            if (!c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, removing each
     * element using the <tt>Iterator.remove</tt> operation.  Most
     * implementations will probably choose to override this method for
     * efficiency.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's <tt>iterator</tt> method does not implement the
     * <tt>remove</tt> method and this collection is non-empty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            e.next();
            e.remove();
        }
    }


    //  String conversion

    /**
     * Returns a string representation of this collection.  The string
     * representation consists of a list of the collection's elements in the
     * order they are returned by its iterator, enclosed in square brackets
     * (<tt>"[]"</tt>).  Adjacent elements are separated by the characters
     * <tt>", "</tt> (comma and space).  Elements are converted to strings as
     * by {@link String#valueOf(Object)}.
     *
     * @return a string representation of this collection
     */
    public String toString() {
        Iterator<E> i = iterator();
        if (! i.hasNext())
            return "[]";

        String sb = "";
        sb = sb + "[";
        for (;;) {
            E e = i.next();
            sb = sb + (e == this ? "(this Collection)" : e);
            if (! i.hasNext()) {
                sb = sb + "]";
		return sb;
            }
            sb = sb + ", ";
        }
    }

}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;
import javaUtilEx.Map.Entry;

/**
 * This class provides a skeletal implementation of the <tt>Map</tt>
 * interface, to minimize the effort required to implement this interface.
 *
 * <p>To implement an unmodifiable map, the programmer needs only to extend this
 * class and provide an implementation for the <tt>entrySet</tt> method, which
 * returns a set-view of the map's mappings.  Typically, the returned set
 * will, in turn, be implemented atop <tt>AbstractSet</tt>.  This set should
 * not support the <tt>add</tt> or <tt>remove</tt> methods, and its iterator
 * should not support the <tt>remove</tt> method.
 *
 * <p>To implement a modifiable map, the programmer must additionally override
 * this class's <tt>put</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by
 * <tt>entrySet().iterator()</tt> must additionally implement its
 * <tt>remove</tt> method.
 *
 * <p>The programmer should generally provide a void (no argument) and map
 * constructor, as per the recommendation in the <tt>Map</tt> interface
 * specification.
 *
 * <p>The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if the
 * map being implemented admits a more efficient implementation.
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @param <K> the type of keys maintained by this map
 * @param <V> the type of mapped values
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Map
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractMap<K,V> implements Map<K,V> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractMap() {
    }

    // Query Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>entrySet().size()</tt>.
     */
    public int size() {
        return entrySet().size();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over <tt>entrySet()</tt> searching
     * for an entry with the specified value.  If such an entry is found,
     * <tt>true</tt> is returned.  If the iteration terminates without
     * finding such an entry, <tt>false</tt> is returned.  Note that this
     * implementation requires linear time in the size of the map.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean containsValue(Object value) {
        Iterator<Entry<K,V>> i = entrySet().iterator();
        if (value==null) {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (e.getValue()==null)
                    return true;
            }
        } else {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (value.equals(e.getValue()))
                    return true;
            }
        }
        return false;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over <tt>entrySet()</tt> searching
     * for an entry with the specified key.  If such an entry is found,
     * <tt>true</tt> is returned.  If the iteration terminates without
     * finding such an entry, <tt>false</tt> is returned.  Note that this
     * implementation requires linear time in the size of the map; many
     * implementations will override this method.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean containsKey(Object key) {
        Iterator<Map.Entry<K,V>> i = entrySet().iterator();
        if (key==null) {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (e.getKey()==null)
                    return true;
            }
        } else {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (key.equals(e.getKey()))
                    return true;
            }
        }
        return false;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over <tt>entrySet()</tt> searching
     * for an entry with the specified key.  If such an entry is found,
     * the entry's value is returned.  If the iteration terminates without
     * finding such an entry, <tt>null</tt> is returned.  Note that this
     * implementation requires linear time in the size of the map; many
     * implementations will override this method.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public V get(Object key) {
        Iterator<Entry<K,V>> i = entrySet().iterator();
        if (key==null) {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (e.getKey()==null)
                    return e.getValue();
            }
        } else {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (key.equals(e.getKey()))
                    return e.getValue();
            }
        }
        return null;
    }


    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     */
    public V put(K key, V value) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over <tt>entrySet()</tt> searching for an
     * entry with the specified key.  If such an entry is found, its value is
     * obtained with its <tt>getValue</tt> operation, the entry is removed
     * from the collection (and the backing map) with the iterator's
     * <tt>remove</tt> operation, and the saved value is returned.  If the
     * iteration terminates without finding such an entry, <tt>null</tt> is
     * returned.  Note that this implementation requires linear time in the
     * size of the map; many implementations will override this method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the <tt>entrySet</tt>
     * iterator does not support the <tt>remove</tt> method and this map
     * contains a mapping for the specified key.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public V remove(Object key) {
        Iterator<Entry<K,V>> i = entrySet().iterator();
        Entry<K,V> correctEntry = null;
        if (key==null) {
            while (correctEntry==null && i.hasNext()) {
                Entry<K,V> e = i.next();
                if (e.getKey()==null)
                    correctEntry = e;
            }
        } else {
            while (correctEntry==null && i.hasNext()) {
                Entry<K,V> e = i.next();
                if (key.equals(e.getKey()))
                    correctEntry = e;
            }
        }

        V oldValue = null;
        if (correctEntry !=null) {
            oldValue = correctEntry.getValue();
            i.remove();
        }
        return oldValue;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified map's
     * <tt>entrySet()</tt> collection, and calls this map's <tt>put</tt>
     * operation once for each entry returned by the iteration.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if this map does not support
     * the <tt>put</tt> operation and the specified map is nonempty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     */
    public void putAll(Map<? extends K, ? extends V> m) {
        Iterator it = m.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry e = (Map.Entry) it.next();
            put((K) e.getKey(), (V) e.getValue());
        }
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation calls <tt>entrySet().clear()</tt>.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the <tt>entrySet</tt>
     * does not support the <tt>clear</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        entrySet().clear();
    }


    // Views

    /**
     * Each of these fields are initialized to contain an instance of the
     * appropriate view the first time this view is requested.  The views are
     * stateless, so there's no reason to create more than one of each.
     */
    transient volatile Set<K>        keySet = null;
    transient volatile Collection<V> values = null;

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a set that subclasses {@link AbstractSet}.
     * The subclass's iterator method returns a "wrapper object" over this
     * map's <tt>entrySet()</tt> iterator.  The <tt>size</tt> method
     * delegates to this map's <tt>size</tt> method and the
     * <tt>contains</tt> method delegates to this map's
     * <tt>containsKey</tt> method.
     *
     * <p>The set is created the first time this method is called,
     * and returned in response to all subsequent calls.  No synchronization
     * is performed, so there is a slight chance that multiple calls to this
     * method will not all return the same set.
     */
    public Set<K> keySet() {
        if (keySet == null) {
            keySet = new AbstractSet<K>() {
                public Iterator<K> iterator() {
                    return new Iterator<K>() {
                        private Iterator<Entry<K,V>> i = entrySet().iterator();

                        public boolean hasNext() {
                            return i.hasNext();
                        }

                        public K next() {
                            return i.next().getKey();
                        }

                        public void remove() {
                            i.remove();
                        }
                    };
                }

                public int size() {
                    return AbstractMap.this.size();
                }

                public boolean isEmpty() {
                    return AbstractMap.this.isEmpty();
                }

                public void clear() {
                    AbstractMap.this.clear();
                }

                public boolean contains(Object k) {
                    return AbstractMap.this.containsKey(k);
                }

                public Object[] toArray() {
                    Object[] res = new Object[AbstractMap.this.size()];
                    Iterator<Entry<K,V>> it = entrySet().iterator();
                    int i = 0;
                    while (it.hasNext())
                        res[i++] = it.next().getKey();
                    return res;
                }

                public <T> T[] toArray(T[] a) {
                    a = (T[])java.lang.reflect.Array.newInstance(
                                a.getClass().getComponentType(), AbstractMap.this.size());
                    Object[] res = a;
                    Iterator<Entry<K,V>> it = entrySet().iterator();
                    int i = 0;
                    while (it.hasNext())
                        res[i++] = it.next().getKey();
                    return a;
                }
            };
        }
        return keySet;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a collection that subclasses {@link
     * AbstractCollection}.  The subclass's iterator method returns a
     * "wrapper object" over this map's <tt>entrySet()</tt> iterator.
     * The <tt>size</tt> method delegates to this map's <tt>size</tt>
     * method and the <tt>contains</tt> method delegates to this map's
     * <tt>containsValue</tt> method.
     *
     * <p>The collection is created the first time this method is called, and
     * returned in response to all subsequent calls.  No synchronization is
     * performed, so there is a slight chance that multiple calls to this
     * method will not all return the same collection.
     */
    public Collection<V> values() {
        if (values == null) {
            values = new AbstractCollection<V>() {
                public Iterator<V> iterator() {
                    return new Iterator<V>() {
                        private Iterator<Entry<K,V>> i = entrySet().iterator();

                        public boolean hasNext() {
                            return i.hasNext();
                        }

                        public V next() {
                            return i.next().getValue();
                        }

                        public void remove() {
                            i.remove();
                        }
                    };
                }

                public int size() {
                    return AbstractMap.this.size();
                }

                public boolean isEmpty() {
                    return AbstractMap.this.isEmpty();
                }

                public void clear() {
                    AbstractMap.this.clear();
                }

                public boolean contains(Object v) {
                    return AbstractMap.this.containsValue(v);
                }
            };
        }
        return values;
    }

    public abstract Set<Entry<K,V>> entrySet();


    // Comparison and hashing

    /**
     * Compares the specified object with this map for equality.  Returns
     * <tt>true</tt> if the given object is also a map and the two maps
     * represent the same mappings.  More formally, two maps <tt>m1</tt> and
     * <tt>m2</tt> represent the same mappings if
     * <tt>m1.entrySet().equals(m2.entrySet())</tt>.  This ensures that the
     * <tt>equals</tt> method works properly across different implementations
     * of the <tt>Map</tt> interface.
     *
     * <p>This implementation first checks if the specified object is this map;
     * if so it returns <tt>true</tt>.  Then, it checks if the specified
     * object is a map whose size is identical to the size of this map; if
     * not, it returns <tt>false</tt>.  If so, it iterates over this map's
     * <tt>entrySet</tt> collection, and checks that the specified map
     * contains each mapping that this map contains.  If the specified map
     * fails to contain such a mapping, <tt>false</tt> is returned.  If the
     * iteration completes, <tt>true</tt> is returned.
     *
     * @param o object to be compared for equality with this map
     * @return <tt>true</tt> if the specified object is equal to this map
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;

        if (!(o instanceof Map))
            return false;
        Map<K,V> m = (Map<K,V>) o;
        if (m.size() != size())
            return false;

        try {
            Iterator<Entry<K,V>> i = entrySet().iterator();
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                K key = e.getKey();
                V value = e.getValue();
                if (value == null) {
                    if (!(m.get(key)==null && m.containsKey(key)))
                        return false;
                } else {
                    if (!value.equals(m.get(key)))
                        return false;
                }
            }
        } catch (ClassCastException unused) {
            return false;
        } catch (NullPointerException unused) {
            return false;
        }

        return true;
    }

    /**
     * Returns the hash code value for this map.  The hash code of a map is
     * defined to be the sum of the hash codes of each entry in the map's
     * <tt>entrySet()</tt> view.  This ensures that <tt>m1.equals(m2)</tt>
     * implies that <tt>m1.hashCode()==m2.hashCode()</tt> for any two maps
     * <tt>m1</tt> and <tt>m2</tt>, as required by the general contract of
     * {@link Object#hashCode}.
     *
     * <p>This implementation iterates over <tt>entrySet()</tt>, calling
     * {@link Map.Entry#hashCode hashCode()} on each element (entry) in the
     * set, and adding up the results.
     *
     * @return the hash code value for this map
     * @see Map.Entry#hashCode()
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     */
    public int hashCode() {
        int h = 0;
        Iterator<Entry<K,V>> i = entrySet().iterator();
        while (i.hasNext())
            h += i.next().hashCode();
        return h;
    }

    /**
     * Returns a string representation of this map.  The string representation
     * consists of a list of key-value mappings in the order returned by the
     * map's <tt>entrySet</tt> view's iterator, enclosed in braces
     * (<tt>"{}"</tt>).  Adjacent mappings are separated by the characters
     * <tt>", "</tt> (comma and space).  Each key-value mapping is rendered as
     * the key followed by an equals sign (<tt>"="</tt>) followed by the
     * associated value.  Keys and values are converted to strings as by
     * {@link String#valueOf(Object)}.
     *
     * @return a string representation of this map
     */
    public String toString() {
        Iterator<Entry<K,V>> i = entrySet().iterator();
        if (! i.hasNext())
            return "{}";

        StringBuilder sb = new StringBuilder();
        sb.append('{');
        for (;;) {
            Entry<K,V> e = i.next();
            K key = e.getKey();
            V value = e.getValue();
            sb.append(key   == this ? "(this Map)" : key);
            sb.append('=');
            sb.append(value == this ? "(this Map)" : value);
            if (! i.hasNext())
                return sb.append('}').toString();
            sb.append(", ");
        }
    }

    /**
     * Returns a shallow copy of this <tt>AbstractMap</tt> instance: the keys
     * and values themselves are not cloned.
     *
     * @return a shallow copy of this map
     */
    protected Object clone() throws CloneNotSupportedException {
        AbstractMap<K,V> result = (AbstractMap<K,V>)super.clone();
        result.keySet = null;
        result.values = null;
        return result;
    }

    /**
     * Utility method for SimpleEntry and SimpleImmutableEntry.
     * Test for equality, checking for nulls.
     */
    private static boolean eq(Object o1, Object o2) {
        return o1 == null ? o2 == null : o1.equals(o2);
    }

    // Implementation Note: SimpleEntry and SimpleImmutableEntry
    // are distinct unrelated classes, even though they share
    // some code. Since you can't add or subtract final-ness
    // of a field in a subclass, they can't share representations,
    // and the amount of duplicated code is too small to warrant
    // exposing a common abstract class.


    /**
     * An Entry maintaining a key and a value.  The value may be
     * changed using the <tt>setValue</tt> method.  This class
     * facilitates the process of building custom map
     * implementations. For example, it may be convenient to return
     * arrays of <tt>SimpleEntry</tt> instances in method
     * <tt>Map.entrySet().toArray</tt>.
     *
     * @since 1.6
     */
    public static class SimpleEntry<K,V>
        implements Entry<K,V>, java.io.Serializable
    {
        private static final long serialVersionUID = -8499721149061103585L;

        private final K key;
        private V value;

        /**
         * Creates an entry representing a mapping from the specified
         * key to the specified value.
         *
         * @param key the key represented by this entry
         * @param value the value represented by this entry
         */
        public SimpleEntry(K key, V value) {
            this.key   = key;
            this.value = value;
        }

        /**
         * Creates an entry representing the same mapping as the
         * specified entry.
         *
         * @param entry the entry to copy
         */
        public SimpleEntry(Entry<? extends K, ? extends V> entry) {
            this.key   = entry.getKey();
            this.value = entry.getValue();
        }

        /**
         * Returns the key corresponding to this entry.
         *
         * @return the key corresponding to this entry
         */
        public K getKey() {
            return key;
        }

        /**
         * Returns the value corresponding to this entry.
         *
         * @return the value corresponding to this entry
         */
        public V getValue() {
            return value;
        }

        /**
         * Replaces the value corresponding to this entry with the specified
         * value.
         *
         * @param value new value to be stored in this entry
         * @return the old value corresponding to the entry
         */
        public V setValue(V value) {
            V oldValue = this.value;
            this.value = value;
            return oldValue;
        }

        /**
         * Compares the specified object with this entry for equality.
         * Returns {@code true} if the given object is also a map entry and
         * the two entries represent the same mapping.  More formally, two
         * entries {@code e1} and {@code e2} represent the same mapping
         * if<pre>
         *   (e1.getKey()==null ?
         *    e2.getKey()==null :
         *    e1.getKey().equals(e2.getKey()))
         *   &amp;&amp;
         *   (e1.getValue()==null ?
         *    e2.getValue()==null :
         *    e1.getValue().equals(e2.getValue()))</pre>
         * This ensures that the {@code equals} method works properly across
         * different implementations of the {@code Map.Entry} interface.
         *
         * @param o object to be compared for equality with this map entry
         * @return {@code true} if the specified object is equal to this map
         *         entry
         * @see    #hashCode
         */
        public boolean equals(Object o) {
            if (!(o instanceof Map.Entry))
                return false;
            Map.Entry e = (Map.Entry)o;
            return eq(key, e.getKey()) && eq(value, e.getValue());
        }

        /**
         * Returns the hash code value for this map entry.  The hash code
         * of a map entry {@code e} is defined to be: <pre>
         *   (e.getKey()==null   ? 0 : e.getKey().hashCode()) ^
         *   (e.getValue()==null ? 0 : e.getValue().hashCode())</pre>
         * This ensures that {@code e1.equals(e2)} implies that
         * {@code e1.hashCode()==e2.hashCode()} for any two Entries
         * {@code e1} and {@code e2}, as required by the general
         * contract of {@link Object#hashCode}.
         *
         * @return the hash code value for this map entry
         * @see    #equals
         */
        public int hashCode() {
            return (key   == null ? 0 :   key.hashCode()) ^
                   (value == null ? 0 : value.hashCode());
        }

        /**
         * Returns a String representation of this map entry.  This
         * implementation returns the string representation of this
         * entry's key followed by the equals character ("<tt>=</tt>")
         * followed by the string representation of this entry's value.
         *
         * @return a String representation of this map entry
         */
        public String toString() {
            return key + "=" + value;
        }

    }

    /**
     * An Entry maintaining an immutable key and value.  This class
     * does not support method <tt>setValue</tt>.  This class may be
     * convenient in methods that return thread-safe snapshots of
     * key-value mappings.
     *
     * @since 1.6
     */
    public static class SimpleImmutableEntry<K,V>
        implements Entry<K,V>, java.io.Serializable
    {
        private static final long serialVersionUID = 7138329143949025153L;

        private final K key;
        private final V value;

        /**
         * Creates an entry representing a mapping from the specified
         * key to the specified value.
         *
         * @param key the key represented by this entry
         * @param value the value represented by this entry
         */
        public SimpleImmutableEntry(K key, V value) {
            this.key   = key;
            this.value = value;
        }

        /**
         * Creates an entry representing the same mapping as the
         * specified entry.
         *
         * @param entry the entry to copy
         */
        public SimpleImmutableEntry(Entry<? extends K, ? extends V> entry) {
            this.key   = entry.getKey();
            this.value = entry.getValue();
        }

        /**
         * Returns the key corresponding to this entry.
         *
         * @return the key corresponding to this entry
         */
        public K getKey() {
            return key;
        }

        /**
         * Returns the value corresponding to this entry.
         *
         * @return the value corresponding to this entry
         */
        public V getValue() {
            return value;
        }

        /**
         * Replaces the value corresponding to this entry with the specified
         * value (optional operation).  This implementation simply throws
         * <tt>UnsupportedOperationException</tt>, as this class implements
         * an <i>immutable</i> map entry.
         *
         * @param value new value to be stored in this entry
         * @return (Does not return)
         * @throws UnsupportedOperationException always
         */
        public V setValue(V value) {
            throw new UnsupportedOperationException();
        }

        /**
         * Compares the specified object with this entry for equality.
         * Returns {@code true} if the given object is also a map entry and
         * the two entries represent the same mapping.  More formally, two
         * entries {@code e1} and {@code e2} represent the same mapping
         * if<pre>
         *   (e1.getKey()==null ?
         *    e2.getKey()==null :
         *    e1.getKey().equals(e2.getKey()))
         *   &amp;&amp;
         *   (e1.getValue()==null ?
         *    e2.getValue()==null :
         *    e1.getValue().equals(e2.getValue()))</pre>
         * This ensures that the {@code equals} method works properly across
         * different implementations of the {@code Map.Entry} interface.
         *
         * @param o object to be compared for equality with this map entry
         * @return {@code true} if the specified object is equal to this map
         *         entry
         * @see    #hashCode
         */
        public boolean equals(Object o) {
            if (!(o instanceof Map.Entry))
                return false;
            Map.Entry e = (Map.Entry)o;
            return eq(key, e.getKey()) && eq(value, e.getValue());
        }

        /**
         * Returns the hash code value for this map entry.  The hash code
         * of a map entry {@code e} is defined to be: <pre>
         *   (e.getKey()==null   ? 0 : e.getKey().hashCode()) ^
         *   (e.getValue()==null ? 0 : e.getValue().hashCode())</pre>
         * This ensures that {@code e1.equals(e2)} implies that
         * {@code e1.hashCode()==e2.hashCode()} for any two Entries
         * {@code e1} and {@code e2}, as required by the general
         * contract of {@link Object#hashCode}.
         *
         * @return the hash code value for this map entry
         * @see    #equals
         */
        public int hashCode() {
            return (key   == null ? 0 :   key.hashCode()) ^
                   (value == null ? 0 : value.hashCode());
        }

        /**
         * Returns a String representation of this map entry.  This
         * implementation returns the string representation of this
         * entry's key followed by the equals character ("<tt>=</tt>")
         * followed by the string representation of this entry's value.
         *
         * @return a String representation of this map entry
         */
        public String toString() {
            return key + "=" + value;
        }

    }

}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Set</tt>
 * interface to minimize the effort required to implement this
 * interface. <p>
 *
 * The process of implementing a set by extending this class is identical
 * to that of implementing a Collection by extending AbstractCollection,
 * except that all of the methods and constructors in subclasses of this
 * class must obey the additional constraints imposed by the <tt>Set</tt>
 * interface (for instance, the add method must not permit addition of
 * multiple instances of an object to a set).<p>
 *
 * Note that this class does not override any of the implementations from
 * the <tt>AbstractCollection</tt> class.  It merely adds implementations
 * for <tt>equals</tt> and <tt>hashCode</tt>.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @param <E> the type of elements maintained by this set
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see AbstractCollection
 * @see Set
 * @since 1.2
 */

public abstract class AbstractSet<E> extends AbstractCollection<E> implements Set<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractSet() {
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this set for equality.  Returns
     * <tt>true</tt> if the given object is also a set, the two sets have
     * the same size, and every member of the given set is contained in
     * this set.  This ensures that the <tt>equals</tt> method works
     * properly across different implementations of the <tt>Set</tt>
     * interface.<p>
     *
     * This implementation first checks if the specified object is this
     * set; if so it returns <tt>true</tt>.  Then, it checks if the
     * specified object is a set whose size is identical to the size of
     * this set; if not, it returns false.  If so, it returns
     * <tt>containsAll((Collection) o)</tt>.
     *
     * @param o object to be compared for equality with this set
     * @return <tt>true</tt> if the specified object is equal to this set
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;

        if (!(o instanceof Set))
            return false;
        Collection c = (Collection) o;
        if (c.size() != size())
            return false;
        try {
            return containsAll(c);
        } catch (ClassCastException unused)   {
            return false;
        } catch (NullPointerException unused) {
            return false;
        }
    }

    /**
     * Returns the hash code value for this set.  The hash code of a set is
     * defined to be the sum of the hash codes of the elements in the set,
     * where the hash code of a <tt>null</tt> element is defined to be zero.
     * This ensures that <tt>s1.equals(s2)</tt> implies that
     * <tt>s1.hashCode()==s2.hashCode()</tt> for any two sets <tt>s1</tt>
     * and <tt>s2</tt>, as required by the general contract of
     * {@link Object#hashCode}.
     *
     * <p>This implementation iterates over the set, calling the
     * <tt>hashCode</tt> method on each element in the set, and adding up
     * the results.
     *
     * @return the hash code value for this set
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     */
    public int hashCode() {
        int h = 0;
        Iterator<E> i = iterator();
        while (i.hasNext()) {
            E obj = i.next();
            if (obj != null)
                h += obj.hashCode();
        }
        return h;
    }

    /**
     * Removes from this set all of its elements that are contained in the
     * specified collection (optional operation).  If the specified
     * collection is also a set, this operation effectively modifies this
     * set so that its value is the <i>asymmetric set difference</i> of
     * the two sets.
     *
     * <p>This implementation determines which is the smaller of this set
     * and the specified collection, by invoking the <tt>size</tt>
     * method on each.  If this set has fewer elements, then the
     * implementation iterates over this set, checking each element
     * returned by the iterator in turn to see if it is contained in
     * the specified collection.  If it is so contained, it is removed
     * from this set with the iterator's <tt>remove</tt> method.  If
     * the specified collection has fewer elements, then the
     * implementation iterates over the specified collection, removing
     * from this set each element returned by the iterator, using this
     * set's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method.
     *
     * @param  c collection containing elements to be removed from this set
     * @return <tt>true</tt> if this set changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this set
     * @throws ClassCastException if the class of an element of this set
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this set contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;

        if (size() > c.size()) {
            for (Iterator<?> i = c.iterator(); i.hasNext(); )
                modified |= remove(i.next());
        } else {
            for (Iterator<?> i = iterator(); i.hasNext(); ) {
                if (c.contains(i.next())) {
                    i.remove();
                    modified = true;
                }
            }
        }
        return modified;
    }

}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * The root interface in the <i>collection hierarchy</i>.  A collection
 * represents a group of objects, known as its <i>elements</i>.  Some
 * collections allow duplicate elements and others do not.  Some are ordered
 * and others unordered.  The JDK does not provide any <i>direct</i>
 * implementations of this interface: it provides implementations of more
 * specific subinterfaces like <tt>Set</tt> and <tt>List</tt>.  This interface
 * is typically used to pass collections around and manipulate them where
 * maximum generality is desired.
 *
 * <p><i>Bags</i> or <i>multisets</i> (unordered collections that may contain
 * duplicate elements) should implement this interface directly.
 *
 * <p>All general-purpose <tt>Collection</tt> implementation classes (which
 * typically implement <tt>Collection</tt> indirectly through one of its
 * subinterfaces) should provide two "standard" constructors: a void (no
 * arguments) constructor, which creates an empty collection, and a
 * constructor with a single argument of type <tt>Collection</tt>, which
 * creates a new collection with the same elements as its argument.  In
 * effect, the latter constructor allows the user to copy any collection,
 * producing an equivalent collection of the desired implementation type.
 * There is no way to enforce this convention (as interfaces cannot contain
 * constructors) but all of the general-purpose <tt>Collection</tt>
 * implementations in the Java platform libraries comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the collection on which they operate, are specified to
 * throw <tt>UnsupportedOperationException</tt> if this collection does not
 * support the operation.  If this is the case, these methods may, but are not
 * required to, throw an <tt>UnsupportedOperationException</tt> if the
 * invocation would have no effect on the collection.  For example, invoking
 * the {@link #addAll(Collection)} method on an unmodifiable collection may,
 * but is not required to, throw the exception if the collection to be added
 * is empty.
 *
 * <p>Some collection implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the collection may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>It is up to each collection to determine its own synchronization
 * policy.  In the absence of a stronger guarantee by the
 * implementation, undefined behavior may result from the invocation
 * of any method on a collection that is being mutated by another
 * thread; this includes direct invocations, passing the collection to
 * a method that might perform invocations, and using an existing
 * iterator to examine the collection.
 *
 * <p>Many methods in Collections Framework interfaces are defined in
 * terms of the {@link Object#equals(Object) equals} method.  For example,
 * the specification for the {@link #contains(Object) contains(Object o)}
 * method says: "returns <tt>true</tt> if and only if this collection
 * contains at least one element <tt>e</tt> such that
 * <tt>(o==null ? e==null : o.equals(e))</tt>."  This specification should
 * <i>not</i> be construed to imply that invoking <tt>Collection.contains</tt>
 * with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be
 * invoked for any element <tt>e</tt>.  Implementations are free to implement
 * optimizations whereby the <tt>equals</tt> invocation is avoided, for
 * example, by first comparing the hash codes of the two elements.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see     Set
 * @see     List
 * @see     Map
 * @see     SortedSet
 * @see     SortedMap
 * @see     HashSet
 * @see     TreeSet
 * @see     ArrayList
 * @see     LinkedList
 * @see     Vector
 * @see     Collections
 * @see     Arrays
 * @see     AbstractCollection
 * @since 1.2
 */

public interface Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this collection.  If this collection
     * contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this collection
     */
    int size();

    /**
     * Returns <tt>true</tt> if this collection contains no elements.
     *
     * @return <tt>true</tt> if this collection contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this collection contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this collection
     * contains at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this collection is to be tested
     * @return <tt>true</tt> if this collection contains the specified
     *         element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this collection.  There are no
     * guarantees concerning the order in which the elements are returned
     * (unless this collection is an instance of some class that provides a
     * guarantee).
     *
     * @return an <tt>Iterator</tt> over the elements in this collection
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Ensures that this collection contains the specified element (optional
     * operation).  Returns <tt>true</tt> if this collection changed as a
     * result of the call.  (Returns <tt>false</tt> if this collection does
     * not permit duplicates and already contains the specified element.)<p>
     *
     * Collections that support this operation may place limitations on what
     * elements may be added to this collection.  In particular, some
     * collections will refuse to add <tt>null</tt> elements, and others will
     * impose restrictions on the type of elements that may be added.
     * Collection classes should clearly specify in their documentation any
     * restrictions on what elements may be added.<p>
     *
     * If a collection refuses to add a particular element for any reason
     * other than that it already contains the element, it <i>must</i> throw
     * an exception (rather than returning <tt>false</tt>).  This preserves
     * the invariant that a collection always contains the specified element
     * after this call returns.
     *
     * @param e element whose presence in this collection is to be ensured
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this collection
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements
     * @throws IllegalArgumentException if some property of the element
     *         prevents it from being added to this collection
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to insertion restrictions
     */
    boolean add(E e);

    /**
     * Removes a single instance of the specified element from this
     * collection, if it is present (optional operation).  More formally,
     * removes an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this collection contains one or more such elements.  Returns
     * <tt>true</tt> if this collection contained the specified element (or
     * equivalently, if this collection changed as a result of the call).
     *
     * @param o element to be removed from this collection, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this collection
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this collection contains all of the elements
     * in the specified collection.
     *
     * @param  c collection to be checked for containment in this collection
     * @return <tt>true</tt> if this collection contains all of the elements
     *         in the specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         collection (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this collection
     * (optional operation).  The behavior of this operation is undefined if
     * the specified collection is modified while the operation is in progress.
     * (This implies that the behavior of this call is undefined if the
     * specified collection is this collection, and this collection is
     * nonempty.)
     *
     * @param c collection containing elements to be added to this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this collection
     * @throws NullPointerException if the specified collection contains a
     *         null element and this collection does not permit null elements,
     *         or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this
     *         collection
     * @throws IllegalStateException if not all the elements can be added at
     *         this time due to insertion restrictions
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Removes all of this collection's elements that are also contained in the
     * specified collection (optional operation).  After this call returns,
     * this collection will contain no elements in common with the specified
     * collection.
     *
     * @param c collection containing elements to be removed from this collection
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> method
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not support
     *         null elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this collection that are contained in the
     * specified collection (optional operation).  In other words, removes from
     * this collection all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this collection (optional operation).
     * The collection will be empty after this method returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this collection
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this collection for equality. <p>
     *
     * While the <tt>Collection</tt> interface adds no stipulations to the
     * general contract for the <tt>Object.equals</tt>, programmers who
     * implement the <tt>Collection</tt> interface "directly" (in other words,
     * create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt>
     * or a <tt>List</tt>) must exercise care if they choose to override the
     * <tt>Object.equals</tt>.  It is not necessary to do so, and the simplest
     * course of action is to rely on <tt>Object</tt>'s implementation, but
     * the implementor may wish to implement a "value comparison" in place of
     * the default "reference comparison."  (The <tt>List</tt> and
     * <tt>Set</tt> interfaces mandate such value comparisons.)<p>
     *
     * The general contract for the <tt>Object.equals</tt> method states that
     * equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and
     * only if <tt>b.equals(a)</tt>).  The contracts for <tt>List.equals</tt>
     * and <tt>Set.equals</tt> state that lists are only equal to other lists,
     * and sets to other sets.  Thus, a custom <tt>equals</tt> method for a
     * collection class that implements neither the <tt>List</tt> nor
     * <tt>Set</tt> interface must return <tt>false</tt> when this collection
     * is compared to any list or set.  (By the same logic, it is not possible
     * to write a class that correctly implements both the <tt>Set</tt> and
     * <tt>List</tt> interfaces.)
     *
     * @param o object to be compared for equality with this collection
     * @return <tt>true</tt> if the specified object is equal to this
     * collection
     *
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     * @see List#equals(Object)
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this collection.  While the
     * <tt>Collection</tt> interface adds no stipulations to the general
     * contract for the <tt>Object.hashCode</tt> method, programmers should
     * take note that any class that overrides the <tt>Object.equals</tt>
     * method must also override the <tt>Object.hashCode</tt> method in order
     * to satisfy the general contract for the <tt>Object.hashCode</tt>method.
     * In particular, <tt>c1.equals(c2)</tt> implies that
     * <tt>c1.hashCode()==c2.hashCode()</tt>.
     *
     * @return the hash code value for this collection
     *
     * @see Object#hashCode()
     * @see Object#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This exception may be thrown by methods that have detected concurrent
 * modification of an object when such modification is not permissible.
 * <p>
 * For example, it is not generally permissible for one thread to modify a Collection
 * while another thread is iterating over it.  In general, the results of the
 * iteration are undefined under these circumstances.  Some Iterator
 * implementations (including those of all the general purpose collection implementations
 * provided by the JRE) may choose to throw this exception if this behavior is
 * detected.  Iterators that do this are known as <i>fail-fast</i> iterators,
 * as they fail quickly and cleanly, rather that risking arbitrary,
 * non-deterministic behavior at an undetermined time in the future.
 * <p>
 * Note that this exception does not always indicate that an object has
 * been concurrently modified by a <i>different</i> thread.  If a single
 * thread issues a sequence of method invocations that violates the
 * contract of an object, the object may throw this exception.  For
 * example, if a thread modifies a collection directly while it is
 * iterating over the collection with a fail-fast iterator, the iterator
 * will throw this exception.
 *
 * <p>Note that fail-fast behavior cannot be guaranteed as it is, generally
 * speaking, impossible to make any hard guarantees in the presence of
 * unsynchronized concurrent modification.  Fail-fast operations
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i><tt>ConcurrentModificationException</tt>
 * should be used only to detect bugs.</i>
 *
 * @author  Josh Bloch
 * @see     Collection
 * @see     Iterator
 * @see     ListIterator
 * @see     Vector
 * @see     LinkedList
 * @see     HashSet
 * @see     Hashtable
 * @see     TreeMap
 * @see     AbstractList
 * @since   1.2
 */
public class ConcurrentModificationException extends RuntimeException {
    /**
     * Constructs a ConcurrentModificationException with no
     * detail message.
     */
    public ConcurrentModificationException() {
    }

    /**
     * Constructs a <tt>ConcurrentModificationException</tt> with the
     * specified detail message.
     *
     * @param message the detail message pertaining to this exception.
     */
    public ConcurrentModificationException(String message) {
        super(message);
    }
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Hash table based implementation of the <tt>Map</tt> interface.  This
 * implementation provides all of the optional map operations, and permits
 * <tt>null</tt> values and the <tt>null</tt> key.  (The <tt>HashMap</tt>
 * class is roughly equivalent to <tt>Hashtable</tt>, except that it is
 * unsynchronized and permits nulls.)  This class makes no guarantees as to
 * the order of the map; in particular, it does not guarantee that the order
 * will remain constant over time.
 *
 * <p>This implementation provides constant-time performance for the basic
 * operations (<tt>get</tt> and <tt>put</tt>), assuming the hash function
 * disperses the elements properly among the buckets.  Iteration over
 * collection views requires time proportional to the "capacity" of the
 * <tt>HashMap</tt> instance (the number of buckets) plus its size (the number
 * of key-value mappings).  Thus, it's very important not to set the initial
 * capacity too high (or the load factor too low) if iteration performance is
 * important.
 *
 * <p>An instance of <tt>HashMap</tt> has two parameters that affect its
 * performance: <i>initial capacity</i> and <i>load factor</i>.  The
 * <i>capacity</i> is the number of buckets in the hash table, and the initial
 * capacity is simply the capacity at the time the hash table is created.  The
 * <i>load factor</i> is a measure of how full the hash table is allowed to
 * get before its capacity is automatically increased.  When the number of
 * entries in the hash table exceeds the product of the load factor and the
 * current capacity, the hash table is <i>rehashed</i> (that is, internal data
 * structures are rebuilt) so that the hash table has approximately twice the
 * number of buckets.
 *
 * <p>As a general rule, the default load factor (.75) offers a good tradeoff
 * between time and space costs.  Higher values decrease the space overhead
 * but increase the lookup cost (reflected in most of the operations of the
 * <tt>HashMap</tt> class, including <tt>get</tt> and <tt>put</tt>).  The
 * expected number of entries in the map and its load factor should be taken
 * into account when setting its initial capacity, so as to minimize the
 * number of rehash operations.  If the initial capacity is greater
 * than the maximum number of entries divided by the load factor, no
 * rehash operations will ever occur.
 *
 * <p>If many mappings are to be stored in a <tt>HashMap</tt> instance,
 * creating it with a sufficiently large capacity will allow the mappings to
 * be stored more efficiently than letting it perform automatic rehashing as
 * needed to grow the table.
 *
 * <p><strong>Note that this implementation is not synchronized.</strong>
 * If multiple threads access a hash map concurrently, and at least one of
 * the threads modifies the map structurally, it <i>must</i> be
 * synchronized externally.  (A structural modification is any operation
 * that adds or deletes one or more mappings; merely changing the value
 * associated with a key that an instance already contains is not a
 * structural modification.)  This is typically accomplished by
 * synchronizing on some object that naturally encapsulates the map.
 *
 * If no such object exists, the map should be "wrapped" using the
 * {@link Collections#synchronizedMap Collections.synchronizedMap}
 * method.  This is best done at creation time, to prevent accidental
 * unsynchronized access to the map:<pre>
 *   Map m = Collections.synchronizedMap(new HashMap(...));</pre>
 *
 * <p>The iterators returned by all of this class's "collection view methods"
 * are <i>fail-fast</i>: if the map is structurally modified at any time after
 * the iterator is created, in any way except through the iterator's own
 * <tt>remove</tt> method, the iterator will throw a
 * {@link ConcurrentModificationException}.  Thus, in the face of concurrent
 * modification, the iterator fails quickly and cleanly, rather than risking
 * arbitrary, non-deterministic behavior at an undetermined time in the
 * future.
 *
 * <p>Note that the fail-fast behavior of an iterator cannot be guaranteed
 * as it is, generally speaking, impossible to make any hard guarantees in the
 * presence of unsynchronized concurrent modification.  Fail-fast iterators
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i>the fail-fast behavior of iterators
 * should be used only to detect bugs.</i>
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @param <K> the type of keys maintained by this map
 * @param <V> the type of mapped values
 *
 * @author  Doug Lea
 * @author  Josh Bloch
 * @author  Arthur van Hoff
 * @author  Neal Gafter
 * @see     Object#hashCode()
 * @see     Collection
 * @see     Map
 * @see     TreeMap
 * @see     Hashtable
 * @since   1.2
 */

public class HashMap<K,V>
    extends AbstractMap<K,V>
    implements Map<K,V>, Cloneable
{

    /**
     * The default initial capacity - MUST be a power of two.
     */
    static final int DEFAULT_INITIAL_CAPACITY = 16;

    /**
     * The maximum capacity, used if a higher value is implicitly specified
     * by either of the constructors with arguments.
     * MUST be a power of two <= 1<<30.
     */
    static final int MAXIMUM_CAPACITY = 1 << 30;

    /**
     * The load factor used when none specified in constructor.
     */
    static final float DEFAULT_LOAD_FACTOR = 0.75f;

    /**
     * The table, resized as necessary. Length MUST Always be a power of two.
     */
    transient Entry[] table;

    /**
     * The number of key-value mappings contained in this map.
     */
    transient int size;

    /**
     * The next size value at which to resize (capacity * load factor).
     * @serial
     */
    int threshold;

    /**
     * The load factor for the hash table.
     *
     * @serial
     */
    final float loadFactor;

    /**
     * The number of times this HashMap has been structurally modified
     * Structural modifications are those that change the number of mappings in
     * the HashMap or otherwise modify its internal structure (e.g.,
     * rehash).  This field is used to make iterators on Collection-views of
     * the HashMap fail-fast.  (See ConcurrentModificationException).
     */
    transient volatile int modCount;

    /**
     * Constructs an empty <tt>HashMap</tt> with the specified initial
     * capacity and load factor.
     *
     * @param  initialCapacity the initial capacity
     * @param  loadFactor      the load factor
     * @throws IllegalArgumentException if the initial capacity is negative
     *         or the load factor is nonpositive
     */
    public HashMap(int initialCapacity, float loadFactor) {
        if (initialCapacity < 0)
            throw new IllegalArgumentException("Illegal initial capacity: " +
                                               initialCapacity);
        if (initialCapacity > MAXIMUM_CAPACITY)
            initialCapacity = MAXIMUM_CAPACITY;
        if (loadFactor <= 0 || Float.isNaN(loadFactor))
            throw new IllegalArgumentException("Illegal load factor: " +
                                               loadFactor);

        // Find a power of 2 >= initialCapacity
        int capacity = 1;
        while (capacity < initialCapacity)
            capacity <<= 1;

        this.loadFactor = loadFactor;
        threshold = (int)(capacity * loadFactor);
        table = new Entry[capacity];
        init();
    }

    /**
     * Constructs an empty <tt>HashMap</tt> with the specified initial
     * capacity and the default load factor (0.75).
     *
     * @param  initialCapacity the initial capacity.
     * @throws IllegalArgumentException if the initial capacity is negative.
     */
    public HashMap(int initialCapacity) {
        this(initialCapacity, DEFAULT_LOAD_FACTOR);
    }

    /**
     * Constructs an empty <tt>HashMap</tt> with the default initial capacity
     * (16) and the default load factor (0.75).
     */
    public HashMap() {
        this.loadFactor = DEFAULT_LOAD_FACTOR;
        threshold = (int)(DEFAULT_INITIAL_CAPACITY * DEFAULT_LOAD_FACTOR);
        table = new Entry[DEFAULT_INITIAL_CAPACITY];
        init();
    }

    /**
     * Constructs a new <tt>HashMap</tt> with the same mappings as the
     * specified <tt>Map</tt>.  The <tt>HashMap</tt> is created with
     * default load factor (0.75) and an initial capacity sufficient to
     * hold the mappings in the specified <tt>Map</tt>.
     *
     * @param   m the map whose mappings are to be placed in this map
     * @throws  NullPointerException if the specified map is null
     */
    public HashMap(Map<? extends K, ? extends V> m) {
        this(Math.max((int) (m.size() / DEFAULT_LOAD_FACTOR) + 1,
                      DEFAULT_INITIAL_CAPACITY), DEFAULT_LOAD_FACTOR);
        putAllForCreate(m);
    }

    // internal utilities

    /**
     * Initialization hook for subclasses. This method is called
     * in all constructors and pseudo-constructors (clone, readObject)
     * after HashMap has been initialized but before any entries have
     * been inserted.  (In the absence of this method, readObject would
     * require explicit knowledge of subclasses.)
     */
    void init() {
    }

    /**
     * Applies a supplemental hash function to a given hashCode, which
     * defends against poor quality hash functions.  This is critical
     * because HashMap uses power-of-two length hash tables, that
     * otherwise encounter collisions for hashCodes that do not differ
     * in lower bits. Note: Null keys always map to hash 0, thus index 0.
     */
    static int hash(int h) {
        // This function ensures that hashCodes that differ only by
        // constant multiples at each bit position have a bounded
        // number of collisions (approximately 8 at default load factor).
        h ^= (h >>> 20) ^ (h >>> 12);
        return h ^ (h >>> 7) ^ (h >>> 4);
    }

    /**
     * Returns index for hash code h.
     */
    static int indexFor(int h, int length) {
        return h & (length-1);
    }

    /**
     * Returns the number of key-value mappings in this map.
     *
     * @return the number of key-value mappings in this map
     */
    public int size() {
        return size;
    }

    /**
     * Returns <tt>true</tt> if this map contains no key-value mappings.
     *
     * @return <tt>true</tt> if this map contains no key-value mappings
     */
    public boolean isEmpty() {
        return size == 0;
    }

    /**
     * Returns the value to which the specified key is mapped,
     * or {@code null} if this map contains no mapping for the key.
     *
     * <p>More formally, if this map contains a mapping from a key
     * {@code k} to a value {@code v} such that {@code (key==null ? k==null :
     * key.equals(k))}, then this method returns {@code v}; otherwise
     * it returns {@code null}.  (There can be at most one such mapping.)
     *
     * <p>A return value of {@code null} does not <i>necessarily</i>
     * indicate that the map contains no mapping for the key; it's also
     * possible that the map explicitly maps the key to {@code null}.
     * The {@link #containsKey containsKey} operation may be used to
     * distinguish these two cases.
     *
     * @see #put(Object, Object)
     */
    public V get(Object key) {
        if (key == null)
            return getForNullKey();
        int hash = hash(key.hashCode());
        for (Entry<K,V> e = table[indexFor(hash, table.length)];
             e != null;
             e = e.next) {
            Object k;
            if (e.hash == hash && ((k = e.key) == key || key.equals(k)))
                return e.value;
        }
        return null;
    }

    /**
     * Offloaded version of get() to look up null keys.  Null keys map
     * to index 0.  This null case is split out into separate methods
     * for the sake of performance in the two most commonly used
     * operations (get and put), but incorporated with conditionals in
     * others.
     */
    private V getForNullKey() {
        for (Entry<K,V> e = table[0]; e != null; e = e.next) {
            if (e.key == null)
                return e.value;
        }
        return null;
    }

    /**
     * Returns <tt>true</tt> if this map contains a mapping for the
     * specified key.
     *
     * @param   key   The key whose presence in this map is to be tested
     * @return <tt>true</tt> if this map contains a mapping for the specified
     * key.
     */
    public boolean containsKey(Object key) {
        return getEntry(key) != null;
    }

    /**
     * Returns the entry associated with the specified key in the
     * HashMap.  Returns null if the HashMap contains no mapping
     * for the key.
     */
    final Entry<K,V> getEntry(Object key) {
        int hash = (key == null) ? 0 : hash(key.hashCode());
        for (Entry<K,V> e = table[indexFor(hash, table.length)];
             e != null;
             e = e.next) {
            Object k;
            if (e.hash == hash &&
                ((k = e.key) == key || (key != null && key.equals(k))))
                return e;
        }
        return null;
    }


    /**
     * Associates the specified value with the specified key in this map.
     * If the map previously contained a mapping for the key, the old
     * value is replaced.
     *
     * @param key key with which the specified value is to be associated
     * @param value value to be associated with the specified key
     * @return the previous value associated with <tt>key</tt>, or
     *         <tt>null</tt> if there was no mapping for <tt>key</tt>.
     *         (A <tt>null</tt> return can also indicate that the map
     *         previously associated <tt>null</tt> with <tt>key</tt>.)
     */
    public V put(K key, V value) {
        if (key == null)
            return putForNullKey(value);
        int hash = hash(key.hashCode());
        int i = indexFor(hash, table.length);
        for (Entry<K,V> e = table[i]; e != null; e = e.next) {
            Object k;
            if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {
                V oldValue = e.value;
                e.value = value;
                e.recordAccess(this);
                return oldValue;
            }
        }

        modCount++;
        addEntry(hash, key, value, i);
        return null;
    }

    /**
     * Offloaded version of put for null keys
     */
    private V putForNullKey(V value) {
        for (Entry<K,V> e = table[0]; e != null; e = e.next) {
            if (e.key == null) {
                V oldValue = e.value;
                e.value = value;
                e.recordAccess(this);
                return oldValue;
            }
        }
        modCount++;
        addEntry(0, null, value, 0);
        return null;
    }

    /**
     * This method is used instead of put by constructors and
     * pseudoconstructors (clone, readObject).  It does not resize the table,
     * check for comodification, etc.  It calls createEntry rather than
     * addEntry.
     */
    private void putForCreate(K key, V value) {
        int hash = (key == null) ? 0 : hash(key.hashCode());
        int i = indexFor(hash, table.length);

        /**
         * Look for preexisting entry for key.  This will never happen for
         * clone or deserialize.  It will only happen for construction if the
         * input Map is a sorted map whose ordering is inconsistent w/ equals.
         */
        for (Entry<K,V> e = table[i]; e != null; e = e.next) {
            Object k;
            if (e.hash == hash &&
                ((k = e.key) == key || (key != null && key.equals(k)))) {
                e.value = value;
                return;
            }
        }

        createEntry(hash, key, value, i);
    }

    private void putAllForCreate(Map<? extends K, ? extends V> m) {
        for (Iterator<? extends Map.Entry<? extends K, ? extends V>> i = m.entrySet().iterator(); i.hasNext(); ) {
            Map.Entry<? extends K, ? extends V> e = i.next();
            putForCreate(e.getKey(), e.getValue());
        }
    }

    /**
     * Rehashes the contents of this map into a new array with a
     * larger capacity.  This method is called automatically when the
     * number of keys in this map reaches its threshold.
     *
     * If current capacity is MAXIMUM_CAPACITY, this method does not
     * resize the map, but sets threshold to Integer.MAX_VALUE.
     * This has the effect of preventing future calls.
     *
     * @param newCapacity the new capacity, MUST be a power of two;
     *        must be greater than current capacity unless current
     *        capacity is MAXIMUM_CAPACITY (in which case value
     *        is irrelevant).
     */
    void resize(int newCapacity) {
        Entry[] oldTable = table;
        int oldCapacity = oldTable.length;
        if (oldCapacity == MAXIMUM_CAPACITY) {
            threshold = Integer.MAX_VALUE;
            return;
        }

        Entry[] newTable = new Entry[newCapacity];
        transfer(newTable);
        table = newTable;
        threshold = (int)(newCapacity * loadFactor);
    }

    /**
     * Transfers all entries from current table to newTable.
     */
    void transfer(Entry[] newTable) {
        Entry[] src = table;
        int newCapacity = newTable.length;
        for (int j = 0; j < src.length; j++) {
            Entry<K,V> e = src[j];
            if (e != null) {
                src[j] = null;
                do {
                    Entry<K,V> next = e.next;
                    int i = indexFor(e.hash, newCapacity);
                    e.next = newTable[i];
                    newTable[i] = e;
                    e = next;
                } while (e != null);
            }
        }
    }

    /**
     * Copies all of the mappings from the specified map to this map.
     * These mappings will replace any mappings that this map had for
     * any of the keys currently in the specified map.
     *
     * @param m mappings to be stored in this map
     * @throws NullPointerException if the specified map is null
     */
    public void putAll(Map<? extends K, ? extends V> m) {
        int numKeysToBeAdded = m.size();
        if (numKeysToBeAdded == 0)
            return;

        /*
         * Expand the map if the map if the number of mappings to be added
         * is greater than or equal to threshold.  This is conservative; the
         * obvious condition is (m.size() + size) >= threshold, but this
         * condition could result in a map with twice the appropriate capacity,
         * if the keys to be added overlap with the keys already in this map.
         * By using the conservative calculation, we subject ourself
         * to at most one extra resize.
         */
        if (numKeysToBeAdded > threshold) {
            int targetCapacity = (int)(numKeysToBeAdded / loadFactor + 1);
            if (targetCapacity > MAXIMUM_CAPACITY)
                targetCapacity = MAXIMUM_CAPACITY;
            int newCapacity = table.length;
            while (newCapacity < targetCapacity)
                newCapacity <<= 1;
            if (newCapacity > table.length)
                resize(newCapacity);
        }

        for (Iterator<? extends Map.Entry<? extends K, ? extends V>> i = m.entrySet().iterator(); i.hasNext(); ) {
            Map.Entry<? extends K, ? extends V> e = i.next();
            put(e.getKey(), e.getValue());
        }
    }

    /**
     * Removes the mapping for the specified key from this map if present.
     *
     * @param  key key whose mapping is to be removed from the map
     * @return the previous value associated with <tt>key</tt>, or
     *         <tt>null</tt> if there was no mapping for <tt>key</tt>.
     *         (A <tt>null</tt> return can also indicate that the map
     *         previously associated <tt>null</tt> with <tt>key</tt>.)
     */
    public V remove(Object key) {
        Entry<K,V> e = removeEntryForKey(key);
        return (e == null ? null : e.value);
    }

    /**
     * Removes and returns the entry associated with the specified key
     * in the HashMap.  Returns null if the HashMap contains no mapping
     * for this key.
     */
    final Entry<K,V> removeEntryForKey(Object key) {
        int hash = (key == null) ? 0 : hash(key.hashCode());
        int i = indexFor(hash, table.length);
        Entry<K,V> prev = table[i];
        Entry<K,V> e = prev;

        while (e != null) {
            Entry<K,V> next = e.next;
            Object k;
            if (e.hash == hash &&
                ((k = e.key) == key || (key != null && key.equals(k)))) {
                modCount++;
                size--;
                if (prev == e)
                    table[i] = next;
                else
                    prev.next = next;
                e.recordRemoval(this);
                return e;
            }
            prev = e;
            e = next;
        }

        return e;
    }

    /**
     * Special version of remove for EntrySet.
     */
    final Entry<K,V> removeMapping(Object o) {
        if (!(o instanceof Map.Entry))
            return null;

        Map.Entry<K,V> entry = (Map.Entry<K,V>) o;
        Object key = entry.getKey();
        int hash = (key == null) ? 0 : hash(key.hashCode());
        int i = indexFor(hash, table.length);
        Entry<K,V> prev = table[i];
        Entry<K,V> e = prev;

        while (e != null) {
            Entry<K,V> next = e.next;
            if (e.hash == hash && e.equals(entry)) {
                modCount++;
                size--;
                if (prev == e)
                    table[i] = next;
                else
                    prev.next = next;
                e.recordRemoval(this);
                return e;
            }
            prev = e;
            e = next;
        }

        return e;
    }

    /**
     * Removes all of the mappings from this map.
     * The map will be empty after this call returns.
     */
    public void clear() {
        modCount++;
        Entry[] tab = table;
        for (int i = 0; i < tab.length; i++)
            tab[i] = null;
        size = 0;
    }

    /**
     * Returns <tt>true</tt> if this map maps one or more keys to the
     * specified value.
     *
     * @param value value whose presence in this map is to be tested
     * @return <tt>true</tt> if this map maps one or more keys to the
     *         specified value
     */
    public boolean containsValue(Object value) {
        if (value == null)
            return containsNullValue();

        Entry[] tab = table;
        for (int i = 0; i < tab.length ; i++)
            for (Entry e = tab[i] ; e != null ; e = e.next)
                if (value.equals(e.value))
                    return true;
        return false;
    }

    /**
     * Special-case code for containsValue with null argument
     */
    private boolean containsNullValue() {
        Entry[] tab = table;
        for (int i = 0; i < tab.length ; i++)
            for (Entry e = tab[i] ; e != null ; e = e.next)
                if (e.value == null)
                    return true;
        return false;
    }

    /**
     * Returns a shallow copy of this <tt>HashMap</tt> instance: the keys and
     * values themselves are not cloned.
     *
     * @return a shallow copy of this map
     */
    public Object clone() {
        HashMap<K,V> result = null;
        try {
            result = (HashMap<K,V>)super.clone();
        } catch (CloneNotSupportedException e) {
            // assert false;
        }
        result.table = new Entry[table.length];
        result.entrySet = null;
        result.modCount = 0;
        result.size = 0;
        result.init();
        result.putAllForCreate(this);

        return result;
    }

    static class Entry<K,V> implements Map.Entry<K,V> {
        final K key;
        V value;
        Entry<K,V> next;
        final int hash;

        /**
         * Creates new entry.
         */
        Entry(int h, K k, V v, Entry<K,V> n) {
            value = v;
            next = n;
            key = k;
            hash = h;
        }

        public final K getKey() {
            return key;
        }

        public final V getValue() {
            return value;
        }

        public final V setValue(V newValue) {
            V oldValue = value;
            value = newValue;
            return oldValue;
        }

        public final boolean equals(Object o) {
            if (!(o instanceof Map.Entry))
                return false;
            Map.Entry e = (Map.Entry)o;
            Object k1 = getKey();
            Object k2 = e.getKey();
            if (k1 == k2 || (k1 != null && k1.equals(k2))) {
                Object v1 = getValue();
                Object v2 = e.getValue();
                if (v1 == v2 || (v1 != null && v1.equals(v2)))
                    return true;
            }
            return false;
        }

        public final int hashCode() {
            return (key==null   ? 0 : key.hashCode()) ^
                   (value==null ? 0 : value.hashCode());
        }

        public final String toString() {
            return getKey() + "=" + getValue();
        }

        /**
         * This method is invoked whenever the value in an entry is
         * overwritten by an invocation of put(k,v) for a key k that's already
         * in the HashMap.
         */
        void recordAccess(HashMap<K,V> m) {
        }

        /**
         * This method is invoked whenever the entry is
         * removed from the table.
         */
        void recordRemoval(HashMap<K,V> m) {
        }
    }

    /**
     * Adds a new entry with the specified key, value and hash code to
     * the specified bucket.  It is the responsibility of this
     * method to resize the table if appropriate.
     *
     * Subclass overrides this to alter the behavior of put method.
     */
    void addEntry(int hash, K key, V value, int bucketIndex) {
        Entry<K,V> e = table[bucketIndex];
        table[bucketIndex] = new Entry<K,V>(hash, key, value, e);
        if (size++ >= threshold)
            resize(2 * table.length);
    }

    /**
     * Like addEntry except that this version is used when creating entries
     * as part of Map construction or "pseudo-construction" (cloning,
     * deserialization).  This version needn't worry about resizing the table.
     *
     * Subclass overrides this to alter the behavior of HashMap(Map),
     * clone, and readObject.
     */
    void createEntry(int hash, K key, V value, int bucketIndex) {
        Entry<K,V> e = table[bucketIndex];
        table[bucketIndex] = new Entry<K,V>(hash, key, value, e);
        size++;
    }

    private abstract class HashIterator<E> implements Iterator<E> {
        Entry<K,V> next;        // next entry to return
        int expectedModCount;   // For fast-fail
        int index;              // current slot
        Entry<K,V> current;     // current entry

        HashIterator() {
            expectedModCount = modCount;
            if (size > 0) { // advance to first entry
                Entry[] t = table;
                while (index < t.length && (next = t[index++]) == null)
                    ;
            }
        }

        public final boolean hasNext() {
            return next != null;
        }

        final Entry<K,V> nextEntry() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
            Entry<K,V> e = next;
            if (e == null)
                throw new NoSuchElementException();

            if ((next = e.next) == null) {
                Entry[] t = table;
                while (index < t.length && (next = t[index++]) == null)
                    ;
            }
            current = e;
            return e;
        }

        public void remove() {
            if (current == null)
                throw new IllegalStateException();
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
            Object k = current.key;
            current = null;
            HashMap.this.removeEntryForKey(k);
            expectedModCount = modCount;
        }

    }

    private final class ValueIterator extends HashIterator<V> {
        public V next() {
            return nextEntry().value;
        }
    }

    private final class KeyIterator extends HashIterator<K> {
        public K next() {
            return nextEntry().getKey();
        }
    }

    private final class EntryIterator extends HashIterator<Map.Entry<K,V>> {
        public Map.Entry<K,V> next() {
            return nextEntry();
        }
    }

    // Subclass overrides these to alter behavior of views' iterator() method
    Iterator<K> newKeyIterator()   {
        return new KeyIterator();
    }
    Iterator<V> newValueIterator()   {
        return new ValueIterator();
    }
    Iterator<Map.Entry<K,V>> newEntryIterator()   {
        return new EntryIterator();
    }


    // Views

    private transient Set<Map.Entry<K,V>> entrySet = null;

    /**
     * Returns a {@link Set} view of the keys contained in this map.
     * The set is backed by the map, so changes to the map are
     * reflected in the set, and vice-versa.  If the map is modified
     * while an iteration over the set is in progress (except through
     * the iterator's own <tt>remove</tt> operation), the results of
     * the iteration are undefined.  The set supports element removal,
     * which removes the corresponding mapping from the map, via the
     * <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,
     * <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>
     * operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>
     * operations.
     */
    public Set<K> keySet() {
        Set<K> ks = keySet;
        return (ks != null ? ks : (keySet = new KeySet()));
    }

    private final class KeySet extends AbstractSet<K> {
        public Iterator<K> iterator() {
            return newKeyIterator();
        }
        public int size() {
            return size;
        }
        public boolean contains(Object o) {
            return containsKey(o);
        }
        public boolean remove(Object o) {
            return HashMap.this.removeEntryForKey(o) != null;
        }
        public void clear() {
            HashMap.this.clear();
        }
        public Object[] toArray() {
            Object[] res = new Object[size];
            Iterator<K> it = iterator();
            int i = 0;
            while (it.hasNext())
                res[i++] = it.next();
            return res;
        }
        public <T> T[] toArray(T[] a) {
            a = (T[])java.lang.reflect.Array.newInstance(
                        a.getClass().getComponentType(), size);
            Object[] res = a;
            Iterator<K> it = iterator();
            int i = 0;
            while (it.hasNext())
                res[i++] = it.next();
            return a;
        }
    }

    /**
     * Returns a {@link Collection} view of the values contained in this map.
     * The collection is backed by the map, so changes to the map are
     * reflected in the collection, and vice-versa.  If the map is
     * modified while an iteration over the collection is in progress
     * (except through the iterator's own <tt>remove</tt> operation),
     * the results of the iteration are undefined.  The collection
     * supports element removal, which removes the corresponding
     * mapping from the map, via the <tt>Iterator.remove</tt>,
     * <tt>Collection.remove</tt>, <tt>removeAll</tt>,
     * <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not
     * support the <tt>add</tt> or <tt>addAll</tt> operations.
     */
    public Collection<V> values() {
        Collection<V> vs = values;
        return (vs != null ? vs : (values = new Values()));
    }

    private final class Values extends AbstractCollection<V> {
        public Iterator<V> iterator() {
            return newValueIterator();
        }
        public int size() {
            return size;
        }
        public boolean contains(Object o) {
            return containsValue(o);
        }
        public void clear() {
            HashMap.this.clear();
        }
    }

    /**
     * Returns a {@link Set} view of the mappings contained in this map.
     * The set is backed by the map, so changes to the map are
     * reflected in the set, and vice-versa.  If the map is modified
     * while an iteration over the set is in progress (except through
     * the iterator's own <tt>remove</tt> operation, or through the
     * <tt>setValue</tt> operation on a map entry returned by the
     * iterator) the results of the iteration are undefined.  The set
     * supports element removal, which removes the corresponding
     * mapping from the map, via the <tt>Iterator.remove</tt>,
     * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and
     * <tt>clear</tt> operations.  It does not support the
     * <tt>add</tt> or <tt>addAll</tt> operations.
     *
     * @return a set view of the mappings contained in this map
     */
    public Set<Map.Entry<K,V>> entrySet() {
        return entrySet0();
    }

    private Set<Map.Entry<K,V>> entrySet0() {
        Set<Map.Entry<K,V>> es = entrySet;
        return es != null ? es : (entrySet = new EntrySet());
    }

    private final class EntrySet extends AbstractSet<Map.Entry<K,V>> {
        public Iterator<Map.Entry<K,V>> iterator() {
            return newEntryIterator();
        }
        public boolean contains(Object o) {
            if (!(o instanceof Map.Entry))
                return false;
            Map.Entry<K,V> e = (Map.Entry<K,V>) o;
            Entry<K,V> candidate = getEntry(e.getKey());
            return candidate != null && candidate.equals(e);
        }
        public boolean remove(Object o) {
            return removeMapping(o) != null;
        }
        public int size() {
            return size;
        }
        public void clear() {
            HashMap.this.clear();
        }
        public Object[] toArray() {
            Object[] res = new Object[size];
            Iterator<Map.Entry<K,V>> it = iterator();
            int i = 0;
            while (it.hasNext())
                res[i++] = it.next();
            return res;
        }
        public <T> T[] toArray(T[] a) {
            a = (T[])java.lang.reflect.Array.newInstance(
                        a.getClass().getComponentType(), size);
            Object[] res = a;
            Iterator<Map.Entry<K,V>> it = iterator();
            int i = 0;
            while (it.hasNext())
                res[i++] = it.next();
            return a;
        }
    }

    private static final long serialVersionUID = 362498820763181265L;
}


/*
 * Copyright 1994-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that a method has been passed an illegal or
 * inappropriate argument.
 *
 * @author  unascribed
 * @see     java.lang.Thread#setPriority(int)
 * @since   JDK1.0
 */
public
class IllegalArgumentException extends RuntimeException {
    /**
     * Constructs an <code>IllegalArgumentException</code> with no
     * detail message.
     */
    public IllegalArgumentException() {
        super();
    }

    /**
     * Constructs an <code>IllegalArgumentException</code> with the
     * specified detail message.
     *
     * @param   s   the detail message.
     */
    public IllegalArgumentException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalArgumentException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalArgumentException(Throwable cause) {
        super(cause);
    }

    private static final long serialVersionUID = -5365630128856068164L;
}


/*
 * Copyright 1996-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Signals that a method has been invoked at an illegal or
 * inappropriate time.  In other words, the Java environment or
 * Java application is not in an appropriate state for the requested
 * operation.
 *
 * @author  Jonni Kanerva
 * @since   JDK1.1
 */
public
class IllegalStateException extends RuntimeException {
    /**
     * Constructs an IllegalStateException with no detail message.
     * A detail message is a String that describes this particular exception.
     */
    public IllegalStateException() {
        super();
    }

    /**
     * Constructs an IllegalStateException with the specified detail
     * message.  A detail message is a String that describes this particular
     * exception.
     *
     * @param s the String that contains a detailed message
     */
    public IllegalStateException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalStateException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalStateException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1848914673093119416L;
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator over a collection.  {@code Iterator} takes the place of
 * {@link Enumeration} in the Java Collections Framework.  Iterators
 * differ from enumerations in two ways:
 *
 * <ul>
 *      <li> Iterators allow the caller to remove elements from the
 *           underlying collection during the iteration with well-defined
 *           semantics.
 *      <li> Method names have been improved.
 * </ul>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see ListIterator
 * @see Iterable
 * @since 1.2
 */
public interface Iterator<E> {
    /**
     * Returns {@code true} if the iteration has more elements.
     * (In other words, returns {@code true} if {@link #next} would
     * return an element rather than throwing an exception.)
     *
     * @return {@code true} if the iteration has more elements
     */
    boolean hasNext();

    /**
     * Returns the next element in the iteration.
     *
     * @return the next element in the iteration
     * @throws NoSuchElementException if the iteration has no more elements
     */
    E next();

    /**
     * Removes from the underlying collection the last element returned
     * by this iterator (optional operation).  This method can be called
     * only once per call to {@link #next}.  The behavior of an iterator
     * is unspecified if the underlying collection is modified while the
     * iteration is in progress in any way other than by calling this
     * method.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this iterator
     *
     * @throws IllegalStateException if the {@code next} method has not
     *         yet been called, or the {@code remove} method has already
     *         been called after the last call to the {@code next}
     *         method
     */
    void remove();
}


package javaUtilEx;

public class juHashMapCreateHashCode {
	public static void main(String[] args) {
		Random.args = args;

		HashMap<Content,Content> m = createMap(Random.random());
		int hashCode  = m.hashCode();
	}

	public static HashMap<Content, Content> createMap(int n) {
		HashMap<Content,Content> m = new HashMap<Content,Content>();
		while (n > 0) {
			Content key = new Content(Random.random());
			Content val = new Content(Random.random());
			m.put(key, val);
			n--;
		}
		return m;
	}
}

final class Content {
	int val;

	public Content(int v) {
		this.val = v;
	}

	public int hashCode() {
		return val^31;
	}

	public boolean equals(Object o) {
		if (o instanceof Content) {
			return this.val == ((Content) o).val;
		}
		return false;
	}
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An object that maps keys to values.  A map cannot contain duplicate keys;
 * each key can map to at most one value.
 *
 * <p>This interface takes the place of the <tt>Dictionary</tt> class, which
 * was a totally abstract class rather than an interface.
 *
 * <p>The <tt>Map</tt> interface provides three <i>collection views</i>, which
 * allow a map's contents to be viewed as a set of keys, collection of values,
 * or set of key-value mappings.  The <i>order</i> of a map is defined as
 * the order in which the iterators on the map's collection views return their
 * elements.  Some map implementations, like the <tt>TreeMap</tt> class, make
 * specific guarantees as to their order; others, like the <tt>HashMap</tt>
 * class, do not.
 *
 * <p>Note: great care must be exercised if mutable objects are used as map
 * keys.  The behavior of a map is not specified if the value of an object is
 * changed in a manner that affects <tt>equals</tt> comparisons while the
 * object is a key in the map.  A special case of this prohibition is that it
 * is not permissible for a map to contain itself as a key.  While it is
 * permissible for a map to contain itself as a value, extreme caution is
 * advised: the <tt>equals</tt> and <tt>hashCode</tt> methods are no longer
 * well defined on such a map.
 *
 * <p>All general-purpose map implementation classes should provide two
 * "standard" constructors: a void (no arguments) constructor which creates an
 * empty map, and a constructor with a single argument of type <tt>Map</tt>,
 * which creates a new map with the same key-value mappings as its argument.
 * In effect, the latter constructor allows the user to copy any map,
 * producing an equivalent map of the desired class.  There is no way to
 * enforce this recommendation (as interfaces cannot contain constructors) but
 * all of the general-purpose map implementations in the JDK comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the map on which they operate, are specified to throw
 * <tt>UnsupportedOperationException</tt> if this map does not support the
 * operation.  If this is the case, these methods may, but are not required
 * to, throw an <tt>UnsupportedOperationException</tt> if the invocation would
 * have no effect on the map.  For example, invoking the {@link #putAll(Map)}
 * method on an unmodifiable map may, but is not required to, throw the
 * exception if the map whose mappings are to be "superimposed" is empty.
 *
 * <p>Some map implementations have restrictions on the keys and values they
 * may contain.  For example, some implementations prohibit null keys and
 * values, and some have restrictions on the types of their keys.  Attempting
 * to insert an ineligible key or value throws an unchecked exception,
 * typically <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.
 * Attempting to query the presence of an ineligible key or value may throw an
 * exception, or it may simply return false; some implementations will exhibit
 * the former behavior and some will exhibit the latter.  More generally,
 * attempting an operation on an ineligible key or value whose completion
 * would not result in the insertion of an ineligible element into the map may
 * throw an exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * <p>Many methods in Collections Framework interfaces are defined
 * in terms of the {@link Object#equals(Object) equals} method.  For
 * example, the specification for the {@link #containsKey(Object)
 * containsKey(Object key)} method says: "returns <tt>true</tt> if and
 * only if this map contains a mapping for a key <tt>k</tt> such that
 * <tt>(key==null ? k==null : key.equals(k))</tt>." This specification should
 * <i>not</i> be construed to imply that invoking <tt>Map.containsKey</tt>
 * with a non-null argument <tt>key</tt> will cause <tt>key.equals(k)</tt> to
 * be invoked for any key <tt>k</tt>.  Implementations are free to
 * implement optimizations whereby the <tt>equals</tt> invocation is avoided,
 * for example, by first comparing the hash codes of the two keys.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * @param <K> the type of keys maintained by this map
 * @param <V> the type of mapped values
 *
 * @author  Josh Bloch
 * @see HashMap
 * @see TreeMap
 * @see Hashtable
 * @see SortedMap
 * @see Collection
 * @see Set
 * @since 1.2
 */
public interface Map<K,V> {
    // Query Operations

    /**
     * Returns the number of key-value mappings in this map.  If the
     * map contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of key-value mappings in this map
     */
    int size();

    /**
     * Returns <tt>true</tt> if this map contains no key-value mappings.
     *
     * @return <tt>true</tt> if this map contains no key-value mappings
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this map contains a mapping for the specified
     * key.  More formally, returns <tt>true</tt> if and only if
     * this map contains a mapping for a key <tt>k</tt> such that
     * <tt>(key==null ? k==null : key.equals(k))</tt>.  (There can be
     * at most one such mapping.)
     *
     * @param key key whose presence in this map is to be tested
     * @return <tt>true</tt> if this map contains a mapping for the specified
     *         key
     * @throws ClassCastException if the key is of an inappropriate type for
     *         this map (optional)
     * @throws NullPointerException if the specified key is null and this map
     *         does not permit null keys (optional)
     */
    boolean containsKey(Object key);

    /**
     * Returns <tt>true</tt> if this map maps one or more keys to the
     * specified value.  More formally, returns <tt>true</tt> if and only if
     * this map contains at least one mapping to a value <tt>v</tt> such that
     * <tt>(value==null ? v==null : value.equals(v))</tt>.  This operation
     * will probably require time linear in the map size for most
     * implementations of the <tt>Map</tt> interface.
     *
     * @param value value whose presence in this map is to be tested
     * @return <tt>true</tt> if this map maps one or more keys to the
     *         specified value
     * @throws ClassCastException if the value is of an inappropriate type for
     *         this map (optional)
     * @throws NullPointerException if the specified value is null and this
     *         map does not permit null values (optional)
     */
    boolean containsValue(Object value);

    /**
     * Returns the value to which the specified key is mapped,
     * or {@code null} if this map contains no mapping for the key.
     *
     * <p>More formally, if this map contains a mapping from a key
     * {@code k} to a value {@code v} such that {@code (key==null ? k==null :
     * key.equals(k))}, then this method returns {@code v}; otherwise
     * it returns {@code null}.  (There can be at most one such mapping.)
     *
     * <p>If this map permits null values, then a return value of
     * {@code null} does not <i>necessarily</i> indicate that the map
     * contains no mapping for the key; it's also possible that the map
     * explicitly maps the key to {@code null}.  The {@link #containsKey
     * containsKey} operation may be used to distinguish these two cases.
     *
     * @param key the key whose associated value is to be returned
     * @return the value to which the specified key is mapped, or
     *         {@code null} if this map contains no mapping for the key
     * @throws ClassCastException if the key is of an inappropriate type for
     *         this map (optional)
     * @throws NullPointerException if the specified key is null and this map
     *         does not permit null keys (optional)
     */
    V get(Object key);

    // Modification Operations

    /**
     * Associates the specified value with the specified key in this map
     * (optional operation).  If the map previously contained a mapping for
     * the key, the old value is replaced by the specified value.  (A map
     * <tt>m</tt> is said to contain a mapping for a key <tt>k</tt> if and only
     * if {@link #containsKey(Object) m.containsKey(k)} would return
     * <tt>true</tt>.)
     *
     * @param key key with which the specified value is to be associated
     * @param value value to be associated with the specified key
     * @return the previous value associated with <tt>key</tt>, or
     *         <tt>null</tt> if there was no mapping for <tt>key</tt>.
     *         (A <tt>null</tt> return can also indicate that the map
     *         previously associated <tt>null</tt> with <tt>key</tt>,
     *         if the implementation supports <tt>null</tt> values.)
     * @throws UnsupportedOperationException if the <tt>put</tt> operation
     *         is not supported by this map
     * @throws ClassCastException if the class of the specified key or value
     *         prevents it from being stored in this map
     * @throws NullPointerException if the specified key or value is null
     *         and this map does not permit null keys or values
     * @throws IllegalArgumentException if some property of the specified key
     *         or value prevents it from being stored in this map
     */
    V put(K key, V value);

    /**
     * Removes the mapping for a key from this map if it is present
     * (optional operation).   More formally, if this map contains a mapping
     * from key <tt>k</tt> to value <tt>v</tt> such that
     * <code>(key==null ?  k==null : key.equals(k))</code>, that mapping
     * is removed.  (The map can contain at most one such mapping.)
     *
     * <p>Returns the value to which this map previously associated the key,
     * or <tt>null</tt> if the map contained no mapping for the key.
     *
     * <p>If this map permits null values, then a return value of
     * <tt>null</tt> does not <i>necessarily</i> indicate that the map
     * contained no mapping for the key; it's also possible that the map
     * explicitly mapped the key to <tt>null</tt>.
     *
     * <p>The map will not contain a mapping for the specified key once the
     * call returns.
     *
     * @param key key whose mapping is to be removed from the map
     * @return the previous value associated with <tt>key</tt>, or
     *         <tt>null</tt> if there was no mapping for <tt>key</tt>.
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this map
     * @throws ClassCastException if the key is of an inappropriate type for
     *         this map (optional)
     * @throws NullPointerException if the specified key is null and this
     *         map does not permit null keys (optional)
     */
    V remove(Object key);


    // Bulk Operations

    /**
     * Copies all of the mappings from the specified map to this map
     * (optional operation).  The effect of this call is equivalent to that
     * of calling {@link #put(Object,Object) put(k, v)} on this map once
     * for each mapping from key <tt>k</tt> to value <tt>v</tt> in the
     * specified map.  The behavior of this operation is undefined if the
     * specified map is modified while the operation is in progress.
     *
     * @param m mappings to be stored in this map
     * @throws UnsupportedOperationException if the <tt>putAll</tt> operation
     *         is not supported by this map
     * @throws ClassCastException if the class of a key or value in the
     *         specified map prevents it from being stored in this map
     * @throws NullPointerException if the specified map is null, or if
     *         this map does not permit null keys or values, and the
     *         specified map contains null keys or values
     * @throws IllegalArgumentException if some property of a key or value in
     *         the specified map prevents it from being stored in this map
     */
    void putAll(Map<? extends K, ? extends V> m);

    /**
     * Removes all of the mappings from this map (optional operation).
     * The map will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this map
     */
    void clear();


    // Views

    /**
     * Returns a {@link Set} view of the keys contained in this map.
     * The set is backed by the map, so changes to the map are
     * reflected in the set, and vice-versa.  If the map is modified
     * while an iteration over the set is in progress (except through
     * the iterator's own <tt>remove</tt> operation), the results of
     * the iteration are undefined.  The set supports element removal,
     * which removes the corresponding mapping from the map, via the
     * <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,
     * <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>
     * operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>
     * operations.
     *
     * @return a set view of the keys contained in this map
     */
    Set<K> keySet();

    /**
     * Returns a {@link Collection} view of the values contained in this map.
     * The collection is backed by the map, so changes to the map are
     * reflected in the collection, and vice-versa.  If the map is
     * modified while an iteration over the collection is in progress
     * (except through the iterator's own <tt>remove</tt> operation),
     * the results of the iteration are undefined.  The collection
     * supports element removal, which removes the corresponding
     * mapping from the map, via the <tt>Iterator.remove</tt>,
     * <tt>Collection.remove</tt>, <tt>removeAll</tt>,
     * <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not
     * support the <tt>add</tt> or <tt>addAll</tt> operations.
     *
     * @return a collection view of the values contained in this map
     */
    Collection<V> values();

    /**
     * Returns a {@link Set} view of the mappings contained in this map.
     * The set is backed by the map, so changes to the map are
     * reflected in the set, and vice-versa.  If the map is modified
     * while an iteration over the set is in progress (except through
     * the iterator's own <tt>remove</tt> operation, or through the
     * <tt>setValue</tt> operation on a map entry returned by the
     * iterator) the results of the iteration are undefined.  The set
     * supports element removal, which removes the corresponding
     * mapping from the map, via the <tt>Iterator.remove</tt>,
     * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and
     * <tt>clear</tt> operations.  It does not support the
     * <tt>add</tt> or <tt>addAll</tt> operations.
     *
     * @return a set view of the mappings contained in this map
     */
    Set<Map.Entry<K, V>> entrySet();

    /**
     * A map entry (key-value pair).  The <tt>Map.entrySet</tt> method returns
     * a collection-view of the map, whose elements are of this class.  The
     * <i>only</i> way to obtain a reference to a map entry is from the
     * iterator of this collection-view.  These <tt>Map.Entry</tt> objects are
     * valid <i>only</i> for the duration of the iteration; more formally,
     * the behavior of a map entry is undefined if the backing map has been
     * modified after the entry was returned by the iterator, except through
     * the <tt>setValue</tt> operation on the map entry.
     *
     * @see Map#entrySet()
     * @since 1.2
     */
    interface Entry<K,V> {
        /**
         * Returns the key corresponding to this entry.
         *
         * @return the key corresponding to this entry
         * @throws IllegalStateException implementations may, but are not
         *         required to, throw this exception if the entry has been
         *         removed from the backing map.
         */
        K getKey();

        /**
         * Returns the value corresponding to this entry.  If the mapping
         * has been removed from the backing map (by the iterator's
         * <tt>remove</tt> operation), the results of this call are undefined.
         *
         * @return the value corresponding to this entry
         * @throws IllegalStateException implementations may, but are not
         *         required to, throw this exception if the entry has been
         *         removed from the backing map.
         */
        V getValue();

        /**
         * Replaces the value corresponding to this entry with the specified
         * value (optional operation).  (Writes through to the map.)  The
         * behavior of this call is undefined if the mapping has already been
         * removed from the map (by the iterator's <tt>remove</tt> operation).
         *
         * @param value new value to be stored in this entry
         * @return old value corresponding to the entry
         * @throws UnsupportedOperationException if the <tt>put</tt> operation
         *         is not supported by the backing map
         * @throws ClassCastException if the class of the specified value
         *         prevents it from being stored in the backing map
         * @throws NullPointerException if the backing map does not permit
         *         null values, and the specified value is null
         * @throws IllegalArgumentException if some property of this value
         *         prevents it from being stored in the backing map
         * @throws IllegalStateException implementations may, but are not
         *         required to, throw this exception if the entry has been
         *         removed from the backing map.
         */
        V setValue(V value);

        /**
         * Compares the specified object with this entry for equality.
         * Returns <tt>true</tt> if the given object is also a map entry and
         * the two entries represent the same mapping.  More formally, two
         * entries <tt>e1</tt> and <tt>e2</tt> represent the same mapping
         * if<pre>
         *     (e1.getKey()==null ?
         *      e2.getKey()==null : e1.getKey().equals(e2.getKey()))  &amp;&amp;
         *     (e1.getValue()==null ?
         *      e2.getValue()==null : e1.getValue().equals(e2.getValue()))
         * </pre>
         * This ensures that the <tt>equals</tt> method works properly across
         * different implementations of the <tt>Map.Entry</tt> interface.
         *
         * @param o object to be compared for equality with this map entry
         * @return <tt>true</tt> if the specified object is equal to this map
         *         entry
         */
        boolean equals(Object o);

        /**
         * Returns the hash code value for this map entry.  The hash code
         * of a map entry <tt>e</tt> is defined to be: <pre>
         *     (e.getKey()==null   ? 0 : e.getKey().hashCode()) ^
         *     (e.getValue()==null ? 0 : e.getValue().hashCode())
         * </pre>
         * This ensures that <tt>e1.equals(e2)</tt> implies that
         * <tt>e1.hashCode()==e2.hashCode()</tt> for any two Entries
         * <tt>e1</tt> and <tt>e2</tt>, as required by the general
         * contract of <tt>Object.hashCode</tt>.
         *
         * @return the hash code value for this map entry
         * @see Object#hashCode()
         * @see Object#equals(Object)
         * @see #equals(Object)
         */
        int hashCode();
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this map for equality.  Returns
     * <tt>true</tt> if the given object is also a map and the two maps
     * represent the same mappings.  More formally, two maps <tt>m1</tt> and
     * <tt>m2</tt> represent the same mappings if
     * <tt>m1.entrySet().equals(m2.entrySet())</tt>.  This ensures that the
     * <tt>equals</tt> method works properly across different implementations
     * of the <tt>Map</tt> interface.
     *
     * @param o object to be compared for equality with this map
     * @return <tt>true</tt> if the specified object is equal to this map
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this map.  The hash code of a map is
     * defined to be the sum of the hash codes of each entry in the map's
     * <tt>entrySet()</tt> view.  This ensures that <tt>m1.equals(m2)</tt>
     * implies that <tt>m1.hashCode()==m2.hashCode()</tt> for any two maps
     * <tt>m1</tt> and <tt>m2</tt>, as required by the general contract of
     * {@link Object#hashCode}.
     *
     * @return the hash code value for this map
     * @see Map.Entry#hashCode()
     * @see Object#equals(Object)
     * @see #equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1994-1998 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown by the <code>nextElement</code> method of an
 * <code>Enumeration</code> to indicate that there are no more
 * elements in the enumeration.
 *
 * @author  unascribed
 * @see     java.util.Enumeration
 * @see     java.util.Enumeration#nextElement()
 * @since   JDK1.0
 */
public
class NoSuchElementException extends RuntimeException {
    /**
     * Constructs a <code>NoSuchElementException</code> with <tt>null</tt>
     * as its error message string.
     */
    public NoSuchElementException() {
        super();
    }

    /**
     * Constructs a <code>NoSuchElementException</code>, saving a reference
     * to the error message string <tt>s</tt> for later retrieval by the
     * <tt>getMessage</tt> method.
     *
     * @param   s   the detail message.
     */
    public NoSuchElementException(String s) {
        super(s);
    }
}


package javaUtilEx;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * A collection that contains no duplicate elements.  More formally, sets
 * contain no pair of elements <code>e1</code> and <code>e2</code> such that
 * <code>e1.equals(e2)</code>, and at most one null element.  As implied by
 * its name, this interface models the mathematical <i>set</i> abstraction.
 *
 * <p>The <tt>Set</tt> interface places additional stipulations, beyond those
 * inherited from the <tt>Collection</tt> interface, on the contracts of all
 * constructors and on the contracts of the <tt>add</tt>, <tt>equals</tt> and
 * <tt>hashCode</tt> methods.  Declarations for other inherited methods are
 * also included here for convenience.  (The specifications accompanying these
 * declarations have been tailored to the <tt>Set</tt> interface, but they do
 * not contain any additional stipulations.)
 *
 * <p>The additional stipulation on constructors is, not surprisingly,
 * that all constructors must create a set that contains no duplicate elements
 * (as defined above).
 *
 * <p>Note: Great care must be exercised if mutable objects are used as set
 * elements.  The behavior of a set is not specified if the value of an object
 * is changed in a manner that affects <tt>equals</tt> comparisons while the
 * object is an element in the set.  A special case of this prohibition is
 * that it is not permissible for a set to contain itself as an element.
 *
 * <p>Some set implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the set may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @param <E> the type of elements maintained by this set
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see List
 * @see SortedSet
 * @see HashSet
 * @see TreeSet
 * @see AbstractSet
 * @see Collections#singleton(java.lang.Object)
 * @see Collections#EMPTY_SET
 * @since 1.2
 */

public interface Set<E> extends Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this set (its cardinality).  If this
     * set contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this set (its cardinality)
     */
    int size();

    /**
     * Returns <tt>true</tt> if this set contains no elements.
     *
     * @return <tt>true</tt> if this set contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this set contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this set
     * contains an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this set is to be tested
     * @return <tt>true</tt> if this set contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this set (optional)
     * @throws NullPointerException if the specified element is null and this
     *         set does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this set.  The elements are
     * returned in no particular order (unless this set is an instance of some
     * class that provides a guarantee).
     *
     * @return an iterator over the elements in this set
     */
    Iterator<E> iterator();

    /**
     * Returns an array containing all of the elements in this set.
     * If this set makes any guarantees as to what order its elements
     * are returned by its iterator, this method must return the
     * elements in the same order.
     *
     * <p>The returned array will be "safe" in that no references to it
     * are maintained by this set.  (In other words, this method must
     * allocate a new array even if this set is backed by an array).
     * The caller is thus free to modify the returned array.
     *
     * <p>This method acts as bridge between array-based and collection-based
     * APIs.
     *
     * @return an array containing all the elements in this set
     */
    Object[] toArray();

    /**
     * Returns an array containing all of the elements in this set; the
     * runtime type of the returned array is that of the specified array.
     * If the set fits in the specified array, it is returned therein.
     * Otherwise, a new array is allocated with the runtime type of the
     * specified array and the size of this set.
     *
     * <p>If this set fits in the specified array with room to spare
     * (i.e., the array has more elements than this set), the element in
     * the array immediately following the end of the set is set to
     * <tt>null</tt>.  (This is useful in determining the length of this
     * set <i>only</i> if the caller knows that this set does not contain
     * any null elements.)
     *
     * <p>If this set makes any guarantees as to what order its elements
     * are returned by its iterator, this method must return the elements
     * in the same order.
     *
     * <p>Like the {@link #toArray()} method, this method acts as bridge between
     * array-based and collection-based APIs.  Further, this method allows
     * precise control over the runtime type of the output array, and may,
     * under certain circumstances, be used to save allocation costs.
     *
     * <p>Suppose <tt>x</tt> is a set known to contain only strings.
     * The following code can be used to dump the set into a newly allocated
     * array of <tt>String</tt>:
     *
     * <pre>
     *     String[] y = x.toArray(new String[0]);</pre>
     *
     * Note that <tt>toArray(new Object[0])</tt> is identical in function to
     * <tt>toArray()</tt>.
     *
     * @param a the array into which the elements of this set are to be
     *        stored, if it is big enough; otherwise, a new array of the same
     *        runtime type is allocated for this purpose.
     * @return an array containing all the elements in this set
     * @throws ArrayStoreException if the runtime type of the specified array
     *         is not a supertype of the runtime type of every element in this
     *         set
     * @throws NullPointerException if the specified array is null
     */
    <T> T[] toArray(T[] a);


    // Modification Operations

    /**
     * Adds the specified element to this set if it is not already present
     * (optional operation).  More formally, adds the specified element
     * <tt>e</tt> to this set if the set contains no element <tt>e2</tt>
     * such that
     * <tt>(e==null&nbsp;?&nbsp;e2==null&nbsp;:&nbsp;e.equals(e2))</tt>.
     * If this set already contains the element, the call leaves the set
     * unchanged and returns <tt>false</tt>.  In combination with the
     * restriction on constructors, this ensures that sets never contain
     * duplicate elements.
     *
     * <p>The stipulation above does not imply that sets must accept all
     * elements; sets may refuse to add any particular element, including
     * <tt>null</tt>, and throw an exception, as described in the
     * specification for {@link Collection#add Collection.add}.
     * Individual set implementations should clearly document any
     * restrictions on the elements that they may contain.
     *
     * @param e element to be added to this set
     * @return <tt>true</tt> if this set did not already contain the specified
     *         element
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this set
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this set
     * @throws NullPointerException if the specified element is null and this
     *         set does not permit null elements
     * @throws IllegalArgumentException if some property of the specified element
     *         prevents it from being added to this set
     */
    boolean add(E e);


    /**
     * Removes the specified element from this set if it is present
     * (optional operation).  More formally, removes an element <tt>e</tt>
     * such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this set contains such an element.  Returns <tt>true</tt> if this set
     * contained the element (or equivalently, if this set changed as a
     * result of the call).  (This set will not contain the element once the
     * call returns.)
     *
     * @param o object to be removed from this set, if present
     * @return <tt>true</tt> if this set contained the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this set (optional)
     * @throws NullPointerException if the specified element is null and this
     *         set does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this set
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this set contains all of the elements of the
     * specified collection.  If the specified collection is also a set, this
     * method returns <tt>true</tt> if it is a <i>subset</i> of this set.
     *
     * @param  c collection to be checked for containment in this set
     * @return <tt>true</tt> if this set contains all of the elements of the
     *         specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         set (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this set does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this set if
     * they're not already present (optional operation).  If the specified
     * collection is also a set, the <tt>addAll</tt> operation effectively
     * modifies this set so that its value is the <i>union</i> of the two
     * sets.  The behavior of this operation is undefined if the specified
     * collection is modified while the operation is in progress.
     *
     * @param  c collection containing elements to be added to this set
     * @return <tt>true</tt> if this set changed as a result of the call
     *
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this set
     * @throws ClassCastException if the class of an element of the
     *         specified collection prevents it from being added to this set
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this set does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this set
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Retains only the elements in this set that are contained in the
     * specified collection (optional operation).  In other words, removes
     * from this set all of its elements that are not contained in the
     * specified collection.  If the specified collection is also a set, this
     * operation effectively modifies this set so that its value is the
     * <i>intersection</i> of the two sets.
     *
     * @param  c collection containing elements to be retained in this set
     * @return <tt>true</tt> if this set changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this set
     * @throws ClassCastException if the class of an element of this set
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this set contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes from this set all of its elements that are contained in the
     * specified collection (optional operation).  If the specified
     * collection is also a set, this operation effectively modifies this
     * set so that its value is the <i>asymmetric set difference</i> of
     * the two sets.
     *
     * @param  c collection containing elements to be removed from this set
     * @return <tt>true</tt> if this set changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this set
     * @throws ClassCastException if the class of an element of this set
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this set contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Removes all of the elements from this set (optional operation).
     * The set will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> method
     *         is not supported by this set
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this set for equality.  Returns
     * <tt>true</tt> if the specified object is also a set, the two sets
     * have the same size, and every member of the specified set is
     * contained in this set (or equivalently, every member of this set is
     * contained in the specified set).  This definition ensures that the
     * equals method works properly across different implementations of the
     * set interface.
     *
     * @param o object to be compared for equality with this set
     * @return <tt>true</tt> if the specified object is equal to this set
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this set.  The hash code of a set is
     * defined to be the sum of the hash codes of the elements in the set,
     * where the hash code of a <tt>null</tt> element is defined to be zero.
     * This ensures that <tt>s1.equals(s2)</tt> implies that
     * <tt>s1.hashCode()==s2.hashCode()</tt> for any two sets <tt>s1</tt>
     * and <tt>s2</tt>, as required by the general contract of
     * {@link Object#hashCode}.
     *
     * @return the hash code value for this set
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that the requested operation is not supported.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @since   1.2
 */
public class UnsupportedOperationException extends RuntimeException {
    /**
     * Constructs an UnsupportedOperationException with no detail message.
     */
    public UnsupportedOperationException() {
    }

    /**
     * Constructs an UnsupportedOperationException with the specified
     * detail message.
     *
     * @param message the detail message
     */
    public UnsupportedOperationException(String message) {
        super(message);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public UnsupportedOperationException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public UnsupportedOperationException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1242599979055084673L;
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Collection</tt>
 * interface, to minimize the effort required to implement this interface. <p>
 *
 * To implement an unmodifiable collection, the programmer needs only to
 * extend this class and provide implementations for the <tt>iterator</tt> and
 * <tt>size</tt> methods.  (The iterator returned by the <tt>iterator</tt>
 * method must implement <tt>hasNext</tt> and <tt>next</tt>.)<p>
 *
 * To implement a modifiable collection, the programmer must additionally
 * override this class's <tt>add</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by the
 * <tt>iterator</tt> method must additionally implement its <tt>remove</tt>
 * method.<p>
 *
 * The programmer should generally provide a void (no argument) and
 * <tt>Collection</tt> constructor, as per the recommendation in the
 * <tt>Collection</tt> interface specification.<p>
 *
 * The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if
 * the collection being implemented admits a more efficient implementation.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractCollection<E> implements Collection<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractCollection() {
    }

    // Query Operations

    /**
     * Returns an iterator over the elements contained in this collection.
     *
     * @return an iterator over the elements contained in this collection
     */
    public abstract Iterator<E> iterator();

    public abstract int size();

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the elements in the collection,
     * checking each element in turn for equality with the specified element.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean contains(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return true;
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return true;
        }
        return false;
    }

    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     */
    public boolean add(E e) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the collection looking for the
     * specified element.  If it finds the element, it removes the element
     * from the collection using the iterator's remove method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's iterator method does not implement the <tt>remove</tt>
     * method and this collection contains the specified object.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public boolean remove(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext()) {
                if (e.next()==null) {
                    e.remove();
                    return true;
                }
            }
        } else {
            while (e.hasNext()) {
                if (o.equals(e.next())) {
                    e.remove();
                    return true;
                }
            }
        }
        return false;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection,
     * checking each element returned by the iterator in turn to see
     * if it's contained in this collection.  If all elements are so
     * contained <tt>true</tt> is returned, otherwise <tt>false</tt>.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @see #contains(Object)
     */
    public boolean containsAll(Collection<?> c) {
        Iterator<?> e = c.iterator();
        while (e.hasNext())
            if (!contains(e.next()))
                return false;
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection, and adds
     * each object returned by the iterator to this collection, in turn.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> unless <tt>add</tt> is
     * overridden (assuming the specified collection is non-empty).
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     *
     * @see #add(Object)
     */
    public boolean addAll(Collection<? extends E> c) {
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            if (add(e.next()))
                modified = true;
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's so contained, it's removed from
     * this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements in common with the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;
        Iterator<?> e = iterator();
        while (e.hasNext()) {
            if (c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's not so contained, it's removed
     * from this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements not present in the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean retainAll(Collection<?> c) {
        boolean modified = false;
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            if (!c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, removing each
     * element using the <tt>Iterator.remove</tt> operation.  Most
     * implementations will probably choose to override this method for
     * efficiency.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's <tt>iterator</tt> method does not implement the
     * <tt>remove</tt> method and this collection is non-empty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            e.next();
            e.remove();
        }
    }


    //  String conversion

    /**
     * Returns a string representation of this collection.  The string
     * representation consists of a list of the collection's elements in the
     * order they are returned by its iterator, enclosed in square brackets
     * (<tt>"[]"</tt>).  Adjacent elements are separated by the characters
     * <tt>", "</tt> (comma and space).  Elements are converted to strings as
     * by {@link String#valueOf(Object)}.
     *
     * @return a string representation of this collection
     */
    public String toString() {
        Iterator<E> i = iterator();
        if (! i.hasNext())
            return "[]";

        String sb = "";
        sb = sb + "[";
        for (;;) {
            E e = i.next();
            sb = sb + (e == this ? "(this Collection)" : e);
            if (! i.hasNext()) {
                sb = sb + "]";
		return sb;
            }
            sb = sb + ", ";
        }
    }

}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;
import javaUtilEx.Map.Entry;

/**
 * This class provides a skeletal implementation of the <tt>Map</tt>
 * interface, to minimize the effort required to implement this interface.
 *
 * <p>To implement an unmodifiable map, the programmer needs only to extend this
 * class and provide an implementation for the <tt>entrySet</tt> method, which
 * returns a set-view of the map's mappings.  Typically, the returned set
 * will, in turn, be implemented atop <tt>AbstractSet</tt>.  This set should
 * not support the <tt>add</tt> or <tt>remove</tt> methods, and its iterator
 * should not support the <tt>remove</tt> method.
 *
 * <p>To implement a modifiable map, the programmer must additionally override
 * this class's <tt>put</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by
 * <tt>entrySet().iterator()</tt> must additionally implement its
 * <tt>remove</tt> method.
 *
 * <p>The programmer should generally provide a void (no argument) and map
 * constructor, as per the recommendation in the <tt>Map</tt> interface
 * specification.
 *
 * <p>The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if the
 * map being implemented admits a more efficient implementation.
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @param <K> the type of keys maintained by this map
 * @param <V> the type of mapped values
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Map
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractMap<K,V> implements Map<K,V> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractMap() {
    }

    // Query Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>entrySet().size()</tt>.
     */
    public int size() {
        return entrySet().size();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over <tt>entrySet()</tt> searching
     * for an entry with the specified value.  If such an entry is found,
     * <tt>true</tt> is returned.  If the iteration terminates without
     * finding such an entry, <tt>false</tt> is returned.  Note that this
     * implementation requires linear time in the size of the map.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean containsValue(Object value) {
        Iterator<Entry<K,V>> i = entrySet().iterator();
        if (value==null) {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (e.getValue()==null)
                    return true;
            }
        } else {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (value.equals(e.getValue()))
                    return true;
            }
        }
        return false;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over <tt>entrySet()</tt> searching
     * for an entry with the specified key.  If such an entry is found,
     * <tt>true</tt> is returned.  If the iteration terminates without
     * finding such an entry, <tt>false</tt> is returned.  Note that this
     * implementation requires linear time in the size of the map; many
     * implementations will override this method.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean containsKey(Object key) {
        Iterator<Map.Entry<K,V>> i = entrySet().iterator();
        if (key==null) {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (e.getKey()==null)
                    return true;
            }
        } else {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (key.equals(e.getKey()))
                    return true;
            }
        }
        return false;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over <tt>entrySet()</tt> searching
     * for an entry with the specified key.  If such an entry is found,
     * the entry's value is returned.  If the iteration terminates without
     * finding such an entry, <tt>null</tt> is returned.  Note that this
     * implementation requires linear time in the size of the map; many
     * implementations will override this method.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public V get(Object key) {
        Iterator<Entry<K,V>> i = entrySet().iterator();
        if (key==null) {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (e.getKey()==null)
                    return e.getValue();
            }
        } else {
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                if (key.equals(e.getKey()))
                    return e.getValue();
            }
        }
        return null;
    }


    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     */
    public V put(K key, V value) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over <tt>entrySet()</tt> searching for an
     * entry with the specified key.  If such an entry is found, its value is
     * obtained with its <tt>getValue</tt> operation, the entry is removed
     * from the collection (and the backing map) with the iterator's
     * <tt>remove</tt> operation, and the saved value is returned.  If the
     * iteration terminates without finding such an entry, <tt>null</tt> is
     * returned.  Note that this implementation requires linear time in the
     * size of the map; many implementations will override this method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the <tt>entrySet</tt>
     * iterator does not support the <tt>remove</tt> method and this map
     * contains a mapping for the specified key.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public V remove(Object key) {
        Iterator<Entry<K,V>> i = entrySet().iterator();
        Entry<K,V> correctEntry = null;
        if (key==null) {
            while (correctEntry==null && i.hasNext()) {
                Entry<K,V> e = i.next();
                if (e.getKey()==null)
                    correctEntry = e;
            }
        } else {
            while (correctEntry==null && i.hasNext()) {
                Entry<K,V> e = i.next();
                if (key.equals(e.getKey()))
                    correctEntry = e;
            }
        }

        V oldValue = null;
        if (correctEntry !=null) {
            oldValue = correctEntry.getValue();
            i.remove();
        }
        return oldValue;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified map's
     * <tt>entrySet()</tt> collection, and calls this map's <tt>put</tt>
     * operation once for each entry returned by the iteration.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if this map does not support
     * the <tt>put</tt> operation and the specified map is nonempty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     */
    public void putAll(Map<? extends K, ? extends V> m) {
        Iterator it = m.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry e = (Map.Entry) it.next();
            put((K) e.getKey(), (V) e.getValue());
        }
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation calls <tt>entrySet().clear()</tt>.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the <tt>entrySet</tt>
     * does not support the <tt>clear</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        entrySet().clear();
    }


    // Views

    /**
     * Each of these fields are initialized to contain an instance of the
     * appropriate view the first time this view is requested.  The views are
     * stateless, so there's no reason to create more than one of each.
     */
    transient volatile Set<K>        keySet = null;
    transient volatile Collection<V> values = null;

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a set that subclasses {@link AbstractSet}.
     * The subclass's iterator method returns a "wrapper object" over this
     * map's <tt>entrySet()</tt> iterator.  The <tt>size</tt> method
     * delegates to this map's <tt>size</tt> method and the
     * <tt>contains</tt> method delegates to this map's
     * <tt>containsKey</tt> method.
     *
     * <p>The set is created the first time this method is called,
     * and returned in response to all subsequent calls.  No synchronization
     * is performed, so there is a slight chance that multiple calls to this
     * method will not all return the same set.
     */
    public Set<K> keySet() {
        if (keySet == null) {
            keySet = new AbstractSet<K>() {
                public Iterator<K> iterator() {
                    return new Iterator<K>() {
                        private Iterator<Entry<K,V>> i = entrySet().iterator();

                        public boolean hasNext() {
                            return i.hasNext();
                        }

                        public K next() {
                            return i.next().getKey();
                        }

                        public void remove() {
                            i.remove();
                        }
                    };
                }

                public int size() {
                    return AbstractMap.this.size();
                }

                public boolean isEmpty() {
                    return AbstractMap.this.isEmpty();
                }

                public void clear() {
                    AbstractMap.this.clear();
                }

                public boolean contains(Object k) {
                    return AbstractMap.this.containsKey(k);
                }

                public Object[] toArray() {
                    Object[] res = new Object[AbstractMap.this.size()];
                    Iterator<Entry<K,V>> it = entrySet().iterator();
                    int i = 0;
                    while (it.hasNext())
                        res[i++] = it.next().getKey();
                    return res;
                }

                public <T> T[] toArray(T[] a) {
                    a = (T[])java.lang.reflect.Array.newInstance(
                                a.getClass().getComponentType(), AbstractMap.this.size());
                    Object[] res = a;
                    Iterator<Entry<K,V>> it = entrySet().iterator();
                    int i = 0;
                    while (it.hasNext())
                        res[i++] = it.next().getKey();
                    return a;
                }
            };
        }
        return keySet;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a collection that subclasses {@link
     * AbstractCollection}.  The subclass's iterator method returns a
     * "wrapper object" over this map's <tt>entrySet()</tt> iterator.
     * The <tt>size</tt> method delegates to this map's <tt>size</tt>
     * method and the <tt>contains</tt> method delegates to this map's
     * <tt>containsValue</tt> method.
     *
     * <p>The collection is created the first time this method is called, and
     * returned in response to all subsequent calls.  No synchronization is
     * performed, so there is a slight chance that multiple calls to this
     * method will not all return the same collection.
     */
    public Collection<V> values() {
        if (values == null) {
            values = new AbstractCollection<V>() {
                public Iterator<V> iterator() {
                    return new Iterator<V>() {
                        private Iterator<Entry<K,V>> i = entrySet().iterator();

                        public boolean hasNext() {
                            return i.hasNext();
                        }

                        public V next() {
                            return i.next().getValue();
                        }

                        public void remove() {
                            i.remove();
                        }
                    };
                }

                public int size() {
                    return AbstractMap.this.size();
                }

                public boolean isEmpty() {
                    return AbstractMap.this.isEmpty();
                }

                public void clear() {
                    AbstractMap.this.clear();
                }

                public boolean contains(Object v) {
                    return AbstractMap.this.containsValue(v);
                }
            };
        }
        return values;
    }

    public abstract Set<Entry<K,V>> entrySet();


    // Comparison and hashing

    /**
     * Compares the specified object with this map for equality.  Returns
     * <tt>true</tt> if the given object is also a map and the two maps
     * represent the same mappings.  More formally, two maps <tt>m1</tt> and
     * <tt>m2</tt> represent the same mappings if
     * <tt>m1.entrySet().equals(m2.entrySet())</tt>.  This ensures that the
     * <tt>equals</tt> method works properly across different implementations
     * of the <tt>Map</tt> interface.
     *
     * <p>This implementation first checks if the specified object is this map;
     * if so it returns <tt>true</tt>.  Then, it checks if the specified
     * object is a map whose size is identical to the size of this map; if
     * not, it returns <tt>false</tt>.  If so, it iterates over this map's
     * <tt>entrySet</tt> collection, and checks that the specified map
     * contains each mapping that this map contains.  If the specified map
     * fails to contain such a mapping, <tt>false</tt> is returned.  If the
     * iteration completes, <tt>true</tt> is returned.
     *
     * @param o object to be compared for equality with this map
     * @return <tt>true</tt> if the specified object is equal to this map
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;

        if (!(o instanceof Map))
            return false;
        Map<K,V> m = (Map<K,V>) o;
        if (m.size() != size())
            return false;

        try {
            Iterator<Entry<K,V>> i = entrySet().iterator();
            while (i.hasNext()) {
                Entry<K,V> e = i.next();
                K key = e.getKey();
                V value = e.getValue();
                if (value == null) {
                    if (!(m.get(key)==null && m.containsKey(key)))
                        return false;
                } else {
                    if (!value.equals(m.get(key)))
                        return false;
                }
            }
        } catch (ClassCastException unused) {
            return false;
        } catch (NullPointerException unused) {
            return false;
        }

        return true;
    }

    /**
     * Returns the hash code value for this map.  The hash code of a map is
     * defined to be the sum of the hash codes of each entry in the map's
     * <tt>entrySet()</tt> view.  This ensures that <tt>m1.equals(m2)</tt>
     * implies that <tt>m1.hashCode()==m2.hashCode()</tt> for any two maps
     * <tt>m1</tt> and <tt>m2</tt>, as required by the general contract of
     * {@link Object#hashCode}.
     *
     * <p>This implementation iterates over <tt>entrySet()</tt>, calling
     * {@link Map.Entry#hashCode hashCode()} on each element (entry) in the
     * set, and adding up the results.
     *
     * @return the hash code value for this map
     * @see Map.Entry#hashCode()
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     */
    public int hashCode() {
        int h = 0;
        Iterator<Entry<K,V>> i = entrySet().iterator();
        while (i.hasNext())
            h += i.next().hashCode();
        return h;
    }

    /**
     * Returns a string representation of this map.  The string representation
     * consists of a list of key-value mappings in the order returned by the
     * map's <tt>entrySet</tt> view's iterator, enclosed in braces
     * (<tt>"{}"</tt>).  Adjacent mappings are separated by the characters
     * <tt>", "</tt> (comma and space).  Each key-value mapping is rendered as
     * the key followed by an equals sign (<tt>"="</tt>) followed by the
     * associated value.  Keys and values are converted to strings as by
     * {@link String#valueOf(Object)}.
     *
     * @return a string representation of this map
     */
    public String toString() {
        Iterator<Entry<K,V>> i = entrySet().iterator();
        if (! i.hasNext())
            return "{}";

        StringBuilder sb = new StringBuilder();
        sb.append('{');
        for (;;) {
            Entry<K,V> e = i.next();
            K key = e.getKey();
            V value = e.getValue();
            sb.append(key   == this ? "(this Map)" : key);
            sb.append('=');
            sb.append(value == this ? "(this Map)" : value);
            if (! i.hasNext())
                return sb.append('}').toString();
            sb.append(", ");
        }
    }

    /**
     * Returns a shallow copy of this <tt>AbstractMap</tt> instance: the keys
     * and values themselves are not cloned.
     *
     * @return a shallow copy of this map
     */
    protected Object clone() throws CloneNotSupportedException {
        AbstractMap<K,V> result = (AbstractMap<K,V>)super.clone();
        result.keySet = null;
        result.values = null;
        return result;
    }

    /**
     * Utility method for SimpleEntry and SimpleImmutableEntry.
     * Test for equality, checking for nulls.
     */
    private static boolean eq(Object o1, Object o2) {
        return o1 == null ? o2 == null : o1.equals(o2);
    }

    // Implementation Note: SimpleEntry and SimpleImmutableEntry
    // are distinct unrelated classes, even though they share
    // some code. Since you can't add or subtract final-ness
    // of a field in a subclass, they can't share representations,
    // and the amount of duplicated code is too small to warrant
    // exposing a common abstract class.


    /**
     * An Entry maintaining a key and a value.  The value may be
     * changed using the <tt>setValue</tt> method.  This class
     * facilitates the process of building custom map
     * implementations. For example, it may be convenient to return
     * arrays of <tt>SimpleEntry</tt> instances in method
     * <tt>Map.entrySet().toArray</tt>.
     *
     * @since 1.6
     */
    public static class SimpleEntry<K,V>
        implements Entry<K,V>, java.io.Serializable
    {
        private static final long serialVersionUID = -8499721149061103585L;

        private final K key;
        private V value;

        /**
         * Creates an entry representing a mapping from the specified
         * key to the specified value.
         *
         * @param key the key represented by this entry
         * @param value the value represented by this entry
         */
        public SimpleEntry(K key, V value) {
            this.key   = key;
            this.value = value;
        }

        /**
         * Creates an entry representing the same mapping as the
         * specified entry.
         *
         * @param entry the entry to copy
         */
        public SimpleEntry(Entry<? extends K, ? extends V> entry) {
            this.key   = entry.getKey();
            this.value = entry.getValue();
        }

        /**
         * Returns the key corresponding to this entry.
         *
         * @return the key corresponding to this entry
         */
        public K getKey() {
            return key;
        }

        /**
         * Returns the value corresponding to this entry.
         *
         * @return the value corresponding to this entry
         */
        public V getValue() {
            return value;
        }

        /**
         * Replaces the value corresponding to this entry with the specified
         * value.
         *
         * @param value new value to be stored in this entry
         * @return the old value corresponding to the entry
         */
        public V setValue(V value) {
            V oldValue = this.value;
            this.value = value;
            return oldValue;
        }

        /**
         * Compares the specified object with this entry for equality.
         * Returns {@code true} if the given object is also a map entry and
         * the two entries represent the same mapping.  More formally, two
         * entries {@code e1} and {@code e2} represent the same mapping
         * if<pre>
         *   (e1.getKey()==null ?
         *    e2.getKey()==null :
         *    e1.getKey().equals(e2.getKey()))
         *   &amp;&amp;
         *   (e1.getValue()==null ?
         *    e2.getValue()==null :
         *    e1.getValue().equals(e2.getValue()))</pre>
         * This ensures that the {@code equals} method works properly across
         * different implementations of the {@code Map.Entry} interface.
         *
         * @param o object to be compared for equality with this map entry
         * @return {@code true} if the specified object is equal to this map
         *         entry
         * @see    #hashCode
         */
        public boolean equals(Object o) {
            if (!(o instanceof Map.Entry))
                return false;
            Map.Entry e = (Map.Entry)o;
            return eq(key, e.getKey()) && eq(value, e.getValue());
        }

        /**
         * Returns the hash code value for this map entry.  The hash code
         * of a map entry {@code e} is defined to be: <pre>
         *   (e.getKey()==null   ? 0 : e.getKey().hashCode()) ^
         *   (e.getValue()==null ? 0 : e.getValue().hashCode())</pre>
         * This ensures that {@code e1.equals(e2)} implies that
         * {@code e1.hashCode()==e2.hashCode()} for any two Entries
         * {@code e1} and {@code e2}, as required by the general
         * contract of {@link Object#hashCode}.
         *
         * @return the hash code value for this map entry
         * @see    #equals
         */
        public int hashCode() {
            return (key   == null ? 0 :   key.hashCode()) ^
                   (value == null ? 0 : value.hashCode());
        }

        /**
         * Returns a String representation of this map entry.  This
         * implementation returns the string representation of this
         * entry's key followed by the equals character ("<tt>=</tt>")
         * followed by the string representation of this entry's value.
         *
         * @return a String representation of this map entry
         */
        public String toString() {
            return key + "=" + value;
        }

    }

    /**
     * An Entry maintaining an immutable key and value.  This class
     * does not support method <tt>setValue</tt>.  This class may be
     * convenient in methods that return thread-safe snapshots of
     * key-value mappings.
     *
     * @since 1.6
     */
    public static class SimpleImmutableEntry<K,V>
        implements Entry<K,V>, java.io.Serializable
    {
        private static final long serialVersionUID = 7138329143949025153L;

        private final K key;
        private final V value;

        /**
         * Creates an entry representing a mapping from the specified
         * key to the specified value.
         *
         * @param key the key represented by this entry
         * @param value the value represented by this entry
         */
        public SimpleImmutableEntry(K key, V value) {
            this.key   = key;
            this.value = value;
        }

        /**
         * Creates an entry representing the same mapping as the
         * specified entry.
         *
         * @param entry the entry to copy
         */
        public SimpleImmutableEntry(Entry<? extends K, ? extends V> entry) {
            this.key   = entry.getKey();
            this.value = entry.getValue();
        }

        /**
         * Returns the key corresponding to this entry.
         *
         * @return the key corresponding to this entry
         */
        public K getKey() {
            return key;
        }

        /**
         * Returns the value corresponding to this entry.
         *
         * @return the value corresponding to this entry
         */
        public V getValue() {
            return value;
        }

        /**
         * Replaces the value corresponding to this entry with the specified
         * value (optional operation).  This implementation simply throws
         * <tt>UnsupportedOperationException</tt>, as this class implements
         * an <i>immutable</i> map entry.
         *
         * @param value new value to be stored in this entry
         * @return (Does not return)
         * @throws UnsupportedOperationException always
         */
        public V setValue(V value) {
            throw new UnsupportedOperationException();
        }

        /**
         * Compares the specified object with this entry for equality.
         * Returns {@code true} if the given object is also a map entry and
         * the two entries represent the same mapping.  More formally, two
         * entries {@code e1} and {@code e2} represent the same mapping
         * if<pre>
         *   (e1.getKey()==null ?
         *    e2.getKey()==null :
         *    e1.getKey().equals(e2.getKey()))
         *   &amp;&amp;
         *   (e1.getValue()==null ?
         *    e2.getValue()==null :
         *    e1.getValue().equals(e2.getValue()))</pre>
         * This ensures that the {@code equals} method works properly across
         * different implementations of the {@code Map.Entry} interface.
         *
         * @param o object to be compared for equality with this map entry
         * @return {@code true} if the specified object is equal to this map
         *         entry
         * @see    #hashCode
         */
        public boolean equals(Object o) {
            if (!(o instanceof Map.Entry))
                return false;
            Map.Entry e = (Map.Entry)o;
            return eq(key, e.getKey()) && eq(value, e.getValue());
        }

        /**
         * Returns the hash code value for this map entry.  The hash code
         * of a map entry {@code e} is defined to be: <pre>
         *   (e.getKey()==null   ? 0 : e.getKey().hashCode()) ^
         *   (e.getValue()==null ? 0 : e.getValue().hashCode())</pre>
         * This ensures that {@code e1.equals(e2)} implies that
         * {@code e1.hashCode()==e2.hashCode()} for any two Entries
         * {@code e1} and {@code e2}, as required by the general
         * contract of {@link Object#hashCode}.
         *
         * @return the hash code value for this map entry
         * @see    #equals
         */
        public int hashCode() {
            return (key   == null ? 0 :   key.hashCode()) ^
                   (value == null ? 0 : value.hashCode());
        }

        /**
         * Returns a String representation of this map entry.  This
         * implementation returns the string representation of this
         * entry's key followed by the equals character ("<tt>=</tt>")
         * followed by the string representation of this entry's value.
         *
         * @return a String representation of this map entry
         */
        public String toString() {
            return key + "=" + value;
        }

    }

}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Set</tt>
 * interface to minimize the effort required to implement this
 * interface. <p>
 *
 * The process of implementing a set by extending this class is identical
 * to that of implementing a Collection by extending AbstractCollection,
 * except that all of the methods and constructors in subclasses of this
 * class must obey the additional constraints imposed by the <tt>Set</tt>
 * interface (for instance, the add method must not permit addition of
 * multiple instances of an object to a set).<p>
 *
 * Note that this class does not override any of the implementations from
 * the <tt>AbstractCollection</tt> class.  It merely adds implementations
 * for <tt>equals</tt> and <tt>hashCode</tt>.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @param <E> the type of elements maintained by this set
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see AbstractCollection
 * @see Set
 * @since 1.2
 */

public abstract class AbstractSet<E> extends AbstractCollection<E> implements Set<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractSet() {
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this set for equality.  Returns
     * <tt>true</tt> if the given object is also a set, the two sets have
     * the same size, and every member of the given set is contained in
     * this set.  This ensures that the <tt>equals</tt> method works
     * properly across different implementations of the <tt>Set</tt>
     * interface.<p>
     *
     * This implementation first checks if the specified object is this
     * set; if so it returns <tt>true</tt>.  Then, it checks if the
     * specified object is a set whose size is identical to the size of
     * this set; if not, it returns false.  If so, it returns
     * <tt>containsAll((Collection) o)</tt>.
     *
     * @param o object to be compared for equality with this set
     * @return <tt>true</tt> if the specified object is equal to this set
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;

        if (!(o instanceof Set))
            return false;
        Collection c = (Collection) o;
        if (c.size() != size())
            return false;
        try {
            return containsAll(c);
        } catch (ClassCastException unused)   {
            return false;
        } catch (NullPointerException unused) {
            return false;
        }
    }

    /**
     * Returns the hash code value for this set.  The hash code of a set is
     * defined to be the sum of the hash codes of the elements in the set,
     * where the hash code of a <tt>null</tt> element is defined to be zero.
     * This ensures that <tt>s1.equals(s2)</tt> implies that
     * <tt>s1.hashCode()==s2.hashCode()</tt> for any two sets <tt>s1</tt>
     * and <tt>s2</tt>, as required by the general contract of
     * {@link Object#hashCode}.
     *
     * <p>This implementation iterates over the set, calling the
     * <tt>hashCode</tt> method on each element in the set, and adding up
     * the results.
     *
     * @return the hash code value for this set
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     */
    public int hashCode() {
        int h = 0;
        Iterator<E> i = iterator();
        while (i.hasNext()) {
            E obj = i.next();
            if (obj != null)
                h += obj.hashCode();
        }
        return h;
    }

    /**
     * Removes from this set all of its elements that are contained in the
     * specified collection (optional operation).  If the specified
     * collection is also a set, this operation effectively modifies this
     * set so that its value is the <i>asymmetric set difference</i> of
     * the two sets.
     *
     * <p>This implementation determines which is the smaller of this set
     * and the specified collection, by invoking the <tt>size</tt>
     * method on each.  If this set has fewer elements, then the
     * implementation iterates over this set, checking each element
     * returned by the iterator in turn to see if it is contained in
     * the specified collection.  If it is so contained, it is removed
     * from this set with the iterator's <tt>remove</tt> method.  If
     * the specified collection has fewer elements, then the
     * implementation iterates over the specified collection, removing
     * from this set each element returned by the iterator, using this
     * set's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method.
     *
     * @param  c collection containing elements to be removed from this set
     * @return <tt>true</tt> if this set changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this set
     * @throws ClassCastException if the class of an element of this set
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this set contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;

        if (size() > c.size()) {
            for (Iterator<?> i = c.iterator(); i.hasNext(); )
                modified |= remove(i.next());
        } else {
            for (Iterator<?> i = iterator(); i.hasNext(); ) {
                if (c.contains(i.next())) {
                    i.remove();
                    modified = true;
                }
            }
        }
        return modified;
    }

}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * The root interface in the <i>collection hierarchy</i>.  A collection
 * represents a group of objects, known as its <i>elements</i>.  Some
 * collections allow duplicate elements and others do not.  Some are ordered
 * and others unordered.  The JDK does not provide any <i>direct</i>
 * implementations of this interface: it provides implementations of more
 * specific subinterfaces like <tt>Set</tt> and <tt>List</tt>.  This interface
 * is typically used to pass collections around and manipulate them where
 * maximum generality is desired.
 *
 * <p><i>Bags</i> or <i>multisets</i> (unordered collections that may contain
 * duplicate elements) should implement this interface directly.
 *
 * <p>All general-purpose <tt>Collection</tt> implementation classes (which
 * typically implement <tt>Collection</tt> indirectly through one of its
 * subinterfaces) should provide two "standard" constructors: a void (no
 * arguments) constructor, which creates an empty collection, and a
 * constructor with a single argument of type <tt>Collection</tt>, which
 * creates a new collection with the same elements as its argument.  In
 * effect, the latter constructor allows the user to copy any collection,
 * producing an equivalent collection of the desired implementation type.
 * There is no way to enforce this convention (as interfaces cannot contain
 * constructors) but all of the general-purpose <tt>Collection</tt>
 * implementations in the Java platform libraries comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the collection on which they operate, are specified to
 * throw <tt>UnsupportedOperationException</tt> if this collection does not
 * support the operation.  If this is the case, these methods may, but are not
 * required to, throw an <tt>UnsupportedOperationException</tt> if the
 * invocation would have no effect on the collection.  For example, invoking
 * the {@link #addAll(Collection)} method on an unmodifiable collection may,
 * but is not required to, throw the exception if the collection to be added
 * is empty.
 *
 * <p>Some collection implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the collection may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>It is up to each collection to determine its own synchronization
 * policy.  In the absence of a stronger guarantee by the
 * implementation, undefined behavior may result from the invocation
 * of any method on a collection that is being mutated by another
 * thread; this includes direct invocations, passing the collection to
 * a method that might perform invocations, and using an existing
 * iterator to examine the collection.
 *
 * <p>Many methods in Collections Framework interfaces are defined in
 * terms of the {@link Object#equals(Object) equals} method.  For example,
 * the specification for the {@link #contains(Object) contains(Object o)}
 * method says: "returns <tt>true</tt> if and only if this collection
 * contains at least one element <tt>e</tt> such that
 * <tt>(o==null ? e==null : o.equals(e))</tt>."  This specification should
 * <i>not</i> be construed to imply that invoking <tt>Collection.contains</tt>
 * with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be
 * invoked for any element <tt>e</tt>.  Implementations are free to implement
 * optimizations whereby the <tt>equals</tt> invocation is avoided, for
 * example, by first comparing the hash codes of the two elements.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see     Set
 * @see     List
 * @see     Map
 * @see     SortedSet
 * @see     SortedMap
 * @see     HashSet
 * @see     TreeSet
 * @see     ArrayList
 * @see     LinkedList
 * @see     Vector
 * @see     Collections
 * @see     Arrays
 * @see     AbstractCollection
 * @since 1.2
 */

public interface Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this collection.  If this collection
     * contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this collection
     */
    int size();

    /**
     * Returns <tt>true</tt> if this collection contains no elements.
     *
     * @return <tt>true</tt> if this collection contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this collection contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this collection
     * contains at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this collection is to be tested
     * @return <tt>true</tt> if this collection contains the specified
     *         element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this collection.  There are no
     * guarantees concerning the order in which the elements are returned
     * (unless this collection is an instance of some class that provides a
     * guarantee).
     *
     * @return an <tt>Iterator</tt> over the elements in this collection
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Ensures that this collection contains the specified element (optional
     * operation).  Returns <tt>true</tt> if this collection changed as a
     * result of the call.  (Returns <tt>false</tt> if this collection does
     * not permit duplicates and already contains the specified element.)<p>
     *
     * Collections that support this operation may place limitations on what
     * elements may be added to this collection.  In particular, some
     * collections will refuse to add <tt>null</tt> elements, and others will
     * impose restrictions on the type of elements that may be added.
     * Collection classes should clearly specify in their documentation any
     * restrictions on what elements may be added.<p>
     *
     * If a collection refuses to add a particular element for any reason
     * other than that it already contains the element, it <i>must</i> throw
     * an exception (rather than returning <tt>false</tt>).  This preserves
     * the invariant that a collection always contains the specified element
     * after this call returns.
     *
     * @param e element whose presence in this collection is to be ensured
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this collection
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements
     * @throws IllegalArgumentException if some property of the element
     *         prevents it from being added to this collection
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to insertion restrictions
     */
    boolean add(E e);

    /**
     * Removes a single instance of the specified element from this
     * collection, if it is present (optional operation).  More formally,
     * removes an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this collection contains one or more such elements.  Returns
     * <tt>true</tt> if this collection contained the specified element (or
     * equivalently, if this collection changed as a result of the call).
     *
     * @param o element to be removed from this collection, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this collection
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this collection contains all of the elements
     * in the specified collection.
     *
     * @param  c collection to be checked for containment in this collection
     * @return <tt>true</tt> if this collection contains all of the elements
     *         in the specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         collection (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this collection
     * (optional operation).  The behavior of this operation is undefined if
     * the specified collection is modified while the operation is in progress.
     * (This implies that the behavior of this call is undefined if the
     * specified collection is this collection, and this collection is
     * nonempty.)
     *
     * @param c collection containing elements to be added to this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this collection
     * @throws NullPointerException if the specified collection contains a
     *         null element and this collection does not permit null elements,
     *         or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this
     *         collection
     * @throws IllegalStateException if not all the elements can be added at
     *         this time due to insertion restrictions
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Removes all of this collection's elements that are also contained in the
     * specified collection (optional operation).  After this call returns,
     * this collection will contain no elements in common with the specified
     * collection.
     *
     * @param c collection containing elements to be removed from this collection
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> method
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not support
     *         null elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this collection that are contained in the
     * specified collection (optional operation).  In other words, removes from
     * this collection all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this collection (optional operation).
     * The collection will be empty after this method returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this collection
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this collection for equality. <p>
     *
     * While the <tt>Collection</tt> interface adds no stipulations to the
     * general contract for the <tt>Object.equals</tt>, programmers who
     * implement the <tt>Collection</tt> interface "directly" (in other words,
     * create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt>
     * or a <tt>List</tt>) must exercise care if they choose to override the
     * <tt>Object.equals</tt>.  It is not necessary to do so, and the simplest
     * course of action is to rely on <tt>Object</tt>'s implementation, but
     * the implementor may wish to implement a "value comparison" in place of
     * the default "reference comparison."  (The <tt>List</tt> and
     * <tt>Set</tt> interfaces mandate such value comparisons.)<p>
     *
     * The general contract for the <tt>Object.equals</tt> method states that
     * equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and
     * only if <tt>b.equals(a)</tt>).  The contracts for <tt>List.equals</tt>
     * and <tt>Set.equals</tt> state that lists are only equal to other lists,
     * and sets to other sets.  Thus, a custom <tt>equals</tt> method for a
     * collection class that implements neither the <tt>List</tt> nor
     * <tt>Set</tt> interface must return <tt>false</tt> when this collection
     * is compared to any list or set.  (By the same logic, it is not possible
     * to write a class that correctly implements both the <tt>Set</tt> and
     * <tt>List</tt> interfaces.)
     *
     * @param o object to be compared for equality with this collection
     * @return <tt>true</tt> if the specified object is equal to this
     * collection
     *
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     * @see List#equals(Object)
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this collection.  While the
     * <tt>Collection</tt> interface adds no stipulations to the general
     * contract for the <tt>Object.hashCode</tt> method, programmers should
     * take note that any class that overrides the <tt>Object.equals</tt>
     * method must also override the <tt>Object.hashCode</tt> method in order
     * to satisfy the general contract for the <tt>Object.hashCode</tt>method.
     * In particular, <tt>c1.equals(c2)</tt> implies that
     * <tt>c1.hashCode()==c2.hashCode()</tt>.
     *
     * @return the hash code value for this collection
     *
     * @see Object#hashCode()
     * @see Object#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This exception may be thrown by methods that have detected concurrent
 * modification of an object when such modification is not permissible.
 * <p>
 * For example, it is not generally permissible for one thread to modify a Collection
 * while another thread is iterating over it.  In general, the results of the
 * iteration are undefined under these circumstances.  Some Iterator
 * implementations (including those of all the general purpose collection implementations
 * provided by the JRE) may choose to throw this exception if this behavior is
 * detected.  Iterators that do this are known as <i>fail-fast</i> iterators,
 * as they fail quickly and cleanly, rather that risking arbitrary,
 * non-deterministic behavior at an undetermined time in the future.
 * <p>
 * Note that this exception does not always indicate that an object has
 * been concurrently modified by a <i>different</i> thread.  If a single
 * thread issues a sequence of method invocations that violates the
 * contract of an object, the object may throw this exception.  For
 * example, if a thread modifies a collection directly while it is
 * iterating over the collection with a fail-fast iterator, the iterator
 * will throw this exception.
 *
 * <p>Note that fail-fast behavior cannot be guaranteed as it is, generally
 * speaking, impossible to make any hard guarantees in the presence of
 * unsynchronized concurrent modification.  Fail-fast operations
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i><tt>ConcurrentModificationException</tt>
 * should be used only to detect bugs.</i>
 *
 * @author  Josh Bloch
 * @see     Collection
 * @see     Iterator
 * @see     ListIterator
 * @see     Vector
 * @see     LinkedList
 * @see     HashSet
 * @see     Hashtable
 * @see     TreeMap
 * @see     AbstractList
 * @since   1.2
 */
public class ConcurrentModificationException extends RuntimeException {
    /**
     * Constructs a ConcurrentModificationException with no
     * detail message.
     */
    public ConcurrentModificationException() {
    }

    /**
     * Constructs a <tt>ConcurrentModificationException</tt> with the
     * specified detail message.
     *
     * @param message the detail message pertaining to this exception.
     */
    public ConcurrentModificationException(String message) {
        super(message);
    }
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Hash table based implementation of the <tt>Map</tt> interface.  This
 * implementation provides all of the optional map operations, and permits
 * <tt>null</tt> values and the <tt>null</tt> key.  (The <tt>HashMap</tt>
 * class is roughly equivalent to <tt>Hashtable</tt>, except that it is
 * unsynchronized and permits nulls.)  This class makes no guarantees as to
 * the order of the map; in particular, it does not guarantee that the order
 * will remain constant over time.
 *
 * <p>This implementation provides constant-time performance for the basic
 * operations (<tt>get</tt> and <tt>put</tt>), assuming the hash function
 * disperses the elements properly among the buckets.  Iteration over
 * collection views requires time proportional to the "capacity" of the
 * <tt>HashMap</tt> instance (the number of buckets) plus its size (the number
 * of key-value mappings).  Thus, it's very important not to set the initial
 * capacity too high (or the load factor too low) if iteration performance is
 * important.
 *
 * <p>An instance of <tt>HashMap</tt> has two parameters that affect its
 * performance: <i>initial capacity</i> and <i>load factor</i>.  The
 * <i>capacity</i> is the number of buckets in the hash table, and the initial
 * capacity is simply the capacity at the time the hash table is created.  The
 * <i>load factor</i> is a measure of how full the hash table is allowed to
 * get before its capacity is automatically increased.  When the number of
 * entries in the hash table exceeds the product of the load factor and the
 * current capacity, the hash table is <i>rehashed</i> (that is, internal data
 * structures are rebuilt) so that the hash table has approximately twice the
 * number of buckets.
 *
 * <p>As a general rule, the default load factor (.75) offers a good tradeoff
 * between time and space costs.  Higher values decrease the space overhead
 * but increase the lookup cost (reflected in most of the operations of the
 * <tt>HashMap</tt> class, including <tt>get</tt> and <tt>put</tt>).  The
 * expected number of entries in the map and its load factor should be taken
 * into account when setting its initial capacity, so as to minimize the
 * number of rehash operations.  If the initial capacity is greater
 * than the maximum number of entries divided by the load factor, no
 * rehash operations will ever occur.
 *
 * <p>If many mappings are to be stored in a <tt>HashMap</tt> instance,
 * creating it with a sufficiently large capacity will allow the mappings to
 * be stored more efficiently than letting it perform automatic rehashing as
 * needed to grow the table.
 *
 * <p><strong>Note that this implementation is not synchronized.</strong>
 * If multiple threads access a hash map concurrently, and at least one of
 * the threads modifies the map structurally, it <i>must</i> be
 * synchronized externally.  (A structural modification is any operation
 * that adds or deletes one or more mappings; merely changing the value
 * associated with a key that an instance already contains is not a
 * structural modification.)  This is typically accomplished by
 * synchronizing on some object that naturally encapsulates the map.
 *
 * If no such object exists, the map should be "wrapped" using the
 * {@link Collections#synchronizedMap Collections.synchronizedMap}
 * method.  This is best done at creation time, to prevent accidental
 * unsynchronized access to the map:<pre>
 *   Map m = Collections.synchronizedMap(new HashMap(...));</pre>
 *
 * <p>The iterators returned by all of this class's "collection view methods"
 * are <i>fail-fast</i>: if the map is structurally modified at any time after
 * the iterator is created, in any way except through the iterator's own
 * <tt>remove</tt> method, the iterator will throw a
 * {@link ConcurrentModificationException}.  Thus, in the face of concurrent
 * modification, the iterator fails quickly and cleanly, rather than risking
 * arbitrary, non-deterministic behavior at an undetermined time in the
 * future.
 *
 * <p>Note that the fail-fast behavior of an iterator cannot be guaranteed
 * as it is, generally speaking, impossible to make any hard guarantees in the
 * presence of unsynchronized concurrent modification.  Fail-fast iterators
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i>the fail-fast behavior of iterators
 * should be used only to detect bugs.</i>
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @param <K> the type of keys maintained by this map
 * @param <V> the type of mapped values
 *
 * @author  Doug Lea
 * @author  Josh Bloch
 * @author  Arthur van Hoff
 * @author  Neal Gafter
 * @see     Object#hashCode()
 * @see     Collection
 * @see     Map
 * @see     TreeMap
 * @see     Hashtable
 * @since   1.2
 */

public class HashMap<K,V>
    extends AbstractMap<K,V>
    implements Map<K,V>, Cloneable
{

    /**
     * The default initial capacity - MUST be a power of two.
     */
    static final int DEFAULT_INITIAL_CAPACITY = 16;

    /**
     * The maximum capacity, used if a higher value is implicitly specified
     * by either of the constructors with arguments.
     * MUST be a power of two <= 1<<30.
     */
    static final int MAXIMUM_CAPACITY = 1 << 30;

    /**
     * The load factor used when none specified in constructor.
     */
    static final float DEFAULT_LOAD_FACTOR = 0.75f;

    /**
     * The table, resized as necessary. Length MUST Always be a power of two.
     */
    transient Entry[] table;

    /**
     * The number of key-value mappings contained in this map.
     */
    transient int size;

    /**
     * The next size value at which to resize (capacity * load factor).
     * @serial
     */
    int threshold;

    /**
     * The load factor for the hash table.
     *
     * @serial
     */
    final float loadFactor;

    /**
     * The number of times this HashMap has been structurally modified
     * Structural modifications are those that change the number of mappings in
     * the HashMap or otherwise modify its internal structure (e.g.,
     * rehash).  This field is used to make iterators on Collection-views of
     * the HashMap fail-fast.  (See ConcurrentModificationException).
     */
    transient volatile int modCount;

    /**
     * Constructs an empty <tt>HashMap</tt> with the specified initial
     * capacity and load factor.
     *
     * @param  initialCapacity the initial capacity
     * @param  loadFactor      the load factor
     * @throws IllegalArgumentException if the initial capacity is negative
     *         or the load factor is nonpositive
     */
    public HashMap(int initialCapacity, float loadFactor) {
        if (initialCapacity < 0)
            throw new IllegalArgumentException("Illegal initial capacity: " +
                                               initialCapacity);
        if (initialCapacity > MAXIMUM_CAPACITY)
            initialCapacity = MAXIMUM_CAPACITY;
        if (loadFactor <= 0 || Float.isNaN(loadFactor))
            throw new IllegalArgumentException("Illegal load factor: " +
                                               loadFactor);

        // Find a power of 2 >= initialCapacity
        int capacity = 1;
        while (capacity < initialCapacity)
            capacity <<= 1;

        this.loadFactor = loadFactor;
        threshold = (int)(capacity * loadFactor);
        table = new Entry[capacity];
        init();
    }

    /**
     * Constructs an empty <tt>HashMap</tt> with the specified initial
     * capacity and the default load factor (0.75).
     *
     * @param  initialCapacity the initial capacity.
     * @throws IllegalArgumentException if the initial capacity is negative.
     */
    public HashMap(int initialCapacity) {
        this(initialCapacity, DEFAULT_LOAD_FACTOR);
    }

    /**
     * Constructs an empty <tt>HashMap</tt> with the default initial capacity
     * (16) and the default load factor (0.75).
     */
    public HashMap() {
        this.loadFactor = DEFAULT_LOAD_FACTOR;
        threshold = (int)(DEFAULT_INITIAL_CAPACITY * DEFAULT_LOAD_FACTOR);
        table = new Entry[DEFAULT_INITIAL_CAPACITY];
        init();
    }

    /**
     * Constructs a new <tt>HashMap</tt> with the same mappings as the
     * specified <tt>Map</tt>.  The <tt>HashMap</tt> is created with
     * default load factor (0.75) and an initial capacity sufficient to
     * hold the mappings in the specified <tt>Map</tt>.
     *
     * @param   m the map whose mappings are to be placed in this map
     * @throws  NullPointerException if the specified map is null
     */
    public HashMap(Map<? extends K, ? extends V> m) {
        this(Math.max((int) (m.size() / DEFAULT_LOAD_FACTOR) + 1,
                      DEFAULT_INITIAL_CAPACITY), DEFAULT_LOAD_FACTOR);
        putAllForCreate(m);
    }

    // internal utilities

    /**
     * Initialization hook for subclasses. This method is called
     * in all constructors and pseudo-constructors (clone, readObject)
     * after HashMap has been initialized but before any entries have
     * been inserted.  (In the absence of this method, readObject would
     * require explicit knowledge of subclasses.)
     */
    void init() {
    }

    /**
     * Applies a supplemental hash function to a given hashCode, which
     * defends against poor quality hash functions.  This is critical
     * because HashMap uses power-of-two length hash tables, that
     * otherwise encounter collisions for hashCodes that do not differ
     * in lower bits. Note: Null keys always map to hash 0, thus index 0.
     */
    static int hash(int h) {
        // This function ensures that hashCodes that differ only by
        // constant multiples at each bit position have a bounded
        // number of collisions (approximately 8 at default load factor).
        h ^= (h >>> 20) ^ (h >>> 12);
        return h ^ (h >>> 7) ^ (h >>> 4);
    }

    /**
     * Returns index for hash code h.
     */
    static int indexFor(int h, int length) {
        return h & (length-1);
    }

    /**
     * Returns the number of key-value mappings in this map.
     *
     * @return the number of key-value mappings in this map
     */
    public int size() {
        return size;
    }

    /**
     * Returns <tt>true</tt> if this map contains no key-value mappings.
     *
     * @return <tt>true</tt> if this map contains no key-value mappings
     */
    public boolean isEmpty() {
        return size == 0;
    }

    /**
     * Returns the value to which the specified key is mapped,
     * or {@code null} if this map contains no mapping for the key.
     *
     * <p>More formally, if this map contains a mapping from a key
     * {@code k} to a value {@code v} such that {@code (key==null ? k==null :
     * key.equals(k))}, then this method returns {@code v}; otherwise
     * it returns {@code null}.  (There can be at most one such mapping.)
     *
     * <p>A return value of {@code null} does not <i>necessarily</i>
     * indicate that the map contains no mapping for the key; it's also
     * possible that the map explicitly maps the key to {@code null}.
     * The {@link #containsKey containsKey} operation may be used to
     * distinguish these two cases.
     *
     * @see #put(Object, Object)
     */
    public V get(Object key) {
        if (key == null)
            return getForNullKey();
        int hash = hash(key.hashCode());
        for (Entry<K,V> e = table[indexFor(hash, table.length)];
             e != null;
             e = e.next) {
            Object k;
            if (e.hash == hash && ((k = e.key) == key || key.equals(k)))
                return e.value;
        }
        return null;
    }

    /**
     * Offloaded version of get() to look up null keys.  Null keys map
     * to index 0.  This null case is split out into separate methods
     * for the sake of performance in the two most commonly used
     * operations (get and put), but incorporated with conditionals in
     * others.
     */
    private V getForNullKey() {
        for (Entry<K,V> e = table[0]; e != null; e = e.next) {
            if (e.key == null)
                return e.value;
        }
        return null;
    }

    /**
     * Returns <tt>true</tt> if this map contains a mapping for the
     * specified key.
     *
     * @param   key   The key whose presence in this map is to be tested
     * @return <tt>true</tt> if this map contains a mapping for the specified
     * key.
     */
    public boolean containsKey(Object key) {
        return getEntry(key) != null;
    }

    /**
     * Returns the entry associated with the specified key in the
     * HashMap.  Returns null if the HashMap contains no mapping
     * for the key.
     */
    final Entry<K,V> getEntry(Object key) {
        int hash = (key == null) ? 0 : hash(key.hashCode());
        for (Entry<K,V> e = table[indexFor(hash, table.length)];
             e != null;
             e = e.next) {
            Object k;
            if (e.hash == hash &&
                ((k = e.key) == key || (key != null && key.equals(k))))
                return e;
        }
        return null;
    }


    /**
     * Associates the specified value with the specified key in this map.
     * If the map previously contained a mapping for the key, the old
     * value is replaced.
     *
     * @param key key with which the specified value is to be associated
     * @param value value to be associated with the specified key
     * @return the previous value associated with <tt>key</tt>, or
     *         <tt>null</tt> if there was no mapping for <tt>key</tt>.
     *         (A <tt>null</tt> return can also indicate that the map
     *         previously associated <tt>null</tt> with <tt>key</tt>.)
     */
    public V put(K key, V value) {
        if (key == null)
            return putForNullKey(value);
        int hash = hash(key.hashCode());
        int i = indexFor(hash, table.length);
        for (Entry<K,V> e = table[i]; e != null; e = e.next) {
            Object k;
            if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {
                V oldValue = e.value;
                e.value = value;
                e.recordAccess(this);
                return oldValue;
            }
        }

        modCount++;
        addEntry(hash, key, value, i);
        return null;
    }

    /**
     * Offloaded version of put for null keys
     */
    private V putForNullKey(V value) {
        for (Entry<K,V> e = table[0]; e != null; e = e.next) {
            if (e.key == null) {
                V oldValue = e.value;
                e.value = value;
                e.recordAccess(this);
                return oldValue;
            }
        }
        modCount++;
        addEntry(0, null, value, 0);
        return null;
    }

    /**
     * This method is used instead of put by constructors and
     * pseudoconstructors (clone, readObject).  It does not resize the table,
     * check for comodification, etc.  It calls createEntry rather than
     * addEntry.
     */
    private void putForCreate(K key, V value) {
        int hash = (key == null) ? 0 : hash(key.hashCode());
        int i = indexFor(hash, table.length);

        /**
         * Look for preexisting entry for key.  This will never happen for
         * clone or deserialize.  It will only happen for construction if the
         * input Map is a sorted map whose ordering is inconsistent w/ equals.
         */
        for (Entry<K,V> e = table[i]; e != null; e = e.next) {
            Object k;
            if (e.hash == hash &&
                ((k = e.key) == key || (key != null && key.equals(k)))) {
                e.value = value;
                return;
            }
        }

        createEntry(hash, key, value, i);
    }

    private void putAllForCreate(Map<? extends K, ? extends V> m) {
        for (Iterator<? extends Map.Entry<? extends K, ? extends V>> i = m.entrySet().iterator(); i.hasNext(); ) {
            Map.Entry<? extends K, ? extends V> e = i.next();
            putForCreate(e.getKey(), e.getValue());
        }
    }

    /**
     * Rehashes the contents of this map into a new array with a
     * larger capacity.  This method is called automatically when the
     * number of keys in this map reaches its threshold.
     *
     * If current capacity is MAXIMUM_CAPACITY, this method does not
     * resize the map, but sets threshold to Integer.MAX_VALUE.
     * This has the effect of preventing future calls.
     *
     * @param newCapacity the new capacity, MUST be a power of two;
     *        must be greater than current capacity unless current
     *        capacity is MAXIMUM_CAPACITY (in which case value
     *        is irrelevant).
     */
    void resize(int newCapacity) {
        Entry[] oldTable = table;
        int oldCapacity = oldTable.length;
        if (oldCapacity == MAXIMUM_CAPACITY) {
            threshold = Integer.MAX_VALUE;
            return;
        }

        Entry[] newTable = new Entry[newCapacity];
        transfer(newTable);
        table = newTable;
        threshold = (int)(newCapacity * loadFactor);
    }

    /**
     * Transfers all entries from current table to newTable.
     */
    void transfer(Entry[] newTable) {
        Entry[] src = table;
        int newCapacity = newTable.length;
        for (int j = 0; j < src.length; j++) {
            Entry<K,V> e = src[j];
            if (e != null) {
                src[j] = null;
                do {
                    Entry<K,V> next = e.next;
                    int i = indexFor(e.hash, newCapacity);
                    e.next = newTable[i];
                    newTable[i] = e;
                    e = next;
                } while (e != null);
            }
        }
    }

    /**
     * Copies all of the mappings from the specified map to this map.
     * These mappings will replace any mappings that this map had for
     * any of the keys currently in the specified map.
     *
     * @param m mappings to be stored in this map
     * @throws NullPointerException if the specified map is null
     */
    public void putAll(Map<? extends K, ? extends V> m) {
        int numKeysToBeAdded = m.size();
        if (numKeysToBeAdded == 0)
            return;

        /*
         * Expand the map if the map if the number of mappings to be added
         * is greater than or equal to threshold.  This is conservative; the
         * obvious condition is (m.size() + size) >= threshold, but this
         * condition could result in a map with twice the appropriate capacity,
         * if the keys to be added overlap with the keys already in this map.
         * By using the conservative calculation, we subject ourself
         * to at most one extra resize.
         */
        if (numKeysToBeAdded > threshold) {
            int targetCapacity = (int)(numKeysToBeAdded / loadFactor + 1);
            if (targetCapacity > MAXIMUM_CAPACITY)
                targetCapacity = MAXIMUM_CAPACITY;
            int newCapacity = table.length;
            while (newCapacity < targetCapacity)
                newCapacity <<= 1;
            if (newCapacity > table.length)
                resize(newCapacity);
        }

        for (Iterator<? extends Map.Entry<? extends K, ? extends V>> i = m.entrySet().iterator(); i.hasNext(); ) {
            Map.Entry<? extends K, ? extends V> e = i.next();
            put(e.getKey(), e.getValue());
        }
    }

    /**
     * Removes the mapping for the specified key from this map if present.
     *
     * @param  key key whose mapping is to be removed from the map
     * @return the previous value associated with <tt>key</tt>, or
     *         <tt>null</tt> if there was no mapping for <tt>key</tt>.
     *         (A <tt>null</tt> return can also indicate that the map
     *         previously associated <tt>null</tt> with <tt>key</tt>.)
     */
    public V remove(Object key) {
        Entry<K,V> e = removeEntryForKey(key);
        return (e == null ? null : e.value);
    }

    /**
     * Removes and returns the entry associated with the specified key
     * in the HashMap.  Returns null if the HashMap contains no mapping
     * for this key.
     */
    final Entry<K,V> removeEntryForKey(Object key) {
        int hash = (key == null) ? 0 : hash(key.hashCode());
        int i = indexFor(hash, table.length);
        Entry<K,V> prev = table[i];
        Entry<K,V> e = prev;

        while (e != null) {
            Entry<K,V> next = e.next;
            Object k;
            if (e.hash == hash &&
                ((k = e.key) == key || (key != null && key.equals(k)))) {
                modCount++;
                size--;
                if (prev == e)
                    table[i] = next;
                else
                    prev.next = next;
                e.recordRemoval(this);
                return e;
            }
            prev = e;
            e = next;
        }

        return e;
    }

    /**
     * Special version of remove for EntrySet.
     */
    final Entry<K,V> removeMapping(Object o) {
        if (!(o instanceof Map.Entry))
            return null;

        Map.Entry<K,V> entry = (Map.Entry<K,V>) o;
        Object key = entry.getKey();
        int hash = (key == null) ? 0 : hash(key.hashCode());
        int i = indexFor(hash, table.length);
        Entry<K,V> prev = table[i];
        Entry<K,V> e = prev;

        while (e != null) {
            Entry<K,V> next = e.next;
            if (e.hash == hash && e.equals(entry)) {
                modCount++;
                size--;
                if (prev == e)
                    table[i] = next;
                else
                    prev.next = next;
                e.recordRemoval(this);
                return e;
            }
            prev = e;
            e = next;
        }

        return e;
    }

    /**
     * Removes all of the mappings from this map.
     * The map will be empty after this call returns.
     */
    public void clear() {
        modCount++;
        Entry[] tab = table;
        for (int i = 0; i < tab.length; i++)
            tab[i] = null;
        size = 0;
    }

    /**
     * Returns <tt>true</tt> if this map maps one or more keys to the
     * specified value.
     *
     * @param value value whose presence in this map is to be tested
     * @return <tt>true</tt> if this map maps one or more keys to the
     *         specified value
     */
    public boolean containsValue(Object value) {
        if (value == null)
            return containsNullValue();

        Entry[] tab = table;
        for (int i = 0; i < tab.length ; i++)
            for (Entry e = tab[i] ; e != null ; e = e.next)
                if (value.equals(e.value))
                    return true;
        return false;
    }

    /**
     * Special-case code for containsValue with null argument
     */
    private boolean containsNullValue() {
        Entry[] tab = table;
        for (int i = 0; i < tab.length ; i++)
            for (Entry e = tab[i] ; e != null ; e = e.next)
                if (e.value == null)
                    return true;
        return false;
    }

    /**
     * Returns a shallow copy of this <tt>HashMap</tt> instance: the keys and
     * values themselves are not cloned.
     *
     * @return a shallow copy of this map
     */
    public Object clone() {
        HashMap<K,V> result = null;
        try {
            result = (HashMap<K,V>)super.clone();
        } catch (CloneNotSupportedException e) {
            // assert false;
        }
        result.table = new Entry[table.length];
        result.entrySet = null;
        result.modCount = 0;
        result.size = 0;
        result.init();
        result.putAllForCreate(this);

        return result;
    }

    static class Entry<K,V> implements Map.Entry<K,V> {
        final K key;
        V value;
        Entry<K,V> next;
        final int hash;

        /**
         * Creates new entry.
         */
        Entry(int h, K k, V v, Entry<K,V> n) {
            value = v;
            next = n;
            key = k;
            hash = h;
        }

        public final K getKey() {
            return key;
        }

        public final V getValue() {
            return value;
        }

        public final V setValue(V newValue) {
            V oldValue = value;
            value = newValue;
            return oldValue;
        }

        public final boolean equals(Object o) {
            if (!(o instanceof Map.Entry))
                return false;
            Map.Entry e = (Map.Entry)o;
            Object k1 = getKey();
            Object k2 = e.getKey();
            if (k1 == k2 || (k1 != null && k1.equals(k2))) {
                Object v1 = getValue();
                Object v2 = e.getValue();
                if (v1 == v2 || (v1 != null && v1.equals(v2)))
                    return true;
            }
            return false;
        }

        public final int hashCode() {
            return (key==null   ? 0 : key.hashCode()) ^
                   (value==null ? 0 : value.hashCode());
        }

        public final String toString() {
            return getKey() + "=" + getValue();
        }

        /**
         * This method is invoked whenever the value in an entry is
         * overwritten by an invocation of put(k,v) for a key k that's already
         * in the HashMap.
         */
        void recordAccess(HashMap<K,V> m) {
        }

        /**
         * This method is invoked whenever the entry is
         * removed from the table.
         */
        void recordRemoval(HashMap<K,V> m) {
        }
    }

    /**
     * Adds a new entry with the specified key, value and hash code to
     * the specified bucket.  It is the responsibility of this
     * method to resize the table if appropriate.
     *
     * Subclass overrides this to alter the behavior of put method.
     */
    void addEntry(int hash, K key, V value, int bucketIndex) {
        Entry<K,V> e = table[bucketIndex];
        table[bucketIndex] = new Entry<K,V>(hash, key, value, e);
        if (size++ >= threshold)
            resize(2 * table.length);
    }

    /**
     * Like addEntry except that this version is used when creating entries
     * as part of Map construction or "pseudo-construction" (cloning,
     * deserialization).  This version needn't worry about resizing the table.
     *
     * Subclass overrides this to alter the behavior of HashMap(Map),
     * clone, and readObject.
     */
    void createEntry(int hash, K key, V value, int bucketIndex) {
        Entry<K,V> e = table[bucketIndex];
        table[bucketIndex] = new Entry<K,V>(hash, key, value, e);
        size++;
    }

    private abstract class HashIterator<E> implements Iterator<E> {
        Entry<K,V> next;        // next entry to return
        int expectedModCount;   // For fast-fail
        int index;              // current slot
        Entry<K,V> current;     // current entry

        HashIterator() {
            expectedModCount = modCount;
            if (size > 0) { // advance to first entry
                Entry[] t = table;
                while (index < t.length && (next = t[index++]) == null)
                    ;
            }
        }

        public final boolean hasNext() {
            return next != null;
        }

        final Entry<K,V> nextEntry() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
            Entry<K,V> e = next;
            if (e == null)
                throw new NoSuchElementException();

            if ((next = e.next) == null) {
                Entry[] t = table;
                while (index < t.length && (next = t[index++]) == null)
                    ;
            }
            current = e;
            return e;
        }

        public void remove() {
            if (current == null)
                throw new IllegalStateException();
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
            Object k = current.key;
            current = null;
            HashMap.this.removeEntryForKey(k);
            expectedModCount = modCount;
        }

    }

    private final class ValueIterator extends HashIterator<V> {
        public V next() {
            return nextEntry().value;
        }
    }

    private final class KeyIterator extends HashIterator<K> {
        public K next() {
            return nextEntry().getKey();
        }
    }

    private final class EntryIterator extends HashIterator<Map.Entry<K,V>> {
        public Map.Entry<K,V> next() {
            return nextEntry();
        }
    }

    // Subclass overrides these to alter behavior of views' iterator() method
    Iterator<K> newKeyIterator()   {
        return new KeyIterator();
    }
    Iterator<V> newValueIterator()   {
        return new ValueIterator();
    }
    Iterator<Map.Entry<K,V>> newEntryIterator()   {
        return new EntryIterator();
    }


    // Views

    private transient Set<Map.Entry<K,V>> entrySet = null;

    /**
     * Returns a {@link Set} view of the keys contained in this map.
     * The set is backed by the map, so changes to the map are
     * reflected in the set, and vice-versa.  If the map is modified
     * while an iteration over the set is in progress (except through
     * the iterator's own <tt>remove</tt> operation), the results of
     * the iteration are undefined.  The set supports element removal,
     * which removes the corresponding mapping from the map, via the
     * <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,
     * <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>
     * operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>
     * operations.
     */
    public Set<K> keySet() {
        Set<K> ks = keySet;
        return (ks != null ? ks : (keySet = new KeySet()));
    }

    private final class KeySet extends AbstractSet<K> {
        public Iterator<K> iterator() {
            return newKeyIterator();
        }
        public int size() {
            return size;
        }
        public boolean contains(Object o) {
            return containsKey(o);
        }
        public boolean remove(Object o) {
            return HashMap.this.removeEntryForKey(o) != null;
        }
        public void clear() {
            HashMap.this.clear();
        }
        public Object[] toArray() {
            Object[] res = new Object[size];
            Iterator<K> it = iterator();
            int i = 0;
            while (it.hasNext())
                res[i++] = it.next();
            return res;
        }
        public <T> T[] toArray(T[] a) {
            a = (T[])java.lang.reflect.Array.newInstance(
                        a.getClass().getComponentType(), size);
            Object[] res = a;
            Iterator<K> it = iterator();
            int i = 0;
            while (it.hasNext())
                res[i++] = it.next();
            return a;
        }
    }

    /**
     * Returns a {@link Collection} view of the values contained in this map.
     * The collection is backed by the map, so changes to the map are
     * reflected in the collection, and vice-versa.  If the map is
     * modified while an iteration over the collection is in progress
     * (except through the iterator's own <tt>remove</tt> operation),
     * the results of the iteration are undefined.  The collection
     * supports element removal, which removes the corresponding
     * mapping from the map, via the <tt>Iterator.remove</tt>,
     * <tt>Collection.remove</tt>, <tt>removeAll</tt>,
     * <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not
     * support the <tt>add</tt> or <tt>addAll</tt> operations.
     */
    public Collection<V> values() {
        Collection<V> vs = values;
        return (vs != null ? vs : (values = new Values()));
    }

    private final class Values extends AbstractCollection<V> {
        public Iterator<V> iterator() {
            return newValueIterator();
        }
        public int size() {
            return size;
        }
        public boolean contains(Object o) {
            return containsValue(o);
        }
        public void clear() {
            HashMap.this.clear();
        }
    }

    /**
     * Returns a {@link Set} view of the mappings contained in this map.
     * The set is backed by the map, so changes to the map are
     * reflected in the set, and vice-versa.  If the map is modified
     * while an iteration over the set is in progress (except through
     * the iterator's own <tt>remove</tt> operation, or through the
     * <tt>setValue</tt> operation on a map entry returned by the
     * iterator) the results of the iteration are undefined.  The set
     * supports element removal, which removes the corresponding
     * mapping from the map, via the <tt>Iterator.remove</tt>,
     * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and
     * <tt>clear</tt> operations.  It does not support the
     * <tt>add</tt> or <tt>addAll</tt> operations.
     *
     * @return a set view of the mappings contained in this map
     */
    public Set<Map.Entry<K,V>> entrySet() {
        return entrySet0();
    }

    private Set<Map.Entry<K,V>> entrySet0() {
        Set<Map.Entry<K,V>> es = entrySet;
        return es != null ? es : (entrySet = new EntrySet());
    }

    private final class EntrySet extends AbstractSet<Map.Entry<K,V>> {
        public Iterator<Map.Entry<K,V>> iterator() {
            return newEntryIterator();
        }
        public boolean contains(Object o) {
            if (!(o instanceof Map.Entry))
                return false;
            Map.Entry<K,V> e = (Map.Entry<K,V>) o;
            Entry<K,V> candidate = getEntry(e.getKey());
            return candidate != null && candidate.equals(e);
        }
        public boolean remove(Object o) {
            return removeMapping(o) != null;
        }
        public int size() {
            return size;
        }
        public void clear() {
            HashMap.this.clear();
        }
        public Object[] toArray() {
            Object[] res = new Object[size];
            Iterator<Map.Entry<K,V>> it = iterator();
            int i = 0;
            while (it.hasNext())
                res[i++] = it.next();
            return res;
        }
        public <T> T[] toArray(T[] a) {
            a = (T[])java.lang.reflect.Array.newInstance(
                        a.getClass().getComponentType(), size);
            Object[] res = a;
            Iterator<Map.Entry<K,V>> it = iterator();
            int i = 0;
            while (it.hasNext())
                res[i++] = it.next();
            return a;
        }
    }

    private static final long serialVersionUID = 362498820763181265L;
}


/*
 * Copyright 1994-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that a method has been passed an illegal or
 * inappropriate argument.
 *
 * @author  unascribed
 * @see     java.lang.Thread#setPriority(int)
 * @since   JDK1.0
 */
public
class IllegalArgumentException extends RuntimeException {
    /**
     * Constructs an <code>IllegalArgumentException</code> with no
     * detail message.
     */
    public IllegalArgumentException() {
        super();
    }

    /**
     * Constructs an <code>IllegalArgumentException</code> with the
     * specified detail message.
     *
     * @param   s   the detail message.
     */
    public IllegalArgumentException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalArgumentException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalArgumentException(Throwable cause) {
        super(cause);
    }

    private static final long serialVersionUID = -5365630128856068164L;
}


/*
 * Copyright 1996-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Signals that a method has been invoked at an illegal or
 * inappropriate time.  In other words, the Java environment or
 * Java application is not in an appropriate state for the requested
 * operation.
 *
 * @author  Jonni Kanerva
 * @since   JDK1.1
 */
public
class IllegalStateException extends RuntimeException {
    /**
     * Constructs an IllegalStateException with no detail message.
     * A detail message is a String that describes this particular exception.
     */
    public IllegalStateException() {
        super();
    }

    /**
     * Constructs an IllegalStateException with the specified detail
     * message.  A detail message is a String that describes this particular
     * exception.
     *
     * @param s the String that contains a detailed message
     */
    public IllegalStateException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalStateException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalStateException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1848914673093119416L;
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator over a collection.  {@code Iterator} takes the place of
 * {@link Enumeration} in the Java Collections Framework.  Iterators
 * differ from enumerations in two ways:
 *
 * <ul>
 *      <li> Iterators allow the caller to remove elements from the
 *           underlying collection during the iteration with well-defined
 *           semantics.
 *      <li> Method names have been improved.
 * </ul>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see ListIterator
 * @see Iterable
 * @since 1.2
 */
public interface Iterator<E> {
    /**
     * Returns {@code true} if the iteration has more elements.
     * (In other words, returns {@code true} if {@link #next} would
     * return an element rather than throwing an exception.)
     *
     * @return {@code true} if the iteration has more elements
     */
    boolean hasNext();

    /**
     * Returns the next element in the iteration.
     *
     * @return the next element in the iteration
     * @throws NoSuchElementException if the iteration has no more elements
     */
    E next();

    /**
     * Removes from the underlying collection the last element returned
     * by this iterator (optional operation).  This method can be called
     * only once per call to {@link #next}.  The behavior of an iterator
     * is unspecified if the underlying collection is modified while the
     * iteration is in progress in any way other than by calling this
     * method.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this iterator
     *
     * @throws IllegalStateException if the {@code next} method has not
     *         yet been called, or the {@code remove} method has already
     *         been called after the last call to the {@code next}
     *         method
     */
    void remove();
}


package javaUtilEx;

public class juHashMapCreateHashCode {
	public static void main(String[] args) {
		Random.args = args;

		HashMap<Content,Content> m = createMap(Random.random());
		int hashCode  = m.hashCode();
	}

	public static HashMap<Content, Content> createMap(int n) {
		HashMap<Content,Content> m = new HashMap<Content,Content>();
		while (n > 0) {
			Content key = new Content(Random.random());
			Content val = new Content(Random.random());
			m.put(key, val);
			n--;
		}
		return m;
	}
}

final class Content {
	int val;

	public Content(int v) {
		this.val = v;
	}

	public int hashCode() {
		return val^31;
	}

	public boolean equals(Object o) {
		if (o instanceof Content) {
			return this.val == ((Content) o).val;
		}
		return false;
	}
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An object that maps keys to values.  A map cannot contain duplicate keys;
 * each key can map to at most one value.
 *
 * <p>This interface takes the place of the <tt>Dictionary</tt> class, which
 * was a totally abstract class rather than an interface.
 *
 * <p>The <tt>Map</tt> interface provides three <i>collection views</i>, which
 * allow a map's contents to be viewed as a set of keys, collection of values,
 * or set of key-value mappings.  The <i>order</i> of a map is defined as
 * the order in which the iterators on the map's collection views return their
 * elements.  Some map implementations, like the <tt>TreeMap</tt> class, make
 * specific guarantees as to their order; others, like the <tt>HashMap</tt>
 * class, do not.
 *
 * <p>Note: great care must be exercised if mutable objects are used as map
 * keys.  The behavior of a map is not specified if the value of an object is
 * changed in a manner that affects <tt>equals</tt> comparisons while the
 * object is a key in the map.  A special case of this prohibition is that it
 * is not permissible for a map to contain itself as a key.  While it is
 * permissible for a map to contain itself as a value, extreme caution is
 * advised: the <tt>equals</tt> and <tt>hashCode</tt> methods are no longer
 * well defined on such a map.
 *
 * <p>All general-purpose map implementation classes should provide two
 * "standard" constructors: a void (no arguments) constructor which creates an
 * empty map, and a constructor with a single argument of type <tt>Map</tt>,
 * which creates a new map with the same key-value mappings as its argument.
 * In effect, the latter constructor allows the user to copy any map,
 * producing an equivalent map of the desired class.  There is no way to
 * enforce this recommendation (as interfaces cannot contain constructors) but
 * all of the general-purpose map implementations in the JDK comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the map on which they operate, are specified to throw
 * <tt>UnsupportedOperationException</tt> if this map does not support the
 * operation.  If this is the case, these methods may, but are not required
 * to, throw an <tt>UnsupportedOperationException</tt> if the invocation would
 * have no effect on the map.  For example, invoking the {@link #putAll(Map)}
 * method on an unmodifiable map may, but is not required to, throw the
 * exception if the map whose mappings are to be "superimposed" is empty.
 *
 * <p>Some map implementations have restrictions on the keys and values they
 * may contain.  For example, some implementations prohibit null keys and
 * values, and some have restrictions on the types of their keys.  Attempting
 * to insert an ineligible key or value throws an unchecked exception,
 * typically <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.
 * Attempting to query the presence of an ineligible key or value may throw an
 * exception, or it may simply return false; some implementations will exhibit
 * the former behavior and some will exhibit the latter.  More generally,
 * attempting an operation on an ineligible key or value whose completion
 * would not result in the insertion of an ineligible element into the map may
 * throw an exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * <p>Many methods in Collections Framework interfaces are defined
 * in terms of the {@link Object#equals(Object) equals} method.  For
 * example, the specification for the {@link #containsKey(Object)
 * containsKey(Object key)} method says: "returns <tt>true</tt> if and
 * only if this map contains a mapping for a key <tt>k</tt> such that
 * <tt>(key==null ? k==null : key.equals(k))</tt>." This specification should
 * <i>not</i> be construed to imply that invoking <tt>Map.containsKey</tt>
 * with a non-null argument <tt>key</tt> will cause <tt>key.equals(k)</tt> to
 * be invoked for any key <tt>k</tt>.  Implementations are free to
 * implement optimizations whereby the <tt>equals</tt> invocation is avoided,
 * for example, by first comparing the hash codes of the two keys.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * @param <K> the type of keys maintained by this map
 * @param <V> the type of mapped values
 *
 * @author  Josh Bloch
 * @see HashMap
 * @see TreeMap
 * @see Hashtable
 * @see SortedMap
 * @see Collection
 * @see Set
 * @since 1.2
 */
public interface Map<K,V> {
    // Query Operations

    /**
     * Returns the number of key-value mappings in this map.  If the
     * map contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of key-value mappings in this map
     */
    int size();

    /**
     * Returns <tt>true</tt> if this map contains no key-value mappings.
     *
     * @return <tt>true</tt> if this map contains no key-value mappings
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this map contains a mapping for the specified
     * key.  More formally, returns <tt>true</tt> if and only if
     * this map contains a mapping for a key <tt>k</tt> such that
     * <tt>(key==null ? k==null : key.equals(k))</tt>.  (There can be
     * at most one such mapping.)
     *
     * @param key key whose presence in this map is to be tested
     * @return <tt>true</tt> if this map contains a mapping for the specified
     *         key
     * @throws ClassCastException if the key is of an inappropriate type for
     *         this map (optional)
     * @throws NullPointerException if the specified key is null and this map
     *         does not permit null keys (optional)
     */
    boolean containsKey(Object key);

    /**
     * Returns <tt>true</tt> if this map maps one or more keys to the
     * specified value.  More formally, returns <tt>true</tt> if and only if
     * this map contains at least one mapping to a value <tt>v</tt> such that
     * <tt>(value==null ? v==null : value.equals(v))</tt>.  This operation
     * will probably require time linear in the map size for most
     * implementations of the <tt>Map</tt> interface.
     *
     * @param value value whose presence in this map is to be tested
     * @return <tt>true</tt> if this map maps one or more keys to the
     *         specified value
     * @throws ClassCastException if the value is of an inappropriate type for
     *         this map (optional)
     * @throws NullPointerException if the specified value is null and this
     *         map does not permit null values (optional)
     */
    boolean containsValue(Object value);

    /**
     * Returns the value to which the specified key is mapped,
     * or {@code null} if this map contains no mapping for the key.
     *
     * <p>More formally, if this map contains a mapping from a key
     * {@code k} to a value {@code v} such that {@code (key==null ? k==null :
     * key.equals(k))}, then this method returns {@code v}; otherwise
     * it returns {@code null}.  (There can be at most one such mapping.)
     *
     * <p>If this map permits null values, then a return value of
     * {@code null} does not <i>necessarily</i> indicate that the map
     * contains no mapping for the key; it's also possible that the map
     * explicitly maps the key to {@code null}.  The {@link #containsKey
     * containsKey} operation may be used to distinguish these two cases.
     *
     * @param key the key whose associated value is to be returned
     * @return the value to which the specified key is mapped, or
     *         {@code null} if this map contains no mapping for the key
     * @throws ClassCastException if the key is of an inappropriate type for
     *         this map (optional)
     * @throws NullPointerException if the specified key is null and this map
     *         does not permit null keys (optional)
     */
    V get(Object key);

    // Modification Operations

    /**
     * Associates the specified value with the specified key in this map
     * (optional operation).  If the map previously contained a mapping for
     * the key, the old value is replaced by the specified value.  (A map
     * <tt>m</tt> is said to contain a mapping for a key <tt>k</tt> if and only
     * if {@link #containsKey(Object) m.containsKey(k)} would return
     * <tt>true</tt>.)
     *
     * @param key key with which the specified value is to be associated
     * @param value value to be associated with the specified key
     * @return the previous value associated with <tt>key</tt>, or
     *         <tt>null</tt> if there was no mapping for <tt>key</tt>.
     *         (A <tt>null</tt> return can also indicate that the map
     *         previously associated <tt>null</tt> with <tt>key</tt>,
     *         if the implementation supports <tt>null</tt> values.)
     * @throws UnsupportedOperationException if the <tt>put</tt> operation
     *         is not supported by this map
     * @throws ClassCastException if the class of the specified key or value
     *         prevents it from being stored in this map
     * @throws NullPointerException if the specified key or value is null
     *         and this map does not permit null keys or values
     * @throws IllegalArgumentException if some property of the specified key
     *         or value prevents it from being stored in this map
     */
    V put(K key, V value);

    /**
     * Removes the mapping for a key from this map if it is present
     * (optional operation).   More formally, if this map contains a mapping
     * from key <tt>k</tt> to value <tt>v</tt> such that
     * <code>(key==null ?  k==null : key.equals(k))</code>, that mapping
     * is removed.  (The map can contain at most one such mapping.)
     *
     * <p>Returns the value to which this map previously associated the key,
     * or <tt>null</tt> if the map contained no mapping for the key.
     *
     * <p>If this map permits null values, then a return value of
     * <tt>null</tt> does not <i>necessarily</i> indicate that the map
     * contained no mapping for the key; it's also possible that the map
     * explicitly mapped the key to <tt>null</tt>.
     *
     * <p>The map will not contain a mapping for the specified key once the
     * call returns.
     *
     * @param key key whose mapping is to be removed from the map
     * @return the previous value associated with <tt>key</tt>, or
     *         <tt>null</tt> if there was no mapping for <tt>key</tt>.
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this map
     * @throws ClassCastException if the key is of an inappropriate type for
     *         this map (optional)
     * @throws NullPointerException if the specified key is null and this
     *         map does not permit null keys (optional)
     */
    V remove(Object key);


    // Bulk Operations

    /**
     * Copies all of the mappings from the specified map to this map
     * (optional operation).  The effect of this call is equivalent to that
     * of calling {@link #put(Object,Object) put(k, v)} on this map once
     * for each mapping from key <tt>k</tt> to value <tt>v</tt> in the
     * specified map.  The behavior of this operation is undefined if the
     * specified map is modified while the operation is in progress.
     *
     * @param m mappings to be stored in this map
     * @throws UnsupportedOperationException if the <tt>putAll</tt> operation
     *         is not supported by this map
     * @throws ClassCastException if the class of a key or value in the
     *         specified map prevents it from being stored in this map
     * @throws NullPointerException if the specified map is null, or if
     *         this map does not permit null keys or values, and the
     *         specified map contains null keys or values
     * @throws IllegalArgumentException if some property of a key or value in
     *         the specified map prevents it from being stored in this map
     */
    void putAll(Map<? extends K, ? extends V> m);

    /**
     * Removes all of the mappings from this map (optional operation).
     * The map will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this map
     */
    void clear();


    // Views

    /**
     * Returns a {@link Set} view of the keys contained in this map.
     * The set is backed by the map, so changes to the map are
     * reflected in the set, and vice-versa.  If the map is modified
     * while an iteration over the set is in progress (except through
     * the iterator's own <tt>remove</tt> operation), the results of
     * the iteration are undefined.  The set supports element removal,
     * which removes the corresponding mapping from the map, via the
     * <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,
     * <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>
     * operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>
     * operations.
     *
     * @return a set view of the keys contained in this map
     */
    Set<K> keySet();

    /**
     * Returns a {@link Collection} view of the values contained in this map.
     * The collection is backed by the map, so changes to the map are
     * reflected in the collection, and vice-versa.  If the map is
     * modified while an iteration over the collection is in progress
     * (except through the iterator's own <tt>remove</tt> operation),
     * the results of the iteration are undefined.  The collection
     * supports element removal, which removes the corresponding
     * mapping from the map, via the <tt>Iterator.remove</tt>,
     * <tt>Collection.remove</tt>, <tt>removeAll</tt>,
     * <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not
     * support the <tt>add</tt> or <tt>addAll</tt> operations.
     *
     * @return a collection view of the values contained in this map
     */
    Collection<V> values();

    /**
     * Returns a {@link Set} view of the mappings contained in this map.
     * The set is backed by the map, so changes to the map are
     * reflected in the set, and vice-versa.  If the map is modified
     * while an iteration over the set is in progress (except through
     * the iterator's own <tt>remove</tt> operation, or through the
     * <tt>setValue</tt> operation on a map entry returned by the
     * iterator) the results of the iteration are undefined.  The set
     * supports element removal, which removes the corresponding
     * mapping from the map, via the <tt>Iterator.remove</tt>,
     * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and
     * <tt>clear</tt> operations.  It does not support the
     * <tt>add</tt> or <tt>addAll</tt> operations.
     *
     * @return a set view of the mappings contained in this map
     */
    Set<Map.Entry<K, V>> entrySet();

    /**
     * A map entry (key-value pair).  The <tt>Map.entrySet</tt> method returns
     * a collection-view of the map, whose elements are of this class.  The
     * <i>only</i> way to obtain a reference to a map entry is from the
     * iterator of this collection-view.  These <tt>Map.Entry</tt> objects are
     * valid <i>only</i> for the duration of the iteration; more formally,
     * the behavior of a map entry is undefined if the backing map has been
     * modified after the entry was returned by the iterator, except through
     * the <tt>setValue</tt> operation on the map entry.
     *
     * @see Map#entrySet()
     * @since 1.2
     */
    interface Entry<K,V> {
        /**
         * Returns the key corresponding to this entry.
         *
         * @return the key corresponding to this entry
         * @throws IllegalStateException implementations may, but are not
         *         required to, throw this exception if the entry has been
         *         removed from the backing map.
         */
        K getKey();

        /**
         * Returns the value corresponding to this entry.  If the mapping
         * has been removed from the backing map (by the iterator's
         * <tt>remove</tt> operation), the results of this call are undefined.
         *
         * @return the value corresponding to this entry
         * @throws IllegalStateException implementations may, but are not
         *         required to, throw this exception if the entry has been
         *         removed from the backing map.
         */
        V getValue();

        /**
         * Replaces the value corresponding to this entry with the specified
         * value (optional operation).  (Writes through to the map.)  The
         * behavior of this call is undefined if the mapping has already been
         * removed from the map (by the iterator's <tt>remove</tt> operation).
         *
         * @param value new value to be stored in this entry
         * @return old value corresponding to the entry
         * @throws UnsupportedOperationException if the <tt>put</tt> operation
         *         is not supported by the backing map
         * @throws ClassCastException if the class of the specified value
         *         prevents it from being stored in the backing map
         * @throws NullPointerException if the backing map does not permit
         *         null values, and the specified value is null
         * @throws IllegalArgumentException if some property of this value
         *         prevents it from being stored in the backing map
         * @throws IllegalStateException implementations may, but are not
         *         required to, throw this exception if the entry has been
         *         removed from the backing map.
         */
        V setValue(V value);

        /**
         * Compares the specified object with this entry for equality.
         * Returns <tt>true</tt> if the given object is also a map entry and
         * the two entries represent the same mapping.  More formally, two
         * entries <tt>e1</tt> and <tt>e2</tt> represent the same mapping
         * if<pre>
         *     (e1.getKey()==null ?
         *      e2.getKey()==null : e1.getKey().equals(e2.getKey()))  &amp;&amp;
         *     (e1.getValue()==null ?
         *      e2.getValue()==null : e1.getValue().equals(e2.getValue()))
         * </pre>
         * This ensures that the <tt>equals</tt> method works properly across
         * different implementations of the <tt>Map.Entry</tt> interface.
         *
         * @param o object to be compared for equality with this map entry
         * @return <tt>true</tt> if the specified object is equal to this map
         *         entry
         */
        boolean equals(Object o);

        /**
         * Returns the hash code value for this map entry.  The hash code
         * of a map entry <tt>e</tt> is defined to be: <pre>
         *     (e.getKey()==null   ? 0 : e.getKey().hashCode()) ^
         *     (e.getValue()==null ? 0 : e.getValue().hashCode())
         * </pre>
         * This ensures that <tt>e1.equals(e2)</tt> implies that
         * <tt>e1.hashCode()==e2.hashCode()</tt> for any two Entries
         * <tt>e1</tt> and <tt>e2</tt>, as required by the general
         * contract of <tt>Object.hashCode</tt>.
         *
         * @return the hash code value for this map entry
         * @see Object#hashCode()
         * @see Object#equals(Object)
         * @see #equals(Object)
         */
        int hashCode();
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this map for equality.  Returns
     * <tt>true</tt> if the given object is also a map and the two maps
     * represent the same mappings.  More formally, two maps <tt>m1</tt> and
     * <tt>m2</tt> represent the same mappings if
     * <tt>m1.entrySet().equals(m2.entrySet())</tt>.  This ensures that the
     * <tt>equals</tt> method works properly across different implementations
     * of the <tt>Map</tt> interface.
     *
     * @param o object to be compared for equality with this map
     * @return <tt>true</tt> if the specified object is equal to this map
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this map.  The hash code of a map is
     * defined to be the sum of the hash codes of each entry in the map's
     * <tt>entrySet()</tt> view.  This ensures that <tt>m1.equals(m2)</tt>
     * implies that <tt>m1.hashCode()==m2.hashCode()</tt> for any two maps
     * <tt>m1</tt> and <tt>m2</tt>, as required by the general contract of
     * {@link Object#hashCode}.
     *
     * @return the hash code value for this map
     * @see Map.Entry#hashCode()
     * @see Object#equals(Object)
     * @see #equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1994-1998 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown by the <code>nextElement</code> method of an
 * <code>Enumeration</code> to indicate that there are no more
 * elements in the enumeration.
 *
 * @author  unascribed
 * @see     java.util.Enumeration
 * @see     java.util.Enumeration#nextElement()
 * @since   JDK1.0
 */
public
class NoSuchElementException extends RuntimeException {
    /**
     * Constructs a <code>NoSuchElementException</code> with <tt>null</tt>
     * as its error message string.
     */
    public NoSuchElementException() {
        super();
    }

    /**
     * Constructs a <code>NoSuchElementException</code>, saving a reference
     * to the error message string <tt>s</tt> for later retrieval by the
     * <tt>getMessage</tt> method.
     *
     * @param   s   the detail message.
     */
    public NoSuchElementException(String s) {
        super(s);
    }
}


package javaUtilEx;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * A collection that contains no duplicate elements.  More formally, sets
 * contain no pair of elements <code>e1</code> and <code>e2</code> such that
 * <code>e1.equals(e2)</code>, and at most one null element.  As implied by
 * its name, this interface models the mathematical <i>set</i> abstraction.
 *
 * <p>The <tt>Set</tt> interface places additional stipulations, beyond those
 * inherited from the <tt>Collection</tt> interface, on the contracts of all
 * constructors and on the contracts of the <tt>add</tt>, <tt>equals</tt> and
 * <tt>hashCode</tt> methods.  Declarations for other inherited methods are
 * also included here for convenience.  (The specifications accompanying these
 * declarations have been tailored to the <tt>Set</tt> interface, but they do
 * not contain any additional stipulations.)
 *
 * <p>The additional stipulation on constructors is, not surprisingly,
 * that all constructors must create a set that contains no duplicate elements
 * (as defined above).
 *
 * <p>Note: Great care must be exercised if mutable objects are used as set
 * elements.  The behavior of a set is not specified if the value of an object
 * is changed in a manner that affects <tt>equals</tt> comparisons while the
 * object is an element in the set.  A special case of this prohibition is
 * that it is not permissible for a set to contain itself as an element.
 *
 * <p>Some set implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the set may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @param <E> the type of elements maintained by this set
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see List
 * @see SortedSet
 * @see HashSet
 * @see TreeSet
 * @see AbstractSet
 * @see Collections#singleton(java.lang.Object)
 * @see Collections#EMPTY_SET
 * @since 1.2
 */

public interface Set<E> extends Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this set (its cardinality).  If this
     * set contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this set (its cardinality)
     */
    int size();

    /**
     * Returns <tt>true</tt> if this set contains no elements.
     *
     * @return <tt>true</tt> if this set contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this set contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this set
     * contains an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this set is to be tested
     * @return <tt>true</tt> if this set contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this set (optional)
     * @throws NullPointerException if the specified element is null and this
     *         set does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this set.  The elements are
     * returned in no particular order (unless this set is an instance of some
     * class that provides a guarantee).
     *
     * @return an iterator over the elements in this set
     */
    Iterator<E> iterator();

    /**
     * Returns an array containing all of the elements in this set.
     * If this set makes any guarantees as to what order its elements
     * are returned by its iterator, this method must return the
     * elements in the same order.
     *
     * <p>The returned array will be "safe" in that no references to it
     * are maintained by this set.  (In other words, this method must
     * allocate a new array even if this set is backed by an array).
     * The caller is thus free to modify the returned array.
     *
     * <p>This method acts as bridge between array-based and collection-based
     * APIs.
     *
     * @return an array containing all the elements in this set
     */
    Object[] toArray();

    /**
     * Returns an array containing all of the elements in this set; the
     * runtime type of the returned array is that of the specified array.
     * If the set fits in the specified array, it is returned therein.
     * Otherwise, a new array is allocated with the runtime type of the
     * specified array and the size of this set.
     *
     * <p>If this set fits in the specified array with room to spare
     * (i.e., the array has more elements than this set), the element in
     * the array immediately following the end of the set is set to
     * <tt>null</tt>.  (This is useful in determining the length of this
     * set <i>only</i> if the caller knows that this set does not contain
     * any null elements.)
     *
     * <p>If this set makes any guarantees as to what order its elements
     * are returned by its iterator, this method must return the elements
     * in the same order.
     *
     * <p>Like the {@link #toArray()} method, this method acts as bridge between
     * array-based and collection-based APIs.  Further, this method allows
     * precise control over the runtime type of the output array, and may,
     * under certain circumstances, be used to save allocation costs.
     *
     * <p>Suppose <tt>x</tt> is a set known to contain only strings.
     * The following code can be used to dump the set into a newly allocated
     * array of <tt>String</tt>:
     *
     * <pre>
     *     String[] y = x.toArray(new String[0]);</pre>
     *
     * Note that <tt>toArray(new Object[0])</tt> is identical in function to
     * <tt>toArray()</tt>.
     *
     * @param a the array into which the elements of this set are to be
     *        stored, if it is big enough; otherwise, a new array of the same
     *        runtime type is allocated for this purpose.
     * @return an array containing all the elements in this set
     * @throws ArrayStoreException if the runtime type of the specified array
     *         is not a supertype of the runtime type of every element in this
     *         set
     * @throws NullPointerException if the specified array is null
     */
    <T> T[] toArray(T[] a);


    // Modification Operations

    /**
     * Adds the specified element to this set if it is not already present
     * (optional operation).  More formally, adds the specified element
     * <tt>e</tt> to this set if the set contains no element <tt>e2</tt>
     * such that
     * <tt>(e==null&nbsp;?&nbsp;e2==null&nbsp;:&nbsp;e.equals(e2))</tt>.
     * If this set already contains the element, the call leaves the set
     * unchanged and returns <tt>false</tt>.  In combination with the
     * restriction on constructors, this ensures that sets never contain
     * duplicate elements.
     *
     * <p>The stipulation above does not imply that sets must accept all
     * elements; sets may refuse to add any particular element, including
     * <tt>null</tt>, and throw an exception, as described in the
     * specification for {@link Collection#add Collection.add}.
     * Individual set implementations should clearly document any
     * restrictions on the elements that they may contain.
     *
     * @param e element to be added to this set
     * @return <tt>true</tt> if this set did not already contain the specified
     *         element
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this set
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this set
     * @throws NullPointerException if the specified element is null and this
     *         set does not permit null elements
     * @throws IllegalArgumentException if some property of the specified element
     *         prevents it from being added to this set
     */
    boolean add(E e);


    /**
     * Removes the specified element from this set if it is present
     * (optional operation).  More formally, removes an element <tt>e</tt>
     * such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this set contains such an element.  Returns <tt>true</tt> if this set
     * contained the element (or equivalently, if this set changed as a
     * result of the call).  (This set will not contain the element once the
     * call returns.)
     *
     * @param o object to be removed from this set, if present
     * @return <tt>true</tt> if this set contained the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this set (optional)
     * @throws NullPointerException if the specified element is null and this
     *         set does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this set
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this set contains all of the elements of the
     * specified collection.  If the specified collection is also a set, this
     * method returns <tt>true</tt> if it is a <i>subset</i> of this set.
     *
     * @param  c collection to be checked for containment in this set
     * @return <tt>true</tt> if this set contains all of the elements of the
     *         specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         set (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this set does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this set if
     * they're not already present (optional operation).  If the specified
     * collection is also a set, the <tt>addAll</tt> operation effectively
     * modifies this set so that its value is the <i>union</i> of the two
     * sets.  The behavior of this operation is undefined if the specified
     * collection is modified while the operation is in progress.
     *
     * @param  c collection containing elements to be added to this set
     * @return <tt>true</tt> if this set changed as a result of the call
     *
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this set
     * @throws ClassCastException if the class of an element of the
     *         specified collection prevents it from being added to this set
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this set does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this set
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Retains only the elements in this set that are contained in the
     * specified collection (optional operation).  In other words, removes
     * from this set all of its elements that are not contained in the
     * specified collection.  If the specified collection is also a set, this
     * operation effectively modifies this set so that its value is the
     * <i>intersection</i> of the two sets.
     *
     * @param  c collection containing elements to be retained in this set
     * @return <tt>true</tt> if this set changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this set
     * @throws ClassCastException if the class of an element of this set
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this set contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes from this set all of its elements that are contained in the
     * specified collection (optional operation).  If the specified
     * collection is also a set, this operation effectively modifies this
     * set so that its value is the <i>asymmetric set difference</i> of
     * the two sets.
     *
     * @param  c collection containing elements to be removed from this set
     * @return <tt>true</tt> if this set changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this set
     * @throws ClassCastException if the class of an element of this set
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this set contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Removes all of the elements from this set (optional operation).
     * The set will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> method
     *         is not supported by this set
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this set for equality.  Returns
     * <tt>true</tt> if the specified object is also a set, the two sets
     * have the same size, and every member of the specified set is
     * contained in this set (or equivalently, every member of this set is
     * contained in the specified set).  This definition ensures that the
     * equals method works properly across different implementations of the
     * set interface.
     *
     * @param o object to be compared for equality with this set
     * @return <tt>true</tt> if the specified object is equal to this set
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this set.  The hash code of a set is
     * defined to be the sum of the hash codes of the elements in the set,
     * where the hash code of a <tt>null</tt> element is defined to be zero.
     * This ensures that <tt>s1.equals(s2)</tt> implies that
     * <tt>s1.hashCode()==s2.hashCode()</tt> for any two sets <tt>s1</tt>
     * and <tt>s2</tt>, as required by the general contract of
     * {@link Object#hashCode}.
     *
     * @return the hash code value for this set
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that the requested operation is not supported.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @since   1.2
 */
public class UnsupportedOperationException extends RuntimeException {
    /**
     * Constructs an UnsupportedOperationException with no detail message.
     */
    public UnsupportedOperationException() {
    }

    /**
     * Constructs an UnsupportedOperationException with the specified
     * detail message.
     *
     * @param message the detail message
     */
    public UnsupportedOperationException(String message) {
        super(message);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public UnsupportedOperationException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public UnsupportedOperationException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1242599979055084673L;
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
javaUtilEx.juHashMapCreateHashCode.main([Ljava/lang/String;)V: Graph of 137 nodes with 0 SCCs.



javaUtilEx.juHashMapCreateHashCode.createMap(I)LjavaUtilEx/HashMap;: Graph of 251 nodes with 1 SCC.



javaUtilEx.AbstractMap.hashCode()I: Graph of 381 nodes with 2 SCCs.



javaUtilEx.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Graph of 542 nodes with 2 SCCs.



javaUtilEx.Content.hashCode()I: Graph of 7 nodes with 0 SCCs.



javaUtilEx.Content.equals(Ljava/lang/Object;)Z: Graph of 31 nodes with 0 SCCs.



javaUtilEx.HashMap$Entry.hashCode()I: Graph of 269 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 6 SCCss.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.HashMap$Entry.hashCode()I
SCC calls the following helper methods: javaUtilEx.HashMap$Entry.hashCode()I, javaUtilEx.Content.hashCode()I
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.HashMap$Entry: [value, key]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(8) SCCToQDPProof (SOUND)
Transformed TerminationGraph SCC to QDP. Log: 
Generated 110 rules for P and 342 rules for R.P rules:
f18635_0_hashCode_Return(EOS(STATIC_18635), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18649_0_hashCode_Load(EOS(STATIC_18649), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18649_0_hashCode_Load(EOS(STATIC_18649), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18669_0_hashCode_FieldAccess(EOS(STATIC_18669), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18669_0_hashCode_FieldAccess(EOS(STATIC_18669), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18683_0_hashCode_NONNULL(EOS(STATIC_18683), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), o15376) :|: TRUE
f18683_0_hashCode_NONNULL(EOS(STATIC_18683), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o17577sub)) -> f18694_0_hashCode_NONNULL(EOS(STATIC_18694), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o17577sub)) :|: TRUE
f18694_0_hashCode_NONNULL(EOS(STATIC_18694), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o17577sub)) -> f18713_0_hashCode_Load(EOS(STATIC_18713), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18713_0_hashCode_Load(EOS(STATIC_18713), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18722_0_hashCode_FieldAccess(EOS(STATIC_18722), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18722_0_hashCode_FieldAccess(EOS(STATIC_18722), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18734_0_hashCode_InvokeMethod(EOS(STATIC_18734), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o17577sub)) :|: TRUE
f18734_0_hashCode_InvokeMethod(EOS(STATIC_18734), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) -> f18745_0_hashCode_InvokeMethod(EOS(STATIC_18745), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) :|: TRUE
f18745_0_hashCode_InvokeMethod(EOS(STATIC_18745), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) -> f18756_1_hashCode_InvokeMethod(f18756_0_hashCode_Load(EOS(STATIC_18756), java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_0_hashCode_Load(EOS(STATIC_18756), java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) -> f18772_0_hashCode_Load(EOS(STATIC_18772), java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) :|: TRUE
f18772_0_hashCode_Load(EOS(STATIC_18772), java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) -> f18782_0_hashCode_Load(EOS(STATIC_18782), java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub), o15374[HashMap$Entry.value]o18299) :|: o15374[HashMap$Entry.value]o18299 = 1
f18782_0_hashCode_Load(EOS(STATIC_18782), java.lang.Object(o18884sub), o18895, java.lang.Object(o18884sub), o18895[HashMap$Entry.value]o18884) -> f18814_0_hashCode_Load(EOS(STATIC_18814), java.lang.Object(o18884sub), java.lang.Object(o18884sub)) :|: TRUE
f18814_0_hashCode_Load(EOS(STATIC_18814), java.lang.Object(o18884sub), java.lang.Object(o18884sub)) -> f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o18884sub), java.lang.Object(o18884sub)) :|: TRUE
f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o15355sub), java.lang.Object(o15355sub)) -> f18406_0_hashCode_FieldAccess(EOS(STATIC_18406), java.lang.Object(o15355sub), java.lang.Object(o15355sub), java.lang.Object(o15355sub)) :|: TRUE
f18406_0_hashCode_FieldAccess(EOS(STATIC_18406), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375))) -> f18413_0_hashCode_FieldAccess(EOS(STATIC_18413), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375))) :|: TRUE
f18413_0_hashCode_FieldAccess(EOS(STATIC_18413), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375))) -> f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), o15375) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(o15386sub)) -> f18429_0_hashCode_NONNULL(EOS(STATIC_18429), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(o15386sub)) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), NULL) -> f18430_0_hashCode_NONNULL(EOS(STATIC_18430), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), NULL) :|: TRUE
f18429_0_hashCode_NONNULL(EOS(STATIC_18429), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(o15386sub)) -> f18438_0_hashCode_Load(EOS(STATIC_18438), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub)))) :|: TRUE
f18438_0_hashCode_Load(EOS(STATIC_18438), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub)))) -> f18447_0_hashCode_FieldAccess(EOS(STATIC_18447), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub)))) :|: TRUE
f18447_0_hashCode_FieldAccess(EOS(STATIC_18447), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub)))) -> f18456_0_hashCode_InvokeMethod(EOS(STATIC_18456), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(o15386sub)) :|: TRUE
f18456_0_hashCode_InvokeMethod(EOS(STATIC_18456), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)) -> f18465_0_hashCode_InvokeMethod(EOS(STATIC_18465), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)) :|: TRUE
f18456_0_hashCode_InvokeMethod(EOS(STATIC_18456), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(EOC)) -> f18466_0_hashCode_InvokeMethod(EOS(STATIC_18466), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(EOC)) :|: TRUE
f18456_0_hashCode_InvokeMethod(EOS(STATIC_18456), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) -> f18467_0_hashCode_InvokeMethod(EOS(STATIC_18467), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) :|: TRUE
f18465_0_hashCode_InvokeMethod(EOS(STATIC_18465), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)) -> f18477_1_hashCode_InvokeMethod(f18477_0_hashCode_Load(EOS(STATIC_18477), java.lang.Object(o15405sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub)))) :|: TRUE
f18477_0_hashCode_Load(EOS(STATIC_18477), java.lang.Object(o15405sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)) -> f25663_0_hashCode_Load(EOS(STATIC_25663), java.lang.Object(o15405sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)) :|: TRUE
f18466_0_hashCode_InvokeMethod(EOS(STATIC_18466), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(EOC)) -> f18478_0_hashCode_Load(EOS(STATIC_18478), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC)))) :|: TRUE
f18478_0_hashCode_Load(EOS(STATIC_18478), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC)))) -> f18490_0_hashCode_FieldAccess(EOS(STATIC_18490), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC)))) :|: TRUE
f18490_0_hashCode_FieldAccess(EOS(STATIC_18490), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC)))) -> f18503_0_hashCode_NONNULL(EOS(STATIC_18503), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), o15376) :|: TRUE
f18503_0_hashCode_NONNULL(EOS(STATIC_18503), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(o15506sub)) -> f18515_0_hashCode_NONNULL(EOS(STATIC_18515), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(o15506sub)) :|: TRUE
f18515_0_hashCode_NONNULL(EOS(STATIC_18515), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(o15506sub)) -> f18526_0_hashCode_Load(EOS(STATIC_18526), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC)))) :|: TRUE
f18526_0_hashCode_Load(EOS(STATIC_18526), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC)))) -> f18537_0_hashCode_FieldAccess(EOS(STATIC_18537), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC)))) :|: TRUE
f18537_0_hashCode_FieldAccess(EOS(STATIC_18537), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC)))) -> f18550_0_hashCode_InvokeMethod(EOS(STATIC_18550), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(o15506sub)) :|: TRUE
f18550_0_hashCode_InvokeMethod(EOS(STATIC_18550), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) -> f18564_0_hashCode_InvokeMethod(EOS(STATIC_18564), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) :|: TRUE
f18564_0_hashCode_InvokeMethod(EOS(STATIC_18564), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) -> f18575_1_hashCode_InvokeMethod(f18575_0_hashCode_Load(EOS(STATIC_18575), java.lang.Object(o15646sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC)))) :|: TRUE
f18575_0_hashCode_Load(EOS(STATIC_18575), java.lang.Object(o15646sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) -> f18591_0_hashCode_Load(EOS(STATIC_18591), java.lang.Object(o15646sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) :|: TRUE
f18591_0_hashCode_Load(EOS(STATIC_18591), java.lang.Object(o15646sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) -> f18602_0_hashCode_Load(EOS(STATIC_18602), java.lang.Object(o15646sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub), o15374[HashMap$Entry.value]o15646) :|: o15374[HashMap$Entry.value]o15646 = 1
f18602_0_hashCode_Load(EOS(STATIC_18602), java.lang.Object(o16005sub), o16016, java.lang.Object(o16005sub), o16016[HashMap$Entry.value]o16005) -> f18652_0_hashCode_Load(EOS(STATIC_18652), java.lang.Object(o16005sub), java.lang.Object(o16005sub)) :|: TRUE
f18652_0_hashCode_Load(EOS(STATIC_18652), java.lang.Object(o16005sub), java.lang.Object(o16005sub)) -> f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o16005sub), java.lang.Object(o16005sub)) :|: TRUE
f18467_0_hashCode_InvokeMethod(EOS(STATIC_18467), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) -> f18479_1_hashCode_InvokeMethod(f18479_0_hashCode_Load(EOS(STATIC_18479), java.lang.Object(o15407sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub)))) :|: TRUE
f18479_0_hashCode_Load(EOS(STATIC_18479), java.lang.Object(o15407sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) -> f18491_0_hashCode_Load(EOS(STATIC_18491), java.lang.Object(o15407sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) :|: TRUE
f18491_0_hashCode_Load(EOS(STATIC_18491), java.lang.Object(o15407sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) -> f18504_0_hashCode_Load(EOS(STATIC_18504), java.lang.Object(o15407sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub), o15374[HashMap$Entry.key]o15407) :|: o15374[HashMap$Entry.key]o15407 = 1
f18504_0_hashCode_Load(EOS(STATIC_18504), java.lang.Object(o15478sub), o15489, java.lang.Object(o15478sub), o15489[HashMap$Entry.key]o15478) -> f18539_0_hashCode_Load(EOS(STATIC_18539), java.lang.Object(o15478sub), java.lang.Object(o15478sub)) :|: TRUE
f18539_0_hashCode_Load(EOS(STATIC_18539), java.lang.Object(o15478sub), java.lang.Object(o15478sub)) -> f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o15478sub), java.lang.Object(o15478sub)) :|: TRUE
f18582_0_hashCode_Return(EOS(STATIC_18582), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))))) -> f18608_0_hashCode_Return(EOS(STATIC_18608), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))))) :|: TRUE
f18608_0_hashCode_Return(EOS(STATIC_18608), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16051, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16048)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16051, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16048))))) -> f18614_0_hashCode_Return(EOS(STATIC_18614), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16051, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16048)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16051, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16048))))) :|: TRUE
f18614_0_hashCode_Return(EOS(STATIC_18614), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16215, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16213, o16211)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16215, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16213, o16211))))) -> f18699_0_hashCode_Return(EOS(STATIC_18699), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16215, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16213, o16211)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16215, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16213, o16211))))) :|: TRUE
f18699_0_hashCode_Return(EOS(STATIC_18699), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17590, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17588, o17586)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17590, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17588, o17586))))) -> f18706_0_hashCode_Return(EOS(STATIC_18706), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17590, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17588, o17586)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17590, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17588, o17586))))) :|: TRUE
f18706_0_hashCode_Return(EOS(STATIC_18706), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17765, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17763, o17761)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17765, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17763, o17761))))) -> f18784_0_hashCode_Return(EOS(STATIC_18784), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17765, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17763, o17761)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17765, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17763, o17761))))) :|: TRUE
f18784_0_hashCode_Return(EOS(STATIC_18784), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18906, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18904, o18902)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18906, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18904, o18902))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18906, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18904, o18902)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18906, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18904, o18902))))) :|: TRUE
f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18934_0_hashCode_Load(EOS(STATIC_18934), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18934_0_hashCode_Load(EOS(STATIC_18934), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18943_0_hashCode_FieldAccess(EOS(STATIC_18943), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18943_0_hashCode_FieldAccess(EOS(STATIC_18943), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), o21612) :|: TRUE
f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22087sub)) -> f18960_0_hashCode_NONNULL(EOS(STATIC_18960), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22087sub)) :|: TRUE
f18960_0_hashCode_NONNULL(EOS(STATIC_18960), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22087sub)) -> f18965_0_hashCode_Load(EOS(STATIC_18965), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18965_0_hashCode_Load(EOS(STATIC_18965), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18981_0_hashCode_FieldAccess(EOS(STATIC_18981), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18981_0_hashCode_FieldAccess(EOS(STATIC_18981), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18986_0_hashCode_InvokeMethod(EOS(STATIC_18986), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22087sub)) :|: TRUE
f18986_0_hashCode_InvokeMethod(EOS(STATIC_18986), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) -> f18992_0_hashCode_InvokeMethod(EOS(STATIC_18992), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) :|: TRUE
f18992_0_hashCode_InvokeMethod(EOS(STATIC_18992), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) -> f18998_1_hashCode_InvokeMethod(f18998_0_hashCode_Load(EOS(STATIC_18998), java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_0_hashCode_Load(EOS(STATIC_18998), java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) -> f19004_0_hashCode_Load(EOS(STATIC_19004), java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) :|: TRUE
f19004_0_hashCode_Load(EOS(STATIC_19004), java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) -> f19008_0_hashCode_Load(EOS(STATIC_19008), java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub), o21606[HashMap$Entry.value]o22885) :|: o21606[HashMap$Entry.value]o22885 = 1
f19008_0_hashCode_Load(EOS(STATIC_19008), java.lang.Object(o23170sub), o23181, java.lang.Object(o23170sub), o23181[HashMap$Entry.value]o23170) -> f19024_0_hashCode_Load(EOS(STATIC_19024), java.lang.Object(o23170sub), java.lang.Object(o23170sub)) :|: TRUE
f19024_0_hashCode_Load(EOS(STATIC_19024), java.lang.Object(o23170sub), java.lang.Object(o23170sub)) -> f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o23170sub), java.lang.Object(o23170sub)) :|: TRUE
f18607_0_hashCode_Return(EOS(STATIC_18607), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))))) -> f18608_0_hashCode_Return(EOS(STATIC_18608), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))))) :|: TRUE
f18613_0_hashCode_Return(EOS(STATIC_18613), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))))) -> f18614_0_hashCode_Return(EOS(STATIC_18614), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))))) :|: TRUE
f18638_0_hashCode_Return(EOS(STATIC_18638), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))))) -> f18614_0_hashCode_Return(EOS(STATIC_18614), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))))) :|: TRUE
f18698_0_hashCode_Return(EOS(STATIC_18698), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))))) -> f18699_0_hashCode_Return(EOS(STATIC_18699), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))))) :|: TRUE
f18724_0_hashCode_Return(EOS(STATIC_18724), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))))) -> f18706_0_hashCode_Return(EOS(STATIC_18706), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))))) :|: TRUE
f18783_0_hashCode_Return(EOS(STATIC_18783), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18784_0_hashCode_Return(EOS(STATIC_18784), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18800_0_hashCode_Return(EOS(STATIC_18800), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18784_0_hashCode_Return(EOS(STATIC_18784), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18882_0_hashCode_Return(EOS(STATIC_18882), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18784_0_hashCode_Return(EOS(STATIC_18784), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18967_0_hashCode_Return(EOS(STATIC_18967), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL))))) :|: TRUE
f18971_0_hashCode_Return(EOS(STATIC_18971), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC)))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC)))))) :|: TRUE
f18975_0_hashCode_Return(EOS(STATIC_18975), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f19009_0_hashCode_Return(EOS(STATIC_19009), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008))))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008))))))) :|: TRUE
f19015_0_hashCode_Return(EOS(STATIC_19015), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268))))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268))))))) :|: TRUE
f19061_0_hashCode_Return(EOS(STATIC_19061), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942))))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942))))))) :|: TRUE
f19066_0_hashCode_Return(EOS(STATIC_19066), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147))))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147))))))) :|: TRUE
f18430_0_hashCode_NONNULL(EOS(STATIC_18430), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), NULL) -> f18439_0_hashCode_ConstantStackPush(EOS(STATIC_18439), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) :|: TRUE
f18439_0_hashCode_ConstantStackPush(EOS(STATIC_18439), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) -> f18448_0_hashCode_JMP(EOS(STATIC_18448), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) :|: TRUE
f18448_0_hashCode_JMP(EOS(STATIC_18448), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) -> f18457_0_hashCode_Load(EOS(STATIC_18457), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) :|: TRUE
f18457_0_hashCode_Load(EOS(STATIC_18457), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) -> f18468_0_hashCode_FieldAccess(EOS(STATIC_18468), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) :|: TRUE
f18468_0_hashCode_FieldAccess(EOS(STATIC_18468), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) -> f18480_0_hashCode_NONNULL(EOS(STATIC_18480), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), o15376) :|: TRUE
f18480_0_hashCode_NONNULL(EOS(STATIC_18480), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(o15429sub)) -> f18492_0_hashCode_NONNULL(EOS(STATIC_18492), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(o15429sub)) :|: TRUE
f18492_0_hashCode_NONNULL(EOS(STATIC_18492), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(o15429sub)) -> f18505_0_hashCode_Load(EOS(STATIC_18505), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL))) :|: TRUE
f18505_0_hashCode_Load(EOS(STATIC_18505), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL))) -> f18517_0_hashCode_FieldAccess(EOS(STATIC_18517), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL))) :|: TRUE
f18517_0_hashCode_FieldAccess(EOS(STATIC_18517), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL))) -> f18528_0_hashCode_InvokeMethod(EOS(STATIC_18528), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(o15429sub)) :|: TRUE
f18528_0_hashCode_InvokeMethod(EOS(STATIC_18528), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) -> f18542_0_hashCode_InvokeMethod(EOS(STATIC_18542), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) :|: TRUE
f18542_0_hashCode_InvokeMethod(EOS(STATIC_18542), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) -> f18554_1_hashCode_InvokeMethod(f18554_0_hashCode_Load(EOS(STATIC_18554), java.lang.Object(o15592sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL))) :|: TRUE
f18554_0_hashCode_Load(EOS(STATIC_18554), java.lang.Object(o15592sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) -> f18568_0_hashCode_Load(EOS(STATIC_18568), java.lang.Object(o15592sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) :|: TRUE
f18568_0_hashCode_Load(EOS(STATIC_18568), java.lang.Object(o15592sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) -> f18579_0_hashCode_Load(EOS(STATIC_18579), java.lang.Object(o15592sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub), o15374[HashMap$Entry.value]o15592) :|: o15374[HashMap$Entry.value]o15592 = 1
f18579_0_hashCode_Load(EOS(STATIC_18579), java.lang.Object(o15769sub), o15780, java.lang.Object(o15769sub), o15780[HashMap$Entry.value]o15769) -> f18623_0_hashCode_Load(EOS(STATIC_18623), java.lang.Object(o15769sub), java.lang.Object(o15769sub)) :|: TRUE
f18623_0_hashCode_Load(EOS(STATIC_18623), java.lang.Object(o15769sub), java.lang.Object(o15769sub)) -> f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o15769sub), java.lang.Object(o15769sub)) :|: TRUE
f18477_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18635_0_hashCode_Return(EOS(STATIC_18635), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))))) -> f18582_0_hashCode_Return(EOS(STATIC_18582), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))))) -> f18607_0_hashCode_Return(EOS(STATIC_18607), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))))) -> f18613_0_hashCode_Return(EOS(STATIC_18613), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))))) -> f18638_0_hashCode_Return(EOS(STATIC_18638), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))))) -> f18698_0_hashCode_Return(EOS(STATIC_18698), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))))) -> f18724_0_hashCode_Return(EOS(STATIC_18724), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18783_0_hashCode_Return(EOS(STATIC_18783), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18800_0_hashCode_Return(EOS(STATIC_18800), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18882_0_hashCode_Return(EOS(STATIC_18882), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL))))) -> f18967_0_hashCode_Return(EOS(STATIC_18967), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC)))))) -> f18971_0_hashCode_Return(EOS(STATIC_18971), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18975_0_hashCode_Return(EOS(STATIC_18975), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008))))))) -> f19009_0_hashCode_Return(EOS(STATIC_19009), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268))))))) -> f19015_0_hashCode_Return(EOS(STATIC_19015), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942))))))) -> f19061_0_hashCode_Return(EOS(STATIC_19061), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147))))))) -> f19066_0_hashCode_Return(EOS(STATIC_19066), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147))))))) :|: TRUE
R rules:
f18477_0_hashCode_Load(EOS(STATIC_18477), java.lang.Object(o15405sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)) -> f18489_0_hashCode_Load(EOS(STATIC_18489), java.lang.Object(o15405sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)) :|: TRUE
f18489_0_hashCode_Load(EOS(STATIC_18489), java.lang.Object(o15405sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)) -> f18502_0_hashCode_Load(EOS(STATIC_18502), java.lang.Object(o15405sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub), o15374[HashMap$Entry.key]o15405) :|: o15374[HashMap$Entry.key]o15405 = 1
f18502_0_hashCode_Load(EOS(STATIC_18502), java.lang.Object(o15454sub), o15465, java.lang.Object(o15454sub), o15465[HashMap$Entry.key]o15454) -> f18535_0_hashCode_Load(EOS(STATIC_18535), java.lang.Object(o15454sub), java.lang.Object(o15454sub)) :|: TRUE
f18535_0_hashCode_Load(EOS(STATIC_18535), java.lang.Object(o15454sub), java.lang.Object(o15454sub)) -> f18525_0_hashCode_Load(EOS(STATIC_18525), java.lang.Object(o15454sub), java.lang.Object(o15454sub)) :|: TRUE
f18618_0_hashCode_Load(EOS(STATIC_18618), java.lang.Object(o15755sub), java.lang.Object(o15755sub)) -> f18525_0_hashCode_Load(EOS(STATIC_18525), java.lang.Object(o15755sub), java.lang.Object(o15755sub)) :|: TRUE
f18650_0_hashCode_Load(EOS(STATIC_18650), java.lang.Object(o15991sub), java.lang.Object(o15991sub)) -> f18525_0_hashCode_Load(EOS(STATIC_18525), java.lang.Object(o15991sub), java.lang.Object(o15991sub)) :|: TRUE
f18812_0_hashCode_Load(EOS(STATIC_18812), java.lang.Object(o18870sub), java.lang.Object(o18870sub)) -> f18525_0_hashCode_Load(EOS(STATIC_18525), java.lang.Object(o18870sub), java.lang.Object(o18870sub)) :|: TRUE
f19022_0_hashCode_Load(EOS(STATIC_19022), java.lang.Object(o23156sub), java.lang.Object(o23156sub)) -> f18525_0_hashCode_Load(EOS(STATIC_18525), java.lang.Object(o23156sub), java.lang.Object(o23156sub)) :|: TRUE
f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o15355sub), java.lang.Object(o15355sub)) -> f18406_0_hashCode_FieldAccess(EOS(STATIC_18406), java.lang.Object(o15355sub), java.lang.Object(o15355sub), java.lang.Object(o15355sub)) :|: TRUE
f18406_0_hashCode_FieldAccess(EOS(STATIC_18406), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375))) -> f18413_0_hashCode_FieldAccess(EOS(STATIC_18413), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375))) :|: TRUE
f18413_0_hashCode_FieldAccess(EOS(STATIC_18413), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375))) -> f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, o15375)), o15375) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(o15386sub)) -> f18429_0_hashCode_NONNULL(EOS(STATIC_18429), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(o15386sub)) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), NULL) -> f18430_0_hashCode_NONNULL(EOS(STATIC_18430), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), NULL) :|: TRUE
f18429_0_hashCode_NONNULL(EOS(STATIC_18429), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(o15386sub)) -> f18438_0_hashCode_Load(EOS(STATIC_18438), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub)))) :|: TRUE
f18430_0_hashCode_NONNULL(EOS(STATIC_18430), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), NULL) -> f18439_0_hashCode_ConstantStackPush(EOS(STATIC_18439), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) :|: TRUE
f18438_0_hashCode_Load(EOS(STATIC_18438), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub)))) -> f18447_0_hashCode_FieldAccess(EOS(STATIC_18447), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub)))) :|: TRUE
f18439_0_hashCode_ConstantStackPush(EOS(STATIC_18439), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) -> f18448_0_hashCode_JMP(EOS(STATIC_18448), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) :|: TRUE
f18447_0_hashCode_FieldAccess(EOS(STATIC_18447), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub)))) -> f18456_0_hashCode_InvokeMethod(EOS(STATIC_18456), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15386sub))), java.lang.Object(o15386sub)) :|: TRUE
f18448_0_hashCode_JMP(EOS(STATIC_18448), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) -> f18457_0_hashCode_Load(EOS(STATIC_18457), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) :|: TRUE
f18456_0_hashCode_InvokeMethod(EOS(STATIC_18456), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)) -> f18465_0_hashCode_InvokeMethod(EOS(STATIC_18465), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)) :|: TRUE
f18456_0_hashCode_InvokeMethod(EOS(STATIC_18456), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(EOC)) -> f18466_0_hashCode_InvokeMethod(EOS(STATIC_18466), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(EOC)) :|: TRUE
f18456_0_hashCode_InvokeMethod(EOS(STATIC_18456), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) -> f18467_0_hashCode_InvokeMethod(EOS(STATIC_18467), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) :|: TRUE
f18457_0_hashCode_Load(EOS(STATIC_18457), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) -> f18468_0_hashCode_FieldAccess(EOS(STATIC_18468), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) :|: TRUE
f18465_0_hashCode_InvokeMethod(EOS(STATIC_18465), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)) -> f18477_1_hashCode_InvokeMethod(f18477_0_hashCode_Load(EOS(STATIC_18477), java.lang.Object(o15405sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(o15405sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15405sub)))) :|: TRUE
f18466_0_hashCode_InvokeMethod(EOS(STATIC_18466), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(EOC)) -> f18478_0_hashCode_Load(EOS(STATIC_18478), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC)))) :|: TRUE
f18467_0_hashCode_InvokeMethod(EOS(STATIC_18467), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) -> f18479_1_hashCode_InvokeMethod(f18479_0_hashCode_Load(EOS(STATIC_18479), java.lang.Object(o15407sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub)))) :|: TRUE
f18468_0_hashCode_FieldAccess(EOS(STATIC_18468), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL))) -> f18480_0_hashCode_NONNULL(EOS(STATIC_18480), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, NULL)), o15376) :|: TRUE
f18478_0_hashCode_Load(EOS(STATIC_18478), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC)))) -> f18490_0_hashCode_FieldAccess(EOS(STATIC_18490), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC)))) :|: TRUE
f18479_0_hashCode_Load(EOS(STATIC_18479), java.lang.Object(o15407sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) -> f18491_0_hashCode_Load(EOS(STATIC_18491), java.lang.Object(o15407sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) :|: TRUE
f18480_0_hashCode_NONNULL(EOS(STATIC_18480), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(o15429sub)) -> f18492_0_hashCode_NONNULL(EOS(STATIC_18492), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(o15429sub)) :|: TRUE
f18480_0_hashCode_NONNULL(EOS(STATIC_18480), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), NULL) -> f18493_0_hashCode_NONNULL(EOS(STATIC_18493), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), NULL) :|: TRUE
f18490_0_hashCode_FieldAccess(EOS(STATIC_18490), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC)))) -> f18503_0_hashCode_NONNULL(EOS(STATIC_18503), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(EOC))), o15376) :|: TRUE
f18491_0_hashCode_Load(EOS(STATIC_18491), java.lang.Object(o15407sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub)) -> f18504_0_hashCode_Load(EOS(STATIC_18504), java.lang.Object(o15407sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(o15407sub))), java.lang.Object(o15407sub), o15374[HashMap$Entry.key]o15407) :|: o15374[HashMap$Entry.key]o15407 = 1
f18492_0_hashCode_NONNULL(EOS(STATIC_18492), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(o15429sub)) -> f18505_0_hashCode_Load(EOS(STATIC_18505), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL))) :|: TRUE
f18493_0_hashCode_NONNULL(EOS(STATIC_18493), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), NULL) -> f18506_0_hashCode_ConstantStackPush(EOS(STATIC_18506), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))) :|: TRUE
f18503_0_hashCode_NONNULL(EOS(STATIC_18503), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(o15506sub)) -> f18515_0_hashCode_NONNULL(EOS(STATIC_18515), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(o15506sub)) :|: TRUE
f18503_0_hashCode_NONNULL(EOS(STATIC_18503), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), NULL) -> f18516_0_hashCode_NONNULL(EOS(STATIC_18516), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), NULL) :|: TRUE
f18504_0_hashCode_Load(EOS(STATIC_18504), java.lang.Object(o15478sub), o15489, java.lang.Object(o15478sub), o15489[HashMap$Entry.key]o15478) -> f18539_0_hashCode_Load(EOS(STATIC_18539), java.lang.Object(o15478sub), java.lang.Object(o15478sub)) :|: TRUE
f18505_0_hashCode_Load(EOS(STATIC_18505), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL))) -> f18517_0_hashCode_FieldAccess(EOS(STATIC_18517), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL))) :|: TRUE
f18506_0_hashCode_ConstantStackPush(EOS(STATIC_18506), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))) -> f18518_0_hashCode_JMP(EOS(STATIC_18518), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))) :|: TRUE
f18515_0_hashCode_NONNULL(EOS(STATIC_18515), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(o15506sub)) -> f18526_0_hashCode_Load(EOS(STATIC_18526), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC)))) :|: TRUE
f18516_0_hashCode_NONNULL(EOS(STATIC_18516), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), NULL) -> f18527_0_hashCode_ConstantStackPush(EOS(STATIC_18527), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))) :|: TRUE
f18517_0_hashCode_FieldAccess(EOS(STATIC_18517), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL))) -> f18528_0_hashCode_InvokeMethod(EOS(STATIC_18528), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15429sub), NULL)), java.lang.Object(o15429sub)) :|: TRUE
f18518_0_hashCode_JMP(EOS(STATIC_18518), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))) -> f18529_0_hashCode_IntArithmetic(EOS(STATIC_18529), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))) :|: TRUE
f18526_0_hashCode_Load(EOS(STATIC_18526), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC)))) -> f18537_0_hashCode_FieldAccess(EOS(STATIC_18537), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC)))) :|: TRUE
f18527_0_hashCode_ConstantStackPush(EOS(STATIC_18527), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))) -> f18538_0_hashCode_JMP(EOS(STATIC_18538), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))) :|: TRUE
f18528_0_hashCode_InvokeMethod(EOS(STATIC_18528), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15590sub), NULL)), java.lang.Object(o15590sub)) -> f18540_0_hashCode_InvokeMethod(EOS(STATIC_18540), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15590sub), NULL)), java.lang.Object(o15590sub)) :|: TRUE
f18528_0_hashCode_InvokeMethod(EOS(STATIC_18528), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(EOC)) -> f18541_0_hashCode_InvokeMethod(EOS(STATIC_18541), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(EOC)) :|: TRUE
f18528_0_hashCode_InvokeMethod(EOS(STATIC_18528), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) -> f18542_0_hashCode_InvokeMethod(EOS(STATIC_18542), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) :|: TRUE
f18529_0_hashCode_IntArithmetic(EOS(STATIC_18529), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))) -> f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))) :|: TRUE
f18537_0_hashCode_FieldAccess(EOS(STATIC_18537), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC)))) -> f18550_0_hashCode_InvokeMethod(EOS(STATIC_18550), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15506sub), java.lang.Object(EOC))), java.lang.Object(o15506sub)) :|: TRUE
f18538_0_hashCode_JMP(EOS(STATIC_18538), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))) -> f18551_0_hashCode_IntArithmetic(EOS(STATIC_18551), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))) :|: TRUE
f18540_0_hashCode_InvokeMethod(EOS(STATIC_18540), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15590sub), NULL)), java.lang.Object(o15590sub)) -> f18552_1_hashCode_InvokeMethod(f18552_0_hashCode_Load(EOS(STATIC_18552), java.lang.Object(o15590sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15590sub), NULL)), java.lang.Object(o15590sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15590sub), NULL))) :|: TRUE
f18541_0_hashCode_InvokeMethod(EOS(STATIC_18541), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(EOC)) -> f18553_0_hashCode_IntArithmetic(EOS(STATIC_18553), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))) :|: TRUE
f18542_0_hashCode_InvokeMethod(EOS(STATIC_18542), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) -> f18554_1_hashCode_InvokeMethod(f18554_0_hashCode_Load(EOS(STATIC_18554), java.lang.Object(o15592sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL))) :|: TRUE
f18550_0_hashCode_InvokeMethod(EOS(STATIC_18550), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15644sub), java.lang.Object(EOC))), java.lang.Object(o15644sub)) -> f18562_0_hashCode_InvokeMethod(EOS(STATIC_18562), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15644sub), java.lang.Object(EOC))), java.lang.Object(o15644sub)) :|: TRUE
f18550_0_hashCode_InvokeMethod(EOS(STATIC_18550), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)) -> f18563_0_hashCode_InvokeMethod(EOS(STATIC_18563), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)) :|: TRUE
f18550_0_hashCode_InvokeMethod(EOS(STATIC_18550), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) -> f18564_0_hashCode_InvokeMethod(EOS(STATIC_18564), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) :|: TRUE
f18551_0_hashCode_IntArithmetic(EOS(STATIC_18551), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))) -> f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))) :|: TRUE
f18552_0_hashCode_Load(EOS(STATIC_18552), java.lang.Object(o15590sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15590sub), NULL)), java.lang.Object(o15590sub)) -> f18566_0_hashCode_Load(EOS(STATIC_18566), java.lang.Object(o15590sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15590sub), NULL)), java.lang.Object(o15590sub)) :|: TRUE
f18553_0_hashCode_IntArithmetic(EOS(STATIC_18553), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))) -> f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))) :|: TRUE
f18554_0_hashCode_Load(EOS(STATIC_18554), java.lang.Object(o15592sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) -> f18568_0_hashCode_Load(EOS(STATIC_18568), java.lang.Object(o15592sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) :|: TRUE
f18562_0_hashCode_InvokeMethod(EOS(STATIC_18562), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15644sub), java.lang.Object(EOC))), java.lang.Object(o15644sub)) -> f18573_1_hashCode_InvokeMethod(f18573_0_hashCode_Load(EOS(STATIC_18573), java.lang.Object(o15644sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15644sub), java.lang.Object(EOC))), java.lang.Object(o15644sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15644sub), java.lang.Object(EOC)))) :|: TRUE
f18563_0_hashCode_InvokeMethod(EOS(STATIC_18563), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)) -> f18574_0_hashCode_IntArithmetic(EOS(STATIC_18574), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))) :|: TRUE
f18564_0_hashCode_InvokeMethod(EOS(STATIC_18564), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) -> f18575_1_hashCode_InvokeMethod(f18575_0_hashCode_Load(EOS(STATIC_18575), java.lang.Object(o15646sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC)))) :|: TRUE
f18566_0_hashCode_Load(EOS(STATIC_18566), java.lang.Object(o15590sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15590sub), NULL)), java.lang.Object(o15590sub)) -> f18577_0_hashCode_Load(EOS(STATIC_18577), java.lang.Object(o15590sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15590sub), NULL)), java.lang.Object(o15590sub), o15374[HashMap$Entry.value]o15590) :|: o15374[HashMap$Entry.value]o15590 = 1
f18568_0_hashCode_Load(EOS(STATIC_18568), java.lang.Object(o15592sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub)) -> f18579_0_hashCode_Load(EOS(STATIC_18579), java.lang.Object(o15592sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15592sub), NULL)), java.lang.Object(o15592sub), o15374[HashMap$Entry.value]o15592) :|: o15374[HashMap$Entry.value]o15592 = 1
f18573_0_hashCode_Load(EOS(STATIC_18573), java.lang.Object(o15644sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15644sub), java.lang.Object(EOC))), java.lang.Object(o15644sub)) -> f18589_0_hashCode_Load(EOS(STATIC_18589), java.lang.Object(o15644sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15644sub), java.lang.Object(EOC))), java.lang.Object(o15644sub)) :|: TRUE
f18574_0_hashCode_IntArithmetic(EOS(STATIC_18574), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))) -> f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))) :|: TRUE
f18575_0_hashCode_Load(EOS(STATIC_18575), java.lang.Object(o15646sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) -> f18591_0_hashCode_Load(EOS(STATIC_18591), java.lang.Object(o15646sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) :|: TRUE
f18577_0_hashCode_Load(EOS(STATIC_18577), java.lang.Object(o15755sub), o15766, java.lang.Object(o15755sub), o15766[HashMap$Entry.value]o15755) -> f18618_0_hashCode_Load(EOS(STATIC_18618), java.lang.Object(o15755sub), java.lang.Object(o15755sub)) :|: TRUE
f18579_0_hashCode_Load(EOS(STATIC_18579), java.lang.Object(o15769sub), o15780, java.lang.Object(o15769sub), o15780[HashMap$Entry.value]o15769) -> f18623_0_hashCode_Load(EOS(STATIC_18623), java.lang.Object(o15769sub), java.lang.Object(o15769sub)) :|: TRUE
f18582_0_hashCode_Return(EOS(STATIC_18582), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))))) -> f18608_0_hashCode_Return(EOS(STATIC_18608), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))))) :|: TRUE
f18589_0_hashCode_Load(EOS(STATIC_18589), java.lang.Object(o15644sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15644sub), java.lang.Object(EOC))), java.lang.Object(o15644sub)) -> f18600_0_hashCode_Load(EOS(STATIC_18600), java.lang.Object(o15644sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15644sub), java.lang.Object(EOC))), java.lang.Object(o15644sub), o15374[HashMap$Entry.value]o15644) :|: o15374[HashMap$Entry.value]o15644 = 1
f18591_0_hashCode_Load(EOS(STATIC_18591), java.lang.Object(o15646sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub)) -> f18602_0_hashCode_Load(EOS(STATIC_18602), java.lang.Object(o15646sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o15646sub), java.lang.Object(EOC))), java.lang.Object(o15646sub), o15374[HashMap$Entry.value]o15646) :|: o15374[HashMap$Entry.value]o15646 = 1
f18600_0_hashCode_Load(EOS(STATIC_18600), java.lang.Object(o15991sub), o16002, java.lang.Object(o15991sub), o16002[HashMap$Entry.value]o15991) -> f18650_0_hashCode_Load(EOS(STATIC_18650), java.lang.Object(o15991sub), java.lang.Object(o15991sub)) :|: TRUE
f18602_0_hashCode_Load(EOS(STATIC_18602), java.lang.Object(o16005sub), o16016, java.lang.Object(o16005sub), o16016[HashMap$Entry.value]o16005) -> f18652_0_hashCode_Load(EOS(STATIC_18652), java.lang.Object(o16005sub), java.lang.Object(o16005sub)) :|: TRUE
f18607_0_hashCode_Return(EOS(STATIC_18607), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))))) -> f18608_0_hashCode_Return(EOS(STATIC_18608), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))))) :|: TRUE
f18608_0_hashCode_Return(EOS(STATIC_18608), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16051, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16048)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16051, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16048))))) -> f18614_0_hashCode_Return(EOS(STATIC_18614), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16051, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16048)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16051, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16048))))) :|: TRUE
f18613_0_hashCode_Return(EOS(STATIC_18613), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))))) -> f18614_0_hashCode_Return(EOS(STATIC_18614), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))))) :|: TRUE
f18614_0_hashCode_Return(EOS(STATIC_18614), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16215, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16213, o16211)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16215, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16213, o16211))))) -> f18699_0_hashCode_Return(EOS(STATIC_18699), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16215, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16213, o16211)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16215, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16213, o16211))))) :|: TRUE
f18619_0_hashCode_Return(EOS(STATIC_18619), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))) -> f18639_0_hashCode_IntArithmetic(EOS(STATIC_18639), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))) :|: TRUE
f18624_0_hashCode_Return(EOS(STATIC_18624), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), NULL))) -> f18626_0_hashCode_Return(EOS(STATIC_18626), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), NULL))) :|: TRUE
f18625_0_hashCode_Return(EOS(STATIC_18625), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), NULL))) -> f18626_0_hashCode_Return(EOS(STATIC_18626), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), NULL))) :|: TRUE
f18626_0_hashCode_Return(EOS(STATIC_18626), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16576)), NULL))) -> f18628_0_hashCode_Return(EOS(STATIC_18628), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16576)), NULL))) :|: TRUE
f18627_0_hashCode_Return(EOS(STATIC_18627), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), NULL))) -> f18628_0_hashCode_Return(EOS(STATIC_18628), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), NULL))) :|: TRUE
f18628_0_hashCode_Return(EOS(STATIC_18628), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16607, o16605)), NULL))) -> f18701_0_hashCode_Return(EOS(STATIC_18701), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o16607, o16605)), NULL))) :|: TRUE
f18629_0_hashCode_Return(EOS(STATIC_18629), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), NULL))) -> f18628_0_hashCode_Return(EOS(STATIC_18628), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), NULL))) :|: TRUE
f18635_0_hashCode_Return(EOS(STATIC_18635), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18649_0_hashCode_Load(EOS(STATIC_18649), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18638_0_hashCode_Return(EOS(STATIC_18638), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))))) -> f18614_0_hashCode_Return(EOS(STATIC_18614), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))))) :|: TRUE
f18639_0_hashCode_IntArithmetic(EOS(STATIC_18639), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))) -> f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))) :|: TRUE
f18649_0_hashCode_Load(EOS(STATIC_18649), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18669_0_hashCode_FieldAccess(EOS(STATIC_18669), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18651_0_hashCode_Return(EOS(STATIC_18651), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))) -> f18670_0_hashCode_IntArithmetic(EOS(STATIC_18670), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))) :|: TRUE
f18653_0_hashCode_Return(EOS(STATIC_18653), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(EOC)))) -> f18655_0_hashCode_Return(EOS(STATIC_18655), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(EOC)))) :|: TRUE
f18654_0_hashCode_Return(EOS(STATIC_18654), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18655_0_hashCode_Return(EOS(STATIC_18655), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18655_0_hashCode_Return(EOS(STATIC_18655), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16973)), java.lang.Object(EOC)))) -> f18657_0_hashCode_Return(EOS(STATIC_18657), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o16973)), java.lang.Object(EOC)))) :|: TRUE
f18656_0_hashCode_Return(EOS(STATIC_18656), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(EOC)))) -> f18657_0_hashCode_Return(EOS(STATIC_18657), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18657_0_hashCode_Return(EOS(STATIC_18657), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17009, o17007)), java.lang.Object(EOC)))) -> f18703_0_hashCode_Return(EOS(STATIC_18703), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17009, o17007)), java.lang.Object(EOC)))) :|: TRUE
f18658_0_hashCode_Return(EOS(STATIC_18658), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18657_0_hashCode_Return(EOS(STATIC_18657), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18669_0_hashCode_FieldAccess(EOS(STATIC_18669), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18683_0_hashCode_NONNULL(EOS(STATIC_18683), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), o15376) :|: TRUE
f18670_0_hashCode_IntArithmetic(EOS(STATIC_18670), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))) -> f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))) :|: TRUE
f18683_0_hashCode_NONNULL(EOS(STATIC_18683), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o17577sub)) -> f18694_0_hashCode_NONNULL(EOS(STATIC_18694), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o17577sub)) :|: TRUE
f18683_0_hashCode_NONNULL(EOS(STATIC_18683), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), NULL) -> f18695_0_hashCode_NONNULL(EOS(STATIC_18695), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), NULL) :|: TRUE
f18694_0_hashCode_NONNULL(EOS(STATIC_18694), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o17577sub)) -> f18713_0_hashCode_Load(EOS(STATIC_18713), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18695_0_hashCode_NONNULL(EOS(STATIC_18695), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), NULL) -> f18714_0_hashCode_ConstantStackPush(EOS(STATIC_18714), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18698_0_hashCode_Return(EOS(STATIC_18698), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))))) -> f18699_0_hashCode_Return(EOS(STATIC_18699), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))))) :|: TRUE
f18699_0_hashCode_Return(EOS(STATIC_18699), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17590, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17588, o17586)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17590, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17588, o17586))))) -> f18706_0_hashCode_Return(EOS(STATIC_18706), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17590, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17588, o17586)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17590, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17588, o17586))))) :|: TRUE
f18700_0_hashCode_Return(EOS(STATIC_18700), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), NULL))) -> f18701_0_hashCode_Return(EOS(STATIC_18701), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), NULL))) :|: TRUE
f18701_0_hashCode_Return(EOS(STATIC_18701), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17646, o17644)), NULL))) -> f18708_0_hashCode_Return(EOS(STATIC_18708), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17646, o17644)), NULL))) :|: TRUE
f18702_0_hashCode_Return(EOS(STATIC_18702), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(EOC)))) -> f18703_0_hashCode_Return(EOS(STATIC_18703), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18703_0_hashCode_Return(EOS(STATIC_18703), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17706, o17704)), java.lang.Object(EOC)))) -> f18710_0_hashCode_Return(EOS(STATIC_18710), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17706, o17704)), java.lang.Object(EOC)))) :|: TRUE
f18706_0_hashCode_Return(EOS(STATIC_18706), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17765, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17763, o17761)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17765, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17763, o17761))))) -> f18784_0_hashCode_Return(EOS(STATIC_18784), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17765, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17763, o17761)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17765, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17763, o17761))))) :|: TRUE
f18708_0_hashCode_Return(EOS(STATIC_18708), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17819, o17817)), NULL))) -> f18786_0_hashCode_Return(EOS(STATIC_18786), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17819, o17817)), NULL))) :|: TRUE
f18710_0_hashCode_Return(EOS(STATIC_18710), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17877, o17875)), java.lang.Object(EOC)))) -> f18788_0_hashCode_Return(EOS(STATIC_18788), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o17877, o17875)), java.lang.Object(EOC)))) :|: TRUE
f18713_0_hashCode_Load(EOS(STATIC_18713), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18722_0_hashCode_FieldAccess(EOS(STATIC_18722), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18714_0_hashCode_ConstantStackPush(EOS(STATIC_18714), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18723_0_hashCode_JMP(EOS(STATIC_18723), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18722_0_hashCode_FieldAccess(EOS(STATIC_18722), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18734_0_hashCode_InvokeMethod(EOS(STATIC_18734), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o17577sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o17577sub)) :|: TRUE
f18723_0_hashCode_JMP(EOS(STATIC_18723), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18735_0_hashCode_IntArithmetic(EOS(STATIC_18735), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18724_0_hashCode_Return(EOS(STATIC_18724), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))))) -> f18706_0_hashCode_Return(EOS(STATIC_18706), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))))) :|: TRUE
f18725_0_hashCode_Return(EOS(STATIC_18725), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), NULL))) -> f18708_0_hashCode_Return(EOS(STATIC_18708), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), NULL))) :|: TRUE
f18726_0_hashCode_Return(EOS(STATIC_18726), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18710_0_hashCode_Return(EOS(STATIC_18710), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18734_0_hashCode_InvokeMethod(EOS(STATIC_18734), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18297sub)) -> f18743_0_hashCode_InvokeMethod(EOS(STATIC_18743), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18297sub)) :|: TRUE
f18734_0_hashCode_InvokeMethod(EOS(STATIC_18734), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)) -> f18744_0_hashCode_InvokeMethod(EOS(STATIC_18744), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)) :|: TRUE
f18734_0_hashCode_InvokeMethod(EOS(STATIC_18734), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) -> f18745_0_hashCode_InvokeMethod(EOS(STATIC_18745), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) :|: TRUE
f18735_0_hashCode_IntArithmetic(EOS(STATIC_18735), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18743_0_hashCode_InvokeMethod(EOS(STATIC_18743), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18297sub)) -> f18754_1_hashCode_InvokeMethod(f18754_0_hashCode_Load(EOS(STATIC_18754), java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18297sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18744_0_hashCode_InvokeMethod(EOS(STATIC_18744), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)) -> f18755_0_hashCode_IntArithmetic(EOS(STATIC_18755), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18745_0_hashCode_InvokeMethod(EOS(STATIC_18745), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) -> f18756_1_hashCode_InvokeMethod(f18756_0_hashCode_Load(EOS(STATIC_18756), java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18754_0_hashCode_Load(EOS(STATIC_18754), java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18297sub)) -> f18770_0_hashCode_Load(EOS(STATIC_18770), java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18297sub)) :|: TRUE
f18755_0_hashCode_IntArithmetic(EOS(STATIC_18755), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_0_hashCode_Load(EOS(STATIC_18756), java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) -> f18772_0_hashCode_Load(EOS(STATIC_18772), java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) :|: TRUE
f18770_0_hashCode_Load(EOS(STATIC_18770), java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18297sub)) -> f18780_0_hashCode_Load(EOS(STATIC_18780), java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18297sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18297sub), o15374[HashMap$Entry.value]o18297) :|: o15374[HashMap$Entry.value]o18297 = 1
f18772_0_hashCode_Load(EOS(STATIC_18772), java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub)) -> f18782_0_hashCode_Load(EOS(STATIC_18782), java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o18299sub), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(o18299sub), o15374[HashMap$Entry.value]o18299) :|: o15374[HashMap$Entry.value]o18299 = 1
f18780_0_hashCode_Load(EOS(STATIC_18780), java.lang.Object(o18870sub), o18881, java.lang.Object(o18870sub), o18881[HashMap$Entry.value]o18870) -> f18812_0_hashCode_Load(EOS(STATIC_18812), java.lang.Object(o18870sub), java.lang.Object(o18870sub)) :|: TRUE
f18782_0_hashCode_Load(EOS(STATIC_18782), java.lang.Object(o18884sub), o18895, java.lang.Object(o18884sub), o18895[HashMap$Entry.value]o18884) -> f18814_0_hashCode_Load(EOS(STATIC_18814), java.lang.Object(o18884sub), java.lang.Object(o18884sub)) :|: TRUE
f18783_0_hashCode_Return(EOS(STATIC_18783), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18784_0_hashCode_Return(EOS(STATIC_18784), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18784_0_hashCode_Return(EOS(STATIC_18784), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18906, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18904, o18902)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18906, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18904, o18902))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18906, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18904, o18902)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18906, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18904, o18902))))) :|: TRUE
f18785_0_hashCode_Return(EOS(STATIC_18785), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18786_0_hashCode_Return(EOS(STATIC_18786), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18786_0_hashCode_Return(EOS(STATIC_18786), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18960, o18958)), NULL))) -> f18924_0_hashCode_Return(EOS(STATIC_18924), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o18960, o18958)), NULL))) :|: TRUE
f18787_0_hashCode_Return(EOS(STATIC_18787), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18788_0_hashCode_Return(EOS(STATIC_18788), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18788_0_hashCode_Return(EOS(STATIC_18788), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o19018, o19016)), java.lang.Object(EOC)))) -> f18926_0_hashCode_Return(EOS(STATIC_18926), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o19018, o19016)), java.lang.Object(EOC)))) :|: TRUE
f18800_0_hashCode_Return(EOS(STATIC_18800), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18784_0_hashCode_Return(EOS(STATIC_18784), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18801_0_hashCode_Return(EOS(STATIC_18801), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18786_0_hashCode_Return(EOS(STATIC_18786), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18802_0_hashCode_Return(EOS(STATIC_18802), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18788_0_hashCode_Return(EOS(STATIC_18788), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18813_0_hashCode_Return(EOS(STATIC_18813), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18836_0_hashCode_IntArithmetic(EOS(STATIC_18836), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18815_0_hashCode_Return(EOS(STATIC_18815), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18817_0_hashCode_Return(EOS(STATIC_18817), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18816_0_hashCode_Return(EOS(STATIC_18816), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18817_0_hashCode_Return(EOS(STATIC_18817), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18817_0_hashCode_Return(EOS(STATIC_18817), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o19741)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18819_0_hashCode_Return(EOS(STATIC_18819), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o19741)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18818_0_hashCode_Return(EOS(STATIC_18818), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18819_0_hashCode_Return(EOS(STATIC_18819), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18819_0_hashCode_Return(EOS(STATIC_18819), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o19785, o19783)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18822_0_hashCode_Return(EOS(STATIC_18822), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o19785, o19783)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18820_0_hashCode_Return(EOS(STATIC_18820), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18819_0_hashCode_Return(EOS(STATIC_18819), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18821_0_hashCode_Return(EOS(STATIC_18821), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18822_0_hashCode_Return(EOS(STATIC_18822), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18822_0_hashCode_Return(EOS(STATIC_18822), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o19870, o19868)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18825_0_hashCode_Return(EOS(STATIC_18825), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o19870, o19868)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18823_0_hashCode_Return(EOS(STATIC_18823), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18822_0_hashCode_Return(EOS(STATIC_18822), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18824_0_hashCode_Return(EOS(STATIC_18824), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18825_0_hashCode_Return(EOS(STATIC_18825), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18825_0_hashCode_Return(EOS(STATIC_18825), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o19952, o19950)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18854_0_hashCode_Return(EOS(STATIC_18854), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o19952, o19950)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18826_0_hashCode_Return(EOS(STATIC_18826), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18825_0_hashCode_Return(EOS(STATIC_18825), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18836_0_hashCode_IntArithmetic(EOS(STATIC_18836), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18854_0_hashCode_Return(EOS(STATIC_18854), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o20580, o20578)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18928_0_hashCode_Return(EOS(STATIC_18928), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o20580, o20578)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18882_0_hashCode_Return(EOS(STATIC_18882), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18784_0_hashCode_Return(EOS(STATIC_18784), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18883_0_hashCode_Return(EOS(STATIC_18883), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18786_0_hashCode_Return(EOS(STATIC_18786), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18884_0_hashCode_Return(EOS(STATIC_18884), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18788_0_hashCode_Return(EOS(STATIC_18788), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18885_0_hashCode_Return(EOS(STATIC_18885), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18854_0_hashCode_Return(EOS(STATIC_18854), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18934_0_hashCode_Load(EOS(STATIC_18934), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18924_0_hashCode_Return(EOS(STATIC_18924), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21671, o21669)), NULL))) -> f18935_0_hashCode_IntArithmetic(EOS(STATIC_18935), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21671, o21669)), NULL))) :|: TRUE
f18926_0_hashCode_Return(EOS(STATIC_18926), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21734, o21732)), java.lang.Object(EOC)))) -> f18936_0_hashCode_IntArithmetic(EOS(STATIC_18936), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21734, o21732)), java.lang.Object(EOC)))) :|: TRUE
f18928_0_hashCode_Return(EOS(STATIC_18928), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21797, o21795)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18937_0_hashCode_IntArithmetic(EOS(STATIC_18937), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21797, o21795)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18934_0_hashCode_Load(EOS(STATIC_18934), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18943_0_hashCode_FieldAccess(EOS(STATIC_18943), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18935_0_hashCode_IntArithmetic(EOS(STATIC_18935), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21671, o21669)), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21671, o21669)), NULL))) :|: TRUE
f18936_0_hashCode_IntArithmetic(EOS(STATIC_18936), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21734, o21732)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21734, o21732)), java.lang.Object(EOC)))) :|: TRUE
f18937_0_hashCode_IntArithmetic(EOS(STATIC_18937), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21797, o21795)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21797, o21795)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18943_0_hashCode_FieldAccess(EOS(STATIC_18943), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21612, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), o21612) :|: TRUE
f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22087sub)) -> f18960_0_hashCode_NONNULL(EOS(STATIC_18960), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22087sub)) :|: TRUE
f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), NULL) -> f18961_0_hashCode_NONNULL(EOS(STATIC_18961), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), NULL) :|: TRUE
f18960_0_hashCode_NONNULL(EOS(STATIC_18960), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22087sub)) -> f18965_0_hashCode_Load(EOS(STATIC_18965), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18961_0_hashCode_NONNULL(EOS(STATIC_18961), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), NULL) -> f18966_0_hashCode_ConstantStackPush(EOS(STATIC_18966), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18965_0_hashCode_Load(EOS(STATIC_18965), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18981_0_hashCode_FieldAccess(EOS(STATIC_18981), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18966_0_hashCode_ConstantStackPush(EOS(STATIC_18966), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18982_0_hashCode_JMP(EOS(STATIC_18982), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18967_0_hashCode_Return(EOS(STATIC_18967), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL))))) :|: TRUE
f18968_0_hashCode_Return(EOS(STATIC_18968), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22144, o22142)), NULL)), NULL))) -> f18924_0_hashCode_Return(EOS(STATIC_18924), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22144, o22142)), NULL)), NULL))) :|: TRUE
f18969_0_hashCode_Return(EOS(STATIC_18969), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22184, o22182)), NULL)), java.lang.Object(EOC)))) -> f18926_0_hashCode_Return(EOS(STATIC_18926), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22184, o22182)), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18970_0_hashCode_Return(EOS(STATIC_18970), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22224, o22222)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18928_0_hashCode_Return(EOS(STATIC_18928), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22224, o22222)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18971_0_hashCode_Return(EOS(STATIC_18971), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC)))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC)))))) :|: TRUE
f18972_0_hashCode_Return(EOS(STATIC_18972), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22306, o22304)), java.lang.Object(EOC))), NULL))) -> f18924_0_hashCode_Return(EOS(STATIC_18924), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22306, o22304)), java.lang.Object(EOC))), NULL))) :|: TRUE
f18973_0_hashCode_Return(EOS(STATIC_18973), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22347, o22345)), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18926_0_hashCode_Return(EOS(STATIC_18926), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22347, o22345)), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18974_0_hashCode_Return(EOS(STATIC_18974), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22388, o22386)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18928_0_hashCode_Return(EOS(STATIC_18928), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22388, o22386)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18975_0_hashCode_Return(EOS(STATIC_18975), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18976_0_hashCode_Return(EOS(STATIC_18976), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22470, o22468)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18924_0_hashCode_Return(EOS(STATIC_18924), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22470, o22468)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18977_0_hashCode_Return(EOS(STATIC_18977), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22511, o22509)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18926_0_hashCode_Return(EOS(STATIC_18926), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22511, o22509)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18978_0_hashCode_Return(EOS(STATIC_18978), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22552, o22550)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18928_0_hashCode_Return(EOS(STATIC_18928), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22552, o22550)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18981_0_hashCode_FieldAccess(EOS(STATIC_18981), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18986_0_hashCode_InvokeMethod(EOS(STATIC_18986), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22087sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22087sub)) :|: TRUE
f18982_0_hashCode_JMP(EOS(STATIC_18982), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18987_0_hashCode_IntArithmetic(EOS(STATIC_18987), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18986_0_hashCode_InvokeMethod(EOS(STATIC_18986), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22883sub)) -> f18990_0_hashCode_InvokeMethod(EOS(STATIC_18990), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22883sub)) :|: TRUE
f18986_0_hashCode_InvokeMethod(EOS(STATIC_18986), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(EOC)) -> f18991_0_hashCode_InvokeMethod(EOS(STATIC_18991), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(EOC)) :|: TRUE
f18986_0_hashCode_InvokeMethod(EOS(STATIC_18986), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) -> f18992_0_hashCode_InvokeMethod(EOS(STATIC_18992), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) :|: TRUE
f18987_0_hashCode_IntArithmetic(EOS(STATIC_18987), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18990_0_hashCode_InvokeMethod(EOS(STATIC_18990), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22883sub)) -> f18996_1_hashCode_InvokeMethod(f18996_0_hashCode_Load(EOS(STATIC_18996), java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22883sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18991_0_hashCode_InvokeMethod(EOS(STATIC_18991), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(EOC)) -> f18997_0_hashCode_IntArithmetic(EOS(STATIC_18997), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18992_0_hashCode_InvokeMethod(EOS(STATIC_18992), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) -> f18998_1_hashCode_InvokeMethod(f18998_0_hashCode_Load(EOS(STATIC_18998), java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18996_0_hashCode_Load(EOS(STATIC_18996), java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22883sub)) -> f19002_0_hashCode_Load(EOS(STATIC_19002), java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22883sub)) :|: TRUE
f18997_0_hashCode_IntArithmetic(EOS(STATIC_18997), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_0_hashCode_Load(EOS(STATIC_18998), java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) -> f19004_0_hashCode_Load(EOS(STATIC_19004), java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) :|: TRUE
f19002_0_hashCode_Load(EOS(STATIC_19002), java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22883sub)) -> f19006_0_hashCode_Load(EOS(STATIC_19006), java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22883sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22883sub), o21606[HashMap$Entry.value]o22883) :|: o21606[HashMap$Entry.value]o22883 = 1
f19004_0_hashCode_Load(EOS(STATIC_19004), java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub)) -> f19008_0_hashCode_Load(EOS(STATIC_19008), java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o22885sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608)))), java.lang.Object(o22885sub), o21606[HashMap$Entry.value]o22885) :|: o21606[HashMap$Entry.value]o22885 = 1
f19006_0_hashCode_Load(EOS(STATIC_19006), java.lang.Object(o23156sub), o23167, java.lang.Object(o23156sub), o23167[HashMap$Entry.value]o23156) -> f19022_0_hashCode_Load(EOS(STATIC_19022), java.lang.Object(o23156sub), java.lang.Object(o23156sub)) :|: TRUE
f19008_0_hashCode_Load(EOS(STATIC_19008), java.lang.Object(o23170sub), o23181, java.lang.Object(o23170sub), o23181[HashMap$Entry.value]o23170) -> f19024_0_hashCode_Load(EOS(STATIC_19024), java.lang.Object(o23170sub), java.lang.Object(o23170sub)) :|: TRUE
f19009_0_hashCode_Return(EOS(STATIC_19009), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008))))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008))))))) :|: TRUE
f19010_0_hashCode_Return(EOS(STATIC_19010), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23050, o23048)))), NULL))) -> f18924_0_hashCode_Return(EOS(STATIC_18924), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23050, o23048)))), NULL))) :|: TRUE
f19011_0_hashCode_Return(EOS(STATIC_19011), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23090, o23088)))), java.lang.Object(EOC)))) -> f18926_0_hashCode_Return(EOS(STATIC_18926), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23090, o23088)))), java.lang.Object(EOC)))) :|: TRUE
f19012_0_hashCode_Return(EOS(STATIC_19012), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23130, o23128)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18928_0_hashCode_Return(EOS(STATIC_18928), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23130, o23128)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f19015_0_hashCode_Return(EOS(STATIC_19015), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268))))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268))))))) :|: TRUE
f19016_0_hashCode_Return(EOS(STATIC_19016), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23311, o23309)))), NULL))) -> f18924_0_hashCode_Return(EOS(STATIC_18924), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23311, o23309)))), NULL))) :|: TRUE
f19017_0_hashCode_Return(EOS(STATIC_19017), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23352, o23350)))), java.lang.Object(EOC)))) -> f18926_0_hashCode_Return(EOS(STATIC_18926), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23352, o23350)))), java.lang.Object(EOC)))) :|: TRUE
f19018_0_hashCode_Return(EOS(STATIC_19018), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23393, o23391)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18928_0_hashCode_Return(EOS(STATIC_18928), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23393, o23391)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f19023_0_hashCode_Return(EOS(STATIC_19023), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19047_0_hashCode_IntArithmetic(EOS(STATIC_19047), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19025_0_hashCode_Return(EOS(STATIC_19025), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19027_0_hashCode_Return(EOS(STATIC_19027), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19026_0_hashCode_Return(EOS(STATIC_19026), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19027_0_hashCode_Return(EOS(STATIC_19027), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19027_0_hashCode_Return(EOS(STATIC_19027), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o24131)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24128, o24126))))) -> f19029_0_hashCode_Return(EOS(STATIC_19029), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, o24131)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24128, o24126))))) :|: TRUE
f19028_0_hashCode_Return(EOS(STATIC_19028), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19029_0_hashCode_Return(EOS(STATIC_19029), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19029_0_hashCode_Return(EOS(STATIC_19029), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24187, o24185)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24182, o24180))))) -> f19032_0_hashCode_Return(EOS(STATIC_19032), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24187, o24185)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24182, o24180))))) :|: TRUE
f19030_0_hashCode_Return(EOS(STATIC_19030), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19029_0_hashCode_Return(EOS(STATIC_19029), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19031_0_hashCode_Return(EOS(STATIC_19031), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19032_0_hashCode_Return(EOS(STATIC_19032), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19032_0_hashCode_Return(EOS(STATIC_19032), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24293, o24291)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24288, o24286))))) -> f19035_0_hashCode_Return(EOS(STATIC_19035), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24293, o24291)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24288, o24286))))) :|: TRUE
f19033_0_hashCode_Return(EOS(STATIC_19033), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19032_0_hashCode_Return(EOS(STATIC_19032), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19034_0_hashCode_Return(EOS(STATIC_19034), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19035_0_hashCode_Return(EOS(STATIC_19035), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19035_0_hashCode_Return(EOS(STATIC_19035), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24396, o24394)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24391, o24389))))) -> f19039_0_hashCode_Return(EOS(STATIC_19039), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24396, o24394)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24391, o24389))))) :|: TRUE
f19036_0_hashCode_Return(EOS(STATIC_19036), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19035_0_hashCode_Return(EOS(STATIC_19035), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19037_0_hashCode_Return(EOS(STATIC_19037), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19035_0_hashCode_Return(EOS(STATIC_19035), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19038_0_hashCode_Return(EOS(STATIC_19038), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23935, o23933)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19039_0_hashCode_Return(EOS(STATIC_19039), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23935, o23933)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19039_0_hashCode_Return(EOS(STATIC_19039), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24520, o24518)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24515, o24513))))) -> f19043_0_hashCode_Return(EOS(STATIC_19043), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24520, o24518)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24515, o24513))))) :|: TRUE
f19040_0_hashCode_Return(EOS(STATIC_19040), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23976, o23974)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19039_0_hashCode_Return(EOS(STATIC_19039), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23976, o23974)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19041_0_hashCode_Return(EOS(STATIC_19041), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24017, o24015)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19039_0_hashCode_Return(EOS(STATIC_19039), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24017, o24015)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19042_0_hashCode_Return(EOS(STATIC_19042), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24057, o24055)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19043_0_hashCode_Return(EOS(STATIC_19043), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24057, o24055)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19043_0_hashCode_Return(EOS(STATIC_19043), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24644, o24642)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24639, o24637))))) -> f19048_0_hashCode_IntArithmetic(EOS(STATIC_19048), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24644, o24642)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24639, o24637))))) :|: TRUE
f19044_0_hashCode_Return(EOS(STATIC_19044), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24098, o24096)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19043_0_hashCode_Return(EOS(STATIC_19043), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24098, o24096)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19047_0_hashCode_IntArithmetic(EOS(STATIC_19047), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19048_0_hashCode_IntArithmetic(EOS(STATIC_19048), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24644, o24642)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24639, o24637))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24644, o24642)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24639, o24637))))) :|: TRUE
f19061_0_hashCode_Return(EOS(STATIC_19061), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942))))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942))))))) :|: TRUE
f19062_0_hashCode_Return(EOS(STATIC_19062), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24985, o24983)))), NULL))) -> f18924_0_hashCode_Return(EOS(STATIC_18924), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24985, o24983)))), NULL))) :|: TRUE
f19063_0_hashCode_Return(EOS(STATIC_19063), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25026, o25024)))), java.lang.Object(EOC)))) -> f18926_0_hashCode_Return(EOS(STATIC_18926), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25026, o25024)))), java.lang.Object(EOC)))) :|: TRUE
f19064_0_hashCode_Return(EOS(STATIC_19064), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25067, o25065)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18928_0_hashCode_Return(EOS(STATIC_18928), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25067, o25065)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f19065_0_hashCode_Return(EOS(STATIC_19065), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25108, o25106)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19043_0_hashCode_Return(EOS(STATIC_19043), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25108, o25106)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f19066_0_hashCode_Return(EOS(STATIC_19066), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147))))))) -> f18922_0_hashCode_Return(EOS(STATIC_18922), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147))))))) :|: TRUE
f19067_0_hashCode_Return(EOS(STATIC_19067), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25196, o25194)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25193, o25191)))), NULL))) -> f18924_0_hashCode_Return(EOS(STATIC_18924), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25196, o25194)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25193, o25191)))), NULL))) :|: TRUE
f19068_0_hashCode_Return(EOS(STATIC_19068), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25240, o25238)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25237, o25235)))), java.lang.Object(EOC)))) -> f18926_0_hashCode_Return(EOS(STATIC_18926), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25240, o25238)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25237, o25235)))), java.lang.Object(EOC)))) :|: TRUE
f19069_0_hashCode_Return(EOS(STATIC_19069), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25284, o25282)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25281, o25279)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18928_0_hashCode_Return(EOS(STATIC_18928), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25284, o25282)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25281, o25279)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f19070_0_hashCode_Return(EOS(STATIC_19070), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25328, o25326)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25325, o25323)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19043_0_hashCode_Return(EOS(STATIC_19043), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25328, o25326)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25325, o25323)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18539_0_hashCode_Load(EOS(STATIC_18539), java.lang.Object(o15478sub), java.lang.Object(o15478sub)) -> f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o15478sub), java.lang.Object(o15478sub)) :|: TRUE
f18623_0_hashCode_Load(EOS(STATIC_18623), java.lang.Object(o15769sub), java.lang.Object(o15769sub)) -> f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o15769sub), java.lang.Object(o15769sub)) :|: TRUE
f18652_0_hashCode_Load(EOS(STATIC_18652), java.lang.Object(o16005sub), java.lang.Object(o16005sub)) -> f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o16005sub), java.lang.Object(o16005sub)) :|: TRUE
f18814_0_hashCode_Load(EOS(STATIC_18814), java.lang.Object(o18884sub), java.lang.Object(o18884sub)) -> f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o18884sub), java.lang.Object(o18884sub)) :|: TRUE
f19024_0_hashCode_Load(EOS(STATIC_19024), java.lang.Object(o23170sub), java.lang.Object(o23170sub)) -> f18398_0_hashCode_Load(EOS(STATIC_18398), java.lang.Object(o23170sub), java.lang.Object(o23170sub)) :|: TRUE
f18525_0_hashCode_Load(EOS(STATIC_18525), java.lang.Object(o15536sub), java.lang.Object(o15536sub)) -> f18536_0_hashCode_FieldAccess(EOS(STATIC_18536), java.lang.Object(o15536sub), java.lang.Object(o15536sub)) :|: TRUE
f18536_0_hashCode_FieldAccess(EOS(STATIC_18536), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f18549_0_hashCode_FieldAccess(EOS(STATIC_18549), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f18549_0_hashCode_FieldAccess(EOS(STATIC_18549), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f18561_0_hashCode_ConstantStackPush(EOS(STATIC_18561), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f18561_0_hashCode_ConstantStackPush(EOS(STATIC_18561), java.lang.Object(javaUtilEx.Content(EOC))) -> f18572_0_hashCode_IntArithmetic(EOS(STATIC_18572), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f18572_0_hashCode_IntArithmetic(EOS(STATIC_18572), java.lang.Object(javaUtilEx.Content(EOC))) -> f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f18477_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18635_0_hashCode_Return(EOS(STATIC_18635), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))))) -> f18582_0_hashCode_Return(EOS(STATIC_18582), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))))) -> f18607_0_hashCode_Return(EOS(STATIC_18607), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))))) -> f18613_0_hashCode_Return(EOS(STATIC_18613), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))))) -> f18638_0_hashCode_Return(EOS(STATIC_18638), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))))) -> f18698_0_hashCode_Return(EOS(STATIC_18698), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))))) -> f18724_0_hashCode_Return(EOS(STATIC_18724), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18783_0_hashCode_Return(EOS(STATIC_18783), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18800_0_hashCode_Return(EOS(STATIC_18800), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18882_0_hashCode_Return(EOS(STATIC_18882), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL))))) -> f18967_0_hashCode_Return(EOS(STATIC_18967), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104, o22102)), NULL))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC)))))) -> f18971_0_hashCode_Return(EOS(STATIC_18971), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265, o22263)), java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18975_0_hashCode_Return(EOS(STATIC_18975), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429, o22427)), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008))))))) -> f19009_0_hashCode_Return(EOS(STATIC_19009), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010, o23008))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268))))))) -> f19015_0_hashCode_Return(EOS(STATIC_19015), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270, o23268))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942))))))) -> f19061_0_hashCode_Return(EOS(STATIC_19061), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944, o24942))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147))))))) -> f19066_0_hashCode_Return(EOS(STATIC_19066), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152, o25150)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149, o25147))))))) :|: TRUE
f18552_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))) -> f18619_0_hashCode_Return(EOS(STATIC_18619), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), NULL))) -> f18624_0_hashCode_Return(EOS(STATIC_18624), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), NULL))) -> f18625_0_hashCode_Return(EOS(STATIC_18625), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), NULL))) -> f18627_0_hashCode_Return(EOS(STATIC_18627), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), NULL))) -> f18629_0_hashCode_Return(EOS(STATIC_18629), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), NULL))) -> f18700_0_hashCode_Return(EOS(STATIC_18700), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), NULL))) -> f18725_0_hashCode_Return(EOS(STATIC_18725), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18785_0_hashCode_Return(EOS(STATIC_18785), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18801_0_hashCode_Return(EOS(STATIC_18801), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18883_0_hashCode_Return(EOS(STATIC_18883), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22144, o22142)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22144, o22142)), NULL)), NULL))) -> f18968_0_hashCode_Return(EOS(STATIC_18968), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22144, o22142)), NULL)), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22306, o22304)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22306, o22304)), java.lang.Object(EOC))), NULL))) -> f18972_0_hashCode_Return(EOS(STATIC_18972), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22306, o22304)), java.lang.Object(EOC))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22470, o22468)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22470, o22468)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18976_0_hashCode_Return(EOS(STATIC_18976), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22470, o22468)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23050, o23048))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23050, o23048)))), NULL))) -> f19010_0_hashCode_Return(EOS(STATIC_19010), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23050, o23048)))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23311, o23309))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23311, o23309)))), NULL))) -> f19016_0_hashCode_Return(EOS(STATIC_19016), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23311, o23309)))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24985, o24983))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24985, o24983)))), NULL))) -> f19062_0_hashCode_Return(EOS(STATIC_19062), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24985, o24983)))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25196, o25194)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25193, o25191))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25196, o25194)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25193, o25191)))), NULL))) -> f19067_0_hashCode_Return(EOS(STATIC_19067), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25196, o25194)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25193, o25191)))), NULL))) :|: TRUE
f18573_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))) -> f18651_0_hashCode_Return(EOS(STATIC_18651), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(EOC)))) -> f18653_0_hashCode_Return(EOS(STATIC_18653), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18654_0_hashCode_Return(EOS(STATIC_18654), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(EOC)))) -> f18656_0_hashCode_Return(EOS(STATIC_18656), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18658_0_hashCode_Return(EOS(STATIC_18658), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(EOC)))) -> f18702_0_hashCode_Return(EOS(STATIC_18702), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18726_0_hashCode_Return(EOS(STATIC_18726), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18787_0_hashCode_Return(EOS(STATIC_18787), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18802_0_hashCode_Return(EOS(STATIC_18802), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18884_0_hashCode_Return(EOS(STATIC_18884), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22184, o22182)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22184, o22182)), NULL)), java.lang.Object(EOC)))) -> f18969_0_hashCode_Return(EOS(STATIC_18969), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22184, o22182)), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22347, o22345)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22347, o22345)), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18973_0_hashCode_Return(EOS(STATIC_18973), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22347, o22345)), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22511, o22509)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22511, o22509)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18977_0_hashCode_Return(EOS(STATIC_18977), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22511, o22509)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23090, o23088))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23090, o23088)))), java.lang.Object(EOC)))) -> f19011_0_hashCode_Return(EOS(STATIC_19011), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23090, o23088)))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23352, o23350))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23352, o23350)))), java.lang.Object(EOC)))) -> f19017_0_hashCode_Return(EOS(STATIC_19017), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23352, o23350)))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25026, o25024))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25026, o25024)))), java.lang.Object(EOC)))) -> f19063_0_hashCode_Return(EOS(STATIC_19063), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25026, o25024)))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25240, o25238)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25237, o25235))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25240, o25238)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25237, o25235)))), java.lang.Object(EOC)))) -> f19068_0_hashCode_Return(EOS(STATIC_19068), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25240, o25238)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25237, o25235)))), java.lang.Object(EOC)))) :|: TRUE
f18754_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18813_0_hashCode_Return(EOS(STATIC_18813), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18815_0_hashCode_Return(EOS(STATIC_18815), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18816_0_hashCode_Return(EOS(STATIC_18816), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18818_0_hashCode_Return(EOS(STATIC_18818), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18820_0_hashCode_Return(EOS(STATIC_18820), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18821_0_hashCode_Return(EOS(STATIC_18821), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18823_0_hashCode_Return(EOS(STATIC_18823), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18824_0_hashCode_Return(EOS(STATIC_18824), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18826_0_hashCode_Return(EOS(STATIC_18826), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18885_0_hashCode_Return(EOS(STATIC_18885), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22224, o22222)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22224, o22222)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18970_0_hashCode_Return(EOS(STATIC_18970), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22224, o22222)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22388, o22386)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22388, o22386)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18974_0_hashCode_Return(EOS(STATIC_18974), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22388, o22386)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22552, o22550)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22552, o22550)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18978_0_hashCode_Return(EOS(STATIC_18978), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22552, o22550)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23130, o23128))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23130, o23128)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f19012_0_hashCode_Return(EOS(STATIC_19012), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23130, o23128)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23393, o23391))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23393, o23391)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f19018_0_hashCode_Return(EOS(STATIC_19018), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23393, o23391)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25067, o25065))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25067, o25065)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f19064_0_hashCode_Return(EOS(STATIC_19064), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25067, o25065)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25284, o25282)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25281, o25279))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25284, o25282)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25281, o25279)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f19069_0_hashCode_Return(EOS(STATIC_19069), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25284, o25282)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25281, o25279)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18996_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19023_0_hashCode_Return(EOS(STATIC_19023), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19025_0_hashCode_Return(EOS(STATIC_19025), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19026_0_hashCode_Return(EOS(STATIC_19026), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19028_0_hashCode_Return(EOS(STATIC_19028), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19030_0_hashCode_Return(EOS(STATIC_19030), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19031_0_hashCode_Return(EOS(STATIC_19031), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19033_0_hashCode_Return(EOS(STATIC_19033), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19034_0_hashCode_Return(EOS(STATIC_19034), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19036_0_hashCode_Return(EOS(STATIC_19036), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19037_0_hashCode_Return(EOS(STATIC_19037), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23935, o23933)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23935, o23933)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19038_0_hashCode_Return(EOS(STATIC_19038), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23935, o23933)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23976, o23974)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23976, o23974)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19040_0_hashCode_Return(EOS(STATIC_19040), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23976, o23974)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24017, o24015)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24017, o24015)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19041_0_hashCode_Return(EOS(STATIC_19041), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24017, o24015)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24057, o24055))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24057, o24055)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19042_0_hashCode_Return(EOS(STATIC_19042), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24057, o24055)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24098, o24096))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24098, o24096)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19044_0_hashCode_Return(EOS(STATIC_19044), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24098, o24096)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25108, o25106))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25108, o25106)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19065_0_hashCode_Return(EOS(STATIC_19065), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25108, o25106)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25328, o25326)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25325, o25323))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25328, o25326)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25325, o25323)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) -> f19070_0_hashCode_Return(EOS(STATIC_19070), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25328, o25326)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25325, o25323)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610, o21608))))) :|: TRUE
Combined rules. Obtained 21 conditional rules for P and 98 conditional rules for R.P rules:
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0))) -> f18479_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104:0, o22102:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104:0, o22102:0)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104:0, o22102:0)), NULL))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104:0, o22102:0)), NULL))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944:0, o24942:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944:0, o24942:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944:0, o24942:0))))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944:0, o24942:0))))))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), NULL)), NULL) -> f18554_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), NULL))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(o15386sub:0))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(o15386sub:0))), java.lang.Object(o15386sub:0)) -> f18477_1_hashCode_InvokeMethod(f25663_0_hashCode_Load(EOS(STATIC_25663), java.lang.Object(o15386sub:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(o15386sub:0))), java.lang.Object(o15386sub:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(o15386sub:0))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(o15386sub:0)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(EOC))), java.lang.Object(EOC)) -> f18575_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(EOC)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270:0, o23268:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270:0, o23268:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270:0, o23268:0))))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270:0, o23268:0))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152:0, o25150:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149:0, o25147:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152:0, o25150:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149:0, o25147:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152:0, o25150:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149:0, o25147:0))))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152:0, o25150:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149:0, o25147:0))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429:0, o22427:0)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429:0, o22427:0)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429:0, o22427:0)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429:0, o22427:0)), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265:0, o22263:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265:0, o22263:0)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265:0, o22263:0)), java.lang.Object(EOC)))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265:0, o22263:0)), java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010:0, o23008:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010:0, o23008:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010:0, o23008:0))))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010:0, o23008:0))))))) :|: TRUE
f18477_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18756_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))))) :|: TRUE
R rules:
f18479_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)))), o15376:0) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), NULL) -> f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23311:0, o23309:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23311:0, o23309:0)))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23311:0, o23309:0)))), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25240:0, o25238:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25237:0, o25235:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25240:0, o25238:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25237:0, o25235:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25240:0, o25238:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25237:0, o25235:0)))), java.lang.Object(EOC)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)))), o15376:0) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010:0, o23008:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010:0, o23008:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010:0, o23008:0))))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010:0, o23008:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23010:0, o23008:0)))))), o15376:0) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)))), o15376:0) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22470:0, o22468:0)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22470:0, o22468:0)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22470:0, o22468:0)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(EOC)) -> f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), NULL)), NULL) -> f18554_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22184:0, o22182:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22184:0, o22182:0)), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22184:0, o22182:0)), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0))) -> f18479_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:1, o15375:0))))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), NULL) -> f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25026:0, o25024:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25026:0, o25024:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25026:0, o25024:0)))), java.lang.Object(EOC)))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23130:0, o23128:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23130:0, o23128:0)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23130:0, o23128:0)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18477_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), NULL))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)) -> f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))) :|: TRUE
f18477_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))) -> f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22224:0, o22222:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22224:0, o22222:0)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22224:0, o22222:0)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22347:0, o22345:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22347:0, o22345:0)), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22347:0, o22345:0)), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429:0, o22427:0)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429:0, o22427:0)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429:0, o22427:0)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429:0, o22427:0)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22429:0, o22427:0)), java.lang.Object(javaUtilEx.Content(EOC)))))), o15376:0) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22306:0, o22304:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22306:0, o22304:0)), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22306:0, o22304:0)), java.lang.Object(EOC))), NULL))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22552:0, o22550:0)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22552:0, o22550:0)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22552:0, o22550:0)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22144:0, o22142:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22144:0, o22142:0)), NULL)), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22144:0, o22142:0)), NULL)), NULL))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944:0, o24942:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944:0, o24942:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944:0, o24942:0))))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944:0, o24942:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24944:0, o24942:0)))))), o15376:0) :|: TRUE
f18756_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25067:0, o25065:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25067:0, o25065:0)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25067:0, o25065:0)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0)))), java.lang.Object(EOC)) -> f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))))), o15376:0) :|: TRUE
f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0)))), java.lang.Object(javaUtilEx.Content(EOC))) -> f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23393:0, o23391:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23393:0, o23391:0)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23393:0, o23391:0)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(EOC)) -> f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23976:0, o23974:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23976:0, o23974:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23976:0, o23974:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))))), o15376:0) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24057:0, o24055:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24057:0, o24055:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24057:0, o24055:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0)))), NULL) -> f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270:0, o23268:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270:0, o23268:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270:0, o23268:0))))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270:0, o23268:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23270:0, o23268:0)))))), o15376:0) :|: TRUE
f18554_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25196:0, o25194:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25193:0, o25191:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25196:0, o25194:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25193:0, o25191:0)))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25196:0, o25194:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25193:0, o25191:0)))), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22511:0, o22509:0)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22511:0, o22509:0)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22511:0, o22509:0)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(EOC)))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25328:0, o25326:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25325:0, o25323:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25328:0, o25326:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25325:0, o25323:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25328:0, o25326:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25325:0, o25323:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), NULL))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))))), o15376:0) :|: TRUE
f18477_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))))), o15376:0) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265:0, o22263:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265:0, o22263:0)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265:0, o22263:0)), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265:0, o22263:0)), java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22265:0, o22263:0)), java.lang.Object(EOC))))), o15376:0) :|: TRUE
f18554_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24985:0, o24983:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24985:0, o24983:0)))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24985:0, o24983:0)))), NULL))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22388:0, o22386:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22388:0, o22386:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22388:0, o22386:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(EOC)))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18477_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18756_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23352:0, o23350:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23352:0, o23350:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23352:0, o23350:0)))), java.lang.Object(EOC)))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23935:0, o23933:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23935:0, o23933:0)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23935:0, o23933:0)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(EOC))), java.lang.Object(EOC)) -> f18575_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), o15375:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, o15375:0)), java.lang.Object(EOC)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))))), o15376:0) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18543_0_hashCode_Return(EOS(STATIC_18543), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))))), o15376:0) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), NULL))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(EOS(STATIC_19051), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25108:0, o25106:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25108:0, o25106:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25108:0, o25106:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152:0, o25150:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149:0, o25147:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152:0, o25150:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149:0, o25147:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152:0, o25150:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149:0, o25147:0))))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152:0, o25150:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149:0, o25147:0)))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25152:0, o25150:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25149:0, o25147:0)))))), o15376:0) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18565_0_hashCode_Return(EOS(STATIC_18565), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), NULL) -> f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18659_0_hashCode_Return(EOS(STATIC_18659), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18684_0_hashCode_Return(EOS(STATIC_18684), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18771_0_hashCode_Return(EOS(STATIC_18771), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18746_0_hashCode_Return(EOS(STATIC_18746), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24017:0, o24015:0)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24017:0, o24015:0)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24017:0, o24015:0)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18567_0_hashCode_Return(EOS(STATIC_18567), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), NULL)), NULL))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104:0, o22102:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104:0, o22102:0)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104:0, o22102:0)), NULL))))) -> f18952_0_hashCode_NONNULL(EOS(STATIC_18952), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104:0, o22102:0)), NULL)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o22104:0, o22102:0)), NULL)))), o15376:0) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23050:0, o23048:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23050:0, o23048:0)))), NULL))) -> f18944_0_hashCode_Return(EOS(STATIC_18944), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23050:0, o23048:0)))), NULL))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18846_0_hashCode_Return(EOS(STATIC_18846), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25284:0, o25282:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25281:0, o25279:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25284:0, o25282:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25281:0, o25279:0)))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25284:0, o25282:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o25281:0, o25279:0)))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(EOS(STATIC_19003), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24098:0, o24096:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24098:0, o24096:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) -> f19052_0_hashCode_Return(EOS(STATIC_19052), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o24098:0, o24096:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o21610:0, o21608:0))))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(EOS(STATIC_18993), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23090:0, o23088:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23090:0, o23088:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(EOS(STATIC_18945), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o23090:0, o23088:0)))), java.lang.Object(EOC)))) :|: TRUE
f18421_0_hashCode_NONNULL(EOS(STATIC_18421), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC))) -> f18477_1_hashCode_InvokeMethod(f18588_0_hashCode_Return(EOS(STATIC_18588), java.lang.Object(javaUtilEx.Content(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o15376:0, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18590_0_hashCode_Return(EOS(STATIC_18590), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) -> f18946_0_hashCode_Return(EOS(STATIC_18946), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
Filtered ground terms:
   f18421_0_hashCode_NONNULL(x1, x2, x3, x4) -> f18421_0_hashCode_NONNULL(x2, x3, x4)
   f18846_0_hashCode_Return(x1, x2) -> f18846_0_hashCode_Return
   f18684_0_hashCode_Return(x1, x2) -> f18684_0_hashCode_Return
   f18944_0_hashCode_Return(x1, x2) -> f18944_0_hashCode_Return(x2)
   f19051_0_hashCode_Return(x1, x2) -> f19051_0_hashCode_Return(x2)
   f25663_0_hashCode_Load(x1, x2, x3, x4) -> f25663_0_hashCode_Load(x2, x3, x4)
   f18543_0_hashCode_Return(x1, x2) -> f18543_0_hashCode_Return
   f18746_0_hashCode_Return(x1, x2) -> f18746_0_hashCode_Return
   f19003_0_hashCode_Return(x1, x2) -> f19003_0_hashCode_Return(x2)
   f18565_0_hashCode_Return(x1, x2) -> f18565_0_hashCode_Return
   f19052_0_hashCode_Return(x1, x2) -> f19052_0_hashCode_Return(x2)
   f18659_0_hashCode_Return(x1, x2) -> f18659_0_hashCode_Return
   f18590_0_hashCode_Return(x1, x2) -> f18590_0_hashCode_Return
   f18946_0_hashCode_Return(x1, x2) -> f18946_0_hashCode_Return(x2)
   f18567_0_hashCode_Return(x1, x2) -> f18567_0_hashCode_Return
   f18945_0_hashCode_Return(x1, x2) -> f18945_0_hashCode_Return(x2)
   f18993_0_hashCode_Return(x1, x2) -> f18993_0_hashCode_Return(x2)
   f18588_0_hashCode_Return(x1, x2) -> f18588_0_hashCode_Return
   f18771_0_hashCode_Return(x1, x2) -> f18771_0_hashCode_Return
   javaUtilEx.HashMap$Entry(x1, x2, x3) -> javaUtilEx.HashMap$Entry(x2, x3)
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   f18952_0_hashCode_NONNULL(x1, x2, x3, x4) -> f18952_0_hashCode_NONNULL(x2, x3, x4)
Filtered duplicate args:
   f18421_0_hashCode_NONNULL(x1, x2, x3) -> f18421_0_hashCode_NONNULL(x2)
   f18479_1_hashCode_InvokeMethod(x1, x2, x3) -> f18479_1_hashCode_InvokeMethod(x1, x3)
   f18477_1_hashCode_InvokeMethod(x1, x2, x3) -> f18477_1_hashCode_InvokeMethod(x1, x3)
   f25663_0_hashCode_Load(x1, x2, x3) -> f25663_0_hashCode_Load(x2)
   f18952_0_hashCode_NONNULL(x1, x2, x3) -> f18952_0_hashCode_NONNULL(x2)
Combined rules. Obtained 22 conditional rules for P and 97 conditional rules for R.P rules:
F18479_1_HASHCODE_INVOKEMETHOD(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18477_1_HASHCODE_INVOKEMETHOD(f18588_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.Content)))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(EOC)))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), NULL))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) -> F18479_1_HASHCODE_INVOKEMETHOD(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(o15386sub:0:0)))) -> F18477_1_HASHCODE_INVOKEMETHOD(f25663_0_hashCode_Load(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(o15386sub:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(o15386sub:0:0)))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
F18479_1_HASHCODE_INVOKEMETHOD(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))) :|: TRUE
R rules:
f18554_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22306:0:0, o22304:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22306:0:0, o22304:0:0)), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22306:0:0, o22304:0:0)), java.lang.Object(EOC))), NULL))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(EOC)))) -> f18575_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(EOC)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23393:0:0, o23391:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23393:0:0, o23391:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23393:0:0, o23391:0:0)))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) -> f18479_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content)))) -> f18846_0_hashCode_Return :|: TRUE
f18575_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25196:0:0, o25194:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25193:0:0, o25191:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25196:0:0, o25194:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25193:0:0, o25191:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25196:0:0, o25194:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25193:0:0, o25191:0:0)))), NULL))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25108:0:0, o25106:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25108:0:0, o25106:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25108:0:0, o25106:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o24057:0:0, o24055:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o24057:0:0, o24055:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o24057:0:0, o24055:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25284:0:0, o25282:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25281:0:0, o25279:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25284:0:0, o25282:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25281:0:0, o25279:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25284:0:0, o25282:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25281:0:0, o25279:0:0)))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23090:0:0, o23088:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23090:0:0, o23088:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23090:0:0, o23088:0:0)))), java.lang.Object(EOC)))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC)))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25328:0:0, o25326:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25325:0:0, o25323:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25328:0:0, o25326:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25325:0:0, o25323:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25328:0:0, o25326:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25325:0:0, o25323:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22144:0:0, o22142:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22144:0:0, o22142:0:0)), NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22144:0:0, o22142:0:0)), NULL)), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22470:0:0, o22468:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22470:0:0, o22468:0:0)), java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22470:0:0, o22468:0:0)), java.lang.Object(javaUtilEx.Content))), NULL))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23311:0:0, o23309:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23311:0:0, o23309:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23311:0:0, o23309:0:0)))), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25026:0:0, o25024:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25026:0:0, o25024:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25026:0:0, o25024:0:0)))), java.lang.Object(EOC)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC)))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC)))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), NULL))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25240:0:0, o25238:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25237:0:0, o25235:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25240:0:0, o25238:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25237:0:0, o25235:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25240:0:0, o25238:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25237:0:0, o25235:0:0)))), java.lang.Object(EOC)))) :|: TRUE
f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL))))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23976:0:0, o23974:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23976:0:0, o23974:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23976:0:0, o23974:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23130:0:0, o23128:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23130:0:0, o23128:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23130:0:0, o23128:0:0)))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24985:0:0, o24983:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24985:0:0, o24983:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24985:0:0, o24983:0:0)))), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22184:0:0, o22182:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22184:0:0, o22182:0:0)), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22184:0:0, o22182:0:0)), NULL)), java.lang.Object(EOC)))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), NULL))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC)))) -> f18565_0_hashCode_Return :|: TRUE
f18756_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22224:0:0, o22222:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22224:0:0, o22222:0:0)), NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22224:0:0, o22222:0:0)), NULL)), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23352:0:0, o23350:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23352:0:0, o23350:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23352:0:0, o23350:0:0)))), java.lang.Object(EOC)))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL))) -> f18659_0_hashCode_Return :|: TRUE
f18998_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22511:0:0, o22509:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22511:0:0, o22509:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22511:0:0, o22509:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC)))) -> f18590_0_hashCode_Return :|: TRUE
f18554_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), NULL))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC)))) -> f18684_0_hashCode_Return :|: TRUE
f18554_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), NULL))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL))) -> f18543_0_hashCode_Return :|: TRUE
f18998_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL))) -> f18567_0_hashCode_Return :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), NULL))) -> f18554_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), NULL))) :|: TRUE
f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content)))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o24017:0:0, o24015:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o24017:0:0, o24015:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o24017:0:0, o24015:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), NULL))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL))))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content)))) -> f18771_0_hashCode_Return :|: TRUE
f18756_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22388:0:0, o22386:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22388:0:0, o22386:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22388:0:0, o22386:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), NULL))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25067:0:0, o25065:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25067:0:0, o25065:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25067:0:0, o25065:0:0)))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o24098:0:0, o24096:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o24098:0:0, o24096:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o24098:0:0, o24096:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL))))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22347:0:0, o22345:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22347:0:0, o22345:0:0)), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22347:0:0, o22345:0:0)), java.lang.Object(EOC))), java.lang.Object(EOC)))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.Content)))) -> f18756_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content)))))) :|: TRUE
f18575_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(EOC)))) :|: TRUE
f18998_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23935:0:0, o23933:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23935:0:0, o23933:0:0)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23935:0:0, o23933:0:0)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) :|: TRUE
f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content)))) -> f18746_0_hashCode_Return :|: TRUE
f18756_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.Content)))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content)))))) :|: TRUE
f18554_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23050:0:0, o23048:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23050:0:0, o23048:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23050:0:0, o23048:0:0)))), NULL))) :|: TRUE
f18479_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))))) :|: TRUE
f18756_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22552:0:0, o22550:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22552:0:0, o22550:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22552:0:0, o22550:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) :|: TRUE

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F18479_1_HASHCODE_INVOKEMETHOD(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18477_1_HASHCODE_INVOKEMETHOD(f18588_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.Content)))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(EOC)))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), NULL))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) -> F18479_1_HASHCODE_INVOKEMETHOD(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0)))))
   F18479_1_HASHCODE_INVOKEMETHOD(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(o15386sub:0:0)))) -> F18477_1_HASHCODE_INVOKEMETHOD(f25663_0_hashCode_Load(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(o15386sub:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(o15386sub:0:0))))
   F18479_1_HASHCODE_INVOKEMETHOD(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))

The TRS R consists of the following rules:

   f18554_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22306:0:0, o22304:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22306:0:0, o22304:0:0)), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22306:0:0, o22304:0:0)), java.lang.Object(EOC))), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(EOC)))) -> f18575_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0)))))))
   f18575_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0)))))))
   f18998_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18756_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18756_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23393:0:0, o23391:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23393:0:0, o23391:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23393:0:0, o23391:0:0)))), java.lang.Object(javaUtilEx.Content))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) -> f18479_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content)))) -> f18846_0_hashCode_Return
   f18575_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25196:0:0, o25194:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25193:0:0, o25191:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25196:0:0, o25194:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25193:0:0, o25191:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25196:0:0, o25194:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25193:0:0, o25191:0:0)))), NULL)))
   f18998_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18756_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25108:0:0, o25106:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25108:0:0, o25106:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25108:0:0, o25106:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18998_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o24057:0:0, o24055:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o24057:0:0, o24055:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o24057:0:0, o24055:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18479_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0)))))))
   f18756_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25284:0:0, o25282:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25281:0:0, o25279:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25284:0:0, o25282:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25281:0:0, o25279:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25284:0:0, o25282:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25281:0:0, o25279:0:0)))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23090:0:0, o23088:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23090:0:0, o23088:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23090:0:0, o23088:0:0)))), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))))))
   f18998_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25328:0:0, o25326:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25325:0:0, o25323:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25328:0:0, o25326:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25325:0:0, o25323:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25328:0:0, o25326:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25325:0:0, o25323:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18554_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22144:0:0, o22142:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22144:0:0, o22142:0:0)), NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22144:0:0, o22142:0:0)), NULL)), NULL)))
   f18554_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), NULL)))
   f18554_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22470:0:0, o22468:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22470:0:0, o22468:0:0)), java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22470:0:0, o22468:0:0)), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL)))))
   f18554_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23311:0:0, o23309:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23311:0:0, o23309:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23311:0:0, o23309:0:0)))), NULL)))
   f18575_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25026:0:0, o25024:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25026:0:0, o25024:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25026:0:0, o25024:0:0)))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))))))
   f18479_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))))))
   f18554_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), NULL)))
   f18554_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), NULL)))
   f18575_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25240:0:0, o25238:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25237:0:0, o25235:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25240:0:0, o25238:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25237:0:0, o25235:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25240:0:0, o25238:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25237:0:0, o25235:0:0)))), java.lang.Object(EOC))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18479_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0)))))))
   f18479_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)))))
   f18575_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23976:0:0, o23974:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23976:0:0, o23974:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23976:0:0, o23974:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18575_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23130:0:0, o23128:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23130:0:0, o23128:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23130:0:0, o23128:0:0)))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18554_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24985:0:0, o24983:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24985:0:0, o24983:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24985:0:0, o24983:0:0)))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22184:0:0, o22182:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22184:0:0, o22182:0:0)), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22184:0:0, o22182:0:0)), NULL)), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC)))) -> f18565_0_hashCode_Return
   f18756_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22224:0:0, o22222:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22224:0:0, o22222:0:0)), NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22224:0:0, o22222:0:0)), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23352:0:0, o23350:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23352:0:0, o23350:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23352:0:0, o23350:0:0)))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL))) -> f18659_0_hashCode_Return
   f18998_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18756_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18756_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22511:0:0, o22509:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22511:0:0, o22509:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22511:0:0, o22509:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC)))) -> f18590_0_hashCode_Return
   f18554_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC)))) -> f18684_0_hashCode_Return
   f18554_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL))) -> f18543_0_hashCode_Return
   f18998_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL))) -> f18567_0_hashCode_Return
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), NULL))) -> f18554_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), NULL)))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18998_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18479_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))))))
   f18998_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o24017:0:0, o24015:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o24017:0:0, o24015:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o24017:0:0, o24015:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18554_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content)))) -> f18771_0_hashCode_Return
   f18756_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22388:0:0, o22386:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22388:0:0, o22386:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22388:0:0, o22386:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18554_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), NULL)))
   f18756_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25067:0:0, o25065:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25067:0:0, o25065:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25067:0:0, o25065:0:0)))), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content))))))
   f18998_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o24098:0:0, o24096:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o24098:0:0, o24096:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o24098:0:0, o24096:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18479_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)))))
   f18575_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22347:0:0, o22345:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22347:0:0, o22345:0:0)), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22347:0:0, o22345:0:0)), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.Content)))) -> f18756_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))))))
   f18575_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23935:0:0, o23933:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23935:0:0, o23933:0:0)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23935:0:0, o23933:0:0)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content)))) -> f18746_0_hashCode_Return
   f18756_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))))))
   f18554_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23050:0:0, o23048:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23050:0:0, o23048:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23050:0:0, o23048:0:0)))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC))))))
   f18756_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22552:0:0, o22550:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22552:0:0, o22550:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22552:0:0, o22550:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))

The set Q consists of the following terms:

   f18554_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))))
   f18575_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3))))), java.lang.Object(javaUtilEx.HashMap$Entry(x4, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))))
   f18998_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18756_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18756_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.Content))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(x1, x2)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))), NULL)))
   f18998_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18756_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18998_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18479_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))))
   f18756_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))))))
   f18998_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))), java.lang.Object(javaUtilEx.HashMap$Entry(x4, x5)))))
   f18554_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)), NULL)))
   f18554_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), NULL)))
   f18554_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)))))
   f18554_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), NULL)))
   f18575_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))))))
   f18479_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))))))
   f18554_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), NULL)))
   f18554_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), NULL)))
   f18575_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))), java.lang.Object(EOC))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18479_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))))
   f18479_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)))))
   f18575_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18575_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18554_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)))
   f18998_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18756_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18756_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)))
   f18998_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18998_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18479_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))))))
   f18998_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18554_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18554_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), NULL)))
   f18756_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))))))
   f18998_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18479_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)))))
   f18575_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))))))
   f18575_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))))))
   f18554_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))))))
   f18756_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(EOC)))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), NULL))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) -> F18479_1_HASHCODE_INVOKEMETHOD(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0)))))
   F18479_1_HASHCODE_INVOKEMETHOD(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
   F18479_1_HASHCODE_INVOKEMETHOD(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))

The TRS R consists of the following rules:

   f18554_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22306:0:0, o22304:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22306:0:0, o22304:0:0)), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22306:0:0, o22304:0:0)), java.lang.Object(EOC))), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(EOC)))) -> f18575_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0)))))))
   f18575_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0)))))))
   f18998_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18756_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18756_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23393:0:0, o23391:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23393:0:0, o23391:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23393:0:0, o23391:0:0)))), java.lang.Object(javaUtilEx.Content))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) -> f18479_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content)))) -> f18846_0_hashCode_Return
   f18575_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25196:0:0, o25194:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25193:0:0, o25191:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25196:0:0, o25194:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25193:0:0, o25191:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25196:0:0, o25194:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25193:0:0, o25191:0:0)))), NULL)))
   f18998_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18756_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25108:0:0, o25106:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25108:0:0, o25106:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25108:0:0, o25106:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18998_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o24057:0:0, o24055:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o24057:0:0, o24055:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o24057:0:0, o24055:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18479_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0)))))))
   f18756_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25284:0:0, o25282:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25281:0:0, o25279:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25284:0:0, o25282:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25281:0:0, o25279:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25284:0:0, o25282:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25281:0:0, o25279:0:0)))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23090:0:0, o23088:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23090:0:0, o23088:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23090:0:0, o23088:0:0)))), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))))))
   f18998_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25328:0:0, o25326:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25325:0:0, o25323:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25328:0:0, o25326:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25325:0:0, o25323:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25328:0:0, o25326:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25325:0:0, o25323:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18554_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22144:0:0, o22142:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22144:0:0, o22142:0:0)), NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22144:0:0, o22142:0:0)), NULL)), NULL)))
   f18554_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), NULL)))
   f18554_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22470:0:0, o22468:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22470:0:0, o22468:0:0)), java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22470:0:0, o22468:0:0)), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL)))))
   f18554_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23311:0:0, o23309:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23311:0:0, o23309:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23311:0:0, o23309:0:0)))), NULL)))
   f18575_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25026:0:0, o25024:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25026:0:0, o25024:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25026:0:0, o25024:0:0)))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))))))
   f18479_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))))))
   f18554_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), NULL)))
   f18554_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), NULL)))
   f18575_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25240:0:0, o25238:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25237:0:0, o25235:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25240:0:0, o25238:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25237:0:0, o25235:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25240:0:0, o25238:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25237:0:0, o25235:0:0)))), java.lang.Object(EOC))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18479_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0)))))))
   f18479_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)))))
   f18575_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23976:0:0, o23974:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23976:0:0, o23974:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23976:0:0, o23974:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18575_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23130:0:0, o23128:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23130:0:0, o23128:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23130:0:0, o23128:0:0)))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18554_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24985:0:0, o24983:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24985:0:0, o24983:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24985:0:0, o24983:0:0)))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22184:0:0, o22182:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22184:0:0, o22182:0:0)), NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22184:0:0, o22182:0:0)), NULL)), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC)))) -> f18565_0_hashCode_Return
   f18756_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22224:0:0, o22222:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22224:0:0, o22222:0:0)), NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22224:0:0, o22222:0:0)), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23352:0:0, o23350:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23352:0:0, o23350:0:0)))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23352:0:0, o23350:0:0)))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL))) -> f18659_0_hashCode_Return
   f18998_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18756_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18756_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22511:0:0, o22509:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22511:0:0, o22509:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22511:0:0, o22509:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC)))) -> f18590_0_hashCode_Return
   f18554_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC)))) -> f18684_0_hashCode_Return
   f18554_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL))) -> f18543_0_hashCode_Return
   f18998_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL))) -> f18567_0_hashCode_Return
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), NULL))) -> f18554_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), NULL)))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f18998_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18998_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18479_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))))))
   f18998_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o24017:0:0, o24015:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o24017:0:0, o24015:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o24017:0:0, o24015:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18554_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content)))) -> f18771_0_hashCode_Return
   f18756_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22388:0:0, o22386:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22388:0:0, o22386:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22388:0:0, o22386:0:0)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18554_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), NULL)))
   f18756_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25067:0:0, o25065:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25067:0:0, o25065:0:0)))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o25067:0:0, o25065:0:0)))), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content))))))
   f18998_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o24098:0:0, o24096:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o24098:0:0, o24096:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o24098:0:0, o24096:0:0)))), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18479_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)))))
   f18575_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22347:0:0, o22345:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22347:0:0, o22345:0:0)), java.lang.Object(EOC))), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22347:0:0, o22345:0:0)), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.Content)))) -> f18756_1_hashCode_InvokeMethod(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))))))
   f18575_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(EOC)))) -> f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23935:0:0, o23933:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23935:0:0, o23933:0:0)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0))))) -> f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o23935:0:0, o23933:0:0)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(o21610:0:0, o21608:0:0)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content)))) -> f18746_0_hashCode_Return
   f18756_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))))))
   f18554_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23050:0:0, o23048:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23050:0:0, o23048:0:0)))), NULL))) -> f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23050:0:0, o23048:0:0)))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))))) -> f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC))))))
   f18756_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22552:0:0, o22550:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22552:0:0, o22550:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content)))) -> f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22552:0:0, o22550:0:0)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))

The set Q consists of the following terms:

   f18554_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))))
   f18575_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3))))), java.lang.Object(javaUtilEx.HashMap$Entry(x4, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))))
   f18998_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18756_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18756_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.Content))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(x1, x2)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))), NULL)))
   f18998_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18756_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18998_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18479_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))))
   f18756_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))))))
   f18998_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))), java.lang.Object(javaUtilEx.HashMap$Entry(x4, x5)))))
   f18554_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)), NULL)))
   f18554_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), NULL)))
   f18554_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)))))
   f18554_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), NULL)))
   f18575_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(EOC))))
   f18479_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))))))
   f18479_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))))))
   f18554_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), NULL)))
   f18554_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), NULL)))
   f18575_1_hashCode_InvokeMethod(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))), java.lang.Object(EOC))))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18479_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))))
   f18479_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)))))
   f18575_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18575_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18554_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18575_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)))
   f18998_1_hashCode_InvokeMethod(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18756_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18998_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18756_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(EOC))))
   f18756_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18575_1_hashCode_InvokeMethod(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC))))
   f18554_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)))
   f18998_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)))
   f18952_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18998_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))))
   f18479_1_hashCode_InvokeMethod(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))))))
   f18998_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18554_1_hashCode_InvokeMethod(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))), java.lang.Object(javaUtilEx.Content))))
   f18554_1_hashCode_InvokeMethod(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL)), NULL)))
   f18756_1_hashCode_InvokeMethod(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))))))
   f18998_1_hashCode_InvokeMethod(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18479_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)))))
   f18575_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))), java.lang.Object(EOC))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content))))))
   f18575_1_hashCode_InvokeMethod(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL)), java.lang.Object(EOC))))
   f18998_1_hashCode_InvokeMethod(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(x2, x3)))))
   f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))))
   f18756_1_hashCode_InvokeMethod(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL)), java.lang.Object(javaUtilEx.Content))))
   f18479_1_hashCode_InvokeMethod(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(x0, java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content))))))
   f18554_1_hashCode_InvokeMethod(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)))), NULL)))
   f18479_1_hashCode_InvokeMethod(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(x2, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(EOC))))))
   f18756_1_hashCode_InvokeMethod(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(x0, x1)), java.lang.Object(javaUtilEx.Content))), java.lang.Object(javaUtilEx.Content))))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) -> F18479_1_HASHCODE_INVOKEMETHOD(f18421_0_hashCode_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))), java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0)))))
The graph contains the following edges 1 >= 2


*F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(EOC)))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 1 > 1


*F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), NULL))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 1 > 1


*F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:1:0, o15375:0:0)))
The graph contains the following edges 1 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18846_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18945_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22265:0:0, o22263:0:0)), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18944_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22104:0:0, o22102:0:0)), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18567_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18543_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18746_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18565_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18946_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o22429:0:0, o22427:0:0)), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18993_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(NULL, java.lang.Object(javaUtilEx.HashMap$Entry(o23010:0:0, o23008:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18659_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), NULL))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18684_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f19003_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(o23270:0:0, o23268:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18771_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(javaUtilEx.Content)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f19051_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.HashMap$Entry(o24944:0:0, o24942:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f19052_0_hashCode_Return(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o25152:0:0, o25150:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(o25149:0:0, o25147:0:0))))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


*F18479_1_HASHCODE_INVOKEMETHOD(f18590_0_hashCode_Return, java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)), java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(EOC), java.lang.Object(EOC)))))) -> F18421_0_HASHCODE_NONNULL(java.lang.Object(javaUtilEx.HashMap$Entry(o15376:0:0, o15375:0:0)))
The graph contains the following edges 2 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.HashMap$Entry: [next, hash]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(15) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 58 IRulesP rules:
f25427_0_transfer_Load(EOS(STATIC_25427), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, i14933) -> f25430_0_transfer_ArrayLength(EOS(STATIC_25430), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, i14933, java.lang.Object(ARRAY(i14932))) :|: TRUE
f25430_0_transfer_ArrayLength(EOS(STATIC_25430), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, i14933, java.lang.Object(ARRAY(i14932))) -> f25433_0_transfer_GE(EOS(STATIC_25433), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, i14933, i14932) :|: i14932 >= 0
f25433_0_transfer_GE(EOS(STATIC_25433), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, i14933, i14932) -> f25436_0_transfer_GE(EOS(STATIC_25436), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, i14933, i14932) :|: i14933 < i14932
f25436_0_transfer_GE(EOS(STATIC_25436), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, i14933, i14932) -> f25440_0_transfer_Load(EOS(STATIC_25440), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933) :|: i14933 < i14932
f25440_0_transfer_Load(EOS(STATIC_25440), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933) -> f25442_0_transfer_Load(EOS(STATIC_25442), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(ARRAY(i14932))) :|: TRUE
f25442_0_transfer_Load(EOS(STATIC_25442), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(ARRAY(i14932))) -> f25444_0_transfer_ArrayAccess(EOS(STATIC_25444), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(ARRAY(i14932)), i14933) :|: TRUE
f25444_0_transfer_ArrayAccess(EOS(STATIC_25444), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(ARRAY(i14932)), i14933) -> f25446_0_transfer_ArrayAccess(EOS(STATIC_25446), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(ARRAY(i14932)), i14933) :|: TRUE
f25446_0_transfer_ArrayAccess(EOS(STATIC_25446), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(ARRAY(i14932)), i14933) -> f25449_0_transfer_Store(EOS(STATIC_25449), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42057) :|: i14933 < i14932
f25449_0_transfer_Store(EOS(STATIC_25449), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42057) -> f25452_0_transfer_Load(EOS(STATIC_25452), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42057) :|: TRUE
f25452_0_transfer_Load(EOS(STATIC_25452), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42057) -> f25454_0_transfer_NULL(EOS(STATIC_25454), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42057, o42057) :|: TRUE
f25454_0_transfer_NULL(EOS(STATIC_25454), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(o42059sub)) -> f25457_0_transfer_NULL(EOS(STATIC_25457), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(o42059sub)) :|: TRUE
f25454_0_transfer_NULL(EOS(STATIC_25454), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, NULL, NULL) -> f25458_0_transfer_NULL(EOS(STATIC_25458), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, NULL, NULL) :|: TRUE
f25457_0_transfer_NULL(EOS(STATIC_25457), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(o42059sub)) -> f25461_0_transfer_Load(EOS(STATIC_25461), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub)) :|: TRUE
f25461_0_transfer_Load(EOS(STATIC_25461), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub)) -> f25464_0_transfer_Load(EOS(STATIC_25464), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(ARRAY(i14932))) :|: TRUE
f25464_0_transfer_Load(EOS(STATIC_25464), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(ARRAY(i14932))) -> f25468_0_transfer_ConstantStackPush(EOS(STATIC_25468), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(ARRAY(i14932)), i14933) :|: TRUE
f25468_0_transfer_ConstantStackPush(EOS(STATIC_25468), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(ARRAY(i14932)), i14933) -> f25472_0_transfer_ArrayAccess(EOS(STATIC_25472), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(ARRAY(i14932)), i14933, NULL) :|: TRUE
f25472_0_transfer_ArrayAccess(EOS(STATIC_25472), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(ARRAY(i14932)), i14933, NULL) -> f25474_0_transfer_ArrayAccess(EOS(STATIC_25474), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(ARRAY(i14932)), i14933, NULL) :|: TRUE
f25474_0_transfer_ArrayAccess(EOS(STATIC_25474), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(ARRAY(i14932)), i14933, NULL) -> f25478_0_transfer_Load(EOS(STATIC_25478), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059put)) :|: i14933 < i14932
f25478_0_transfer_Load(EOS(STATIC_25478), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub)) -> f25482_0_transfer_FieldAccess(EOS(STATIC_25482), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42059sub), java.lang.Object(o42059sub)) :|: TRUE
f25482_0_transfer_FieldAccess(EOS(STATIC_25482), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963))) -> f25484_0_transfer_FieldAccess(EOS(STATIC_25484), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963))) :|: TRUE
f25484_0_transfer_FieldAccess(EOS(STATIC_25484), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963))) -> f25488_0_transfer_Store(EOS(STATIC_25488), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071) :|: TRUE
f25488_0_transfer_Store(EOS(STATIC_25488), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071) -> f25491_0_transfer_Load(EOS(STATIC_25491), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071) :|: TRUE
f25491_0_transfer_Load(EOS(STATIC_25491), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071) -> f25493_0_transfer_FieldAccess(EOS(STATIC_25493), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963))) :|: TRUE
f25493_0_transfer_FieldAccess(EOS(STATIC_25493), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963))) -> f25496_0_transfer_Load(EOS(STATIC_25496), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963) :|: TRUE
f25496_0_transfer_Load(EOS(STATIC_25496), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963) -> f25499_0_transfer_InvokeMethod(EOS(STATIC_25499), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963, i13907) :|: TRUE
f25499_0_transfer_InvokeMethod(EOS(STATIC_25499), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963, i13907) -> f25501_0_indexFor_Load(EOS(STATIC_25501), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963, i13907) :|: TRUE
f25501_0_indexFor_Load(EOS(STATIC_25501), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963, i13907) -> f25506_0_indexFor_Load(EOS(STATIC_25506), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i13907, i14963) :|: TRUE
f25506_0_indexFor_Load(EOS(STATIC_25506), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i13907, i14963) -> f25508_0_indexFor_ConstantStackPush(EOS(STATIC_25508), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963, i13907) :|: TRUE
f25508_0_indexFor_ConstantStackPush(EOS(STATIC_25508), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963, i13907) -> f25511_0_indexFor_IntArithmetic(EOS(STATIC_25511), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963, i13907, 1) :|: TRUE
f25511_0_indexFor_IntArithmetic(EOS(STATIC_25511), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963, i13907, matching1) -> f25514_0_indexFor_IntArithmetic(EOS(STATIC_25514), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963, i13907 - 1) :|: i13907 >= 0 && matching1 = 1
f25514_0_indexFor_IntArithmetic(EOS(STATIC_25514), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14963, i14980) -> f25516_0_indexFor_Return(EOS(STATIC_25516), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981) :|: TRUE
f25516_0_indexFor_Return(EOS(STATIC_25516), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981) -> f25519_0_transfer_Store(EOS(STATIC_25519), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981) :|: TRUE
f25519_0_transfer_Store(EOS(STATIC_25519), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981) -> f25522_0_transfer_Load(EOS(STATIC_25522), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981) :|: TRUE
f25522_0_transfer_Load(EOS(STATIC_25522), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981) -> f25525_0_transfer_Load(EOS(STATIC_25525), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963))) :|: TRUE
f25525_0_transfer_Load(EOS(STATIC_25525), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963))) -> f25528_0_transfer_Load(EOS(STATIC_25528), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), java.lang.Object(ARRAY(i13907))) :|: TRUE
f25528_0_transfer_Load(EOS(STATIC_25528), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), java.lang.Object(ARRAY(i13907))) -> f25531_0_transfer_ArrayAccess(EOS(STATIC_25531), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), java.lang.Object(ARRAY(i13907)), i14981) :|: TRUE
f25531_0_transfer_ArrayAccess(EOS(STATIC_25531), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), java.lang.Object(ARRAY(i13907)), i14981) -> f25534_0_transfer_ArrayAccess(EOS(STATIC_25534), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), java.lang.Object(ARRAY(i13907)), i14981) :|: TRUE
f25534_0_transfer_ArrayAccess(EOS(STATIC_25534), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), java.lang.Object(ARRAY(i13907)), i14981) -> f25538_0_transfer_FieldAccess(EOS(STATIC_25538), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42093) :|: i14981 < i13907
f25538_0_transfer_FieldAccess(EOS(STATIC_25538), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42071, i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071, i14963)), o42093) -> f25542_0_transfer_Load(EOS(STATIC_25542), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42093, i14963)), o42071, i14981) :|: TRUE
f25542_0_transfer_Load(EOS(STATIC_25542), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42093, i14963)), o42071, i14981) -> f25544_0_transfer_Load(EOS(STATIC_25544), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42093, i14963)), o42071, i14981, java.lang.Object(ARRAY(i13907))) :|: TRUE
f25544_0_transfer_Load(EOS(STATIC_25544), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42093, i14963)), o42071, i14981, java.lang.Object(ARRAY(i13907))) -> f25548_0_transfer_Load(EOS(STATIC_25548), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42093, i14963)), o42071, java.lang.Object(ARRAY(i13907)), i14981) :|: TRUE
f25548_0_transfer_Load(EOS(STATIC_25548), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42093, i14963)), o42071, java.lang.Object(ARRAY(i13907)), i14981) -> f25551_0_transfer_ArrayAccess(EOS(STATIC_25551), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42071, java.lang.Object(ARRAY(i13907)), i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42093, i14963))) :|: TRUE
f25551_0_transfer_ArrayAccess(EOS(STATIC_25551), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42071, java.lang.Object(ARRAY(i13907)), i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42093, i14963))) -> f25553_0_transfer_ArrayAccess(EOS(STATIC_25553), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42071, java.lang.Object(ARRAY(i13907)), i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42093, i14963))) :|: TRUE
f25553_0_transfer_ArrayAccess(EOS(STATIC_25553), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42071, java.lang.Object(ARRAY(i13907)), i14981, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42093, i14963))) -> f25557_0_transfer_Load(EOS(STATIC_25557), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42071) :|: i14981 < i13907
f25557_0_transfer_Load(EOS(STATIC_25557), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42071) -> f25561_0_transfer_Store(EOS(STATIC_25561), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42071) :|: TRUE
f25561_0_transfer_Store(EOS(STATIC_25561), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42071) -> f25562_0_transfer_Load(EOS(STATIC_25562), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42071) :|: TRUE
f25562_0_transfer_Load(EOS(STATIC_25562), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42071) -> f25565_0_transfer_NONNULL(EOS(STATIC_25565), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, o42071, o42071) :|: TRUE
f25565_0_transfer_NONNULL(EOS(STATIC_25565), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42116sub), java.lang.Object(o42116sub)) -> f25568_0_transfer_NONNULL(EOS(STATIC_25568), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42116sub), java.lang.Object(o42116sub)) :|: TRUE
f25565_0_transfer_NONNULL(EOS(STATIC_25565), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, NULL, NULL) -> f25569_0_transfer_NONNULL(EOS(STATIC_25569), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, NULL, NULL) :|: TRUE
f25568_0_transfer_NONNULL(EOS(STATIC_25568), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42116sub), java.lang.Object(o42116sub)) -> f25570_0_transfer_Load(EOS(STATIC_25570), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42116sub)) :|: TRUE
f25570_0_transfer_Load(EOS(STATIC_25570), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42116sub)) -> f25478_0_transfer_Load(EOS(STATIC_25478), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, java.lang.Object(o42116sub)) :|: TRUE
f25569_0_transfer_NONNULL(EOS(STATIC_25569), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, NULL, NULL) -> f25571_0_transfer_Inc(EOS(STATIC_25571), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933) :|: TRUE
f25571_0_transfer_Inc(EOS(STATIC_25571), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933) -> f25574_0_transfer_JMP(EOS(STATIC_25574), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933 + 1) :|: TRUE
f25574_0_transfer_JMP(EOS(STATIC_25574), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i15000) -> f25577_0_transfer_Load(EOS(STATIC_25577), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i15000) :|: TRUE
f25577_0_transfer_Load(EOS(STATIC_25577), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i15000) -> f25426_0_transfer_Load(EOS(STATIC_25426), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i15000) :|: TRUE
f25426_0_transfer_Load(EOS(STATIC_25426), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933) -> f25427_0_transfer_Load(EOS(STATIC_25427), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, i14933) :|: TRUE
f25458_0_transfer_NULL(EOS(STATIC_25458), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933, NULL, NULL) -> f25462_0_transfer_Inc(EOS(STATIC_25462), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933) :|: TRUE
f25462_0_transfer_Inc(EOS(STATIC_25462), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933) -> f25571_0_transfer_Inc(EOS(STATIC_25571), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907, java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i13907)), java.lang.Object(ARRAY(i14932)), i13907, i14933) :|: TRUE
Combined rules. Obtained 4 IRulesP rules:
f25565_0_transfer_NONNULL(EOS(STATIC_25565), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907:0, java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i13907:0, i14933:0, NULL, NULL) -> f25427_0_transfer_Load(EOS(STATIC_25427), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907:0, java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i13907:0, i14933:0 + 1, i14933:0 + 1) :|: TRUE
f25427_0_transfer_Load(EOS(STATIC_25427), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907:0, java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i13907:0, i14933:0, i14933:0) -> f25565_0_transfer_NONNULL(EOS(STATIC_25565), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907:0, java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i13907:0, i14933:0, o42071:0, o42071:0) :|: i14932:0 > -1 && i14933:0 < i14932:0 && i13907:0 > -1 && i14981:0 < i13907:0
f25427_0_transfer_Load(EOS(STATIC_25427), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907:0, java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i13907:0, i14933:0, i14933:0) -> f25427_0_transfer_Load(EOS(STATIC_25427), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907:0, java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i13907:0, i14933:0 + 1, i14933:0 + 1) :|: i14932:0 > -1 && i14933:0 < i14932:0
f25565_0_transfer_NONNULL(EOS(STATIC_25565), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907:0, java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i13907:0, i14933:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071:0, i14963:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o42071:0, i14963:0))) -> f25565_0_transfer_NONNULL(EOS(STATIC_25565), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i13907:0, java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i13907:0, i14933:0, o42071:0, o42071:0) :|: i13907:0 > -1 && i14981:0 < i13907:0
Filtered constant ground arguments:
   f25565_0_transfer_NONNULL(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f25565_0_transfer_NONNULL(x4, x5, x6, x7, x8, x9, x10, x11)
   f25427_0_transfer_Load(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f25427_0_transfer_Load(x4, x5, x6, x7, x8, x9, x10)
   javaUtilEx.AbstractMap(x1) -> javaUtilEx.AbstractMap
   javaUtilEx.HashMap$Entry(x1, x2, x3) -> javaUtilEx.HashMap$Entry(x2, x3)
   javaUtilEx.HashMap(x1) -> javaUtilEx.HashMap
Filtered duplicate arguments:
   f25565_0_transfer_NONNULL(x1, x2, x3, x4, x5, x6, x7, x8) -> f25565_0_transfer_NONNULL(x3, x4, x6, x8)
   f25427_0_transfer_Load(x1, x2, x3, x4, x5, x6, x7) -> f25427_0_transfer_Load(x3, x4, x7)
Filtered unneeded arguments:
   javaUtilEx.HashMap$Entry(x1, x2) -> javaUtilEx.HashMap$Entry(x1)
Finished conversion. Obtained 4 rules.P rules:
f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0, NULL, i13907:0, i14932:0) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0 + 1, i13907:0, i14932:0) :|: TRUE
f25427_0_transfer_Load(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0, i13907:0, i14932:0) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0, o42071:0, i13907:0, i14932:0) :|: i14933:0 < i14932:0 && i14932:0 > -1 && i14981:0 < i13907:0 && i13907:0 > -1
f25427_0_transfer_Load(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0, i13907:0, i14932:0) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0 + 1, i13907:0, i14932:0) :|: i14932:0 > -1 && i14933:0 < i14932:0
f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0, java.lang.Object(javaUtilEx.HashMap$Entry(o42071:0)), i13907:0, i14932:0) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0, o42071:0, i13907:0, i14932:0) :|: i13907:0 > -1 && i14981:0 < i13907:0

----------------------------------------

(16)
Obligation:
Rules:
f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0, NULL, i13907:0, i14932:0) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0 + 1, i13907:0, i14932:0) :|: TRUE
f25427_0_transfer_Load(java.lang.Object(ARRAY(x)), java.lang.Object(ARRAY(x1)), x2, x, x1) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x)), java.lang.Object(ARRAY(x1)), x2, x3, x, x1) :|: x2 < x1 && x1 > -1 && x4 < x && x > -1
f25427_0_transfer_Load(java.lang.Object(ARRAY(x5)), java.lang.Object(ARRAY(x6)), x7, x5, x6) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(x5)), java.lang.Object(ARRAY(x6)), x7 + 1, x5, x6) :|: x6 > -1 && x7 < x6
f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8)), java.lang.Object(ARRAY(x9)), x10, java.lang.Object(javaUtilEx.HashMap$Entry(x11)), x8, x9) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8)), java.lang.Object(ARRAY(x9)), x10, x11, x8, x9) :|: x8 > -1 && x12 < x8

----------------------------------------

(17) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(18)
Obligation:
Rules:
f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0, NULL, i13907:0, i14932:0) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), arith, i13907:0, i14932:0) :|: TRUE && arith = i14933:0 + 1
f25427_0_transfer_Load(java.lang.Object(ARRAY(x)), java.lang.Object(ARRAY(x1)), x2, x, x1) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x)), java.lang.Object(ARRAY(x1)), x2, x3, x, x1) :|: x2 < x1 && x1 > -1 && x4 < x && x > -1
f25427_0_transfer_Load(java.lang.Object(ARRAY(x13)), java.lang.Object(ARRAY(x14)), x15, x13, x14) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(x13)), java.lang.Object(ARRAY(x14)), x16, x13, x14) :|: x14 > -1 && x15 < x14 && x16 = x15 + 1
f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8)), java.lang.Object(ARRAY(x9)), x10, java.lang.Object(javaUtilEx.HashMap$Entry(x11)), x8, x9) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8)), java.lang.Object(ARRAY(x9)), x10, x11, x8, x9) :|: x8 > -1 && x12 < x8

----------------------------------------

(19) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0, NULL, i13907:0, i14932:0) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), arith, i13907:0, i14932:0) :|: TRUE && arith = i14933:0 + 1
(2) f25427_0_transfer_Load(java.lang.Object(ARRAY(x)), java.lang.Object(ARRAY(x1)), x2, x, x1) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x)), java.lang.Object(ARRAY(x1)), x2, x3, x, x1) :|: x2 < x1 && x1 > -1 && x4 < x && x > -1
(3) f25427_0_transfer_Load(java.lang.Object(ARRAY(x13)), java.lang.Object(ARRAY(x14)), x15, x13, x14) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(x13)), java.lang.Object(ARRAY(x14)), x16, x13, x14) :|: x14 > -1 && x15 < x14 && x16 = x15 + 1
(4) f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8)), java.lang.Object(ARRAY(x9)), x10, java.lang.Object(javaUtilEx.HashMap$Entry(x11)), x8, x9) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8)), java.lang.Object(ARRAY(x9)), x10, x11, x8, x9) :|: x8 > -1 && x12 < x8

Arcs:
(1) -> (2), (3)
(2) -> (1), (4)
(3) -> (2), (3)
(4) -> (1), (4)

This digraph is fully evaluated!
----------------------------------------

(20)
Obligation:

Termination digraph:
Nodes:
(1) f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), i14933:0, NULL, i13907:0, i14932:0) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(i13907:0)), java.lang.Object(ARRAY(i14932:0)), arith, i13907:0, i14932:0) :|: TRUE && arith = i14933:0 + 1
(2) f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8)), java.lang.Object(ARRAY(x9)), x10, java.lang.Object(javaUtilEx.HashMap$Entry(x11)), x8, x9) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8)), java.lang.Object(ARRAY(x9)), x10, x11, x8, x9) :|: x8 > -1 && x12 < x8
(3) f25427_0_transfer_Load(java.lang.Object(ARRAY(x)), java.lang.Object(ARRAY(x1)), x2, x, x1) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x)), java.lang.Object(ARRAY(x1)), x2, x3, x, x1) :|: x2 < x1 && x1 > -1 && x4 < x && x > -1
(4) f25427_0_transfer_Load(java.lang.Object(ARRAY(x13)), java.lang.Object(ARRAY(x14)), x15, x13, x14) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(x13)), java.lang.Object(ARRAY(x14)), x16, x13, x14) :|: x14 > -1 && x15 < x14 && x16 = x15 + 1

Arcs:
(1) -> (3), (4)
(2) -> (1), (2)
(3) -> (1), (2)
(4) -> (3), (4)

This digraph is fully evaluated!

----------------------------------------

(21) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(22)
Obligation:
Rules:
f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x10:0, java.lang.Object(javaUtilEx.HashMap$Entry(x11:0)), x8:0, x9:0) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x10:0, x11:0, x8:0, x9:0) :|: x8:0 > -1 && x8:0 > x12:0
f25427_0_transfer_Load(java.lang.Object(ARRAY(x:0)), java.lang.Object(ARRAY(x1:0)), x2:0, x:0, x1:0) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x:0)), java.lang.Object(ARRAY(x1:0)), x2:0, x3:0, x:0, x1:0) :|: x:0 > x4:0 && x:0 > -1 && x1:0 > -1 && x2:0 < x1:0
f25427_0_transfer_Load(java.lang.Object(ARRAY(x13:0)), java.lang.Object(ARRAY(x14:0)), x15:0, x13:0, x14:0) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(x13:0)), java.lang.Object(ARRAY(x14:0)), x15:0 + 1, x13:0, x14:0) :|: x14:0 > -1 && x15:0 < x14:0
f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(i13907:0:0)), java.lang.Object(ARRAY(i14932:0:0)), i14933:0:0, NULL, i13907:0:0, i14932:0:0) -> f25427_0_transfer_Load(java.lang.Object(ARRAY(i13907:0:0)), java.lang.Object(ARRAY(i14932:0:0)), i14933:0:0 + 1, i13907:0:0, i14932:0:0) :|: TRUE

----------------------------------------

(23) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f25565_0_transfer_NONNULL(VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE)
java.lang.Object(VARIABLE)
ARRAY(VARIABLE)
javaUtilEx.HashMap$Entry(VARIABLE)
f25427_0_transfer_Load(VARIABLE, VARIABLE, INTEGER, VARIABLE, VARIABLE)
NULL()
Replaced non-predefined constructor symbols by 0.The following proof was generated: 
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given IntTRS could not be shown:



- IntTRS
  - RankingReductionPairProof

Rules:
f25565_0_transfer_NONNULL(c, c1, x10:0, c2, x8:0, x9:0) -> f25565_0_transfer_NONNULL(c3, c4, x10:0, x11:0, x8:0, x9:0) :|: c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x8:0 > -1 && x8:0 > x12:0)
f25427_0_transfer_Load(c5, c6, x2:0, x:0, x1:0) -> f25565_0_transfer_NONNULL(c7, c8, x2:0, x3:0, x:0, x1:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x:0 > x4:0 && x:0 > -1 && x1:0 > -1 && x2:0 < x1:0)
f25427_0_transfer_Load(c9, c10, x15:0, x13:0, x14:0) -> f25427_0_transfer_Load(c11, c12, c13, x13:0, x14:0) :|: c13 = x15:0 + 1 && (c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0))) && (x14:0 > -1 && x15:0 < x14:0)
f25565_0_transfer_NONNULL(c14, c15, i14933:0:0, c16, i13907:0:0, i14932:0:0) -> f25427_0_transfer_Load(c17, c18, c19, i13907:0:0, i14932:0:0) :|: c19 = i14933:0:0 + 1 && (c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)))) && TRUE

Interpretation:
[ f25565_0_transfer_NONNULL ] = 2*f25565_0_transfer_NONNULL_5 + -2*f25565_0_transfer_NONNULL_3 + 2*f25565_0_transfer_NONNULL_6 + -1
[ f25427_0_transfer_Load ] = 2*f25427_0_transfer_Load_4 + 2*f25427_0_transfer_Load_5 + -2*f25427_0_transfer_Load_3

The following rules are decreasing:
f25427_0_transfer_Load(c5, c6, x2:0, x:0, x1:0) -> f25565_0_transfer_NONNULL(c7, c8, x2:0, x3:0, x:0, x1:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x:0 > x4:0 && x:0 > -1 && x1:0 > -1 && x2:0 < x1:0)
f25427_0_transfer_Load(c9, c10, x15:0, x13:0, x14:0) -> f25427_0_transfer_Load(c11, c12, c13, x13:0, x14:0) :|: c13 = x15:0 + 1 && (c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0))) && (x14:0 > -1 && x15:0 < x14:0)
f25565_0_transfer_NONNULL(c14, c15, i14933:0:0, c16, i13907:0:0, i14932:0:0) -> f25427_0_transfer_Load(c17, c18, c19, i13907:0:0, i14932:0:0) :|: c19 = i14933:0:0 + 1 && (c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)))) && TRUE

The following rules are bounded:
f25427_0_transfer_Load(c5, c6, x2:0, x:0, x1:0) -> f25565_0_transfer_NONNULL(c7, c8, x2:0, x3:0, x:0, x1:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x:0 > x4:0 && x:0 > -1 && x1:0 > -1 && x2:0 < x1:0)



- IntTRS
  - RankingReductionPairProof
    - IntTRS
      - PolynomialOrderProcessor

Rules:
f25565_0_transfer_NONNULL(c, c1, x10:0, c2, x8:0, x9:0) -> f25565_0_transfer_NONNULL(c3, c4, x10:0, x11:0, x8:0, x9:0) :|: c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x8:0 > -1 && x8:0 > x12:0)
f25427_0_transfer_Load(c9, c10, x15:0, x13:0, x14:0) -> f25427_0_transfer_Load(c11, c12, c13, x13:0, x14:0) :|: c13 = x15:0 + 1 && (c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0))) && (x14:0 > -1 && x15:0 < x14:0)
f25565_0_transfer_NONNULL(c14, c15, i14933:0:0, c16, i13907:0:0, i14932:0:0) -> f25427_0_transfer_Load(c17, c18, c19, i13907:0:0, i14932:0:0) :|: c19 = i14933:0:0 + 1 && (c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)))) && TRUE

Found the following polynomial interpretation:
[f25565_0_transfer_NONNULL(x, x1, x2, x3, x4, x5)] = 1 + c*x + c1*x1
[f25427_0_transfer_Load(x6, x7, x8, x9, x10)] = c6*x6 + c7*x7

The following rules are decreasing:
f25565_0_transfer_NONNULL(c14, c15, i14933:0:0, c16, i13907:0:0, i14932:0:0) -> f25427_0_transfer_Load(c17, c18, c19, i13907:0:0, i14932:0:0) :|: c19 = i14933:0:0 + 1 && (c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)))) && TRUE
The following rules are bounded:
f25565_0_transfer_NONNULL(c, c1, x10:0, c2, x8:0, x9:0) -> f25565_0_transfer_NONNULL(c3, c4, x10:0, x11:0, x8:0, x9:0) :|: c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x8:0 > -1 && x8:0 > x12:0)
f25427_0_transfer_Load(c9, c10, x15:0, x13:0, x14:0) -> f25427_0_transfer_Load(c11, c12, c13, x13:0, x14:0) :|: c13 = x15:0 + 1 && (c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0))) && (x14:0 > -1 && x15:0 < x14:0)
f25565_0_transfer_NONNULL(c14, c15, i14933:0:0, c16, i13907:0:0, i14932:0:0) -> f25427_0_transfer_Load(c17, c18, c19, i13907:0:0, i14932:0:0) :|: c19 = i14933:0:0 + 1 && (c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)))) && TRUE


- IntTRS
  - RankingReductionPairProof
    - IntTRS
      - PolynomialOrderProcessor
        - IntTRS
          - PolynomialOrderProcessor

Rules:
f25565_0_transfer_NONNULL(c, c1, x10:0, c2, x8:0, x9:0) -> f25565_0_transfer_NONNULL(c3, c4, x10:0, x11:0, x8:0, x9:0) :|: c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x8:0 > -1 && x8:0 > x12:0)
f25427_0_transfer_Load(c9, c10, x15:0, x13:0, x14:0) -> f25427_0_transfer_Load(c11, c12, c13, x13:0, x14:0) :|: c13 = x15:0 + 1 && (c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0))) && (x14:0 > -1 && x15:0 < x14:0)

Found the following polynomial interpretation:
[f25565_0_transfer_NONNULL(x, x1, x2, x3, x4, x5)] = c*x + c1*x1
[f25427_0_transfer_Load(x6, x7, x8, x9, x10)] = x10 + c6*x6 + c7*x7 - x8

The following rules are decreasing:
f25427_0_transfer_Load(c9, c10, x15:0, x13:0, x14:0) -> f25427_0_transfer_Load(c11, c12, c13, x13:0, x14:0) :|: c13 = x15:0 + 1 && (c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0))) && (x14:0 > -1 && x15:0 < x14:0)
The following rules are bounded:
f25565_0_transfer_NONNULL(c, c1, x10:0, c2, x8:0, x9:0) -> f25565_0_transfer_NONNULL(c3, c4, x10:0, x11:0, x8:0, x9:0) :|: c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x8:0 > -1 && x8:0 > x12:0)
f25427_0_transfer_Load(c9, c10, x15:0, x13:0, x14:0) -> f25427_0_transfer_Load(c11, c12, c13, x13:0, x14:0) :|: c13 = x15:0 + 1 && (c12 = 0 && (c11 = 0 && (c10 = 0 && c9 = 0))) && (x14:0 > -1 && x15:0 < x14:0)


- IntTRS
  - RankingReductionPairProof
    - IntTRS
      - PolynomialOrderProcessor
        - IntTRS
          - PolynomialOrderProcessor
            - IntTRS

Rules:
f25565_0_transfer_NONNULL(c, c1, x10:0, c2, x8:0, x9:0) -> f25565_0_transfer_NONNULL(c3, c4, x10:0, x11:0, x8:0, x9:0) :|: c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x8:0 > -1 && x8:0 > x12:0)



----------------------------------------

(24)
Obligation:
Rules:
f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x10:0, java.lang.Object(javaUtilEx.HashMap$Entry(x11:0)), x8:0, x9:0) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x10:0, x11:0, x8:0, x9:0) :|: x8:0 > -1 && x8:0 > x12:0

----------------------------------------

(25) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x10:0, java.lang.Object(javaUtilEx.HashMap$Entry(x11:0)), x8:0, x9:0) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x10:0, x11:0, x8:0, x9:0) :|: x8:0 > -1 && x8:0 > x12:0

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(26)
Obligation:

Termination digraph:
Nodes:
(1) f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x10:0, java.lang.Object(javaUtilEx.HashMap$Entry(x11:0)), x8:0, x9:0) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x10:0, x11:0, x8:0, x9:0) :|: x8:0 > -1 && x8:0 > x12:0

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(27) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f25565_0_transfer_NONNULL(x1, x2, x3, x4, x5, x6) -> f25565_0_transfer_NONNULL(x1, x2, x4, x5, x6)

----------------------------------------

(28)
Obligation:
Rules:
f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), java.lang.Object(javaUtilEx.HashMap$Entry(x11:0)), x8:0, x9:0) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x11:0, x8:0, x9:0) :|: x8:0 > -1 && x8:0 > x12:0

----------------------------------------

(29) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f25565_0_transfer_NONNULL(VARIABLE, VARIABLE, VARIABLE, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
ARRAY(VARIABLE)
javaUtilEx.HashMap$Entry(VARIABLE)
Removed predefined arithmetic.
----------------------------------------

(30)
Obligation:
Rules:
f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), java.lang.Object(javaUtilEx.HashMap$Entry(x11:0)), x9:0) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x11:0, x9:0)

----------------------------------------

(31) IRSwTToQDPProof (SOUND)
Removed the integers and created a QDP-Problem.
----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), java.lang.Object(javaUtilEx.HashMap$Entry(x11:0)), x9:0) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x11:0, x9:0)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(33) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), java.lang.Object(javaUtilEx.HashMap$Entry(x11:0)), x9:0) -> f25565_0_transfer_NONNULL(java.lang.Object(ARRAY(x8:0)), java.lang.Object(ARRAY(x9:0)), x11:0, x9:0)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 > 3, 2 > 4, 4 >= 4


----------------------------------------

(34)
YES

----------------------------------------

(35)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.HashMap$Entry: [hash, next, key]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(36) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 57 IRulesP rules:
f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(o37993sub), java.lang.Object(o37993sub)) -> f24307_0_put_NULL(EOS(STATIC_24307), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(o37993sub), java.lang.Object(o37993sub)) :|: TRUE
f24307_0_put_NULL(EOS(STATIC_24307), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(o37993sub), java.lang.Object(o37993sub)) -> f24312_0_put_Load(EOS(STATIC_24312), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(o37993sub)) :|: TRUE
f24312_0_put_Load(EOS(STATIC_24312), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(o37993sub)) -> f24317_0_put_FieldAccess(EOS(STATIC_24317), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(o37993sub), java.lang.Object(o37993sub)) :|: TRUE
f24317_0_put_FieldAccess(EOS(STATIC_24317), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003))) -> f24322_0_put_FieldAccess(EOS(STATIC_24322), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003))) :|: TRUE
f24322_0_put_FieldAccess(EOS(STATIC_24322), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003))) -> f24327_0_put_Load(EOS(STATIC_24327), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003)), i13228) :|: TRUE
f24327_0_put_Load(EOS(STATIC_24327), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003)), i13228) -> f24332_0_put_NE(EOS(STATIC_24332), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003)), i13228, i13207) :|: TRUE
f24332_0_put_NE(EOS(STATIC_24332), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003)), i13228, i13207) -> f24337_0_put_NE(EOS(STATIC_24337), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003)), i13228, i13207) :|: !(i13228 = i13207)
f24332_0_put_NE(EOS(STATIC_24332), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), i13207, i13207) -> f24338_0_put_NE(EOS(STATIC_24338), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), i13207, i13207) :|: i13228 = i13207
f24337_0_put_NE(EOS(STATIC_24337), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003)), i13228, i13207) -> f24343_0_put_Load(EOS(STATIC_24343), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003))) :|: !(i13228 = i13207)
f24343_0_put_Load(EOS(STATIC_24343), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003))) -> f24349_0_put_FieldAccess(EOS(STATIC_24349), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003))) :|: TRUE
f24349_0_put_FieldAccess(EOS(STATIC_24349), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228, o38005, o38003))) -> f24355_0_put_Store(EOS(STATIC_24355), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) :|: TRUE
f24355_0_put_Store(EOS(STATIC_24355), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) -> f24361_0_put_JMP(EOS(STATIC_24361), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) :|: TRUE
f24361_0_put_JMP(EOS(STATIC_24361), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) -> f24366_0_put_Load(EOS(STATIC_24366), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) :|: TRUE
f24366_0_put_Load(EOS(STATIC_24366), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) -> f24301_0_put_Load(EOS(STATIC_24301), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) :|: TRUE
f24301_0_put_Load(EOS(STATIC_24301), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o37982) -> f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o37982, o37982) :|: TRUE
f24338_0_put_NE(EOS(STATIC_24338), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), i13207, i13207) -> f24344_0_put_Load(EOS(STATIC_24344), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003))) :|: TRUE
f24344_0_put_Load(EOS(STATIC_24344), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003))) -> f24350_0_put_FieldAccess(EOS(STATIC_24350), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003))) :|: TRUE
f24350_0_put_FieldAccess(EOS(STATIC_24350), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003))) -> f24356_0_put_Duplicate(EOS(STATIC_24356), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), o38003) :|: TRUE
f24356_0_put_Duplicate(EOS(STATIC_24356), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), o38003) -> f24362_0_put_Store(EOS(STATIC_24362), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), o38003, o38003) :|: TRUE
f24362_0_put_Store(EOS(STATIC_24362), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), o38003, o38003) -> f24367_0_put_Load(EOS(STATIC_24367), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), o38003, o38003) :|: TRUE
f24367_0_put_Load(EOS(STATIC_24367), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), o38003, o38003) -> f24373_0_put_EQ(EOS(STATIC_24373), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, o38003)), o38003, o38003, java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24373_0_put_EQ(EOS(STATIC_24373), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(o38058sub), java.lang.Object(o38058sub), java.lang.Object(javaUtilEx.Content(EOC))) -> f24378_0_put_EQ(EOS(STATIC_24378), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(o38058sub), java.lang.Object(o38058sub), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24373_0_put_EQ(EOS(STATIC_24373), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), NULL, NULL, java.lang.Object(javaUtilEx.Content(EOC))) -> f24379_0_put_EQ(EOS(STATIC_24379), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), NULL, NULL, java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24378_0_put_EQ(EOS(STATIC_24378), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(o38058sub), java.lang.Object(o38058sub), java.lang.Object(javaUtilEx.Content(EOC))) -> f24384_0_put_Load(EOS(STATIC_24384), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(o38058sub)) :|: TRUE
f24384_0_put_Load(EOS(STATIC_24384), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(o38058sub)) -> f24390_0_put_Load(EOS(STATIC_24390), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(o38058sub), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24390_0_put_Load(EOS(STATIC_24390), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(o38058sub), java.lang.Object(javaUtilEx.Content(EOC))) -> f24398_0_put_InvokeMethod(EOS(STATIC_24398), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub)) :|: TRUE
f24398_0_put_InvokeMethod(EOS(STATIC_24398), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub)) -> f24404_0_equals_Load(EOS(STATIC_24404), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub)) :|: i13193 > 1
f24398_0_put_InvokeMethod(EOS(STATIC_24398), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub)) -> f24404_1_equals_Load(EOS(STATIC_24404), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub)) :|: i13193 > 1
f24404_0_equals_Load(EOS(STATIC_24404), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub)) -> f26685_0_equals_Load(EOS(STATIC_26685), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38058sub))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub)) :|: TRUE
f24430_0_equals_Return(EOS(STATIC_24430), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38178sub))), matching1) -> f24443_0_put_EQ(EOS(STATIC_24443), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38178sub))), 0) :|: TRUE && matching1 = 0
f24443_0_put_EQ(EOS(STATIC_24443), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38178sub))), matching1) -> f24449_0_put_Load(EOS(STATIC_24449), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38178sub)))) :|: TRUE && matching1 = 0
f24449_0_put_Load(EOS(STATIC_24449), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38178sub)))) -> f24457_0_put_FieldAccess(EOS(STATIC_24457), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38178sub)))) :|: TRUE
f24457_0_put_FieldAccess(EOS(STATIC_24457), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38178sub)))) -> f24465_0_put_Store(EOS(STATIC_24465), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) :|: TRUE
f24465_0_put_Store(EOS(STATIC_24465), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) -> f24355_0_put_Store(EOS(STATIC_24355), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) :|: TRUE
f24431_0_equals_Return(EOS(STATIC_24431), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(javaUtilEx.Content(EOC)))), matching1) -> f24433_0_equals_Return(EOS(STATIC_24433), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(javaUtilEx.Content(EOC)))), 0) :|: TRUE && matching1 = 0
f24433_0_equals_Return(EOS(STATIC_24433), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38243, java.lang.Object(javaUtilEx.Content(EOC)))), i13391) -> f24444_0_put_EQ(EOS(STATIC_24444), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38243, java.lang.Object(javaUtilEx.Content(EOC)))), i13391) :|: TRUE
f24444_0_put_EQ(EOS(STATIC_24444), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38243, java.lang.Object(javaUtilEx.Content(EOC)))), matching1) -> f24451_0_put_EQ(EOS(STATIC_24451), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38243, java.lang.Object(javaUtilEx.Content(EOC)))), 0) :|: TRUE && matching1 = 0
f24451_0_put_EQ(EOS(STATIC_24451), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38243, java.lang.Object(javaUtilEx.Content(EOC)))), matching1) -> f24459_0_put_Load(EOS(STATIC_24459), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38243, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE && matching1 = 0
f24459_0_put_Load(EOS(STATIC_24459), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38243, java.lang.Object(javaUtilEx.Content(EOC))))) -> f24467_0_put_FieldAccess(EOS(STATIC_24467), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38243, java.lang.Object(javaUtilEx.Content(EOC))))) :|: TRUE
f24467_0_put_FieldAccess(EOS(STATIC_24467), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38243, java.lang.Object(javaUtilEx.Content(EOC))))) -> f24473_0_put_Store(EOS(STATIC_24473), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38243) :|: TRUE
f24473_0_put_Store(EOS(STATIC_24473), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38243) -> f24355_0_put_Store(EOS(STATIC_24355), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38243) :|: TRUE
f24432_0_equals_Return(EOS(STATIC_24432), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(javaUtilEx.Content(EOC)))), matching1) -> f24433_0_equals_Return(EOS(STATIC_24433), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(javaUtilEx.Content(EOC)))), 1) :|: TRUE && matching1 = 1
f24379_0_put_EQ(EOS(STATIC_24379), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), NULL, NULL, java.lang.Object(javaUtilEx.Content(EOC))) -> f24385_0_put_Load(EOS(STATIC_24385), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), NULL) :|: TRUE
f24385_0_put_Load(EOS(STATIC_24385), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), NULL) -> f24391_0_put_Load(EOS(STATIC_24391), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), NULL, java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24391_0_put_Load(EOS(STATIC_24391), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), NULL, java.lang.Object(javaUtilEx.Content(EOC))) -> f24399_0_put_InvokeMethod(EOS(STATIC_24399), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), java.lang.Object(javaUtilEx.Content(EOC)), NULL) :|: TRUE
f24399_0_put_InvokeMethod(EOS(STATIC_24399), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), java.lang.Object(javaUtilEx.Content(EOC)), NULL) -> f24405_0_equals_Load(EOS(STATIC_24405), java.lang.Object(javaUtilEx.Content(EOC)), NULL, java.lang.Object(javaUtilEx.Content(EOC)), NULL) :|: i13193 > 1
f24399_0_put_InvokeMethod(EOS(STATIC_24399), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), java.lang.Object(javaUtilEx.Content(EOC)), NULL) -> f24405_1_equals_Load(EOS(STATIC_24405), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), java.lang.Object(javaUtilEx.Content(EOC)), NULL) :|: i13193 > 1
f24405_0_equals_Load(EOS(STATIC_24405), java.lang.Object(javaUtilEx.Content(EOC)), NULL, java.lang.Object(javaUtilEx.Content(EOC)), NULL) -> f26741_0_equals_Load(EOS(STATIC_26741), java.lang.Object(javaUtilEx.Content(EOC)), NULL, java.lang.Object(javaUtilEx.Content(EOC)), NULL) :|: TRUE
f24435_0_equals_Return(EOS(STATIC_24435), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), matching1) -> f24445_0_put_EQ(EOS(STATIC_24445), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), 0) :|: TRUE && matching1 = 0
f24445_0_put_EQ(EOS(STATIC_24445), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), matching1) -> f24452_0_put_Load(EOS(STATIC_24452), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL))) :|: TRUE && matching1 = 0
f24452_0_put_Load(EOS(STATIC_24452), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL))) -> f24460_0_put_FieldAccess(EOS(STATIC_24460), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL))) :|: TRUE
f24460_0_put_FieldAccess(EOS(STATIC_24460), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL))) -> f24468_0_put_Store(EOS(STATIC_24468), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) :|: TRUE
f24468_0_put_Store(EOS(STATIC_24468), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) -> f24355_0_put_Store(EOS(STATIC_24355), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, o38005) :|: TRUE
f24404_1_equals_Load(EOS(STATIC_24404), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38178sub))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38178sub)) -> f24430_0_equals_Return(EOS(STATIC_24430), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(o38178sub))), 0) :|: TRUE
f24404_1_equals_Load(EOS(STATIC_24404), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f24431_0_equals_Return(EOS(STATIC_24431), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(javaUtilEx.Content(EOC)))), 0) :|: TRUE
f24404_1_equals_Load(EOS(STATIC_24404), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f24432_0_equals_Return(EOS(STATIC_24432), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, java.lang.Object(javaUtilEx.Content(EOC)))), 1) :|: TRUE
f24405_1_equals_Load(EOS(STATIC_24405), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), java.lang.Object(javaUtilEx.Content(EOC)), NULL) -> f24435_0_equals_Return(EOS(STATIC_24435), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207, o38005, NULL)), 0) :|: TRUE
Combined rules. Obtained 7 IRulesP rules:
f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207:0, o38005:0, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207:0, o38005:0, NULL))) -> f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, o38005:0, o38005:0) :|: i13193:0 > 1
f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207:0, o38005:0, java.lang.Object(javaUtilEx.Content(EOC)))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207:0, o38005:0, java.lang.Object(javaUtilEx.Content(EOC))))) -> f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, o38005:0, o38005:0) :|: i13193:0 > 1
f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228:0, o38005:0, o38003:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228:0, o38005:0, o38003:0))) -> f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, o38005:0, o38005:0) :|: i13228:0 < i13207:0
f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228:0, o38005:0, o38003:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13228:0, o38005:0, o38003:0))) -> f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, o38005:0, o38005:0) :|: i13228:0 > i13207:0
f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207:0, o38005:0, java.lang.Object(o38058sub:0))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207:0, o38005:0, java.lang.Object(o38058sub:0)))) -> f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, o38005:0, o38005:0) :|: i13193:0 > 1
Removed following non-SCC rules:
f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207:0, o38005:0, java.lang.Object(o38058sub:0))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207:0, o38005:0, java.lang.Object(o38058sub:0)))) -> f26685_0_equals_Load(EOS(STATIC_26685), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub:0), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207:0, o38005:0, java.lang.Object(o38058sub:0))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o38058sub:0)) :|: i13193:0 > 1
f24304_0_put_NULL(EOS(STATIC_24304), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207:0, o38005:0, NULL)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, i13207:0, o38005:0, NULL))) -> f26741_0_equals_Load(EOS(STATIC_26741), java.lang.Object(javaUtilEx.Content(EOC)), NULL, java.lang.Object(javaUtilEx.Content(EOC)), NULL) :|: i13193:0 > 1
Filtered constant ground arguments:
   f24304_0_put_NULL(x1, x2, x3, x4, x5, x6, x7) -> f24304_0_put_NULL(x5, x6, x7)
   EOS(x1) -> EOS
   javaUtilEx.AbstractMap(x1) -> javaUtilEx.AbstractMap
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.HashMap$Entry(x1, x2, x3, x4) -> javaUtilEx.HashMap$Entry(x2, x3, x4)
   javaUtilEx.HashMap(x1) -> javaUtilEx.HashMap
Filtered duplicate arguments:
   f24304_0_put_NULL(x1, x2, x3) -> f24304_0_put_NULL(x1, x3)
Finished conversion. Obtained 5 rules.P rules:
f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13207:0, o38005:0, NULL))) -> f24304_0_put_NULL(i13207:0, o38005:0) :|: TRUE
f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13207:0, o38005:0, java.lang.Object(javaUtilEx.Content)))) -> f24304_0_put_NULL(i13207:0, o38005:0) :|: TRUE
f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13228:0, o38005:0, o38003:0))) -> f24304_0_put_NULL(i13207:0, o38005:0) :|: i13228:0 < i13207:0
f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13228:0, o38005:0, o38003:0))) -> f24304_0_put_NULL(i13207:0, o38005:0) :|: i13228:0 > i13207:0
f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13207:0, o38005:0, java.lang.Object(o38058sub:0)))) -> f24304_0_put_NULL(i13207:0, o38005:0) :|: TRUE

----------------------------------------

(37)
Obligation:
Rules:
f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13207:0, o38005:0, NULL))) -> f24304_0_put_NULL(i13207:0, o38005:0) :|: TRUE
f24304_0_put_NULL(x, java.lang.Object(javaUtilEx.HashMap$Entry(x, x1, java.lang.Object(javaUtilEx.Content)))) -> f24304_0_put_NULL(x, x1) :|: TRUE
f24304_0_put_NULL(x2, java.lang.Object(javaUtilEx.HashMap$Entry(x3, x4, x5))) -> f24304_0_put_NULL(x2, x4) :|: x3 < x2
f24304_0_put_NULL(x6, java.lang.Object(javaUtilEx.HashMap$Entry(x7, x8, x9))) -> f24304_0_put_NULL(x6, x8) :|: x7 > x6
f24304_0_put_NULL(x10, java.lang.Object(javaUtilEx.HashMap$Entry(x10, x11, java.lang.Object(x12)))) -> f24304_0_put_NULL(x10, x11) :|: TRUE

----------------------------------------

(38) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(39)
Obligation:
Rules:
f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13207:0, o38005:0, NULL))) -> f24304_0_put_NULL(i13207:0, o38005:0) :|: TRUE
f24304_0_put_NULL(x, java.lang.Object(javaUtilEx.HashMap$Entry(x, x1, java.lang.Object(javaUtilEx.Content)))) -> f24304_0_put_NULL(x, x1) :|: TRUE
f24304_0_put_NULL(x2, java.lang.Object(javaUtilEx.HashMap$Entry(x3, x4, x5))) -> f24304_0_put_NULL(x2, x4) :|: x3 < x2
f24304_0_put_NULL(x6, java.lang.Object(javaUtilEx.HashMap$Entry(x7, x8, x9))) -> f24304_0_put_NULL(x6, x8) :|: x7 > x6
f24304_0_put_NULL(x10, java.lang.Object(javaUtilEx.HashMap$Entry(x10, x11, java.lang.Object(x12)))) -> f24304_0_put_NULL(x10, x11) :|: TRUE

----------------------------------------

(40) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13207:0, o38005:0, NULL))) -> f24304_0_put_NULL(i13207:0, o38005:0) :|: TRUE
(2) f24304_0_put_NULL(x, java.lang.Object(javaUtilEx.HashMap$Entry(x, x1, java.lang.Object(javaUtilEx.Content)))) -> f24304_0_put_NULL(x, x1) :|: TRUE
(3) f24304_0_put_NULL(x2, java.lang.Object(javaUtilEx.HashMap$Entry(x3, x4, x5))) -> f24304_0_put_NULL(x2, x4) :|: x3 < x2
(4) f24304_0_put_NULL(x6, java.lang.Object(javaUtilEx.HashMap$Entry(x7, x8, x9))) -> f24304_0_put_NULL(x6, x8) :|: x7 > x6
(5) f24304_0_put_NULL(x10, java.lang.Object(javaUtilEx.HashMap$Entry(x10, x11, java.lang.Object(x12)))) -> f24304_0_put_NULL(x10, x11) :|: TRUE

Arcs:
(1) -> (1), (2), (3), (4), (5)
(2) -> (1), (2), (3), (4), (5)
(3) -> (1), (2), (3), (4), (5)
(4) -> (1), (2), (3), (4), (5)
(5) -> (1), (2), (3), (4), (5)

This digraph is fully evaluated!
----------------------------------------

(41)
Obligation:

Termination digraph:
Nodes:
(1) f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13207:0, o38005:0, NULL))) -> f24304_0_put_NULL(i13207:0, o38005:0) :|: TRUE
(2) f24304_0_put_NULL(x, java.lang.Object(javaUtilEx.HashMap$Entry(x, x1, java.lang.Object(javaUtilEx.Content)))) -> f24304_0_put_NULL(x, x1) :|: TRUE
(3) f24304_0_put_NULL(x2, java.lang.Object(javaUtilEx.HashMap$Entry(x3, x4, x5))) -> f24304_0_put_NULL(x2, x4) :|: x3 < x2
(4) f24304_0_put_NULL(x6, java.lang.Object(javaUtilEx.HashMap$Entry(x7, x8, x9))) -> f24304_0_put_NULL(x6, x8) :|: x7 > x6
(5) f24304_0_put_NULL(x10, java.lang.Object(javaUtilEx.HashMap$Entry(x10, x11, java.lang.Object(x12)))) -> f24304_0_put_NULL(x10, x11) :|: TRUE

Arcs:
(1) -> (1), (2), (3), (4), (5)
(2) -> (1), (2), (3), (4), (5)
(3) -> (1), (2), (3), (4), (5)
(4) -> (1), (2), (3), (4), (5)
(5) -> (1), (2), (3), (4), (5)

This digraph is fully evaluated!

----------------------------------------

(42) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f24304_0_put_NULL(VARIABLE, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.HashMap$Entry(VARIABLE, VARIABLE, VARIABLE)
NULL()
javaUtilEx.Content()
Removed predefined arithmetic.
----------------------------------------

(43)
Obligation:
Rules:
f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13207:0, o38005:0, NULL))) -> f24304_0_put_NULL(i13207:0, o38005:0)
f24304_0_put_NULL(x, java.lang.Object(javaUtilEx.HashMap$Entry(x, x1, java.lang.Object(javaUtilEx.Content)))) -> f24304_0_put_NULL(x, x1)
f24304_0_put_NULL(x2, java.lang.Object(javaUtilEx.HashMap$Entry(x3, x4, x5))) -> f24304_0_put_NULL(x2, x4)
f24304_0_put_NULL(x10, java.lang.Object(javaUtilEx.HashMap$Entry(x10, x11, java.lang.Object(x12)))) -> f24304_0_put_NULL(x10, x11)

----------------------------------------

(44) IRSwTToQDPProof (SOUND)
Removed the integers and created a QDP-Problem.
----------------------------------------

(45)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13207:0, o38005:0, NULL))) -> f24304_0_put_NULL(i13207:0, o38005:0)
   f24304_0_put_NULL(x, java.lang.Object(javaUtilEx.HashMap$Entry(x, x1, java.lang.Object(javaUtilEx.Content)))) -> f24304_0_put_NULL(x, x1)
   f24304_0_put_NULL(x2, java.lang.Object(javaUtilEx.HashMap$Entry(x3, x4, x5))) -> f24304_0_put_NULL(x2, x4)
   f24304_0_put_NULL(x10, java.lang.Object(javaUtilEx.HashMap$Entry(x10, x11, java.lang.Object(x12)))) -> f24304_0_put_NULL(x10, x11)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(46) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*f24304_0_put_NULL(i13207:0, java.lang.Object(javaUtilEx.HashMap$Entry(i13207:0, o38005:0, NULL))) -> f24304_0_put_NULL(i13207:0, o38005:0)
The graph contains the following edges 1 >= 1, 2 > 1, 2 > 2


*f24304_0_put_NULL(x, java.lang.Object(javaUtilEx.HashMap$Entry(x, x1, java.lang.Object(javaUtilEx.Content)))) -> f24304_0_put_NULL(x, x1)
The graph contains the following edges 1 >= 1, 2 > 1, 2 > 2


*f24304_0_put_NULL(x2, java.lang.Object(javaUtilEx.HashMap$Entry(x3, x4, x5))) -> f24304_0_put_NULL(x2, x4)
The graph contains the following edges 1 >= 1, 2 > 2


*f24304_0_put_NULL(x10, java.lang.Object(javaUtilEx.HashMap$Entry(x10, x11, java.lang.Object(x12)))) -> f24304_0_put_NULL(x10, x11)
The graph contains the following edges 1 >= 1, 2 > 1, 2 > 2


----------------------------------------

(47)
YES

----------------------------------------

(48)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.AbstractMap.hashCode()I
SCC calls the following helper methods: javaUtilEx.HashMap$Entry.hashCode()I, javaUtilEx.Content.hashCode()I
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.HashMap$HashIterator: [next, this$0, expectedModCount, index]
*javaUtilEx.HashMap: [modCount, table]
*javaUtilEx.HashMap$Entry: [next]
*Marker field analysis yielded the following relations that could be markers:
*javaUtilEx.HashMap$HashIterator.expectedModCount = i12990 (Introduced counter i15003)
*javaUtilEx.HashMap.modCount = i12990 (Introduced counter i15004)
----------------------------------------

(49) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 172 IRulesP rules:
f24873_0_hashCode_InvokeMethod(EOS(STATIC_24873), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24880_0_hasNext_Load(EOS(STATIC_24880), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24880_0_hasNext_Load(EOS(STATIC_24880), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24895_0_hasNext_FieldAccess(EOS(STATIC_24895), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24895_0_hasNext_FieldAccess(EOS(STATIC_24895), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24902_0_hasNext_NULL(EOS(STATIC_24902), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), i15003, i15004) :|: TRUE
f24902_0_hasNext_NULL(EOS(STATIC_24902), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), i15003, i15004) -> f24910_0_hasNext_ConstantStackPush(EOS(STATIC_24910), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24910_0_hasNext_ConstantStackPush(EOS(STATIC_24910), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24915_0_hasNext_JMP(EOS(STATIC_24915), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), 1, i15003, i15004) :|: TRUE
f24915_0_hasNext_JMP(EOS(STATIC_24915), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), matching1, i15003, i15004) -> f24920_0_hasNext_Return(EOS(STATIC_24920), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), 1, i15003, i15004) :|: TRUE && matching1 = 1
f24920_0_hasNext_Return(EOS(STATIC_24920), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), matching1, i15003, i15004) -> f24924_0_hashCode_EQ(EOS(STATIC_24924), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), 1, i15003, i15004) :|: TRUE && matching1 = 1
f24924_0_hashCode_EQ(EOS(STATIC_24924), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), matching1, i15003, i15004) -> f24930_0_hashCode_Load(EOS(STATIC_24930), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: 1 > 0 && matching1 = 1
f24930_0_hashCode_Load(EOS(STATIC_24930), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24935_0_hashCode_Load(EOS(STATIC_24935), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24935_0_hashCode_Load(EOS(STATIC_24935), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24939_0_hashCode_InvokeMethod(EOS(STATIC_24939), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24939_0_hashCode_InvokeMethod(EOS(STATIC_24939), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24943_0_next_Load(EOS(STATIC_24943), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24943_0_next_Load(EOS(STATIC_24943), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24951_0_next_InvokeMethod(EOS(STATIC_24951), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24951_0_next_InvokeMethod(EOS(STATIC_24951), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24954_0_next_Load(EOS(STATIC_24954), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24954_0_next_Load(EOS(STATIC_24954), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24962_0_next_InvokeMethod(EOS(STATIC_24962), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24962_0_next_InvokeMethod(EOS(STATIC_24962), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24966_0_nextEntry_Load(EOS(STATIC_24966), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24966_0_nextEntry_Load(EOS(STATIC_24966), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24976_0_nextEntry_FieldAccess(EOS(STATIC_24976), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24976_0_nextEntry_FieldAccess(EOS(STATIC_24976), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24979_0_nextEntry_FieldAccess(EOS(STATIC_24979), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i15003, i15004) :|: TRUE
f24979_0_nextEntry_FieldAccess(EOS(STATIC_24979), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i15003, i15004) -> f24984_0_nextEntry_Load(EOS(STATIC_24984), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i12990, i15003, i15004) :|: TRUE
f24984_0_nextEntry_Load(EOS(STATIC_24984), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i12990, i15003, i15004) -> f24989_0_nextEntry_FieldAccess(EOS(STATIC_24989), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i12990, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24989_0_nextEntry_FieldAccess(EOS(STATIC_24989), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i12990, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24993_0_nextEntry_EQ(EOS(STATIC_24993), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i12990, i12990, i15003, i15004) :|: TRUE
f24993_0_nextEntry_EQ(EOS(STATIC_24993), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i12990, i12990, i15003, i15004) -> f24998_0_nextEntry_Load(EOS(STATIC_24998), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24998_0_nextEntry_Load(EOS(STATIC_24998), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25001_0_nextEntry_FieldAccess(EOS(STATIC_25001), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25001_0_nextEntry_FieldAccess(EOS(STATIC_25001), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25004_0_nextEntry_Store(EOS(STATIC_25004), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), i15003, i15004) :|: TRUE
f25004_0_nextEntry_Store(EOS(STATIC_25004), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), i15003, i15004) -> f25008_0_nextEntry_Load(EOS(STATIC_25008), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), i15003, i15004) :|: TRUE
f25008_0_nextEntry_Load(EOS(STATIC_25008), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), i15003, i15004) -> f25012_0_nextEntry_NONNULL(EOS(STATIC_25012), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), java.lang.Object(o39343sub), i15003, i15004) :|: TRUE
f25012_0_nextEntry_NONNULL(EOS(STATIC_25012), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), java.lang.Object(o39343sub), i15003, i15004) -> f25015_0_nextEntry_Load(EOS(STATIC_25015), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), i15003, i15004) :|: TRUE
f25015_0_nextEntry_Load(EOS(STATIC_25015), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), i15003, i15004) -> f25019_0_nextEntry_Load(EOS(STATIC_25019), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25019_0_nextEntry_Load(EOS(STATIC_25019), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25024_0_nextEntry_FieldAccess(EOS(STATIC_25024), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(o39343sub), i15003, i15004) :|: TRUE
f25024_0_nextEntry_FieldAccess(EOS(STATIC_25024), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), i15003, i15004) -> f25028_0_nextEntry_FieldAccess(EOS(STATIC_25028), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), i15003, i15004) :|: TRUE
f25028_0_nextEntry_FieldAccess(EOS(STATIC_25028), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), i15003, i15004) -> f25033_0_nextEntry_Duplicate(EOS(STATIC_25033), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), o39520, i15003, i15004) :|: TRUE
f25033_0_nextEntry_Duplicate(EOS(STATIC_25033), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), o39520, i15003, i15004) -> f25039_0_nextEntry_FieldAccess(EOS(STATIC_25039), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), o39520, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), o39520, i15003, i15004) :|: TRUE
f25039_0_nextEntry_FieldAccess(EOS(STATIC_25039), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), o39520, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), o39520, i15003, i15004) -> f25043_0_nextEntry_NONNULL(EOS(STATIC_25043), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), o39520, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), o39520, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, o39520)), o39520, i15003, i15004) :|: TRUE
f25043_0_nextEntry_NONNULL(EOS(STATIC_25043), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), java.lang.Object(o39533sub), i15003, i15004) -> f25049_0_nextEntry_NONNULL(EOS(STATIC_25049), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), java.lang.Object(o39533sub), i15003, i15004) :|: TRUE
f25043_0_nextEntry_NONNULL(EOS(STATIC_25043), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), NULL, i15003, i15004) -> f25050_0_nextEntry_NONNULL(EOS(STATIC_25050), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), NULL, i15003, i15004) :|: TRUE
f25049_0_nextEntry_NONNULL(EOS(STATIC_25049), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), java.lang.Object(o39533sub), i15003, i15004) -> f25056_0_nextEntry_Load(EOS(STATIC_25056), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) :|: TRUE
f25056_0_nextEntry_Load(EOS(STATIC_25056), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) -> f25062_0_nextEntry_Load(EOS(STATIC_25062), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25062_0_nextEntry_Load(EOS(STATIC_25062), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25069_0_nextEntry_FieldAccess(EOS(STATIC_25069), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) :|: TRUE
f25069_0_nextEntry_FieldAccess(EOS(STATIC_25069), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) -> f25073_0_nextEntry_Load(EOS(STATIC_25073), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) :|: TRUE
f25073_0_nextEntry_Load(EOS(STATIC_25073), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) -> f25076_0_nextEntry_Return(EOS(STATIC_25076), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) :|: TRUE
f25076_0_nextEntry_Return(EOS(STATIC_25076), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) -> f25081_0_next_Return(EOS(STATIC_25081), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) :|: TRUE
f25081_0_next_Return(EOS(STATIC_25081), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) -> f25085_0_next_Return(EOS(STATIC_25085), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) :|: TRUE
f25085_0_next_Return(EOS(STATIC_25085), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) -> f25088_0_hashCode_CheckCast(EOS(STATIC_25088), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) :|: TRUE
f25088_0_hashCode_CheckCast(EOS(STATIC_25088), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) -> f25092_0_hashCode_InvokeMethod(EOS(STATIC_25092), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) :|: TRUE
f25092_0_hashCode_InvokeMethod(EOS(STATIC_25092), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) -> f25097_0_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), java.lang.Object(ARRAY(i13294)), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) :|: i13462 >= 1 && i13197 >= 1 && i13294 >= 1 && i13462 <= i13294
f25092_0_hashCode_InvokeMethod(EOS(STATIC_25092), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) -> f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) :|: i13462 >= 1 && i13197 >= 1 && i13294 >= 1 && i13462 <= i13294
f25097_0_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), java.lang.Object(ARRAY(i13294)), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) -> f26911_0_hashCode_Load(EOS(STATIC_26911), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), java.lang.Object(ARRAY(i13294)), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub))), i15003, i15004) :|: TRUE
f25124_0_hashCode_Return(EOS(STATIC_25124), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39635sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25126_0_hashCode_Return(EOS(STATIC_25126), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39635sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25126_0_hashCode_Return(EOS(STATIC_25126), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40014sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25128_0_hashCode_Return(EOS(STATIC_25128), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40014sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25128_0_hashCode_Return(EOS(STATIC_25128), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40032sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25131_0_hashCode_Return(EOS(STATIC_25131), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40032sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25131_0_hashCode_Return(EOS(STATIC_25131), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40076sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25134_0_hashCode_Return(EOS(STATIC_25134), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40076sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25134_0_hashCode_Return(EOS(STATIC_25134), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40117sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25138_0_hashCode_Return(EOS(STATIC_25138), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40117sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25138_0_hashCode_Return(EOS(STATIC_25138), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40167sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25142_0_hashCode_Return(EOS(STATIC_25142), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40167sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25142_0_hashCode_Return(EOS(STATIC_25142), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40217sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25151_0_hashCode_IntArithmetic(EOS(STATIC_25151), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40217sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25151_0_hashCode_IntArithmetic(EOS(STATIC_25151), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40217sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25155_0_hashCode_Store(EOS(STATIC_25155), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40217sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25155_0_hashCode_Store(EOS(STATIC_25155), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40217sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25161_0_hashCode_JMP(EOS(STATIC_25161), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40217sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25161_0_hashCode_JMP(EOS(STATIC_25161), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40217sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25167_0_hashCode_Load(EOS(STATIC_25167), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40217sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25167_0_hashCode_Load(EOS(STATIC_25167), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40217sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24867_0_hashCode_Load(EOS(STATIC_24867), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40217sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f24867_0_hashCode_Load(EOS(STATIC_24867), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f24873_0_hashCode_InvokeMethod(EOS(STATIC_24873), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39343sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25125_0_hashCode_Return(EOS(STATIC_25125), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39656sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25126_0_hashCode_Return(EOS(STATIC_25126), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39656sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25127_0_hashCode_Return(EOS(STATIC_25127), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39677sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25128_0_hashCode_Return(EOS(STATIC_25128), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39677sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25129_0_hashCode_Return(EOS(STATIC_25129), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39701sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25128_0_hashCode_Return(EOS(STATIC_25128), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39701sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25130_0_hashCode_Return(EOS(STATIC_25130), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39722sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25131_0_hashCode_Return(EOS(STATIC_25131), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39722sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25132_0_hashCode_Return(EOS(STATIC_25132), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39746sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25131_0_hashCode_Return(EOS(STATIC_25131), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39746sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25133_0_hashCode_Return(EOS(STATIC_25133), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39767sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25134_0_hashCode_Return(EOS(STATIC_25134), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39767sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25135_0_hashCode_Return(EOS(STATIC_25135), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39791sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25134_0_hashCode_Return(EOS(STATIC_25134), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39791sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25136_0_hashCode_Return(EOS(STATIC_25136), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39815sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25134_0_hashCode_Return(EOS(STATIC_25134), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39815sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25137_0_hashCode_Return(EOS(STATIC_25137), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39839sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25138_0_hashCode_Return(EOS(STATIC_25138), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39839sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25139_0_hashCode_Return(EOS(STATIC_25139), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39866sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25138_0_hashCode_Return(EOS(STATIC_25138), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39866sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25140_0_hashCode_Return(EOS(STATIC_25140), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39893sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25138_0_hashCode_Return(EOS(STATIC_25138), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39893sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25141_0_hashCode_Return(EOS(STATIC_25141), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39917sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25142_0_hashCode_Return(EOS(STATIC_25142), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39917sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25143_0_hashCode_Return(EOS(STATIC_25143), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39944sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25142_0_hashCode_Return(EOS(STATIC_25142), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39944sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25144_0_hashCode_Return(EOS(STATIC_25144), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39971sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25142_0_hashCode_Return(EOS(STATIC_25142), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39971sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25145_0_hashCode_Return(EOS(STATIC_25145), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40001sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25142_0_hashCode_Return(EOS(STATIC_25142), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40001sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25050_0_nextEntry_NONNULL(EOS(STATIC_25050), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), NULL, i15003, i15004) -> f25057_0_nextEntry_Load(EOS(STATIC_25057), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: TRUE
f25057_0_nextEntry_Load(EOS(STATIC_25057), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25063_0_nextEntry_FieldAccess(EOS(STATIC_25063), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25063_0_nextEntry_FieldAccess(EOS(STATIC_25063), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25070_0_nextEntry_FieldAccess(EOS(STATIC_25070), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i15003, i15004) :|: TRUE
f25070_0_nextEntry_FieldAccess(EOS(STATIC_25070), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i15003, i15004) -> f25074_0_nextEntry_Store(EOS(STATIC_25074), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i15003, i15004) :|: TRUE
f25074_0_nextEntry_Store(EOS(STATIC_25074), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i15003, i15004) -> f25077_0_nextEntry_Load(EOS(STATIC_25077), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i15003, i15004) :|: TRUE
f25077_0_nextEntry_Load(EOS(STATIC_25077), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i15003, i15004) -> f25082_0_nextEntry_FieldAccess(EOS(STATIC_25082), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25082_0_nextEntry_FieldAccess(EOS(STATIC_25082), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25086_0_nextEntry_Load(EOS(STATIC_25086), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i13462, i15003, i15004) :|: TRUE
f25086_0_nextEntry_Load(EOS(STATIC_25086), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i13462, i15003, i15004) -> f25089_0_nextEntry_ArrayLength(EOS(STATIC_25089), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i13462, java.lang.Object(ARRAY(i13294)), i15003, i15004) :|: TRUE
f25089_0_nextEntry_ArrayLength(EOS(STATIC_25089), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i13462, java.lang.Object(ARRAY(i13294)), i15003, i15004) -> f25093_0_nextEntry_GE(EOS(STATIC_25093), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i13462, i13294, i15003, i15004) :|: i13294 >= 0
f25093_0_nextEntry_GE(EOS(STATIC_25093), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i13462, i13294, i15003, i15004) -> f25099_0_nextEntry_GE(EOS(STATIC_25099), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i13462, i13294, i15003, i15004) :|: i13462 < i13294
f25099_0_nextEntry_GE(EOS(STATIC_25099), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i13462, i13294, i15003, i15004) -> f25104_0_nextEntry_Load(EOS(STATIC_25104), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i15003, i15004) :|: i13462 < i13294
f25104_0_nextEntry_Load(EOS(STATIC_25104), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i15003, i15004) -> f25110_0_nextEntry_Load(EOS(STATIC_25110), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25110_0_nextEntry_Load(EOS(STATIC_25110), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25116_0_nextEntry_Load(EOS(STATIC_25116), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), i15003, i15004) :|: TRUE
f25116_0_nextEntry_Load(EOS(STATIC_25116), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), i15003, i15004) -> f25119_0_nextEntry_Duplicate(EOS(STATIC_25119), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25119_0_nextEntry_Duplicate(EOS(STATIC_25119), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25147_0_nextEntry_FieldAccess(EOS(STATIC_25147), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE
f25147_0_nextEntry_FieldAccess(EOS(STATIC_25147), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) -> f25153_0_nextEntry_Duplicate(EOS(STATIC_25153), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i13462, i15003, i15004) :|: TRUE
f25153_0_nextEntry_Duplicate(EOS(STATIC_25153), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i13462, i15003, i15004) -> f25157_0_nextEntry_ConstantStackPush(EOS(STATIC_25157), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), i13462, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i13462, i15003, i15004) :|: TRUE
f25157_0_nextEntry_ConstantStackPush(EOS(STATIC_25157), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), i13462, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i13462, i15003, i15004) -> f25163_0_nextEntry_IntArithmetic(EOS(STATIC_25163), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), i13462, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i13462, 1, i15003, i15004) :|: TRUE
f25163_0_nextEntry_IntArithmetic(EOS(STATIC_25163), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), i13462, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i13462, matching1, i15003, i15004) -> f25169_0_nextEntry_FieldAccess(EOS(STATIC_25169), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), i13462, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i13462 + 1, i15003, i15004) :|: i13462 > 0 && matching1 = 1
f25169_0_nextEntry_FieldAccess(EOS(STATIC_25169), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(ARRAY(i13294)), i13462, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i14308, i15003, i15004) -> f25172_0_nextEntry_ArrayAccess(EOS(STATIC_25172), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(ARRAY(i13294)), i13462, i15003, i15004) :|: TRUE
f25172_0_nextEntry_ArrayAccess(EOS(STATIC_25172), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(ARRAY(i13294)), i13462, i15003, i15004) -> f25177_0_nextEntry_ArrayAccess(EOS(STATIC_25177), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(ARRAY(i13294)), i13462, i15003, i15004) :|: TRUE
f25177_0_nextEntry_ArrayAccess(EOS(STATIC_25177), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(ARRAY(i13294)), i13462, i15003, i15004) -> f25183_0_nextEntry_Duplicate(EOS(STATIC_25183), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), o40317, i15003, i15004) :|: i13462 < i13294
f25183_0_nextEntry_Duplicate(EOS(STATIC_25183), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), o40317, i15003, i15004) -> f25188_0_nextEntry_FieldAccess(EOS(STATIC_25188), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), o40317, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), o40317, i15003, i15004) :|: TRUE
f25188_0_nextEntry_FieldAccess(EOS(STATIC_25188), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), o40317, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), o40317, i15003, i15004) -> f25192_0_nextEntry_NONNULL(EOS(STATIC_25192), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), o40317, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), o40317, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), o40317, i15003, i15004) :|: TRUE
f25192_0_nextEntry_NONNULL(EOS(STATIC_25192), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(o40947sub), i15003, i15004) -> f25219_0_nextEntry_NONNULL(EOS(STATIC_25219), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(o40947sub), i15003, i15004) :|: TRUE
f25192_0_nextEntry_NONNULL(EOS(STATIC_25192), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), NULL, i15003, i15004) -> f25220_0_nextEntry_NONNULL(EOS(STATIC_25220), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), NULL, i15003, i15004) :|: TRUE
f25219_0_nextEntry_NONNULL(EOS(STATIC_25219), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), java.lang.Object(o40947sub), i15003, i15004) -> f25225_0_nextEntry_Load(EOS(STATIC_25225), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: TRUE
f25225_0_nextEntry_Load(EOS(STATIC_25225), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25231_0_nextEntry_Load(EOS(STATIC_25231), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25231_0_nextEntry_Load(EOS(STATIC_25231), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25238_0_nextEntry_FieldAccess(EOS(STATIC_25238), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: TRUE
f25238_0_nextEntry_FieldAccess(EOS(STATIC_25238), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25244_0_nextEntry_Load(EOS(STATIC_25244), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: TRUE
f25244_0_nextEntry_Load(EOS(STATIC_25244), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25249_0_nextEntry_Return(EOS(STATIC_25249), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: TRUE
f25249_0_nextEntry_Return(EOS(STATIC_25249), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25255_0_next_Return(EOS(STATIC_25255), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: TRUE
f25255_0_next_Return(EOS(STATIC_25255), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25260_0_next_Return(EOS(STATIC_25260), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: TRUE
f25260_0_next_Return(EOS(STATIC_25260), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25265_0_hashCode_CheckCast(EOS(STATIC_25265), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: TRUE
f25265_0_hashCode_CheckCast(EOS(STATIC_25265), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25271_0_hashCode_InvokeMethod(EOS(STATIC_25271), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: TRUE
f25271_0_hashCode_InvokeMethod(EOS(STATIC_25271), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25277_0_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(o40947sub), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: i14308 > 1 && i13197 >= 1 && i13294 > 1 && i14308 <= i13294
f25271_0_hashCode_InvokeMethod(EOS(STATIC_25271), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: i14308 > 1 && i13197 >= 1 && i13294 > 1 && i14308 <= i13294
f25277_0_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(o40947sub), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f27113_0_hashCode_Load(EOS(STATIC_27113), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(o40947sub), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) :|: TRUE
f25308_0_hashCode_Return(EOS(STATIC_25308), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25310_0_hashCode_Return(EOS(STATIC_25310), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25310_0_hashCode_Return(EOS(STATIC_25310), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41609sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25312_0_hashCode_Return(EOS(STATIC_25312), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41609sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25312_0_hashCode_Return(EOS(STATIC_25312), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41637sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25315_0_hashCode_Return(EOS(STATIC_25315), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41637sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25315_0_hashCode_Return(EOS(STATIC_25315), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41689sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25318_0_hashCode_Return(EOS(STATIC_25318), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41689sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25318_0_hashCode_Return(EOS(STATIC_25318), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41739sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25322_0_hashCode_Return(EOS(STATIC_25322), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41739sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25322_0_hashCode_Return(EOS(STATIC_25322), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41798sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25326_0_hashCode_Return(EOS(STATIC_25326), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41798sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25326_0_hashCode_Return(EOS(STATIC_25326), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41857sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25333_0_hashCode_IntArithmetic(EOS(STATIC_25333), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41857sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25333_0_hashCode_IntArithmetic(EOS(STATIC_25333), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41857sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25341_0_hashCode_Store(EOS(STATIC_25341), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41857sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25341_0_hashCode_Store(EOS(STATIC_25341), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41857sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25348_0_hashCode_JMP(EOS(STATIC_25348), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41857sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25348_0_hashCode_JMP(EOS(STATIC_25348), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41857sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25352_0_hashCode_Load(EOS(STATIC_25352), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41857sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25352_0_hashCode_Load(EOS(STATIC_25352), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41857sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f24867_0_hashCode_Load(EOS(STATIC_24867), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o41857sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25309_0_hashCode_Return(EOS(STATIC_25309), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25310_0_hashCode_Return(EOS(STATIC_25310), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25311_0_hashCode_Return(EOS(STATIC_25311), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25312_0_hashCode_Return(EOS(STATIC_25312), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25313_0_hashCode_Return(EOS(STATIC_25313), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25312_0_hashCode_Return(EOS(STATIC_25312), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25314_0_hashCode_Return(EOS(STATIC_25314), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25315_0_hashCode_Return(EOS(STATIC_25315), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25316_0_hashCode_Return(EOS(STATIC_25316), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25315_0_hashCode_Return(EOS(STATIC_25315), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25317_0_hashCode_Return(EOS(STATIC_25317), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25318_0_hashCode_Return(EOS(STATIC_25318), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25319_0_hashCode_Return(EOS(STATIC_25319), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25318_0_hashCode_Return(EOS(STATIC_25318), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25320_0_hashCode_Return(EOS(STATIC_25320), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25318_0_hashCode_Return(EOS(STATIC_25318), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25321_0_hashCode_Return(EOS(STATIC_25321), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25322_0_hashCode_Return(EOS(STATIC_25322), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25323_0_hashCode_Return(EOS(STATIC_25323), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25322_0_hashCode_Return(EOS(STATIC_25322), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25324_0_hashCode_Return(EOS(STATIC_25324), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25322_0_hashCode_Return(EOS(STATIC_25322), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25325_0_hashCode_Return(EOS(STATIC_25325), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25326_0_hashCode_Return(EOS(STATIC_25326), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25327_0_hashCode_Return(EOS(STATIC_25327), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25326_0_hashCode_Return(EOS(STATIC_25326), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25328_0_hashCode_Return(EOS(STATIC_25328), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25326_0_hashCode_Return(EOS(STATIC_25326), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25329_0_hashCode_Return(EOS(STATIC_25329), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) -> f25326_0_hashCode_Return(EOS(STATIC_25326), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE
f25220_0_nextEntry_NONNULL(EOS(STATIC_25220), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), NULL, i15003, i15004) -> f25226_0_nextEntry_JMP(EOS(STATIC_25226), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i15003, i15004) :|: TRUE
f25226_0_nextEntry_JMP(EOS(STATIC_25226), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i15003, i15004) -> f25232_0_nextEntry_Load(EOS(STATIC_25232), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i15003, i15004) :|: TRUE
f25232_0_nextEntry_Load(EOS(STATIC_25232), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i15003, i15004) -> f25077_0_nextEntry_Load(EOS(STATIC_25077), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294)), i15003, i15004) :|: TRUE
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39635sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39635sub))), i15003, i15004) -> f25124_0_hashCode_Return(EOS(STATIC_25124), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39635sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39656sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39656sub))), i15003, i15004) -> f25125_0_hashCode_Return(EOS(STATIC_25125), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39656sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39677sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39677sub))), i15003, i15004) -> f25127_0_hashCode_Return(EOS(STATIC_25127), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39677sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39701sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39701sub))), i15003, i15004) -> f25129_0_hashCode_Return(EOS(STATIC_25129), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39701sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39722sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39722sub))), i15003, i15004) -> f25130_0_hashCode_Return(EOS(STATIC_25130), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39722sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39746sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39746sub))), i15003, i15004) -> f25132_0_hashCode_Return(EOS(STATIC_25132), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39746sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39767sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39767sub))), i15003, i15004) -> f25133_0_hashCode_Return(EOS(STATIC_25133), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39767sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39791sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39791sub))), i15003, i15004) -> f25135_0_hashCode_Return(EOS(STATIC_25135), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39791sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39815sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39815sub))), i15003, i15004) -> f25136_0_hashCode_Return(EOS(STATIC_25136), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39815sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39839sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39839sub))), i15003, i15004) -> f25137_0_hashCode_Return(EOS(STATIC_25137), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39839sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39866sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39866sub))), i15003, i15004) -> f25139_0_hashCode_Return(EOS(STATIC_25139), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39866sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39893sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39893sub))), i15003, i15004) -> f25140_0_hashCode_Return(EOS(STATIC_25140), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39893sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39917sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39917sub))), i15003, i15004) -> f25141_0_hashCode_Return(EOS(STATIC_25141), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39917sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39944sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39944sub))), i15003, i15004) -> f25143_0_hashCode_Return(EOS(STATIC_25143), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39944sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39971sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39971sub))), i15003, i15004) -> f25144_0_hashCode_Return(EOS(STATIC_25144), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39971sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25097_1_hashCode_Load(EOS(STATIC_25097), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40001sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o40001sub))), i15003, i15004) -> f25145_0_hashCode_Return(EOS(STATIC_25145), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40001sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i13462)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25308_0_hashCode_Return(EOS(STATIC_25308), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25309_0_hashCode_Return(EOS(STATIC_25309), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25311_0_hashCode_Return(EOS(STATIC_25311), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25313_0_hashCode_Return(EOS(STATIC_25313), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25314_0_hashCode_Return(EOS(STATIC_25314), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25316_0_hashCode_Return(EOS(STATIC_25316), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25317_0_hashCode_Return(EOS(STATIC_25317), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25319_0_hashCode_Return(EOS(STATIC_25319), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25320_0_hashCode_Return(EOS(STATIC_25320), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25321_0_hashCode_Return(EOS(STATIC_25321), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25323_0_hashCode_Return(EOS(STATIC_25323), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25324_0_hashCode_Return(EOS(STATIC_25324), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25325_0_hashCode_Return(EOS(STATIC_25325), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25327_0_hashCode_Return(EOS(STATIC_25327), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25328_0_hashCode_Return(EOS(STATIC_25328), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
f25277_1_hashCode_Load(EOS(STATIC_25277), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003, i15004) -> f25329_0_hashCode_Return(EOS(STATIC_25329), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990, java.lang.Object(ARRAY(i13294))))), i12990, i14308)), i15003, i15004) :|: TRUE && (i15003_lC >= i15003 && i15004_lC >= i15004)
Combined rules. Obtained 6 IRulesP rules:
f25192_0_nextEntry_NONNULL(EOS(STATIC_25192), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i14308:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i14308:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294:0)), java.lang.Object(o40947sub:0), i15003:0, i15004:0) -> f24873_0_hashCode_InvokeMethod(EOS(STATIC_24873), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i14308:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i14308:0)), i15003:0, i15004:0) :|: i13197:0 > 0 && i14308:0 > 1 && i13294:0 > 1 && i15004_lC:0 >= i15004:0 && i14308:0 <= i13294:0 && i15003_lC:0 >= i15003:0
f24873_0_hashCode_InvokeMethod(EOS(STATIC_24873), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i13462:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i13462:0)), i15003:0, i15004:0) -> f24873_0_hashCode_InvokeMethod(EOS(STATIC_24873), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i13462:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i13462:0)), i15003:0, i15004:0) :|: i13197:0 > 0 && i13462:0 > 0 && i13294:0 > 0 && i15004_lC:0 >= i15004:0 && i13462:0 <= i13294:0 && i15003_lC:0 >= i15003:0
f25192_0_nextEntry_NONNULL(EOS(STATIC_25192), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i14308:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i14308:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294:0)), NULL, i15003:0, i15004:0) -> f25192_0_nextEntry_NONNULL(EOS(STATIC_25192), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), o40317:0, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i14308:0 + 1)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), o40317:0, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i14308:0 + 1)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294:0)), o40317:0, i15003:0, i15004:0) :|: i13294:0 > -1 && i14308:0 < i13294:0 && i14308:0 > 0
f24873_0_hashCode_InvokeMethod(EOS(STATIC_24873), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i13462:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i13462:0)), i15003:0, i15004:0) -> f25192_0_nextEntry_NONNULL(EOS(STATIC_25192), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), o40317:0, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i13462:0 + 1)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), o40317:0, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i13462:0 + 1)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294:0)), o40317:0, i15003:0, i15004:0) :|: i13294:0 > -1 && i13462:0 < i13294:0 && i13462:0 > 0
Removed following non-SCC rules:
f24873_0_hashCode_InvokeMethod(EOS(STATIC_24873), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i13462:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i13462:0)), i15003:0, i15004:0) -> f26911_0_hashCode_Load(EOS(STATIC_26911), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub:0))), java.lang.Object(ARRAY(i13294:0)), java.lang.Object(o39533sub:0), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o39533sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i13462:0)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, java.lang.Object(o39533sub:0))), i15003:0, i15004:0) :|: i13197:0 > 0 && i13462:0 > 0 && i13462:0 <= i13294:0 && i13294:0 > 0
f25192_0_nextEntry_NONNULL(EOS(STATIC_25192), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i14308:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i14308:0)), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(ARRAY(i13294:0)), java.lang.Object(o40947sub:0), i15003:0, i15004:0) -> f27113_0_hashCode_Load(EOS(STATIC_27113), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), java.lang.Object(o40947sub:0), java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), i12990:0, i14308:0)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC, i12990:0, java.lang.Object(ARRAY(i13294:0))))), java.lang.Object(javaUtilEx.HashMap$Entry(EOC, NULL)), i15003:0, i15004:0) :|: i13197:0 > 0 && i14308:0 > 1 && i14308:0 <= i13294:0 && i13294:0 > 1
Filtered constant ground arguments:
   f25192_0_nextEntry_NONNULL(x1, x2, x3, x4, x5, x6, x7, x8) -> f25192_0_nextEntry_NONNULL(x2, x3, x5, x6, x7, x8)
   f24873_0_hashCode_InvokeMethod(x1, x2, x3, x4, x5) -> f24873_0_hashCode_InvokeMethod(x2, x3, x4, x5)
   javaUtilEx.HashMap$HashIterator(x1, x2, x3, x4, x5) -> javaUtilEx.HashMap$HashIterator(x2, x3, x4, x5)
   javaUtilEx.HashMap$Entry(x1, x2) -> javaUtilEx.HashMap$Entry(x2)
   javaUtilEx.HashMap$EntryIterator(x1) -> javaUtilEx.HashMap$EntryIterator
   javaUtilEx.HashMap(x1, x2, x3) -> javaUtilEx.HashMap(x2, x3)
Filtered duplicate arguments:
   f25192_0_nextEntry_NONNULL(x1, x2, x3, x4, x5, x6) -> f25192_0_nextEntry_NONNULL(x2, x3, x4, x5, x6)
   f24873_0_hashCode_InvokeMethod(x1, x2, x3, x4) -> f24873_0_hashCode_InvokeMethod(x2, x3, x4)
Filtered unneeded arguments:
   javaUtilEx.HashMap$HashIterator(x1, x2, x3, x4) -> javaUtilEx.HashMap$HashIterator(x1, x2, x4)
   javaUtilEx.HashMap(x1, x2) -> javaUtilEx.HashMap(x2)
Finished conversion. Obtained 4 rules.P rules:
f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0)), java.lang.Object(ARRAY(i13294:0)), java.lang.Object(o40947sub:0), i15003:0, i15004:0, i13294:0, i14308:0, i13294:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0)), i15003:0, i15004:0, i13294:0, i14308:0) :|: i14308:0 > 1 && i13197:0 > 0 && i13294:0 > 1 && i15004_lC:0 >= i15004:0 && i15003_lC:0 >= i15003:0 && i14308:0 <= i13294:0
f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(o39533sub:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i13462:0)), i15003:0, i15004:0, i13294:0, i13462:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o39533sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i13462:0)), i15003:0, i15004:0, i13294:0, i13462:0) :|: i13462:0 > 0 && i13197:0 > 0 && i13294:0 > 0 && i15004_lC:0 >= i15004:0 && i15003_lC:0 >= i15003:0 && i13462:0 <= i13294:0
f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0)), java.lang.Object(ARRAY(i13294:0)), NULL, i15003:0, i15004:0, i13294:0, i14308:0, i13294:0) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(o40317:0, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0 + 1)), java.lang.Object(ARRAY(i13294:0)), o40317:0, i15003:0, i15004:0, i13294:0, i14308:0 + 1, i13294:0) :|: i14308:0 < i13294:0 && i14308:0 > 0 && i13294:0 > -1
f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(NULL)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i13462:0)), i15003:0, i15004:0, i13294:0, i13462:0) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(o40317:0, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i13462:0 + 1)), java.lang.Object(ARRAY(i13294:0)), o40317:0, i15003:0, i15004:0, i13294:0, i13462:0 + 1, i13294:0) :|: i13462:0 < i13294:0 && i13462:0 > 0 && i13294:0 > -1

----------------------------------------

(50)
Obligation:
Rules:
f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0)), java.lang.Object(ARRAY(i13294:0)), java.lang.Object(o40947sub:0), i15003:0, i15004:0, i13294:0, i14308:0, i13294:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0)), i15003:0, i15004:0, i13294:0, i14308:0) :|: i14308:0 > 1 && i13197:0 > 0 && i13294:0 > 1 && i15004_lC:0 >= i15004:0 && i15003_lC:0 >= i15003:0 && i14308:0 <= i13294:0
f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1))))), x2)), x3, x4, x1, x2) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1))))), x2)), x3, x4, x1, x2) :|: x2 > 0 && x5 > 0 && x1 > 0 && x6 >= x4 && x7 >= x3 && x2 <= x1
f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x8))))), x9)), java.lang.Object(ARRAY(x8)), NULL, x10, x11, x8, x9, x8) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(x12, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x8))))), x9 + 1)), java.lang.Object(ARRAY(x8)), x12, x10, x11, x8, x9 + 1, x8) :|: x9 < x8 && x9 > 0 && x8 > -1
f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(NULL)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x13))))), x14)), x15, x16, x13, x14) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(x17, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x13))))), x14 + 1)), java.lang.Object(ARRAY(x13)), x17, x15, x16, x13, x14 + 1, x13) :|: x14 < x13 && x14 > 0 && x13 > -1

----------------------------------------

(51) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(52)
Obligation:
Rules:
f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0)), java.lang.Object(ARRAY(i13294:0)), java.lang.Object(o40947sub:0), i15003:0, i15004:0, i13294:0, i14308:0, i13294:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0)), i15003:0, i15004:0, i13294:0, i14308:0) :|: i14308:0 > 1 && i13197:0 > 0 && i13294:0 > 1 && i15004_lC:0 >= i15004:0 && i15003_lC:0 >= i15003:0 && i14308:0 <= i13294:0
f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1))))), x2)), x3, x4, x1, x2) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1))))), x2)), x3, x4, x1, x2) :|: x2 > 0 && x5 > 0 && x1 > 0 && x6 >= x4 && x7 >= x3 && x2 <= x1
f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x8))))), x9)), java.lang.Object(ARRAY(x8)), NULL, x10, x11, x8, x9, x8) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(x12, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x8))))), arith)), java.lang.Object(ARRAY(x8)), x12, x10, x11, x8, arith, x8) :|: x9 < x8 && x9 > 0 && x8 > -1 && arith = x9 + 1 && arith = x9 + 1
f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(NULL)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x18))))), x19)), x20, x21, x18, x19) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(x22, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x18))))), x23)), java.lang.Object(ARRAY(x18)), x22, x20, x21, x18, x23, x18) :|: x19 < x18 && x19 > 0 && x18 > -1 && x23 = x19 + 1 && x23 = x19 + 1

----------------------------------------

(53) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0)), java.lang.Object(ARRAY(i13294:0)), java.lang.Object(o40947sub:0), i15003:0, i15004:0, i13294:0, i14308:0, i13294:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0)), i15003:0, i15004:0, i13294:0, i14308:0) :|: i14308:0 > 1 && i13197:0 > 0 && i13294:0 > 1 && i15004_lC:0 >= i15004:0 && i15003_lC:0 >= i15003:0 && i14308:0 <= i13294:0
(2) f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1))))), x2)), x3, x4, x1, x2) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1))))), x2)), x3, x4, x1, x2) :|: x2 > 0 && x5 > 0 && x1 > 0 && x6 >= x4 && x7 >= x3 && x2 <= x1
(3) f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x8))))), x9)), java.lang.Object(ARRAY(x8)), NULL, x10, x11, x8, x9, x8) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(x12, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x8))))), arith)), java.lang.Object(ARRAY(x8)), x12, x10, x11, x8, arith, x8) :|: x9 < x8 && x9 > 0 && x8 > -1 && arith = x9 + 1 && arith = x9 + 1
(4) f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(NULL)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x18))))), x19)), x20, x21, x18, x19) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(x22, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x18))))), x23)), java.lang.Object(ARRAY(x18)), x22, x20, x21, x18, x23, x18) :|: x19 < x18 && x19 > 0 && x18 > -1 && x23 = x19 + 1 && x23 = x19 + 1

Arcs:
(1) -> (2), (4)
(2) -> (2), (4)
(3) -> (1), (3)
(4) -> (1), (3)

This digraph is fully evaluated!
----------------------------------------

(54)
Obligation:

Termination digraph:
Nodes:
(1) f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0)), java.lang.Object(ARRAY(i13294:0)), java.lang.Object(o40947sub:0), i15003:0, i15004:0, i13294:0, i14308:0, i13294:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0))))), i14308:0)), i15003:0, i15004:0, i13294:0, i14308:0) :|: i14308:0 > 1 && i13197:0 > 0 && i13294:0 > 1 && i15004_lC:0 >= i15004:0 && i15003_lC:0 >= i15003:0 && i14308:0 <= i13294:0
(2) f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x8))))), x9)), java.lang.Object(ARRAY(x8)), NULL, x10, x11, x8, x9, x8) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(x12, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x8))))), arith)), java.lang.Object(ARRAY(x8)), x12, x10, x11, x8, arith, x8) :|: x9 < x8 && x9 > 0 && x8 > -1 && arith = x9 + 1 && arith = x9 + 1
(3) f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(NULL)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x18))))), x19)), x20, x21, x18, x19) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(x22, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x18))))), x23)), java.lang.Object(ARRAY(x18)), x22, x20, x21, x18, x23, x18) :|: x19 < x18 && x19 > 0 && x18 > -1 && x23 = x19 + 1 && x23 = x19 + 1
(4) f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1))))), x2)), x3, x4, x1, x2) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1))))), x2)), x3, x4, x1, x2) :|: x2 > 0 && x5 > 0 && x1 > 0 && x6 >= x4 && x7 >= x3 && x2 <= x1

Arcs:
(1) -> (3), (4)
(2) -> (1), (2)
(3) -> (1), (2)
(4) -> (3), (4)

This digraph is fully evaluated!

----------------------------------------

(55) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(56)
Obligation:
Rules:
f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(NULL)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x18:0))))), x19:0)), x20:0, x21:0, x18:0, x19:0) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(x22:0, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x18:0))))), x19:0 + 1)), java.lang.Object(ARRAY(x18:0)), x22:0, x20:0, x21:0, x18:0, x19:0 + 1, x18:0) :|: x19:0 < x18:0 && x19:0 > 0 && x18:0 > -1
f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0:0))))), i14308:0:0)), java.lang.Object(ARRAY(i13294:0:0)), java.lang.Object(o40947sub:0:0), i15003:0:0, i15004:0:0, i13294:0:0, i14308:0:0, i13294:0:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(o40947sub:0:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(i13294:0:0))))), i14308:0:0)), i15003:0:0, i15004:0:0, i13294:0:0, i14308:0:0) :|: i15003_lC:0:0 >= i15003:0:0 && i14308:0:0 <= i13294:0:0 && i15004_lC:0:0 >= i15004:0:0 && i13294:0:0 > 1 && i13197:0:0 > 0 && i14308:0:0 > 1
f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(NULL, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x8:0))))), x9:0)), java.lang.Object(ARRAY(x8:0)), NULL, x10:0, x11:0, x8:0, x9:0, x8:0) -> f25192_0_nextEntry_NONNULL(java.lang.Object(javaUtilEx.HashMap$HashIterator(x12:0, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x8:0))))), x9:0 + 1)), java.lang.Object(ARRAY(x8:0)), x12:0, x10:0, x11:0, x8:0, x9:0 + 1, x8:0) :|: x9:0 < x8:0 && x9:0 > 0 && x8:0 > -1
f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1:0))))), x2:0)), x3:0, x4:0, x1:0, x2:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1:0))))), x2:0)), x3:0, x4:0, x1:0, x2:0) :|: x7:0 >= x3:0 && x2:0 <= x1:0 && x6:0 >= x4:0 && x1:0 > 0 && x5:0 > 0 && x2:0 > 0

----------------------------------------

(57) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f24873_0_hashCode_InvokeMethod(VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER)
java.lang.Object(VARIABLE)
javaUtilEx.HashMap$HashIterator(VARIABLE, VARIABLE, INTEGER)
javaUtilEx.HashMap$Entry(VARIABLE)
NULL()
javaUtilEx.AbstractMap(VARIABLE)
javaUtilEx.HashMap(VARIABLE)
ARRAY(INTEGER)
f25192_0_nextEntry_NONNULL(VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.The following proof was generated: 
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given IntTRS could not be shown:



- IntTRS
  - PolynomialOrderProcessor

Rules:
f24873_0_hashCode_InvokeMethod(c, x20:0, x21:0, x18:0, x19:0) -> f25192_0_nextEntry_NONNULL(c1, c2, x22:0, x20:0, x21:0, x18:0, c3, x18:0) :|: c3 = x19:0 + 1 && (c2 = 0 && (c1 = 0 && c = 0)) && (x19:0 < x18:0 && x19:0 > 0 && x18:0 > -1)
f25192_0_nextEntry_NONNULL(c4, c5, c6, i15003:0:0, i15004:0:0, i13294:0:0, i14308:0:0, i13294:0:0) -> f24873_0_hashCode_InvokeMethod(c7, i15003:0:0, i15004:0:0, i13294:0:0, i14308:0:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (i15003_lC:0:0 >= i15003:0:0 && i14308:0:0 <= i13294:0:0 && i15004_lC:0:0 >= i15004:0:0 && i13294:0:0 > 1 && i13197:0:0 > 0 && i14308:0:0 > 1)
f25192_0_nextEntry_NONNULL(c8, c9, c10, x10:0, x11:0, x8:0, x9:0, x8:0) -> f25192_0_nextEntry_NONNULL(c11, c12, x12:0, x10:0, x11:0, x8:0, c13, x8:0) :|: c13 = x9:0 + 1 && (c12 = 0 && (c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0)))) && (x9:0 < x8:0 && x9:0 > 0 && x8:0 > -1)
f24873_0_hashCode_InvokeMethod(c14, x3:0, x4:0, x1:0, x2:0) -> f24873_0_hashCode_InvokeMethod(c15, x3:0, x4:0, x1:0, x2:0) :|: c15 = 0 && c14 = 0 && (x7:0 >= x3:0 && x2:0 <= x1:0 && x6:0 >= x4:0 && x1:0 > 0 && x5:0 > 0 && x2:0 > 0)

Found the following polynomial interpretation:
[f24873_0_hashCode_InvokeMethod(x, x1, x2, x3, x4)] = c*x + x3 - x4
[f25192_0_nextEntry_NONNULL(x5, x6, x7, x8, x9, x10, x11, x12)] = 1 - x11 + x12 + c5*x5 + c6*x6

The following rules are decreasing:
f25192_0_nextEntry_NONNULL(c4, c5, c6, i15003:0:0, i15004:0:0, i13294:0:0, i14308:0:0, i13294:0:0) -> f24873_0_hashCode_InvokeMethod(c7, i15003:0:0, i15004:0:0, i13294:0:0, i14308:0:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (i15003_lC:0:0 >= i15003:0:0 && i14308:0:0 <= i13294:0:0 && i15004_lC:0:0 >= i15004:0:0 && i13294:0:0 > 1 && i13197:0:0 > 0 && i14308:0:0 > 1)
f25192_0_nextEntry_NONNULL(c8, c9, c10, x10:0, x11:0, x8:0, x9:0, x8:0) -> f25192_0_nextEntry_NONNULL(c11, c12, x12:0, x10:0, x11:0, x8:0, c13, x8:0) :|: c13 = x9:0 + 1 && (c12 = 0 && (c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0)))) && (x9:0 < x8:0 && x9:0 > 0 && x8:0 > -1)
The following rules are bounded:
f24873_0_hashCode_InvokeMethod(c, x20:0, x21:0, x18:0, x19:0) -> f25192_0_nextEntry_NONNULL(c1, c2, x22:0, x20:0, x21:0, x18:0, c3, x18:0) :|: c3 = x19:0 + 1 && (c2 = 0 && (c1 = 0 && c = 0)) && (x19:0 < x18:0 && x19:0 > 0 && x18:0 > -1)
f25192_0_nextEntry_NONNULL(c4, c5, c6, i15003:0:0, i15004:0:0, i13294:0:0, i14308:0:0, i13294:0:0) -> f24873_0_hashCode_InvokeMethod(c7, i15003:0:0, i15004:0:0, i13294:0:0, i14308:0:0) :|: c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0)) && (i15003_lC:0:0 >= i15003:0:0 && i14308:0:0 <= i13294:0:0 && i15004_lC:0:0 >= i15004:0:0 && i13294:0:0 > 1 && i13197:0:0 > 0 && i14308:0:0 > 1)
f25192_0_nextEntry_NONNULL(c8, c9, c10, x10:0, x11:0, x8:0, x9:0, x8:0) -> f25192_0_nextEntry_NONNULL(c11, c12, x12:0, x10:0, x11:0, x8:0, c13, x8:0) :|: c13 = x9:0 + 1 && (c12 = 0 && (c11 = 0 && (c10 = 0 && (c9 = 0 && c8 = 0)))) && (x9:0 < x8:0 && x9:0 > 0 && x8:0 > -1)
f24873_0_hashCode_InvokeMethod(c14, x3:0, x4:0, x1:0, x2:0) -> f24873_0_hashCode_InvokeMethod(c15, x3:0, x4:0, x1:0, x2:0) :|: c15 = 0 && c14 = 0 && (x7:0 >= x3:0 && x2:0 <= x1:0 && x6:0 >= x4:0 && x1:0 > 0 && x5:0 > 0 && x2:0 > 0)


- IntTRS
  - PolynomialOrderProcessor
    - IntTRS
      - RankingReductionPairProof

Rules:
f24873_0_hashCode_InvokeMethod(c, x20:0, x21:0, x18:0, x19:0) -> f25192_0_nextEntry_NONNULL(c1, c2, x22:0, x20:0, x21:0, x18:0, c3, x18:0) :|: c3 = x19:0 + 1 && (c2 = 0 && (c1 = 0 && c = 0)) && (x19:0 < x18:0 && x19:0 > 0 && x18:0 > -1)
f24873_0_hashCode_InvokeMethod(c14, x3:0, x4:0, x1:0, x2:0) -> f24873_0_hashCode_InvokeMethod(c15, x3:0, x4:0, x1:0, x2:0) :|: c15 = 0 && c14 = 0 && (x7:0 >= x3:0 && x2:0 <= x1:0 && x6:0 >= x4:0 && x1:0 > 0 && x5:0 > 0 && x2:0 > 0)

Interpretation:
[ f24873_0_hashCode_InvokeMethod ] = 0
[ f25192_0_nextEntry_NONNULL ] = -1/2*f25192_0_nextEntry_NONNULL_7

The following rules are decreasing:
f24873_0_hashCode_InvokeMethod(c, x20:0, x21:0, x18:0, x19:0) -> f25192_0_nextEntry_NONNULL(c1, c2, x22:0, x20:0, x21:0, x18:0, c3, x18:0) :|: c3 = x19:0 + 1 && (c2 = 0 && (c1 = 0 && c = 0)) && (x19:0 < x18:0 && x19:0 > 0 && x18:0 > -1)

The following rules are bounded:
f24873_0_hashCode_InvokeMethod(c, x20:0, x21:0, x18:0, x19:0) -> f25192_0_nextEntry_NONNULL(c1, c2, x22:0, x20:0, x21:0, x18:0, c3, x18:0) :|: c3 = x19:0 + 1 && (c2 = 0 && (c1 = 0 && c = 0)) && (x19:0 < x18:0 && x19:0 > 0 && x18:0 > -1)
f24873_0_hashCode_InvokeMethod(c14, x3:0, x4:0, x1:0, x2:0) -> f24873_0_hashCode_InvokeMethod(c15, x3:0, x4:0, x1:0, x2:0) :|: c15 = 0 && c14 = 0 && (x7:0 >= x3:0 && x2:0 <= x1:0 && x6:0 >= x4:0 && x1:0 > 0 && x5:0 > 0 && x2:0 > 0)



- IntTRS
  - PolynomialOrderProcessor
    - IntTRS
      - RankingReductionPairProof
        - IntTRS

Rules:
f24873_0_hashCode_InvokeMethod(c14, x3:0, x4:0, x1:0, x2:0) -> f24873_0_hashCode_InvokeMethod(c15, x3:0, x4:0, x1:0, x2:0) :|: c15 = 0 && c14 = 0 && (x7:0 >= x3:0 && x2:0 <= x1:0 && x6:0 >= x4:0 && x1:0 > 0 && x5:0 > 0 && x2:0 > 0)



----------------------------------------

(58)
Obligation:
Rules:
f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1:0))))), x2:0)), x3:0, x4:0, x1:0, x2:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1:0))))), x2:0)), x3:0, x4:0, x1:0, x2:0) :|: x7:0 >= x3:0 && x2:0 <= x1:0 && x6:0 >= x4:0 && x1:0 > 0 && x5:0 > 0 && x2:0 > 0

----------------------------------------

(59) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1:0))))), x2:0)), x3:0, x4:0, x1:0, x2:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1:0))))), x2:0)), x3:0, x4:0, x1:0, x2:0) :|: x7:0 >= x3:0 && x2:0 <= x1:0 && x6:0 >= x4:0 && x1:0 > 0 && x5:0 > 0 && x2:0 > 0

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(60)
Obligation:

Termination digraph:
Nodes:
(1) f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1:0))))), x2:0)), x3:0, x4:0, x1:0, x2:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1:0))))), x2:0)), x3:0, x4:0, x1:0, x2:0) :|: x7:0 >= x3:0 && x2:0 <= x1:0 && x6:0 >= x4:0 && x1:0 > 0 && x5:0 > 0 && x2:0 > 0

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(61) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(62)
Obligation:
Rules:
f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x:0:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1:0:0))))), x2:0:0)), x3:0:0, x4:0:0, x1:0:0, x2:0:0) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x:0:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY(x1:0:0))))), x2:0:0)), x3:0:0, x4:0:0, x1:0:0, x2:0:0) :|: x5:0:0 > 0 && x2:0:0 > 0 && x1:0:0 > 0 && x6:0:0 >= x4:0:0 && x2:0:0 <= x1:0:0 && x7:0:0 >= x3:0:0

----------------------------------------

(63) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f24873_0_hashCode_InvokeMethod(VARIABLE, INTEGER, INTEGER, INTEGER, INTEGER)
java.lang.Object(VARIABLE)
javaUtilEx.HashMap$HashIterator(VARIABLE, VARIABLE, INTEGER)
javaUtilEx.HashMap$Entry(VARIABLE)
javaUtilEx.AbstractMap(VARIABLE)
javaUtilEx.HashMap(VARIABLE)
ARRAY(INTEGER)
Removed predefined arithmetic.
----------------------------------------

(64)
Obligation:
Rules:
f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x:0:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY))))))) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x:0:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY)))))))

----------------------------------------

(65) IRSwTToQDPProof (SOUND)
Removed the integers and created a QDP-Problem.
----------------------------------------

(66)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x:0:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY))))))) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x:0:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY)))))))

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(67) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

The following dependency pairs can be deleted:

   f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(javaUtilEx.HashMap$Entry(java.lang.Object(x:0:0))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY))))))) -> f24873_0_hashCode_InvokeMethod(java.lang.Object(javaUtilEx.HashMap$HashIterator(java.lang.Object(x:0:0), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(java.lang.Object(ARRAY)))))))
No rules are removed from R.

Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(ARRAY) = 0
   POL(f24873_0_hashCode_InvokeMethod(x_1)) = 2*x_1
   POL(java.lang.Object(x_1)) = x_1
   POL(javaUtilEx.AbstractMap(x_1)) = x_1
   POL(javaUtilEx.HashMap(x_1)) = x_1
   POL(javaUtilEx.HashMap$Entry(x_1)) = 2*x_1
   POL(javaUtilEx.HashMap$HashIterator(x_1, x_2)) = x_1 + x_2


----------------------------------------

(68)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(69) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(70)
YES

----------------------------------------

(71)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.AbstractMap.hashCode()I
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.HashMap$HashIterator: [index]
*Marker field analysis yielded the following relations that could be markers:
*javaUtilEx.HashMap$HashIterator.index > i13295 (Introduced counter i15005)
----------------------------------------

(72) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 23 IRulesP rules:
f24417_0__init__FieldAccess(EOS(STATIC_24417), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i15005) -> f24422_0__init__Load(EOS(STATIC_24422), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, i15005) :|: TRUE
f24422_0__init__Load(EOS(STATIC_24422), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, i15005) -> f24424_0__init__ArrayLength(EOS(STATIC_24424), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, java.lang.Object(ARRAY(i13294)), i15005) :|: TRUE
f24424_0__init__ArrayLength(EOS(STATIC_24424), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, java.lang.Object(ARRAY(i13294)), i15005) -> f24427_0__init__GE(EOS(STATIC_24427), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, i13294, i15005) :|: i13294 >= 0
f24427_0__init__GE(EOS(STATIC_24427), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, i13294, i15005) -> f24442_0__init__GE(EOS(STATIC_24442), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, i13294, i15005) :|: i13295 < i13294
f24442_0__init__GE(EOS(STATIC_24442), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, i13294, i15005) -> f24448_0__init__Load(EOS(STATIC_24448), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i15005) :|: i13295 < i13294
f24448_0__init__Load(EOS(STATIC_24448), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i15005) -> f24456_0__init__Load(EOS(STATIC_24456), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i15005) :|: TRUE
f24456_0__init__Load(EOS(STATIC_24456), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i15005) -> f24464_0__init__Load(EOS(STATIC_24464), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i15005) :|: TRUE
f24464_0__init__Load(EOS(STATIC_24464), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i15005) -> f24471_0__init__Duplicate(EOS(STATIC_24471), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i15005) :|: TRUE
f24471_0__init__Duplicate(EOS(STATIC_24471), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i15005) -> f24477_0__init__FieldAccess(EOS(STATIC_24477), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i15005) :|: TRUE
f24477_0__init__FieldAccess(EOS(STATIC_24477), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i15005) -> f24482_0__init__Duplicate(EOS(STATIC_24482), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i13295, i15005) :|: TRUE
f24482_0__init__Duplicate(EOS(STATIC_24482), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i13295, i15005) -> f24486_0__init__ConstantStackPush(EOS(STATIC_24486), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i13295, i15005) :|: TRUE
f24486_0__init__ConstantStackPush(EOS(STATIC_24486), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i13295, i15005) -> f24491_0__init__IntArithmetic(EOS(STATIC_24491), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i13295, 1, i15005) :|: TRUE
f24491_0__init__IntArithmetic(EOS(STATIC_24491), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i13295, matching1, i15005) -> f24495_0__init__FieldAccess(EOS(STATIC_24495), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i13295 + 1, i15005) :|: i13295 >= 0 && matching1 = 1
f24495_0__init__FieldAccess(EOS(STATIC_24495), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i13295, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i13462, i15005) -> f24498_0__init__ArrayAccess(EOS(STATIC_24498), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), i13295, i15005 + 1) :|: i15005 >= 0
f24498_0__init__ArrayAccess(EOS(STATIC_24498), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), i13295, i15005) -> f24503_0__init__ArrayAccess(EOS(STATIC_24503), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), i13295, i15005) :|: TRUE
f24503_0__init__ArrayAccess(EOS(STATIC_24503), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), i13295, i15005) -> f24509_0__init__Duplicate(EOS(STATIC_24509), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), o38398, i15005) :|: i13295 < i13294
f24509_0__init__Duplicate(EOS(STATIC_24509), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), o38398, i15005) -> f24514_0__init__FieldAccess(EOS(STATIC_24514), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), o38398, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), o38398, i15005) :|: TRUE
f24514_0__init__FieldAccess(EOS(STATIC_24514), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), o38398, java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), o38398, i15005) -> f24519_0__init__NONNULL(EOS(STATIC_24519), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), o38398, i15005) :|: TRUE
f24519_0__init__NONNULL(EOS(STATIC_24519), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), NULL, i15005) -> f24526_0__init__NONNULL(EOS(STATIC_24526), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), NULL, i15005) :|: TRUE
f24526_0__init__NONNULL(EOS(STATIC_24526), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), NULL, i15005) -> f24533_0__init__JMP(EOS(STATIC_24533), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), i15005) :|: TRUE
f24533_0__init__JMP(EOS(STATIC_24533), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), i15005) -> f24537_0__init__Load(EOS(STATIC_24537), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), i15005) :|: TRUE
f24537_0__init__Load(EOS(STATIC_24537), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), i15005) -> f24411_0__init__Load(EOS(STATIC_24411), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13462)), java.lang.Object(ARRAY(i13294)), i15005) :|: TRUE
f24411_0__init__Load(EOS(STATIC_24411), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), i15005) -> f24417_0__init__FieldAccess(EOS(STATIC_24417), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), java.lang.Object(ARRAY(i13294)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295)), i15005) :|: TRUE
Combined rules. Obtained 1 IRulesP rules:
f24417_0__init__FieldAccess(EOS(STATIC_24417), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295:0)), java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295:0)), i15005:0) -> f24417_0__init__FieldAccess(EOS(STATIC_24417), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295:0 + 1)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295:0 + 1)), java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(javaUtilEx.HashMap$EntryIterator(EOC), i13295:0 + 1)), i15005:0 + 1) :|: i13294:0 > -1 && i13295:0 < i13294:0 && i13295:0 > -1 && i15005:0 > -1
Filtered constant ground arguments:
   f24417_0__init__FieldAccess(x1, x2, x3, x4, x5, x6) -> f24417_0__init__FieldAccess(x2, x3, x4, x5, x6)
   EOS(x1) -> EOS
   javaUtilEx.HashMap$HashIterator(x1, x2) -> javaUtilEx.HashMap$HashIterator(x2)
   javaUtilEx.HashMap$EntryIterator(x1) -> javaUtilEx.HashMap$EntryIterator
Filtered duplicate arguments:
   f24417_0__init__FieldAccess(x1, x2, x3, x4, x5) -> f24417_0__init__FieldAccess(x3, x4, x5)
Finished conversion. Obtained 1 rules.P rules:
f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(i13295:0)), i15005:0, i13294:0, i13295:0) -> f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(i13295:0 + 1)), i15005:0 + 1, i13294:0, i13295:0 + 1) :|: i13295:0 < i13294:0 && i13294:0 > -1 && i15005:0 > -1 && i13295:0 > -1

----------------------------------------

(73)
Obligation:
Rules:
f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(i13295:0)), i15005:0, i13294:0, i13295:0) -> f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(i13295:0 + 1)), i15005:0 + 1, i13294:0, i13295:0 + 1) :|: i13295:0 < i13294:0 && i13294:0 > -1 && i15005:0 > -1 && i13295:0 > -1

----------------------------------------

(74) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(75)
Obligation:
Rules:
f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(i13295:0)), i15005:0, i13294:0, i13295:0) -> f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(arith1)), arith, i13294:0, arith1) :|: i13295:0 < i13294:0 && i13294:0 > -1 && i15005:0 > -1 && i13295:0 > -1 && arith = i15005:0 + 1 && arith1 = i13295:0 + 1 && arith1 = i13295:0 + 1

----------------------------------------

(76) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(i13295:0)), i15005:0, i13294:0, i13295:0) -> f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(arith1)), arith, i13294:0, arith1) :|: i13295:0 < i13294:0 && i13294:0 > -1 && i15005:0 > -1 && i13295:0 > -1 && arith = i15005:0 + 1 && arith1 = i13295:0 + 1 && arith1 = i13295:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(77)
Obligation:

Termination digraph:
Nodes:
(1) f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(i13295:0)), i15005:0, i13294:0, i13295:0) -> f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(arith1)), arith, i13294:0, arith1) :|: i13295:0 < i13294:0 && i13294:0 > -1 && i15005:0 > -1 && i13295:0 > -1 && arith = i15005:0 + 1 && arith1 = i13295:0 + 1 && arith1 = i13295:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(78) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(79)
Obligation:
Rules:
f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(i13295:0:0)), i15005:0:0, i13294:0:0, i13295:0:0) -> f24417_0__init__FieldAccess(java.lang.Object(ARRAY(i13294:0:0)), java.lang.Object(javaUtilEx.HashMap$HashIterator(i13295:0:0 + 1)), i15005:0:0 + 1, i13294:0:0, i13295:0:0 + 1) :|: i15005:0:0 > -1 && i13295:0:0 > -1 && i13294:0:0 > -1 && i13295:0:0 < i13294:0:0

----------------------------------------

(80) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f24417_0__init__FieldAccess(VARIABLE, VARIABLE, INTEGER, INTEGER, INTEGER)
java.lang.Object(VARIABLE)
ARRAY(INTEGER)
javaUtilEx.HashMap$HashIterator(INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(81)
Obligation:
Rules:
f24417_0__init__FieldAccess(c, c1, i15005:0:0, i13294:0:0, i13295:0:0) -> f24417_0__init__FieldAccess(c2, c3, c4, i13294:0:0, c5) :|: c5 = i13295:0:0 + 1 && (c4 = i15005:0:0 + 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i15005:0:0 > -1 && i13295:0:0 > -1 && i13294:0:0 > -1 && i13295:0:0 < i13294:0:0)

----------------------------------------

(82) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f24417_0__init__FieldAccess(x, x1, x2, x3, x4)] = c*x + c1*x1 + x3 - x4

The following rules are decreasing:
f24417_0__init__FieldAccess(c, c1, i15005:0:0, i13294:0:0, i13295:0:0) -> f24417_0__init__FieldAccess(c2, c3, c4, i13294:0:0, c5) :|: c5 = i13295:0:0 + 1 && (c4 = i15005:0:0 + 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i15005:0:0 > -1 && i13295:0:0 > -1 && i13294:0:0 > -1 && i13295:0:0 < i13294:0:0)
The following rules are bounded:
f24417_0__init__FieldAccess(c, c1, i15005:0:0, i13294:0:0, i13295:0:0) -> f24417_0__init__FieldAccess(c2, c3, c4, i13294:0:0, c5) :|: c5 = i13295:0:0 + 1 && (c4 = i15005:0:0 + 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (i15005:0:0 > -1 && i13295:0:0 > -1 && i13294:0:0 > -1 && i13295:0:0 < i13294:0:0)

----------------------------------------

(83)
YES

----------------------------------------

(84)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juHashMapCreateHashCode.createMap(I)LjavaUtilEx/HashMap;
SCC calls the following helper methods: javaUtilEx.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;, javaUtilEx.Content.hashCode()I, javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*java.lang.String: [count]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(85) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 82 IRulesP rules:
f23715_0_createMap_LE(EOS(STATIC_23715(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i12947) -> f23719_0_createMap_LE(EOS(STATIC_23719(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i12947) :|: TRUE
f23719_0_createMap_LE(EOS(STATIC_23719(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i12947) -> f23724_0_createMap_New(EOS(STATIC_23724(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) :|: i12947 > 0
f23724_0_createMap_New(EOS(STATIC_23724(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) -> f23729_0_createMap_Duplicate(EOS(STATIC_23729(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f23729_0_createMap_Duplicate(EOS(STATIC_23729(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC))) -> f23733_0_createMap_InvokeMethod(EOS(STATIC_23733(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f23733_0_createMap_InvokeMethod(EOS(STATIC_23733(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f23737_0_random_FieldAccess(EOS(STATIC_23737(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f23737_0_random_FieldAccess(EOS(STATIC_23737(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f23747_0_random_FieldAccess(EOS(STATIC_23747(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37544sub)) :|: TRUE
f23747_0_random_FieldAccess(EOS(STATIC_23747(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37544sub)) -> f23752_0_random_ArrayAccess(EOS(STATIC_23752(java.lang.Object(o37544sub), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37544sub), i12926) :|: TRUE
f23752_0_random_ArrayAccess(EOS(STATIC_23752(java.lang.Object(ARRAY(i12979)), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979)), i12926) -> f23757_0_random_ArrayAccess(EOS(STATIC_23757(java.lang.Object(ARRAY(i12979)), i12926)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979)), i12926) :|: i12979 >= 0
f23757_0_random_ArrayAccess(EOS(STATIC_23757(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979)), i12981) -> f23763_0_random_ArrayAccess(EOS(STATIC_23763(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979)), i12981) :|: TRUE
f23763_0_random_ArrayAccess(EOS(STATIC_23763(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979)), i12981) -> f23770_0_random_ArrayAccess(EOS(STATIC_23770(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979)), i12981) :|: TRUE
f23770_0_random_ArrayAccess(EOS(STATIC_23770(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979)), i12981) -> f23777_0_random_Store(EOS(STATIC_23777(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579) :|: i12981 < i12979
f23777_0_random_Store(EOS(STATIC_23777(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579) -> f23783_0_random_FieldAccess(EOS(STATIC_23783(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579) :|: TRUE
f23783_0_random_FieldAccess(EOS(STATIC_23783(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579) -> f23789_0_random_ConstantStackPush(EOS(STATIC_23789(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579, i12981) :|: TRUE
f23789_0_random_ConstantStackPush(EOS(STATIC_23789(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579, i12981) -> f23796_0_random_IntArithmetic(EOS(STATIC_23796(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579, i12981, 1) :|: TRUE
f23796_0_random_IntArithmetic(EOS(STATIC_23796(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579, i12981, matching1) -> f23802_0_random_FieldAccess(EOS(STATIC_23802(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579, i12981 + 1) :|: i12981 >= 0 && matching1 = 1
f23802_0_random_FieldAccess(EOS(STATIC_23802(java.lang.Object(ARRAY(i12979)), i12981)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579, i12994) -> f23809_0_random_Load(EOS(STATIC_23809(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579) :|: TRUE
f23809_0_random_Load(EOS(STATIC_23809(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579) -> f23816_0_random_InvokeMethod(EOS(STATIC_23816(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37579) :|: TRUE
f23816_0_random_InvokeMethod(EOS(STATIC_23816(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37596sub)) -> f23820_0_random_InvokeMethod(EOS(STATIC_23820(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37596sub)) :|: TRUE
f23820_0_random_InvokeMethod(EOS(STATIC_23820(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37602sub)) -> f23827_0_random_InvokeMethod(EOS(STATIC_23827(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37602sub)) :|: TRUE
f23827_0_random_InvokeMethod(EOS(STATIC_23827(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37602sub)) -> f23834_0_length_Load(EOS(STATIC_23834(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37602sub)) :|: TRUE
f23834_0_length_Load(EOS(STATIC_23834(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37602sub)) -> f23846_0_length_FieldAccess(EOS(STATIC_23846(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37602sub)) :|: TRUE
f23846_0_length_FieldAccess(EOS(STATIC_23846(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(java.lang.String(EOC, i12999))) -> f23853_0_length_FieldAccess(EOS(STATIC_23853(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(java.lang.String(EOC, i12999))) :|: i12999 >= 0
f23853_0_length_FieldAccess(EOS(STATIC_23853(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(java.lang.String(EOC, i12999))) -> f23858_0_length_Return(EOS(STATIC_23858(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) :|: TRUE
f23858_0_length_Return(EOS(STATIC_23858(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) -> f23864_0_random_Return(EOS(STATIC_23864(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) :|: TRUE
f23864_0_random_Return(EOS(STATIC_23864(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) -> f23871_0_createMap_InvokeMethod(EOS(STATIC_23871(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) :|: TRUE
f23871_0_createMap_InvokeMethod(EOS(STATIC_23871(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) -> f23876_0__init__Load(EOS(STATIC_23876(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) :|: TRUE
f23876_0__init__Load(EOS(STATIC_23876(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) -> f23889_0__init__InvokeMethod(EOS(STATIC_23889(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999, java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f23889_0__init__InvokeMethod(EOS(STATIC_23889(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999, java.lang.Object(javaUtilEx.Content(EOC))) -> f23894_0__init__Load(EOS(STATIC_23894(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) :|: TRUE
f23894_0__init__Load(EOS(STATIC_23894(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) -> f23901_0__init__Load(EOS(STATIC_23901(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i12999, java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f23901_0__init__Load(EOS(STATIC_23901(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), i12999, java.lang.Object(javaUtilEx.Content(EOC))) -> f23908_0__init__FieldAccess(EOS(STATIC_23908(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) :|: TRUE
f23908_0__init__FieldAccess(EOS(STATIC_23908(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i12999) -> f23914_0__init__Return(EOS(STATIC_23914(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f23914_0__init__Return(EOS(STATIC_23914(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC))) -> f23921_0_createMap_Store(EOS(STATIC_23921(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f23921_0_createMap_Store(EOS(STATIC_23921(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC))) -> f23928_0_createMap_New(EOS(STATIC_23928(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f23928_0_createMap_New(EOS(STATIC_23928(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC))) -> f23935_0_createMap_Duplicate(EOS(STATIC_23935(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f23935_0_createMap_Duplicate(EOS(STATIC_23935(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f23941_0_createMap_InvokeMethod(EOS(STATIC_23941(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f23941_0_createMap_InvokeMethod(EOS(STATIC_23941(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f23948_0_random_FieldAccess(EOS(STATIC_23948(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f23948_0_random_FieldAccess(EOS(STATIC_23948(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f23959_0_random_FieldAccess(EOS(STATIC_23959(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979))) :|: TRUE
f23959_0_random_FieldAccess(EOS(STATIC_23959(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979))) -> f23964_0_random_ArrayAccess(EOS(STATIC_23964(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979)), i12994) :|: TRUE
f23964_0_random_ArrayAccess(EOS(STATIC_23964(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979)), i12994) -> f23970_0_random_ArrayAccess(EOS(STATIC_23970(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979)), i12994) :|: TRUE
f23970_0_random_ArrayAccess(EOS(STATIC_23970(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(ARRAY(i12979)), i12994) -> f23974_0_random_Store(EOS(STATIC_23974(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686) :|: i12994 < i12979
f23974_0_random_Store(EOS(STATIC_23974(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686) -> f23979_0_random_FieldAccess(EOS(STATIC_23979(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686) :|: TRUE
f23979_0_random_FieldAccess(EOS(STATIC_23979(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686) -> f23981_0_random_ConstantStackPush(EOS(STATIC_23981(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686, i12994) :|: TRUE
f23981_0_random_ConstantStackPush(EOS(STATIC_23981(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686, i12994) -> f23984_0_random_IntArithmetic(EOS(STATIC_23984(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686, i12994, 1) :|: TRUE
f23984_0_random_IntArithmetic(EOS(STATIC_23984(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686, i12994, matching1) -> f23987_0_random_FieldAccess(EOS(STATIC_23987(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686, i12994 + 1) :|: i12994 > 0 && matching1 = 1
f23987_0_random_FieldAccess(EOS(STATIC_23987(java.lang.Object(ARRAY(i12979)), i12994)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686, i13087) -> f23989_0_random_Load(EOS(STATIC_23989(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686) :|: TRUE
f23989_0_random_Load(EOS(STATIC_23989(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686) -> f23992_0_random_InvokeMethod(EOS(STATIC_23992(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o37686) :|: TRUE
f23992_0_random_InvokeMethod(EOS(STATIC_23992(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37697sub)) -> f23995_0_random_InvokeMethod(EOS(STATIC_23995(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37697sub)) :|: TRUE
f23995_0_random_InvokeMethod(EOS(STATIC_23995(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37698sub)) -> f23998_0_random_InvokeMethod(EOS(STATIC_23998(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37698sub)) :|: TRUE
f23998_0_random_InvokeMethod(EOS(STATIC_23998(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37698sub)) -> f24002_0_length_Load(EOS(STATIC_24002(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37698sub)) :|: TRUE
f24002_0_length_Load(EOS(STATIC_24002(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37698sub)) -> f24007_0_length_FieldAccess(EOS(STATIC_24007(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o37698sub)) :|: TRUE
f24007_0_length_FieldAccess(EOS(STATIC_24007(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(java.lang.String(EOC, i13100))) -> f24011_0_length_FieldAccess(EOS(STATIC_24011(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(java.lang.String(EOC, i13100))) :|: i13100 >= 0
f24011_0_length_FieldAccess(EOS(STATIC_24011(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(java.lang.String(EOC, i13100))) -> f24014_0_length_Return(EOS(STATIC_24014(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) :|: TRUE
f24014_0_length_Return(EOS(STATIC_24014(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) -> f24017_0_random_Return(EOS(STATIC_24017(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) :|: TRUE
f24017_0_random_Return(EOS(STATIC_24017(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) -> f24020_0_createMap_InvokeMethod(EOS(STATIC_24020(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) :|: TRUE
f24020_0_createMap_InvokeMethod(EOS(STATIC_24020(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) -> f24023_0__init__Load(EOS(STATIC_24023(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) :|: TRUE
f24023_0__init__Load(EOS(STATIC_24023(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) -> f24030_0__init__InvokeMethod(EOS(STATIC_24030(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100, java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24030_0__init__InvokeMethod(EOS(STATIC_24030(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100, java.lang.Object(javaUtilEx.Content(EOC))) -> f24032_0__init__Load(EOS(STATIC_24032(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) :|: TRUE
f24032_0__init__Load(EOS(STATIC_24032(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) -> f24036_0__init__Load(EOS(STATIC_24036(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100, java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24036_0__init__Load(EOS(STATIC_24036(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100, java.lang.Object(javaUtilEx.Content(EOC))) -> f24040_0__init__FieldAccess(EOS(STATIC_24040(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) :|: TRUE
f24040_0__init__FieldAccess(EOS(STATIC_24040(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), i13100) -> f24044_0__init__Return(EOS(STATIC_24044(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24044_0__init__Return(EOS(STATIC_24044(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f24048_0_createMap_Store(EOS(STATIC_24048(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24048_0_createMap_Store(EOS(STATIC_24048(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f24052_0_createMap_Load(EOS(STATIC_24052(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24052_0_createMap_Load(EOS(STATIC_24052(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f24055_0_createMap_Load(EOS(STATIC_24055(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) :|: TRUE
f24055_0_createMap_Load(EOS(STATIC_24055(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) -> f24059_0_createMap_Load(EOS(STATIC_24059(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24059_0_createMap_Load(EOS(STATIC_24059(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC))) -> f24063_0_createMap_InvokeMethod(EOS(STATIC_24063(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24063_0_createMap_InvokeMethod(EOS(STATIC_24063(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f24067_0_put_Load(EOS(STATIC_24067(java.lang.Object(ARRAY(i12979)), i13087)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: i12948 >= 1 && i12947 >= 1 && i13087 > 1 && i12948 >= i12947
f24063_0_createMap_InvokeMethod(EOS(STATIC_24063(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f24067_1_put_Load(EOS(STATIC_24067(java.lang.Object(ARRAY(i12979)), i13087)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: i12948 >= 1 && i12947 >= 1 && i13087 > 1 && i12948 >= i12947
f24067_0_put_Load(EOS(STATIC_24067(java.lang.Object(ARRAY(i12979)), i13087)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f28313_0_put_Load(EOS(STATIC_28313(java.lang.Object(ARRAY(i12979)), i13087)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: TRUE
f24539_0_put_Return(EOS(STATIC_24539(java.lang.Object(ARRAY(i13470)), i13472)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) -> f24544_0_createMap_StackPop(EOS(STATIC_24544(java.lang.Object(ARRAY(i13470)), i13472)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) :|: TRUE
f24544_0_createMap_StackPop(EOS(STATIC_24544(java.lang.Object(ARRAY(i13470)), i13472)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) -> f24548_0_createMap_Inc(EOS(STATIC_24548(java.lang.Object(ARRAY(i13470)), i13472)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) :|: TRUE
f24548_0_createMap_Inc(EOS(STATIC_24548(java.lang.Object(ARRAY(i13470)), i13472)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) -> f24750_0_createMap_Inc(EOS(STATIC_24750(java.lang.Object(ARRAY(i13470)), i13472)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) :|: TRUE
f24750_0_createMap_Inc(EOS(STATIC_24750(java.lang.Object(ARRAY(i13563)), i13564)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) -> f24757_0_createMap_JMP(EOS(STATIC_24757(java.lang.Object(ARRAY(i13563)), i13564)), i12947 + -1, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) :|: TRUE
f24757_0_createMap_JMP(EOS(STATIC_24757(java.lang.Object(ARRAY(i13563)), i13564)), i13586, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) -> f24763_0_createMap_Load(EOS(STATIC_24763(java.lang.Object(ARRAY(i13563)), i13564)), i13586, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) :|: TRUE
f24763_0_createMap_Load(EOS(STATIC_24763(java.lang.Object(ARRAY(i13563)), i13564)), i13586, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) -> f23712_0_createMap_Load(EOS(STATIC_23712(java.lang.Object(ARRAY(i13563)), i13564)), i13586, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) :|: TRUE
f23712_0_createMap_Load(EOS(STATIC_23712(java.lang.Object(o37544sub), i12926)), i12928, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) -> f23715_0_createMap_LE(EOS(STATIC_23715(java.lang.Object(o37544sub), i12926)), i12928, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i12928) :|: TRUE
f24639_0_put_Return(EOS(STATIC_24639(java.lang.Object(ARRAY(i13522)), i13524)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), NULL) -> f24738_0_put_Return(EOS(STATIC_24738(java.lang.Object(ARRAY(i13522)), i13524)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), NULL) :|: TRUE
f24738_0_put_Return(EOS(STATIC_24738(java.lang.Object(ARRAY(i13563)), i13564)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), NULL) -> f24744_0_createMap_StackPop(EOS(STATIC_24744(java.lang.Object(ARRAY(i13563)), i13564)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), NULL) :|: TRUE
f24744_0_createMap_StackPop(EOS(STATIC_24744(java.lang.Object(ARRAY(i13563)), i13564)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), NULL) -> f24750_0_createMap_Inc(EOS(STATIC_24750(java.lang.Object(ARRAY(i13563)), i13564)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) :|: TRUE
f25492_0_put_Return(EOS(STATIC_25492(java.lang.Object(ARRAY(i14971)), i14973)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), NULL) -> f24738_0_put_Return(EOS(STATIC_24738(java.lang.Object(ARRAY(i14971)), i14973)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), NULL) :|: TRUE
f24067_1_put_Load(EOS(STATIC_24067(java.lang.Object(ARRAY(i13470)), i13472)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f24539_0_put_Return(EOS(STATIC_24539(java.lang.Object(ARRAY(i13470)), i13472)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC)))) :|: TRUE
f24067_1_put_Load(EOS(STATIC_24067(java.lang.Object(ARRAY(i13522)), i13524)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f24639_0_put_Return(EOS(STATIC_24639(java.lang.Object(ARRAY(i13522)), i13524)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), NULL) :|: TRUE
f24067_1_put_Load(EOS(STATIC_24067(java.lang.Object(ARRAY(i14971)), i14973)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) -> f25492_0_put_Return(EOS(STATIC_25492(java.lang.Object(ARRAY(i14971)), i14973)), i12947, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), NULL) :|: TRUE
Combined rules. Obtained 2 IRulesP rules:
f23715_0_createMap_LE(EOS(STATIC_23715(java.lang.Object(ARRAY(i12979:0)), i12926:0)), i12947:0, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i12947:0) -> f23715_0_createMap_LE(EOS(STATIC_23715(java.lang.Object(ARRAY(i12979:0)), i12926:0 + 2)), i12947:0 - 1, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i12947:0 - 1) :|: i12979:0 > i12926:0 + 1 && i12947:0 > 0 && i12979:0 > -1 && i12926:0 > -1 && i12999:0 > -1 && i13100:0 > -1 && i12948:0 > 0 && i12948:0 >= i12947:0
Removed following non-SCC rules:
f23715_0_createMap_LE(EOS(STATIC_23715(java.lang.Object(ARRAY(i12979:0)), i12926:0)), i12947:0, java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), i12947:0) -> f28313_0_put_Load(EOS(STATIC_28313(java.lang.Object(ARRAY(i12979:0)), i12926:0 + 2)), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.AbstractMap(javaUtilEx.HashMap(EOC))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC))) :|: i12979:0 > i12926:0 + 1 && i12947:0 > 0 && i12979:0 > -1 && i12926:0 > -1 && i12999:0 > -1 && i13100:0 > -1 && i12948:0 > 0 && i12948:0 >= i12947:0
Filtered constant ground arguments:
   f23715_0_createMap_LE(x1, x2, x3, x4) -> f23715_0_createMap_LE(x1, x2, x4)
   javaUtilEx.AbstractMap(x1) -> javaUtilEx.AbstractMap
   javaUtilEx.HashMap(x1) -> javaUtilEx.HashMap
Filtered duplicate arguments:
   f23715_0_createMap_LE(x1, x2, x3) -> f23715_0_createMap_LE(x1, x3)
Finished conversion. Obtained 1 rules.P rules:
f23715_0_createMap_LE(i12947:0, i12979:0, i12926:0) -> f23715_0_createMap_LE(i12947:0 - 1, i12979:0, i12926:0 + 2) :|: i12947:0 > 0 && i12979:0 > i12926:0 + 1 && i12979:0 > -1 && i12926:0 > -1 && i12999:0 > -1 && i13100:0 > -1 && i12948:0 >= i12947:0 && i12948:0 > 0

----------------------------------------

(86)
Obligation:
Rules:
f23715_0_createMap_LE(i12947:0, i12979:0, i12926:0) -> f23715_0_createMap_LE(i12947:0 - 1, i12979:0, i12926:0 + 2) :|: i12947:0 > 0 && i12979:0 > i12926:0 + 1 && i12979:0 > -1 && i12926:0 > -1 && i12999:0 > -1 && i13100:0 > -1 && i12948:0 >= i12947:0 && i12948:0 > 0

----------------------------------------

(87) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(88)
Obligation:
Rules:
f23715_0_createMap_LE(i12947:0, i12979:0, i12926:0) -> f23715_0_createMap_LE(arith, i12979:0, arith1) :|: i12947:0 > 0 && i12979:0 > i12926:0 + 1 && i12979:0 > -1 && i12926:0 > -1 && i12999:0 > -1 && i13100:0 > -1 && i12948:0 >= i12947:0 && i12948:0 > 0 && arith = i12947:0 - 1 && arith1 = i12926:0 + 2

----------------------------------------

(89) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f23715_0_createMap_LE(i12947:0, i12979:0, i12926:0) -> f23715_0_createMap_LE(arith, i12979:0, arith1) :|: i12947:0 > 0 && i12979:0 > i12926:0 + 1 && i12979:0 > -1 && i12926:0 > -1 && i12999:0 > -1 && i13100:0 > -1 && i12948:0 >= i12947:0 && i12948:0 > 0 && arith = i12947:0 - 1 && arith1 = i12926:0 + 2

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(90)
Obligation:

Termination digraph:
Nodes:
(1) f23715_0_createMap_LE(i12947:0, i12979:0, i12926:0) -> f23715_0_createMap_LE(arith, i12979:0, arith1) :|: i12947:0 > 0 && i12979:0 > i12926:0 + 1 && i12979:0 > -1 && i12926:0 > -1 && i12999:0 > -1 && i13100:0 > -1 && i12948:0 >= i12947:0 && i12948:0 > 0 && arith = i12947:0 - 1 && arith1 = i12926:0 + 2

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(91) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(92)
Obligation:
Rules:
f23715_0_createMap_LE(i12947:0:0, i12979:0:0, i12926:0:0) -> f23715_0_createMap_LE(i12947:0:0 - 1, i12979:0:0, i12926:0:0 + 2) :|: i12948:0:0 >= i12947:0:0 && i12948:0:0 > 0 && i13100:0:0 > -1 && i12999:0:0 > -1 && i12926:0:0 > -1 && i12979:0:0 > -1 && i12979:0:0 > i12926:0:0 + 1 && i12947:0:0 > 0

----------------------------------------

(93) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f23715_0_createMap_LE(INTEGER, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(94)
Obligation:
Rules:
f23715_0_createMap_LE(i12947:0:0, i12979:0:0, i12926:0:0) -> f23715_0_createMap_LE(c, i12979:0:0, c1) :|: c1 = i12926:0:0 + 2 && c = i12947:0:0 - 1 && (i12948:0:0 >= i12947:0:0 && i12948:0:0 > 0 && i13100:0:0 > -1 && i12999:0:0 > -1 && i12926:0:0 > -1 && i12979:0:0 > -1 && i12979:0:0 > i12926:0:0 + 1 && i12947:0:0 > 0)

----------------------------------------

(95) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f23715_0_createMap_LE(x, x1, x2)] = x

The following rules are decreasing:
f23715_0_createMap_LE(i12947:0:0, i12979:0:0, i12926:0:0) -> f23715_0_createMap_LE(c, i12979:0:0, c1) :|: c1 = i12926:0:0 + 2 && c = i12947:0:0 - 1 && (i12948:0:0 >= i12947:0:0 && i12948:0:0 > 0 && i13100:0:0 > -1 && i12999:0:0 > -1 && i12926:0:0 > -1 && i12979:0:0 > -1 && i12979:0:0 > i12926:0:0 + 1 && i12947:0:0 > 0)
The following rules are bounded:
f23715_0_createMap_LE(i12947:0:0, i12979:0:0, i12926:0:0) -> f23715_0_createMap_LE(c, i12979:0:0, c1) :|: c1 = i12926:0:0 + 2 && c = i12947:0:0 - 1 && (i12948:0:0 >= i12947:0:0 && i12948:0:0 > 0 && i13100:0:0 > -1 && i12999:0:0 > -1 && i12926:0:0 > -1 && i12979:0:0 > -1 && i12979:0:0 > i12926:0:0 + 1 && i12947:0:0 > 0)

----------------------------------------

(96)
YES
