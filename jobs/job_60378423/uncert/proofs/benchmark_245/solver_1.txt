YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/QF7HD.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 1950 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 5 ms]
(6) AND
    (7) JBCTerminationSCC
        (8) SCCToIRSProof [SOUND, 118 ms]
        (9) IRSwT
        (10) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (11) IRSwT
        (12) IRSwTTerminationDigraphProof [EQUIVALENT, 26 ms]
        (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) TempFilterProof [SOUND, 32 ms]
        (17) IntTRS
        (18) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (19) YES
    (20) JBCTerminationSCC
        (21) SCCToIRSProof [SOUND, 106 ms]
        (22) IRSwT
        (23) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (24) IRSwT
        (25) IRSwTTerminationDigraphProof [EQUIVALENT, 133 ms]
        (26) IRSwT
        (27) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (28) IRSwT
        (29) TempFilterProof [SOUND, 12 ms]
        (30) IntTRS
        (31) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (32) IntTRS
        (33) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (34) YES
    (35) JBCTerminationSCC
        (36) SCCToIRSProof [SOUND, 130 ms]
        (37) IRSwT
        (38) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (39) IRSwT
        (40) IRSwTTerminationDigraphProof [EQUIVALENT, 151 ms]
        (41) IRSwT
        (42) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (43) IRSwT
        (44) TempFilterProof [SOUND, 18 ms]
        (45) IntTRS
        (46) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (47) IntTRS
        (48) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (49) YES
    (50) JBCTerminationSCC
        (51) SCCToIRSProof [SOUND, 59 ms]
        (52) IRSwT
        (53) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (54) IRSwT
        (55) IRSwTTerminationDigraphProof [EQUIVALENT, 18 ms]
        (56) IRSwT
        (57) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (58) IRSwT
        (59) TempFilterProof [SOUND, 14 ms]
        (60) IntTRS
        (61) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (62) YES
    (63) JBCTerminationSCC
        (64) SCCToIRSProof [SOUND, 62 ms]
        (65) IRSwT
        (66) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (67) IRSwT
        (68) IRSwTTerminationDigraphProof [EQUIVALENT, 19 ms]
        (69) IRSwT
        (70) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (71) IRSwT
        (72) TempFilterProof [SOUND, 31 ms]
        (73) IntTRS
        (74) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (75) IntTRS
        (76) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (77) YES
    (78) JBCTerminationSCC
        (79) SCCToIRSProof [SOUND, 51 ms]
        (80) IRSwT
        (81) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (82) IRSwT
        (83) IRSwTTerminationDigraphProof [EQUIVALENT, 104 ms]
        (84) IRSwT
        (85) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (86) IRSwT
        (87) TempFilterProof [SOUND, 14 ms]
        (88) IntTRS
        (89) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (90) YES
    (91) JBCTerminationSCC
        (92) SCCToIRSProof [SOUND, 56 ms]
        (93) IRSwT
        (94) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (95) IRSwT
        (96) IRSwTTerminationDigraphProof [EQUIVALENT, 106 ms]
        (97) IRSwT
        (98) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (99) IRSwT
        (100) TempFilterProof [SOUND, 20 ms]
        (101) IntTRS
        (102) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (103) IntTRS
        (104) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (105) YES
    (106) JBCTerminationSCC
        (107) SCCToIRSProof [SOUND, 113 ms]
        (108) IRSwT
        (109) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (110) IRSwT
        (111) IRSwTTerminationDigraphProof [EQUIVALENT, 134 ms]
        (112) IRSwT
        (113) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (114) IRSwT
        (115) TempFilterProof [SOUND, 12 ms]
        (116) IntTRS
        (117) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (118) IntTRS
        (119) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (120) YES
    (121) JBCTerminationSCC
        (122) SCCToIRSProof [SOUND, 94 ms]
        (123) IRSwT
        (124) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (125) IRSwT
        (126) IRSwTTerminationDigraphProof [EQUIVALENT, 101 ms]
        (127) IRSwT
        (128) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (129) IRSwT
        (130) TempFilterProof [SOUND, 6 ms]
        (131) IntTRS
        (132) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (133) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Collection</tt>
 * interface, to minimize the effort required to implement this interface. <p>
 *
 * To implement an unmodifiable collection, the programmer needs only to
 * extend this class and provide implementations for the <tt>iterator</tt> and
 * <tt>size</tt> methods.  (The iterator returned by the <tt>iterator</tt>
 * method must implement <tt>hasNext</tt> and <tt>next</tt>.)<p>
 *
 * To implement a modifiable collection, the programmer must additionally
 * override this class's <tt>add</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by the
 * <tt>iterator</tt> method must additionally implement its <tt>remove</tt>
 * method.<p>
 *
 * The programmer should generally provide a void (no argument) and
 * <tt>Collection</tt> constructor, as per the recommendation in the
 * <tt>Collection</tt> interface specification.<p>
 *
 * The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if
 * the collection being implemented admits a more efficient implementation.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractCollection<E> implements Collection<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractCollection() {
    }

    // Query Operations

    /**
     * Returns an iterator over the elements contained in this collection.
     *
     * @return an iterator over the elements contained in this collection
     */
    public abstract Iterator<E> iterator();

    public abstract int size();

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the elements in the collection,
     * checking each element in turn for equality with the specified element.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean contains(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return true;
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return true;
        }
        return false;
    }

    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     */
    public boolean add(E e) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the collection looking for the
     * specified element.  If it finds the element, it removes the element
     * from the collection using the iterator's remove method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's iterator method does not implement the <tt>remove</tt>
     * method and this collection contains the specified object.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public boolean remove(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext()) {
                if (e.next()==null) {
                    e.remove();
                    return true;
                }
            }
        } else {
            while (e.hasNext()) {
                if (o.equals(e.next())) {
                    e.remove();
                    return true;
                }
            }
        }
        return false;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection,
     * checking each element returned by the iterator in turn to see
     * if it's contained in this collection.  If all elements are so
     * contained <tt>true</tt> is returned, otherwise <tt>false</tt>.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @see #contains(Object)
     */
    public boolean containsAll(Collection<?> c) {
        Iterator<?> e = c.iterator();
        while (e.hasNext())
            if (!contains(e.next()))
                return false;
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection, and adds
     * each object returned by the iterator to this collection, in turn.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> unless <tt>add</tt> is
     * overridden (assuming the specified collection is non-empty).
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     *
     * @see #add(Object)
     */
    public boolean addAll(Collection<? extends E> c) {
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            if (add(e.next()))
                modified = true;
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's so contained, it's removed from
     * this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements in common with the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;
        Iterator<?> e = iterator();
        while (e.hasNext()) {
            if (c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's not so contained, it's removed
     * from this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements not present in the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean retainAll(Collection<?> c) {
        boolean modified = false;
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            if (!c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, removing each
     * element using the <tt>Iterator.remove</tt> operation.  Most
     * implementations will probably choose to override this method for
     * efficiency.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's <tt>iterator</tt> method does not implement the
     * <tt>remove</tt> method and this collection is non-empty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            e.next();
            e.remove();
        }
    }


    //  String conversion

    /**
     * Returns a string representation of this collection.  The string
     * representation consists of a list of the collection's elements in the
     * order they are returned by its iterator, enclosed in square brackets
     * (<tt>"[]"</tt>).  Adjacent elements are separated by the characters
     * <tt>", "</tt> (comma and space).  Elements are converted to strings as
     * by {@link String#valueOf(Object)}.
     *
     * @return a string representation of this collection
     */
    public String toString() {
        Iterator<E> i = iterator();
        if (! i.hasNext())
            return "[]";

        String sb = "";
        sb = sb + "[";
        for (;;) {
            E e = i.next();
            sb = sb + (e == this ? "(this Collection)" : e);
            if (! i.hasNext()) {
                sb = sb + "]";
		return sb;
            }
            sb = sb + ", ";
        }
    }

}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the {@link List}
 * interface to minimize the effort required to implement this interface
 * backed by a "random access" data store (such as an array).  For sequential
 * access data (such as a linked list), {@link AbstractSequentialList} should
 * be used in preference to this class.
 *
 * <p>To implement an unmodifiable list, the programmer needs only to extend
 * this class and provide implementations for the {@link #get(int)} and
 * {@link List#size() size()} methods.
 *
 * <p>To implement a modifiable list, the programmer must additionally
 * override the {@link #set(int, Object) set(int, E)} method (which otherwise
 * throws an {@code UnsupportedOperationException}).  If the list is
 * variable-size the programmer must additionally override the
 * {@link #add(int, Object) add(int, E)} and {@link #remove(int)} methods.
 *
 * <p>The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the {@link Collection} interface
 * specification.
 *
 * <p>Unlike the other abstract collection implementations, the programmer does
 * <i>not</i> have to provide an iterator implementation; the iterator and
 * list iterator are implemented by this class, on top of the "random access"
 * methods:
 * {@link #get(int)},
 * {@link #set(int, Object) set(int, E)},
 * {@link #add(int, Object) add(int, E)} and
 * {@link #remove(int)}.
 *
 * <p>The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if the
 * collection being implemented admits a more efficient implementation.
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @since 1.2
 */

public abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractList() {
    }

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * <p>This implementation calls {@code add(size(), e)}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @param e element to be appended to this list
     * @return {@code true} (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the {@code add} operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    public boolean add(E e) {
        add(size(), e);
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    abstract public E get(int index);

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        throw new UnsupportedOperationException();
    }


    // Search Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator (with
     * {@code listIterator()}).  Then, it iterates over the list until the
     * specified element is found or the end of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int indexOf(Object o) {
        ListIterator<E> e = listIterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return e.previousIndex();
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return e.previousIndex();
        }
        return -1;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator that points to the end
     * of the list (with {@code listIterator(size())}).  Then, it iterates
     * backwards over the list until the specified element is found, or the
     * beginning of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int lastIndexOf(Object o) {
        ListIterator<E> e = listIterator(size());
        if (o==null) {
            while (e.hasPrevious())
                if (e.previous()==null)
                    return e.nextIndex();
        } else {
            while (e.hasPrevious())
                if (o.equals(e.previous()))
                    return e.nextIndex();
        }
        return -1;
    }


    // Bulk Operations

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * <p>This implementation calls {@code removeRange(0, size())}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless {@code remove(int
     * index)} or {@code removeRange(int fromIndex, int toIndex)} is
     * overridden.
     *
     * @throws UnsupportedOperationException if the {@code clear} operation
     *         is not supported by this list
     */
    public void clear() {
        removeRange(0, size());
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation gets an iterator over the specified collection
     * and iterates over it, inserting the elements obtained from the
     * iterator into this list at the appropriate position, one at a time,
     * using {@code add(int, E)}.
     * Many implementations will override this method for efficiency.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            add(index++, e.next());
            modified = true;
        }
        return modified;
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * <p>This implementation returns a straightforward implementation of the
     * iterator interface, relying on the backing list's {@code size()},
     * {@code get(int)}, and {@code remove(int)} methods.
     *
     * <p>Note that the iterator returned by this method will throw an
     * {@link UnsupportedOperationException} in response to its
     * {@code remove} method unless the list's {@code remove(int)} method is
     * overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification
     * for the (protected) {@link #modCount} field.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    public Iterator<E> iterator() {
        return new Itr();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns {@code listIterator(0)}.
     *
     * @see #listIterator(int)
     */
    public ListIterator<E> listIterator() {
        return listIterator(0);
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a straightforward implementation of the
     * {@code ListIterator} interface that extends the implementation of the
     * {@code Iterator} interface returned by the {@code iterator()} method.
     * The {@code ListIterator} implementation relies on the backing list's
     * {@code get(int)}, {@code set(int, E)}, {@code add(int, E)}
     * and {@code remove(int)} methods.
     *
     * <p>Note that the list iterator returned by this implementation will
     * throw an {@link UnsupportedOperationException} in response to its
     * {@code remove}, {@code set} and {@code add} methods unless the
     * list's {@code remove(int)}, {@code set(int, E)}, and
     * {@code add(int, E)} methods are overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification for
     * the (protected) {@link #modCount} field.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public ListIterator<E> listIterator(final int index) {
        rangeCheckForAdd(index);

        return new ListItr(index);
    }

    private class Itr implements Iterator<E> {
        /**
         * Index of element to be returned by subsequent call to next.
         */
        int cursor = 0;

        /**
         * Index of element returned by most recent call to next or
         * previous.  Reset to -1 if this element is deleted by a call
         * to remove.
         */
        int lastRet = -1;

        /**
         * The modCount value that the iterator believes that the backing
         * List should have.  If this expectation is violated, the iterator
         * has detected concurrent modification.
         */
        int expectedModCount = modCount;

        public boolean hasNext() {
            return cursor != size();
        }

        public E next() {
            checkForComodification();
            try {
                int i = cursor;
                E next = get(i);
                lastRet = i;
                cursor = i + 1;
                return next;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public void remove() {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.remove(lastRet);
                if (lastRet < cursor)
                    cursor--;
                lastRet = -1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException e) {
                throw new ConcurrentModificationException();
            }
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private class ListItr extends Itr implements ListIterator<E> {
        ListItr(int index) {
            cursor = index;
        }

        public boolean hasPrevious() {
            return cursor != 0;
        }

        public E previous() {
            checkForComodification();
            try {
                int i = cursor - 1;
                E previous = get(i);
                lastRet = cursor = i;
                return previous;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public int nextIndex() {
            return cursor;
        }

        public int previousIndex() {
            return cursor-1;
        }

        public void set(E e) {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.set(lastRet, e);
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }

        public void add(E e) {
            checkForComodification();

            try {
                int i = cursor;
                AbstractList.this.add(i, e);
                lastRet = -1;
                cursor = i + 1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a list that subclasses
     * {@code AbstractList}.  The subclass stores, in private fields, the
     * offset of the subList within the backing list, the size of the subList
     * (which can change over its lifetime), and the expected
     * {@code modCount} value of the backing list.  There are two variants
     * of the subclass, one of which implements {@code RandomAccess}.
     * If this list implements {@code RandomAccess} the returned list will
     * be an instance of the subclass that implements {@code RandomAccess}.
     *
     * <p>The subclass's {@code set(int, E)}, {@code get(int)},
     * {@code add(int, E)}, {@code remove(int)}, {@code addAll(int,
     * Collection)} and {@code removeRange(int, int)} methods all
     * delegate to the corresponding methods on the backing abstract list,
     * after bounds-checking the index and adjusting for the offset.  The
     * {@code addAll(Collection c)} method merely returns {@code addAll(size,
     * c)}.
     *
     * <p>The {@code listIterator(int)} method returns a "wrapper object"
     * over a list iterator on the backing list, which is created with the
     * corresponding method on the backing list.  The {@code iterator} method
     * merely returns {@code listIterator()}, and the {@code size} method
     * merely returns the subclass's {@code size} field.
     *
     * <p>All methods first check to see if the actual {@code modCount} of
     * the backing list is equal to its expected value, and throw a
     * {@code ConcurrentModificationException} if it is not.
     *
     * @throws IndexOutOfBoundsException if an endpoint index value is out of range
     *         {@code (fromIndex < 0 || toIndex > size)}
     * @throws IllegalArgumentException if the endpoint indices are out of order
     *         {@code (fromIndex > toIndex)}
     */
    public List<E> subList(int fromIndex, int toIndex) {
        return (this instanceof RandomAccess ?
                new RandomAccessSubList<E>(this, fromIndex, toIndex) :
                new SubList<E>(this, fromIndex, toIndex));
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * {@code true} if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements {@code e1} and
     * {@code e2} are <i>equal</i> if {@code (e1==null ? e2==null :
     * e1.equals(e2))}.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.<p>
     *
     * This implementation first checks if the specified object is this
     * list. If so, it returns {@code true}; if not, it checks if the
     * specified object is a list. If not, it returns {@code false}; if so,
     * it iterates over both lists, comparing corresponding pairs of elements.
     * If any comparison returns {@code false}, this method returns
     * {@code false}.  If either iterator runs out of elements before the
     * other it returns {@code false} (as the lists are of unequal length);
     * otherwise it returns {@code true} when the iterations complete.
     *
     * @param o the object to be compared for equality with this list
     * @return {@code true} if the specified object is equal to this list
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;
        if (!(o instanceof List))
            return false;

        ListIterator<E> e1 = listIterator();
        ListIterator e2 = ((List) o).listIterator();
        while(e1.hasNext() && e2.hasNext()) {
            E o1 = e1.next();
            Object o2 = e2.next();
            if (!(o1==null ? o2==null : o1.equals(o2)))
                return false;
        }
        return !(e1.hasNext() || e2.hasNext());
    }

    /**
     * Returns the hash code value for this list.
     *
     * <p>This implementation uses exactly the code that is used to define the
     * list hash function in the documentation for the {@link List#hashCode}
     * method.
     *
     * @return the hash code value for this list
     */
    public int hashCode() {
        int hashCode = 1;
        Iterator<E> it = this.iterator();
        while (it.hasNext()) {
            E e = it.next();
            hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
        }
        return hashCode;
    }

    /**
     * Removes from this list all of the elements whose index is between
     * {@code fromIndex}, inclusive, and {@code toIndex}, exclusive.
     * Shifts any succeeding elements to the left (reduces their index).
     * This call shortens the list by {@code (toIndex - fromIndex)} elements.
     * (If {@code toIndex==fromIndex}, this operation has no effect.)
     *
     * <p>This method is called by the {@code clear} operation on this list
     * and its subLists.  Overriding this method to take advantage of
     * the internals of the list implementation can <i>substantially</i>
     * improve the performance of the {@code clear} operation on this list
     * and its subLists.
     *
     * <p>This implementation gets a list iterator positioned before
     * {@code fromIndex}, and repeatedly calls {@code ListIterator.next}
     * followed by {@code ListIterator.remove} until the entire range has
     * been removed.  <b>Note: if {@code ListIterator.remove} requires linear
     * time, this implementation requires quadratic time.</b>
     *
     * @param fromIndex index of first element to be removed
     * @param toIndex index after last element to be removed
     */
    protected void removeRange(int fromIndex, int toIndex) {
        ListIterator<E> it = listIterator(fromIndex);
        for (int i=0, n=toIndex-fromIndex; i<n; i++) {
            it.next();
            it.remove();
        }
    }

    /**
     * The number of times this list has been <i>structurally modified</i>.
     * Structural modifications are those that change the size of the
     * list, or otherwise perturb it in such a fashion that iterations in
     * progress may yield incorrect results.
     *
     * <p>This field is used by the iterator and list iterator implementation
     * returned by the {@code iterator} and {@code listIterator} methods.
     * If the value of this field changes unexpectedly, the iterator (or list
     * iterator) will throw a {@code ConcurrentModificationException} in
     * response to the {@code next}, {@code remove}, {@code previous},
     * {@code set} or {@code add} operations.  This provides
     * <i>fail-fast</i> behavior, rather than non-deterministic behavior in
     * the face of concurrent modification during iteration.
     *
     * <p><b>Use of this field by subclasses is optional.</b> If a subclass
     * wishes to provide fail-fast iterators (and list iterators), then it
     * merely has to increment this field in its {@code add(int, E)} and
     * {@code remove(int)} methods (and any other methods that it overrides
     * that result in structural modifications to the list).  A single call to
     * {@code add(int, E)} or {@code remove(int)} must add no more than
     * one to this field, or the iterators (and list iterators) will throw
     * bogus {@code ConcurrentModificationExceptions}.  If an implementation
     * does not wish to provide fail-fast iterators, this field may be
     * ignored.
     */
    protected transient int modCount = 0;

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size())
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }
}

class SubList<E> extends AbstractList<E> {
    private final AbstractList<E> l;
    private final int offset;
    private int size;

    SubList(AbstractList<E> list, int fromIndex, int toIndex) {
        if (fromIndex < 0)
            throw new IndexOutOfBoundsException();
        if (toIndex > list.size())
            throw new IndexOutOfBoundsException();
        if (fromIndex > toIndex)
            throw new IllegalArgumentException();
        l = list;
        offset = fromIndex;
        size = toIndex - fromIndex;
        this.modCount = l.modCount;
    }

    public E set(int index, E element) {
        rangeCheck(index);
        checkForComodification();
        return l.set(index+offset, element);
    }

    public E get(int index) {
        rangeCheck(index);
        checkForComodification();
        return l.get(index+offset);
    }

    public int size() {
        checkForComodification();
        return size;
    }

    public void add(int index, E element) {
        rangeCheckForAdd(index);
        checkForComodification();
        l.add(index+offset, element);
        this.modCount = l.modCount;
        size++;
    }

    public E remove(int index) {
        rangeCheck(index);
        checkForComodification();
        E result = l.remove(index+offset);
        this.modCount = l.modCount;
        size--;
        return result;
    }

    protected void removeRange(int fromIndex, int toIndex) {
        checkForComodification();
        l.removeRange(fromIndex+offset, toIndex+offset);
        this.modCount = l.modCount;
        size -= (toIndex-fromIndex);
    }

    public boolean addAll(Collection<? extends E> c) {
        return addAll(size, c);
    }

    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        int cSize = c.size();
        if (cSize==0)
            return false;

        checkForComodification();
        l.addAll(offset+index, c);
        this.modCount = l.modCount;
        size += cSize;
        return true;
    }

    public Iterator<E> iterator() {
        return listIterator();
    }

    public ListIterator<E> listIterator(final int index) {
        checkForComodification();
        rangeCheckForAdd(index);

        return new ListIterator<E>() {
            private final ListIterator<E> i = l.listIterator(index+offset);

            public boolean hasNext() {
                return nextIndex() < size;
            }

            public E next() {
                if (hasNext())
                    return i.next();
                else
                    throw new NoSuchElementException();
            }

            public boolean hasPrevious() {
                return previousIndex() >= 0;
            }

            public E previous() {
                if (hasPrevious())
                    return i.previous();
                else
                    throw new NoSuchElementException();
            }

            public int nextIndex() {
                return i.nextIndex() - offset;
            }

            public int previousIndex() {
                return i.previousIndex() - offset;
            }

            public void remove() {
                i.remove();
                SubList.this.modCount = l.modCount;
                size--;
            }

            public void set(E e) {
                i.set(e);
            }

            public void add(E e) {
                i.add(e);
                SubList.this.modCount = l.modCount;
                size++;
            }
        };
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new SubList<E>(this, fromIndex, toIndex);
    }

    private void rangeCheck(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }

    private void checkForComodification() {
        if (this.modCount != l.modCount)
            throw new ConcurrentModificationException();
    }
}

class RandomAccessSubList<E> extends SubList<E> implements RandomAccess {
    RandomAccessSubList(AbstractList<E> list, int fromIndex, int toIndex) {
        super(list, fromIndex, toIndex);
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new RandomAccessSubList<E>(this, fromIndex, toIndex);
    }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>List</tt>
 * interface to minimize the effort required to implement this interface
 * backed by a "sequential access" data store (such as a linked list).  For
 * random access data (such as an array), <tt>AbstractList</tt> should be used
 * in preference to this class.<p>
 *
 * This class is the opposite of the <tt>AbstractList</tt> class in the sense
 * that it implements the "random access" methods (<tt>get(int index)</tt>,
 * <tt>set(int index, E element)</tt>, <tt>add(int index, E element)</tt> and
 * <tt>remove(int index)</tt>) on top of the list's list iterator, instead of
 * the other way around.<p>
 *
 * To implement a list the programmer needs only to extend this class and
 * provide implementations for the <tt>listIterator</tt> and <tt>size</tt>
 * methods.  For an unmodifiable list, the programmer need only implement the
 * list iterator's <tt>hasNext</tt>, <tt>next</tt>, <tt>hasPrevious</tt>,
 * <tt>previous</tt> and <tt>index</tt> methods.<p>
 *
 * For a modifiable list the programmer should additionally implement the list
 * iterator's <tt>set</tt> method.  For a variable-size list the programmer
 * should additionally implement the list iterator's <tt>remove</tt> and
 * <tt>add</tt> methods.<p>
 *
 * The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the <tt>Collection</tt> interface
 * specification.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see List
 * @see AbstractList
 * @see AbstractCollection
 * @since 1.2
 */

public abstract class AbstractSequentialList<E> extends AbstractList<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractSequentialList() {
    }

    /**
     * Returns the element at the specified position in this list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the element using <tt>ListIterator.next</tt> and returns it.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        try {
            return listIterator(index).next();
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the current element using <tt>ListIterator.next</tt> and replaces it
     * with <tt>ListIterator.set</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>set</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        try {
            ListIterator<E> e = listIterator(index);
            E oldVal = e.next();
            e.set(element);
            return oldVal;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it
     * inserts the specified element with <tt>ListIterator.add</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>add</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        try {
            listIterator(index).add(element);
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it removes
     * the element with <tt>ListIterator.remove</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>remove</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        try {
            ListIterator<E> e = listIterator(index);
            E outCast = e.next();
            e.remove();
            return outCast;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Bulk Operations

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * <p>This implementation gets an iterator over the specified collection and
     * a list iterator over this list pointing to the indexed element (with
     * <tt>listIterator(index)</tt>).  Then, it iterates over the specified
     * collection, inserting the elements obtained from the iterator into this
     * list, one at a time, using <tt>ListIterator.add</tt> followed by
     * <tt>ListIterator.next</tt> (to skip over the added element).
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator returned by
     * the <tt>listIterator</tt> method does not implement the <tt>add</tt>
     * operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        try {
            boolean modified = false;
            ListIterator<E> e1 = listIterator(index);
            Iterator<? extends E> e2 = c.iterator();
            while (e2.hasNext()) {
                e1.add(e2.next());
                modified = true;
            }
            return modified;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list (in proper
     * sequence).<p>
     *
     * This implementation merely returns a list iterator over the list.
     *
     * @return an iterator over the elements in this list (in proper sequence)
     */
    public Iterator<E> iterator() {
        return listIterator();
    }

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @param  index index of first element to be returned from the list
     *         iterator (by a call to the <code>next</code> method)
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public abstract ListIterator<E> listIterator(int index);
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * The root interface in the <i>collection hierarchy</i>.  A collection
 * represents a group of objects, known as its <i>elements</i>.  Some
 * collections allow duplicate elements and others do not.  Some are ordered
 * and others unordered.  The JDK does not provide any <i>direct</i>
 * implementations of this interface: it provides implementations of more
 * specific subinterfaces like <tt>Set</tt> and <tt>List</tt>.  This interface
 * is typically used to pass collections around and manipulate them where
 * maximum generality is desired.
 *
 * <p><i>Bags</i> or <i>multisets</i> (unordered collections that may contain
 * duplicate elements) should implement this interface directly.
 *
 * <p>All general-purpose <tt>Collection</tt> implementation classes (which
 * typically implement <tt>Collection</tt> indirectly through one of its
 * subinterfaces) should provide two "standard" constructors: a void (no
 * arguments) constructor, which creates an empty collection, and a
 * constructor with a single argument of type <tt>Collection</tt>, which
 * creates a new collection with the same elements as its argument.  In
 * effect, the latter constructor allows the user to copy any collection,
 * producing an equivalent collection of the desired implementation type.
 * There is no way to enforce this convention (as interfaces cannot contain
 * constructors) but all of the general-purpose <tt>Collection</tt>
 * implementations in the Java platform libraries comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the collection on which they operate, are specified to
 * throw <tt>UnsupportedOperationException</tt> if this collection does not
 * support the operation.  If this is the case, these methods may, but are not
 * required to, throw an <tt>UnsupportedOperationException</tt> if the
 * invocation would have no effect on the collection.  For example, invoking
 * the {@link #addAll(Collection)} method on an unmodifiable collection may,
 * but is not required to, throw the exception if the collection to be added
 * is empty.
 *
 * <p>Some collection implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the collection may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>It is up to each collection to determine its own synchronization
 * policy.  In the absence of a stronger guarantee by the
 * implementation, undefined behavior may result from the invocation
 * of any method on a collection that is being mutated by another
 * thread; this includes direct invocations, passing the collection to
 * a method that might perform invocations, and using an existing
 * iterator to examine the collection.
 *
 * <p>Many methods in Collections Framework interfaces are defined in
 * terms of the {@link Object#equals(Object) equals} method.  For example,
 * the specification for the {@link #contains(Object) contains(Object o)}
 * method says: "returns <tt>true</tt> if and only if this collection
 * contains at least one element <tt>e</tt> such that
 * <tt>(o==null ? e==null : o.equals(e))</tt>."  This specification should
 * <i>not</i> be construed to imply that invoking <tt>Collection.contains</tt>
 * with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be
 * invoked for any element <tt>e</tt>.  Implementations are free to implement
 * optimizations whereby the <tt>equals</tt> invocation is avoided, for
 * example, by first comparing the hash codes of the two elements.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see     Set
 * @see     List
 * @see     Map
 * @see     SortedSet
 * @see     SortedMap
 * @see     HashSet
 * @see     TreeSet
 * @see     ArrayList
 * @see     LinkedList
 * @see     Vector
 * @see     Collections
 * @see     Arrays
 * @see     AbstractCollection
 * @since 1.2
 */

public interface Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this collection.  If this collection
     * contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this collection
     */
    int size();

    /**
     * Returns <tt>true</tt> if this collection contains no elements.
     *
     * @return <tt>true</tt> if this collection contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this collection contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this collection
     * contains at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this collection is to be tested
     * @return <tt>true</tt> if this collection contains the specified
     *         element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this collection.  There are no
     * guarantees concerning the order in which the elements are returned
     * (unless this collection is an instance of some class that provides a
     * guarantee).
     *
     * @return an <tt>Iterator</tt> over the elements in this collection
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Ensures that this collection contains the specified element (optional
     * operation).  Returns <tt>true</tt> if this collection changed as a
     * result of the call.  (Returns <tt>false</tt> if this collection does
     * not permit duplicates and already contains the specified element.)<p>
     *
     * Collections that support this operation may place limitations on what
     * elements may be added to this collection.  In particular, some
     * collections will refuse to add <tt>null</tt> elements, and others will
     * impose restrictions on the type of elements that may be added.
     * Collection classes should clearly specify in their documentation any
     * restrictions on what elements may be added.<p>
     *
     * If a collection refuses to add a particular element for any reason
     * other than that it already contains the element, it <i>must</i> throw
     * an exception (rather than returning <tt>false</tt>).  This preserves
     * the invariant that a collection always contains the specified element
     * after this call returns.
     *
     * @param e element whose presence in this collection is to be ensured
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this collection
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements
     * @throws IllegalArgumentException if some property of the element
     *         prevents it from being added to this collection
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to insertion restrictions
     */
    boolean add(E e);

    /**
     * Removes a single instance of the specified element from this
     * collection, if it is present (optional operation).  More formally,
     * removes an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this collection contains one or more such elements.  Returns
     * <tt>true</tt> if this collection contained the specified element (or
     * equivalently, if this collection changed as a result of the call).
     *
     * @param o element to be removed from this collection, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this collection
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this collection contains all of the elements
     * in the specified collection.
     *
     * @param  c collection to be checked for containment in this collection
     * @return <tt>true</tt> if this collection contains all of the elements
     *         in the specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         collection (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this collection
     * (optional operation).  The behavior of this operation is undefined if
     * the specified collection is modified while the operation is in progress.
     * (This implies that the behavior of this call is undefined if the
     * specified collection is this collection, and this collection is
     * nonempty.)
     *
     * @param c collection containing elements to be added to this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this collection
     * @throws NullPointerException if the specified collection contains a
     *         null element and this collection does not permit null elements,
     *         or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this
     *         collection
     * @throws IllegalStateException if not all the elements can be added at
     *         this time due to insertion restrictions
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Removes all of this collection's elements that are also contained in the
     * specified collection (optional operation).  After this call returns,
     * this collection will contain no elements in common with the specified
     * collection.
     *
     * @param c collection containing elements to be removed from this collection
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> method
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not support
     *         null elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this collection that are contained in the
     * specified collection (optional operation).  In other words, removes from
     * this collection all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this collection (optional operation).
     * The collection will be empty after this method returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this collection
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this collection for equality. <p>
     *
     * While the <tt>Collection</tt> interface adds no stipulations to the
     * general contract for the <tt>Object.equals</tt>, programmers who
     * implement the <tt>Collection</tt> interface "directly" (in other words,
     * create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt>
     * or a <tt>List</tt>) must exercise care if they choose to override the
     * <tt>Object.equals</tt>.  It is not necessary to do so, and the simplest
     * course of action is to rely on <tt>Object</tt>'s implementation, but
     * the implementor may wish to implement a "value comparison" in place of
     * the default "reference comparison."  (The <tt>List</tt> and
     * <tt>Set</tt> interfaces mandate such value comparisons.)<p>
     *
     * The general contract for the <tt>Object.equals</tt> method states that
     * equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and
     * only if <tt>b.equals(a)</tt>).  The contracts for <tt>List.equals</tt>
     * and <tt>Set.equals</tt> state that lists are only equal to other lists,
     * and sets to other sets.  Thus, a custom <tt>equals</tt> method for a
     * collection class that implements neither the <tt>List</tt> nor
     * <tt>Set</tt> interface must return <tt>false</tt> when this collection
     * is compared to any list or set.  (By the same logic, it is not possible
     * to write a class that correctly implements both the <tt>Set</tt> and
     * <tt>List</tt> interfaces.)
     *
     * @param o object to be compared for equality with this collection
     * @return <tt>true</tt> if the specified object is equal to this
     * collection
     *
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     * @see List#equals(Object)
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this collection.  While the
     * <tt>Collection</tt> interface adds no stipulations to the general
     * contract for the <tt>Object.hashCode</tt> method, programmers should
     * take note that any class that overrides the <tt>Object.equals</tt>
     * method must also override the <tt>Object.hashCode</tt> method in order
     * to satisfy the general contract for the <tt>Object.hashCode</tt>method.
     * In particular, <tt>c1.equals(c2)</tt> implies that
     * <tt>c1.hashCode()==c2.hashCode()</tt>.
     *
     * @return the hash code value for this collection
     *
     * @see Object#hashCode()
     * @see Object#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This exception may be thrown by methods that have detected concurrent
 * modification of an object when such modification is not permissible.
 * <p>
 * For example, it is not generally permissible for one thread to modify a Collection
 * while another thread is iterating over it.  In general, the results of the
 * iteration are undefined under these circumstances.  Some Iterator
 * implementations (including those of all the general purpose collection implementations
 * provided by the JRE) may choose to throw this exception if this behavior is
 * detected.  Iterators that do this are known as <i>fail-fast</i> iterators,
 * as they fail quickly and cleanly, rather that risking arbitrary,
 * non-deterministic behavior at an undetermined time in the future.
 * <p>
 * Note that this exception does not always indicate that an object has
 * been concurrently modified by a <i>different</i> thread.  If a single
 * thread issues a sequence of method invocations that violates the
 * contract of an object, the object may throw this exception.  For
 * example, if a thread modifies a collection directly while it is
 * iterating over the collection with a fail-fast iterator, the iterator
 * will throw this exception.
 *
 * <p>Note that fail-fast behavior cannot be guaranteed as it is, generally
 * speaking, impossible to make any hard guarantees in the presence of
 * unsynchronized concurrent modification.  Fail-fast operations
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i><tt>ConcurrentModificationException</tt>
 * should be used only to detect bugs.</i>
 *
 * @author  Josh Bloch
 * @see     Collection
 * @see     Iterator
 * @see     ListIterator
 * @see     Vector
 * @see     LinkedList
 * @see     HashSet
 * @see     Hashtable
 * @see     TreeMap
 * @see     AbstractList
 * @since   1.2
 */
public class ConcurrentModificationException extends RuntimeException {
    /**
     * Constructs a ConcurrentModificationException with no
     * detail message.
     */
    public ConcurrentModificationException() {
    }

    /**
     * Constructs a <tt>ConcurrentModificationException</tt> with the
     * specified detail message.
     *
     * @param message the detail message pertaining to this exception.
     */
    public ConcurrentModificationException(String message) {
        super(message);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea and Josh Bloch with assistance from members of
 * JCP JSR-166 Expert Group and released to the public domain, as explained
 * at http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A linear collection that supports element insertion and removal at
 * both ends.  The name <i>deque</i> is short for "double ended queue"
 * and is usually pronounced "deck".  Most <tt>Deque</tt>
 * implementations place no fixed limits on the number of elements
 * they may contain, but this interface supports capacity-restricted
 * deques as well as those with no fixed size limit.
 *
 * <p>This interface defines methods to access the elements at both
 * ends of the deque.  Methods are provided to insert, remove, and
 * examine the element.  Each of these methods exists in two forms:
 * one throws an exception if the operation fails, the other returns a
 * special value (either <tt>null</tt> or <tt>false</tt>, depending on
 * the operation).  The latter form of the insert operation is
 * designed specifically for use with capacity-restricted
 * <tt>Deque</tt> implementations; in most implementations, insert
 * operations cannot fail.
 *
 * <p>The twelve methods described above are summarized in the
 * following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>First Element (Head)</b></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>Last Element (Tail)</b></td>
 *  </tr>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *    <td>{@link #offerFirst offerFirst(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *    <td>{@link #removeLast removeLast()}</td>
 *    <td>{@link #pollLast pollLast()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #getFirst getFirst()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *    <td>{@link #getLast getLast()}</td>
 *    <td>{@link #peekLast peekLast()}</td>
 *  </tr>
 * </table>
 *
 * <p>This interface extends the {@link Queue} interface.  When a deque is
 * used as a queue, FIFO (First-In-First-Out) behavior results.  Elements are
 * added at the end of the deque and removed from the beginning.  The methods
 * inherited from the <tt>Queue</tt> interface are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b><tt>Queue</tt> Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#add add(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#offer offer(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#remove remove()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#poll poll()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#element element()}</td>
 *    <td>{@link #getFirst getFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#peek peek()}</td>
 *    <td>{@link #peek peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Deques can also be used as LIFO (Last-In-First-Out) stacks.  This
 * interface should be used in preference to the legacy {@link Stack} class.
 * When a deque is used as a stack, elements are pushed and popped from the
 * beginning of the deque.  Stack methods are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the table below:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b>Stack Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link #push push(e)}</td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #pop pop()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #peek peek()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Note that the {@link #peek peek} method works equally well when
 * a deque is used as a queue or a stack; in either case, elements are
 * drawn from the beginning of the deque.
 *
 * <p>This interface provides two methods to remove interior
 * elements, {@link #removeFirstOccurrence removeFirstOccurrence} and
 * {@link #removeLastOccurrence removeLastOccurrence}.
 *
 * <p>Unlike the {@link List} interface, this interface does not
 * provide support for indexed access to elements.
 *
 * <p>While <tt>Deque</tt> implementations are not strictly required
 * to prohibit the insertion of null elements, they are strongly
 * encouraged to do so.  Users of any <tt>Deque</tt> implementations
 * that do allow null elements are strongly encouraged <i>not</i> to
 * take advantage of the ability to insert nulls.  This is so because
 * <tt>null</tt> is used as a special return value by various methods
 * to indicated that the deque is empty.
 *
 * <p><tt>Deque</tt> implementations generally do not define
 * element-based versions of the <tt>equals</tt> and <tt>hashCode</tt>
 * methods, but instead inherit the identity-based versions from class
 * <tt>Object</tt>.
 *
 * <p>This interface is a member of the <a
 * href="{@docRoot}/../technotes/guides/collections/index.html"> Java Collections
 * Framework</a>.
 *
 * @author Doug Lea
 * @author Josh Bloch
 * @since  1.6
 * @param <E> the type of elements held in this collection
 */

public interface Deque<E> extends Queue<E> {
    /**
     * Inserts the specified element at the front of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerFirst}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addFirst(E e);

    /**
     * Inserts the specified element at the end of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerLast}.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addLast(E e);

    /**
     * Inserts the specified element at the front of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addFirst} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerFirst(E e);

    /**
     * Inserts the specified element at the end of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addLast} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerLast(E e);

    /**
     * Retrieves and removes the first element of this deque.  This method
     * differs from {@link #pollFirst pollFirst} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeFirst();

    /**
     * Retrieves and removes the last element of this deque.  This method
     * differs from {@link #pollLast pollLast} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeLast();

    /**
     * Retrieves and removes the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollFirst();

    /**
     * Retrieves and removes the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollLast();

    /**
     * Retrieves, but does not remove, the first element of this deque.
     *
     * This method differs from {@link #peekFirst peekFirst} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque.
     * This method differs from {@link #peekLast peekLast} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getLast();

    /**
     * Retrieves, but does not remove, the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekLast();

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeFirstOccurrence(Object o);

    /**
     * Removes the last occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the last element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeLastOccurrence(Object o);

    // *** Queue methods ***

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     * When using a capacity-restricted deque, it is generally preferable to
     * use {@link #offer(Object) offer}.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean add(E e);

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and <tt>false</tt> if no space is currently
     * available.  When using a capacity-restricted deque, this method is
     * generally preferable to the {@link #add} method, which can fail to
     * insert an element only by throwing an exception.
     *
     * <p>This method is equivalent to {@link #offerLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque).
     * This method differs from {@link #poll poll} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque), or returns
     * <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #pollFirst()}.
     *
     * @return the first element of this deque, or <tt>null</tt> if
     *         this deque is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque).
     * This method differs from {@link #peek peek} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #getFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque), or
     * returns <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #peekFirst()}.
     *
     * @return the head of the queue represented by this deque, or
     *         <tt>null</tt> if this deque is empty
     */
    E peek();


    // *** Stack methods ***

    /**
     * Pushes an element onto the stack represented by this deque (in other
     * words, at the head of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void push(E e);

    /**
     * Pops an element from the stack represented by this deque.  In other
     * words, removes and returns the first element of this deque.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this deque (which is the top
     *         of the stack represented by this deque)
     * @throws NoSuchElementException if this deque is empty
     */
    E pop();


    // *** Collection methods ***

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * <p>This method is equivalent to {@link #removeFirstOccurrence}.
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean remove(Object o);

    /**
     * Returns <tt>true</tt> if this deque contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this deque contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this deque is to be tested
     * @return <tt>true</tt> if this deque contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns the number of elements in this deque.
     *
     * @return the number of elements in this deque
     */
    public int size();

    /**
     * Returns an iterator over the elements in this deque in proper sequence.
     * The elements will be returned in order from first (head) to last (tail).
     *
     * @return an iterator over the elements in this deque in proper sequence
     */
    Iterator<E> iterator();

    /**
     * Returns an iterator over the elements in this deque in reverse
     * sequential order.  The elements will be returned in order from
     * last (tail) to first (head).
     *
     * @return an iterator over the elements in this deque in reverse
     * sequence
     */
    Iterator<E> descendingIterator();

}


/*
 * Copyright 1994-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that a method has been passed an illegal or
 * inappropriate argument.
 *
 * @author  unascribed
 * @see     java.lang.Thread#setPriority(int)
 * @since   JDK1.0
 */
public
class IllegalArgumentException extends RuntimeException {
    /**
     * Constructs an <code>IllegalArgumentException</code> with no
     * detail message.
     */
    public IllegalArgumentException() {
        super();
    }

    /**
     * Constructs an <code>IllegalArgumentException</code> with the
     * specified detail message.
     *
     * @param   s   the detail message.
     */
    public IllegalArgumentException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalArgumentException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalArgumentException(Throwable cause) {
        super(cause);
    }

    private static final long serialVersionUID = -5365630128856068164L;
}


/*
 * Copyright 1996-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Signals that a method has been invoked at an illegal or
 * inappropriate time.  In other words, the Java environment or
 * Java application is not in an appropriate state for the requested
 * operation.
 *
 * @author  Jonni Kanerva
 * @since   JDK1.1
 */
public
class IllegalStateException extends RuntimeException {
    /**
     * Constructs an IllegalStateException with no detail message.
     * A detail message is a String that describes this particular exception.
     */
    public IllegalStateException() {
        super();
    }

    /**
     * Constructs an IllegalStateException with the specified detail
     * message.  A detail message is a String that describes this particular
     * exception.
     *
     * @param s the String that contains a detailed message
     */
    public IllegalStateException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalStateException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalStateException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1848914673093119416L;
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator over a collection.  {@code Iterator} takes the place of
 * {@link Enumeration} in the Java Collections Framework.  Iterators
 * differ from enumerations in two ways:
 *
 * <ul>
 *      <li> Iterators allow the caller to remove elements from the
 *           underlying collection during the iteration with well-defined
 *           semantics.
 *      <li> Method names have been improved.
 * </ul>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see ListIterator
 * @see Iterable
 * @since 1.2
 */
public interface Iterator<E> {
    /**
     * Returns {@code true} if the iteration has more elements.
     * (In other words, returns {@code true} if {@link #next} would
     * return an element rather than throwing an exception.)
     *
     * @return {@code true} if the iteration has more elements
     */
    boolean hasNext();

    /**
     * Returns the next element in the iteration.
     *
     * @return the next element in the iteration
     * @throws NoSuchElementException if the iteration has no more elements
     */
    E next();

    /**
     * Removes from the underlying collection the last element returned
     * by this iterator (optional operation).  This method can be called
     * only once per call to {@link #next}.  The behavior of an iterator
     * is unspecified if the underlying collection is modified while the
     * iteration is in progress in any way other than by calling this
     * method.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this iterator
     *
     * @throws IllegalStateException if the {@code next} method has not
     *         yet been called, or the {@code remove} method has already
     *         been called after the last call to the {@code next}
     *         method
     */
    void remove();
}


package javaUtilEx;

public class juLinkedListCreateRemoveElement {
	public static void main(String[] args) {
		Random.args = args;

		LinkedList<Content> l = createList(Random.random());
		Content c = new Content(Random.random());
		if (Random.random() > 42) {
			c = l.get(Random.random());
		}
		l.remove(c);
	}

	public static LinkedList<Content> createList(int n) {
		LinkedList<Content> l = new LinkedList<Content>();
		while (n > 0) {
			l.addLast(new Content(Random.random()));
			n--;
		}
		return l;
	}
}

final class Content {
	int val;

	public Content(int v) {
		this.val = v;
	}

	public int hashCode() {
		return val^31;
	}

	public boolean equals(Object o) {
		if (o instanceof Content) {
			return this.val == ((Content) o).val;
		}
		return false;
	}
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Linked list implementation of the <tt>List</tt> interface.  Implements all
 * optional list operations, and permits all elements (including
 * <tt>null</tt>).  In addition to implementing the <tt>List</tt> interface,
 * the <tt>LinkedList</tt> class provides uniformly named methods to
 * <tt>get</tt>, <tt>remove</tt> and <tt>insert</tt> an element at the
 * beginning and end of the list.  These operations allow linked lists to be
 * used as a stack, {@linkplain Queue queue}, or {@linkplain Deque
 * double-ended queue}. <p>
 *
 * The class implements the <tt>Deque</tt> interface, providing
 * first-in-first-out queue operations for <tt>add</tt>,
 * <tt>poll</tt>, along with other stack and deque operations.<p>
 *
 * All of the operations perform as could be expected for a doubly-linked
 * list.  Operations that index into the list will traverse the list from
 * the beginning or the end, whichever is closer to the specified index.<p>
 *
 * <p><strong>Note that this implementation is not synchronized.</strong>
 * If multiple threads access a linked list concurrently, and at least
 * one of the threads modifies the list structurally, it <i>must</i> be
 * synchronized externally.  (A structural modification is any operation
 * that adds or deletes one or more elements; merely setting the value of
 * an element is not a structural modification.)  This is typically
 * accomplished by synchronizing on some object that naturally
 * encapsulates the list.
 *
 * If no such object exists, the list should be "wrapped" using the
 * {@link Collections#synchronizedList Collections.synchronizedList}
 * method.  This is best done at creation time, to prevent accidental
 * unsynchronized access to the list:<pre>
 *   List list = Collections.synchronizedList(new LinkedList(...));</pre>
 *
 * <p>The iterators returned by this class's <tt>iterator</tt> and
 * <tt>listIterator</tt> methods are <i>fail-fast</i>: if the list is
 * structurally modified at any time after the iterator is created, in
 * any way except through the Iterator's own <tt>remove</tt> or
 * <tt>add</tt> methods, the iterator will throw a {@link
 * ConcurrentModificationException}.  Thus, in the face of concurrent
 * modification, the iterator fails quickly and cleanly, rather than
 * risking arbitrary, non-deterministic behavior at an undetermined
 * time in the future.
 *
 * <p>Note that the fail-fast behavior of an iterator cannot be guaranteed
 * as it is, generally speaking, impossible to make any hard guarantees in the
 * presence of unsynchronized concurrent modification.  Fail-fast iterators
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness:   <i>the fail-fast behavior of iterators
 * should be used only to detect bugs.</i>
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see     List
 * @see     ArrayList
 * @see     Vector
 * @since 1.2
 * @param <E> the type of elements held in this collection
 */

public class LinkedList<E>
    extends AbstractSequentialList<E>
    implements List<E>, Deque<E>
{
    private transient Entry<E> header = new Entry<E>(null, null, null);
    private transient int size = 0;

    /**
     * Constructs an empty list.
     */
    public LinkedList() {
        header.next = header.previous = header;
    }

    /**
     * Constructs a list containing the elements of the specified
     * collection, in the order they are returned by the collection's
     * iterator.
     *
     * @param  c the collection whose elements are to be placed into this list
     * @throws NullPointerException if the specified collection is null
     */
    public LinkedList(Collection<? extends E> c) {
        this();
        addAll(c);
    }

    /**
     * Returns the first element in this list.
     *
     * @return the first element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getFirst() {
        if (size==0)
            throw new NoSuchElementException();

        return header.next.element;
    }

    /**
     * Returns the last element in this list.
     *
     * @return the last element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getLast()  {
        if (size==0)
            throw new NoSuchElementException();

        return header.previous.element;
    }

    /**
     * Removes and returns the first element from this list.
     *
     * @return the first element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeFirst() {
        return remove(header.next);
    }

    /**
     * Removes and returns the last element from this list.
     *
     * @return the last element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeLast() {
        return remove(header.previous);
    }

    /**
     * Inserts the specified element at the beginning of this list.
     *
     * @param e the element to add
     */
    public void addFirst(E e) {
        addBefore(e, header.next);
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     */
    public void addLast(E e) {
        addBefore(e, header);
    }

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     */
    public boolean contains(Object o) {
        return indexOf(o) != -1;
    }

    /**
     * Returns the number of elements in this list.
     *
     * @return the number of elements in this list
     */
    public int size() {
        return size;
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     */
    public boolean add(E e) {
        addBefore(e, header);
        return true;
    }

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present.  If this list does not contain the element, it is
     * unchanged.  More formally, removes the element with the lowest index
     * <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list
     * changed as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     */
    public boolean remove(Object o) {
        if (o==null) {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }
    /**
     * Removes all of the elements from this list.
     */
    public void clear() {
        Entry<E> e = header.next;
        while (e != header) {
            Entry<E> next = e.next;
            e.next = e.previous = null;
            e.element = null;
            e = next;
        }
        header.next = header.previous = header;
        size = 0;
        modCount++;
    }


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        return entry(index).element;
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element.
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E set(int index, E element) {
        Entry<E> e = entry(index);
        E oldVal = e.element;
        e.element = element;
        return oldVal;
    }

    /**
     * Inserts the specified element at the specified position in this list.
     * Shifts the element currently at that position (if any) and any
     * subsequent elements to the right (adds one to their indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public void add(int index, E element) {
        addBefore(element, (index==size ? header : entry(index)));
    }

    /**
     * Removes the element at the specified position in this list.  Shifts any
     * subsequent elements to the left (subtracts one from their indices).
     * Returns the element that was removed from the list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E remove(int index) {
        return remove(entry(index));
    }

    /**
     * Returns the indexed entry.
     */
    private Entry<E> entry(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException();
        Entry<E> e = header;
        if (index < (size >> 1)) {
            for (int i = 0; i <= index; i++)
                e = e.next;
        } else {
            for (int i = size; i > index; i--)
                e = e.previous;
        }
        return e;
    }


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int indexOf(Object o) {
        int index = 0;
        if (o==null) {
            for (Entry e = header.next; e != header; e = e.next) {
                if (e.element==null)
                    return index;
                index++;
            }
        } else {
            for (Entry e = header.next; e != header; e = e.next) {
                if (o.equals(e.element))
                    return index;
                index++;
            }
        }
        return -1;
    }

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int lastIndexOf(Object o) {
        int index = size;
        if (o==null) {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (e.element==null)
                    return index;
            }
        } else {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (o.equals(e.element))
                    return index;
            }
        }
        return -1;
    }

    // Queue operations.

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E peek() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E element() {
        return getFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E poll() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list.
     *
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E remove() {
        return removeFirst();
    }

    /**
     * Adds the specified element as the tail (last element) of this list.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Queue#offer})
     * @since 1.5
     */
    public boolean offer(E e) {
        return add(e);
    }

    // Deque operations
    /**
     * Inserts the specified element at the front of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerFirst})
     * @since 1.6
     */
    public boolean offerFirst(E e) {
        addFirst(e);
        return true;
    }

    /**
     * Inserts the specified element at the end of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerLast})
     * @since 1.6
     */
    public boolean offerLast(E e) {
        addLast(e);
        return true;
    }

    /**
     * Retrieves, but does not remove, the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekFirst() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekLast() {
        if (size==0)
            return null;
        return getLast();
    }

    /**
     * Retrieves and removes the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollFirst() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollLast() {
        if (size==0)
            return null;
        return removeLast();
    }

    /**
     * Pushes an element onto the stack represented by this list.  In other
     * words, inserts the element at the front of this list.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @since 1.6
     */
    public void push(E e) {
        addFirst(e);
    }

    /**
     * Pops an element from the stack represented by this list.  In other
     * words, removes and returns the first element of this list.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this list (which is the top
     *         of the stack represented by this list)
     * @throws NoSuchElementException if this list is empty
     * @since 1.6
     */
    public E pop() {
        return removeFirst();
    }

    /**
     * Removes the first occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeFirstOccurrence(Object o) {
        return remove(o);
    }

    /**
     * Removes the last occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeLastOccurrence(Object o) {
        if (o==null) {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * Returns a list-iterator of the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * Obeys the general contract of <tt>List.listIterator(int)</tt>.<p>
     *
     * The list-iterator is <i>fail-fast</i>: if the list is structurally
     * modified at any time after the Iterator is created, in any way except
     * through the list-iterator's own <tt>remove</tt> or <tt>add</tt>
     * methods, the list-iterator will throw a
     * <tt>ConcurrentModificationException</tt>.  Thus, in the face of
     * concurrent modification, the iterator fails quickly and cleanly, rather
     * than risking arbitrary, non-deterministic behavior at an undetermined
     * time in the future.
     *
     * @param index index of the first element to be returned from the
     *              list-iterator (by a call to <tt>next</tt>)
     * @return a ListIterator of the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     * @see List#listIterator(int)
     */
    public ListIterator<E> listIterator(int index) {
        return new ListItr(index);
    }

    private class ListItr implements ListIterator<E> {
        private Entry<E> lastReturned = header;
        private Entry<E> next;
        private int nextIndex;
        private int expectedModCount = modCount;

        ListItr(int index) {
            if (index < 0 || index > size)
                throw new IndexOutOfBoundsException();
            if (index < (size >> 1)) {
                next = header.next;
                for (nextIndex=0; nextIndex<index; nextIndex++)
                    next = next.next;
            } else {
                next = header;
                for (nextIndex=size; nextIndex>index; nextIndex--)
                    next = next.previous;
            }
        }

        public boolean hasNext() {
            return nextIndex != size;
        }

        public E next() {
            checkForComodification();
            if (nextIndex == size)
                throw new NoSuchElementException();

            lastReturned = next;
            next = next.next;
            nextIndex++;
            return lastReturned.element;
        }

        public boolean hasPrevious() {
            return nextIndex != 0;
        }

        public E previous() {
            if (nextIndex == 0)
                throw new NoSuchElementException();

            lastReturned = next = next.previous;
            nextIndex--;
            checkForComodification();
            return lastReturned.element;
        }

        public int nextIndex() {
            return nextIndex;
        }

        public int previousIndex() {
            return nextIndex-1;
        }

        public void remove() {
            checkForComodification();
            Entry<E> lastNext = lastReturned.next;
            try {
                LinkedList.this.remove(lastReturned);
            } catch (NoSuchElementException e) {
                throw new IllegalStateException();
            }
            if (next==lastReturned)
                next = lastNext;
            else
                nextIndex--;
            lastReturned = header;
            expectedModCount++;
        }

        public void set(E e) {
            if (lastReturned == header)
                throw new IllegalStateException();
            checkForComodification();
            lastReturned.element = e;
        }

        public void add(E e) {
            checkForComodification();
            lastReturned = header;
            addBefore(e, next);
            nextIndex++;
            expectedModCount++;
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private static class Entry<E> {
        E element;
        Entry<E> next;
        Entry<E> previous;

        Entry(E element, Entry<E> next, Entry<E> previous) {
            this.element = element;
            this.next = next;
            this.previous = previous;
        }
    }

    private Entry<E> addBefore(E e, Entry<E> entry) {
        Entry<E> newEntry = new Entry<E>(e, entry, entry.previous);
        newEntry.previous.next = newEntry;
        newEntry.next.previous = newEntry;
        size++;
        modCount++;
        return newEntry;
    }

    private E remove(Entry<E> e) {
        if (e == header)
            throw new NoSuchElementException();

        E result = e.element;
        e.previous.next = e.next;
        e.next.previous = e.previous;
        e.next = e.previous = null;
        e.element = null;
        size--;
        modCount++;
        return result;
    }

    /**
     * @since 1.6
     */
    public Iterator<E> descendingIterator() {
        return new DescendingIterator();
    }

    /** Adapter to provide descending iterators via ListItr.previous */
    private class DescendingIterator implements Iterator {
        final ListItr itr = new ListItr(size());
        public boolean hasNext() {
            return itr.hasPrevious();
        }
        public E next() {
            return itr.previous();
        }
        public void remove() {
            itr.remove();
        }
    }

    /**
     * Returns an array containing all of the elements in this list
     * in proper sequence (from first to last element).
     *
     * <p>The returned array will be "safe" in that no references to it are
     * maintained by this list.  (In other words, this method must allocate
     * a new array).  The caller is thus free to modify the returned array.
     *
     * <p>This method acts as bridge between array-based and collection-based
     * APIs.
     *
     * @return an array containing all of the elements in this list
     *         in proper sequence
     */
    public Object[] toArray() {
        Object[] result = new Object[size];
        int i = 0;
        for (Entry<E> e = header.next; e != header; e = e.next)
            result[i++] = e.element;
        return result;
    }

    private static final long serialVersionUID = 876323262645176354L;
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator for lists that allows the programmer
 * to traverse the list in either direction, modify
 * the list during iteration, and obtain the iterator's
 * current position in the list. A {@code ListIterator}
 * has no current element; its <I>cursor position</I> always
 * lies between the element that would be returned by a call
 * to {@code previous()} and the element that would be
 * returned by a call to {@code next()}.
 * An iterator for a list of length {@code n} has {@code n+1} possible
 * cursor positions, as illustrated by the carets ({@code ^}) below:
 * <PRE>
 *                      Element(0)   Element(1)   Element(2)   ... Element(n-1)
 * cursor positions:  ^            ^            ^            ^                  ^
 * </PRE>
 * Note that the {@link #remove} and {@link #set(Object)} methods are
 * <i>not</i> defined in terms of the cursor position;  they are defined to
 * operate on the last element returned by a call to {@link #next} or
 * {@link #previous()}.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see List
 * @see Iterator
 * @see Enumeration
 * @see List#listIterator()
 * @since   1.2
 */
public interface ListIterator<E> extends Iterator<E> {
    // Query Operations

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the forward direction. (In other words,
     * returns {@code true} if {@link #next} would return an element rather
     * than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the forward direction
     */
    boolean hasNext();

    /**
     * Returns the next element in the list and advances the cursor position.
     * This method may be called repeatedly to iterate through the list,
     * or intermixed with calls to {@link #previous} to go back and forth.
     * (Note that alternating calls to {@code next} and {@code previous}
     * will return the same element repeatedly.)
     *
     * @return the next element in the list
     * @throws NoSuchElementException if the iteration has no next element
     */
    E next();

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the reverse direction.  (In other words,
     * returns {@code true} if {@link #previous} would return an element
     * rather than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the reverse direction
     */
    boolean hasPrevious();

    /**
     * Returns the previous element in the list and moves the cursor
     * position backwards.  This method may be called repeatedly to
     * iterate through the list backwards, or intermixed with calls to
     * {@link #next} to go back and forth.  (Note that alternating calls
     * to {@code next} and {@code previous} will return the same
     * element repeatedly.)
     *
     * @return the previous element in the list
     * @throws NoSuchElementException if the iteration has no previous
     *         element
     */
    E previous();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #next}. (Returns list size if the list
     * iterator is at the end of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code next}, or list size if the list
     *         iterator is at the end of the list
     */
    int nextIndex();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #previous}. (Returns -1 if the list
     * iterator is at the beginning of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code previous}, or -1 if the list
     *         iterator is at the beginning of the list
     */
    int previousIndex();


    // Modification Operations

    /**
     * Removes from the list the last element that was returned by {@link
     * #next} or {@link #previous} (optional operation).  This call can
     * only be made once per call to {@code next} or {@code previous}.
     * It can be made only if {@link #add} has not been
     * called after the last call to {@code next} or {@code previous}.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this list iterator
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void remove();

    /**
     * Replaces the last element returned by {@link #next} or
     * {@link #previous} with the specified element (optional operation).
     * This call can be made only if neither {@link #remove} nor {@link
     * #add} have been called after the last call to {@code next} or
     * {@code previous}.
     *
     * @param e the element with which to replace the last element returned by
     *          {@code next} or {@code previous}
     * @throws UnsupportedOperationException if the {@code set} operation
     *         is not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of the specified
     *         element prevents it from being added to this list
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void set(E e);

    /**
     * Inserts the specified element into the list (optional operation).
     * The element is inserted immediately before the next element that
     * would be returned by {@link #next}, if any, and after the next
     * element that would be returned by {@link #previous}, if any.  (If the
     * list contains no elements, the new element becomes the sole element
     * on the list.)  The new element is inserted before the implicit
     * cursor: a subsequent call to {@code next} would be unaffected, and a
     * subsequent call to {@code previous} would return the new element.
     * (This call increases by one the value that would be returned by a
     * call to {@code nextIndex} or {@code previousIndex}.)
     *
     * @param e the element to insert
     * @throws UnsupportedOperationException if the {@code add} method is
     *         not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of this element
     *         prevents it from being added to this list
     */
    void add(E e);
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An ordered collection (also known as a <i>sequence</i>).  The user of this
 * interface has precise control over where in the list each element is
 * inserted.  The user can access elements by their integer index (position in
 * the list), and search for elements in the list.<p>
 *
 * Unlike sets, lists typically allow duplicate elements.  More formally,
 * lists typically allow pairs of elements <tt>e1</tt> and <tt>e2</tt>
 * such that <tt>e1.equals(e2)</tt>, and they typically allow multiple
 * null elements if they allow null elements at all.  It is not inconceivable
 * that someone might wish to implement a list that prohibits duplicates, by
 * throwing runtime exceptions when the user attempts to insert them, but we
 * expect this usage to be rare.<p>
 *
 * The <tt>List</tt> interface places additional stipulations, beyond those
 * specified in the <tt>Collection</tt> interface, on the contracts of the
 * <tt>iterator</tt>, <tt>add</tt>, <tt>remove</tt>, <tt>equals</tt>, and
 * <tt>hashCode</tt> methods.  Declarations for other inherited methods are
 * also included here for convenience.<p>
 *
 * The <tt>List</tt> interface provides four methods for positional (indexed)
 * access to list elements.  Lists (like Java arrays) are zero based.  Note
 * that these operations may execute in time proportional to the index value
 * for some implementations (the <tt>LinkedList</tt> class, for
 * example). Thus, iterating over the elements in a list is typically
 * preferable to indexing through it if the caller does not know the
 * implementation.<p>
 *
 * The <tt>List</tt> interface provides a special iterator, called a
 * <tt>ListIterator</tt>, that allows element insertion and replacement, and
 * bidirectional access in addition to the normal operations that the
 * <tt>Iterator</tt> interface provides.  A method is provided to obtain a
 * list iterator that starts at a specified position in the list.<p>
 *
 * The <tt>List</tt> interface provides two methods to search for a specified
 * object.  From a performance standpoint, these methods should be used with
 * caution.  In many implementations they will perform costly linear
 * searches.<p>
 *
 * The <tt>List</tt> interface provides two methods to efficiently insert and
 * remove multiple elements at an arbitrary point in the list.<p>
 *
 * Note: While it is permissible for lists to contain themselves as elements,
 * extreme caution is advised: the <tt>equals</tt> and <tt>hashCode</tt>
 * methods are no longer well defined on such a list.
 *
 * <p>Some list implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the list may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see Set
 * @see ArrayList
 * @see LinkedList
 * @see Vector
 * @see Arrays#asList(Object[])
 * @see Collections#nCopies(int, Object)
 * @see Collections#EMPTY_LIST
 * @see AbstractList
 * @see AbstractSequentialList
 * @since 1.2
 */

public interface List<E> extends Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this list.  If this list contains
     * more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this list
     */
    int size();

    /**
     * Returns <tt>true</tt> if this list contains no elements.
     *
     * @return <tt>true</tt> if this list contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    boolean add(E e);

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present (optional operation).  If this list does not contain
     * the element, it is unchanged.  More formally, removes the element with
     * the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list changed
     * as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     */
    boolean remove(Object o);


    // Bulk Modification Operations

    /**
     * Returns <tt>true</tt> if this list contains all of the elements of the
     * specified collection.
     *
     * @param  c collection to be checked for containment in this list
     * @return <tt>true</tt> if this list contains all of the elements of the
     *         specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         list (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Appends all of the elements in the specified collection to the end of
     * this list, in the order that they are returned by the specified
     * collection's iterator (optional operation).  The behavior of this
     * operation is undefined if the specified collection is modified while
     * the operation is in progress.  (Note that this will occur if the
     * specified collection is this list, and it's nonempty.)
     *
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * @param index index at which to insert the first element from the
     *              specified collection
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    boolean addAll(int index, Collection<? extends E> c);

    /**
     * Removes from this list all of its elements that are contained in the
     * specified collection (optional operation).
     *
     * @param c collection containing elements to be removed from this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this list that are contained in the
     * specified collection (optional operation).  In other words, removes
     * from this list all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this list
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * <tt>true</tt> if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements <tt>e1</tt> and
     * <tt>e2</tt> are <i>equal</i> if <tt>(e1==null ? e2==null :
     * e1.equals(e2))</tt>.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.  This
     * definition ensures that the equals method works properly across
     * different implementations of the <tt>List</tt> interface.
     *
     * @param o the object to be compared for equality with this list
     * @return <tt>true</tt> if the specified object is equal to this list
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this list.  The hash code of a list
     * is defined to be the result of the following calculation:
     * <pre>
     *  int hashCode = 1;
     *  for (E e : list)
     *      hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
     * </pre>
     * This ensures that <tt>list1.equals(list2)</tt> implies that
     * <tt>list1.hashCode()==list2.hashCode()</tt> for any two lists,
     * <tt>list1</tt> and <tt>list2</tt>, as required by the general
     * contract of {@link Object#hashCode}.
     *
     * @return the hash code value for this list
     * @see Object#equals(Object)
     * @see #equals(Object)
     */
    int hashCode();


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E get(int index);

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>set</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E set(int index, E element);

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    void add(int index, E element);

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E remove(int index);


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int indexOf(Object o);

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int lastIndexOf(Object o);


    // List Iterators

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     */
    ListIterator<E> listIterator();

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * The specified index indicates the first element that would be
     * returned by an initial call to {@link ListIterator#next next}.
     * An initial call to {@link ListIterator#previous previous} would
     * return the element with the specified index minus one.
     *
     * @param index index of the first element to be returned from the
     *        list iterator (by a call to {@link ListIterator#next next})
     * @return a list iterator over the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         ({@code index < 0 || index > size()})
     */
    ListIterator<E> listIterator(int index);

    // View

    /**
     * Returns a view of the portion of this list between the specified
     * <tt>fromIndex</tt>, inclusive, and <tt>toIndex</tt>, exclusive.  (If
     * <tt>fromIndex</tt> and <tt>toIndex</tt> are equal, the returned list is
     * empty.)  The returned list is backed by this list, so non-structural
     * changes in the returned list are reflected in this list, and vice-versa.
     * The returned list supports all of the optional list operations supported
     * by this list.<p>
     *
     * This method eliminates the need for explicit range operations (of
     * the sort that commonly exist for arrays).  Any operation that expects
     * a list can be used as a range operation by passing a subList view
     * instead of a whole list.  For example, the following idiom
     * removes a range of elements from a list:
     * <pre>
     *      list.subList(from, to).clear();
     * </pre>
     * Similar idioms may be constructed for <tt>indexOf</tt> and
     * <tt>lastIndexOf</tt>, and all of the algorithms in the
     * <tt>Collections</tt> class can be applied to a subList.<p>
     *
     * The semantics of the list returned by this method become undefined if
     * the backing list (i.e., this list) is <i>structurally modified</i> in
     * any way other than via the returned list.  (Structural modifications are
     * those that change the size of this list, or otherwise perturb it in such
     * a fashion that iterations in progress may yield incorrect results.)
     *
     * @param fromIndex low endpoint (inclusive) of the subList
     * @param toIndex high endpoint (exclusive) of the subList
     * @return a view of the specified range within this list
     * @throws IndexOutOfBoundsException for an illegal endpoint index value
     *         (<tt>fromIndex &lt; 0 || toIndex &gt; size ||
     *         fromIndex &gt; toIndex</tt>)
     */
    List<E> subList(int fromIndex, int toIndex);
}


/*
 * Copyright 1994-1998 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown by the <code>nextElement</code> method of an
 * <code>Enumeration</code> to indicate that there are no more
 * elements in the enumeration.
 *
 * @author  unascribed
 * @see     java.util.Enumeration
 * @see     java.util.Enumeration#nextElement()
 * @since   JDK1.0
 */
public
class NoSuchElementException extends RuntimeException {
    /**
     * Constructs a <code>NoSuchElementException</code> with <tt>null</tt>
     * as its error message string.
     */
    public NoSuchElementException() {
        super();
    }

    /**
     * Constructs a <code>NoSuchElementException</code>, saving a reference
     * to the error message string <tt>s</tt> for later retrieval by the
     * <tt>getMessage</tt> method.
     *
     * @param   s   the detail message.
     */
    public NoSuchElementException(String s) {
        super(s);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea with assistance from members of JCP JSR-166
 * Expert Group and released to the public domain, as explained at
 * http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A collection designed for holding elements prior to processing.
 * Besides basic {@link java.util.Collection Collection} operations,
 * queues provide additional insertion, extraction, and inspection
 * operations.  Each of these methods exists in two forms: one throws
 * an exception if the operation fails, the other returns a special
 * value (either <tt>null</tt> or <tt>false</tt>, depending on the
 * operation).  The latter form of the insert operation is designed
 * specifically for use with capacity-restricted <tt>Queue</tt>
 * implementations; in most implementations, insert operations cannot
 * fail.
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Returns special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #add add(e)}</td>
 *    <td>{@link #offer offer(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #remove remove()}</td>
 *    <td>{@link #poll poll()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #element element()}</td>
 *    <td>{@link #peek peek()}</td>
 *  </tr>
 * </table>
 *
 * <p>Queues typically, but do not necessarily, order elements in a
 * FIFO (first-in-first-out) manner.  Among the exceptions are
 * priority queues, which order elements according to a supplied
 * comparator, or the elements' natural ordering, and LIFO queues (or
 * stacks) which order the elements LIFO (last-in-first-out).
 * Whatever the ordering used, the <em>head</em> of the queue is that
 * element which would be removed by a call to {@link #remove() } or
 * {@link #poll()}.  In a FIFO queue, all new elements are inserted at
 * the <em> tail</em> of the queue. Other kinds of queues may use
 * different placement rules.  Every <tt>Queue</tt> implementation
 * must specify its ordering properties.
 *
 * <p>The {@link #offer offer} method inserts an element if possible,
 * otherwise returning <tt>false</tt>.  This differs from the {@link
 * java.util.Collection#add Collection.add} method, which can fail to
 * add an element only by throwing an unchecked exception.  The
 * <tt>offer</tt> method is designed for use when failure is a normal,
 * rather than exceptional occurrence, for example, in fixed-capacity
 * (or &quot;bounded&quot;) queues.
 *
 * <p>The {@link #remove()} and {@link #poll()} methods remove and
 * return the head of the queue.
 * Exactly which element is removed from the queue is a
 * function of the queue's ordering policy, which differs from
 * implementation to implementation. The <tt>remove()</tt> and
 * <tt>poll()</tt> methods differ only in their behavior when the
 * queue is empty: the <tt>remove()</tt> method throws an exception,
 * while the <tt>poll()</tt> method returns <tt>null</tt>.
 *
 * <p>The {@link #element()} and {@link #peek()} methods return, but do
 * not remove, the head of the queue.
 *
 * <p>The <tt>Queue</tt> interface does not define the <i>blocking queue
 * methods</i>, which are common in concurrent programming.  These methods,
 * which wait for elements to appear or for space to become available, are
 * defined in the {@link java.util.concurrent.BlockingQueue} interface, which
 * extends this interface.
 *
 * <p><tt>Queue</tt> implementations generally do not allow insertion
 * of <tt>null</tt> elements, although some implementations, such as
 * {@link LinkedList}, do not prohibit insertion of <tt>null</tt>.
 * Even in the implementations that permit it, <tt>null</tt> should
 * not be inserted into a <tt>Queue</tt>, as <tt>null</tt> is also
 * used as a special return value by the <tt>poll</tt> method to
 * indicate that the queue contains no elements.
 *
 * <p><tt>Queue</tt> implementations generally do not define
 * element-based versions of methods <tt>equals</tt> and
 * <tt>hashCode</tt> but instead inherit the identity based versions
 * from class <tt>Object</tt>, because element-based equality is not
 * always well-defined for queues with the same elements but different
 * ordering properties.
 *
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @see java.util.Collection
 * @see LinkedList
 * @see PriorityQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.BlockingQueue
 * @see java.util.concurrent.ArrayBlockingQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.PriorityBlockingQueue
 * @since 1.5
 * @author Doug Lea
 * @param <E> the type of elements held in this collection
 */
public interface Queue<E> extends Collection<E> {
    /**
     * Inserts the specified element into this queue if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt>
     * if no space is currently available.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean add(E e);

    /**
     * Inserts the specified element into this queue if it is possible to do
     * so immediately without violating capacity restrictions.
     * When using a capacity-restricted queue, this method is generally
     * preferable to {@link #add}, which can fail to insert an element only
     * by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this queue, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of this queue.  This method differs
     * from {@link #poll poll} only in that it throws an exception if this
     * queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of this queue.  This method
     * differs from {@link #peek peek} only in that it throws an exception
     * if this queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E peek();
}


/*
 * Copyright 2000-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Marker interface used by <tt>List</tt> implementations to indicate that
 * they support fast (generally constant time) random access.  The primary
 * purpose of this interface is to allow generic algorithms to alter their
 * behavior to provide good performance when applied to either random or
 * sequential access lists.
 *
 * <p>The best algorithms for manipulating random access lists (such as
 * <tt>ArrayList</tt>) can produce quadratic behavior when applied to
 * sequential access lists (such as <tt>LinkedList</tt>).  Generic list
 * algorithms are encouraged to check whether the given list is an
 * <tt>instanceof</tt> this interface before applying an algorithm that would
 * provide poor performance if it were applied to a sequential access list,
 * and to alter their behavior if necessary to guarantee acceptable
 * performance.
 *
 * <p>It is recognized that the distinction between random and sequential
 * access is often fuzzy.  For example, some <tt>List</tt> implementations
 * provide asymptotically linear access times if they get huge, but constant
 * access times in practice.  Such a <tt>List</tt> implementation
 * should generally implement this interface.  As a rule of thumb, a
 * <tt>List</tt> implementation should implement this interface if,
 * for typical instances of the class, this loop:
 * <pre>
 *     for (int i=0, n=list.size(); i &lt; n; i++)
 *         list.get(i);
 * </pre>
 * runs faster than this loop:
 * <pre>
 *     for (Iterator i=list.iterator(); i.hasNext(); )
 *         i.next();
 * </pre>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @since 1.4
 */
public interface RandomAccess {
}


package javaUtilEx;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that the requested operation is not supported.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @since   1.2
 */
public class UnsupportedOperationException extends RuntimeException {
    /**
     * Constructs an UnsupportedOperationException with no detail message.
     */
    public UnsupportedOperationException() {
    }

    /**
     * Constructs an UnsupportedOperationException with the specified
     * detail message.
     *
     * @param message the detail message
     */
    public UnsupportedOperationException(String message) {
        super(message);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public UnsupportedOperationException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public UnsupportedOperationException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1242599979055084673L;
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>Collection</tt>
 * interface, to minimize the effort required to implement this interface. <p>
 *
 * To implement an unmodifiable collection, the programmer needs only to
 * extend this class and provide implementations for the <tt>iterator</tt> and
 * <tt>size</tt> methods.  (The iterator returned by the <tt>iterator</tt>
 * method must implement <tt>hasNext</tt> and <tt>next</tt>.)<p>
 *
 * To implement a modifiable collection, the programmer must additionally
 * override this class's <tt>add</tt> method (which otherwise throws an
 * <tt>UnsupportedOperationException</tt>), and the iterator returned by the
 * <tt>iterator</tt> method must additionally implement its <tt>remove</tt>
 * method.<p>
 *
 * The programmer should generally provide a void (no argument) and
 * <tt>Collection</tt> constructor, as per the recommendation in the
 * <tt>Collection</tt> interface specification.<p>
 *
 * The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if
 * the collection being implemented admits a more efficient implementation.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @since 1.2
 */

public abstract class AbstractCollection<E> implements Collection<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractCollection() {
    }

    // Query Operations

    /**
     * Returns an iterator over the elements contained in this collection.
     *
     * @return an iterator over the elements contained in this collection
     */
    public abstract Iterator<E> iterator();

    public abstract int size();

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns <tt>size() == 0</tt>.
     */
    public boolean isEmpty() {
        return size() == 0;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the elements in the collection,
     * checking each element in turn for equality with the specified element.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public boolean contains(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return true;
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return true;
        }
        return false;
    }

    // Modification Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * <tt>UnsupportedOperationException</tt>.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     */
    public boolean add(E e) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the collection looking for the
     * specified element.  If it finds the element, it removes the element
     * from the collection using the iterator's remove method.
     *
     * <p>Note that this implementation throws an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's iterator method does not implement the <tt>remove</tt>
     * method and this collection contains the specified object.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     */
    public boolean remove(Object o) {
        Iterator<E> e = iterator();
        if (o==null) {
            while (e.hasNext()) {
                if (e.next()==null) {
                    e.remove();
                    return true;
                }
            }
        } else {
            while (e.hasNext()) {
                if (o.equals(e.next())) {
                    e.remove();
                    return true;
                }
            }
        }
        return false;
    }


    // Bulk Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection,
     * checking each element returned by the iterator in turn to see
     * if it's contained in this collection.  If all elements are so
     * contained <tt>true</tt> is returned, otherwise <tt>false</tt>.
     *
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @see #contains(Object)
     */
    public boolean containsAll(Collection<?> c) {
        Iterator<?> e = c.iterator();
        while (e.hasNext())
            if (!contains(e.next()))
                return false;
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over the specified collection, and adds
     * each object returned by the iterator to this collection, in turn.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> unless <tt>add</tt> is
     * overridden (assuming the specified collection is non-empty).
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IllegalStateException         {@inheritDoc}
     *
     * @see #add(Object)
     */
    public boolean addAll(Collection<? extends E> c) {
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            if (add(e.next()))
                modified = true;
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's so contained, it's removed from
     * this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements in common with the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean removeAll(Collection<?> c) {
        boolean modified = false;
        Iterator<?> e = iterator();
        while (e.hasNext()) {
            if (c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, checking each
     * element returned by the iterator in turn to see if it's contained
     * in the specified collection.  If it's not so contained, it's removed
     * from this collection with the iterator's <tt>remove</tt> method.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by the
     * <tt>iterator</tt> method does not implement the <tt>remove</tt> method
     * and this collection contains one or more elements not present in the
     * specified collection.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     *
     * @see #remove(Object)
     * @see #contains(Object)
     */
    public boolean retainAll(Collection<?> c) {
        boolean modified = false;
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            if (!c.contains(e.next())) {
                e.remove();
                modified = true;
            }
        }
        return modified;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation iterates over this collection, removing each
     * element using the <tt>Iterator.remove</tt> operation.  Most
     * implementations will probably choose to override this method for
     * efficiency.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the iterator returned by this
     * collection's <tt>iterator</tt> method does not implement the
     * <tt>remove</tt> method and this collection is non-empty.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     */
    public void clear() {
        Iterator<E> e = iterator();
        while (e.hasNext()) {
            e.next();
            e.remove();
        }
    }


    //  String conversion

    /**
     * Returns a string representation of this collection.  The string
     * representation consists of a list of the collection's elements in the
     * order they are returned by its iterator, enclosed in square brackets
     * (<tt>"[]"</tt>).  Adjacent elements are separated by the characters
     * <tt>", "</tt> (comma and space).  Elements are converted to strings as
     * by {@link String#valueOf(Object)}.
     *
     * @return a string representation of this collection
     */
    public String toString() {
        Iterator<E> i = iterator();
        if (! i.hasNext())
            return "[]";

        String sb = "";
        sb = sb + "[";
        for (;;) {
            E e = i.next();
            sb = sb + (e == this ? "(this Collection)" : e);
            if (! i.hasNext()) {
                sb = sb + "]";
		return sb;
            }
            sb = sb + ", ";
        }
    }

}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the {@link List}
 * interface to minimize the effort required to implement this interface
 * backed by a "random access" data store (such as an array).  For sequential
 * access data (such as a linked list), {@link AbstractSequentialList} should
 * be used in preference to this class.
 *
 * <p>To implement an unmodifiable list, the programmer needs only to extend
 * this class and provide implementations for the {@link #get(int)} and
 * {@link List#size() size()} methods.
 *
 * <p>To implement a modifiable list, the programmer must additionally
 * override the {@link #set(int, Object) set(int, E)} method (which otherwise
 * throws an {@code UnsupportedOperationException}).  If the list is
 * variable-size the programmer must additionally override the
 * {@link #add(int, Object) add(int, E)} and {@link #remove(int)} methods.
 *
 * <p>The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the {@link Collection} interface
 * specification.
 *
 * <p>Unlike the other abstract collection implementations, the programmer does
 * <i>not</i> have to provide an iterator implementation; the iterator and
 * list iterator are implemented by this class, on top of the "random access"
 * methods:
 * {@link #get(int)},
 * {@link #set(int, Object) set(int, E)},
 * {@link #add(int, Object) add(int, E)} and
 * {@link #remove(int)}.
 *
 * <p>The documentation for each non-abstract method in this class describes its
 * implementation in detail.  Each of these methods may be overridden if the
 * collection being implemented admits a more efficient implementation.
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @since 1.2
 */

public abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractList() {
    }

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * <p>This implementation calls {@code add(size(), e)}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @param e element to be appended to this list
     * @return {@code true} (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the {@code add} operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    public boolean add(E e) {
        add(size(), e);
        return true;
    }

    /**
     * {@inheritDoc}
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    abstract public E get(int index);

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        throw new UnsupportedOperationException();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation always throws an
     * {@code UnsupportedOperationException}.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        throw new UnsupportedOperationException();
    }


    // Search Operations

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator (with
     * {@code listIterator()}).  Then, it iterates over the list until the
     * specified element is found or the end of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int indexOf(Object o) {
        ListIterator<E> e = listIterator();
        if (o==null) {
            while (e.hasNext())
                if (e.next()==null)
                    return e.previousIndex();
        } else {
            while (e.hasNext())
                if (o.equals(e.next()))
                    return e.previousIndex();
        }
        return -1;
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation first gets a list iterator that points to the end
     * of the list (with {@code listIterator(size())}).  Then, it iterates
     * backwards over the list until the specified element is found, or the
     * beginning of the list is reached.
     *
     * @throws ClassCastException   {@inheritDoc}
     * @throws NullPointerException {@inheritDoc}
     */
    public int lastIndexOf(Object o) {
        ListIterator<E> e = listIterator(size());
        if (o==null) {
            while (e.hasPrevious())
                if (e.previous()==null)
                    return e.nextIndex();
        } else {
            while (e.hasPrevious())
                if (o.equals(e.previous()))
                    return e.nextIndex();
        }
        return -1;
    }


    // Bulk Operations

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * <p>This implementation calls {@code removeRange(0, size())}.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless {@code remove(int
     * index)} or {@code removeRange(int fromIndex, int toIndex)} is
     * overridden.
     *
     * @throws UnsupportedOperationException if the {@code clear} operation
     *         is not supported by this list
     */
    public void clear() {
        removeRange(0, size());
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation gets an iterator over the specified collection
     * and iterates over it, inserting the elements obtained from the
     * iterator into this list at the appropriate position, one at a time,
     * using {@code add(int, E)}.
     * Many implementations will override this method for efficiency.
     *
     * <p>Note that this implementation throws an
     * {@code UnsupportedOperationException} unless
     * {@link #add(int, Object) add(int, E)} is overridden.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        boolean modified = false;
        Iterator<? extends E> e = c.iterator();
        while (e.hasNext()) {
            add(index++, e.next());
            modified = true;
        }
        return modified;
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * <p>This implementation returns a straightforward implementation of the
     * iterator interface, relying on the backing list's {@code size()},
     * {@code get(int)}, and {@code remove(int)} methods.
     *
     * <p>Note that the iterator returned by this method will throw an
     * {@link UnsupportedOperationException} in response to its
     * {@code remove} method unless the list's {@code remove(int)} method is
     * overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification
     * for the (protected) {@link #modCount} field.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    public Iterator<E> iterator() {
        return new Itr();
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns {@code listIterator(0)}.
     *
     * @see #listIterator(int)
     */
    public ListIterator<E> listIterator() {
        return listIterator(0);
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a straightforward implementation of the
     * {@code ListIterator} interface that extends the implementation of the
     * {@code Iterator} interface returned by the {@code iterator()} method.
     * The {@code ListIterator} implementation relies on the backing list's
     * {@code get(int)}, {@code set(int, E)}, {@code add(int, E)}
     * and {@code remove(int)} methods.
     *
     * <p>Note that the list iterator returned by this implementation will
     * throw an {@link UnsupportedOperationException} in response to its
     * {@code remove}, {@code set} and {@code add} methods unless the
     * list's {@code remove(int)}, {@code set(int, E)}, and
     * {@code add(int, E)} methods are overridden.
     *
     * <p>This implementation can be made to throw runtime exceptions in the
     * face of concurrent modification, as described in the specification for
     * the (protected) {@link #modCount} field.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public ListIterator<E> listIterator(final int index) {
        rangeCheckForAdd(index);

        return new ListItr(index);
    }

    private class Itr implements Iterator<E> {
        /**
         * Index of element to be returned by subsequent call to next.
         */
        int cursor = 0;

        /**
         * Index of element returned by most recent call to next or
         * previous.  Reset to -1 if this element is deleted by a call
         * to remove.
         */
        int lastRet = -1;

        /**
         * The modCount value that the iterator believes that the backing
         * List should have.  If this expectation is violated, the iterator
         * has detected concurrent modification.
         */
        int expectedModCount = modCount;

        public boolean hasNext() {
            return cursor != size();
        }

        public E next() {
            checkForComodification();
            try {
                int i = cursor;
                E next = get(i);
                lastRet = i;
                cursor = i + 1;
                return next;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public void remove() {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.remove(lastRet);
                if (lastRet < cursor)
                    cursor--;
                lastRet = -1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException e) {
                throw new ConcurrentModificationException();
            }
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private class ListItr extends Itr implements ListIterator<E> {
        ListItr(int index) {
            cursor = index;
        }

        public boolean hasPrevious() {
            return cursor != 0;
        }

        public E previous() {
            checkForComodification();
            try {
                int i = cursor - 1;
                E previous = get(i);
                lastRet = cursor = i;
                return previous;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
        }

        public int nextIndex() {
            return cursor;
        }

        public int previousIndex() {
            return cursor-1;
        }

        public void set(E e) {
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.set(lastRet, e);
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }

        public void add(E e) {
            checkForComodification();

            try {
                int i = cursor;
                AbstractList.this.add(i, e);
                lastRet = -1;
                cursor = i + 1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
        }
    }

    /**
     * {@inheritDoc}
     *
     * <p>This implementation returns a list that subclasses
     * {@code AbstractList}.  The subclass stores, in private fields, the
     * offset of the subList within the backing list, the size of the subList
     * (which can change over its lifetime), and the expected
     * {@code modCount} value of the backing list.  There are two variants
     * of the subclass, one of which implements {@code RandomAccess}.
     * If this list implements {@code RandomAccess} the returned list will
     * be an instance of the subclass that implements {@code RandomAccess}.
     *
     * <p>The subclass's {@code set(int, E)}, {@code get(int)},
     * {@code add(int, E)}, {@code remove(int)}, {@code addAll(int,
     * Collection)} and {@code removeRange(int, int)} methods all
     * delegate to the corresponding methods on the backing abstract list,
     * after bounds-checking the index and adjusting for the offset.  The
     * {@code addAll(Collection c)} method merely returns {@code addAll(size,
     * c)}.
     *
     * <p>The {@code listIterator(int)} method returns a "wrapper object"
     * over a list iterator on the backing list, which is created with the
     * corresponding method on the backing list.  The {@code iterator} method
     * merely returns {@code listIterator()}, and the {@code size} method
     * merely returns the subclass's {@code size} field.
     *
     * <p>All methods first check to see if the actual {@code modCount} of
     * the backing list is equal to its expected value, and throw a
     * {@code ConcurrentModificationException} if it is not.
     *
     * @throws IndexOutOfBoundsException if an endpoint index value is out of range
     *         {@code (fromIndex < 0 || toIndex > size)}
     * @throws IllegalArgumentException if the endpoint indices are out of order
     *         {@code (fromIndex > toIndex)}
     */
    public List<E> subList(int fromIndex, int toIndex) {
        return (this instanceof RandomAccess ?
                new RandomAccessSubList<E>(this, fromIndex, toIndex) :
                new SubList<E>(this, fromIndex, toIndex));
    }

    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * {@code true} if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements {@code e1} and
     * {@code e2} are <i>equal</i> if {@code (e1==null ? e2==null :
     * e1.equals(e2))}.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.<p>
     *
     * This implementation first checks if the specified object is this
     * list. If so, it returns {@code true}; if not, it checks if the
     * specified object is a list. If not, it returns {@code false}; if so,
     * it iterates over both lists, comparing corresponding pairs of elements.
     * If any comparison returns {@code false}, this method returns
     * {@code false}.  If either iterator runs out of elements before the
     * other it returns {@code false} (as the lists are of unequal length);
     * otherwise it returns {@code true} when the iterations complete.
     *
     * @param o the object to be compared for equality with this list
     * @return {@code true} if the specified object is equal to this list
     */
    public boolean equals(Object o) {
        if (o == this)
            return true;
        if (!(o instanceof List))
            return false;

        ListIterator<E> e1 = listIterator();
        ListIterator e2 = ((List) o).listIterator();
        while(e1.hasNext() && e2.hasNext()) {
            E o1 = e1.next();
            Object o2 = e2.next();
            if (!(o1==null ? o2==null : o1.equals(o2)))
                return false;
        }
        return !(e1.hasNext() || e2.hasNext());
    }

    /**
     * Returns the hash code value for this list.
     *
     * <p>This implementation uses exactly the code that is used to define the
     * list hash function in the documentation for the {@link List#hashCode}
     * method.
     *
     * @return the hash code value for this list
     */
    public int hashCode() {
        int hashCode = 1;
        Iterator<E> it = this.iterator();
        while (it.hasNext()) {
            E e = it.next();
            hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
        }
        return hashCode;
    }

    /**
     * Removes from this list all of the elements whose index is between
     * {@code fromIndex}, inclusive, and {@code toIndex}, exclusive.
     * Shifts any succeeding elements to the left (reduces their index).
     * This call shortens the list by {@code (toIndex - fromIndex)} elements.
     * (If {@code toIndex==fromIndex}, this operation has no effect.)
     *
     * <p>This method is called by the {@code clear} operation on this list
     * and its subLists.  Overriding this method to take advantage of
     * the internals of the list implementation can <i>substantially</i>
     * improve the performance of the {@code clear} operation on this list
     * and its subLists.
     *
     * <p>This implementation gets a list iterator positioned before
     * {@code fromIndex}, and repeatedly calls {@code ListIterator.next}
     * followed by {@code ListIterator.remove} until the entire range has
     * been removed.  <b>Note: if {@code ListIterator.remove} requires linear
     * time, this implementation requires quadratic time.</b>
     *
     * @param fromIndex index of first element to be removed
     * @param toIndex index after last element to be removed
     */
    protected void removeRange(int fromIndex, int toIndex) {
        ListIterator<E> it = listIterator(fromIndex);
        for (int i=0, n=toIndex-fromIndex; i<n; i++) {
            it.next();
            it.remove();
        }
    }

    /**
     * The number of times this list has been <i>structurally modified</i>.
     * Structural modifications are those that change the size of the
     * list, or otherwise perturb it in such a fashion that iterations in
     * progress may yield incorrect results.
     *
     * <p>This field is used by the iterator and list iterator implementation
     * returned by the {@code iterator} and {@code listIterator} methods.
     * If the value of this field changes unexpectedly, the iterator (or list
     * iterator) will throw a {@code ConcurrentModificationException} in
     * response to the {@code next}, {@code remove}, {@code previous},
     * {@code set} or {@code add} operations.  This provides
     * <i>fail-fast</i> behavior, rather than non-deterministic behavior in
     * the face of concurrent modification during iteration.
     *
     * <p><b>Use of this field by subclasses is optional.</b> If a subclass
     * wishes to provide fail-fast iterators (and list iterators), then it
     * merely has to increment this field in its {@code add(int, E)} and
     * {@code remove(int)} methods (and any other methods that it overrides
     * that result in structural modifications to the list).  A single call to
     * {@code add(int, E)} or {@code remove(int)} must add no more than
     * one to this field, or the iterators (and list iterators) will throw
     * bogus {@code ConcurrentModificationExceptions}.  If an implementation
     * does not wish to provide fail-fast iterators, this field may be
     * ignored.
     */
    protected transient int modCount = 0;

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size())
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }
}

class SubList<E> extends AbstractList<E> {
    private final AbstractList<E> l;
    private final int offset;
    private int size;

    SubList(AbstractList<E> list, int fromIndex, int toIndex) {
        if (fromIndex < 0)
            throw new IndexOutOfBoundsException();
        if (toIndex > list.size())
            throw new IndexOutOfBoundsException();
        if (fromIndex > toIndex)
            throw new IllegalArgumentException();
        l = list;
        offset = fromIndex;
        size = toIndex - fromIndex;
        this.modCount = l.modCount;
    }

    public E set(int index, E element) {
        rangeCheck(index);
        checkForComodification();
        return l.set(index+offset, element);
    }

    public E get(int index) {
        rangeCheck(index);
        checkForComodification();
        return l.get(index+offset);
    }

    public int size() {
        checkForComodification();
        return size;
    }

    public void add(int index, E element) {
        rangeCheckForAdd(index);
        checkForComodification();
        l.add(index+offset, element);
        this.modCount = l.modCount;
        size++;
    }

    public E remove(int index) {
        rangeCheck(index);
        checkForComodification();
        E result = l.remove(index+offset);
        this.modCount = l.modCount;
        size--;
        return result;
    }

    protected void removeRange(int fromIndex, int toIndex) {
        checkForComodification();
        l.removeRange(fromIndex+offset, toIndex+offset);
        this.modCount = l.modCount;
        size -= (toIndex-fromIndex);
    }

    public boolean addAll(Collection<? extends E> c) {
        return addAll(size, c);
    }

    public boolean addAll(int index, Collection<? extends E> c) {
        rangeCheckForAdd(index);
        int cSize = c.size();
        if (cSize==0)
            return false;

        checkForComodification();
        l.addAll(offset+index, c);
        this.modCount = l.modCount;
        size += cSize;
        return true;
    }

    public Iterator<E> iterator() {
        return listIterator();
    }

    public ListIterator<E> listIterator(final int index) {
        checkForComodification();
        rangeCheckForAdd(index);

        return new ListIterator<E>() {
            private final ListIterator<E> i = l.listIterator(index+offset);

            public boolean hasNext() {
                return nextIndex() < size;
            }

            public E next() {
                if (hasNext())
                    return i.next();
                else
                    throw new NoSuchElementException();
            }

            public boolean hasPrevious() {
                return previousIndex() >= 0;
            }

            public E previous() {
                if (hasPrevious())
                    return i.previous();
                else
                    throw new NoSuchElementException();
            }

            public int nextIndex() {
                return i.nextIndex() - offset;
            }

            public int previousIndex() {
                return i.previousIndex() - offset;
            }

            public void remove() {
                i.remove();
                SubList.this.modCount = l.modCount;
                size--;
            }

            public void set(E e) {
                i.set(e);
            }

            public void add(E e) {
                i.add(e);
                SubList.this.modCount = l.modCount;
                size++;
            }
        };
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new SubList<E>(this, fromIndex, toIndex);
    }

    private void rangeCheck(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private void rangeCheckForAdd(int index) {
        if (index < 0 || index > size)
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
    }

    private String outOfBoundsMsg(int index) {
        return "";
    }

    private void checkForComodification() {
        if (this.modCount != l.modCount)
            throw new ConcurrentModificationException();
    }
}

class RandomAccessSubList<E> extends SubList<E> implements RandomAccess {
    RandomAccessSubList(AbstractList<E> list, int fromIndex, int toIndex) {
        super(list, fromIndex, toIndex);
    }

    public List<E> subList(int fromIndex, int toIndex) {
        return new RandomAccessSubList<E>(this, fromIndex, toIndex);
    }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This class provides a skeletal implementation of the <tt>List</tt>
 * interface to minimize the effort required to implement this interface
 * backed by a "sequential access" data store (such as a linked list).  For
 * random access data (such as an array), <tt>AbstractList</tt> should be used
 * in preference to this class.<p>
 *
 * This class is the opposite of the <tt>AbstractList</tt> class in the sense
 * that it implements the "random access" methods (<tt>get(int index)</tt>,
 * <tt>set(int index, E element)</tt>, <tt>add(int index, E element)</tt> and
 * <tt>remove(int index)</tt>) on top of the list's list iterator, instead of
 * the other way around.<p>
 *
 * To implement a list the programmer needs only to extend this class and
 * provide implementations for the <tt>listIterator</tt> and <tt>size</tt>
 * methods.  For an unmodifiable list, the programmer need only implement the
 * list iterator's <tt>hasNext</tt>, <tt>next</tt>, <tt>hasPrevious</tt>,
 * <tt>previous</tt> and <tt>index</tt> methods.<p>
 *
 * For a modifiable list the programmer should additionally implement the list
 * iterator's <tt>set</tt> method.  For a variable-size list the programmer
 * should additionally implement the list iterator's <tt>remove</tt> and
 * <tt>add</tt> methods.<p>
 *
 * The programmer should generally provide a void (no argument) and collection
 * constructor, as per the recommendation in the <tt>Collection</tt> interface
 * specification.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see List
 * @see AbstractList
 * @see AbstractCollection
 * @since 1.2
 */

public abstract class AbstractSequentialList<E> extends AbstractList<E> {
    /**
     * Sole constructor.  (For invocation by subclass constructors, typically
     * implicit.)
     */
    protected AbstractSequentialList() {
    }

    /**
     * Returns the element at the specified position in this list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the element using <tt>ListIterator.next</tt> and returns it.
     *
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        try {
            return listIterator(index).next();
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
     * the current element using <tt>ListIterator.next</tt> and replaces it
     * with <tt>ListIterator.set</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>set</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E set(int index, E element) {
        try {
            ListIterator<E> e = listIterator(index);
            E oldVal = e.next();
            e.set(element);
            return oldVal;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it
     * inserts the specified element with <tt>ListIterator.add</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>add</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public void add(int index, E element) {
        try {
            listIterator(index).add(element);
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * <p>This implementation first gets a list iterator pointing to the
     * indexed element (with <tt>listIterator(index)</tt>).  Then, it removes
     * the element with <tt>ListIterator.remove</tt>.
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator does not
     * implement the <tt>remove</tt> operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public E remove(int index) {
        try {
            ListIterator<E> e = listIterator(index);
            E outCast = e.next();
            e.remove();
            return outCast;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Bulk Operations

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * <p>This implementation gets an iterator over the specified collection and
     * a list iterator over this list pointing to the indexed element (with
     * <tt>listIterator(index)</tt>).  Then, it iterates over the specified
     * collection, inserting the elements obtained from the iterator into this
     * list, one at a time, using <tt>ListIterator.add</tt> followed by
     * <tt>ListIterator.next</tt> (to skip over the added element).
     *
     * <p>Note that this implementation will throw an
     * <tt>UnsupportedOperationException</tt> if the list iterator returned by
     * the <tt>listIterator</tt> method does not implement the <tt>add</tt>
     * operation.
     *
     * @throws UnsupportedOperationException {@inheritDoc}
     * @throws ClassCastException            {@inheritDoc}
     * @throws NullPointerException          {@inheritDoc}
     * @throws IllegalArgumentException      {@inheritDoc}
     * @throws IndexOutOfBoundsException     {@inheritDoc}
     */
    public boolean addAll(int index, Collection<? extends E> c) {
        try {
            boolean modified = false;
            ListIterator<E> e1 = listIterator(index);
            Iterator<? extends E> e2 = c.iterator();
            while (e2.hasNext()) {
                e1.add(e2.next());
                modified = true;
            }
            return modified;
        } catch (NoSuchElementException exc) {
            throw new IndexOutOfBoundsException();
        }
    }


    // Iterators

    /**
     * Returns an iterator over the elements in this list (in proper
     * sequence).<p>
     *
     * This implementation merely returns a list iterator over the list.
     *
     * @return an iterator over the elements in this list (in proper sequence)
     */
    public Iterator<E> iterator() {
        return listIterator();
    }

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @param  index index of first element to be returned from the list
     *         iterator (by a call to the <code>next</code> method)
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public abstract ListIterator<E> listIterator(int index);
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * The root interface in the <i>collection hierarchy</i>.  A collection
 * represents a group of objects, known as its <i>elements</i>.  Some
 * collections allow duplicate elements and others do not.  Some are ordered
 * and others unordered.  The JDK does not provide any <i>direct</i>
 * implementations of this interface: it provides implementations of more
 * specific subinterfaces like <tt>Set</tt> and <tt>List</tt>.  This interface
 * is typically used to pass collections around and manipulate them where
 * maximum generality is desired.
 *
 * <p><i>Bags</i> or <i>multisets</i> (unordered collections that may contain
 * duplicate elements) should implement this interface directly.
 *
 * <p>All general-purpose <tt>Collection</tt> implementation classes (which
 * typically implement <tt>Collection</tt> indirectly through one of its
 * subinterfaces) should provide two "standard" constructors: a void (no
 * arguments) constructor, which creates an empty collection, and a
 * constructor with a single argument of type <tt>Collection</tt>, which
 * creates a new collection with the same elements as its argument.  In
 * effect, the latter constructor allows the user to copy any collection,
 * producing an equivalent collection of the desired implementation type.
 * There is no way to enforce this convention (as interfaces cannot contain
 * constructors) but all of the general-purpose <tt>Collection</tt>
 * implementations in the Java platform libraries comply.
 *
 * <p>The "destructive" methods contained in this interface, that is, the
 * methods that modify the collection on which they operate, are specified to
 * throw <tt>UnsupportedOperationException</tt> if this collection does not
 * support the operation.  If this is the case, these methods may, but are not
 * required to, throw an <tt>UnsupportedOperationException</tt> if the
 * invocation would have no effect on the collection.  For example, invoking
 * the {@link #addAll(Collection)} method on an unmodifiable collection may,
 * but is not required to, throw the exception if the collection to be added
 * is empty.
 *
 * <p>Some collection implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the collection may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>It is up to each collection to determine its own synchronization
 * policy.  In the absence of a stronger guarantee by the
 * implementation, undefined behavior may result from the invocation
 * of any method on a collection that is being mutated by another
 * thread; this includes direct invocations, passing the collection to
 * a method that might perform invocations, and using an existing
 * iterator to examine the collection.
 *
 * <p>Many methods in Collections Framework interfaces are defined in
 * terms of the {@link Object#equals(Object) equals} method.  For example,
 * the specification for the {@link #contains(Object) contains(Object o)}
 * method says: "returns <tt>true</tt> if and only if this collection
 * contains at least one element <tt>e</tt> such that
 * <tt>(o==null ? e==null : o.equals(e))</tt>."  This specification should
 * <i>not</i> be construed to imply that invoking <tt>Collection.contains</tt>
 * with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be
 * invoked for any element <tt>e</tt>.  Implementations are free to implement
 * optimizations whereby the <tt>equals</tt> invocation is avoided, for
 * example, by first comparing the hash codes of the two elements.  (The
 * {@link Object#hashCode()} specification guarantees that two objects with
 * unequal hash codes cannot be equal.)  More generally, implementations of
 * the various Collections Framework interfaces are free to take advantage of
 * the specified behavior of underlying {@link Object} methods wherever the
 * implementor deems it appropriate.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see     Set
 * @see     List
 * @see     Map
 * @see     SortedSet
 * @see     SortedMap
 * @see     HashSet
 * @see     TreeSet
 * @see     ArrayList
 * @see     LinkedList
 * @see     Vector
 * @see     Collections
 * @see     Arrays
 * @see     AbstractCollection
 * @since 1.2
 */

public interface Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this collection.  If this collection
     * contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this collection
     */
    int size();

    /**
     * Returns <tt>true</tt> if this collection contains no elements.
     *
     * @return <tt>true</tt> if this collection contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this collection contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this collection
     * contains at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this collection is to be tested
     * @return <tt>true</tt> if this collection contains the specified
     *         element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this collection.  There are no
     * guarantees concerning the order in which the elements are returned
     * (unless this collection is an instance of some class that provides a
     * guarantee).
     *
     * @return an <tt>Iterator</tt> over the elements in this collection
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Ensures that this collection contains the specified element (optional
     * operation).  Returns <tt>true</tt> if this collection changed as a
     * result of the call.  (Returns <tt>false</tt> if this collection does
     * not permit duplicates and already contains the specified element.)<p>
     *
     * Collections that support this operation may place limitations on what
     * elements may be added to this collection.  In particular, some
     * collections will refuse to add <tt>null</tt> elements, and others will
     * impose restrictions on the type of elements that may be added.
     * Collection classes should clearly specify in their documentation any
     * restrictions on what elements may be added.<p>
     *
     * If a collection refuses to add a particular element for any reason
     * other than that it already contains the element, it <i>must</i> throw
     * an exception (rather than returning <tt>false</tt>).  This preserves
     * the invariant that a collection always contains the specified element
     * after this call returns.
     *
     * @param e element whose presence in this collection is to be ensured
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this collection
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements
     * @throws IllegalArgumentException if some property of the element
     *         prevents it from being added to this collection
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to insertion restrictions
     */
    boolean add(E e);

    /**
     * Removes a single instance of the specified element from this
     * collection, if it is present (optional operation).  More formally,
     * removes an element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
     * this collection contains one or more such elements.  Returns
     * <tt>true</tt> if this collection contained the specified element (or
     * equivalently, if this collection changed as a result of the call).
     *
     * @param o element to be removed from this collection, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this collection (optional)
     * @throws NullPointerException if the specified element is null and this
     *         collection does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this collection
     */
    boolean remove(Object o);


    // Bulk Operations

    /**
     * Returns <tt>true</tt> if this collection contains all of the elements
     * in the specified collection.
     *
     * @param  c collection to be checked for containment in this collection
     * @return <tt>true</tt> if this collection contains all of the elements
     *         in the specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         collection (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see    #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Adds all of the elements in the specified collection to this collection
     * (optional operation).  The behavior of this operation is undefined if
     * the specified collection is modified while the operation is in progress.
     * (This implies that the behavior of this call is undefined if the
     * specified collection is this collection, and this collection is
     * nonempty.)
     *
     * @param c collection containing elements to be added to this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this collection
     * @throws NullPointerException if the specified collection contains a
     *         null element and this collection does not permit null elements,
     *         or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this
     *         collection
     * @throws IllegalStateException if not all the elements can be added at
     *         this time due to insertion restrictions
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Removes all of this collection's elements that are also contained in the
     * specified collection (optional operation).  After this call returns,
     * this collection will contain no elements in common with the specified
     * collection.
     *
     * @param c collection containing elements to be removed from this collection
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> method
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not support
     *         null elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this collection that are contained in the
     * specified collection (optional operation).  In other words, removes from
     * this collection all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this collection
     * @return <tt>true</tt> if this collection changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this collection
     * @throws ClassCastException if the types of one or more elements
     *         in this collection are incompatible with the specified
     *         collection (optional)
     * @throws NullPointerException if this collection contains one or more
     *         null elements and the specified collection does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this collection (optional operation).
     * The collection will be empty after this method returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this collection
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this collection for equality. <p>
     *
     * While the <tt>Collection</tt> interface adds no stipulations to the
     * general contract for the <tt>Object.equals</tt>, programmers who
     * implement the <tt>Collection</tt> interface "directly" (in other words,
     * create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt>
     * or a <tt>List</tt>) must exercise care if they choose to override the
     * <tt>Object.equals</tt>.  It is not necessary to do so, and the simplest
     * course of action is to rely on <tt>Object</tt>'s implementation, but
     * the implementor may wish to implement a "value comparison" in place of
     * the default "reference comparison."  (The <tt>List</tt> and
     * <tt>Set</tt> interfaces mandate such value comparisons.)<p>
     *
     * The general contract for the <tt>Object.equals</tt> method states that
     * equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and
     * only if <tt>b.equals(a)</tt>).  The contracts for <tt>List.equals</tt>
     * and <tt>Set.equals</tt> state that lists are only equal to other lists,
     * and sets to other sets.  Thus, a custom <tt>equals</tt> method for a
     * collection class that implements neither the <tt>List</tt> nor
     * <tt>Set</tt> interface must return <tt>false</tt> when this collection
     * is compared to any list or set.  (By the same logic, it is not possible
     * to write a class that correctly implements both the <tt>Set</tt> and
     * <tt>List</tt> interfaces.)
     *
     * @param o object to be compared for equality with this collection
     * @return <tt>true</tt> if the specified object is equal to this
     * collection
     *
     * @see Object#equals(Object)
     * @see Set#equals(Object)
     * @see List#equals(Object)
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this collection.  While the
     * <tt>Collection</tt> interface adds no stipulations to the general
     * contract for the <tt>Object.hashCode</tt> method, programmers should
     * take note that any class that overrides the <tt>Object.equals</tt>
     * method must also override the <tt>Object.hashCode</tt> method in order
     * to satisfy the general contract for the <tt>Object.hashCode</tt>method.
     * In particular, <tt>c1.equals(c2)</tt> implies that
     * <tt>c1.hashCode()==c2.hashCode()</tt>.
     *
     * @return the hash code value for this collection
     *
     * @see Object#hashCode()
     * @see Object#equals(Object)
     */
    int hashCode();
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * This exception may be thrown by methods that have detected concurrent
 * modification of an object when such modification is not permissible.
 * <p>
 * For example, it is not generally permissible for one thread to modify a Collection
 * while another thread is iterating over it.  In general, the results of the
 * iteration are undefined under these circumstances.  Some Iterator
 * implementations (including those of all the general purpose collection implementations
 * provided by the JRE) may choose to throw this exception if this behavior is
 * detected.  Iterators that do this are known as <i>fail-fast</i> iterators,
 * as they fail quickly and cleanly, rather that risking arbitrary,
 * non-deterministic behavior at an undetermined time in the future.
 * <p>
 * Note that this exception does not always indicate that an object has
 * been concurrently modified by a <i>different</i> thread.  If a single
 * thread issues a sequence of method invocations that violates the
 * contract of an object, the object may throw this exception.  For
 * example, if a thread modifies a collection directly while it is
 * iterating over the collection with a fail-fast iterator, the iterator
 * will throw this exception.
 *
 * <p>Note that fail-fast behavior cannot be guaranteed as it is, generally
 * speaking, impossible to make any hard guarantees in the presence of
 * unsynchronized concurrent modification.  Fail-fast operations
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness: <i><tt>ConcurrentModificationException</tt>
 * should be used only to detect bugs.</i>
 *
 * @author  Josh Bloch
 * @see     Collection
 * @see     Iterator
 * @see     ListIterator
 * @see     Vector
 * @see     LinkedList
 * @see     HashSet
 * @see     Hashtable
 * @see     TreeMap
 * @see     AbstractList
 * @since   1.2
 */
public class ConcurrentModificationException extends RuntimeException {
    /**
     * Constructs a ConcurrentModificationException with no
     * detail message.
     */
    public ConcurrentModificationException() {
    }

    /**
     * Constructs a <tt>ConcurrentModificationException</tt> with the
     * specified detail message.
     *
     * @param message the detail message pertaining to this exception.
     */
    public ConcurrentModificationException(String message) {
        super(message);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea and Josh Bloch with assistance from members of
 * JCP JSR-166 Expert Group and released to the public domain, as explained
 * at http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A linear collection that supports element insertion and removal at
 * both ends.  The name <i>deque</i> is short for "double ended queue"
 * and is usually pronounced "deck".  Most <tt>Deque</tt>
 * implementations place no fixed limits on the number of elements
 * they may contain, but this interface supports capacity-restricted
 * deques as well as those with no fixed size limit.
 *
 * <p>This interface defines methods to access the elements at both
 * ends of the deque.  Methods are provided to insert, remove, and
 * examine the element.  Each of these methods exists in two forms:
 * one throws an exception if the operation fails, the other returns a
 * special value (either <tt>null</tt> or <tt>false</tt>, depending on
 * the operation).  The latter form of the insert operation is
 * designed specifically for use with capacity-restricted
 * <tt>Deque</tt> implementations; in most implementations, insert
 * operations cannot fail.
 *
 * <p>The twelve methods described above are summarized in the
 * following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>First Element (Head)</b></td>
 *    <td ALIGN=CENTER COLSPAN = 2> <b>Last Element (Tail)</b></td>
 *  </tr>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *    <td>{@link #offerFirst offerFirst(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *    <td>{@link #removeLast removeLast()}</td>
 *    <td>{@link #pollLast pollLast()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #getFirst getFirst()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *    <td>{@link #getLast getLast()}</td>
 *    <td>{@link #peekLast peekLast()}</td>
 *  </tr>
 * </table>
 *
 * <p>This interface extends the {@link Queue} interface.  When a deque is
 * used as a queue, FIFO (First-In-First-Out) behavior results.  Elements are
 * added at the end of the deque and removed from the beginning.  The methods
 * inherited from the <tt>Queue</tt> interface are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the following table:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b><tt>Queue</tt> Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#add add(e)}</td>
 *    <td>{@link #addLast addLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#offer offer(e)}</td>
 *    <td>{@link #offerLast offerLast(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#remove remove()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#poll poll()}</td>
 *    <td>{@link #pollFirst pollFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#element element()}</td>
 *    <td>{@link #getFirst getFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link java.util.Queue#peek peek()}</td>
 *    <td>{@link #peek peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Deques can also be used as LIFO (Last-In-First-Out) stacks.  This
 * interface should be used in preference to the legacy {@link Stack} class.
 * When a deque is used as a stack, elements are pushed and popped from the
 * beginning of the deque.  Stack methods are precisely equivalent to
 * <tt>Deque</tt> methods as indicated in the table below:
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td ALIGN=CENTER> <b>Stack Method</b></td>
 *    <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 *  </tr>
 *  <tr>
 *    <td>{@link #push push(e)}</td>
 *    <td>{@link #addFirst addFirst(e)}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #pop pop()}</td>
 *    <td>{@link #removeFirst removeFirst()}</td>
 *  </tr>
 *  <tr>
 *    <td>{@link #peek peek()}</td>
 *    <td>{@link #peekFirst peekFirst()}</td>
 *  </tr>
 * </table>
 *
 * <p>Note that the {@link #peek peek} method works equally well when
 * a deque is used as a queue or a stack; in either case, elements are
 * drawn from the beginning of the deque.
 *
 * <p>This interface provides two methods to remove interior
 * elements, {@link #removeFirstOccurrence removeFirstOccurrence} and
 * {@link #removeLastOccurrence removeLastOccurrence}.
 *
 * <p>Unlike the {@link List} interface, this interface does not
 * provide support for indexed access to elements.
 *
 * <p>While <tt>Deque</tt> implementations are not strictly required
 * to prohibit the insertion of null elements, they are strongly
 * encouraged to do so.  Users of any <tt>Deque</tt> implementations
 * that do allow null elements are strongly encouraged <i>not</i> to
 * take advantage of the ability to insert nulls.  This is so because
 * <tt>null</tt> is used as a special return value by various methods
 * to indicated that the deque is empty.
 *
 * <p><tt>Deque</tt> implementations generally do not define
 * element-based versions of the <tt>equals</tt> and <tt>hashCode</tt>
 * methods, but instead inherit the identity-based versions from class
 * <tt>Object</tt>.
 *
 * <p>This interface is a member of the <a
 * href="{@docRoot}/../technotes/guides/collections/index.html"> Java Collections
 * Framework</a>.
 *
 * @author Doug Lea
 * @author Josh Bloch
 * @since  1.6
 * @param <E> the type of elements held in this collection
 */

public interface Deque<E> extends Queue<E> {
    /**
     * Inserts the specified element at the front of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerFirst}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addFirst(E e);

    /**
     * Inserts the specified element at the end of this deque if it is
     * possible to do so immediately without violating capacity restrictions.
     * When using a capacity-restricted deque, it is generally preferable to
     * use method {@link #offerLast}.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void addLast(E e);

    /**
     * Inserts the specified element at the front of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addFirst} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerFirst(E e);

    /**
     * Inserts the specified element at the end of this deque unless it would
     * violate capacity restrictions.  When using a capacity-restricted deque,
     * this method is generally preferable to the {@link #addLast} method,
     * which can fail to insert an element only by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offerLast(E e);

    /**
     * Retrieves and removes the first element of this deque.  This method
     * differs from {@link #pollFirst pollFirst} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeFirst();

    /**
     * Retrieves and removes the last element of this deque.  This method
     * differs from {@link #pollLast pollLast} only in that it throws an
     * exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E removeLast();

    /**
     * Retrieves and removes the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollFirst();

    /**
     * Retrieves and removes the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E pollLast();

    /**
     * Retrieves, but does not remove, the first element of this deque.
     *
     * This method differs from {@link #peekFirst peekFirst} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the head of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque.
     * This method differs from {@link #peekLast peekLast} only in that it
     * throws an exception if this deque is empty.
     *
     * @return the tail of this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E getLast();

    /**
     * Retrieves, but does not remove, the first element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the head of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekFirst();

    /**
     * Retrieves, but does not remove, the last element of this deque,
     * or returns <tt>null</tt> if this deque is empty.
     *
     * @return the tail of this deque, or <tt>null</tt> if this deque is empty
     */
    E peekLast();

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeFirstOccurrence(Object o);

    /**
     * Removes the last occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the last element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean removeLastOccurrence(Object o);

    // *** Queue methods ***

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     * When using a capacity-restricted deque, it is generally preferable to
     * use {@link #offer(Object) offer}.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean add(E e);

    /**
     * Inserts the specified element into the queue represented by this deque
     * (in other words, at the tail of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and <tt>false</tt> if no space is currently
     * available.  When using a capacity-restricted deque, this method is
     * generally preferable to the {@link #add} method, which can fail to
     * insert an element only by throwing an exception.
     *
     * <p>This method is equivalent to {@link #offerLast}.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this deque, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque).
     * This method differs from {@link #poll poll} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of the queue represented by this deque
     * (in other words, the first element of this deque), or returns
     * <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #pollFirst()}.
     *
     * @return the first element of this deque, or <tt>null</tt> if
     *         this deque is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque).
     * This method differs from {@link #peek peek} only in that it throws an
     * exception if this deque is empty.
     *
     * <p>This method is equivalent to {@link #getFirst()}.
     *
     * @return the head of the queue represented by this deque
     * @throws NoSuchElementException if this deque is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of the queue represented by
     * this deque (in other words, the first element of this deque), or
     * returns <tt>null</tt> if this deque is empty.
     *
     * <p>This method is equivalent to {@link #peekFirst()}.
     *
     * @return the head of the queue represented by this deque, or
     *         <tt>null</tt> if this deque is empty
     */
    E peek();


    // *** Stack methods ***

    /**
     * Pushes an element onto the stack represented by this deque (in other
     * words, at the head of this deque) if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an
     * <tt>IllegalStateException</tt> if no space is currently available.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this deque
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this deque
     */
    void push(E e);

    /**
     * Pops an element from the stack represented by this deque.  In other
     * words, removes and returns the first element of this deque.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this deque (which is the top
     *         of the stack represented by this deque)
     * @throws NoSuchElementException if this deque is empty
     */
    E pop();


    // *** Collection methods ***

    /**
     * Removes the first occurrence of the specified element from this deque.
     * If the deque does not contain the element, it is unchanged.
     * More formally, removes the first element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
     * (if such an element exists).
     * Returns <tt>true</tt> if this deque contained the specified element
     * (or equivalently, if this deque changed as a result of the call).
     *
     * <p>This method is equivalent to {@link #removeFirstOccurrence}.
     *
     * @param o element to be removed from this deque, if present
     * @return <tt>true</tt> if an element was removed as a result of this call
     * @throws ClassCastException if the class of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean remove(Object o);

    /**
     * Returns <tt>true</tt> if this deque contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this deque contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this deque is to be tested
     * @return <tt>true</tt> if this deque contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this deque (optional)
     * @throws NullPointerException if the specified element is null and this
     *         deque does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns the number of elements in this deque.
     *
     * @return the number of elements in this deque
     */
    public int size();

    /**
     * Returns an iterator over the elements in this deque in proper sequence.
     * The elements will be returned in order from first (head) to last (tail).
     *
     * @return an iterator over the elements in this deque in proper sequence
     */
    Iterator<E> iterator();

    /**
     * Returns an iterator over the elements in this deque in reverse
     * sequential order.  The elements will be returned in order from
     * last (tail) to first (head).
     *
     * @return an iterator over the elements in this deque in reverse
     * sequence
     */
    Iterator<E> descendingIterator();

}


/*
 * Copyright 1994-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that a method has been passed an illegal or
 * inappropriate argument.
 *
 * @author  unascribed
 * @see     java.lang.Thread#setPriority(int)
 * @since   JDK1.0
 */
public
class IllegalArgumentException extends RuntimeException {
    /**
     * Constructs an <code>IllegalArgumentException</code> with no
     * detail message.
     */
    public IllegalArgumentException() {
        super();
    }

    /**
     * Constructs an <code>IllegalArgumentException</code> with the
     * specified detail message.
     *
     * @param   s   the detail message.
     */
    public IllegalArgumentException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalArgumentException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalArgumentException(Throwable cause) {
        super(cause);
    }

    private static final long serialVersionUID = -5365630128856068164L;
}


/*
 * Copyright 1996-2003 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Signals that a method has been invoked at an illegal or
 * inappropriate time.  In other words, the Java environment or
 * Java application is not in an appropriate state for the requested
 * operation.
 *
 * @author  Jonni Kanerva
 * @since   JDK1.1
 */
public
class IllegalStateException extends RuntimeException {
    /**
     * Constructs an IllegalStateException with no detail message.
     * A detail message is a String that describes this particular exception.
     */
    public IllegalStateException() {
        super();
    }

    /**
     * Constructs an IllegalStateException with the specified detail
     * message.  A detail message is a String that describes this particular
     * exception.
     *
     * @param s the String that contains a detailed message
     */
    public IllegalStateException(String s) {
        super(s);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public IllegalStateException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public IllegalStateException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1848914673093119416L;
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator over a collection.  {@code Iterator} takes the place of
 * {@link Enumeration} in the Java Collections Framework.  Iterators
 * differ from enumerations in two ways:
 *
 * <ul>
 *      <li> Iterators allow the caller to remove elements from the
 *           underlying collection during the iteration with well-defined
 *           semantics.
 *      <li> Method names have been improved.
 * </ul>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see ListIterator
 * @see Iterable
 * @since 1.2
 */
public interface Iterator<E> {
    /**
     * Returns {@code true} if the iteration has more elements.
     * (In other words, returns {@code true} if {@link #next} would
     * return an element rather than throwing an exception.)
     *
     * @return {@code true} if the iteration has more elements
     */
    boolean hasNext();

    /**
     * Returns the next element in the iteration.
     *
     * @return the next element in the iteration
     * @throws NoSuchElementException if the iteration has no more elements
     */
    E next();

    /**
     * Removes from the underlying collection the last element returned
     * by this iterator (optional operation).  This method can be called
     * only once per call to {@link #next}.  The behavior of an iterator
     * is unspecified if the underlying collection is modified while the
     * iteration is in progress in any way other than by calling this
     * method.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this iterator
     *
     * @throws IllegalStateException if the {@code next} method has not
     *         yet been called, or the {@code remove} method has already
     *         been called after the last call to the {@code next}
     *         method
     */
    void remove();
}


package javaUtilEx;

public class juLinkedListCreateRemoveElement {
	public static void main(String[] args) {
		Random.args = args;

		LinkedList<Content> l = createList(Random.random());
		Content c = new Content(Random.random());
		if (Random.random() > 42) {
			c = l.get(Random.random());
		}
		l.remove(c);
	}

	public static LinkedList<Content> createList(int n) {
		LinkedList<Content> l = new LinkedList<Content>();
		while (n > 0) {
			l.addLast(new Content(Random.random()));
			n--;
		}
		return l;
	}
}

final class Content {
	int val;

	public Content(int v) {
		this.val = v;
	}

	public int hashCode() {
		return val^31;
	}

	public boolean equals(Object o) {
		if (o instanceof Content) {
			return this.val == ((Content) o).val;
		}
		return false;
	}
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Linked list implementation of the <tt>List</tt> interface.  Implements all
 * optional list operations, and permits all elements (including
 * <tt>null</tt>).  In addition to implementing the <tt>List</tt> interface,
 * the <tt>LinkedList</tt> class provides uniformly named methods to
 * <tt>get</tt>, <tt>remove</tt> and <tt>insert</tt> an element at the
 * beginning and end of the list.  These operations allow linked lists to be
 * used as a stack, {@linkplain Queue queue}, or {@linkplain Deque
 * double-ended queue}. <p>
 *
 * The class implements the <tt>Deque</tt> interface, providing
 * first-in-first-out queue operations for <tt>add</tt>,
 * <tt>poll</tt>, along with other stack and deque operations.<p>
 *
 * All of the operations perform as could be expected for a doubly-linked
 * list.  Operations that index into the list will traverse the list from
 * the beginning or the end, whichever is closer to the specified index.<p>
 *
 * <p><strong>Note that this implementation is not synchronized.</strong>
 * If multiple threads access a linked list concurrently, and at least
 * one of the threads modifies the list structurally, it <i>must</i> be
 * synchronized externally.  (A structural modification is any operation
 * that adds or deletes one or more elements; merely setting the value of
 * an element is not a structural modification.)  This is typically
 * accomplished by synchronizing on some object that naturally
 * encapsulates the list.
 *
 * If no such object exists, the list should be "wrapped" using the
 * {@link Collections#synchronizedList Collections.synchronizedList}
 * method.  This is best done at creation time, to prevent accidental
 * unsynchronized access to the list:<pre>
 *   List list = Collections.synchronizedList(new LinkedList(...));</pre>
 *
 * <p>The iterators returned by this class's <tt>iterator</tt> and
 * <tt>listIterator</tt> methods are <i>fail-fast</i>: if the list is
 * structurally modified at any time after the iterator is created, in
 * any way except through the Iterator's own <tt>remove</tt> or
 * <tt>add</tt> methods, the iterator will throw a {@link
 * ConcurrentModificationException}.  Thus, in the face of concurrent
 * modification, the iterator fails quickly and cleanly, rather than
 * risking arbitrary, non-deterministic behavior at an undetermined
 * time in the future.
 *
 * <p>Note that the fail-fast behavior of an iterator cannot be guaranteed
 * as it is, generally speaking, impossible to make any hard guarantees in the
 * presence of unsynchronized concurrent modification.  Fail-fast iterators
 * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
 * Therefore, it would be wrong to write a program that depended on this
 * exception for its correctness:   <i>the fail-fast behavior of iterators
 * should be used only to detect bugs.</i>
 *
 * <p>This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see     List
 * @see     ArrayList
 * @see     Vector
 * @since 1.2
 * @param <E> the type of elements held in this collection
 */

public class LinkedList<E>
    extends AbstractSequentialList<E>
    implements List<E>, Deque<E>
{
    private transient Entry<E> header = new Entry<E>(null, null, null);
    private transient int size = 0;

    /**
     * Constructs an empty list.
     */
    public LinkedList() {
        header.next = header.previous = header;
    }

    /**
     * Constructs a list containing the elements of the specified
     * collection, in the order they are returned by the collection's
     * iterator.
     *
     * @param  c the collection whose elements are to be placed into this list
     * @throws NullPointerException if the specified collection is null
     */
    public LinkedList(Collection<? extends E> c) {
        this();
        addAll(c);
    }

    /**
     * Returns the first element in this list.
     *
     * @return the first element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getFirst() {
        if (size==0)
            throw new NoSuchElementException();

        return header.next.element;
    }

    /**
     * Returns the last element in this list.
     *
     * @return the last element in this list
     * @throws NoSuchElementException if this list is empty
     */
    public E getLast()  {
        if (size==0)
            throw new NoSuchElementException();

        return header.previous.element;
    }

    /**
     * Removes and returns the first element from this list.
     *
     * @return the first element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeFirst() {
        return remove(header.next);
    }

    /**
     * Removes and returns the last element from this list.
     *
     * @return the last element from this list
     * @throws NoSuchElementException if this list is empty
     */
    public E removeLast() {
        return remove(header.previous);
    }

    /**
     * Inserts the specified element at the beginning of this list.
     *
     * @param e the element to add
     */
    public void addFirst(E e) {
        addBefore(e, header.next);
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #add}.
     *
     * @param e the element to add
     */
    public void addLast(E e) {
        addBefore(e, header);
    }

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     */
    public boolean contains(Object o) {
        return indexOf(o) != -1;
    }

    /**
     * Returns the number of elements in this list.
     *
     * @return the number of elements in this list
     */
    public int size() {
        return size;
    }

    /**
     * Appends the specified element to the end of this list.
     *
     * <p>This method is equivalent to {@link #addLast}.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     */
    public boolean add(E e) {
        addBefore(e, header);
        return true;
    }

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present.  If this list does not contain the element, it is
     * unchanged.  More formally, removes the element with the lowest index
     * <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list
     * changed as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     */
    public boolean remove(Object o) {
        if (o==null) {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.next; e != header; e = e.next) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }
    /**
     * Removes all of the elements from this list.
     */
    public void clear() {
        Entry<E> e = header.next;
        while (e != header) {
            Entry<E> next = e.next;
            e.next = e.previous = null;
            e.element = null;
            e = next;
        }
        header.next = header.previous = header;
        size = 0;
        modCount++;
    }


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E get(int index) {
        return entry(index).element;
    }

    /**
     * Replaces the element at the specified position in this list with the
     * specified element.
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E set(int index, E element) {
        Entry<E> e = entry(index);
        E oldVal = e.element;
        e.element = element;
        return oldVal;
    }

    /**
     * Inserts the specified element at the specified position in this list.
     * Shifts the element currently at that position (if any) and any
     * subsequent elements to the right (adds one to their indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public void add(int index, E element) {
        addBefore(element, (index==size ? header : entry(index)));
    }

    /**
     * Removes the element at the specified position in this list.  Shifts any
     * subsequent elements to the left (subtracts one from their indices).
     * Returns the element that was removed from the list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws IndexOutOfBoundsException {@inheritDoc}
     */
    public E remove(int index) {
        return remove(entry(index));
    }

    /**
     * Returns the indexed entry.
     */
    private Entry<E> entry(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException();
        Entry<E> e = header;
        if (index < (size >> 1)) {
            for (int i = 0; i <= index; i++)
                e = e.next;
        } else {
            for (int i = size; i > index; i--)
                e = e.previous;
        }
        return e;
    }


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int indexOf(Object o) {
        int index = 0;
        if (o==null) {
            for (Entry e = header.next; e != header; e = e.next) {
                if (e.element==null)
                    return index;
                index++;
            }
        } else {
            for (Entry e = header.next; e != header; e = e.next) {
                if (o.equals(e.element))
                    return index;
                index++;
            }
        }
        return -1;
    }

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     */
    public int lastIndexOf(Object o) {
        int index = size;
        if (o==null) {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (e.element==null)
                    return index;
            }
        } else {
            for (Entry e = header.previous; e != header; e = e.previous) {
                index--;
                if (o.equals(e.element))
                    return index;
            }
        }
        return -1;
    }

    // Queue operations.

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E peek() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the head (first element) of this list.
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E element() {
        return getFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list
     * @return the head of this list, or <tt>null</tt> if this list is empty
     * @since 1.5
     */
    public E poll() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the head (first element) of this list.
     *
     * @return the head of this list
     * @throws NoSuchElementException if this list is empty
     * @since 1.5
     */
    public E remove() {
        return removeFirst();
    }

    /**
     * Adds the specified element as the tail (last element) of this list.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Queue#offer})
     * @since 1.5
     */
    public boolean offer(E e) {
        return add(e);
    }

    // Deque operations
    /**
     * Inserts the specified element at the front of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerFirst})
     * @since 1.6
     */
    public boolean offerFirst(E e) {
        addFirst(e);
        return true;
    }

    /**
     * Inserts the specified element at the end of this list.
     *
     * @param e the element to insert
     * @return <tt>true</tt> (as specified by {@link Deque#offerLast})
     * @since 1.6
     */
    public boolean offerLast(E e) {
        addLast(e);
        return true;
    }

    /**
     * Retrieves, but does not remove, the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekFirst() {
        if (size==0)
            return null;
        return getFirst();
    }

    /**
     * Retrieves, but does not remove, the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt>
     *         if this list is empty
     * @since 1.6
     */
    public E peekLast() {
        if (size==0)
            return null;
        return getLast();
    }

    /**
     * Retrieves and removes the first element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the first element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollFirst() {
        if (size==0)
            return null;
        return removeFirst();
    }

    /**
     * Retrieves and removes the last element of this list,
     * or returns <tt>null</tt> if this list is empty.
     *
     * @return the last element of this list, or <tt>null</tt> if
     *     this list is empty
     * @since 1.6
     */
    public E pollLast() {
        if (size==0)
            return null;
        return removeLast();
    }

    /**
     * Pushes an element onto the stack represented by this list.  In other
     * words, inserts the element at the front of this list.
     *
     * <p>This method is equivalent to {@link #addFirst}.
     *
     * @param e the element to push
     * @since 1.6
     */
    public void push(E e) {
        addFirst(e);
    }

    /**
     * Pops an element from the stack represented by this list.  In other
     * words, removes and returns the first element of this list.
     *
     * <p>This method is equivalent to {@link #removeFirst()}.
     *
     * @return the element at the front of this list (which is the top
     *         of the stack represented by this list)
     * @throws NoSuchElementException if this list is empty
     * @since 1.6
     */
    public E pop() {
        return removeFirst();
    }

    /**
     * Removes the first occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeFirstOccurrence(Object o) {
        return remove(o);
    }

    /**
     * Removes the last occurrence of the specified element in this
     * list (when traversing the list from head to tail).  If the list
     * does not contain the element, it is unchanged.
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if the list contained the specified element
     * @since 1.6
     */
    public boolean removeLastOccurrence(Object o) {
        if (o==null) {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (e.element==null) {
                    remove(e);
                    return true;
                }
            }
        } else {
            for (Entry<E> e = header.previous; e != header; e = e.previous) {
                if (o.equals(e.element)) {
                    remove(e);
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * Returns a list-iterator of the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * Obeys the general contract of <tt>List.listIterator(int)</tt>.<p>
     *
     * The list-iterator is <i>fail-fast</i>: if the list is structurally
     * modified at any time after the Iterator is created, in any way except
     * through the list-iterator's own <tt>remove</tt> or <tt>add</tt>
     * methods, the list-iterator will throw a
     * <tt>ConcurrentModificationException</tt>.  Thus, in the face of
     * concurrent modification, the iterator fails quickly and cleanly, rather
     * than risking arbitrary, non-deterministic behavior at an undetermined
     * time in the future.
     *
     * @param index index of the first element to be returned from the
     *              list-iterator (by a call to <tt>next</tt>)
     * @return a ListIterator of the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException {@inheritDoc}
     * @see List#listIterator(int)
     */
    public ListIterator<E> listIterator(int index) {
        return new ListItr(index);
    }

    private class ListItr implements ListIterator<E> {
        private Entry<E> lastReturned = header;
        private Entry<E> next;
        private int nextIndex;
        private int expectedModCount = modCount;

        ListItr(int index) {
            if (index < 0 || index > size)
                throw new IndexOutOfBoundsException();
            if (index < (size >> 1)) {
                next = header.next;
                for (nextIndex=0; nextIndex<index; nextIndex++)
                    next = next.next;
            } else {
                next = header;
                for (nextIndex=size; nextIndex>index; nextIndex--)
                    next = next.previous;
            }
        }

        public boolean hasNext() {
            return nextIndex != size;
        }

        public E next() {
            checkForComodification();
            if (nextIndex == size)
                throw new NoSuchElementException();

            lastReturned = next;
            next = next.next;
            nextIndex++;
            return lastReturned.element;
        }

        public boolean hasPrevious() {
            return nextIndex != 0;
        }

        public E previous() {
            if (nextIndex == 0)
                throw new NoSuchElementException();

            lastReturned = next = next.previous;
            nextIndex--;
            checkForComodification();
            return lastReturned.element;
        }

        public int nextIndex() {
            return nextIndex;
        }

        public int previousIndex() {
            return nextIndex-1;
        }

        public void remove() {
            checkForComodification();
            Entry<E> lastNext = lastReturned.next;
            try {
                LinkedList.this.remove(lastReturned);
            } catch (NoSuchElementException e) {
                throw new IllegalStateException();
            }
            if (next==lastReturned)
                next = lastNext;
            else
                nextIndex--;
            lastReturned = header;
            expectedModCount++;
        }

        public void set(E e) {
            if (lastReturned == header)
                throw new IllegalStateException();
            checkForComodification();
            lastReturned.element = e;
        }

        public void add(E e) {
            checkForComodification();
            lastReturned = header;
            addBefore(e, next);
            nextIndex++;
            expectedModCount++;
        }

        final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }
    }

    private static class Entry<E> {
        E element;
        Entry<E> next;
        Entry<E> previous;

        Entry(E element, Entry<E> next, Entry<E> previous) {
            this.element = element;
            this.next = next;
            this.previous = previous;
        }
    }

    private Entry<E> addBefore(E e, Entry<E> entry) {
        Entry<E> newEntry = new Entry<E>(e, entry, entry.previous);
        newEntry.previous.next = newEntry;
        newEntry.next.previous = newEntry;
        size++;
        modCount++;
        return newEntry;
    }

    private E remove(Entry<E> e) {
        if (e == header)
            throw new NoSuchElementException();

        E result = e.element;
        e.previous.next = e.next;
        e.next.previous = e.previous;
        e.next = e.previous = null;
        e.element = null;
        size--;
        modCount++;
        return result;
    }

    /**
     * @since 1.6
     */
    public Iterator<E> descendingIterator() {
        return new DescendingIterator();
    }

    /** Adapter to provide descending iterators via ListItr.previous */
    private class DescendingIterator implements Iterator {
        final ListItr itr = new ListItr(size());
        public boolean hasNext() {
            return itr.hasPrevious();
        }
        public E next() {
            return itr.previous();
        }
        public void remove() {
            itr.remove();
        }
    }

    /**
     * Returns an array containing all of the elements in this list
     * in proper sequence (from first to last element).
     *
     * <p>The returned array will be "safe" in that no references to it are
     * maintained by this list.  (In other words, this method must allocate
     * a new array).  The caller is thus free to modify the returned array.
     *
     * <p>This method acts as bridge between array-based and collection-based
     * APIs.
     *
     * @return an array containing all of the elements in this list
     *         in proper sequence
     */
    public Object[] toArray() {
        Object[] result = new Object[size];
        int i = 0;
        for (Entry<E> e = header.next; e != header; e = e.next)
            result[i++] = e.element;
        return result;
    }

    private static final long serialVersionUID = 876323262645176354L;
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An iterator for lists that allows the programmer
 * to traverse the list in either direction, modify
 * the list during iteration, and obtain the iterator's
 * current position in the list. A {@code ListIterator}
 * has no current element; its <I>cursor position</I> always
 * lies between the element that would be returned by a call
 * to {@code previous()} and the element that would be
 * returned by a call to {@code next()}.
 * An iterator for a list of length {@code n} has {@code n+1} possible
 * cursor positions, as illustrated by the carets ({@code ^}) below:
 * <PRE>
 *                      Element(0)   Element(1)   Element(2)   ... Element(n-1)
 * cursor positions:  ^            ^            ^            ^                  ^
 * </PRE>
 * Note that the {@link #remove} and {@link #set(Object)} methods are
 * <i>not</i> defined in terms of the cursor position;  they are defined to
 * operate on the last element returned by a call to {@link #next} or
 * {@link #previous()}.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @see Collection
 * @see List
 * @see Iterator
 * @see Enumeration
 * @see List#listIterator()
 * @since   1.2
 */
public interface ListIterator<E> extends Iterator<E> {
    // Query Operations

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the forward direction. (In other words,
     * returns {@code true} if {@link #next} would return an element rather
     * than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the forward direction
     */
    boolean hasNext();

    /**
     * Returns the next element in the list and advances the cursor position.
     * This method may be called repeatedly to iterate through the list,
     * or intermixed with calls to {@link #previous} to go back and forth.
     * (Note that alternating calls to {@code next} and {@code previous}
     * will return the same element repeatedly.)
     *
     * @return the next element in the list
     * @throws NoSuchElementException if the iteration has no next element
     */
    E next();

    /**
     * Returns {@code true} if this list iterator has more elements when
     * traversing the list in the reverse direction.  (In other words,
     * returns {@code true} if {@link #previous} would return an element
     * rather than throwing an exception.)
     *
     * @return {@code true} if the list iterator has more elements when
     *         traversing the list in the reverse direction
     */
    boolean hasPrevious();

    /**
     * Returns the previous element in the list and moves the cursor
     * position backwards.  This method may be called repeatedly to
     * iterate through the list backwards, or intermixed with calls to
     * {@link #next} to go back and forth.  (Note that alternating calls
     * to {@code next} and {@code previous} will return the same
     * element repeatedly.)
     *
     * @return the previous element in the list
     * @throws NoSuchElementException if the iteration has no previous
     *         element
     */
    E previous();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #next}. (Returns list size if the list
     * iterator is at the end of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code next}, or list size if the list
     *         iterator is at the end of the list
     */
    int nextIndex();

    /**
     * Returns the index of the element that would be returned by a
     * subsequent call to {@link #previous}. (Returns -1 if the list
     * iterator is at the beginning of the list.)
     *
     * @return the index of the element that would be returned by a
     *         subsequent call to {@code previous}, or -1 if the list
     *         iterator is at the beginning of the list
     */
    int previousIndex();


    // Modification Operations

    /**
     * Removes from the list the last element that was returned by {@link
     * #next} or {@link #previous} (optional operation).  This call can
     * only be made once per call to {@code next} or {@code previous}.
     * It can be made only if {@link #add} has not been
     * called after the last call to {@code next} or {@code previous}.
     *
     * @throws UnsupportedOperationException if the {@code remove}
     *         operation is not supported by this list iterator
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void remove();

    /**
     * Replaces the last element returned by {@link #next} or
     * {@link #previous} with the specified element (optional operation).
     * This call can be made only if neither {@link #remove} nor {@link
     * #add} have been called after the last call to {@code next} or
     * {@code previous}.
     *
     * @param e the element with which to replace the last element returned by
     *          {@code next} or {@code previous}
     * @throws UnsupportedOperationException if the {@code set} operation
     *         is not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of the specified
     *         element prevents it from being added to this list
     * @throws IllegalStateException if neither {@code next} nor
     *         {@code previous} have been called, or {@code remove} or
     *         {@code add} have been called after the last call to
     *         {@code next} or {@code previous}
     */
    void set(E e);

    /**
     * Inserts the specified element into the list (optional operation).
     * The element is inserted immediately before the next element that
     * would be returned by {@link #next}, if any, and after the next
     * element that would be returned by {@link #previous}, if any.  (If the
     * list contains no elements, the new element becomes the sole element
     * on the list.)  The new element is inserted before the implicit
     * cursor: a subsequent call to {@code next} would be unaffected, and a
     * subsequent call to {@code previous} would return the new element.
     * (This call increases by one the value that would be returned by a
     * call to {@code nextIndex} or {@code previousIndex}.)
     *
     * @param e the element to insert
     * @throws UnsupportedOperationException if the {@code add} method is
     *         not supported by this list iterator
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws IllegalArgumentException if some aspect of this element
     *         prevents it from being added to this list
     */
    void add(E e);
}


/*
 * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * An ordered collection (also known as a <i>sequence</i>).  The user of this
 * interface has precise control over where in the list each element is
 * inserted.  The user can access elements by their integer index (position in
 * the list), and search for elements in the list.<p>
 *
 * Unlike sets, lists typically allow duplicate elements.  More formally,
 * lists typically allow pairs of elements <tt>e1</tt> and <tt>e2</tt>
 * such that <tt>e1.equals(e2)</tt>, and they typically allow multiple
 * null elements if they allow null elements at all.  It is not inconceivable
 * that someone might wish to implement a list that prohibits duplicates, by
 * throwing runtime exceptions when the user attempts to insert them, but we
 * expect this usage to be rare.<p>
 *
 * The <tt>List</tt> interface places additional stipulations, beyond those
 * specified in the <tt>Collection</tt> interface, on the contracts of the
 * <tt>iterator</tt>, <tt>add</tt>, <tt>remove</tt>, <tt>equals</tt>, and
 * <tt>hashCode</tt> methods.  Declarations for other inherited methods are
 * also included here for convenience.<p>
 *
 * The <tt>List</tt> interface provides four methods for positional (indexed)
 * access to list elements.  Lists (like Java arrays) are zero based.  Note
 * that these operations may execute in time proportional to the index value
 * for some implementations (the <tt>LinkedList</tt> class, for
 * example). Thus, iterating over the elements in a list is typically
 * preferable to indexing through it if the caller does not know the
 * implementation.<p>
 *
 * The <tt>List</tt> interface provides a special iterator, called a
 * <tt>ListIterator</tt>, that allows element insertion and replacement, and
 * bidirectional access in addition to the normal operations that the
 * <tt>Iterator</tt> interface provides.  A method is provided to obtain a
 * list iterator that starts at a specified position in the list.<p>
 *
 * The <tt>List</tt> interface provides two methods to search for a specified
 * object.  From a performance standpoint, these methods should be used with
 * caution.  In many implementations they will perform costly linear
 * searches.<p>
 *
 * The <tt>List</tt> interface provides two methods to efficiently insert and
 * remove multiple elements at an arbitrary point in the list.<p>
 *
 * Note: While it is permissible for lists to contain themselves as elements,
 * extreme caution is advised: the <tt>equals</tt> and <tt>hashCode</tt>
 * methods are no longer well defined on such a list.
 *
 * <p>Some list implementations have restrictions on the elements that
 * they may contain.  For example, some implementations prohibit null elements,
 * and some have restrictions on the types of their elements.  Attempting to
 * add an ineligible element throws an unchecked exception, typically
 * <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
 * to query the presence of an ineligible element may throw an exception,
 * or it may simply return false; some implementations will exhibit the former
 * behavior and some will exhibit the latter.  More generally, attempting an
 * operation on an ineligible element whose completion would not result in
 * the insertion of an ineligible element into the list may throw an
 * exception or it may succeed, at the option of the implementation.
 * Such exceptions are marked as "optional" in the specification for this
 * interface.
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @author  Neal Gafter
 * @see Collection
 * @see Set
 * @see ArrayList
 * @see LinkedList
 * @see Vector
 * @see Arrays#asList(Object[])
 * @see Collections#nCopies(int, Object)
 * @see Collections#EMPTY_LIST
 * @see AbstractList
 * @see AbstractSequentialList
 * @since 1.2
 */

public interface List<E> extends Collection<E> {
    // Query Operations

    /**
     * Returns the number of elements in this list.  If this list contains
     * more than <tt>Integer.MAX_VALUE</tt> elements, returns
     * <tt>Integer.MAX_VALUE</tt>.
     *
     * @return the number of elements in this list
     */
    int size();

    /**
     * Returns <tt>true</tt> if this list contains no elements.
     *
     * @return <tt>true</tt> if this list contains no elements
     */
    boolean isEmpty();

    /**
     * Returns <tt>true</tt> if this list contains the specified element.
     * More formally, returns <tt>true</tt> if and only if this list contains
     * at least one element <tt>e</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.
     *
     * @param o element whose presence in this list is to be tested
     * @return <tt>true</tt> if this list contains the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    boolean contains(Object o);

    /**
     * Returns an iterator over the elements in this list in proper sequence.
     *
     * @return an iterator over the elements in this list in proper sequence
     */
    Iterator<E> iterator();

    // Modification Operations

    /**
     * Appends the specified element to the end of this list (optional
     * operation).
     *
     * <p>Lists that support this operation may place limitations on what
     * elements may be added to this list.  In particular, some
     * lists will refuse to add null elements, and others will impose
     * restrictions on the type of elements that may be added.  List
     * classes should clearly specify in their documentation any restrictions
     * on what elements may be added.
     *
     * @param e element to be appended to this list
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this list
     */
    boolean add(E e);

    /**
     * Removes the first occurrence of the specified element from this list,
     * if it is present (optional operation).  If this list does not contain
     * the element, it is unchanged.  More formally, removes the element with
     * the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
     * (if such an element exists).  Returns <tt>true</tt> if this list
     * contained the specified element (or equivalently, if this list changed
     * as a result of the call).
     *
     * @param o element to be removed from this list, if present
     * @return <tt>true</tt> if this list contained the specified element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     */
    boolean remove(Object o);


    // Bulk Modification Operations

    /**
     * Returns <tt>true</tt> if this list contains all of the elements of the
     * specified collection.
     *
     * @param  c collection to be checked for containment in this list
     * @return <tt>true</tt> if this list contains all of the elements of the
     *         specified collection
     * @throws ClassCastException if the types of one or more elements
     *         in the specified collection are incompatible with this
     *         list (optional)
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements (optional), or if the specified collection is null
     * @see #contains(Object)
     */
    boolean containsAll(Collection<?> c);

    /**
     * Appends all of the elements in the specified collection to the end of
     * this list, in the order that they are returned by the specified
     * collection's iterator (optional operation).  The behavior of this
     * operation is undefined if the specified collection is modified while
     * the operation is in progress.  (Note that this will occur if the
     * specified collection is this list, and it's nonempty.)
     *
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @see #add(Object)
     */
    boolean addAll(Collection<? extends E> c);

    /**
     * Inserts all of the elements in the specified collection into this
     * list at the specified position (optional operation).  Shifts the
     * element currently at that position (if any) and any subsequent
     * elements to the right (increases their indices).  The new elements
     * will appear in this list in the order that they are returned by the
     * specified collection's iterator.  The behavior of this operation is
     * undefined if the specified collection is modified while the
     * operation is in progress.  (Note that this will occur if the specified
     * collection is this list, and it's nonempty.)
     *
     * @param index index at which to insert the first element from the
     *              specified collection
     * @param c collection containing elements to be added to this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>addAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of the specified
     *         collection prevents it from being added to this list
     * @throws NullPointerException if the specified collection contains one
     *         or more null elements and this list does not permit null
     *         elements, or if the specified collection is null
     * @throws IllegalArgumentException if some property of an element of the
     *         specified collection prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    boolean addAll(int index, Collection<? extends E> c);

    /**
     * Removes from this list all of its elements that are contained in the
     * specified collection (optional operation).
     *
     * @param c collection containing elements to be removed from this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>removeAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean removeAll(Collection<?> c);

    /**
     * Retains only the elements in this list that are contained in the
     * specified collection (optional operation).  In other words, removes
     * from this list all of its elements that are not contained in the
     * specified collection.
     *
     * @param c collection containing elements to be retained in this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);

    /**
     * Removes all of the elements from this list (optional operation).
     * The list will be empty after this call returns.
     *
     * @throws UnsupportedOperationException if the <tt>clear</tt> operation
     *         is not supported by this list
     */
    void clear();


    // Comparison and hashing

    /**
     * Compares the specified object with this list for equality.  Returns
     * <tt>true</tt> if and only if the specified object is also a list, both
     * lists have the same size, and all corresponding pairs of elements in
     * the two lists are <i>equal</i>.  (Two elements <tt>e1</tt> and
     * <tt>e2</tt> are <i>equal</i> if <tt>(e1==null ? e2==null :
     * e1.equals(e2))</tt>.)  In other words, two lists are defined to be
     * equal if they contain the same elements in the same order.  This
     * definition ensures that the equals method works properly across
     * different implementations of the <tt>List</tt> interface.
     *
     * @param o the object to be compared for equality with this list
     * @return <tt>true</tt> if the specified object is equal to this list
     */
    boolean equals(Object o);

    /**
     * Returns the hash code value for this list.  The hash code of a list
     * is defined to be the result of the following calculation:
     * <pre>
     *  int hashCode = 1;
     *  for (E e : list)
     *      hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
     * </pre>
     * This ensures that <tt>list1.equals(list2)</tt> implies that
     * <tt>list1.hashCode()==list2.hashCode()</tt> for any two lists,
     * <tt>list1</tt> and <tt>list2</tt>, as required by the general
     * contract of {@link Object#hashCode}.
     *
     * @return the hash code value for this list
     * @see Object#equals(Object)
     * @see #equals(Object)
     */
    int hashCode();


    // Positional Access Operations

    /**
     * Returns the element at the specified position in this list.
     *
     * @param index index of the element to return
     * @return the element at the specified position in this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E get(int index);

    /**
     * Replaces the element at the specified position in this list with the
     * specified element (optional operation).
     *
     * @param index index of the element to replace
     * @param element element to be stored at the specified position
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>set</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E set(int index, E element);

    /**
     * Inserts the specified element at the specified position in this list
     * (optional operation).  Shifts the element currently at that position
     * (if any) and any subsequent elements to the right (adds one to their
     * indices).
     *
     * @param index index at which the specified element is to be inserted
     * @param element element to be inserted
     * @throws UnsupportedOperationException if the <tt>add</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this list
     * @throws NullPointerException if the specified element is null and
     *         this list does not permit null elements
     * @throws IllegalArgumentException if some property of the specified
     *         element prevents it from being added to this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt; size()</tt>)
     */
    void add(int index, E element);

    /**
     * Removes the element at the specified position in this list (optional
     * operation).  Shifts any subsequent elements to the left (subtracts one
     * from their indices).  Returns the element that was removed from the
     * list.
     *
     * @param index the index of the element to be removed
     * @return the element previously at the specified position
     * @throws UnsupportedOperationException if the <tt>remove</tt> operation
     *         is not supported by this list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         (<tt>index &lt; 0 || index &gt;= size()</tt>)
     */
    E remove(int index);


    // Search Operations

    /**
     * Returns the index of the first occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the lowest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the first occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int indexOf(Object o);

    /**
     * Returns the index of the last occurrence of the specified element
     * in this list, or -1 if this list does not contain the element.
     * More formally, returns the highest index <tt>i</tt> such that
     * <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
     * or -1 if there is no such index.
     *
     * @param o element to search for
     * @return the index of the last occurrence of the specified element in
     *         this list, or -1 if this list does not contain the element
     * @throws ClassCastException if the type of the specified element
     *         is incompatible with this list (optional)
     * @throws NullPointerException if the specified element is null and this
     *         list does not permit null elements (optional)
     */
    int lastIndexOf(Object o);


    // List Iterators

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence).
     *
     * @return a list iterator over the elements in this list (in proper
     *         sequence)
     */
    ListIterator<E> listIterator();

    /**
     * Returns a list iterator over the elements in this list (in proper
     * sequence), starting at the specified position in the list.
     * The specified index indicates the first element that would be
     * returned by an initial call to {@link ListIterator#next next}.
     * An initial call to {@link ListIterator#previous previous} would
     * return the element with the specified index minus one.
     *
     * @param index index of the first element to be returned from the
     *        list iterator (by a call to {@link ListIterator#next next})
     * @return a list iterator over the elements in this list (in proper
     *         sequence), starting at the specified position in the list
     * @throws IndexOutOfBoundsException if the index is out of range
     *         ({@code index < 0 || index > size()})
     */
    ListIterator<E> listIterator(int index);

    // View

    /**
     * Returns a view of the portion of this list between the specified
     * <tt>fromIndex</tt>, inclusive, and <tt>toIndex</tt>, exclusive.  (If
     * <tt>fromIndex</tt> and <tt>toIndex</tt> are equal, the returned list is
     * empty.)  The returned list is backed by this list, so non-structural
     * changes in the returned list are reflected in this list, and vice-versa.
     * The returned list supports all of the optional list operations supported
     * by this list.<p>
     *
     * This method eliminates the need for explicit range operations (of
     * the sort that commonly exist for arrays).  Any operation that expects
     * a list can be used as a range operation by passing a subList view
     * instead of a whole list.  For example, the following idiom
     * removes a range of elements from a list:
     * <pre>
     *      list.subList(from, to).clear();
     * </pre>
     * Similar idioms may be constructed for <tt>indexOf</tt> and
     * <tt>lastIndexOf</tt>, and all of the algorithms in the
     * <tt>Collections</tt> class can be applied to a subList.<p>
     *
     * The semantics of the list returned by this method become undefined if
     * the backing list (i.e., this list) is <i>structurally modified</i> in
     * any way other than via the returned list.  (Structural modifications are
     * those that change the size of this list, or otherwise perturb it in such
     * a fashion that iterations in progress may yield incorrect results.)
     *
     * @param fromIndex low endpoint (inclusive) of the subList
     * @param toIndex high endpoint (exclusive) of the subList
     * @return a view of the specified range within this list
     * @throws IndexOutOfBoundsException for an illegal endpoint index value
     *         (<tt>fromIndex &lt; 0 || toIndex &gt; size ||
     *         fromIndex &gt; toIndex</tt>)
     */
    List<E> subList(int fromIndex, int toIndex);
}


/*
 * Copyright 1994-1998 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown by the <code>nextElement</code> method of an
 * <code>Enumeration</code> to indicate that there are no more
 * elements in the enumeration.
 *
 * @author  unascribed
 * @see     java.util.Enumeration
 * @see     java.util.Enumeration#nextElement()
 * @since   JDK1.0
 */
public
class NoSuchElementException extends RuntimeException {
    /**
     * Constructs a <code>NoSuchElementException</code> with <tt>null</tt>
     * as its error message string.
     */
    public NoSuchElementException() {
        super();
    }

    /**
     * Constructs a <code>NoSuchElementException</code>, saving a reference
     * to the error message string <tt>s</tt> for later retrieval by the
     * <tt>getMessage</tt> method.
     *
     * @param   s   the detail message.
     */
    public NoSuchElementException(String s) {
        super(s);
    }
}


/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * This file is available under and governed by the GNU General Public
 * License version 2 only, as published by the Free Software Foundation.
 * However, the following notice accompanied the original version of this
 * file:
 *
 * Written by Doug Lea with assistance from members of JCP JSR-166
 * Expert Group and released to the public domain, as explained at
 * http://creativecommons.org/licenses/publicdomain
 */

package javaUtilEx;

/**
 * A collection designed for holding elements prior to processing.
 * Besides basic {@link java.util.Collection Collection} operations,
 * queues provide additional insertion, extraction, and inspection
 * operations.  Each of these methods exists in two forms: one throws
 * an exception if the operation fails, the other returns a special
 * value (either <tt>null</tt> or <tt>false</tt>, depending on the
 * operation).  The latter form of the insert operation is designed
 * specifically for use with capacity-restricted <tt>Queue</tt>
 * implementations; in most implementations, insert operations cannot
 * fail.
 *
 * <p>
 * <table BORDER CELLPADDING=3 CELLSPACING=1>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><em>Throws exception</em></td>
 *    <td ALIGN=CENTER><em>Returns special value</em></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insert</b></td>
 *    <td>{@link #add add(e)}</td>
 *    <td>{@link #offer offer(e)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Remove</b></td>
 *    <td>{@link #remove remove()}</td>
 *    <td>{@link #poll poll()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Examine</b></td>
 *    <td>{@link #element element()}</td>
 *    <td>{@link #peek peek()}</td>
 *  </tr>
 * </table>
 *
 * <p>Queues typically, but do not necessarily, order elements in a
 * FIFO (first-in-first-out) manner.  Among the exceptions are
 * priority queues, which order elements according to a supplied
 * comparator, or the elements' natural ordering, and LIFO queues (or
 * stacks) which order the elements LIFO (last-in-first-out).
 * Whatever the ordering used, the <em>head</em> of the queue is that
 * element which would be removed by a call to {@link #remove() } or
 * {@link #poll()}.  In a FIFO queue, all new elements are inserted at
 * the <em> tail</em> of the queue. Other kinds of queues may use
 * different placement rules.  Every <tt>Queue</tt> implementation
 * must specify its ordering properties.
 *
 * <p>The {@link #offer offer} method inserts an element if possible,
 * otherwise returning <tt>false</tt>.  This differs from the {@link
 * java.util.Collection#add Collection.add} method, which can fail to
 * add an element only by throwing an unchecked exception.  The
 * <tt>offer</tt> method is designed for use when failure is a normal,
 * rather than exceptional occurrence, for example, in fixed-capacity
 * (or &quot;bounded&quot;) queues.
 *
 * <p>The {@link #remove()} and {@link #poll()} methods remove and
 * return the head of the queue.
 * Exactly which element is removed from the queue is a
 * function of the queue's ordering policy, which differs from
 * implementation to implementation. The <tt>remove()</tt> and
 * <tt>poll()</tt> methods differ only in their behavior when the
 * queue is empty: the <tt>remove()</tt> method throws an exception,
 * while the <tt>poll()</tt> method returns <tt>null</tt>.
 *
 * <p>The {@link #element()} and {@link #peek()} methods return, but do
 * not remove, the head of the queue.
 *
 * <p>The <tt>Queue</tt> interface does not define the <i>blocking queue
 * methods</i>, which are common in concurrent programming.  These methods,
 * which wait for elements to appear or for space to become available, are
 * defined in the {@link java.util.concurrent.BlockingQueue} interface, which
 * extends this interface.
 *
 * <p><tt>Queue</tt> implementations generally do not allow insertion
 * of <tt>null</tt> elements, although some implementations, such as
 * {@link LinkedList}, do not prohibit insertion of <tt>null</tt>.
 * Even in the implementations that permit it, <tt>null</tt> should
 * not be inserted into a <tt>Queue</tt>, as <tt>null</tt> is also
 * used as a special return value by the <tt>poll</tt> method to
 * indicate that the queue contains no elements.
 *
 * <p><tt>Queue</tt> implementations generally do not define
 * element-based versions of methods <tt>equals</tt> and
 * <tt>hashCode</tt> but instead inherit the identity based versions
 * from class <tt>Object</tt>, because element-based equality is not
 * always well-defined for queues with the same elements but different
 * ordering properties.
 *
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @see java.util.Collection
 * @see LinkedList
 * @see PriorityQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.BlockingQueue
 * @see java.util.concurrent.ArrayBlockingQueue
 * @see java.util.concurrent.LinkedBlockingQueue
 * @see java.util.concurrent.PriorityBlockingQueue
 * @since 1.5
 * @author Doug Lea
 * @param <E> the type of elements held in this collection
 */
public interface Queue<E> extends Collection<E> {
    /**
     * Inserts the specified element into this queue if it is possible to do so
     * immediately without violating capacity restrictions, returning
     * <tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt>
     * if no space is currently available.
     *
     * @param e the element to add
     * @return <tt>true</tt> (as specified by {@link Collection#add})
     * @throws IllegalStateException if the element cannot be added at this
     *         time due to capacity restrictions
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean add(E e);

    /**
     * Inserts the specified element into this queue if it is possible to do
     * so immediately without violating capacity restrictions.
     * When using a capacity-restricted queue, this method is generally
     * preferable to {@link #add}, which can fail to insert an element only
     * by throwing an exception.
     *
     * @param e the element to add
     * @return <tt>true</tt> if the element was added to this queue, else
     *         <tt>false</tt>
     * @throws ClassCastException if the class of the specified element
     *         prevents it from being added to this queue
     * @throws NullPointerException if the specified element is null and
     *         this queue does not permit null elements
     * @throws IllegalArgumentException if some property of this element
     *         prevents it from being added to this queue
     */
    boolean offer(E e);

    /**
     * Retrieves and removes the head of this queue.  This method differs
     * from {@link #poll poll} only in that it throws an exception if this
     * queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E remove();

    /**
     * Retrieves and removes the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E poll();

    /**
     * Retrieves, but does not remove, the head of this queue.  This method
     * differs from {@link #peek peek} only in that it throws an exception
     * if this queue is empty.
     *
     * @return the head of this queue
     * @throws NoSuchElementException if this queue is empty
     */
    E element();

    /**
     * Retrieves, but does not remove, the head of this queue,
     * or returns <tt>null</tt> if this queue is empty.
     *
     * @return the head of this queue, or <tt>null</tt> if this queue is empty
     */
    E peek();
}


/*
 * Copyright 2000-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Marker interface used by <tt>List</tt> implementations to indicate that
 * they support fast (generally constant time) random access.  The primary
 * purpose of this interface is to allow generic algorithms to alter their
 * behavior to provide good performance when applied to either random or
 * sequential access lists.
 *
 * <p>The best algorithms for manipulating random access lists (such as
 * <tt>ArrayList</tt>) can produce quadratic behavior when applied to
 * sequential access lists (such as <tt>LinkedList</tt>).  Generic list
 * algorithms are encouraged to check whether the given list is an
 * <tt>instanceof</tt> this interface before applying an algorithm that would
 * provide poor performance if it were applied to a sequential access list,
 * and to alter their behavior if necessary to guarantee acceptable
 * performance.
 *
 * <p>It is recognized that the distinction between random and sequential
 * access is often fuzzy.  For example, some <tt>List</tt> implementations
 * provide asymptotically linear access times if they get huge, but constant
 * access times in practice.  Such a <tt>List</tt> implementation
 * should generally implement this interface.  As a rule of thumb, a
 * <tt>List</tt> implementation should implement this interface if,
 * for typical instances of the class, this loop:
 * <pre>
 *     for (int i=0, n=list.size(); i &lt; n; i++)
 *         list.get(i);
 * </pre>
 * runs faster than this loop:
 * <pre>
 *     for (Iterator i=list.iterator(); i.hasNext(); )
 *         i.next();
 * </pre>
 *
 * <p>This interface is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @since 1.4
 */
public interface RandomAccess {
}


package javaUtilEx;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}


/*
 * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package javaUtilEx;

/**
 * Thrown to indicate that the requested operation is not supported.<p>
 *
 * This class is a member of the
 * <a href="{@docRoot}/../technotes/guides/collections/index.html">
 * Java Collections Framework</a>.
 *
 * @author  Josh Bloch
 * @since   1.2
 */
public class UnsupportedOperationException extends RuntimeException {
    /**
     * Constructs an UnsupportedOperationException with no detail message.
     */
    public UnsupportedOperationException() {
    }

    /**
     * Constructs an UnsupportedOperationException with the specified
     * detail message.
     *
     * @param message the detail message
     */
    public UnsupportedOperationException(String message) {
        super(message);
    }

    /**
     * Constructs a new exception with the specified detail message and
     * cause.
     *
     * <p>Note that the detail message associated with <code>cause</code> is
     * <i>not</i> automatically incorporated in this exception's detail
     * message.
     *
     * @param  message the detail message (which is saved for later retrieval
     *         by the {@link Throwable#getMessage()} method).
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value
     *         is permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since 1.5
     */
    public UnsupportedOperationException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Constructs a new exception with the specified cause and a detail
     * message of <tt>(cause==null ? null : cause.toString())</tt> (which
     * typically contains the class and detail message of <tt>cause</tt>).
     * This constructor is useful for exceptions that are little more than
     * wrappers for other throwables (for example, {@link
     * java.security.PrivilegedActionException}).
     *
     * @param  cause the cause (which is saved for later retrieval by the
     *         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
     *         permitted, and indicates that the cause is nonexistent or
     *         unknown.)
     * @since  1.5
     */
    public UnsupportedOperationException(Throwable cause) {
        super(cause);
    }

    static final long serialVersionUID = -1242599979055084673L;
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
javaUtilEx.juLinkedListCreateRemoveElement.main([Ljava/lang/String;)V: Graph of 1463 nodes with 8 SCCs.



javaUtilEx.juLinkedListCreateRemoveElement.createList(I)LjavaUtilEx/LinkedList;: Graph of 250 nodes with 1 SCC.



javaUtilEx.Content.equals(Ljava/lang/Object;)Z: Graph of 32 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 9 SCCss.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveElement.createList(I)LjavaUtilEx/LinkedList;
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*java.lang.String: [count]
*javaUtilEx.LinkedList: [header, size]
*javaUtilEx.LinkedList$Entry: [previous, next]
*javaUtilEx.AbstractList: [modCount]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(8) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 118 IRulesP rules:
f12154_0_createList_LE(EOS(STATIC_12154(java.lang.Object(o11362sub), i3525)), i3547, i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12161_0_createList_LE(EOS(STATIC_12161(java.lang.Object(o11362sub), i3525)), i3547, i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12161_0_createList_LE(EOS(STATIC_12161(java.lang.Object(o11362sub), i3525)), i3547, i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12170_0_createList_Load(EOS(STATIC_12170(java.lang.Object(o11362sub), i3525)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: i3547 > 0
f12170_0_createList_Load(EOS(STATIC_12170(java.lang.Object(o11362sub), i3525)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12181_0_createList_New(EOS(STATIC_12181(java.lang.Object(o11362sub), i3525)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12181_0_createList_New(EOS(STATIC_12181(java.lang.Object(o11362sub), i3525)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12189_0_createList_Duplicate(EOS(STATIC_12189(java.lang.Object(o11362sub), i3525)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12189_0_createList_Duplicate(EOS(STATIC_12189(java.lang.Object(o11362sub), i3525)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12196_0_createList_InvokeMethod(EOS(STATIC_12196(java.lang.Object(o11362sub), i3525)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12196_0_createList_InvokeMethod(EOS(STATIC_12196(java.lang.Object(o11362sub), i3525)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12204_0_random_FieldAccess(EOS(STATIC_12204(java.lang.Object(o11362sub), i3525)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12204_0_random_FieldAccess(EOS(STATIC_12204(java.lang.Object(o11362sub), i3525)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12217_0_random_FieldAccess(EOS(STATIC_12217(java.lang.Object(o11362sub), i3525)), i3547, java.lang.Object(o11362sub), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12217_0_random_FieldAccess(EOS(STATIC_12217(java.lang.Object(o11362sub), i3525)), i3547, java.lang.Object(o11362sub), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12226_0_random_ArrayAccess(EOS(STATIC_12226(java.lang.Object(o11362sub), i3525)), i3547, java.lang.Object(o11362sub), i3525, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12226_0_random_ArrayAccess(EOS(STATIC_12226(java.lang.Object(ARRAY(i3609)), i3525)), i3547, java.lang.Object(ARRAY(i3609)), i3525, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12232_0_random_ArrayAccess(EOS(STATIC_12232(java.lang.Object(ARRAY(i3609)), i3525)), i3547, java.lang.Object(ARRAY(i3609)), i3525, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: i3609 >= 0
f12232_0_random_ArrayAccess(EOS(STATIC_12232(java.lang.Object(ARRAY(i3609)), i3617)), i3547, java.lang.Object(ARRAY(i3609)), i3617, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12239_0_random_ArrayAccess(EOS(STATIC_12239(java.lang.Object(ARRAY(i3609)), i3617)), i3547, java.lang.Object(ARRAY(i3609)), i3617, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12239_0_random_ArrayAccess(EOS(STATIC_12239(java.lang.Object(ARRAY(i3609)), i3617)), i3547, java.lang.Object(ARRAY(i3609)), i3617, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12246_0_random_ArrayAccess(EOS(STATIC_12246(java.lang.Object(ARRAY(i3609)), i3617)), i3547, java.lang.Object(ARRAY(i3609)), i3617, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12246_0_random_ArrayAccess(EOS(STATIC_12246(java.lang.Object(ARRAY(i3609)), i3617)), i3547, java.lang.Object(ARRAY(i3609)), i3617, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12254_0_random_Store(EOS(STATIC_12254(java.lang.Object(ARRAY(i3609)), i3617)), i3547, o11918, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: i3617 < i3609
f12254_0_random_Store(EOS(STATIC_12254(java.lang.Object(ARRAY(i3609)), i3617)), i3547, o11918, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12264_0_random_FieldAccess(EOS(STATIC_12264(java.lang.Object(ARRAY(i3609)), i3617)), i3547, o11918, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12264_0_random_FieldAccess(EOS(STATIC_12264(java.lang.Object(ARRAY(i3609)), i3617)), i3547, o11918, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12272_0_random_ConstantStackPush(EOS(STATIC_12272(java.lang.Object(ARRAY(i3609)), i3617)), i3547, o11918, i3617, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12272_0_random_ConstantStackPush(EOS(STATIC_12272(java.lang.Object(ARRAY(i3609)), i3617)), i3547, o11918, i3617, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12279_0_random_IntArithmetic(EOS(STATIC_12279(java.lang.Object(ARRAY(i3609)), i3617)), i3547, o11918, i3617, 1, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12279_0_random_IntArithmetic(EOS(STATIC_12279(java.lang.Object(ARRAY(i3609)), i3617)), i3547, o11918, i3617, matching1, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12290_0_random_FieldAccess(EOS(STATIC_12290(java.lang.Object(ARRAY(i3609)), i3617)), i3547, o11918, i3617 + 1, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: i3617 >= 0 && matching1 = 1
f12290_0_random_FieldAccess(EOS(STATIC_12290(java.lang.Object(ARRAY(i3609)), i3617)), i3547, o11918, i3641, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12300_0_random_Load(EOS(STATIC_12300(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11918, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12300_0_random_Load(EOS(STATIC_12300(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11918, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12309_0_random_InvokeMethod(EOS(STATIC_12309(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11918, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12309_0_random_InvokeMethod(EOS(STATIC_12309(java.lang.Object(ARRAY(i3609)), i3641)), i3547, java.lang.Object(o12019sub), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12319_0_random_InvokeMethod(EOS(STATIC_12319(java.lang.Object(ARRAY(i3609)), i3641)), i3547, java.lang.Object(o12019sub), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12319_0_random_InvokeMethod(EOS(STATIC_12319(java.lang.Object(ARRAY(i3609)), i3641)), i3547, java.lang.Object(o12023sub), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12330_0_random_InvokeMethod(EOS(STATIC_12330(java.lang.Object(ARRAY(i3609)), i3641)), i3547, java.lang.Object(o12023sub), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12330_0_random_InvokeMethod(EOS(STATIC_12330(java.lang.Object(ARRAY(i3609)), i3641)), i3547, java.lang.Object(o12023sub), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12343_0_length_Load(EOS(STATIC_12343(java.lang.Object(ARRAY(i3609)), i3641)), i3547, java.lang.Object(o12023sub), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12343_0_length_Load(EOS(STATIC_12343(java.lang.Object(ARRAY(i3609)), i3641)), i3547, java.lang.Object(o12023sub), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12369_0_length_FieldAccess(EOS(STATIC_12369(java.lang.Object(ARRAY(i3609)), i3641)), i3547, java.lang.Object(o12023sub), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12369_0_length_FieldAccess(EOS(STATIC_12369(java.lang.Object(ARRAY(i3609)), i3641)), i3547, java.lang.Object(java.lang.String(EOC, i3657)), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12386_0_length_FieldAccess(EOS(STATIC_12386(java.lang.Object(ARRAY(i3609)), i3641)), i3547, java.lang.Object(java.lang.String(EOC, i3657)), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12386_0_length_FieldAccess(EOS(STATIC_12386(java.lang.Object(ARRAY(i3609)), i3641)), i3547, java.lang.Object(java.lang.String(EOC, i3657)), o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12398_0_length_Return(EOS(STATIC_12398(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12398_0_length_Return(EOS(STATIC_12398(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12410_0_random_Return(EOS(STATIC_12410(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12410_0_random_Return(EOS(STATIC_12410(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12421_0_createList_InvokeMethod(EOS(STATIC_12421(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12421_0_createList_InvokeMethod(EOS(STATIC_12421(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12431_0__init__Load(EOS(STATIC_12431(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12431_0__init__Load(EOS(STATIC_12431(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12452_0__init__InvokeMethod(EOS(STATIC_12452(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12452_0__init__InvokeMethod(EOS(STATIC_12452(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12466_0__init__Load(EOS(STATIC_12466(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12466_0__init__Load(EOS(STATIC_12466(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12484_0__init__Load(EOS(STATIC_12484(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12484_0__init__Load(EOS(STATIC_12484(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12501_0__init__FieldAccess(EOS(STATIC_12501(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12501_0__init__FieldAccess(EOS(STATIC_12501(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12521_0__init__Return(EOS(STATIC_12521(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12521_0__init__Return(EOS(STATIC_12521(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12543_0_createList_InvokeMethod(EOS(STATIC_12543(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12543_0_createList_InvokeMethod(EOS(STATIC_12543(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12568_0_addLast_Load(EOS(STATIC_12568(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12568_0_addLast_Load(EOS(STATIC_12568(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12612_0_addLast_Load(EOS(STATIC_12612(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12612_0_addLast_Load(EOS(STATIC_12612(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12631_0_addLast_Load(EOS(STATIC_12631(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12631_0_addLast_Load(EOS(STATIC_12631(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12643_0_addLast_FieldAccess(EOS(STATIC_12643(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12643_0_addLast_FieldAccess(EOS(STATIC_12643(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12656_0_addLast_InvokeMethod(EOS(STATIC_12656(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12656_0_addLast_InvokeMethod(EOS(STATIC_12656(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12676_0_addBefore_New(EOS(STATIC_12676(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12676_0_addBefore_New(EOS(STATIC_12676(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12703_0_addBefore_Duplicate(EOS(STATIC_12703(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12703_0_addBefore_Duplicate(EOS(STATIC_12703(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12723_0_addBefore_Load(EOS(STATIC_12723(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12723_0_addBefore_Load(EOS(STATIC_12723(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12742_0_addBefore_Load(EOS(STATIC_12742(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12742_0_addBefore_Load(EOS(STATIC_12742(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12761_0_addBefore_Load(EOS(STATIC_12761(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12761_0_addBefore_Load(EOS(STATIC_12761(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12772_0_addBefore_FieldAccess(EOS(STATIC_12772(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12772_0_addBefore_FieldAccess(EOS(STATIC_12772(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12779_0_addBefore_FieldAccess(EOS(STATIC_12779(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: o11367[LinkedList$Entry.next]o11367 > 0 && o11367[LinkedList$Entry.next]o11365 > 0 && o11367[LinkedList$Entry.previous]o11365 > 0 && o11367[LinkedList$Entry.previous]o11367 > 0
f12779_0_addBefore_FieldAccess(EOS(STATIC_12779(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12794_0_addBefore_FieldAccess(EOS(STATIC_12794(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: o11366[LinkedList$Entry.previous]o11366 > 0 && o11366[LinkedList$Entry.previous]o11365 > 0
f12794_0_addBefore_FieldAccess(EOS(STATIC_12794(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12811_0_addBefore_FieldAccess(EOS(STATIC_12811(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: o11368[LinkedList$Entry.previous]o11365 > 0 && o11368[LinkedList$Entry.previous]o11368 > 0
f12811_0_addBefore_FieldAccess(EOS(STATIC_12811(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12828_0_addBefore_InvokeMethod(EOS(STATIC_12828(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12828_0_addBefore_InvokeMethod(EOS(STATIC_12828(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12845_0__init__Load(EOS(STATIC_12845(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12845_0__init__Load(EOS(STATIC_12845(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12880_0__init__InvokeMethod(EOS(STATIC_12880(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12880_0__init__InvokeMethod(EOS(STATIC_12880(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12901_0__init__Load(EOS(STATIC_12901(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12901_0__init__Load(EOS(STATIC_12901(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12922_0__init__Load(EOS(STATIC_12922(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12922_0__init__Load(EOS(STATIC_12922(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12939_0__init__FieldAccess(EOS(STATIC_12939(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12939_0__init__FieldAccess(EOS(STATIC_12939(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12951_0__init__Load(EOS(STATIC_12951(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12951_0__init__Load(EOS(STATIC_12951(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12965_0__init__Load(EOS(STATIC_12965(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12965_0__init__Load(EOS(STATIC_12965(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12984_0__init__FieldAccess(EOS(STATIC_12984(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f12984_0__init__FieldAccess(EOS(STATIC_12984(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f13002_0__init__Load(EOS(STATIC_13002(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f13002_0__init__Load(EOS(STATIC_13002(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f13015_0__init__Load(EOS(STATIC_13015(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f13015_0__init__Load(EOS(STATIC_13015(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f13037_0__init__FieldAccess(EOS(STATIC_13037(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f13037_0__init__FieldAccess(EOS(STATIC_13037(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f13055_0__init__Return(EOS(STATIC_13055(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f13055_0__init__Return(EOS(STATIC_13055(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f13065_0_addBefore_Store(EOS(STATIC_13065(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f13065_0_addBefore_Store(EOS(STATIC_13065(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f13083_0_addBefore_Load(EOS(STATIC_13083(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f13083_0_addBefore_Load(EOS(STATIC_13083(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f13101_0_addBefore_FieldAccess(EOS(STATIC_13101(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f13101_0_addBefore_FieldAccess(EOS(STATIC_13101(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f13119_0_addBefore_Load(EOS(STATIC_13119(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f13119_0_addBefore_Load(EOS(STATIC_13119(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f13140_0_addBefore_FieldAccess(EOS(STATIC_13140(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f13140_0_addBefore_FieldAccess(EOS(STATIC_13140(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f13160_0_addBefore_FieldAccess(EOS(STATIC_13160(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: o11367[LinkedList$Entry.next]o11367 > 0 && o11368[LinkedList$Entry.previous]o11367 > 0 && o11367[LinkedList$Entry.previous]o11367 > 0 && o11367[LinkedList$Entry.next]o11368 > 0 && o11367[LinkedList$Entry.previous]o11368 > 0 && o11368[LinkedList$Entry.previous]o11368 > 0
f13140_0_addBefore_FieldAccess(EOS(STATIC_13140(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.next]o11366, o16402[LinkedList$Entry.previous]o11366, o16402[LinkedList$Entry.previous]o11366, o16402[LinkedList$Entry.next]o16402, o16402[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.next]o16402, o16402[LinkedList$Entry.previous]o16402, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13161_0_addBefore_FieldAccess(EOS(STATIC_13161(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13160_0_addBefore_FieldAccess(EOS(STATIC_13160(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13171_0_addBefore_FieldAccess(EOS(STATIC_13171(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: o11368[LinkedList$Entry.previous]o11366 > 0 && o11366[LinkedList$Entry.previous]o11366 > 0 && o11366[LinkedList$Entry.previous]o11368 > 0 && o11368[LinkedList$Entry.previous]o11368 > 0
f13171_0_addBefore_FieldAccess(EOS(STATIC_13171(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13187_0_addBefore_Load(EOS(STATIC_13187(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13187_0_addBefore_Load(EOS(STATIC_13187(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13206_0_addBefore_FieldAccess(EOS(STATIC_13206(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13206_0_addBefore_FieldAccess(EOS(STATIC_13206(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13231_0_addBefore_Load(EOS(STATIC_13231(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13231_0_addBefore_Load(EOS(STATIC_13231(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13250_0_addBefore_FieldAccess(EOS(STATIC_13250(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13250_0_addBefore_FieldAccess(EOS(STATIC_13250(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13269_0_addBefore_Load(EOS(STATIC_13269(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13269_0_addBefore_Load(EOS(STATIC_13269(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13287_0_addBefore_Duplicate(EOS(STATIC_13287(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13287_0_addBefore_Duplicate(EOS(STATIC_13287(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13306_0_addBefore_FieldAccess(EOS(STATIC_13306(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13306_0_addBefore_FieldAccess(EOS(STATIC_13306(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13321_0_addBefore_ConstantStackPush(EOS(STATIC_13321(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13321_0_addBefore_ConstantStackPush(EOS(STATIC_13321(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13338_0_addBefore_IntArithmetic(EOS(STATIC_13338(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13338_0_addBefore_IntArithmetic(EOS(STATIC_13338(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13353_0_addBefore_FieldAccess(EOS(STATIC_13353(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13353_0_addBefore_FieldAccess(EOS(STATIC_13353(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13367_0_addBefore_Load(EOS(STATIC_13367(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13367_0_addBefore_Load(EOS(STATIC_13367(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13384_0_addBefore_Duplicate(EOS(STATIC_13384(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13384_0_addBefore_Duplicate(EOS(STATIC_13384(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13403_0_addBefore_FieldAccess(EOS(STATIC_13403(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13403_0_addBefore_FieldAccess(EOS(STATIC_13403(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13415_0_addBefore_ConstantStackPush(EOS(STATIC_13415(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13415_0_addBefore_ConstantStackPush(EOS(STATIC_13415(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13425_0_addBefore_IntArithmetic(EOS(STATIC_13425(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13425_0_addBefore_IntArithmetic(EOS(STATIC_13425(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13434_0_addBefore_FieldAccess(EOS(STATIC_13434(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13434_0_addBefore_FieldAccess(EOS(STATIC_13434(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13445_0_addBefore_Load(EOS(STATIC_13445(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13445_0_addBefore_Load(EOS(STATIC_13445(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13456_0_addBefore_Return(EOS(STATIC_13456(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13456_0_addBefore_Return(EOS(STATIC_13456(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13467_0_addLast_StackPop(EOS(STATIC_13467(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13467_0_addLast_StackPop(EOS(STATIC_13467(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13482_0_addLast_Return(EOS(STATIC_13482(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13482_0_addLast_Return(EOS(STATIC_13482(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13497_0_createList_Inc(EOS(STATIC_13497(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13497_0_createList_Inc(EOS(STATIC_13497(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13508_0_createList_JMP(EOS(STATIC_13508(java.lang.Object(ARRAY(i3609)), i3641)), i3547 + -1, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13508_0_createList_JMP(EOS(STATIC_13508(java.lang.Object(ARRAY(i3609)), i3641)), i5212, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f13527_0_createList_Load(EOS(STATIC_13527(java.lang.Object(ARRAY(i3609)), i3641)), i5212, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) :|: TRUE
f13527_0_createList_Load(EOS(STATIC_13527(java.lang.Object(ARRAY(i3609)), i3641)), i5212, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368, o11367[LinkedList$Entry.previous]o11368) -> f12147_0_createList_Load(EOS(STATIC_12147(java.lang.Object(ARRAY(i3609)), i3641)), i5212, o11367[LinkedList$Entry.next]o11366, o13821[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o13821[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o13821[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o13821, o11367[LinkedList$Entry.previous]o13821, o11366[LinkedList$Entry.previous]o13821, o13821[LinkedList$Entry.previous]o13821) :|: TRUE
f12147_0_createList_Load(EOS(STATIC_12147(java.lang.Object(o11362sub), i3525)), i3527, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) -> f12154_0_createList_LE(EOS(STATIC_12154(java.lang.Object(o11362sub), i3525)), i3527, i3527, o11367[LinkedList$Entry.next]o11366, o11368[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.previous]o11366, o11367[LinkedList$Entry.next]o11367, o11367[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o11368[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o11367, o11368[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.previous]o11365, o11367[LinkedList$Entry.previous]o11367, o11367[LinkedList$Entry.next]o11368, o11367[LinkedList$Entry.previous]o11368, o11366[LinkedList$Entry.previous]o11368, o11368[LinkedList$Entry.previous]o11368) :|: TRUE
f13161_0_addBefore_FieldAccess(EOS(STATIC_13161(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13173_0_addBefore_FieldAccess(EOS(STATIC_13173(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: o16402[LinkedList$Entry.previous]o11366 > 0 && o11366[LinkedList$Entry.previous]o11366 > 0 && o11366[LinkedList$Entry.previous]o16402 > 0 && o16402[LinkedList$Entry.previous]o16402 > 0
f13173_0_addBefore_FieldAccess(EOS(STATIC_13173(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13188_0_addBefore_Load(EOS(STATIC_13188(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13188_0_addBefore_Load(EOS(STATIC_13188(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13207_0_addBefore_FieldAccess(EOS(STATIC_13207(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13207_0_addBefore_FieldAccess(EOS(STATIC_13207(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13232_0_addBefore_Load(EOS(STATIC_13232(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13232_0_addBefore_Load(EOS(STATIC_13232(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13251_0_addBefore_FieldAccess(EOS(STATIC_13251(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13251_0_addBefore_FieldAccess(EOS(STATIC_13251(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13270_0_addBefore_Load(EOS(STATIC_13270(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13270_0_addBefore_Load(EOS(STATIC_13270(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13288_0_addBefore_Duplicate(EOS(STATIC_13288(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13288_0_addBefore_Duplicate(EOS(STATIC_13288(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13307_0_addBefore_FieldAccess(EOS(STATIC_13307(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13307_0_addBefore_FieldAccess(EOS(STATIC_13307(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13322_0_addBefore_ConstantStackPush(EOS(STATIC_13322(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13322_0_addBefore_ConstantStackPush(EOS(STATIC_13322(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13339_0_addBefore_IntArithmetic(EOS(STATIC_13339(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13339_0_addBefore_IntArithmetic(EOS(STATIC_13339(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13354_0_addBefore_FieldAccess(EOS(STATIC_13354(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13354_0_addBefore_FieldAccess(EOS(STATIC_13354(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13368_0_addBefore_Load(EOS(STATIC_13368(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13368_0_addBefore_Load(EOS(STATIC_13368(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13385_0_addBefore_Duplicate(EOS(STATIC_13385(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13385_0_addBefore_Duplicate(EOS(STATIC_13385(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13404_0_addBefore_FieldAccess(EOS(STATIC_13404(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13404_0_addBefore_FieldAccess(EOS(STATIC_13404(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13416_0_addBefore_ConstantStackPush(EOS(STATIC_13416(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13416_0_addBefore_ConstantStackPush(EOS(STATIC_13416(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13426_0_addBefore_IntArithmetic(EOS(STATIC_13426(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13426_0_addBefore_IntArithmetic(EOS(STATIC_13426(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13435_0_addBefore_FieldAccess(EOS(STATIC_13435(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13435_0_addBefore_FieldAccess(EOS(STATIC_13435(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13446_0_addBefore_Load(EOS(STATIC_13446(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13446_0_addBefore_Load(EOS(STATIC_13446(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13457_0_addBefore_Return(EOS(STATIC_13457(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13457_0_addBefore_Return(EOS(STATIC_13457(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13468_0_addLast_StackPop(EOS(STATIC_13468(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13468_0_addLast_StackPop(EOS(STATIC_13468(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13483_0_addLast_Return(EOS(STATIC_13483(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13483_0_addLast_Return(EOS(STATIC_13483(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13498_0_createList_Inc(EOS(STATIC_13498(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13498_0_createList_Inc(EOS(STATIC_13498(java.lang.Object(ARRAY(i3609)), i3641)), i3547, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13509_0_createList_JMP(EOS(STATIC_13509(java.lang.Object(ARRAY(i3609)), i3641)), i3547 + -1, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13509_0_createList_JMP(EOS(STATIC_13509(java.lang.Object(ARRAY(i3609)), i3641)), i5213, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f13528_0_createList_Load(EOS(STATIC_13528(java.lang.Object(ARRAY(i3609)), i3641)), i5213, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) :|: TRUE
f13528_0_createList_Load(EOS(STATIC_13528(java.lang.Object(ARRAY(i3609)), i3641)), i5213, o16402[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o16402) -> f12147_0_createList_Load(EOS(STATIC_12147(java.lang.Object(ARRAY(i3609)), i3641)), i5213, o16402[LinkedList$Entry.next]o11366, o13821[LinkedList$Entry.previous]o11366, o16402[LinkedList$Entry.previous]o11366, o16402[LinkedList$Entry.next]o16402, o16402[LinkedList$Entry.next]o11365, o11366[LinkedList$Entry.previous]o11366, o11366[LinkedList$Entry.previous]o11365, o13821[LinkedList$Entry.previous]o11365, o11366[LinkedList$Entry.previous]o16402, o13821[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.previous]o11365, o16402[LinkedList$Entry.previous]o16402, o16402[LinkedList$Entry.next]o13821, o16402[LinkedList$Entry.previous]o13821, o11366[LinkedList$Entry.previous]o13821, o13821[LinkedList$Entry.previous]o13821) :|: o16402[LinkedList$Entry.next]o16402 = 4 && o13821[LinkedList$Entry.previous]o16402 = 1 && o16402[LinkedList$Entry.next]o13821 = 1
Combined rules. Obtained 2 IRulesP rules:
f12154_0_createList_LE(EOS(STATIC_12154(java.lang.Object(ARRAY(i3609:0)), i3525:0)), i3547:0, i3547:0, o11367[LinkedList$Entry.next]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.next]o11367:0, o11367[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.next]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0) -> f12154_0_createList_LE(EOS(STATIC_12154(java.lang.Object(ARRAY(i3609:0)), i3525:0 + 1)), i3547:0 - 1, i3547:0 - 1, o16402[LinkedList$Entry.next]o11366:0, o13821[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, 4, o16402[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o13821[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, 1, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, 1, o16402[LinkedList$Entry.previous]o13821:0, o11366[LinkedList$Entry.previous]o13821:0, o13821[LinkedList$Entry.previous]o13821:0) :|: i3547:0 > 0 && i3609:0 > -1 && i3609:0 > i3525:0 && i3525:0 > -1 && o11367[LinkedList$Entry.next]o11365:0 > 0 && o11367[LinkedList$Entry.next]o11367:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0 > 0 && o11366[LinkedList$Entry.previous]o11367:0 > 0
f12154_0_createList_LE(EOS(STATIC_12154(java.lang.Object(ARRAY(i3609:0)), i3525:0)), i3547:0, i3547:0, o11367[LinkedList$Entry.next]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.next]o11367:0, o11367[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.previous]o11365:0, o11367[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.next]o11368:0, o11367[LinkedList$Entry.previous]o11368:0, o11366[LinkedList$Entry.previous]o11368:0, o11368[LinkedList$Entry.previous]o11368:0) -> f12154_0_createList_LE(EOS(STATIC_12154(java.lang.Object(ARRAY(i3609:0)), i3525:0 + 1)), i3547:0 - 1, i3547:0 - 1, o11367[LinkedList$Entry.next]o11366:0, o13821[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.next]o11367:0, o11367[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o13821[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, o13821[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.previous]o11365:0, o11367[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.next]o13821:0, o11367[LinkedList$Entry.previous]o13821:0, o11366[LinkedList$Entry.previous]o13821:0, o13821[LinkedList$Entry.previous]o13821:0) :|: i3547:0 > 0 && i3609:0 > -1 && i3609:0 > i3525:0 && i3525:0 > -1 && o11367[LinkedList$Entry.next]o11365:0 > 0 && o11367[LinkedList$Entry.next]o11367:0 > 0 && o11367[LinkedList$Entry.previous]o11365:0 > 0 && o11367[LinkedList$Entry.previous]o11367:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0 > 0 && o11368[LinkedList$Entry.previous]o11368:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0 > 0 && o11367[LinkedList$Entry.next]o11368:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0 > 0 && o11367[LinkedList$Entry.previous]o11368:0 > 0 && o11366[LinkedList$Entry.previous]o11368:0 > 0
Filtered duplicate arguments:
   f12154_0_createList_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f12154_0_createList_LE(x1, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)
Filtered unneeded arguments:
   f12154_0_createList_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f12154_0_createList_LE(x1, x2, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)
Finished conversion. Obtained 2 rules.P rules:
f12154_0_createList_LE(i3547:0, o11368[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.next]o11367:0, o11367[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.next]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, i3609:0, i3525:0) -> f12154_0_createList_LE(i3547:0 - 1, o13821[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, 4, o16402[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o13821[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, 1, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, 1, o16402[LinkedList$Entry.previous]o13821:0, o11366[LinkedList$Entry.previous]o13821:0, o13821[LinkedList$Entry.previous]o13821:0, i3609:0, i3525:0 + 1) :|: i3609:0 > -1 && i3547:0 > 0 && i3609:0 > i3525:0 && i3525:0 > -1 && o11367[LinkedList$Entry.next]o11365:0 > 0 && o11367[LinkedList$Entry.next]o11367:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0 > 0 && o11366[LinkedList$Entry.previous]o11367:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0 > 0
f12154_0_createList_LE(i3547:0, o11368[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.next]o11367:0, o11367[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.previous]o11365:0, o11367[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.next]o11368:0, o11367[LinkedList$Entry.previous]o11368:0, o11366[LinkedList$Entry.previous]o11368:0, o11368[LinkedList$Entry.previous]o11368:0, i3609:0, i3525:0) -> f12154_0_createList_LE(i3547:0 - 1, o13821[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.next]o11367:0, o11367[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o13821[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, o13821[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.previous]o11365:0, o11367[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.next]o13821:0, o11367[LinkedList$Entry.previous]o13821:0, o11366[LinkedList$Entry.previous]o13821:0, o13821[LinkedList$Entry.previous]o13821:0, i3609:0, i3525:0 + 1) :|: i3609:0 > -1 && i3547:0 > 0 && i3609:0 > i3525:0 && i3525:0 > -1 && o11367[LinkedList$Entry.next]o11365:0 > 0 && o11367[LinkedList$Entry.next]o11367:0 > 0 && o11367[LinkedList$Entry.previous]o11365:0 > 0 && o11367[LinkedList$Entry.previous]o11367:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0 > 0 && o11368[LinkedList$Entry.previous]o11368:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0 > 0 && o11367[LinkedList$Entry.next]o11368:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0 > 0 && o11366[LinkedList$Entry.previous]o11368:0 > 0 && o11367[LinkedList$Entry.previous]o11368:0 > 0

----------------------------------------

(9)
Obligation:
Rules:
f12154_0_createList_LE(i3547:0, o11368[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.next]o11367:0, o11367[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.next]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, i3609:0, i3525:0) -> f12154_0_createList_LE(i3547:0 - 1, o13821[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, 4, o16402[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o13821[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, 1, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, 1, o16402[LinkedList$Entry.previous]o13821:0, o11366[LinkedList$Entry.previous]o13821:0, o13821[LinkedList$Entry.previous]o13821:0, i3609:0, i3525:0 + 1) :|: i3609:0 > -1 && i3547:0 > 0 && i3609:0 > i3525:0 && i3525:0 > -1 && o11367[LinkedList$Entry.next]o11365:0 > 0 && o11367[LinkedList$Entry.next]o11367:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0 > 0 && o11366[LinkedList$Entry.previous]o11367:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0 > 0
f12154_0_createList_LE(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17) -> f12154_0_createList_LE(x - 1, x18, x2, x3, x4, x5, x6, x19, x8, x20, x10, x11, x21, x22, x23, x24, x16, x17 + 1) :|: x16 > -1 && x > 0 && x16 > x17 && x17 > -1 && x4 > 0 && x3 > 0 && x10 > 0 && x11 > 0 && x6 > 0 && x5 > 0 && x15 > 0 && x7 > 0 && x9 > 0 && x12 > 0 && x1 > 0 && x14 > 0 && x13 > 0

----------------------------------------

(10) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(11)
Obligation:
Rules:
f12154_0_createList_LE(i3547:0, o11368[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.next]o11367:0, o11367[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.next]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, i3609:0, i3525:0) -> f12154_0_createList_LE(arith, o13821[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, 4, o16402[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o13821[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, 1, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, 1, o16402[LinkedList$Entry.previous]o13821:0, o11366[LinkedList$Entry.previous]o13821:0, o13821[LinkedList$Entry.previous]o13821:0, i3609:0, arith1) :|: i3609:0 > -1 && i3547:0 > 0 && i3609:0 > i3525:0 && i3525:0 > -1 && o11367[LinkedList$Entry.next]o11365:0 > 0 && o11367[LinkedList$Entry.next]o11367:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0 > 0 && o11366[LinkedList$Entry.previous]o11367:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0 > 0 && arith = i3547:0 - 1 && arith1 = i3525:0 + 1
f12154_0_createList_LE(x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f12154_0_createList_LE(x43, x44, x27, x28, x29, x30, x31, x45, x33, x46, x35, x36, x47, x48, x49, x50, x41, x51) :|: x41 > -1 && x25 > 0 && x41 > x42 && x42 > -1 && x29 > 0 && x28 > 0 && x35 > 0 && x36 > 0 && x31 > 0 && x30 > 0 && x40 > 0 && x32 > 0 && x34 > 0 && x37 > 0 && x26 > 0 && x39 > 0 && x38 > 0 && x43 = x25 - 1 && x51 = x42 + 1

----------------------------------------

(12) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12154_0_createList_LE(i3547:0, o11368[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.next]o11367:0, o11367[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.next]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, i3609:0, i3525:0) -> f12154_0_createList_LE(arith, o13821[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, 4, o16402[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o13821[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, 1, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, 1, o16402[LinkedList$Entry.previous]o13821:0, o11366[LinkedList$Entry.previous]o13821:0, o13821[LinkedList$Entry.previous]o13821:0, i3609:0, arith1) :|: i3609:0 > -1 && i3547:0 > 0 && i3609:0 > i3525:0 && i3525:0 > -1 && o11367[LinkedList$Entry.next]o11365:0 > 0 && o11367[LinkedList$Entry.next]o11367:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0 > 0 && o11366[LinkedList$Entry.previous]o11367:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0 > 0 && arith = i3547:0 - 1 && arith1 = i3525:0 + 1
(2) f12154_0_createList_LE(x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f12154_0_createList_LE(x43, x44, x27, x28, x29, x30, x31, x45, x33, x46, x35, x36, x47, x48, x49, x50, x41, x51) :|: x41 > -1 && x25 > 0 && x41 > x42 && x42 > -1 && x29 > 0 && x28 > 0 && x35 > 0 && x36 > 0 && x31 > 0 && x30 > 0 && x40 > 0 && x32 > 0 && x34 > 0 && x37 > 0 && x26 > 0 && x39 > 0 && x38 > 0 && x43 = x25 - 1 && x51 = x42 + 1

Arcs:
(1) -> (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f12154_0_createList_LE(i3547:0, o11368[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, o11367[LinkedList$Entry.next]o11367:0, o11367[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, o11367[LinkedList$Entry.next]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, o11366[LinkedList$Entry.previous]o11367:0, o11368[LinkedList$Entry.previous]o11367:0, i3609:0, i3525:0) -> f12154_0_createList_LE(arith, o13821[LinkedList$Entry.previous]o11366:0, o11368[LinkedList$Entry.previous]o11366:0, 4, o16402[LinkedList$Entry.next]o11365:0, o11366[LinkedList$Entry.previous]o11366:0, o11366[LinkedList$Entry.previous]o11365:0, o13821[LinkedList$Entry.previous]o11365:0, o11366[LinkedList$Entry.previous]o11367:0, 1, o11368[LinkedList$Entry.previous]o11365:0, o11368[LinkedList$Entry.previous]o11367:0, 1, o16402[LinkedList$Entry.previous]o13821:0, o11366[LinkedList$Entry.previous]o13821:0, o13821[LinkedList$Entry.previous]o13821:0, i3609:0, arith1) :|: i3609:0 > -1 && i3547:0 > 0 && i3609:0 > i3525:0 && i3525:0 > -1 && o11367[LinkedList$Entry.next]o11365:0 > 0 && o11367[LinkedList$Entry.next]o11367:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0 > 0 && o11366[LinkedList$Entry.previous]o11367:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0 > 0 && arith = i3547:0 - 1 && arith1 = i3525:0 + 1
(2) f12154_0_createList_LE(x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f12154_0_createList_LE(x43, x44, x27, x28, x29, x30, x31, x45, x33, x46, x35, x36, x47, x48, x49, x50, x41, x51) :|: x41 > -1 && x25 > 0 && x41 > x42 && x42 > -1 && x29 > 0 && x28 > 0 && x35 > 0 && x36 > 0 && x31 > 0 && x30 > 0 && x40 > 0 && x32 > 0 && x34 > 0 && x37 > 0 && x26 > 0 && x39 > 0 && x38 > 0 && x43 = x25 - 1 && x51 = x42 + 1

Arcs:
(1) -> (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f12154_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12154_0_createList_LE(x25:0 - 1, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, x42:0 + 1) :|: x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1
f12154_0_createList_LE(i3547:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, o11367[LinkedList$Entry.next]o11367:0:0, o11367[LinkedList$Entry.next]o11365:0:0, o11366[LinkedList$Entry.previous]o11366:0:0, o11366[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11365:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11367[LinkedList$Entry.next]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, i3609:0:0, i3525:0:0) -> f12154_0_createList_LE(i3547:0:0 - 1, o13821[LinkedList$Entry.previous]o11366:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, 4, o16402[LinkedList$Entry.next]o11365:0:0, o11366[LinkedList$Entry.previous]o11366:0:0, o11366[LinkedList$Entry.previous]o11365:0:0, o13821[LinkedList$Entry.previous]o11365:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, 1, o11368[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, 1, o16402[LinkedList$Entry.previous]o13821:0:0, o11366[LinkedList$Entry.previous]o13821:0:0, o13821[LinkedList$Entry.previous]o13821:0:0, i3609:0:0, i3525:0:0 + 1) :|: o11366[LinkedList$Entry.previous]o11367:0:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0:0 > 0 && o11367[LinkedList$Entry.next]o11367:0:0 > 0 && o11367[LinkedList$Entry.next]o11365:0:0 > 0 && i3525:0:0 > -1 && i3609:0:0 > i3525:0:0 && i3547:0:0 > 0 && i3609:0:0 > -1

----------------------------------------

(16) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12154_0_createList_LE(INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(17)
Obligation:
Rules:
f12154_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12154_0_createList_LE(c, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, c1) :|: c1 = x42:0 + 1 && c = x25:0 - 1 && (x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1)
f12154_0_createList_LE(i3547:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, o11367[LinkedList$Entry.next]o11367:0:0, o11367[LinkedList$Entry.next]o11365:0:0, o11366[LinkedList$Entry.previous]o11366:0:0, o11366[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11365:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11367[LinkedList$Entry.next]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, i3609:0:0, i3525:0:0) -> f12154_0_createList_LE(c2, o13821[LinkedList$Entry.previous]o11366:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, c3, o16402[LinkedList$Entry.next]o11365:0:0, o11366[LinkedList$Entry.previous]o11366:0:0, o11366[LinkedList$Entry.previous]o11365:0:0, o13821[LinkedList$Entry.previous]o11365:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, c4, o11368[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, c5, o16402[LinkedList$Entry.previous]o13821:0:0, o11366[LinkedList$Entry.previous]o13821:0:0, o13821[LinkedList$Entry.previous]o13821:0:0, i3609:0:0, c6) :|: c6 = i3525:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i3547:0:0 - 1))) && (o11366[LinkedList$Entry.previous]o11367:0:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0:0 > 0 && o11367[LinkedList$Entry.next]o11367:0:0 > 0 && o11367[LinkedList$Entry.next]o11365:0:0 > 0 && i3525:0:0 > -1 && i3609:0:0 > i3525:0:0 && i3547:0:0 > 0 && i3609:0:0 > -1)

----------------------------------------

(18) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f12154_0_createList_LE ] = f12154_0_createList_LE_1

The following rules are decreasing:
f12154_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12154_0_createList_LE(c, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, c1) :|: c1 = x42:0 + 1 && c = x25:0 - 1 && (x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1)
f12154_0_createList_LE(i3547:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, o11367[LinkedList$Entry.next]o11367:0:0, o11367[LinkedList$Entry.next]o11365:0:0, o11366[LinkedList$Entry.previous]o11366:0:0, o11366[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11365:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11367[LinkedList$Entry.next]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, i3609:0:0, i3525:0:0) -> f12154_0_createList_LE(c2, o13821[LinkedList$Entry.previous]o11366:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, c3, o16402[LinkedList$Entry.next]o11365:0:0, o11366[LinkedList$Entry.previous]o11366:0:0, o11366[LinkedList$Entry.previous]o11365:0:0, o13821[LinkedList$Entry.previous]o11365:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, c4, o11368[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, c5, o16402[LinkedList$Entry.previous]o13821:0:0, o11366[LinkedList$Entry.previous]o13821:0:0, o13821[LinkedList$Entry.previous]o13821:0:0, i3609:0:0, c6) :|: c6 = i3525:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i3547:0:0 - 1))) && (o11366[LinkedList$Entry.previous]o11367:0:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0:0 > 0 && o11367[LinkedList$Entry.next]o11367:0:0 > 0 && o11367[LinkedList$Entry.next]o11365:0:0 > 0 && i3525:0:0 > -1 && i3609:0:0 > i3525:0:0 && i3547:0:0 > 0 && i3609:0:0 > -1)

The following rules are bounded:
f12154_0_createList_LE(x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0) -> f12154_0_createList_LE(c, x44:0, x27:0, x28:0, x29:0, x30:0, x31:0, x45:0, x33:0, x46:0, x35:0, x36:0, x47:0, x48:0, x49:0, x50:0, x41:0, c1) :|: c1 = x42:0 + 1 && c = x25:0 - 1 && (x39:0 > 0 && x38:0 > 0 && x26:0 > 0 && x37:0 > 0 && x34:0 > 0 && x32:0 > 0 && x40:0 > 0 && x30:0 > 0 && x31:0 > 0 && x36:0 > 0 && x35:0 > 0 && x28:0 > 0 && x29:0 > 0 && x42:0 > -1 && x42:0 < x41:0 && x25:0 > 0 && x41:0 > -1)
f12154_0_createList_LE(i3547:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, o11367[LinkedList$Entry.next]o11367:0:0, o11367[LinkedList$Entry.next]o11365:0:0, o11366[LinkedList$Entry.previous]o11366:0:0, o11366[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11365:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11367[LinkedList$Entry.next]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, i3609:0:0, i3525:0:0) -> f12154_0_createList_LE(c2, o13821[LinkedList$Entry.previous]o11366:0:0, o11368[LinkedList$Entry.previous]o11366:0:0, c3, o16402[LinkedList$Entry.next]o11365:0:0, o11366[LinkedList$Entry.previous]o11366:0:0, o11366[LinkedList$Entry.previous]o11365:0:0, o13821[LinkedList$Entry.previous]o11365:0:0, o11366[LinkedList$Entry.previous]o11367:0:0, c4, o11368[LinkedList$Entry.previous]o11365:0:0, o11368[LinkedList$Entry.previous]o11367:0:0, c5, o16402[LinkedList$Entry.previous]o13821:0:0, o11366[LinkedList$Entry.previous]o13821:0:0, o13821[LinkedList$Entry.previous]o13821:0:0, i3609:0:0, c6) :|: c6 = i3525:0:0 + 1 && (c5 = 1 && (c4 = 1 && (c3 = 4 && c2 = i3547:0:0 - 1))) && (o11366[LinkedList$Entry.previous]o11367:0:0 > 0 && o11368[LinkedList$Entry.previous]o11366:0:0 > 0 && o11366[LinkedList$Entry.previous]o11366:0:0 > 0 && o11366[LinkedList$Entry.previous]o11365:0:0 > 0 && o11368[LinkedList$Entry.previous]o11367:0:0 > 0 && o11368[LinkedList$Entry.previous]o11365:0:0 > 0 && o11367[LinkedList$Entry.next]o11367:0:0 > 0 && o11367[LinkedList$Entry.next]o11365:0:0 > 0 && i3525:0:0 > -1 && i3609:0:0 > i3525:0:0 && i3547:0:0 > 0 && i3609:0:0 > -1)


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveElement.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, next]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(21) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 65 IRulesP rules:
f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17838sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643, java.lang.Object(o17836sub-2076086643))), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836, o17838[LinkedList$Entry.next]o17834) -> f13409_0_remove_Load(EOS(STATIC_13409), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836, o17838[LinkedList$Entry.next]o17834) :|: TRUE
f13409_0_remove_Load(EOS(STATIC_13409), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836, o17838[LinkedList$Entry.next]o17834) -> f13420_0_remove_Load(EOS(STATIC_13420), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17837sub0), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836, o17838[LinkedList$Entry.next]o17834) :|: TRUE
f13420_0_remove_Load(EOS(STATIC_13420), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17837sub0), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836, o17838[LinkedList$Entry.next]o17834) -> f13429_0_remove_FieldAccess(EOS(STATIC_13429), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836, o17838[LinkedList$Entry.next]o17834) :|: TRUE
f13429_0_remove_FieldAccess(EOS(STATIC_13429), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836, o17838[LinkedList$Entry.next]o17834) -> f13439_0_remove_FieldAccess(EOS(STATIC_13439), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836) :|: o17836[LinkedList$Entry.next]o17838 > 0 && o17838[LinkedList$Entry.next]o17836 > 0
f13429_0_remove_FieldAccess(EOS(STATIC_13429), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o18852sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o18852sub0), java.lang.Object(o17837sub0), java.lang.Object(o18852sub0), o18852[LinkedList$Entry.next]o18852, o18852[LinkedList$Entry.next]o17834, o18852[LinkedList$Entry.next]o18852, o18852[LinkedList$Entry.next]o17834) -> f13440_0_remove_FieldAccess(EOS(STATIC_13440), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o18852sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o18852sub0), java.lang.Object(o17837sub0), java.lang.Object(o18852sub0), o18852[LinkedList$Entry.next]o17834, o18852[LinkedList$Entry.next]o18852) :|: TRUE
f13439_0_remove_FieldAccess(EOS(STATIC_13439), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), o17836[LinkedList$Entry.next]o18897, o17836[LinkedList$Entry.next]o17834, o18897[LinkedList$Entry.next]o17834, o18897[LinkedList$Entry.next]o17836) -> f13450_0_remove_FieldAccess(EOS(STATIC_13450), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: o18899[LinkedList$Entry.next]o17834 < o18897[LinkedList$Entry.next]o17834 && o18897[LinkedList$Entry.next]o17834 >= 0 && o18899[LinkedList$Entry.next]o17836 < o18897[LinkedList$Entry.next]o17836 && o18897[LinkedList$Entry.next]o17836 >= 0
f13450_0_remove_FieldAccess(EOS(STATIC_13450), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f13461_0_remove_InvokeMethod(EOS(STATIC_13461), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), java.lang.Object(o17837sub0), o188980, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: TRUE
f13461_0_remove_InvokeMethod(EOS(STATIC_13461), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), java.lang.Object(o17837sub0), o188980, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f13472_0_equals_Load(EOS(STATIC_13472), java.lang.Object(o17837sub0), o188980, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643, java.lang.Object(o17836sub-2076086643))), java.lang.Object(o17836sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), java.lang.Object(o18899sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), o188980, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: i4850 > 1 && i3276 >= 1
f13461_0_remove_InvokeMethod(EOS(STATIC_13461), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), java.lang.Object(o17837sub0), o188980, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f13472_1_equals_Load(EOS(STATIC_13472), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), java.lang.Object(o17837sub0), o188980, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: i4850 > 1 && i3276 >= 1
f13472_0_equals_Load(EOS(STATIC_13472), java.lang.Object(o17837sub0), o188980, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643, java.lang.Object(o17836sub-2076086643))), java.lang.Object(o17836sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), java.lang.Object(o18899sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), o188980, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f14068_0_equals_Load(EOS(STATIC_14068), java.lang.Object(o17837sub0), o188980, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643, java.lang.Object(o17836sub-2076086643))), java.lang.Object(o17836sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263, java.lang.Object(o18899sub-2075157263))), java.lang.Object(o18899sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), o188980, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: TRUE
f13558_0_equals_Return(EOS(STATIC_13558), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o19803sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18899sub-2075157263))), matching1, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f13560_0_equals_Return(EOS(STATIC_13560), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o19803sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18899sub-2075157263))), 0, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: TRUE && matching1 = 0
f13560_0_equals_Return(EOS(STATIC_13560), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20078-2054156530, java.lang.Object(o20079sub-2054156530))), matching1, o20075[LinkedList$Entry.next]o20073, o20075[LinkedList$Entry.next]o20077, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075) -> f13578_0_remove_EQ(EOS(STATIC_13578), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20078-2054156530, java.lang.Object(o20079sub-2054156530))), 0, o20075[LinkedList$Entry.next]o20073, o20075[LinkedList$Entry.next]o20077, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075) :|: TRUE && matching1 = 0
f13578_0_remove_EQ(EOS(STATIC_13578), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20078-2054156530, java.lang.Object(o20079sub-2054156530))), matching1, o20075[LinkedList$Entry.next]o20073, o20075[LinkedList$Entry.next]o20077, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075) -> f13595_0_remove_Load(EOS(STATIC_13595), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20078-2054156530, java.lang.Object(o20079sub-2054156530))), o20075[LinkedList$Entry.next]o20073, o20075[LinkedList$Entry.next]o20077, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075) :|: TRUE && matching1 = 0
f13595_0_remove_Load(EOS(STATIC_13595), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20078-2054156530, java.lang.Object(o20079sub-2054156530))), o20075[LinkedList$Entry.next]o20073, o20075[LinkedList$Entry.next]o20077, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075) -> f13614_0_remove_FieldAccess(EOS(STATIC_13614), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20078-2054156530, java.lang.Object(o20079sub-2054156530))), o20075[LinkedList$Entry.next]o20073, o20075[LinkedList$Entry.next]o20077, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075) :|: TRUE
f13614_0_remove_FieldAccess(EOS(STATIC_13614), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20078-2054156530, java.lang.Object(o20079sub-2054156530))), o20075[LinkedList$Entry.next]o20073, o20075[LinkedList$Entry.next]o20077, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075) -> f13628_0_remove_Store(EOS(STATIC_13628), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(o20079sub0), o20075[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075, o20075[LinkedList$Entry.next]o20079) :|: o20075[LinkedList$Entry.next]o20079 > o20075[LinkedList$Entry.next]o20077 && o20075[LinkedList$Entry.next]o20077 >= 0
f13628_0_remove_Store(EOS(STATIC_13628), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(o20079sub0), o20075[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075, o20075[LinkedList$Entry.next]o20079) -> f13646_0_remove_JMP(EOS(STATIC_13646), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(o20079sub0), o20075[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075, o20075[LinkedList$Entry.next]o20079) :|: TRUE
f13646_0_remove_JMP(EOS(STATIC_13646), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(o20079sub0), o20075[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075, o20075[LinkedList$Entry.next]o20079) -> f13665_0_remove_Load(EOS(STATIC_13665), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(o20079sub0), o20075[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075, o20075[LinkedList$Entry.next]o20079) :|: TRUE
f13665_0_remove_Load(EOS(STATIC_13665), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(o20079sub0), o20075[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075, o20075[LinkedList$Entry.next]o20079) -> f13333_0_remove_Load(EOS(STATIC_13333), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20074186653957, java.lang.Object(o20075sub186653957)))))))), java.lang.Object(o20076sub0), java.lang.Object(o20079sub0), o20075[LinkedList$Entry.next]o20079, o20075[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20073, o20079[LinkedList$Entry.next]o20075) :|: TRUE
f13333_0_remove_Load(EOS(STATIC_13333), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836) -> f13348_0_remove_Load(EOS(STATIC_13348), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17838sub0), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836) :|: TRUE
f13348_0_remove_Load(EOS(STATIC_13348), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17838sub0), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836) -> f13362_0_remove_FieldAccess(EOS(STATIC_13362), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17838sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836) :|: TRUE
f13362_0_remove_FieldAccess(EOS(STATIC_13362), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17838sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836) -> f13379_0_remove_EQ(EOS(STATIC_13379), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17838sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643, java.lang.Object(o17836sub-2076086643))), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836) :|: TRUE
f13379_0_remove_EQ(EOS(STATIC_13379), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17838sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643, java.lang.Object(o17836sub-2076086643))), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836) -> f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o17837sub0), java.lang.Object(o17838sub0), java.lang.Object(o17838sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643, java.lang.Object(o17836sub-2076086643))), o17836[LinkedList$Entry.next]o17838, o17836[LinkedList$Entry.next]o17834, o17838[LinkedList$Entry.next]o17836, o17838[LinkedList$Entry.next]o17834) :|: o17838[LinkedList$Entry.next]o17834 > 0
f13559_0_equals_Return(EOS(STATIC_13559), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o19816sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19818sub-2075157263), java.lang.Object(o18899sub-2075157263))), matching1, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f13560_0_equals_Return(EOS(STATIC_13560), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o19816sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19818sub-2075157263), java.lang.Object(o18899sub-2075157263))), 0, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: TRUE && matching1 = 0
f13561_0_equals_Return(EOS(STATIC_13561), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18899sub-2075157263))), matching1, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f13563_0_equals_Return(EOS(STATIC_13563), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18899sub-2075157263))), 0, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: TRUE && matching1 = 0
f13563_0_equals_Return(EOS(STATIC_13563), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub-2054132629))), i5320, o20111[LinkedList$Entry.next]o20109, o20111[LinkedList$Entry.next]o20113, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111) -> f13579_0_remove_EQ(EOS(STATIC_13579), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub-2054132629))), i5320, o20111[LinkedList$Entry.next]o20109, o20111[LinkedList$Entry.next]o20113, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111) :|: TRUE
f13579_0_remove_EQ(EOS(STATIC_13579), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub-2054132629))), matching1, o20111[LinkedList$Entry.next]o20109, o20111[LinkedList$Entry.next]o20113, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111) -> f13597_0_remove_EQ(EOS(STATIC_13597), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub-2054132629))), 0, o20111[LinkedList$Entry.next]o20109, o20111[LinkedList$Entry.next]o20113, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111) :|: TRUE && matching1 = 0
f13597_0_remove_EQ(EOS(STATIC_13597), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub-2054132629))), matching1, o20111[LinkedList$Entry.next]o20109, o20111[LinkedList$Entry.next]o20113, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111) -> f13616_0_remove_Load(EOS(STATIC_13616), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub-2054132629))), o20111[LinkedList$Entry.next]o20109, o20111[LinkedList$Entry.next]o20113, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111) :|: TRUE && matching1 = 0
f13616_0_remove_Load(EOS(STATIC_13616), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub-2054132629))), o20111[LinkedList$Entry.next]o20109, o20111[LinkedList$Entry.next]o20113, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111) -> f13630_0_remove_FieldAccess(EOS(STATIC_13630), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub-2054132629))), o20111[LinkedList$Entry.next]o20109, o20111[LinkedList$Entry.next]o20113, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111) :|: TRUE
f13630_0_remove_FieldAccess(EOS(STATIC_13630), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub-2054132629))), o20111[LinkedList$Entry.next]o20109, o20111[LinkedList$Entry.next]o20113, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111) -> f13648_0_remove_Store(EOS(STATIC_13648), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub0), o20111[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111, o20111[LinkedList$Entry.next]o20115) :|: o20111[LinkedList$Entry.next]o20115 > o20111[LinkedList$Entry.next]o20113 && o20111[LinkedList$Entry.next]o20113 >= 0
f13648_0_remove_Store(EOS(STATIC_13648), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub0), o20111[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111, o20111[LinkedList$Entry.next]o20115) -> f13667_0_remove_JMP(EOS(STATIC_13667), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub0), o20111[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111, o20111[LinkedList$Entry.next]o20115) :|: TRUE
f13667_0_remove_JMP(EOS(STATIC_13667), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub0), o20111[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111, o20111[LinkedList$Entry.next]o20115) -> f13676_0_remove_Load(EOS(STATIC_13676), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub0), o20111[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111, o20111[LinkedList$Entry.next]o20115) :|: TRUE
f13676_0_remove_Load(EOS(STATIC_13676), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub0), o20111[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111, o20111[LinkedList$Entry.next]o20115) -> f13333_0_remove_Load(EOS(STATIC_13333), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20110186700457, java.lang.Object(o20111sub186700457)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub0), o20111[LinkedList$Entry.next]o20115, o20111[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20109, o20115[LinkedList$Entry.next]o20111) :|: TRUE
f13562_0_equals_Return(EOS(STATIC_13562), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18899sub-2075157263))), matching1, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f13563_0_equals_Return(EOS(STATIC_13563), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18899sub-2075157263))), 1, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: TRUE && matching1 = 1
f13440_0_remove_FieldAccess(EOS(STATIC_13440), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), o18901[LinkedList$Entry.next]o17834, o18901[LinkedList$Entry.next]o18901) -> f13451_0_remove_FieldAccess(EOS(STATIC_13451), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: o18903[LinkedList$Entry.next]o17834 < o18901[LinkedList$Entry.next]o17834 && o18901[LinkedList$Entry.next]o17834 >= 0 && o18903[LinkedList$Entry.next]o18901 < o18901[LinkedList$Entry.next]o18901 && o18901[LinkedList$Entry.next]o18901 >= 0
f13451_0_remove_FieldAccess(EOS(STATIC_13451), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f13462_0_remove_InvokeMethod(EOS(STATIC_13462), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), java.lang.Object(o17837sub0), o189020, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: TRUE
f13462_0_remove_InvokeMethod(EOS(STATIC_13462), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), java.lang.Object(o17837sub0), o189020, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f13473_0_equals_Load(EOS(STATIC_13473), java.lang.Object(o17837sub0), o189020, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902143744346, java.lang.Object(o18903sub143744346))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), java.lang.Object(o18903sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o17837sub0), o189020, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: i4850 > 1 && i3276 >= 1
f13462_0_remove_InvokeMethod(EOS(STATIC_13462), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), java.lang.Object(o17837sub0), o189020, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f13473_1_equals_Load(EOS(STATIC_13473), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o17837sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), java.lang.Object(o17837sub0), o189020, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: i4850 > 1 && i3276 >= 1
f13473_0_equals_Load(EOS(STATIC_13473), java.lang.Object(o17837sub0), o189020, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902143744346, java.lang.Object(o18903sub143744346))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), java.lang.Object(o18903sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o17837sub0), o189020, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f14148_0_equals_Load(EOS(STATIC_14148), java.lang.Object(o17837sub0), o189020, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902143744346, java.lang.Object(o18903sub143744346))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307, java.lang.Object(o18903sub-2075136307))), java.lang.Object(o18903sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o17837sub0), o189020, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: TRUE
f13565_0_equals_Return(EOS(STATIC_13565), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o19884sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-2075136307))), matching1, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f13567_0_equals_Return(EOS(STATIC_13567), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o19884sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-2075136307))), 0, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: TRUE && matching1 = 0
f13567_0_equals_Return(EOS(STATIC_13567), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-2054129684, java.lang.Object(o20147sub-2054129684))), matching1, o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) -> f13580_0_remove_EQ(EOS(STATIC_13580), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-2054129684, java.lang.Object(o20147sub-2054129684))), 0, o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) :|: TRUE && matching1 = 0
f13580_0_remove_EQ(EOS(STATIC_13580), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-2054129684, java.lang.Object(o20147sub-2054129684))), matching1, o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) -> f13598_0_remove_Load(EOS(STATIC_13598), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-2054129684, java.lang.Object(o20147sub-2054129684))), o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) :|: TRUE && matching1 = 0
f13598_0_remove_Load(EOS(STATIC_13598), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-2054129684, java.lang.Object(o20147sub-2054129684))), o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) -> f13617_0_remove_FieldAccess(EOS(STATIC_13617), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-2054129684, java.lang.Object(o20147sub-2054129684))), o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) :|: TRUE
f13617_0_remove_FieldAccess(EOS(STATIC_13617), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-2054129684, java.lang.Object(o20147sub-2054129684))), o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) -> f13631_0_remove_Store(EOS(STATIC_13631), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(o20147sub0), o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) :|: TRUE
f13631_0_remove_Store(EOS(STATIC_13631), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(o20147sub0), o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) -> f13649_0_remove_JMP(EOS(STATIC_13649), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(o20147sub0), o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) :|: TRUE
f13649_0_remove_JMP(EOS(STATIC_13649), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(o20147sub0), o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) -> f13668_0_remove_Load(EOS(STATIC_13668), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(o20147sub0), o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) :|: TRUE
f13668_0_remove_Load(EOS(STATIC_13668), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(o20147sub0), o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) -> f13333_0_remove_Load(EOS(STATIC_13333), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20144186707773, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20146-1867421911, java.lang.Object(o20147sub-1867421911)))))))))), java.lang.Object(o20149sub0), java.lang.Object(o20147sub0), o20145[LinkedList$Entry.next]o20147, o20145[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20143, o20147[LinkedList$Entry.next]o20145) :|: o20145[LinkedList$Entry.next]o20147 = 1
f13566_0_equals_Return(EOS(STATIC_13566), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-1932342328), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o19896sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-2075136307), java.lang.Object(o18903sub-2075136307))), matching1, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f13567_0_equals_Return(EOS(STATIC_13567), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-1932342328), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o19896sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-2075136307), java.lang.Object(o18903sub-2075136307))), 0, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: TRUE && matching1 = 0
f13568_0_equals_Return(EOS(STATIC_13568), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-2075136307))), matching1, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f13570_0_equals_Return(EOS(STATIC_13570), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-2075136307))), 0, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: TRUE && matching1 = 0
f13570_0_equals_Return(EOS(STATIC_13570), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-2054126863))), i5340, o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) -> f13581_0_remove_EQ(EOS(STATIC_13581), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-2054126863))), i5340, o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) :|: TRUE
f13581_0_remove_EQ(EOS(STATIC_13581), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-2054126863))), matching1, o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) -> f13600_0_remove_EQ(EOS(STATIC_13600), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-2054126863))), 0, o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) :|: TRUE && matching1 = 0
f13600_0_remove_EQ(EOS(STATIC_13600), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-2054126863))), matching1, o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) -> f13619_0_remove_Load(EOS(STATIC_13619), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-2054126863))), o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) :|: TRUE && matching1 = 0
f13619_0_remove_Load(EOS(STATIC_13619), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-2054126863))), o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) -> f13633_0_remove_FieldAccess(EOS(STATIC_13633), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-2054126863))), o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) :|: TRUE
f13633_0_remove_FieldAccess(EOS(STATIC_13633), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-2054126863))), o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) -> f13651_0_remove_Store(EOS(STATIC_13651), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub0), o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) :|: TRUE
f13651_0_remove_Store(EOS(STATIC_13651), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub0), o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) -> f13670_0_remove_JMP(EOS(STATIC_13670), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub0), o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) :|: TRUE
f13670_0_remove_JMP(EOS(STATIC_13670), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub0), o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) -> f13677_0_remove_Load(EOS(STATIC_13677), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub0), o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) :|: TRUE
f13677_0_remove_Load(EOS(STATIC_13677), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub0), o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) -> f13333_0_remove_Load(EOS(STATIC_13333), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20172186713415, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub-1867413448)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub0), o20173[LinkedList$Entry.next]o20175, o20173[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20171, o20175[LinkedList$Entry.next]o20173) :|: o20173[LinkedList$Entry.next]o20175 = 1
f13569_0_equals_Return(EOS(STATIC_13569), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-2075136307))), matching1, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f13570_0_equals_Return(EOS(STATIC_13570), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-2075136307))), 1, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: TRUE && matching1 = 1
f13472_1_equals_Load(EOS(STATIC_13472), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o19803sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18899sub-2075157263))), java.lang.Object(o19803sub0), NULL, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f13558_0_equals_Return(EOS(STATIC_13558), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o19803sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18899sub-2075157263))), 0, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: TRUE
f13472_1_equals_Load(EOS(STATIC_13472), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o19816sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19818sub-2075157263), java.lang.Object(o18899sub-2075157263))), java.lang.Object(o19816sub0), java.lang.Object(o19818sub0), o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f13559_0_equals_Return(EOS(STATIC_13559), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(o19816sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19818sub-2075157263), java.lang.Object(o18899sub-2075157263))), 0, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: TRUE
f13472_1_equals_Load(EOS(STATIC_13472), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18899sub-2075157263))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f13561_0_equals_Return(EOS(STATIC_13561), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18899sub-2075157263))), 0, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: TRUE
f13472_1_equals_Load(EOS(STATIC_13472), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18899sub-2075157263))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) -> f13562_0_equals_Return(EOS(STATIC_13562), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(o17836sub142793979)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18899sub-2075157263))), 1, o17836[LinkedList$Entry.next]o17834, o17836[LinkedList$Entry.next]o18897, o18899[LinkedList$Entry.next]o17834, o18899[LinkedList$Entry.next]o17836) :|: TRUE
f13473_1_equals_Load(EOS(STATIC_13473), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o19884sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-2075136307))), java.lang.Object(o19884sub0), NULL, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f13565_0_equals_Return(EOS(STATIC_13565), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o19884sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-2075136307))), 0, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: TRUE
f13473_1_equals_Load(EOS(STATIC_13473), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-1932342328), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o19896sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-2075136307), java.lang.Object(o18903sub-2075136307))), java.lang.Object(o19896sub0), java.lang.Object(o19898sub0), o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f13566_0_equals_Return(EOS(STATIC_13566), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-1932342328), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(o19896sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-2075136307), java.lang.Object(o18903sub-2075136307))), 0, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: TRUE
f13473_1_equals_Load(EOS(STATIC_13473), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-2075136307))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f13568_0_equals_Return(EOS(STATIC_13568), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-2075136307))), 0, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: TRUE
f13473_1_equals_Load(EOS(STATIC_13473), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-2075136307))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) -> f13569_0_equals_Return(EOS(STATIC_13569), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-1932342328)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-2075136307))), 1, o18903[LinkedList$Entry.next]o17834, o18903[LinkedList$Entry.next]o18901) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18899sub-2075157263:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18899sub-2075157263:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:0, java.lang.Object(o17836sub-2076086643:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17838[LinkedList$Entry.next]o17836:0, o17838[LinkedList$Entry.next]o17834:0) -> f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20079sub0:0), java.lang.Object(o20079sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:1, java.lang.Object(o17836sub-2076086643:1))), o20075[LinkedList$Entry.next]o20079:0, o17836[LinkedList$Entry.next]o17834:0, o18899[LinkedList$Entry.next]o17836:0, o18899[LinkedList$Entry.next]o17834:0) :|: o17838[LinkedList$Entry.next]o17836:0 > 0 && o17836[LinkedList$Entry.next]o17838:0 > 0 && o20075[LinkedList$Entry.next]o20079:0 > o17836[LinkedList$Entry.next]o17838:0 && o17838[LinkedList$Entry.next]o17834:0 > -1 && o18899[LinkedList$Entry.next]o17834:0 < o17838[LinkedList$Entry.next]o17834:0 && o18899[LinkedList$Entry.next]o17836:0 < o17838[LinkedList$Entry.next]o17836:0 && i3276:0 > 0 && o18899[LinkedList$Entry.next]o17834:0 > 0 && i4850:0 > 1
f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18899sub-2075157263:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18899sub-2075157263:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:0, java.lang.Object(o17836sub-2076086643:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17838[LinkedList$Entry.next]o17836:0, o17838[LinkedList$Entry.next]o17834:0) -> f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20115sub0:0), java.lang.Object(o20115sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:1, java.lang.Object(o17836sub-2076086643:1))), o20111[LinkedList$Entry.next]o20115:0, o17836[LinkedList$Entry.next]o17834:0, o18899[LinkedList$Entry.next]o17836:0, o18899[LinkedList$Entry.next]o17834:0) :|: o17838[LinkedList$Entry.next]o17836:0 > 0 && o17836[LinkedList$Entry.next]o17838:0 > 0 && o17838[LinkedList$Entry.next]o17834:0 > -1 && o18899[LinkedList$Entry.next]o17834:0 < o17838[LinkedList$Entry.next]o17834:0 && o18899[LinkedList$Entry.next]o17836:0 < o17838[LinkedList$Entry.next]o17836:0 && o20111[LinkedList$Entry.next]o20115:0 > o17836[LinkedList$Entry.next]o17838:0 && i3276:0 > 0 && o18899[LinkedList$Entry.next]o17834:0 > 0 && i4850:0 > 1
f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-2075136307:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-2075136307:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:0, java.lang.Object(o17836sub-2076086643:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0) -> f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20147sub0:0), java.lang.Object(o20147sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:1, java.lang.Object(o17836sub-2076086643:1))), 1, o20145[LinkedList$Entry.next]o20143:0, o18903[LinkedList$Entry.next]o18901:0, o18903[LinkedList$Entry.next]o17834:0) :|: o17836[LinkedList$Entry.next]o17834:0 > -1 && o18903[LinkedList$Entry.next]o17834:0 < o17836[LinkedList$Entry.next]o17834:0 && o18903[LinkedList$Entry.next]o18901:0 < o17836[LinkedList$Entry.next]o17838:0 && o17836[LinkedList$Entry.next]o17838:0 > -1 && i3276:0 > 0 && o18903[LinkedList$Entry.next]o17834:0 > 0 && i4850:0 > 1
f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-1932342328:0), java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-2075136307:0), java.lang.Object(o18903sub-2075136307:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-2075136307:0), java.lang.Object(o18903sub-2075136307:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:0, java.lang.Object(o17836sub-2076086643:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0) -> f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19898sub-1932342328:0), java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20147sub0:0), java.lang.Object(o20147sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:1, java.lang.Object(o17836sub-2076086643:1))), 1, o20145[LinkedList$Entry.next]o20143:0, o18903[LinkedList$Entry.next]o18901:0, o18903[LinkedList$Entry.next]o17834:0) :|: o17836[LinkedList$Entry.next]o17834:0 > -1 && o18903[LinkedList$Entry.next]o17834:0 < o17836[LinkedList$Entry.next]o17834:0 && o18903[LinkedList$Entry.next]o18901:0 < o17836[LinkedList$Entry.next]o17838:0 && o17836[LinkedList$Entry.next]o17838:0 > -1 && i3276:0 > 0 && o18903[LinkedList$Entry.next]o17834:0 > 0 && i4850:0 > 1
f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-2075136307:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-2075136307:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:0, java.lang.Object(o17836sub-2076086643:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0) -> f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20175sub0:0), java.lang.Object(o20175sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:1, java.lang.Object(o17836sub-2076086643:1))), 1, o20173[LinkedList$Entry.next]o20171:0, o18903[LinkedList$Entry.next]o18901:0, o18903[LinkedList$Entry.next]o17834:0) :|: o17836[LinkedList$Entry.next]o17834:0 > -1 && o18903[LinkedList$Entry.next]o17834:0 < o17836[LinkedList$Entry.next]o17834:0 && o18903[LinkedList$Entry.next]o18901:0 < o17836[LinkedList$Entry.next]o17838:0 && o17836[LinkedList$Entry.next]o17838:0 > -1 && i3276:0 > 0 && o18903[LinkedList$Entry.next]o17834:0 > 0 && i4850:0 > 1
f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19818sub-2075157263:0), java.lang.Object(o18899sub-2075157263:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19818sub-2075157263:0), java.lang.Object(o18899sub-2075157263:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:0, java.lang.Object(o17836sub-2076086643:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17838[LinkedList$Entry.next]o17836:0, o17838[LinkedList$Entry.next]o17834:0) -> f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20079sub0:0), java.lang.Object(o20079sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:1, java.lang.Object(o17836sub-2076086643:1))), o20075[LinkedList$Entry.next]o20079:0, o17836[LinkedList$Entry.next]o17834:0, o18899[LinkedList$Entry.next]o17836:0, o18899[LinkedList$Entry.next]o17834:0) :|: o17838[LinkedList$Entry.next]o17836:0 > 0 && o17836[LinkedList$Entry.next]o17838:0 > 0 && o20075[LinkedList$Entry.next]o20079:0 > o17836[LinkedList$Entry.next]o17838:0 && o17838[LinkedList$Entry.next]o17834:0 > -1 && o18899[LinkedList$Entry.next]o17834:0 < o17838[LinkedList$Entry.next]o17834:0 && o18899[LinkedList$Entry.next]o17836:0 < o17838[LinkedList$Entry.next]o17836:0 && i3276:0 > 0 && o18899[LinkedList$Entry.next]o17834:0 > 0 && i4850:0 > 1
Removed following non-SCC rules:
f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328:0, java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307:0, java.lang.Object(o18903sub-2075136307:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307:0, java.lang.Object(o18903sub-2075136307:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:0, java.lang.Object(o17836sub-2076086643:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0) -> f14148_0_equals_Load(EOS(STATIC_14148), java.lang.Object(o17837sub0:0), o189020:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:1, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902143744346:0, java.lang.Object(o18903sub143744346:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-2075136307:0, java.lang.Object(o18903sub-2075136307:0))), java.lang.Object(o18903sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18902-1932342328:0, java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(o17837sub0:0), o189020:0, o18903[LinkedList$Entry.next]o17834:0, o18903[LinkedList$Entry.next]o18901:0) :|: o17836[LinkedList$Entry.next]o17834:0 > -1 && o18903[LinkedList$Entry.next]o17834:0 < o17836[LinkedList$Entry.next]o17834:0 && o18903[LinkedList$Entry.next]o18901:0 < o17836[LinkedList$Entry.next]o17838:0 && o17836[LinkedList$Entry.next]o17838:0 > -1 && i4850:0 > 1 && i3276:0 > 0
f13397_0_remove_EQ(EOS(STATIC_13397), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263:0, java.lang.Object(o18899sub-2075157263:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263:0, java.lang.Object(o18899sub-2075157263:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:0, java.lang.Object(o17836sub-2076086643:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17838[LinkedList$Entry.next]o17836:0, o17838[LinkedList$Entry.next]o17834:0) -> f14068_0_equals_Load(EOS(STATIC_14068), java.lang.Object(o17837sub0:0), o188980:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835-2076086643:1, java.lang.Object(o17836sub-2076086643:1))), java.lang.Object(o17836sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18898-2075157263:0, java.lang.Object(o18899sub-2075157263:0))), java.lang.Object(o18899sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), o188980:0, o17836[LinkedList$Entry.next]o17834:0, o17836[LinkedList$Entry.next]o17838:0, o18899[LinkedList$Entry.next]o17834:0, o18899[LinkedList$Entry.next]o17836:0) :|: o17838[LinkedList$Entry.next]o17836:0 > 0 && o17838[LinkedList$Entry.next]o17834:0 > -1 && o18899[LinkedList$Entry.next]o17834:0 < o17838[LinkedList$Entry.next]o17834:0 && o18899[LinkedList$Entry.next]o17836:0 < o17838[LinkedList$Entry.next]o17836:0 && o17836[LinkedList$Entry.next]o17838:0 > 0 && i4850:0 > 1 && i3276:0 > 0
Filtered constant ground arguments:
   f13397_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13397_0_remove_EQ(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13397_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13397_0_remove_EQ(x1, x2, x4, x5, x6, x7, x8, x9)
Filtered unneeded arguments:
   f13397_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f13397_0_remove_EQ(x1, x2, x3, x5, x6, x7, x8)
Finished conversion. Obtained 6 rules.P rules:
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18899sub-2075157263:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17838[LinkedList$Entry.next]o17836:0, o17838[LinkedList$Entry.next]o17834:0, o17835142793979:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20079sub0:0), o20075[LinkedList$Entry.next]o20079:0, o17836[LinkedList$Entry.next]o17834:0, o18899[LinkedList$Entry.next]o17836:0, o18899[LinkedList$Entry.next]o17834:0, o17835142793979:0) :|: o17836[LinkedList$Entry.next]o17838:0 > 0 && o17838[LinkedList$Entry.next]o17836:0 > 0 && o20075[LinkedList$Entry.next]o20079:0 > o17836[LinkedList$Entry.next]o17838:0 && o17838[LinkedList$Entry.next]o17834:0 > -1 && o18899[LinkedList$Entry.next]o17834:0 < o17838[LinkedList$Entry.next]o17834:0 && o18899[LinkedList$Entry.next]o17836:0 < o17838[LinkedList$Entry.next]o17836:0 && i3276:0 > 0 && i4850:0 > 1 && o18899[LinkedList$Entry.next]o17834:0 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o18899sub-2075157263:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17838[LinkedList$Entry.next]o17836:0, o17838[LinkedList$Entry.next]o17834:0, o17835142793979:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o20115sub0:0), o20111[LinkedList$Entry.next]o20115:0, o17836[LinkedList$Entry.next]o17834:0, o18899[LinkedList$Entry.next]o17836:0, o18899[LinkedList$Entry.next]o17834:0, o17835142793979:0) :|: o17836[LinkedList$Entry.next]o17838:0 > 0 && o17838[LinkedList$Entry.next]o17836:0 > 0 && o17838[LinkedList$Entry.next]o17834:0 > -1 && o18899[LinkedList$Entry.next]o17834:0 < o17838[LinkedList$Entry.next]o17834:0 && o18899[LinkedList$Entry.next]o17836:0 < o17838[LinkedList$Entry.next]o17836:0 && o20111[LinkedList$Entry.next]o20115:0 > o17836[LinkedList$Entry.next]o17838:0 && i3276:0 > 0 && i4850:0 > 1 && o18899[LinkedList$Entry.next]o17834:0 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18903sub-2075136307:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17835142793979:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20147sub0:0), 1, o20145[LinkedList$Entry.next]o20143:0, o18903[LinkedList$Entry.next]o18901:0, o18903[LinkedList$Entry.next]o17834:0, o17835142793979:0) :|: o18903[LinkedList$Entry.next]o17834:0 < o17836[LinkedList$Entry.next]o17834:0 && o17836[LinkedList$Entry.next]o17834:0 > -1 && o18903[LinkedList$Entry.next]o18901:0 < o17836[LinkedList$Entry.next]o17838:0 && o17836[LinkedList$Entry.next]o17838:0 > -1 && i3276:0 > 0 && i4850:0 > 1 && o18903[LinkedList$Entry.next]o17834:0 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o19898sub-1932342328:0), java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o19898sub-2075136307:0), java.lang.Object(o18903sub-2075136307:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17835142793979:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o19898sub-1932342328:0), java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20147sub0:0), 1, o20145[LinkedList$Entry.next]o20143:0, o18903[LinkedList$Entry.next]o18901:0, o18903[LinkedList$Entry.next]o17834:0, o17835142793979:0) :|: o18903[LinkedList$Entry.next]o17834:0 < o17836[LinkedList$Entry.next]o17834:0 && o17836[LinkedList$Entry.next]o17834:0 > -1 && o18903[LinkedList$Entry.next]o18901:0 < o17836[LinkedList$Entry.next]o17838:0 && o17836[LinkedList$Entry.next]o17838:0 > -1 && i3276:0 > 0 && i4850:0 > 1 && o18903[LinkedList$Entry.next]o17834:0 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o18903sub-2075136307:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17835142793979:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o18903sub-1932342328:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o20175sub0:0), 1, o20173[LinkedList$Entry.next]o20171:0, o18903[LinkedList$Entry.next]o18901:0, o18903[LinkedList$Entry.next]o17834:0, o17835142793979:0) :|: o18903[LinkedList$Entry.next]o17834:0 < o17836[LinkedList$Entry.next]o17834:0 && o17836[LinkedList$Entry.next]o17834:0 > -1 && o18903[LinkedList$Entry.next]o18901:0 < o17836[LinkedList$Entry.next]o17838:0 && o17836[LinkedList$Entry.next]o17838:0 > -1 && i3276:0 > 0 && i4850:0 > 1 && o18903[LinkedList$Entry.next]o17834:0 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o19818sub-2075157263:0), java.lang.Object(o18899sub-2075157263:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17838[LinkedList$Entry.next]o17836:0, o17838[LinkedList$Entry.next]o17834:0, o17835142793979:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20079sub0:0), o20075[LinkedList$Entry.next]o20079:0, o17836[LinkedList$Entry.next]o17834:0, o18899[LinkedList$Entry.next]o17836:0, o18899[LinkedList$Entry.next]o17834:0, o17835142793979:0) :|: o17836[LinkedList$Entry.next]o17838:0 > 0 && o17838[LinkedList$Entry.next]o17836:0 > 0 && o20075[LinkedList$Entry.next]o20079:0 > o17836[LinkedList$Entry.next]o17838:0 && o17838[LinkedList$Entry.next]o17834:0 > -1 && o18899[LinkedList$Entry.next]o17834:0 < o17838[LinkedList$Entry.next]o17834:0 && o18899[LinkedList$Entry.next]o17836:0 < o17838[LinkedList$Entry.next]o17836:0 && i3276:0 > 0 && i4850:0 > 1 && o18899[LinkedList$Entry.next]o17834:0 > 0

----------------------------------------

(22)
Obligation:
Rules:
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18899sub-2075157263:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17838[LinkedList$Entry.next]o17836:0, o17838[LinkedList$Entry.next]o17834:0, o17835142793979:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20079sub0:0), o20075[LinkedList$Entry.next]o20079:0, o17836[LinkedList$Entry.next]o17834:0, o18899[LinkedList$Entry.next]o17836:0, o18899[LinkedList$Entry.next]o17834:0, o17835142793979:0) :|: o17836[LinkedList$Entry.next]o17838:0 > 0 && o17838[LinkedList$Entry.next]o17836:0 > 0 && o20075[LinkedList$Entry.next]o20079:0 > o17836[LinkedList$Entry.next]o17838:0 && o17838[LinkedList$Entry.next]o17834:0 > -1 && o18899[LinkedList$Entry.next]o17834:0 < o17838[LinkedList$Entry.next]o17834:0 && o18899[LinkedList$Entry.next]o17836:0 < o17838[LinkedList$Entry.next]o17836:0 && i3276:0 > 0 && i4850:0 > 1 && o18899[LinkedList$Entry.next]o17834:0 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x5, x6, x) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x3 > 0 && x5 > 0 && x6 > -1 && x10 < x6 && x9 < x5 && x8 > x3 && x11 > 0 && x12 > 1 && x10 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x16))), x17, x18, x17, x18, x13) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x15), java.lang.Object(x19), 1, x20, x21, x22, x13) :|: x22 < x18 && x18 > -1 && x21 < x17 && x17 > -1 && x23 > 0 && x24 > 1 && x22 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x26), java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x29), java.lang.Object(x30))), x31, x32, x31, x32, x25) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x26), java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(x33), 1, x34, x35, x36, x25) :|: x36 < x32 && x32 > -1 && x35 < x31 && x31 > -1 && x37 > 0 && x38 > 1 && x36 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x39, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x41))), x42, x43, x42, x43, x39) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x39, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), 1, x45, x46, x47, x39) :|: x47 < x43 && x43 > -1 && x46 < x42 && x42 > -1 && x48 > 0 && x49 > 1 && x47 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), java.lang.Object(x54))), x55, x56, x57, x58, x50) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(x59), x60, x56, x61, x62, x50) :|: x55 > 0 && x57 > 0 && x60 > x55 && x58 > -1 && x62 < x58 && x61 < x57 && x63 > 0 && x64 > 1 && x62 > 0

----------------------------------------

(23) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(24)
Obligation:
Rules:
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18899sub-2075157263:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17838[LinkedList$Entry.next]o17836:0, o17838[LinkedList$Entry.next]o17834:0, o17835142793979:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20079sub0:0), o20075[LinkedList$Entry.next]o20079:0, o17836[LinkedList$Entry.next]o17834:0, o18899[LinkedList$Entry.next]o17836:0, o18899[LinkedList$Entry.next]o17834:0, o17835142793979:0) :|: o17836[LinkedList$Entry.next]o17838:0 > 0 && o17838[LinkedList$Entry.next]o17836:0 > 0 && o20075[LinkedList$Entry.next]o20079:0 > o17836[LinkedList$Entry.next]o17838:0 && o17838[LinkedList$Entry.next]o17834:0 > -1 && o18899[LinkedList$Entry.next]o17834:0 < o17838[LinkedList$Entry.next]o17834:0 && o18899[LinkedList$Entry.next]o17836:0 < o17838[LinkedList$Entry.next]o17836:0 && i3276:0 > 0 && i4850:0 > 1 && o18899[LinkedList$Entry.next]o17834:0 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x5, x6, x) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x3 > 0 && x5 > 0 && x6 > -1 && x10 < x6 && x9 < x5 && x8 > x3 && x11 > 0 && x12 > 1 && x10 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x16))), x17, x18, x17, x18, x13) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x15), java.lang.Object(x19), 1, x20, x21, x22, x13) :|: x22 < x18 && x18 > -1 && x21 < x17 && x17 > -1 && x23 > 0 && x24 > 1 && x22 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x26), java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x29), java.lang.Object(x30))), x31, x32, x31, x32, x25) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x26), java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(x33), 1, x34, x35, x36, x25) :|: x36 < x32 && x32 > -1 && x35 < x31 && x31 > -1 && x37 > 0 && x38 > 1 && x36 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x39, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x41))), x42, x43, x42, x43, x39) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x39, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), 1, x45, x46, x47, x39) :|: x47 < x43 && x43 > -1 && x46 < x42 && x42 > -1 && x48 > 0 && x49 > 1 && x47 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), java.lang.Object(x54))), x55, x56, x57, x58, x50) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(x59), x60, x56, x61, x62, x50) :|: x55 > 0 && x57 > 0 && x60 > x55 && x58 > -1 && x62 < x58 && x61 < x57 && x63 > 0 && x64 > 1 && x62 > 0

----------------------------------------

(25) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18899sub-2075157263:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17838[LinkedList$Entry.next]o17836:0, o17838[LinkedList$Entry.next]o17834:0, o17835142793979:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20079sub0:0), o20075[LinkedList$Entry.next]o20079:0, o17836[LinkedList$Entry.next]o17834:0, o18899[LinkedList$Entry.next]o17836:0, o18899[LinkedList$Entry.next]o17834:0, o17835142793979:0) :|: o17836[LinkedList$Entry.next]o17838:0 > 0 && o17838[LinkedList$Entry.next]o17836:0 > 0 && o20075[LinkedList$Entry.next]o20079:0 > o17836[LinkedList$Entry.next]o17838:0 && o17838[LinkedList$Entry.next]o17834:0 > -1 && o18899[LinkedList$Entry.next]o17834:0 < o17838[LinkedList$Entry.next]o17834:0 && o18899[LinkedList$Entry.next]o17836:0 < o17838[LinkedList$Entry.next]o17836:0 && i3276:0 > 0 && i4850:0 > 1 && o18899[LinkedList$Entry.next]o17834:0 > 0
(2) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x5, x6, x) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x3 > 0 && x5 > 0 && x6 > -1 && x10 < x6 && x9 < x5 && x8 > x3 && x11 > 0 && x12 > 1 && x10 > 0
(3) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x16))), x17, x18, x17, x18, x13) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x15), java.lang.Object(x19), 1, x20, x21, x22, x13) :|: x22 < x18 && x18 > -1 && x21 < x17 && x17 > -1 && x23 > 0 && x24 > 1 && x22 > 0
(4) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x26), java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x29), java.lang.Object(x30))), x31, x32, x31, x32, x25) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x26), java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(x33), 1, x34, x35, x36, x25) :|: x36 < x32 && x32 > -1 && x35 < x31 && x31 > -1 && x37 > 0 && x38 > 1 && x36 > 0
(5) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x39, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x41))), x42, x43, x42, x43, x39) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x39, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), 1, x45, x46, x47, x39) :|: x47 < x43 && x43 > -1 && x46 < x42 && x42 > -1 && x48 > 0 && x49 > 1 && x47 > 0
(6) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), java.lang.Object(x54))), x55, x56, x57, x58, x50) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(x59), x60, x56, x61, x62, x50) :|: x55 > 0 && x57 > 0 && x60 > x55 && x58 > -1 && x62 < x58 && x61 < x57 && x63 > 0 && x64 > 1 && x62 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (6)
(4) -> (1), (2), (4), (5), (6)
(5) -> (1), (2), (4), (5), (6)
(6) -> (1), (2), (3), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(26)
Obligation:

Termination digraph:
Nodes:
(1) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18899sub-2075157263:0))), o17836[LinkedList$Entry.next]o17838:0, o17836[LinkedList$Entry.next]o17834:0, o17838[LinkedList$Entry.next]o17836:0, o17838[LinkedList$Entry.next]o17834:0, o17835142793979:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0, java.lang.Object(o17836sub142793979:0)))))))), java.lang.Object(o17837sub0:0), java.lang.Object(o20079sub0:0), o20075[LinkedList$Entry.next]o20079:0, o17836[LinkedList$Entry.next]o17834:0, o18899[LinkedList$Entry.next]o17836:0, o18899[LinkedList$Entry.next]o17834:0, o17835142793979:0) :|: o17836[LinkedList$Entry.next]o17838:0 > 0 && o17838[LinkedList$Entry.next]o17836:0 > 0 && o20075[LinkedList$Entry.next]o20079:0 > o17836[LinkedList$Entry.next]o17838:0 && o17838[LinkedList$Entry.next]o17834:0 > -1 && o18899[LinkedList$Entry.next]o17834:0 < o17838[LinkedList$Entry.next]o17834:0 && o18899[LinkedList$Entry.next]o17836:0 < o17838[LinkedList$Entry.next]o17836:0 && i3276:0 > 0 && i4850:0 > 1 && o18899[LinkedList$Entry.next]o17834:0 > 0
(2) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2))), x3, x4, x5, x6, x) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x3 > 0 && x5 > 0 && x6 > -1 && x10 < x6 && x9 < x5 && x8 > x3 && x11 > 0 && x12 > 1 && x10 > 0
(3) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x15), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x16))), x17, x18, x17, x18, x13) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14)))))))))), java.lang.Object(x15), java.lang.Object(x19), 1, x20, x21, x22, x13) :|: x22 < x18 && x18 > -1 && x21 < x17 && x17 > -1 && x23 > 0 && x24 > 1 && x22 > 0
(4) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), java.lang.Object(x54))), x55, x56, x57, x58, x50) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(x59), x60, x56, x61, x62, x50) :|: x55 > 0 && x57 > 0 && x60 > x55 && x58 > -1 && x62 < x58 && x61 < x57 && x63 > 0 && x64 > 1 && x62 > 0
(5) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x26), java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x29), java.lang.Object(x30))), x31, x32, x31, x32, x25) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x26), java.lang.Object(x27)))))))))), java.lang.Object(x28), java.lang.Object(x33), 1, x34, x35, x36, x25) :|: x36 < x32 && x32 > -1 && x35 < x31 && x31 > -1 && x37 > 0 && x38 > 1 && x36 > 0
(6) f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x39, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x41))), x42, x43, x42, x43, x39) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x39, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), 1, x45, x46, x47, x39) :|: x47 < x43 && x43 > -1 && x46 < x42 && x42 > -1 && x48 > 0 && x49 > 1 && x47 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (4)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (2), (4), (5), (6)
(6) -> (1), (2), (4), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(27) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(28)
Obligation:
Rules:
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x2:0))), x3:0, x4:0, x5:0, x6:0, x:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x7:0), x8:0, x4:0, x9:0, x10:0, x:0) :|: x12:0 > 1 && x10:0 > 0 && x11:0 > 0 && x8:0 > x3:0 && x9:0 < x5:0 && x6:0 > x10:0 && x6:0 > -1 && x5:0 > 0 && x3:0 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x26:0), java.lang.Object(x27:0)))))))))), java.lang.Object(x28:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x29:0), java.lang.Object(x30:0))), x31:0, x32:0, x31:0, x32:0, x25:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x26:0), java.lang.Object(x27:0)))))))))), java.lang.Object(x28:0), java.lang.Object(x33:0), 1, x34:0, x35:0, x36:0, x25:0) :|: x38:0 > 1 && x36:0 > 0 && x37:0 > 0 && x31:0 > -1 && x35:0 < x31:0 && x32:0 > -1 && x36:0 < x32:0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14:0)))))))))), java.lang.Object(x15:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x16:0))), x17:0, x18:0, x17:0, x18:0, x13:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x13:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14:0)))))))))), java.lang.Object(x15:0), java.lang.Object(x19:0), 1, x20:0, x21:0, x22:0, x13:0) :|: x24:0 > 1 && x22:0 > 0 && x23:0 > 0 && x17:0 > -1 && x21:0 < x17:0 && x18:0 > -1 && x22:0 < x18:0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x39:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x41:0))), x42:0, x43:0, x42:0, x43:0, x39:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x39:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x40:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44:0), 1, x45:0, x46:0, x47:0, x39:0) :|: x49:0 > 1 && x47:0 > 0 && x48:0 > 0 && x42:0 > -1 && x46:0 < x42:0 && x43:0 > -1 && x47:0 < x43:0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0:0, java.lang.Object(o17836sub142793979:0:0)))))))), java.lang.Object(o17837sub0:0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18899sub-2075157263:0:0))), o17836[LinkedList$Entry.next]o17838:0:0, o17836[LinkedList$Entry.next]o17834:0:0, o17838[LinkedList$Entry.next]o17836:0:0, o17838[LinkedList$Entry.next]o17834:0:0, o17835142793979:0:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17835142793979:0:0, java.lang.Object(o17836sub142793979:0:0)))))))), java.lang.Object(o17837sub0:0:0), java.lang.Object(o20079sub0:0:0), o20075[LinkedList$Entry.next]o20079:0:0, o17836[LinkedList$Entry.next]o17834:0:0, o18899[LinkedList$Entry.next]o17836:0:0, o18899[LinkedList$Entry.next]o17834:0:0, o17835142793979:0:0) :|: i4850:0:0 > 1 && o18899[LinkedList$Entry.next]o17834:0:0 > 0 && i3276:0:0 > 0 && o18899[LinkedList$Entry.next]o17836:0:0 < o17838[LinkedList$Entry.next]o17836:0:0 && o18899[LinkedList$Entry.next]o17834:0:0 < o17838[LinkedList$Entry.next]o17834:0:0 && o17838[LinkedList$Entry.next]o17834:0:0 > -1 && o20075[LinkedList$Entry.next]o20079:0:0 > o17836[LinkedList$Entry.next]o17838:0:0 && o17838[LinkedList$Entry.next]o17836:0:0 > 0 && o17836[LinkedList$Entry.next]o17838:0:0 > 0
f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50:0, java.lang.Object(x51:0)))))))), java.lang.Object(x52:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53:0), java.lang.Object(x54:0))), x55:0, x56:0, x57:0, x58:0, x50:0) -> f13397_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50:0, java.lang.Object(x51:0)))))))), java.lang.Object(x52:0), java.lang.Object(x59:0), x60:0, x56:0, x61:0, x62:0, x50:0) :|: x64:0 > 1 && x62:0 > 0 && x63:0 > 0 && x61:0 < x57:0 && x62:0 < x58:0 && x58:0 > -1 && x60:0 > x55:0 && x57:0 > 0 && x55:0 > 0

----------------------------------------

(29) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13397_0_remove_EQ(VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
javaUtilEx.Content()
NULL()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(30)
Obligation:
Rules:
f13397_0_remove_EQ(c, c1, c2, x3:0, x4:0, x5:0, x6:0, x:0) -> f13397_0_remove_EQ(c3, c4, c5, x8:0, x4:0, x9:0, x10:0, x:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (x12:0 > 1 && x10:0 > 0 && x11:0 > 0 && x8:0 > x3:0 && x9:0 < x5:0 && x6:0 > x10:0 && x6:0 > -1 && x5:0 > 0 && x3:0 > 0)
f13397_0_remove_EQ(c6, c7, c8, x31:0, x32:0, x31:0, x32:0, x25:0) -> f13397_0_remove_EQ(c9, c10, c11, c12, x34:0, x35:0, x36:0, x25:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && (c7 = 0 && c6 = 0))))) && (x38:0 > 1 && x36:0 > 0 && x37:0 > 0 && x31:0 > -1 && x35:0 < x31:0 && x32:0 > -1 && x36:0 < x32:0)
f13397_0_remove_EQ(c27, c28, c29, o17836[LinkedList$Entry.next]o17838:0:0, o17836[LinkedList$Entry.next]o17834:0:0, o17838[LinkedList$Entry.next]o17836:0:0, o17838[LinkedList$Entry.next]o17834:0:0, o17835142793979:0:0) -> f13397_0_remove_EQ(c30, c31, c32, o20075[LinkedList$Entry.next]o20079:0:0, o17836[LinkedList$Entry.next]o17834:0:0, o18899[LinkedList$Entry.next]o17836:0:0, o18899[LinkedList$Entry.next]o17834:0:0, o17835142793979:0:0) :|: c32 = 0 && (c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && c27 = 0)))) && (i4850:0:0 > 1 && o18899[LinkedList$Entry.next]o17834:0:0 > 0 && i3276:0:0 > 0 && o18899[LinkedList$Entry.next]o17836:0:0 < o17838[LinkedList$Entry.next]o17836:0:0 && o18899[LinkedList$Entry.next]o17834:0:0 < o17838[LinkedList$Entry.next]o17834:0:0 && o17838[LinkedList$Entry.next]o17834:0:0 > -1 && o20075[LinkedList$Entry.next]o20079:0:0 > o17836[LinkedList$Entry.next]o17838:0:0 && o17838[LinkedList$Entry.next]o17836:0:0 > 0 && o17836[LinkedList$Entry.next]o17838:0:0 > 0)

----------------------------------------

(31) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13397_0_remove_EQ(x, x1, x2, x3, x4, x5, x6, x7)] = -1 + c*x + c1*x1 + c2*x2 + x5

The following rules are decreasing:
f13397_0_remove_EQ(c, c1, c2, x3:0, x4:0, x5:0, x6:0, x:0) -> f13397_0_remove_EQ(c3, c4, c5, x8:0, x4:0, x9:0, x10:0, x:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (x12:0 > 1 && x10:0 > 0 && x11:0 > 0 && x8:0 > x3:0 && x9:0 < x5:0 && x6:0 > x10:0 && x6:0 > -1 && x5:0 > 0 && x3:0 > 0)
f13397_0_remove_EQ(c6, c7, c8, x31:0, x32:0, x31:0, x32:0, x25:0) -> f13397_0_remove_EQ(c9, c10, c11, c12, x34:0, x35:0, x36:0, x25:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && (c7 = 0 && c6 = 0))))) && (x38:0 > 1 && x36:0 > 0 && x37:0 > 0 && x31:0 > -1 && x35:0 < x31:0 && x32:0 > -1 && x36:0 < x32:0)
f13397_0_remove_EQ(c27, c28, c29, o17836[LinkedList$Entry.next]o17838:0:0, o17836[LinkedList$Entry.next]o17834:0:0, o17838[LinkedList$Entry.next]o17836:0:0, o17838[LinkedList$Entry.next]o17834:0:0, o17835142793979:0:0) -> f13397_0_remove_EQ(c30, c31, c32, o20075[LinkedList$Entry.next]o20079:0:0, o17836[LinkedList$Entry.next]o17834:0:0, o18899[LinkedList$Entry.next]o17836:0:0, o18899[LinkedList$Entry.next]o17834:0:0, o17835142793979:0:0) :|: c32 = 0 && (c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && c27 = 0)))) && (i4850:0:0 > 1 && o18899[LinkedList$Entry.next]o17834:0:0 > 0 && i3276:0:0 > 0 && o18899[LinkedList$Entry.next]o17836:0:0 < o17838[LinkedList$Entry.next]o17836:0:0 && o18899[LinkedList$Entry.next]o17834:0:0 < o17838[LinkedList$Entry.next]o17834:0:0 && o17838[LinkedList$Entry.next]o17834:0:0 > -1 && o20075[LinkedList$Entry.next]o20079:0:0 > o17836[LinkedList$Entry.next]o17838:0:0 && o17838[LinkedList$Entry.next]o17836:0:0 > 0 && o17836[LinkedList$Entry.next]o17838:0:0 > 0)
The following rules are bounded:
f13397_0_remove_EQ(c, c1, c2, x3:0, x4:0, x5:0, x6:0, x:0) -> f13397_0_remove_EQ(c3, c4, c5, x8:0, x4:0, x9:0, x10:0, x:0) :|: c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)))) && (x12:0 > 1 && x10:0 > 0 && x11:0 > 0 && x8:0 > x3:0 && x9:0 < x5:0 && x6:0 > x10:0 && x6:0 > -1 && x5:0 > 0 && x3:0 > 0)
f13397_0_remove_EQ(c27, c28, c29, o17836[LinkedList$Entry.next]o17838:0:0, o17836[LinkedList$Entry.next]o17834:0:0, o17838[LinkedList$Entry.next]o17836:0:0, o17838[LinkedList$Entry.next]o17834:0:0, o17835142793979:0:0) -> f13397_0_remove_EQ(c30, c31, c32, o20075[LinkedList$Entry.next]o20079:0:0, o17836[LinkedList$Entry.next]o17834:0:0, o18899[LinkedList$Entry.next]o17836:0:0, o18899[LinkedList$Entry.next]o17834:0:0, o17835142793979:0:0) :|: c32 = 0 && (c31 = 0 && (c30 = 0 && (c29 = 0 && (c28 = 0 && c27 = 0)))) && (i4850:0:0 > 1 && o18899[LinkedList$Entry.next]o17834:0:0 > 0 && i3276:0:0 > 0 && o18899[LinkedList$Entry.next]o17836:0:0 < o17838[LinkedList$Entry.next]o17836:0:0 && o18899[LinkedList$Entry.next]o17834:0:0 < o17838[LinkedList$Entry.next]o17834:0:0 && o17838[LinkedList$Entry.next]o17834:0:0 > -1 && o20075[LinkedList$Entry.next]o20079:0:0 > o17836[LinkedList$Entry.next]o17838:0:0 && o17838[LinkedList$Entry.next]o17836:0:0 > 0 && o17836[LinkedList$Entry.next]o17838:0:0 > 0)

----------------------------------------

(32)
Obligation:
Rules:
f13397_0_remove_EQ(c6, c7, c8, x31:0, x32:0, x31:0, x32:0, x25:0) -> f13397_0_remove_EQ(c9, c10, c11, c12, x34:0, x35:0, x36:0, x25:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && (c7 = 0 && c6 = 0))))) && (x38:0 > 1 && x36:0 > 0 && x37:0 > 0 && x31:0 > -1 && x35:0 < x31:0 && x32:0 > -1 && x36:0 < x32:0)

----------------------------------------

(33) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13397_0_remove_EQ(x, x1, x2, x3, x4, x5, x6, x7)] = c*x + c1*x1 + c2*x2 + x6

The following rules are decreasing:
f13397_0_remove_EQ(c6, c7, c8, x31:0, x32:0, x31:0, x32:0, x25:0) -> f13397_0_remove_EQ(c9, c10, c11, c12, x34:0, x35:0, x36:0, x25:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && (c7 = 0 && c6 = 0))))) && (x38:0 > 1 && x36:0 > 0 && x37:0 > 0 && x31:0 > -1 && x35:0 < x31:0 && x32:0 > -1 && x36:0 < x32:0)
The following rules are bounded:
f13397_0_remove_EQ(c6, c7, c8, x31:0, x32:0, x31:0, x32:0, x25:0) -> f13397_0_remove_EQ(c9, c10, c11, c12, x34:0, x35:0, x36:0, x25:0) :|: c12 = 1 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && (c7 = 0 && c6 = 0))))) && (x38:0 > 1 && x36:0 > 0 && x37:0 > 0 && x31:0 > -1 && x35:0 < x31:0 && x32:0 > -1 && x36:0 < x32:0)

----------------------------------------

(34)
YES

----------------------------------------

(35)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveElement.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, next]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(36) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 65 IRulesP rules:
f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17704sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304, java.lang.Object(o17701sub-2076140304))), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701, o17704[LinkedList$Entry.next]o17699) -> f13407_0_remove_Load(EOS(STATIC_13407), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701, o17704[LinkedList$Entry.next]o17699) :|: TRUE
f13407_0_remove_Load(EOS(STATIC_13407), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701, o17704[LinkedList$Entry.next]o17699) -> f13419_0_remove_Load(EOS(STATIC_13419), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17703sub0), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701, o17704[LinkedList$Entry.next]o17699) :|: TRUE
f13419_0_remove_Load(EOS(STATIC_13419), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17703sub0), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701, o17704[LinkedList$Entry.next]o17699) -> f13428_0_remove_FieldAccess(EOS(STATIC_13428), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701, o17704[LinkedList$Entry.next]o17699) :|: TRUE
f13428_0_remove_FieldAccess(EOS(STATIC_13428), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701, o17704[LinkedList$Entry.next]o17699) -> f13437_0_remove_FieldAccess(EOS(STATIC_13437), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701) :|: o17701[LinkedList$Entry.next]o17704 > 0 && o17704[LinkedList$Entry.next]o17701 > 0
f13428_0_remove_FieldAccess(EOS(STATIC_13428), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o18849sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o18849sub0), java.lang.Object(o17703sub0), java.lang.Object(o18849sub0), o18849[LinkedList$Entry.next]o18849, o17702[LinkedList$Entry.previous]o17699, o18849[LinkedList$Entry.next]o17699, o18849[LinkedList$Entry.next]o18849, o18849[LinkedList$Entry.next]o17699) -> f13438_0_remove_FieldAccess(EOS(STATIC_13438), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o18849sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o18849sub0), java.lang.Object(o17703sub0), java.lang.Object(o18849sub0), o17702[LinkedList$Entry.previous]o17699, o18849[LinkedList$Entry.next]o17699, o18849[LinkedList$Entry.next]o18849) :|: TRUE
f13437_0_remove_FieldAccess(EOS(STATIC_13437), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), o17701[LinkedList$Entry.next]o18889, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o18889[LinkedList$Entry.next]o17699, o18889[LinkedList$Entry.next]o17701) -> f13448_0_remove_FieldAccess(EOS(STATIC_13448), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: o18891[LinkedList$Entry.next]o17699 < o18889[LinkedList$Entry.next]o17699 && o18889[LinkedList$Entry.next]o17699 >= 0 && o18891[LinkedList$Entry.next]o17701 < o18889[LinkedList$Entry.next]o17701 && o18889[LinkedList$Entry.next]o17701 >= 0
f13448_0_remove_FieldAccess(EOS(STATIC_13448), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f13459_0_remove_InvokeMethod(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), java.lang.Object(o17703sub0), o188900, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: TRUE
f13459_0_remove_InvokeMethod(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), java.lang.Object(o17703sub0), o188900, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f13470_0_equals_Load(EOS(STATIC_13470), java.lang.Object(o17703sub0), o188900, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304, java.lang.Object(o17701sub-2076140304))), java.lang.Object(o17701sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), java.lang.Object(o18891sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), o188900, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: i4821 > 1 && i3276 >= 1
f13459_0_remove_InvokeMethod(EOS(STATIC_13459), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), java.lang.Object(o17703sub0), o188900, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f13470_1_equals_Load(EOS(STATIC_13470), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), java.lang.Object(o17703sub0), o188900, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: i4821 > 1 && i3276 >= 1
f13470_0_equals_Load(EOS(STATIC_13470), java.lang.Object(o17703sub0), o188900, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304, java.lang.Object(o17701sub-2076140304))), java.lang.Object(o17701sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), java.lang.Object(o18891sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), o188900, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f14292_0_equals_Load(EOS(STATIC_14292), java.lang.Object(o17703sub0), o188900, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304, java.lang.Object(o17701sub-2076140304))), java.lang.Object(o17701sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162, java.lang.Object(o18891sub-2075158162))), java.lang.Object(o18891sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), o188900, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: TRUE
f13544_0_equals_Return(EOS(STATIC_13544), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o19636sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18891sub-2075158162))), matching1, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f13546_0_equals_Return(EOS(STATIC_13546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o19636sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18891sub-2075158162))), 0, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: TRUE && matching1 = 0
f13546_0_equals_Return(EOS(STATIC_13546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20010-2054163195, java.lang.Object(o20011sub-2054163195))), matching1, o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20006[LinkedList$Entry.next]o20009, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006) -> f13574_0_remove_EQ(EOS(STATIC_13574), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20010-2054163195, java.lang.Object(o20011sub-2054163195))), 0, o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20006[LinkedList$Entry.next]o20009, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006) :|: TRUE && matching1 = 0
f13574_0_remove_EQ(EOS(STATIC_13574), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20010-2054163195, java.lang.Object(o20011sub-2054163195))), matching1, o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20006[LinkedList$Entry.next]o20009, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006) -> f13589_0_remove_Load(EOS(STATIC_13589), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20010-2054163195, java.lang.Object(o20011sub-2054163195))), o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20006[LinkedList$Entry.next]o20009, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006) :|: TRUE && matching1 = 0
f13589_0_remove_Load(EOS(STATIC_13589), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20010-2054163195, java.lang.Object(o20011sub-2054163195))), o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20006[LinkedList$Entry.next]o20009, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006) -> f13608_0_remove_FieldAccess(EOS(STATIC_13608), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20010-2054163195, java.lang.Object(o20011sub-2054163195))), o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20006[LinkedList$Entry.next]o20009, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006) :|: TRUE
f13608_0_remove_FieldAccess(EOS(STATIC_13608), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20010-2054163195, java.lang.Object(o20011sub-2054163195))), o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20006[LinkedList$Entry.next]o20009, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006) -> f13622_0_remove_Store(EOS(STATIC_13622), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(o20011sub0), o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006, o20006[LinkedList$Entry.next]o20011) :|: o20006[LinkedList$Entry.next]o20011 > o20006[LinkedList$Entry.next]o20009 && o20006[LinkedList$Entry.next]o20009 >= 0
f13622_0_remove_Store(EOS(STATIC_13622), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(o20011sub0), o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006, o20006[LinkedList$Entry.next]o20011) -> f13640_0_remove_JMP(EOS(STATIC_13640), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(o20011sub0), o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006, o20006[LinkedList$Entry.next]o20011) :|: TRUE
f13640_0_remove_JMP(EOS(STATIC_13640), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(o20011sub0), o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006, o20006[LinkedList$Entry.next]o20011) -> f13659_0_remove_Load(EOS(STATIC_13659), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(o20011sub0), o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006, o20006[LinkedList$Entry.next]o20011) :|: TRUE
f13659_0_remove_Load(EOS(STATIC_13659), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(o20011sub0), o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006, o20006[LinkedList$Entry.next]o20011) -> f13331_0_remove_Load(EOS(STATIC_13331), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20005186640565, java.lang.Object(o20006sub186640565)))))))), java.lang.Object(o20008sub0), java.lang.Object(o20011sub0), o20006[LinkedList$Entry.next]o20011, o20007[LinkedList$Entry.previous]o20004, o20006[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20004, o20011[LinkedList$Entry.next]o20006) :|: TRUE
f13331_0_remove_Load(EOS(STATIC_13331), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701) -> f13347_0_remove_Load(EOS(STATIC_13347), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17704sub0), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701) :|: TRUE
f13347_0_remove_Load(EOS(STATIC_13347), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17704sub0), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701) -> f13361_0_remove_FieldAccess(EOS(STATIC_13361), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17704sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701) :|: TRUE
f13361_0_remove_FieldAccess(EOS(STATIC_13361), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17704sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701) -> f13378_0_remove_EQ(EOS(STATIC_13378), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17704sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304, java.lang.Object(o17701sub-2076140304))), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701) :|: TRUE
f13378_0_remove_EQ(EOS(STATIC_13378), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17704sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304, java.lang.Object(o17701sub-2076140304))), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701) -> f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o17703sub0), java.lang.Object(o17704sub0), java.lang.Object(o17704sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304, java.lang.Object(o17701sub-2076140304))), o17701[LinkedList$Entry.next]o17704, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17704[LinkedList$Entry.next]o17701, o17704[LinkedList$Entry.next]o17699) :|: o17704[LinkedList$Entry.next]o17699 > 0
f13545_0_equals_Return(EOS(STATIC_13545), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o19650sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19652sub-2075158162), java.lang.Object(o18891sub-2075158162))), matching1, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f13546_0_equals_Return(EOS(STATIC_13546), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o19650sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19652sub-2075158162), java.lang.Object(o18891sub-2075158162))), 0, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: TRUE && matching1 = 0
f13547_0_equals_Return(EOS(STATIC_13547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18891sub-2075158162))), matching1, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f13549_0_equals_Return(EOS(STATIC_13549), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18891sub-2075158162))), 0, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: TRUE && matching1 = 0
f13549_0_equals_Return(EOS(STATIC_13549), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub-2054161335))), i5297, o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20024[LinkedList$Entry.next]o20027, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024) -> f13575_0_remove_EQ(EOS(STATIC_13575), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub-2054161335))), i5297, o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20024[LinkedList$Entry.next]o20027, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024) :|: TRUE
f13575_0_remove_EQ(EOS(STATIC_13575), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub-2054161335))), matching1, o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20024[LinkedList$Entry.next]o20027, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024) -> f13591_0_remove_EQ(EOS(STATIC_13591), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub-2054161335))), 0, o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20024[LinkedList$Entry.next]o20027, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024) :|: TRUE && matching1 = 0
f13591_0_remove_EQ(EOS(STATIC_13591), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub-2054161335))), matching1, o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20024[LinkedList$Entry.next]o20027, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024) -> f13610_0_remove_Load(EOS(STATIC_13610), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub-2054161335))), o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20024[LinkedList$Entry.next]o20027, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024) :|: TRUE && matching1 = 0
f13610_0_remove_Load(EOS(STATIC_13610), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub-2054161335))), o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20024[LinkedList$Entry.next]o20027, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024) -> f13624_0_remove_FieldAccess(EOS(STATIC_13624), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub-2054161335))), o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20024[LinkedList$Entry.next]o20027, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024) :|: TRUE
f13624_0_remove_FieldAccess(EOS(STATIC_13624), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub-2054161335))), o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20024[LinkedList$Entry.next]o20027, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024) -> f13642_0_remove_Store(EOS(STATIC_13642), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub0), o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024, o20024[LinkedList$Entry.next]o20029) :|: o20024[LinkedList$Entry.next]o20029 > o20024[LinkedList$Entry.next]o20027 && o20024[LinkedList$Entry.next]o20027 >= 0
f13642_0_remove_Store(EOS(STATIC_13642), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub0), o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024, o20024[LinkedList$Entry.next]o20029) -> f13661_0_remove_JMP(EOS(STATIC_13661), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub0), o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024, o20024[LinkedList$Entry.next]o20029) :|: TRUE
f13661_0_remove_JMP(EOS(STATIC_13661), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub0), o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024, o20024[LinkedList$Entry.next]o20029) -> f13674_0_remove_Load(EOS(STATIC_13674), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub0), o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024, o20024[LinkedList$Entry.next]o20029) :|: TRUE
f13674_0_remove_Load(EOS(STATIC_13674), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub0), o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024, o20024[LinkedList$Entry.next]o20029) -> f13331_0_remove_Load(EOS(STATIC_13331), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20023186644285, java.lang.Object(o20024sub186644285)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub0), o20024[LinkedList$Entry.next]o20029, o20025[LinkedList$Entry.previous]o20022, o20024[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20022, o20029[LinkedList$Entry.next]o20024) :|: TRUE
f13548_0_equals_Return(EOS(STATIC_13548), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18891sub-2075158162))), matching1, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f13549_0_equals_Return(EOS(STATIC_13549), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18891sub-2075158162))), 1, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: TRUE && matching1 = 1
f13438_0_remove_FieldAccess(EOS(STATIC_13438), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), o17702[LinkedList$Entry.previous]o17699, o18893[LinkedList$Entry.next]o17699, o18893[LinkedList$Entry.next]o18893) -> f13449_0_remove_FieldAccess(EOS(STATIC_13449), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: o18895[LinkedList$Entry.next]o17699 < o18893[LinkedList$Entry.next]o17699 && o18893[LinkedList$Entry.next]o17699 >= 0 && o18895[LinkedList$Entry.next]o18893 < o18893[LinkedList$Entry.next]o18893 && o18893[LinkedList$Entry.next]o18893 >= 0
f13449_0_remove_FieldAccess(EOS(STATIC_13449), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f13460_0_remove_InvokeMethod(EOS(STATIC_13460), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), java.lang.Object(o17703sub0), o188940, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: TRUE
f13460_0_remove_InvokeMethod(EOS(STATIC_13460), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), java.lang.Object(o17703sub0), o188940, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f13471_0_equals_Load(EOS(STATIC_13471), java.lang.Object(o17703sub0), o188940, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894143669605, java.lang.Object(o18895sub143669605))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), java.lang.Object(o18895sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o17703sub0), o188940, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: i4821 > 1 && i3276 >= 1
f13460_0_remove_InvokeMethod(EOS(STATIC_13460), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), java.lang.Object(o17703sub0), o188940, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f13471_1_equals_Load(EOS(STATIC_13471), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o17703sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), java.lang.Object(o17703sub0), o188940, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: i4821 > 1 && i3276 >= 1
f13471_0_equals_Load(EOS(STATIC_13471), java.lang.Object(o17703sub0), o188940, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894143669605, java.lang.Object(o18895sub143669605))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), java.lang.Object(o18895sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o17703sub0), o188940, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f14372_0_equals_Load(EOS(STATIC_14372), java.lang.Object(o17703sub0), o188940, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894143669605, java.lang.Object(o18895sub143669605))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387, java.lang.Object(o18895sub-2075157387))), java.lang.Object(o18895sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o17703sub0), o188940, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: TRUE
f13551_0_equals_Return(EOS(STATIC_13551), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o19721sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-2075157387))), matching1, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f13553_0_equals_Return(EOS(STATIC_13553), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o19721sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-2075157387))), 0, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: TRUE && matching1 = 0
f13553_0_equals_Return(EOS(STATIC_13553), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-2054160312, java.lang.Object(o20041sub-2054160312))), matching1, o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) -> f13576_0_remove_EQ(EOS(STATIC_13576), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-2054160312, java.lang.Object(o20041sub-2054160312))), 0, o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) :|: TRUE && matching1 = 0
f13576_0_remove_EQ(EOS(STATIC_13576), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-2054160312, java.lang.Object(o20041sub-2054160312))), matching1, o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) -> f13592_0_remove_Load(EOS(STATIC_13592), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-2054160312, java.lang.Object(o20041sub-2054160312))), o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) :|: TRUE && matching1 = 0
f13592_0_remove_Load(EOS(STATIC_13592), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-2054160312, java.lang.Object(o20041sub-2054160312))), o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) -> f13611_0_remove_FieldAccess(EOS(STATIC_13611), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-2054160312, java.lang.Object(o20041sub-2054160312))), o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) :|: TRUE
f13611_0_remove_FieldAccess(EOS(STATIC_13611), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-2054160312, java.lang.Object(o20041sub-2054160312))), o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) -> f13625_0_remove_Store(EOS(STATIC_13625), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(o20041sub0), o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) :|: TRUE
f13625_0_remove_Store(EOS(STATIC_13625), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(o20041sub0), o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) -> f13643_0_remove_JMP(EOS(STATIC_13643), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(o20041sub0), o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) :|: TRUE
f13643_0_remove_JMP(EOS(STATIC_13643), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(o20041sub0), o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) -> f13662_0_remove_Load(EOS(STATIC_13662), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(o20041sub0), o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) :|: TRUE
f13662_0_remove_Load(EOS(STATIC_13662), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(o20041sub0), o20043[LinkedList$Entry.previous]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) -> f13331_0_remove_Load(EOS(STATIC_13331), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20038186646517, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20040-1867513795, java.lang.Object(o20041sub-1867513795)))))))))), java.lang.Object(o20044sub0), java.lang.Object(o20041sub0), o20039[LinkedList$Entry.next]o20041, o20043[LinkedList$Entry.previous]o20037, o20039[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20037, o20041[LinkedList$Entry.next]o20039) :|: o20039[LinkedList$Entry.next]o20041 = 1
f13552_0_equals_Return(EOS(STATIC_13552), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-1932470730), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o19734sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-2075157387), java.lang.Object(o18895sub-2075157387))), matching1, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f13553_0_equals_Return(EOS(STATIC_13553), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-1932470730), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o19734sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-2075157387), java.lang.Object(o18895sub-2075157387))), 0, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: TRUE && matching1 = 0
f13554_0_equals_Return(EOS(STATIC_13554), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-2075157387))), matching1, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f13556_0_equals_Return(EOS(STATIC_13556), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-2075157387))), 0, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: TRUE && matching1 = 0
f13556_0_equals_Return(EOS(STATIC_13556), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-2054158483))), i5307, o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) -> f13577_0_remove_EQ(EOS(STATIC_13577), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-2054158483))), i5307, o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) :|: TRUE
f13577_0_remove_EQ(EOS(STATIC_13577), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-2054158483))), matching1, o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) -> f13594_0_remove_EQ(EOS(STATIC_13594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-2054158483))), 0, o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) :|: TRUE && matching1 = 0
f13594_0_remove_EQ(EOS(STATIC_13594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-2054158483))), matching1, o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) -> f13613_0_remove_Load(EOS(STATIC_13613), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-2054158483))), o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) :|: TRUE && matching1 = 0
f13613_0_remove_Load(EOS(STATIC_13613), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-2054158483))), o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) -> f13627_0_remove_FieldAccess(EOS(STATIC_13627), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-2054158483))), o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) :|: TRUE
f13627_0_remove_FieldAccess(EOS(STATIC_13627), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-2054158483))), o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) -> f13645_0_remove_Store(EOS(STATIC_13645), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub0), o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) :|: TRUE
f13645_0_remove_Store(EOS(STATIC_13645), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub0), o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) -> f13664_0_remove_JMP(EOS(STATIC_13664), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub0), o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) :|: TRUE
f13664_0_remove_JMP(EOS(STATIC_13664), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub0), o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) -> f13675_0_remove_Load(EOS(STATIC_13675), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub0), o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) :|: TRUE
f13675_0_remove_Load(EOS(STATIC_13675), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub0), o20060[LinkedList$Entry.previous]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) -> f13331_0_remove_Load(EOS(STATIC_13331), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o20055186650175, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub-1867508308)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub0), o20056[LinkedList$Entry.next]o20058, o20060[LinkedList$Entry.previous]o20054, o20056[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20054, o20058[LinkedList$Entry.next]o20056) :|: o20056[LinkedList$Entry.next]o20058 = 1
f13555_0_equals_Return(EOS(STATIC_13555), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-2075157387))), matching1, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f13556_0_equals_Return(EOS(STATIC_13556), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-2075157387))), 1, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: TRUE && matching1 = 1
f13470_1_equals_Load(EOS(STATIC_13470), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o19636sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18891sub-2075158162))), java.lang.Object(o19636sub0), NULL, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f13544_0_equals_Return(EOS(STATIC_13544), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o19636sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18891sub-2075158162))), 0, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: TRUE
f13470_1_equals_Load(EOS(STATIC_13470), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o19650sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19652sub-2075158162), java.lang.Object(o18891sub-2075158162))), java.lang.Object(o19650sub0), java.lang.Object(o19652sub0), o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f13545_0_equals_Return(EOS(STATIC_13545), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(o19650sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19652sub-2075158162), java.lang.Object(o18891sub-2075158162))), 0, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: TRUE
f13470_1_equals_Load(EOS(STATIC_13470), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18891sub-2075158162))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f13547_0_equals_Return(EOS(STATIC_13547), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18891sub-2075158162))), 0, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: TRUE
f13470_1_equals_Load(EOS(STATIC_13470), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18891sub-2075158162))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) -> f13548_0_equals_Return(EOS(STATIC_13548), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(o17701sub142686657)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18891sub-2075158162))), 1, o17702[LinkedList$Entry.previous]o17699, o17701[LinkedList$Entry.next]o17699, o17701[LinkedList$Entry.next]o18889, o18891[LinkedList$Entry.next]o17699, o18891[LinkedList$Entry.next]o17701) :|: TRUE
f13471_1_equals_Load(EOS(STATIC_13471), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o19721sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-2075157387))), java.lang.Object(o19721sub0), NULL, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f13551_0_equals_Return(EOS(STATIC_13551), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o19721sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-2075157387))), 0, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: TRUE
f13471_1_equals_Load(EOS(STATIC_13471), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-1932470730), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o19734sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-2075157387), java.lang.Object(o18895sub-2075157387))), java.lang.Object(o19734sub0), java.lang.Object(o19736sub0), o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f13552_0_equals_Return(EOS(STATIC_13552), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-1932470730), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(o19734sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-2075157387), java.lang.Object(o18895sub-2075157387))), 0, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: TRUE
f13471_1_equals_Load(EOS(STATIC_13471), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-2075157387))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f13554_0_equals_Return(EOS(STATIC_13554), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-2075157387))), 0, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: TRUE
f13471_1_equals_Load(EOS(STATIC_13471), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-2075157387))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) -> f13555_0_equals_Return(EOS(STATIC_13555), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-1932470730)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-2075157387))), 1, o17702[LinkedList$Entry.previous]o17699, o18895[LinkedList$Entry.next]o17699, o18895[LinkedList$Entry.next]o18893) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18891sub-2075158162:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18891sub-2075158162:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:0, java.lang.Object(o17701sub-2076140304:0))), o17701[LinkedList$Entry.next]o17704:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o17704[LinkedList$Entry.next]o17701:0, o17704[LinkedList$Entry.next]o17699:0) -> f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20011sub0:0), java.lang.Object(o20011sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:1, java.lang.Object(o17701sub-2076140304:1))), o20006[LinkedList$Entry.next]o20011:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o18891[LinkedList$Entry.next]o17701:0, o18891[LinkedList$Entry.next]o17699:0) :|: o17704[LinkedList$Entry.next]o17701:0 > 0 && o17701[LinkedList$Entry.next]o17704:0 > 0 && o20006[LinkedList$Entry.next]o20011:0 > o17701[LinkedList$Entry.next]o17704:0 && o17704[LinkedList$Entry.next]o17699:0 > -1 && o18891[LinkedList$Entry.next]o17699:0 < o17704[LinkedList$Entry.next]o17699:0 && o18891[LinkedList$Entry.next]o17701:0 < o17704[LinkedList$Entry.next]o17701:0 && i3276:0 > 0 && o18891[LinkedList$Entry.next]o17699:0 > 0 && i4821:0 > 1
f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-1932470730:0), java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-2075157387:0), java.lang.Object(o18895sub-2075157387:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-2075157387:0), java.lang.Object(o18895sub-2075157387:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:0, java.lang.Object(o17701sub-2076140304:0))), o17701[LinkedList$Entry.next]o17704:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0) -> f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19736sub-1932470730:0), java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20041sub0:0), java.lang.Object(o20041sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:1, java.lang.Object(o17701sub-2076140304:1))), 1, o17702[LinkedList$Entry.previous]o17699:0, o20039[LinkedList$Entry.next]o20037:0, o18895[LinkedList$Entry.next]o18893:0, o18895[LinkedList$Entry.next]o17699:0) :|: o17701[LinkedList$Entry.next]o17699:0 > -1 && o18895[LinkedList$Entry.next]o17699:0 < o17701[LinkedList$Entry.next]o17699:0 && o18895[LinkedList$Entry.next]o18893:0 < o17701[LinkedList$Entry.next]o17704:0 && o17701[LinkedList$Entry.next]o17704:0 > -1 && i3276:0 > 0 && o18895[LinkedList$Entry.next]o17699:0 > 0 && i4821:0 > 1
f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-2075157387:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-2075157387:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:0, java.lang.Object(o17701sub-2076140304:0))), o17701[LinkedList$Entry.next]o17704:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0) -> f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20058sub0:0), java.lang.Object(o20058sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:1, java.lang.Object(o17701sub-2076140304:1))), 1, o17702[LinkedList$Entry.previous]o17699:0, o20056[LinkedList$Entry.next]o20054:0, o18895[LinkedList$Entry.next]o18893:0, o18895[LinkedList$Entry.next]o17699:0) :|: o17701[LinkedList$Entry.next]o17699:0 > -1 && o18895[LinkedList$Entry.next]o17699:0 < o17701[LinkedList$Entry.next]o17699:0 && o18895[LinkedList$Entry.next]o18893:0 < o17701[LinkedList$Entry.next]o17704:0 && o17701[LinkedList$Entry.next]o17704:0 > -1 && i3276:0 > 0 && o18895[LinkedList$Entry.next]o17699:0 > 0 && i4821:0 > 1
f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-2075157387:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-2075157387:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:0, java.lang.Object(o17701sub-2076140304:0))), o17701[LinkedList$Entry.next]o17704:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0) -> f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20041sub0:0), java.lang.Object(o20041sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:1, java.lang.Object(o17701sub-2076140304:1))), 1, o17702[LinkedList$Entry.previous]o17699:0, o20039[LinkedList$Entry.next]o20037:0, o18895[LinkedList$Entry.next]o18893:0, o18895[LinkedList$Entry.next]o17699:0) :|: o17701[LinkedList$Entry.next]o17699:0 > -1 && o18895[LinkedList$Entry.next]o17699:0 < o17701[LinkedList$Entry.next]o17699:0 && o18895[LinkedList$Entry.next]o18893:0 < o17701[LinkedList$Entry.next]o17704:0 && o17701[LinkedList$Entry.next]o17704:0 > -1 && i3276:0 > 0 && o18895[LinkedList$Entry.next]o17699:0 > 0 && i4821:0 > 1
f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18891sub-2075158162:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o18891sub-2075158162:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:0, java.lang.Object(o17701sub-2076140304:0))), o17701[LinkedList$Entry.next]o17704:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o17704[LinkedList$Entry.next]o17701:0, o17704[LinkedList$Entry.next]o17699:0) -> f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o20029sub0:0), java.lang.Object(o20029sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:1, java.lang.Object(o17701sub-2076140304:1))), o20024[LinkedList$Entry.next]o20029:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o18891[LinkedList$Entry.next]o17701:0, o18891[LinkedList$Entry.next]o17699:0) :|: o17704[LinkedList$Entry.next]o17701:0 > 0 && o17701[LinkedList$Entry.next]o17704:0 > 0 && o17704[LinkedList$Entry.next]o17699:0 > -1 && o18891[LinkedList$Entry.next]o17699:0 < o17704[LinkedList$Entry.next]o17699:0 && o18891[LinkedList$Entry.next]o17701:0 < o17704[LinkedList$Entry.next]o17701:0 && o20024[LinkedList$Entry.next]o20029:0 > o17701[LinkedList$Entry.next]o17704:0 && i3276:0 > 0 && o18891[LinkedList$Entry.next]o17699:0 > 0 && i4821:0 > 1
f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19652sub-2075158162:0), java.lang.Object(o18891sub-2075158162:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o19652sub-2075158162:0), java.lang.Object(o18891sub-2075158162:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:0, java.lang.Object(o17701sub-2076140304:0))), o17701[LinkedList$Entry.next]o17704:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o17704[LinkedList$Entry.next]o17701:0, o17704[LinkedList$Entry.next]o17699:0) -> f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20011sub0:0), java.lang.Object(o20011sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:1, java.lang.Object(o17701sub-2076140304:1))), o20006[LinkedList$Entry.next]o20011:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o18891[LinkedList$Entry.next]o17701:0, o18891[LinkedList$Entry.next]o17699:0) :|: o17704[LinkedList$Entry.next]o17701:0 > 0 && o17701[LinkedList$Entry.next]o17704:0 > 0 && o20006[LinkedList$Entry.next]o20011:0 > o17701[LinkedList$Entry.next]o17704:0 && o17704[LinkedList$Entry.next]o17699:0 > -1 && o18891[LinkedList$Entry.next]o17699:0 < o17704[LinkedList$Entry.next]o17699:0 && o18891[LinkedList$Entry.next]o17701:0 < o17704[LinkedList$Entry.next]o17701:0 && i3276:0 > 0 && o18891[LinkedList$Entry.next]o17699:0 > 0 && i4821:0 > 1
Removed following non-SCC rules:
f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730:0, java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387:0, java.lang.Object(o18895sub-2075157387:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387:0, java.lang.Object(o18895sub-2075157387:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:0, java.lang.Object(o17701sub-2076140304:0))), o17701[LinkedList$Entry.next]o17704:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0) -> f14372_0_equals_Load(EOS(STATIC_14372), java.lang.Object(o17703sub0:0), o188940:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:1, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894143669605:0, java.lang.Object(o18895sub143669605:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-2075157387:0, java.lang.Object(o18895sub-2075157387:0))), java.lang.Object(o18895sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18894-1932470730:0, java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(o17703sub0:0), o188940:0, o17702[LinkedList$Entry.previous]o17699:0, o18895[LinkedList$Entry.next]o17699:0, o18895[LinkedList$Entry.next]o18893:0) :|: o17701[LinkedList$Entry.next]o17699:0 > -1 && o18895[LinkedList$Entry.next]o17699:0 < o17701[LinkedList$Entry.next]o17699:0 && o18895[LinkedList$Entry.next]o18893:0 < o17701[LinkedList$Entry.next]o17704:0 && o17701[LinkedList$Entry.next]o17704:0 > -1 && i4821:0 > 1 && i3276:0 > 0
f13395_0_remove_EQ(EOS(STATIC_13395), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162:0, java.lang.Object(o18891sub-2075158162:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162:0, java.lang.Object(o18891sub-2075158162:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:0, java.lang.Object(o17701sub-2076140304:0))), o17701[LinkedList$Entry.next]o17704:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o17704[LinkedList$Entry.next]o17701:0, o17704[LinkedList$Entry.next]o17699:0) -> f14292_0_equals_Load(EOS(STATIC_14292), java.lang.Object(o17703sub0:0), o188900:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700-2076140304:1, java.lang.Object(o17701sub-2076140304:1))), java.lang.Object(o17701sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o18890-2075158162:0, java.lang.Object(o18891sub-2075158162:0))), java.lang.Object(o18891sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), o188900:0, o17702[LinkedList$Entry.previous]o17699:0, o17701[LinkedList$Entry.next]o17699:0, o17701[LinkedList$Entry.next]o17704:0, o18891[LinkedList$Entry.next]o17699:0, o18891[LinkedList$Entry.next]o17701:0) :|: o17704[LinkedList$Entry.next]o17701:0 > 0 && o17704[LinkedList$Entry.next]o17699:0 > -1 && o18891[LinkedList$Entry.next]o17699:0 < o17704[LinkedList$Entry.next]o17699:0 && o18891[LinkedList$Entry.next]o17701:0 < o17704[LinkedList$Entry.next]o17701:0 && o17701[LinkedList$Entry.next]o17704:0 > 0 && i4821:0 > 1 && i3276:0 > 0
Filtered constant ground arguments:
   f13395_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f13395_0_remove_EQ(x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13395_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13395_0_remove_EQ(x1, x2, x4, x5, x6, x7, x8, x9, x10)
Filtered unneeded arguments:
   f13395_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13395_0_remove_EQ(x1, x2, x3, x5, x7, x8, x9)
Finished conversion. Obtained 6 rules.P rules:
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18891sub-2075158162:0))), o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17704[LinkedList$Entry.next]o17701:0, o17704[LinkedList$Entry.next]o17699:0, o17700142686657:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20011sub0:0), o20006[LinkedList$Entry.next]o20011:0, o17701[LinkedList$Entry.next]o17699:0, o18891[LinkedList$Entry.next]o17701:0, o18891[LinkedList$Entry.next]o17699:0, o17700142686657:0) :|: o17701[LinkedList$Entry.next]o17704:0 > 0 && o17704[LinkedList$Entry.next]o17701:0 > 0 && o20006[LinkedList$Entry.next]o20011:0 > o17701[LinkedList$Entry.next]o17704:0 && o17704[LinkedList$Entry.next]o17699:0 > -1 && o18891[LinkedList$Entry.next]o17699:0 < o17704[LinkedList$Entry.next]o17699:0 && o18891[LinkedList$Entry.next]o17701:0 < o17704[LinkedList$Entry.next]o17701:0 && i3276:0 > 0 && i4821:0 > 1 && o18891[LinkedList$Entry.next]o17699:0 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o19736sub-1932470730:0), java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o19736sub-2075157387:0), java.lang.Object(o18895sub-2075157387:0))), o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17700142686657:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o19736sub-1932470730:0), java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20041sub0:0), 1, o20039[LinkedList$Entry.next]o20037:0, o18895[LinkedList$Entry.next]o18893:0, o18895[LinkedList$Entry.next]o17699:0, o17700142686657:0) :|: o18895[LinkedList$Entry.next]o17699:0 < o17701[LinkedList$Entry.next]o17699:0 && o17701[LinkedList$Entry.next]o17699:0 > -1 && o18895[LinkedList$Entry.next]o18893:0 < o17701[LinkedList$Entry.next]o17704:0 && o17701[LinkedList$Entry.next]o17704:0 > -1 && i3276:0 > 0 && i4821:0 > 1 && o18895[LinkedList$Entry.next]o17699:0 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o18895sub-2075157387:0))), o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17700142686657:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o20058sub0:0), 1, o20056[LinkedList$Entry.next]o20054:0, o18895[LinkedList$Entry.next]o18893:0, o18895[LinkedList$Entry.next]o17699:0, o17700142686657:0) :|: o18895[LinkedList$Entry.next]o17699:0 < o17701[LinkedList$Entry.next]o17699:0 && o17701[LinkedList$Entry.next]o17699:0 > -1 && o18895[LinkedList$Entry.next]o18893:0 < o17701[LinkedList$Entry.next]o17704:0 && o17701[LinkedList$Entry.next]o17704:0 > -1 && i3276:0 > 0 && i4821:0 > 1 && o18895[LinkedList$Entry.next]o17699:0 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18895sub-2075157387:0))), o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17700142686657:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18895sub-1932470730:0)))))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20041sub0:0), 1, o20039[LinkedList$Entry.next]o20037:0, o18895[LinkedList$Entry.next]o18893:0, o18895[LinkedList$Entry.next]o17699:0, o17700142686657:0) :|: o18895[LinkedList$Entry.next]o17699:0 < o17701[LinkedList$Entry.next]o17699:0 && o17701[LinkedList$Entry.next]o17699:0 > -1 && o18895[LinkedList$Entry.next]o18893:0 < o17701[LinkedList$Entry.next]o17704:0 && o17701[LinkedList$Entry.next]o17704:0 > -1 && i3276:0 > 0 && i4821:0 > 1 && o18895[LinkedList$Entry.next]o17699:0 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o18891sub-2075158162:0))), o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17704[LinkedList$Entry.next]o17701:0, o17704[LinkedList$Entry.next]o17699:0, o17700142686657:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(o20029sub0:0), o20024[LinkedList$Entry.next]o20029:0, o17701[LinkedList$Entry.next]o17699:0, o18891[LinkedList$Entry.next]o17701:0, o18891[LinkedList$Entry.next]o17699:0, o17700142686657:0) :|: o17701[LinkedList$Entry.next]o17704:0 > 0 && o17704[LinkedList$Entry.next]o17701:0 > 0 && o17704[LinkedList$Entry.next]o17699:0 > -1 && o18891[LinkedList$Entry.next]o17699:0 < o17704[LinkedList$Entry.next]o17699:0 && o18891[LinkedList$Entry.next]o17701:0 < o17704[LinkedList$Entry.next]o17701:0 && o20024[LinkedList$Entry.next]o20029:0 > o17701[LinkedList$Entry.next]o17704:0 && i3276:0 > 0 && i4821:0 > 1 && o18891[LinkedList$Entry.next]o17699:0 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o19652sub-2075158162:0), java.lang.Object(o18891sub-2075158162:0))), o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17704[LinkedList$Entry.next]o17701:0, o17704[LinkedList$Entry.next]o17699:0, o17700142686657:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20011sub0:0), o20006[LinkedList$Entry.next]o20011:0, o17701[LinkedList$Entry.next]o17699:0, o18891[LinkedList$Entry.next]o17701:0, o18891[LinkedList$Entry.next]o17699:0, o17700142686657:0) :|: o17701[LinkedList$Entry.next]o17704:0 > 0 && o17704[LinkedList$Entry.next]o17701:0 > 0 && o20006[LinkedList$Entry.next]o20011:0 > o17701[LinkedList$Entry.next]o17704:0 && o17704[LinkedList$Entry.next]o17699:0 > -1 && o18891[LinkedList$Entry.next]o17699:0 < o17704[LinkedList$Entry.next]o17699:0 && o18891[LinkedList$Entry.next]o17701:0 < o17704[LinkedList$Entry.next]o17701:0 && i3276:0 > 0 && i4821:0 > 1 && o18891[LinkedList$Entry.next]o17699:0 > 0

----------------------------------------

(37)
Obligation:
Rules:
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18891sub-2075158162:0))), o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17704[LinkedList$Entry.next]o17701:0, o17704[LinkedList$Entry.next]o17699:0, o17700142686657:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20011sub0:0), o20006[LinkedList$Entry.next]o20011:0, o17701[LinkedList$Entry.next]o17699:0, o18891[LinkedList$Entry.next]o17701:0, o18891[LinkedList$Entry.next]o17699:0, o17700142686657:0) :|: o17701[LinkedList$Entry.next]o17704:0 > 0 && o17704[LinkedList$Entry.next]o17701:0 > 0 && o20006[LinkedList$Entry.next]o20011:0 > o17701[LinkedList$Entry.next]o17704:0 && o17704[LinkedList$Entry.next]o17699:0 > -1 && o18891[LinkedList$Entry.next]o17699:0 < o17704[LinkedList$Entry.next]o17699:0 && o18891[LinkedList$Entry.next]o17701:0 < o17704[LinkedList$Entry.next]o17701:0 && i3276:0 > 0 && i4821:0 > 1 && o18891[LinkedList$Entry.next]o17699:0 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x6, x7, x) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(x8), 1, x9, x10, x11, x) :|: x11 < x7 && x7 > -1 && x10 < x6 && x6 > -1 && x12 > 0 && x13 > 1 && x11 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x16))), x17, x18, x17, x18, x14) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x19), 1, x20, x21, x22, x14) :|: x22 < x18 && x18 > -1 && x21 < x17 && x17 > -1 && x23 > 0 && x24 > 1 && x22 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x26)))))))))), java.lang.Object(x27), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x28))), x29, x30, x29, x30, x25) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x26)))))))))), java.lang.Object(x27), java.lang.Object(x31), 1, x32, x33, x34, x25) :|: x34 < x30 && x30 > -1 && x33 < x29 && x29 > -1 && x35 > 0 && x36 > 1 && x34 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x37, java.lang.Object(x38)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x39))), x40, x41, x42, x43, x37) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x37, java.lang.Object(x38)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), x45, x41, x46, x47, x37) :|: x40 > 0 && x42 > 0 && x43 > -1 && x47 < x43 && x46 < x42 && x45 > x40 && x48 > 0 && x49 > 1 && x47 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), java.lang.Object(x54))), x55, x56, x57, x58, x50) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(x59), x60, x56, x61, x62, x50) :|: x55 > 0 && x57 > 0 && x60 > x55 && x58 > -1 && x62 < x58 && x61 < x57 && x63 > 0 && x64 > 1 && x62 > 0

----------------------------------------

(38) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(39)
Obligation:
Rules:
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18891sub-2075158162:0))), o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17704[LinkedList$Entry.next]o17701:0, o17704[LinkedList$Entry.next]o17699:0, o17700142686657:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20011sub0:0), o20006[LinkedList$Entry.next]o20011:0, o17701[LinkedList$Entry.next]o17699:0, o18891[LinkedList$Entry.next]o17701:0, o18891[LinkedList$Entry.next]o17699:0, o17700142686657:0) :|: o17701[LinkedList$Entry.next]o17704:0 > 0 && o17704[LinkedList$Entry.next]o17701:0 > 0 && o20006[LinkedList$Entry.next]o20011:0 > o17701[LinkedList$Entry.next]o17704:0 && o17704[LinkedList$Entry.next]o17699:0 > -1 && o18891[LinkedList$Entry.next]o17699:0 < o17704[LinkedList$Entry.next]o17699:0 && o18891[LinkedList$Entry.next]o17701:0 < o17704[LinkedList$Entry.next]o17701:0 && i3276:0 > 0 && i4821:0 > 1 && o18891[LinkedList$Entry.next]o17699:0 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x6, x7, x) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(x8), 1, x9, x10, x11, x) :|: x11 < x7 && x7 > -1 && x10 < x6 && x6 > -1 && x12 > 0 && x13 > 1 && x11 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x16))), x17, x18, x17, x18, x14) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x19), 1, x20, x21, x22, x14) :|: x22 < x18 && x18 > -1 && x21 < x17 && x17 > -1 && x23 > 0 && x24 > 1 && x22 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x26)))))))))), java.lang.Object(x27), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x28))), x29, x30, x29, x30, x25) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x26)))))))))), java.lang.Object(x27), java.lang.Object(x31), 1, x32, x33, x34, x25) :|: x34 < x30 && x30 > -1 && x33 < x29 && x29 > -1 && x35 > 0 && x36 > 1 && x34 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x37, java.lang.Object(x38)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x39))), x40, x41, x42, x43, x37) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x37, java.lang.Object(x38)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), x45, x41, x46, x47, x37) :|: x40 > 0 && x42 > 0 && x43 > -1 && x47 < x43 && x46 < x42 && x45 > x40 && x48 > 0 && x49 > 1 && x47 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), java.lang.Object(x54))), x55, x56, x57, x58, x50) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(x59), x60, x56, x61, x62, x50) :|: x55 > 0 && x57 > 0 && x60 > x55 && x58 > -1 && x62 < x58 && x61 < x57 && x63 > 0 && x64 > 1 && x62 > 0

----------------------------------------

(40) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18891sub-2075158162:0))), o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17704[LinkedList$Entry.next]o17701:0, o17704[LinkedList$Entry.next]o17699:0, o17700142686657:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20011sub0:0), o20006[LinkedList$Entry.next]o20011:0, o17701[LinkedList$Entry.next]o17699:0, o18891[LinkedList$Entry.next]o17701:0, o18891[LinkedList$Entry.next]o17699:0, o17700142686657:0) :|: o17701[LinkedList$Entry.next]o17704:0 > 0 && o17704[LinkedList$Entry.next]o17701:0 > 0 && o20006[LinkedList$Entry.next]o20011:0 > o17701[LinkedList$Entry.next]o17704:0 && o17704[LinkedList$Entry.next]o17699:0 > -1 && o18891[LinkedList$Entry.next]o17699:0 < o17704[LinkedList$Entry.next]o17699:0 && o18891[LinkedList$Entry.next]o17701:0 < o17704[LinkedList$Entry.next]o17701:0 && i3276:0 > 0 && i4821:0 > 1 && o18891[LinkedList$Entry.next]o17699:0 > 0
(2) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x6, x7, x) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(x8), 1, x9, x10, x11, x) :|: x11 < x7 && x7 > -1 && x10 < x6 && x6 > -1 && x12 > 0 && x13 > 1 && x11 > 0
(3) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x16))), x17, x18, x17, x18, x14) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x19), 1, x20, x21, x22, x14) :|: x22 < x18 && x18 > -1 && x21 < x17 && x17 > -1 && x23 > 0 && x24 > 1 && x22 > 0
(4) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x26)))))))))), java.lang.Object(x27), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x28))), x29, x30, x29, x30, x25) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x26)))))))))), java.lang.Object(x27), java.lang.Object(x31), 1, x32, x33, x34, x25) :|: x34 < x30 && x30 > -1 && x33 < x29 && x29 > -1 && x35 > 0 && x36 > 1 && x34 > 0
(5) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x37, java.lang.Object(x38)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x39))), x40, x41, x42, x43, x37) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x37, java.lang.Object(x38)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), x45, x41, x46, x47, x37) :|: x40 > 0 && x42 > 0 && x43 > -1 && x47 < x43 && x46 < x42 && x45 > x40 && x48 > 0 && x49 > 1 && x47 > 0
(6) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), java.lang.Object(x54))), x55, x56, x57, x58, x50) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(x59), x60, x56, x61, x62, x50) :|: x55 > 0 && x57 > 0 && x60 > x55 && x58 > -1 && x62 < x58 && x61 < x57 && x63 > 0 && x64 > 1 && x62 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (5), (6)
(3) -> (1), (2), (3), (5), (6)
(4) -> (1), (4), (5), (6)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (2), (3), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(41)
Obligation:

Termination digraph:
Nodes:
(1) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18891sub-2075158162:0))), o17701[LinkedList$Entry.next]o17704:0, o17701[LinkedList$Entry.next]o17699:0, o17704[LinkedList$Entry.next]o17701:0, o17704[LinkedList$Entry.next]o17699:0, o17700142686657:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0, java.lang.Object(o17701sub142686657:0)))))))), java.lang.Object(o17703sub0:0), java.lang.Object(o20011sub0:0), o20006[LinkedList$Entry.next]o20011:0, o17701[LinkedList$Entry.next]o17699:0, o18891[LinkedList$Entry.next]o17701:0, o18891[LinkedList$Entry.next]o17699:0, o17700142686657:0) :|: o17701[LinkedList$Entry.next]o17704:0 > 0 && o17704[LinkedList$Entry.next]o17701:0 > 0 && o20006[LinkedList$Entry.next]o20011:0 > o17701[LinkedList$Entry.next]o17704:0 && o17704[LinkedList$Entry.next]o17699:0 > -1 && o18891[LinkedList$Entry.next]o17699:0 < o17704[LinkedList$Entry.next]o17699:0 && o18891[LinkedList$Entry.next]o17701:0 < o17704[LinkedList$Entry.next]o17701:0 && i3276:0 > 0 && i4821:0 > 1 && o18891[LinkedList$Entry.next]o17699:0 > 0
(2) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4), java.lang.Object(x5))), x6, x7, x6, x7, x) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x3), java.lang.Object(x8), 1, x9, x10, x11, x) :|: x11 < x7 && x7 > -1 && x10 < x6 && x6 > -1 && x12 > 0 && x13 > 1 && x11 > 0
(3) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x16))), x17, x18, x17, x18, x14) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x19), 1, x20, x21, x22, x14) :|: x22 < x18 && x18 > -1 && x21 < x17 && x17 > -1 && x23 > 0 && x24 > 1 && x22 > 0
(4) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x37, java.lang.Object(x38)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x39))), x40, x41, x42, x43, x37) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x37, java.lang.Object(x38)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44), x45, x41, x46, x47, x37) :|: x40 > 0 && x42 > 0 && x43 > -1 && x47 < x43 && x46 < x42 && x45 > x40 && x48 > 0 && x49 > 1 && x47 > 0
(5) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x26)))))))))), java.lang.Object(x27), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x28))), x29, x30, x29, x30, x25) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x26)))))))))), java.lang.Object(x27), java.lang.Object(x31), 1, x32, x33, x34, x25) :|: x34 < x30 && x30 > -1 && x33 < x29 && x29 > -1 && x35 > 0 && x36 > 1 && x34 > 0
(6) f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53), java.lang.Object(x54))), x55, x56, x57, x58, x50) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50, java.lang.Object(x51)))))))), java.lang.Object(x52), java.lang.Object(x59), x60, x56, x61, x62, x50) :|: x55 > 0 && x57 > 0 && x60 > x55 && x58 > -1 && x62 < x58 && x61 < x57 && x63 > 0 && x64 > 1 && x62 > 0

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (6)
(3) -> (1), (2), (3), (4), (6)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (4), (5), (6)
(6) -> (1), (2), (3), (4), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(42) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(43)
Obligation:
Rules:
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1:0), java.lang.Object(x2:0)))))))))), java.lang.Object(x3:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x4:0), java.lang.Object(x5:0))), x6:0, x7:0, x6:0, x7:0, x:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1:0), java.lang.Object(x2:0)))))))))), java.lang.Object(x3:0), java.lang.Object(x8:0), 1, x9:0, x10:0, x11:0, x:0) :|: x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x37:0, java.lang.Object(x38:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x39:0))), x40:0, x41:0, x42:0, x43:0, x37:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x37:0, java.lang.Object(x38:0)))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x44:0), x45:0, x41:0, x46:0, x47:0, x37:0) :|: x49:0 > 1 && x47:0 > 0 && x48:0 > 0 && x45:0 > x40:0 && x46:0 < x42:0 && x47:0 < x43:0 && x43:0 > -1 && x42:0 > 0 && x40:0 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0:0, java.lang.Object(o17701sub142686657:0:0)))))))), java.lang.Object(o17703sub0:0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o18891sub-2075158162:0:0))), o17701[LinkedList$Entry.next]o17704:0:0, o17701[LinkedList$Entry.next]o17699:0:0, o17704[LinkedList$Entry.next]o17701:0:0, o17704[LinkedList$Entry.next]o17699:0:0, o17700142686657:0:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o17700142686657:0:0, java.lang.Object(o17701sub142686657:0:0)))))))), java.lang.Object(o17703sub0:0:0), java.lang.Object(o20011sub0:0:0), o20006[LinkedList$Entry.next]o20011:0:0, o17701[LinkedList$Entry.next]o17699:0:0, o18891[LinkedList$Entry.next]o17701:0:0, o18891[LinkedList$Entry.next]o17699:0:0, o17700142686657:0:0) :|: i4821:0:0 > 1 && o18891[LinkedList$Entry.next]o17699:0:0 > 0 && i3276:0:0 > 0 && o18891[LinkedList$Entry.next]o17701:0:0 < o17704[LinkedList$Entry.next]o17701:0:0 && o18891[LinkedList$Entry.next]o17699:0:0 < o17704[LinkedList$Entry.next]o17699:0:0 && o17704[LinkedList$Entry.next]o17699:0:0 > -1 && o20006[LinkedList$Entry.next]o20011:0:0 > o17701[LinkedList$Entry.next]o17704:0:0 && o17704[LinkedList$Entry.next]o17701:0:0 > 0 && o17701[LinkedList$Entry.next]o17704:0:0 > 0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x16:0))), x17:0, x18:0, x17:0, x18:0, x14:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x14:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x15:0)))))))))), java.lang.Object(javaUtilEx.Content), java.lang.Object(x19:0), 1, x20:0, x21:0, x22:0, x14:0) :|: x24:0 > 1 && x22:0 > 0 && x23:0 > 0 && x17:0 > -1 && x21:0 < x17:0 && x18:0 > -1 && x22:0 < x18:0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x26:0)))))))))), java.lang.Object(x27:0), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x28:0))), x29:0, x30:0, x29:0, x30:0, x25:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x25:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x26:0)))))))))), java.lang.Object(x27:0), java.lang.Object(x31:0), 1, x32:0, x33:0, x34:0, x25:0) :|: x36:0 > 1 && x34:0 > 0 && x35:0 > 0 && x29:0 > -1 && x33:0 < x29:0 && x30:0 > -1 && x34:0 < x30:0
f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50:0, java.lang.Object(x51:0)))))))), java.lang.Object(x52:0), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x53:0), java.lang.Object(x54:0))), x55:0, x56:0, x57:0, x58:0, x50:0) -> f13395_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x50:0, java.lang.Object(x51:0)))))))), java.lang.Object(x52:0), java.lang.Object(x59:0), x60:0, x56:0, x61:0, x62:0, x50:0) :|: x64:0 > 1 && x62:0 > 0 && x63:0 > 0 && x61:0 < x57:0 && x62:0 < x58:0 && x58:0 > -1 && x60:0 > x55:0 && x57:0 > 0 && x55:0 > 0

----------------------------------------

(44) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13395_0_remove_EQ(VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
javaUtilEx.Content()
NULL()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(45)
Obligation:
Rules:
f13395_0_remove_EQ(c, c1, c2, x6:0, x7:0, x6:0, x7:0, x:0) -> f13395_0_remove_EQ(c3, c4, c5, c6, x9:0, x10:0, x11:0, x:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0)
f13395_0_remove_EQ(c7, c8, c9, x40:0, x41:0, x42:0, x43:0, x37:0) -> f13395_0_remove_EQ(c10, c11, c12, x45:0, x41:0, x46:0, x47:0, x37:0) :|: c12 = 0 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && c7 = 0)))) && (x49:0 > 1 && x47:0 > 0 && x48:0 > 0 && x45:0 > x40:0 && x46:0 < x42:0 && x47:0 < x43:0 && x43:0 > -1 && x42:0 > 0 && x40:0 > 0)
f13395_0_remove_EQ(c13, c14, c15, o17701[LinkedList$Entry.next]o17704:0:0, o17701[LinkedList$Entry.next]o17699:0:0, o17704[LinkedList$Entry.next]o17701:0:0, o17704[LinkedList$Entry.next]o17699:0:0, o17700142686657:0:0) -> f13395_0_remove_EQ(c16, c17, c18, o20006[LinkedList$Entry.next]o20011:0:0, o17701[LinkedList$Entry.next]o17699:0:0, o18891[LinkedList$Entry.next]o17701:0:0, o18891[LinkedList$Entry.next]o17699:0:0, o17700142686657:0:0) :|: c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && (c14 = 0 && c13 = 0)))) && (i4821:0:0 > 1 && o18891[LinkedList$Entry.next]o17699:0:0 > 0 && i3276:0:0 > 0 && o18891[LinkedList$Entry.next]o17701:0:0 < o17704[LinkedList$Entry.next]o17701:0:0 && o18891[LinkedList$Entry.next]o17699:0:0 < o17704[LinkedList$Entry.next]o17699:0:0 && o17704[LinkedList$Entry.next]o17699:0:0 > -1 && o20006[LinkedList$Entry.next]o20011:0:0 > o17701[LinkedList$Entry.next]o17704:0:0 && o17704[LinkedList$Entry.next]o17701:0:0 > 0 && o17701[LinkedList$Entry.next]o17704:0:0 > 0)
f13395_0_remove_EQ(c19, c20, c21, x17:0, x18:0, x17:0, x18:0, x14:0) -> f13395_0_remove_EQ(c22, c23, c24, c25, x20:0, x21:0, x22:0, x14:0) :|: c25 = 1 && (c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0))))) && (x24:0 > 1 && x22:0 > 0 && x23:0 > 0 && x17:0 > -1 && x21:0 < x17:0 && x18:0 > -1 && x22:0 < x18:0)

----------------------------------------

(46) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13395_0_remove_EQ(x, x1, x2, x3, x4, x5, x6, x7)] = -1 + c*x + c1*x1 + c2*x2 + 2*x5

The following rules are decreasing:
f13395_0_remove_EQ(c, c1, c2, x6:0, x7:0, x6:0, x7:0, x:0) -> f13395_0_remove_EQ(c3, c4, c5, c6, x9:0, x10:0, x11:0, x:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0)
f13395_0_remove_EQ(c7, c8, c9, x40:0, x41:0, x42:0, x43:0, x37:0) -> f13395_0_remove_EQ(c10, c11, c12, x45:0, x41:0, x46:0, x47:0, x37:0) :|: c12 = 0 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && c7 = 0)))) && (x49:0 > 1 && x47:0 > 0 && x48:0 > 0 && x45:0 > x40:0 && x46:0 < x42:0 && x47:0 < x43:0 && x43:0 > -1 && x42:0 > 0 && x40:0 > 0)
f13395_0_remove_EQ(c13, c14, c15, o17701[LinkedList$Entry.next]o17704:0:0, o17701[LinkedList$Entry.next]o17699:0:0, o17704[LinkedList$Entry.next]o17701:0:0, o17704[LinkedList$Entry.next]o17699:0:0, o17700142686657:0:0) -> f13395_0_remove_EQ(c16, c17, c18, o20006[LinkedList$Entry.next]o20011:0:0, o17701[LinkedList$Entry.next]o17699:0:0, o18891[LinkedList$Entry.next]o17701:0:0, o18891[LinkedList$Entry.next]o17699:0:0, o17700142686657:0:0) :|: c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && (c14 = 0 && c13 = 0)))) && (i4821:0:0 > 1 && o18891[LinkedList$Entry.next]o17699:0:0 > 0 && i3276:0:0 > 0 && o18891[LinkedList$Entry.next]o17701:0:0 < o17704[LinkedList$Entry.next]o17701:0:0 && o18891[LinkedList$Entry.next]o17699:0:0 < o17704[LinkedList$Entry.next]o17699:0:0 && o17704[LinkedList$Entry.next]o17699:0:0 > -1 && o20006[LinkedList$Entry.next]o20011:0:0 > o17701[LinkedList$Entry.next]o17704:0:0 && o17704[LinkedList$Entry.next]o17701:0:0 > 0 && o17701[LinkedList$Entry.next]o17704:0:0 > 0)
f13395_0_remove_EQ(c19, c20, c21, x17:0, x18:0, x17:0, x18:0, x14:0) -> f13395_0_remove_EQ(c22, c23, c24, c25, x20:0, x21:0, x22:0, x14:0) :|: c25 = 1 && (c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0))))) && (x24:0 > 1 && x22:0 > 0 && x23:0 > 0 && x17:0 > -1 && x21:0 < x17:0 && x18:0 > -1 && x22:0 < x18:0)
The following rules are bounded:
f13395_0_remove_EQ(c7, c8, c9, x40:0, x41:0, x42:0, x43:0, x37:0) -> f13395_0_remove_EQ(c10, c11, c12, x45:0, x41:0, x46:0, x47:0, x37:0) :|: c12 = 0 && (c11 = 0 && (c10 = 0 && (c9 = 0 && (c8 = 0 && c7 = 0)))) && (x49:0 > 1 && x47:0 > 0 && x48:0 > 0 && x45:0 > x40:0 && x46:0 < x42:0 && x47:0 < x43:0 && x43:0 > -1 && x42:0 > 0 && x40:0 > 0)
f13395_0_remove_EQ(c13, c14, c15, o17701[LinkedList$Entry.next]o17704:0:0, o17701[LinkedList$Entry.next]o17699:0:0, o17704[LinkedList$Entry.next]o17701:0:0, o17704[LinkedList$Entry.next]o17699:0:0, o17700142686657:0:0) -> f13395_0_remove_EQ(c16, c17, c18, o20006[LinkedList$Entry.next]o20011:0:0, o17701[LinkedList$Entry.next]o17699:0:0, o18891[LinkedList$Entry.next]o17701:0:0, o18891[LinkedList$Entry.next]o17699:0:0, o17700142686657:0:0) :|: c18 = 0 && (c17 = 0 && (c16 = 0 && (c15 = 0 && (c14 = 0 && c13 = 0)))) && (i4821:0:0 > 1 && o18891[LinkedList$Entry.next]o17699:0:0 > 0 && i3276:0:0 > 0 && o18891[LinkedList$Entry.next]o17701:0:0 < o17704[LinkedList$Entry.next]o17701:0:0 && o18891[LinkedList$Entry.next]o17699:0:0 < o17704[LinkedList$Entry.next]o17699:0:0 && o17704[LinkedList$Entry.next]o17699:0:0 > -1 && o20006[LinkedList$Entry.next]o20011:0:0 > o17701[LinkedList$Entry.next]o17704:0:0 && o17704[LinkedList$Entry.next]o17701:0:0 > 0 && o17701[LinkedList$Entry.next]o17704:0:0 > 0)

----------------------------------------

(47)
Obligation:
Rules:
f13395_0_remove_EQ(c, c1, c2, x6:0, x7:0, x6:0, x7:0, x:0) -> f13395_0_remove_EQ(c3, c4, c5, c6, x9:0, x10:0, x11:0, x:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0)
f13395_0_remove_EQ(c19, c20, c21, x17:0, x18:0, x17:0, x18:0, x14:0) -> f13395_0_remove_EQ(c22, c23, c24, c25, x20:0, x21:0, x22:0, x14:0) :|: c25 = 1 && (c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0))))) && (x24:0 > 1 && x22:0 > 0 && x23:0 > 0 && x17:0 > -1 && x21:0 < x17:0 && x18:0 > -1 && x22:0 < x18:0)

----------------------------------------

(48) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f13395_0_remove_EQ ] = f13395_0_remove_EQ_7

The following rules are decreasing:
f13395_0_remove_EQ(c, c1, c2, x6:0, x7:0, x6:0, x7:0, x:0) -> f13395_0_remove_EQ(c3, c4, c5, c6, x9:0, x10:0, x11:0, x:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0)
f13395_0_remove_EQ(c19, c20, c21, x17:0, x18:0, x17:0, x18:0, x14:0) -> f13395_0_remove_EQ(c22, c23, c24, c25, x20:0, x21:0, x22:0, x14:0) :|: c25 = 1 && (c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0))))) && (x24:0 > 1 && x22:0 > 0 && x23:0 > 0 && x17:0 > -1 && x21:0 < x17:0 && x18:0 > -1 && x22:0 < x18:0)

The following rules are bounded:
f13395_0_remove_EQ(c, c1, c2, x6:0, x7:0, x6:0, x7:0, x:0) -> f13395_0_remove_EQ(c3, c4, c5, c6, x9:0, x10:0, x11:0, x:0) :|: c6 = 1 && (c5 = 0 && (c4 = 0 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))))) && (x13:0 > 1 && x11:0 > 0 && x12:0 > 0 && x6:0 > -1 && x6:0 > x10:0 && x7:0 > -1 && x7:0 > x11:0)
f13395_0_remove_EQ(c19, c20, c21, x17:0, x18:0, x17:0, x18:0, x14:0) -> f13395_0_remove_EQ(c22, c23, c24, c25, x20:0, x21:0, x22:0, x14:0) :|: c25 = 1 && (c24 = 0 && (c23 = 0 && (c22 = 0 && (c21 = 0 && (c20 = 0 && c19 = 0))))) && (x24:0 > 1 && x22:0 > 0 && x23:0 > 0 && x17:0 > -1 && x21:0 < x17:0 && x18:0 > -1 && x22:0 < x18:0)


----------------------------------------

(49)
YES

----------------------------------------

(50)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveElement.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, next]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(51) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 26 IRulesP rules:
f13108_0_remove_EQ(EOS(STATIC_13108), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), java.lang.Object(o15863sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861-2077930926, java.lang.Object(o15862sub-2077930926))), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862, o15863[LinkedList$Entry.next]o15860) -> f13130_0_remove_Load(EOS(STATIC_13130), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862, o15863[LinkedList$Entry.next]o15860) :|: TRUE
f13130_0_remove_Load(EOS(STATIC_13130), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862, o15863[LinkedList$Entry.next]o15860) -> f13151_0_remove_FieldAccess(EOS(STATIC_13151), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), java.lang.Object(o15863sub0), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862, o15863[LinkedList$Entry.next]o15860) :|: TRUE
f13151_0_remove_FieldAccess(EOS(STATIC_13151), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), java.lang.Object(o15863sub0), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862, o15863[LinkedList$Entry.next]o15860) -> f13169_0_remove_FieldAccess(EOS(STATIC_13169), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), java.lang.Object(o15863sub0), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862) :|: o15862[LinkedList$Entry.next]o15863 > 0 && o15863[LinkedList$Entry.next]o15862 > 0
f13151_0_remove_FieldAccess(EOS(STATIC_13151), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o16418sub139104762)))))))), java.lang.Object(o16418sub0), java.lang.Object(o16418sub0), o16418[LinkedList$Entry.next]o16418, o16418[LinkedList$Entry.next]o15860, o16418[LinkedList$Entry.next]o16418, o16418[LinkedList$Entry.next]o15860) -> f13170_0_remove_FieldAccess(EOS(STATIC_13170), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o16418sub139104762)))))))), java.lang.Object(o16418sub0), java.lang.Object(o16418sub0), o16418[LinkedList$Entry.next]o15860, o16418[LinkedList$Entry.next]o16418) :|: TRUE
f13169_0_remove_FieldAccess(EOS(STATIC_13169), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16556-2077097584, java.lang.Object(o16557sub-2077097584))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16556-2077097584, java.lang.Object(o16557sub-2077097584))), o15862[LinkedList$Entry.next]o16555, o15862[LinkedList$Entry.next]o15860, o16555[LinkedList$Entry.next]o15860, o16555[LinkedList$Entry.next]o15862) -> f13185_0_remove_FieldAccess(EOS(STATIC_13185), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16556-2077097584, java.lang.Object(o16557sub-2077097584))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16556-2077097584, java.lang.Object(o16557sub-2077097584))), o15862[LinkedList$Entry.next]o15860, o15862[LinkedList$Entry.next]o16555, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862) :|: o16557[LinkedList$Entry.next]o15860 < o16555[LinkedList$Entry.next]o15860 && o16555[LinkedList$Entry.next]o15860 >= 0 && o16557[LinkedList$Entry.next]o15862 < o16555[LinkedList$Entry.next]o15862 && o16555[LinkedList$Entry.next]o15862 >= 0
f13185_0_remove_FieldAccess(EOS(STATIC_13185), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16556-2077097584, java.lang.Object(o16557sub-2077097584))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16556-2077097584, java.lang.Object(o16557sub-2077097584))), o15862[LinkedList$Entry.next]o15860, o15862[LinkedList$Entry.next]o16555, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862) -> f13204_0_remove_NONNULL(EOS(STATIC_13204), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16556-2077097584, java.lang.Object(o16557sub-2077097584))), o165560, o15862[LinkedList$Entry.next]o15860, o15862[LinkedList$Entry.next]o16555, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862) :|: TRUE
f13204_0_remove_NONNULL(EOS(STATIC_13204), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17004sub-2077097584), java.lang.Object(o16557sub-2077097584))), java.lang.Object(o17004sub0), o15862[LinkedList$Entry.next]o15860, o15862[LinkedList$Entry.next]o16555, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862) -> f13227_0_remove_NONNULL(EOS(STATIC_13227), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17004sub-2077097584), java.lang.Object(o16557sub-2077097584))), java.lang.Object(o17004sub0), o15862[LinkedList$Entry.next]o15860, o15862[LinkedList$Entry.next]o16555, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862) :|: TRUE
f13227_0_remove_NONNULL(EOS(STATIC_13227), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17004sub-2077097584), java.lang.Object(o16557sub-2077097584))), java.lang.Object(o17004sub0), o15862[LinkedList$Entry.next]o15860, o15862[LinkedList$Entry.next]o16555, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862) -> f13246_0_remove_Load(EOS(STATIC_13246), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17004sub-2077097584), java.lang.Object(o16557sub-2077097584))), o15862[LinkedList$Entry.next]o15860, o15862[LinkedList$Entry.next]o16555, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862) :|: TRUE
f13246_0_remove_Load(EOS(STATIC_13246), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17004sub-2077097584), java.lang.Object(o16557sub-2077097584))), o15862[LinkedList$Entry.next]o15860, o15862[LinkedList$Entry.next]o16555, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862) -> f13265_0_remove_FieldAccess(EOS(STATIC_13265), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17004sub-2077097584), java.lang.Object(o16557sub-2077097584))), o15862[LinkedList$Entry.next]o15860, o15862[LinkedList$Entry.next]o16555, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862) :|: TRUE
f13265_0_remove_FieldAccess(EOS(STATIC_13265), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17004sub-2077097584), java.lang.Object(o16557sub-2077097584))), o15862[LinkedList$Entry.next]o15860, o15862[LinkedList$Entry.next]o16555, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862) -> f13283_0_remove_Store(EOS(STATIC_13283), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o16557sub0), o15862[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862, o15862[LinkedList$Entry.next]o16557) :|: o15862[LinkedList$Entry.next]o16557 > o15862[LinkedList$Entry.next]o16555 && o15862[LinkedList$Entry.next]o16555 >= 0
f13283_0_remove_Store(EOS(STATIC_13283), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o16557sub0), o15862[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862, o15862[LinkedList$Entry.next]o16557) -> f13302_0_remove_JMP(EOS(STATIC_13302), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o16557sub0), o15862[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862, o15862[LinkedList$Entry.next]o16557) :|: TRUE
f13302_0_remove_JMP(EOS(STATIC_13302), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o16557sub0), o15862[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862, o15862[LinkedList$Entry.next]o16557) -> f13319_0_remove_Load(EOS(STATIC_13319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o16557sub0), o15862[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862, o15862[LinkedList$Entry.next]o16557) :|: TRUE
f13319_0_remove_Load(EOS(STATIC_13319), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o16557sub0), o15862[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862, o15862[LinkedList$Entry.next]o16557) -> f13051_0_remove_Load(EOS(STATIC_13051), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o16557sub0), o15862[LinkedList$Entry.next]o16557, o15862[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15860, o16557[LinkedList$Entry.next]o15862) :|: TRUE
f13051_0_remove_Load(EOS(STATIC_13051), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862) -> f13059_0_remove_Load(EOS(STATIC_13059), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), java.lang.Object(o15863sub0), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862) :|: TRUE
f13059_0_remove_Load(EOS(STATIC_13059), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), java.lang.Object(o15863sub0), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862) -> f13075_0_remove_FieldAccess(EOS(STATIC_13075), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), java.lang.Object(o15863sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862) :|: TRUE
f13075_0_remove_FieldAccess(EOS(STATIC_13075), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), java.lang.Object(o15863sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862) -> f13092_0_remove_EQ(EOS(STATIC_13092), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), java.lang.Object(o15863sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861-2077930926, java.lang.Object(o15862sub-2077930926))), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862) :|: TRUE
f13092_0_remove_EQ(EOS(STATIC_13092), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), java.lang.Object(o15863sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861-2077930926, java.lang.Object(o15862sub-2077930926))), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862) -> f13108_0_remove_EQ(EOS(STATIC_13108), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(o15862sub139104762)))))))), java.lang.Object(o15863sub0), java.lang.Object(o15863sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861-2077930926, java.lang.Object(o15862sub-2077930926))), o15862[LinkedList$Entry.next]o15863, o15862[LinkedList$Entry.next]o15860, o15863[LinkedList$Entry.next]o15862, o15863[LinkedList$Entry.next]o15860) :|: o15863[LinkedList$Entry.next]o15860 > 0
f13170_0_remove_FieldAccess(EOS(STATIC_13170), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16560-1937992698, java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16560-2077097460, java.lang.Object(o16561sub-2077097460))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16560-2077097460, java.lang.Object(o16561sub-2077097460))), o16559[LinkedList$Entry.next]o15860, o16559[LinkedList$Entry.next]o16559) -> f13186_0_remove_FieldAccess(EOS(STATIC_13186), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16560-1937992698, java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16560-2077097460, java.lang.Object(o16561sub-2077097460))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16560-2077097460, java.lang.Object(o16561sub-2077097460))), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) :|: o16561[LinkedList$Entry.next]o15860 < o16559[LinkedList$Entry.next]o15860 && o16559[LinkedList$Entry.next]o15860 >= 0 && o16561[LinkedList$Entry.next]o16559 < o16559[LinkedList$Entry.next]o16559 && o16559[LinkedList$Entry.next]o16559 >= 0
f13186_0_remove_FieldAccess(EOS(STATIC_13186), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16560-1937992698, java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16560-2077097460, java.lang.Object(o16561sub-2077097460))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16560-2077097460, java.lang.Object(o16561sub-2077097460))), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) -> f13205_0_remove_NONNULL(EOS(STATIC_13205), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16560-1937992698, java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16560-2077097460, java.lang.Object(o16561sub-2077097460))), o165600, o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) :|: TRUE
f13205_0_remove_NONNULL(EOS(STATIC_13205), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-2077097460), java.lang.Object(o16561sub-2077097460))), java.lang.Object(o17005sub0), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) -> f13229_0_remove_NONNULL(EOS(STATIC_13229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-2077097460), java.lang.Object(o16561sub-2077097460))), java.lang.Object(o17005sub0), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) :|: TRUE
f13229_0_remove_NONNULL(EOS(STATIC_13229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-2077097460), java.lang.Object(o16561sub-2077097460))), java.lang.Object(o17005sub0), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) -> f13248_0_remove_Load(EOS(STATIC_13248), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-2077097460), java.lang.Object(o16561sub-2077097460))), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) :|: TRUE
f13248_0_remove_Load(EOS(STATIC_13248), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-2077097460), java.lang.Object(o16561sub-2077097460))), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) -> f13267_0_remove_FieldAccess(EOS(STATIC_13267), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-2077097460), java.lang.Object(o16561sub-2077097460))), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) :|: TRUE
f13267_0_remove_FieldAccess(EOS(STATIC_13267), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-2077097460), java.lang.Object(o16561sub-2077097460))), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) -> f13285_0_remove_Store(EOS(STATIC_13285), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(o16561sub0), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) :|: TRUE
f13285_0_remove_Store(EOS(STATIC_13285), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(o16561sub0), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) -> f13304_0_remove_JMP(EOS(STATIC_13304), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(o16561sub0), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) :|: TRUE
f13304_0_remove_JMP(EOS(STATIC_13304), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(o16561sub0), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) -> f13320_0_remove_Load(EOS(STATIC_13320), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(o16561sub0), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) :|: TRUE
f13320_0_remove_Load(EOS(STATIC_13320), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(o16561sub0), o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) -> f13051_0_remove_Load(EOS(STATIC_13051), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698), java.lang.Object(o16561sub-1937992698)))))))))), java.lang.Object(o16561sub0), o16559[LinkedList$Entry.next]o16561, o16559[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o15860, o16561[LinkedList$Entry.next]o16559) :|: o16559[LinkedList$Entry.next]o16561 = 1
Combined rules. Obtained 2 IRulesP rules:
f13108_0_remove_EQ(EOS(STATIC_13108), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-2077097460:0), java.lang.Object(o16561sub-2077097460:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-2077097460:0), java.lang.Object(o16561sub-2077097460:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861-2077930926:0, java.lang.Object(o15862sub-2077930926:0))), o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0) -> f13108_0_remove_EQ(EOS(STATIC_13108), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(o16561sub0:0), java.lang.Object(o16561sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861-2077930926:1, java.lang.Object(o15862sub-2077930926:1))), 1, o16559[LinkedList$Entry.next]o15860:0, o16561[LinkedList$Entry.next]o16559:0, o16561[LinkedList$Entry.next]o15860:0) :|: o15862[LinkedList$Entry.next]o15860:0 > -1 && o16561[LinkedList$Entry.next]o15860:0 < o15862[LinkedList$Entry.next]o15860:0 && o16561[LinkedList$Entry.next]o16559:0 < o15862[LinkedList$Entry.next]o15863:0 && o16561[LinkedList$Entry.next]o15860:0 > 0 && o15862[LinkedList$Entry.next]o15863:0 > -1
f13108_0_remove_EQ(EOS(STATIC_13108), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762:0, java.lang.Object(o15862sub139104762:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17004sub-2077097584:0), java.lang.Object(o16557sub-2077097584:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17004sub-2077097584:0), java.lang.Object(o16557sub-2077097584:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861-2077930926:0, java.lang.Object(o15862sub-2077930926:0))), o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15863[LinkedList$Entry.next]o15862:0, o15863[LinkedList$Entry.next]o15860:0) -> f13108_0_remove_EQ(EOS(STATIC_13108), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861139104762:0, java.lang.Object(o15862sub139104762:0)))))))), java.lang.Object(o16557sub0:0), java.lang.Object(o16557sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15861-2077930926:1, java.lang.Object(o15862sub-2077930926:1))), o15862[LinkedList$Entry.next]o16557:0, o15862[LinkedList$Entry.next]o15860:0, o16557[LinkedList$Entry.next]o15862:0, o16557[LinkedList$Entry.next]o15860:0) :|: o15863[LinkedList$Entry.next]o15862:0 > 0 && o15862[LinkedList$Entry.next]o15863:0 > 0 && o15863[LinkedList$Entry.next]o15860:0 > -1 && o16557[LinkedList$Entry.next]o15860:0 < o15863[LinkedList$Entry.next]o15860:0 && o16557[LinkedList$Entry.next]o15862:0 < o15863[LinkedList$Entry.next]o15862:0 && o16557[LinkedList$Entry.next]o15860:0 > 0 && o15862[LinkedList$Entry.next]o16557:0 > o15862[LinkedList$Entry.next]o15863:0
Filtered constant ground arguments:
   f13108_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13108_0_remove_EQ(x2, x3, x4, x5, x6, x7, x8, x9)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13108_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f13108_0_remove_EQ(x1, x3, x4, x5, x6, x7, x8)
Filtered unneeded arguments:
   f13108_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7) -> f13108_0_remove_EQ(x1, x2, x4, x5, x6, x7)
Finished conversion. Obtained 2 rules.P rules:
f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-2077097460:0), java.lang.Object(o16561sub-2077097460:0))), o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15861139104762:0) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(o16561sub0:0), 1, o16559[LinkedList$Entry.next]o15860:0, o16561[LinkedList$Entry.next]o16559:0, o16561[LinkedList$Entry.next]o15860:0, o15861139104762:0) :|: o16561[LinkedList$Entry.next]o15860:0 < o15862[LinkedList$Entry.next]o15860:0 && o15862[LinkedList$Entry.next]o15860:0 > -1 && o16561[LinkedList$Entry.next]o16559:0 < o15862[LinkedList$Entry.next]o15863:0 && o15862[LinkedList$Entry.next]o15863:0 > -1 && o16561[LinkedList$Entry.next]o15860:0 > 0
f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(o15862sub139104762:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17004sub-2077097584:0), java.lang.Object(o16557sub-2077097584:0))), o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15863[LinkedList$Entry.next]o15862:0, o15863[LinkedList$Entry.next]o15860:0, o15861139104762:0) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(o15862sub139104762:0)))))))), java.lang.Object(o16557sub0:0), o15862[LinkedList$Entry.next]o16557:0, o15862[LinkedList$Entry.next]o15860:0, o16557[LinkedList$Entry.next]o15862:0, o16557[LinkedList$Entry.next]o15860:0, o15861139104762:0) :|: o15862[LinkedList$Entry.next]o15863:0 > 0 && o15863[LinkedList$Entry.next]o15862:0 > 0 && o15863[LinkedList$Entry.next]o15860:0 > -1 && o16557[LinkedList$Entry.next]o15860:0 < o15863[LinkedList$Entry.next]o15860:0 && o16557[LinkedList$Entry.next]o15862:0 < o15863[LinkedList$Entry.next]o15862:0 && o15862[LinkedList$Entry.next]o16557:0 > o15862[LinkedList$Entry.next]o15863:0 && o16557[LinkedList$Entry.next]o15860:0 > 0

----------------------------------------

(52)
Obligation:
Rules:
f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-2077097460:0), java.lang.Object(o16561sub-2077097460:0))), o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15861139104762:0) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(o16561sub0:0), 1, o16559[LinkedList$Entry.next]o15860:0, o16561[LinkedList$Entry.next]o16559:0, o16561[LinkedList$Entry.next]o15860:0, o15861139104762:0) :|: o16561[LinkedList$Entry.next]o15860:0 < o15862[LinkedList$Entry.next]o15860:0 && o15862[LinkedList$Entry.next]o15860:0 > -1 && o16561[LinkedList$Entry.next]o16559:0 < o15862[LinkedList$Entry.next]o15863:0 && o15862[LinkedList$Entry.next]o15863:0 > -1 && o16561[LinkedList$Entry.next]o15860:0 > 0
f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

----------------------------------------

(53) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(54)
Obligation:
Rules:
f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-2077097460:0), java.lang.Object(o16561sub-2077097460:0))), o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15861139104762:0) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(o16561sub0:0), 1, o16559[LinkedList$Entry.next]o15860:0, o16561[LinkedList$Entry.next]o16559:0, o16561[LinkedList$Entry.next]o15860:0, o15861139104762:0) :|: o16561[LinkedList$Entry.next]o15860:0 < o15862[LinkedList$Entry.next]o15860:0 && o15862[LinkedList$Entry.next]o15860:0 > -1 && o16561[LinkedList$Entry.next]o16559:0 < o15862[LinkedList$Entry.next]o15863:0 && o15862[LinkedList$Entry.next]o15863:0 > -1 && o16561[LinkedList$Entry.next]o15860:0 > 0
f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

----------------------------------------

(55) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-2077097460:0), java.lang.Object(o16561sub-2077097460:0))), o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15861139104762:0) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(o16561sub0:0), 1, o16559[LinkedList$Entry.next]o15860:0, o16561[LinkedList$Entry.next]o16559:0, o16561[LinkedList$Entry.next]o15860:0, o15861139104762:0) :|: o16561[LinkedList$Entry.next]o15860:0 < o15862[LinkedList$Entry.next]o15860:0 && o15862[LinkedList$Entry.next]o15860:0 > -1 && o16561[LinkedList$Entry.next]o16559:0 < o15862[LinkedList$Entry.next]o15863:0 && o15862[LinkedList$Entry.next]o15863:0 > -1 && o16561[LinkedList$Entry.next]o15860:0 > 0
(2) f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(56)
Obligation:

Termination digraph:
Nodes:
(1) f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-2077097460:0), java.lang.Object(o16561sub-2077097460:0))), o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15862[LinkedList$Entry.next]o15863:0, o15862[LinkedList$Entry.next]o15860:0, o15861139104762:0) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0), java.lang.Object(o16561sub-1937992698:0)))))))))), java.lang.Object(o16561sub0:0), 1, o16559[LinkedList$Entry.next]o15860:0, o16561[LinkedList$Entry.next]o16559:0, o16561[LinkedList$Entry.next]o15860:0, o15861139104762:0) :|: o16561[LinkedList$Entry.next]o15860:0 < o15862[LinkedList$Entry.next]o15860:0 && o15862[LinkedList$Entry.next]o15860:0 > -1 && o16561[LinkedList$Entry.next]o16559:0 < o15862[LinkedList$Entry.next]o15863:0 && o15862[LinkedList$Entry.next]o15863:0 > -1 && o16561[LinkedList$Entry.next]o15860:0 > 0
(2) f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2), java.lang.Object(x3))), x4, x5, x6, x7, x) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x8), x9, x5, x10, x11, x) :|: x4 > 0 && x6 > 0 && x7 > -1 && x11 < x7 && x10 < x6 && x9 > x4 && x11 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(57) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(58)
Obligation:
Rules:
f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0:0), java.lang.Object(o16561sub-1937992698:0:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-2077097460:0:0), java.lang.Object(o16561sub-2077097460:0:0))), o15862[LinkedList$Entry.next]o15863:0:0, o15862[LinkedList$Entry.next]o15860:0:0, o15862[LinkedList$Entry.next]o15863:0:0, o15862[LinkedList$Entry.next]o15860:0:0, o15861139104762:0:0) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15861139104762:0:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17005sub-1937992698:0:0), java.lang.Object(o16561sub-1937992698:0:0)))))))))), java.lang.Object(o16561sub0:0:0), 1, o16559[LinkedList$Entry.next]o15860:0:0, o16561[LinkedList$Entry.next]o16559:0:0, o16561[LinkedList$Entry.next]o15860:0:0, o15861139104762:0:0) :|: o15862[LinkedList$Entry.next]o15863:0:0 > -1 && o16561[LinkedList$Entry.next]o15860:0:0 > 0 && o16561[LinkedList$Entry.next]o16559:0:0 < o15862[LinkedList$Entry.next]o15863:0:0 && o15862[LinkedList$Entry.next]o15860:0:0 > -1 && o16561[LinkedList$Entry.next]o15860:0:0 < o15862[LinkedList$Entry.next]o15860:0:0
f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x2:0), java.lang.Object(x3:0))), x4:0, x5:0, x6:0, x7:0, x:0) -> f13108_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x8:0), x9:0, x5:0, x10:0, x11:0, x:0) :|: x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0

----------------------------------------

(59) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13108_0_remove_EQ(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(60)
Obligation:
Rules:
f13108_0_remove_EQ(c, c1, o15862[LinkedList$Entry.next]o15863:0:0, o15862[LinkedList$Entry.next]o15860:0:0, o15862[LinkedList$Entry.next]o15863:0:0, o15862[LinkedList$Entry.next]o15860:0:0, o15861139104762:0:0) -> f13108_0_remove_EQ(c2, c3, c4, o16559[LinkedList$Entry.next]o15860:0:0, o16561[LinkedList$Entry.next]o16559:0:0, o16561[LinkedList$Entry.next]o15860:0:0, o15861139104762:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o15862[LinkedList$Entry.next]o15863:0:0 > -1 && o16561[LinkedList$Entry.next]o15860:0:0 > 0 && o16561[LinkedList$Entry.next]o16559:0:0 < o15862[LinkedList$Entry.next]o15863:0:0 && o15862[LinkedList$Entry.next]o15860:0:0 > -1 && o16561[LinkedList$Entry.next]o15860:0:0 < o15862[LinkedList$Entry.next]o15860:0:0)
f13108_0_remove_EQ(c5, c6, x4:0, x5:0, x6:0, x7:0, x:0) -> f13108_0_remove_EQ(c7, c8, x9:0, x5:0, x10:0, x11:0, x:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0)

----------------------------------------

(61) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f13108_0_remove_EQ ] = f13108_0_remove_EQ_5

The following rules are decreasing:
f13108_0_remove_EQ(c, c1, o15862[LinkedList$Entry.next]o15863:0:0, o15862[LinkedList$Entry.next]o15860:0:0, o15862[LinkedList$Entry.next]o15863:0:0, o15862[LinkedList$Entry.next]o15860:0:0, o15861139104762:0:0) -> f13108_0_remove_EQ(c2, c3, c4, o16559[LinkedList$Entry.next]o15860:0:0, o16561[LinkedList$Entry.next]o16559:0:0, o16561[LinkedList$Entry.next]o15860:0:0, o15861139104762:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o15862[LinkedList$Entry.next]o15863:0:0 > -1 && o16561[LinkedList$Entry.next]o15860:0:0 > 0 && o16561[LinkedList$Entry.next]o16559:0:0 < o15862[LinkedList$Entry.next]o15863:0:0 && o15862[LinkedList$Entry.next]o15860:0:0 > -1 && o16561[LinkedList$Entry.next]o15860:0:0 < o15862[LinkedList$Entry.next]o15860:0:0)
f13108_0_remove_EQ(c5, c6, x4:0, x5:0, x6:0, x7:0, x:0) -> f13108_0_remove_EQ(c7, c8, x9:0, x5:0, x10:0, x11:0, x:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0)

The following rules are bounded:
f13108_0_remove_EQ(c, c1, o15862[LinkedList$Entry.next]o15863:0:0, o15862[LinkedList$Entry.next]o15860:0:0, o15862[LinkedList$Entry.next]o15863:0:0, o15862[LinkedList$Entry.next]o15860:0:0, o15861139104762:0:0) -> f13108_0_remove_EQ(c2, c3, c4, o16559[LinkedList$Entry.next]o15860:0:0, o16561[LinkedList$Entry.next]o16559:0:0, o16561[LinkedList$Entry.next]o15860:0:0, o15861139104762:0:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (o15862[LinkedList$Entry.next]o15863:0:0 > -1 && o16561[LinkedList$Entry.next]o15860:0:0 > 0 && o16561[LinkedList$Entry.next]o16559:0:0 < o15862[LinkedList$Entry.next]o15863:0:0 && o15862[LinkedList$Entry.next]o15860:0:0 > -1 && o16561[LinkedList$Entry.next]o15860:0:0 < o15862[LinkedList$Entry.next]o15860:0:0)
f13108_0_remove_EQ(c5, c6, x4:0, x5:0, x6:0, x7:0, x:0) -> f13108_0_remove_EQ(c7, c8, x9:0, x5:0, x10:0, x11:0, x:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (x9:0 > x4:0 && x11:0 > 0 && x6:0 > x10:0 && x7:0 > x11:0 && x7:0 > -1 && x6:0 > 0 && x4:0 > 0)


----------------------------------------

(62)
YES

----------------------------------------

(63)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveElement.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [element, next]
*javaUtilEx.LinkedList: [header]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(64) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 26 IRulesP rules:
f13106_0_remove_EQ(EOS(STATIC_13106), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), java.lang.Object(o15788sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785-2077958671, java.lang.Object(o15786sub-2077958671))), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786, o15788[LinkedList$Entry.next]o15784) -> f13128_0_remove_Load(EOS(STATIC_13128), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786, o15788[LinkedList$Entry.next]o15784) :|: TRUE
f13128_0_remove_Load(EOS(STATIC_13128), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786, o15788[LinkedList$Entry.next]o15784) -> f13150_0_remove_FieldAccess(EOS(STATIC_13150), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), java.lang.Object(o15788sub0), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786, o15788[LinkedList$Entry.next]o15784) :|: TRUE
f13150_0_remove_FieldAccess(EOS(STATIC_13150), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), java.lang.Object(o15788sub0), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786, o15788[LinkedList$Entry.next]o15784) -> f13167_0_remove_FieldAccess(EOS(STATIC_13167), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), java.lang.Object(o15788sub0), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786) :|: o15786[LinkedList$Entry.next]o15788 > 0 && o15788[LinkedList$Entry.next]o15786 > 0
f13150_0_remove_FieldAccess(EOS(STATIC_13150), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o16415sub139049923)))))))), java.lang.Object(o16415sub0), java.lang.Object(o16415sub0), o16415[LinkedList$Entry.next]o16415, o15787[LinkedList$Entry.previous]o15784, o16415[LinkedList$Entry.next]o15784, o16415[LinkedList$Entry.next]o16415, o16415[LinkedList$Entry.next]o15784) -> f13168_0_remove_FieldAccess(EOS(STATIC_13168), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o16415sub139049923)))))))), java.lang.Object(o16415sub0), java.lang.Object(o16415sub0), o15787[LinkedList$Entry.previous]o15784, o16415[LinkedList$Entry.next]o15784, o16415[LinkedList$Entry.next]o16415) :|: TRUE
f13167_0_remove_FieldAccess(EOS(STATIC_13167), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16548-2077098483, java.lang.Object(o16549sub-2077098483))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16548-2077098483, java.lang.Object(o16549sub-2077098483))), o15786[LinkedList$Entry.next]o16547, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o16547[LinkedList$Entry.next]o15784, o16547[LinkedList$Entry.next]o15786) -> f13183_0_remove_FieldAccess(EOS(STATIC_13183), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16548-2077098483, java.lang.Object(o16549sub-2077098483))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16548-2077098483, java.lang.Object(o16549sub-2077098483))), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15786[LinkedList$Entry.next]o16547, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786) :|: o16549[LinkedList$Entry.next]o15784 < o16547[LinkedList$Entry.next]o15784 && o16547[LinkedList$Entry.next]o15784 >= 0 && o16549[LinkedList$Entry.next]o15786 < o16547[LinkedList$Entry.next]o15786 && o16547[LinkedList$Entry.next]o15786 >= 0
f13183_0_remove_FieldAccess(EOS(STATIC_13183), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16548-2077098483, java.lang.Object(o16549sub-2077098483))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16548-2077098483, java.lang.Object(o16549sub-2077098483))), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15786[LinkedList$Entry.next]o16547, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786) -> f13202_0_remove_NONNULL(EOS(STATIC_13202), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16548-2077098483, java.lang.Object(o16549sub-2077098483))), o165480, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15786[LinkedList$Entry.next]o16547, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786) :|: TRUE
f13202_0_remove_NONNULL(EOS(STATIC_13202), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17002sub-2077098483), java.lang.Object(o16549sub-2077098483))), java.lang.Object(o17002sub0), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15786[LinkedList$Entry.next]o16547, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786) -> f13223_0_remove_NONNULL(EOS(STATIC_13223), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17002sub-2077098483), java.lang.Object(o16549sub-2077098483))), java.lang.Object(o17002sub0), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15786[LinkedList$Entry.next]o16547, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786) :|: TRUE
f13223_0_remove_NONNULL(EOS(STATIC_13223), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17002sub-2077098483), java.lang.Object(o16549sub-2077098483))), java.lang.Object(o17002sub0), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15786[LinkedList$Entry.next]o16547, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786) -> f13242_0_remove_Load(EOS(STATIC_13242), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17002sub-2077098483), java.lang.Object(o16549sub-2077098483))), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15786[LinkedList$Entry.next]o16547, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786) :|: TRUE
f13242_0_remove_Load(EOS(STATIC_13242), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17002sub-2077098483), java.lang.Object(o16549sub-2077098483))), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15786[LinkedList$Entry.next]o16547, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786) -> f13261_0_remove_FieldAccess(EOS(STATIC_13261), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17002sub-2077098483), java.lang.Object(o16549sub-2077098483))), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15786[LinkedList$Entry.next]o16547, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786) :|: TRUE
f13261_0_remove_FieldAccess(EOS(STATIC_13261), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17002sub-2077098483), java.lang.Object(o16549sub-2077098483))), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15786[LinkedList$Entry.next]o16547, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786) -> f13279_0_remove_Store(EOS(STATIC_13279), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o16549sub0), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786, o15786[LinkedList$Entry.next]o16549) :|: o15786[LinkedList$Entry.next]o16549 > o15786[LinkedList$Entry.next]o16547 && o15786[LinkedList$Entry.next]o16547 >= 0
f13279_0_remove_Store(EOS(STATIC_13279), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o16549sub0), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786, o15786[LinkedList$Entry.next]o16549) -> f13298_0_remove_JMP(EOS(STATIC_13298), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o16549sub0), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786, o15786[LinkedList$Entry.next]o16549) :|: TRUE
f13298_0_remove_JMP(EOS(STATIC_13298), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o16549sub0), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786, o15786[LinkedList$Entry.next]o16549) -> f13317_0_remove_Load(EOS(STATIC_13317), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o16549sub0), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786, o15786[LinkedList$Entry.next]o16549) :|: TRUE
f13317_0_remove_Load(EOS(STATIC_13317), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o16549sub0), o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786, o15786[LinkedList$Entry.next]o16549) -> f13049_0_remove_Load(EOS(STATIC_13049), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o16549sub0), o15786[LinkedList$Entry.next]o16549, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15784, o16549[LinkedList$Entry.next]o15786) :|: TRUE
f13049_0_remove_Load(EOS(STATIC_13049), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786) -> f13058_0_remove_Load(EOS(STATIC_13058), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), java.lang.Object(o15788sub0), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786) :|: TRUE
f13058_0_remove_Load(EOS(STATIC_13058), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), java.lang.Object(o15788sub0), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786) -> f13074_0_remove_FieldAccess(EOS(STATIC_13074), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), java.lang.Object(o15788sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786) :|: TRUE
f13074_0_remove_FieldAccess(EOS(STATIC_13074), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), java.lang.Object(o15788sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786) -> f13091_0_remove_EQ(EOS(STATIC_13091), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), java.lang.Object(o15788sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785-2077958671, java.lang.Object(o15786sub-2077958671))), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786) :|: TRUE
f13091_0_remove_EQ(EOS(STATIC_13091), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), java.lang.Object(o15788sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785-2077958671, java.lang.Object(o15786sub-2077958671))), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786) -> f13106_0_remove_EQ(EOS(STATIC_13106), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(o15786sub139049923)))))))), java.lang.Object(o15788sub0), java.lang.Object(o15788sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785-2077958671, java.lang.Object(o15786sub-2077958671))), o15786[LinkedList$Entry.next]o15788, o15787[LinkedList$Entry.previous]o15784, o15786[LinkedList$Entry.next]o15784, o15788[LinkedList$Entry.next]o15786, o15788[LinkedList$Entry.next]o15784) :|: o15788[LinkedList$Entry.next]o15784 > 0
f13168_0_remove_FieldAccess(EOS(STATIC_13168), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16552-1938047785, java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16552-2077097708, java.lang.Object(o16553sub-2077097708))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16552-2077097708, java.lang.Object(o16553sub-2077097708))), o15787[LinkedList$Entry.previous]o15784, o16551[LinkedList$Entry.next]o15784, o16551[LinkedList$Entry.next]o16551) -> f13184_0_remove_FieldAccess(EOS(STATIC_13184), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16552-1938047785, java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16552-2077097708, java.lang.Object(o16553sub-2077097708))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16552-2077097708, java.lang.Object(o16553sub-2077097708))), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) :|: o16553[LinkedList$Entry.next]o15784 < o16551[LinkedList$Entry.next]o15784 && o16551[LinkedList$Entry.next]o15784 >= 0 && o16553[LinkedList$Entry.next]o16551 < o16551[LinkedList$Entry.next]o16551 && o16551[LinkedList$Entry.next]o16551 >= 0
f13184_0_remove_FieldAccess(EOS(STATIC_13184), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16552-1938047785, java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16552-2077097708, java.lang.Object(o16553sub-2077097708))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16552-2077097708, java.lang.Object(o16553sub-2077097708))), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) -> f13203_0_remove_NONNULL(EOS(STATIC_13203), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16552-1938047785, java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o16552-2077097708, java.lang.Object(o16553sub-2077097708))), o165520, o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) :|: TRUE
f13203_0_remove_NONNULL(EOS(STATIC_13203), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-2077097708), java.lang.Object(o16553sub-2077097708))), java.lang.Object(o17003sub0), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) -> f13225_0_remove_NONNULL(EOS(STATIC_13225), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-2077097708), java.lang.Object(o16553sub-2077097708))), java.lang.Object(o17003sub0), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) :|: TRUE
f13225_0_remove_NONNULL(EOS(STATIC_13225), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-2077097708), java.lang.Object(o16553sub-2077097708))), java.lang.Object(o17003sub0), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) -> f13244_0_remove_Load(EOS(STATIC_13244), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-2077097708), java.lang.Object(o16553sub-2077097708))), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) :|: TRUE
f13244_0_remove_Load(EOS(STATIC_13244), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-2077097708), java.lang.Object(o16553sub-2077097708))), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) -> f13263_0_remove_FieldAccess(EOS(STATIC_13263), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-2077097708), java.lang.Object(o16553sub-2077097708))), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) :|: TRUE
f13263_0_remove_FieldAccess(EOS(STATIC_13263), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-2077097708), java.lang.Object(o16553sub-2077097708))), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) -> f13281_0_remove_Store(EOS(STATIC_13281), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(o16553sub0), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) :|: TRUE
f13281_0_remove_Store(EOS(STATIC_13281), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(o16553sub0), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) -> f13300_0_remove_JMP(EOS(STATIC_13300), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(o16553sub0), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) :|: TRUE
f13300_0_remove_JMP(EOS(STATIC_13300), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(o16553sub0), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) -> f13318_0_remove_Load(EOS(STATIC_13318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(o16553sub0), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) :|: TRUE
f13318_0_remove_Load(EOS(STATIC_13318), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(o16553sub0), o15787[LinkedList$Entry.previous]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) -> f13049_0_remove_Load(EOS(STATIC_13049), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785), java.lang.Object(o16553sub-1938047785)))))))))), java.lang.Object(o16553sub0), o16551[LinkedList$Entry.next]o16553, o15787[LinkedList$Entry.previous]o15784, o16551[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o15784, o16553[LinkedList$Entry.next]o16551) :|: o16551[LinkedList$Entry.next]o16553 = 1
Combined rules. Obtained 2 IRulesP rules:
f13106_0_remove_EQ(EOS(STATIC_13106), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17002sub-2077098483:0), java.lang.Object(o16549sub-2077098483:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17002sub-2077098483:0), java.lang.Object(o16549sub-2077098483:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785-2077958671:0, java.lang.Object(o15786sub-2077958671:0))), o15786[LinkedList$Entry.next]o15788:0, o15787[LinkedList$Entry.previous]o15784:0, o15786[LinkedList$Entry.next]o15784:0, o15788[LinkedList$Entry.next]o15786:0, o15788[LinkedList$Entry.next]o15784:0) -> f13106_0_remove_EQ(EOS(STATIC_13106), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(o16549sub0:0), java.lang.Object(o16549sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785-2077958671:1, java.lang.Object(o15786sub-2077958671:1))), o15786[LinkedList$Entry.next]o16549:0, o15787[LinkedList$Entry.previous]o15784:0, o15786[LinkedList$Entry.next]o15784:0, o16549[LinkedList$Entry.next]o15786:0, o16549[LinkedList$Entry.next]o15784:0) :|: o15788[LinkedList$Entry.next]o15786:0 > 0 && o15786[LinkedList$Entry.next]o15788:0 > 0 && o15788[LinkedList$Entry.next]o15784:0 > -1 && o16549[LinkedList$Entry.next]o15784:0 < o15788[LinkedList$Entry.next]o15784:0 && o16549[LinkedList$Entry.next]o15786:0 < o15788[LinkedList$Entry.next]o15786:0 && o16549[LinkedList$Entry.next]o15784:0 > 0 && o15786[LinkedList$Entry.next]o16549:0 > o15786[LinkedList$Entry.next]o15788:0
f13106_0_remove_EQ(EOS(STATIC_13106), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785:0), java.lang.Object(o16553sub-1938047785:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-2077097708:0), java.lang.Object(o16553sub-2077097708:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-2077097708:0), java.lang.Object(o16553sub-2077097708:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785-2077958671:0, java.lang.Object(o15786sub-2077958671:0))), o15786[LinkedList$Entry.next]o15788:0, o15787[LinkedList$Entry.previous]o15784:0, o15786[LinkedList$Entry.next]o15784:0, o15786[LinkedList$Entry.next]o15788:0, o15786[LinkedList$Entry.next]o15784:0) -> f13106_0_remove_EQ(EOS(STATIC_13106), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785139049923:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o17003sub-1938047785:0), java.lang.Object(o16553sub-1938047785:0)))))))))), java.lang.Object(o16553sub0:0), java.lang.Object(o16553sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o15785-2077958671:1, java.lang.Object(o15786sub-2077958671:1))), 1, o15787[LinkedList$Entry.previous]o15784:0, o16551[LinkedList$Entry.next]o15784:0, o16553[LinkedList$Entry.next]o16551:0, o16553[LinkedList$Entry.next]o15784:0) :|: o15786[LinkedList$Entry.next]o15784:0 > -1 && o16553[LinkedList$Entry.next]o15784:0 < o15786[LinkedList$Entry.next]o15784:0 && o16553[LinkedList$Entry.next]o16551:0 < o15786[LinkedList$Entry.next]o15788:0 && o16553[LinkedList$Entry.next]o15784:0 > 0 && o15786[LinkedList$Entry.next]o15788:0 > -1
Filtered constant ground arguments:
   f13106_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f13106_0_remove_EQ(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f13106_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f13106_0_remove_EQ(x1, x3, x4, x5, x6, x7, x8, x9)
Filtered unneeded arguments:
   f13106_0_remove_EQ(x1, x2, x3, x4, x5, x6, x7, x8) -> f13106_0_remove_EQ(x1, x2, x4, x6, x7, x8)
Finished conversion. Obtained 2 rules.P rules:
f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17002sub-2077098483:0), java.lang.Object(o16549sub-2077098483:0))), o15786[LinkedList$Entry.next]o15788:0, o15786[LinkedList$Entry.next]o15784:0, o15788[LinkedList$Entry.next]o15786:0, o15788[LinkedList$Entry.next]o15784:0, o15785139049923:0) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(o16549sub0:0), o15786[LinkedList$Entry.next]o16549:0, o15786[LinkedList$Entry.next]o15784:0, o16549[LinkedList$Entry.next]o15786:0, o16549[LinkedList$Entry.next]o15784:0, o15785139049923:0) :|: o15786[LinkedList$Entry.next]o15788:0 > 0 && o15788[LinkedList$Entry.next]o15786:0 > 0 && o15788[LinkedList$Entry.next]o15784:0 > -1 && o16549[LinkedList$Entry.next]o15784:0 < o15788[LinkedList$Entry.next]o15784:0 && o16549[LinkedList$Entry.next]o15786:0 < o15788[LinkedList$Entry.next]o15786:0 && o15786[LinkedList$Entry.next]o16549:0 > o15786[LinkedList$Entry.next]o15788:0 && o16549[LinkedList$Entry.next]o15784:0 > 0
f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17003sub-1938047785:0), java.lang.Object(o16553sub-1938047785:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17003sub-2077097708:0), java.lang.Object(o16553sub-2077097708:0))), o15786[LinkedList$Entry.next]o15788:0, o15786[LinkedList$Entry.next]o15784:0, o15786[LinkedList$Entry.next]o15788:0, o15786[LinkedList$Entry.next]o15784:0, o15785139049923:0) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17003sub-1938047785:0), java.lang.Object(o16553sub-1938047785:0)))))))))), java.lang.Object(o16553sub0:0), 1, o16551[LinkedList$Entry.next]o15784:0, o16553[LinkedList$Entry.next]o16551:0, o16553[LinkedList$Entry.next]o15784:0, o15785139049923:0) :|: o16553[LinkedList$Entry.next]o15784:0 < o15786[LinkedList$Entry.next]o15784:0 && o15786[LinkedList$Entry.next]o15784:0 > -1 && o16553[LinkedList$Entry.next]o16551:0 < o15786[LinkedList$Entry.next]o15788:0 && o15786[LinkedList$Entry.next]o15788:0 > -1 && o16553[LinkedList$Entry.next]o15784:0 > 0

----------------------------------------

(65)
Obligation:
Rules:
f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17002sub-2077098483:0), java.lang.Object(o16549sub-2077098483:0))), o15786[LinkedList$Entry.next]o15788:0, o15786[LinkedList$Entry.next]o15784:0, o15788[LinkedList$Entry.next]o15786:0, o15788[LinkedList$Entry.next]o15784:0, o15785139049923:0) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(o16549sub0:0), o15786[LinkedList$Entry.next]o16549:0, o15786[LinkedList$Entry.next]o15784:0, o16549[LinkedList$Entry.next]o15786:0, o16549[LinkedList$Entry.next]o15784:0, o15785139049923:0) :|: o15786[LinkedList$Entry.next]o15788:0 > 0 && o15788[LinkedList$Entry.next]o15786:0 > 0 && o15788[LinkedList$Entry.next]o15784:0 > -1 && o16549[LinkedList$Entry.next]o15784:0 < o15788[LinkedList$Entry.next]o15784:0 && o16549[LinkedList$Entry.next]o15786:0 < o15788[LinkedList$Entry.next]o15786:0 && o15786[LinkedList$Entry.next]o16549:0 > o15786[LinkedList$Entry.next]o15788:0 && o16549[LinkedList$Entry.next]o15784:0 > 0
f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x5, x6, x) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), 1, x8, x9, x10, x) :|: x10 < x6 && x6 > -1 && x9 < x5 && x5 > -1 && x10 > 0

----------------------------------------

(66) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(67)
Obligation:
Rules:
f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17002sub-2077098483:0), java.lang.Object(o16549sub-2077098483:0))), o15786[LinkedList$Entry.next]o15788:0, o15786[LinkedList$Entry.next]o15784:0, o15788[LinkedList$Entry.next]o15786:0, o15788[LinkedList$Entry.next]o15784:0, o15785139049923:0) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(o16549sub0:0), o15786[LinkedList$Entry.next]o16549:0, o15786[LinkedList$Entry.next]o15784:0, o16549[LinkedList$Entry.next]o15786:0, o16549[LinkedList$Entry.next]o15784:0, o15785139049923:0) :|: o15786[LinkedList$Entry.next]o15788:0 > 0 && o15788[LinkedList$Entry.next]o15786:0 > 0 && o15788[LinkedList$Entry.next]o15784:0 > -1 && o16549[LinkedList$Entry.next]o15784:0 < o15788[LinkedList$Entry.next]o15784:0 && o16549[LinkedList$Entry.next]o15786:0 < o15788[LinkedList$Entry.next]o15786:0 && o15786[LinkedList$Entry.next]o16549:0 > o15786[LinkedList$Entry.next]o15788:0 && o16549[LinkedList$Entry.next]o15784:0 > 0
f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x5, x6, x) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), 1, x8, x9, x10, x) :|: x10 < x6 && x6 > -1 && x9 < x5 && x5 > -1 && x10 > 0

----------------------------------------

(68) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17002sub-2077098483:0), java.lang.Object(o16549sub-2077098483:0))), o15786[LinkedList$Entry.next]o15788:0, o15786[LinkedList$Entry.next]o15784:0, o15788[LinkedList$Entry.next]o15786:0, o15788[LinkedList$Entry.next]o15784:0, o15785139049923:0) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(o16549sub0:0), o15786[LinkedList$Entry.next]o16549:0, o15786[LinkedList$Entry.next]o15784:0, o16549[LinkedList$Entry.next]o15786:0, o16549[LinkedList$Entry.next]o15784:0, o15785139049923:0) :|: o15786[LinkedList$Entry.next]o15788:0 > 0 && o15788[LinkedList$Entry.next]o15786:0 > 0 && o15788[LinkedList$Entry.next]o15784:0 > -1 && o16549[LinkedList$Entry.next]o15784:0 < o15788[LinkedList$Entry.next]o15784:0 && o16549[LinkedList$Entry.next]o15786:0 < o15788[LinkedList$Entry.next]o15786:0 && o15786[LinkedList$Entry.next]o16549:0 > o15786[LinkedList$Entry.next]o15788:0 && o16549[LinkedList$Entry.next]o15784:0 > 0
(2) f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x5, x6, x) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), 1, x8, x9, x10, x) :|: x10 < x6 && x6 > -1 && x9 < x5 && x5 > -1 && x10 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(69)
Obligation:

Termination digraph:
Nodes:
(1) f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17002sub-2077098483:0), java.lang.Object(o16549sub-2077098483:0))), o15786[LinkedList$Entry.next]o15788:0, o15786[LinkedList$Entry.next]o15784:0, o15788[LinkedList$Entry.next]o15786:0, o15788[LinkedList$Entry.next]o15784:0, o15785139049923:0) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0, java.lang.Object(o15786sub139049923:0)))))))), java.lang.Object(o16549sub0:0), o15786[LinkedList$Entry.next]o16549:0, o15786[LinkedList$Entry.next]o15784:0, o16549[LinkedList$Entry.next]o15786:0, o16549[LinkedList$Entry.next]o15784:0, o15785139049923:0) :|: o15786[LinkedList$Entry.next]o15788:0 > 0 && o15788[LinkedList$Entry.next]o15786:0 > 0 && o15788[LinkedList$Entry.next]o15784:0 > -1 && o16549[LinkedList$Entry.next]o15784:0 < o15788[LinkedList$Entry.next]o15784:0 && o16549[LinkedList$Entry.next]o15786:0 < o15788[LinkedList$Entry.next]o15786:0 && o15786[LinkedList$Entry.next]o16549:0 > o15786[LinkedList$Entry.next]o15788:0 && o16549[LinkedList$Entry.next]o15784:0 > 0
(2) f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3), java.lang.Object(x4))), x5, x6, x5, x6, x) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1), java.lang.Object(x2)))))))))), java.lang.Object(x7), 1, x8, x9, x10, x) :|: x10 < x6 && x6 > -1 && x9 < x5 && x5 > -1 && x10 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(70) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(71)
Obligation:
Rules:
f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1:0), java.lang.Object(x2:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x3:0), java.lang.Object(x4:0))), x5:0, x6:0, x5:0, x6:0, x:0) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x1:0), java.lang.Object(x2:0)))))))))), java.lang.Object(x7:0), 1, x8:0, x9:0, x10:0, x:0) :|: x5:0 > -1 && x10:0 > 0 && x9:0 < x5:0 && x6:0 > -1 && x6:0 > x10:0
f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0:0, java.lang.Object(o15786sub139049923:0:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o17002sub-2077098483:0:0), java.lang.Object(o16549sub-2077098483:0:0))), o15786[LinkedList$Entry.next]o15788:0:0, o15786[LinkedList$Entry.next]o15784:0:0, o15788[LinkedList$Entry.next]o15786:0:0, o15788[LinkedList$Entry.next]o15784:0:0, o15785139049923:0:0) -> f13106_0_remove_EQ(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o15785139049923:0:0, java.lang.Object(o15786sub139049923:0:0)))))))), java.lang.Object(o16549sub0:0:0), o15786[LinkedList$Entry.next]o16549:0:0, o15786[LinkedList$Entry.next]o15784:0:0, o16549[LinkedList$Entry.next]o15786:0:0, o16549[LinkedList$Entry.next]o15784:0:0, o15785139049923:0:0) :|: o15786[LinkedList$Entry.next]o16549:0:0 > o15786[LinkedList$Entry.next]o15788:0:0 && o16549[LinkedList$Entry.next]o15784:0:0 > 0 && o16549[LinkedList$Entry.next]o15786:0:0 < o15788[LinkedList$Entry.next]o15786:0:0 && o16549[LinkedList$Entry.next]o15784:0:0 < o15788[LinkedList$Entry.next]o15784:0:0 && o15788[LinkedList$Entry.next]o15784:0:0 > -1 && o15788[LinkedList$Entry.next]o15786:0:0 > 0 && o15786[LinkedList$Entry.next]o15788:0:0 > 0

----------------------------------------

(72) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f13106_0_remove_EQ(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(73)
Obligation:
Rules:
f13106_0_remove_EQ(c, c1, x5:0, x6:0, x5:0, x6:0, x:0) -> f13106_0_remove_EQ(c2, c3, c4, x8:0, x9:0, x10:0, x:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x5:0 > -1 && x10:0 > 0 && x9:0 < x5:0 && x6:0 > -1 && x6:0 > x10:0)
f13106_0_remove_EQ(c5, c6, o15786[LinkedList$Entry.next]o15788:0:0, o15786[LinkedList$Entry.next]o15784:0:0, o15788[LinkedList$Entry.next]o15786:0:0, o15788[LinkedList$Entry.next]o15784:0:0, o15785139049923:0:0) -> f13106_0_remove_EQ(c7, c8, o15786[LinkedList$Entry.next]o16549:0:0, o15786[LinkedList$Entry.next]o15784:0:0, o16549[LinkedList$Entry.next]o15786:0:0, o16549[LinkedList$Entry.next]o15784:0:0, o15785139049923:0:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (o15786[LinkedList$Entry.next]o16549:0:0 > o15786[LinkedList$Entry.next]o15788:0:0 && o16549[LinkedList$Entry.next]o15784:0:0 > 0 && o16549[LinkedList$Entry.next]o15786:0:0 < o15788[LinkedList$Entry.next]o15786:0:0 && o16549[LinkedList$Entry.next]o15784:0:0 < o15788[LinkedList$Entry.next]o15784:0:0 && o15788[LinkedList$Entry.next]o15784:0:0 > -1 && o15788[LinkedList$Entry.next]o15786:0:0 > 0 && o15786[LinkedList$Entry.next]o15788:0:0 > 0)

----------------------------------------

(74) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f13106_0_remove_EQ(x, x1, x2, x3, x4, x5, x6)] = -1 + c*x + c1*x1 + 2*x4

The following rules are decreasing:
f13106_0_remove_EQ(c, c1, x5:0, x6:0, x5:0, x6:0, x:0) -> f13106_0_remove_EQ(c2, c3, c4, x8:0, x9:0, x10:0, x:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x5:0 > -1 && x10:0 > 0 && x9:0 < x5:0 && x6:0 > -1 && x6:0 > x10:0)
f13106_0_remove_EQ(c5, c6, o15786[LinkedList$Entry.next]o15788:0:0, o15786[LinkedList$Entry.next]o15784:0:0, o15788[LinkedList$Entry.next]o15786:0:0, o15788[LinkedList$Entry.next]o15784:0:0, o15785139049923:0:0) -> f13106_0_remove_EQ(c7, c8, o15786[LinkedList$Entry.next]o16549:0:0, o15786[LinkedList$Entry.next]o15784:0:0, o16549[LinkedList$Entry.next]o15786:0:0, o16549[LinkedList$Entry.next]o15784:0:0, o15785139049923:0:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (o15786[LinkedList$Entry.next]o16549:0:0 > o15786[LinkedList$Entry.next]o15788:0:0 && o16549[LinkedList$Entry.next]o15784:0:0 > 0 && o16549[LinkedList$Entry.next]o15786:0:0 < o15788[LinkedList$Entry.next]o15786:0:0 && o16549[LinkedList$Entry.next]o15784:0:0 < o15788[LinkedList$Entry.next]o15784:0:0 && o15788[LinkedList$Entry.next]o15784:0:0 > -1 && o15788[LinkedList$Entry.next]o15786:0:0 > 0 && o15786[LinkedList$Entry.next]o15788:0:0 > 0)
The following rules are bounded:
f13106_0_remove_EQ(c5, c6, o15786[LinkedList$Entry.next]o15788:0:0, o15786[LinkedList$Entry.next]o15784:0:0, o15788[LinkedList$Entry.next]o15786:0:0, o15788[LinkedList$Entry.next]o15784:0:0, o15785139049923:0:0) -> f13106_0_remove_EQ(c7, c8, o15786[LinkedList$Entry.next]o16549:0:0, o15786[LinkedList$Entry.next]o15784:0:0, o16549[LinkedList$Entry.next]o15786:0:0, o16549[LinkedList$Entry.next]o15784:0:0, o15785139049923:0:0) :|: c8 = 0 && (c7 = 0 && (c6 = 0 && c5 = 0)) && (o15786[LinkedList$Entry.next]o16549:0:0 > o15786[LinkedList$Entry.next]o15788:0:0 && o16549[LinkedList$Entry.next]o15784:0:0 > 0 && o16549[LinkedList$Entry.next]o15786:0:0 < o15788[LinkedList$Entry.next]o15786:0:0 && o16549[LinkedList$Entry.next]o15784:0:0 < o15788[LinkedList$Entry.next]o15784:0:0 && o15788[LinkedList$Entry.next]o15784:0:0 > -1 && o15788[LinkedList$Entry.next]o15786:0:0 > 0 && o15786[LinkedList$Entry.next]o15788:0:0 > 0)

----------------------------------------

(75)
Obligation:
Rules:
f13106_0_remove_EQ(c, c1, x5:0, x6:0, x5:0, x6:0, x:0) -> f13106_0_remove_EQ(c2, c3, c4, x8:0, x9:0, x10:0, x:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x5:0 > -1 && x10:0 > 0 && x9:0 < x5:0 && x6:0 > -1 && x6:0 > x10:0)

----------------------------------------

(76) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f13106_0_remove_EQ ] = f13106_0_remove_EQ_6

The following rules are decreasing:
f13106_0_remove_EQ(c, c1, x5:0, x6:0, x5:0, x6:0, x:0) -> f13106_0_remove_EQ(c2, c3, c4, x8:0, x9:0, x10:0, x:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x5:0 > -1 && x10:0 > 0 && x9:0 < x5:0 && x6:0 > -1 && x6:0 > x10:0)

The following rules are bounded:
f13106_0_remove_EQ(c, c1, x5:0, x6:0, x5:0, x6:0, x:0) -> f13106_0_remove_EQ(c2, c3, c4, x8:0, x9:0, x10:0, x:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x5:0 > -1 && x10:0 > 0 && x9:0 < x5:0 && x6:0 > -1 && x6:0 > x10:0)


----------------------------------------

(77)
YES

----------------------------------------

(78)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveElement.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [next]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(79) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 40 IRulesP rules:
f12983_0_entry_GT(EOS(STATIC_12983), i3510, i4329, i4329, i3510, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15206[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206) -> f13001_0_entry_Load(EOS(STATIC_13001), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15206[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206) :|: i4329 <= i3510
f13001_0_entry_Load(EOS(STATIC_13001), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15206[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206) -> f13014_0_entry_FieldAccess(EOS(STATIC_13014), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15206[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206) :|: TRUE
f13014_0_entry_FieldAccess(EOS(STATIC_13014), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15206[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206) -> f13035_0_entry_FieldAccess(EOS(STATIC_13035), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15208) :|: o15208[LinkedList$Entry.next]o15208 > 0 && o15208[LinkedList$Entry.previous]o15208 > 0 && o15206[LinkedList$Entry.next]o15208 > 0 && o15208[LinkedList$Entry.next]o15206 > 0 && o15206[LinkedList$Entry.next]o15206 > 0
f13014_0_entry_FieldAccess(EOS(STATIC_13014), i3510, i4329, o15724[LinkedList$Entry.next]o15724, o15724[LinkedList$Entry.previous]o15724, o15724[LinkedList$Entry.next]o15724, o15724[LinkedList$Entry.next]o15724, o15724[LinkedList$Entry.next]o15724) -> f13036_0_entry_FieldAccess(EOS(STATIC_13036), i3510, i4329, o15724[LinkedList$Entry.next]o15724, o15724[LinkedList$Entry.previous]o15724) :|: TRUE
f13035_0_entry_FieldAccess(EOS(STATIC_13035), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15208[LinkedList$Entry.next]o15917, o15917[LinkedList$Entry.next]o15917, o15917[LinkedList$Entry.next]o15208) -> f13053_0_entry_FieldAccess(EOS(STATIC_13053), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15208[LinkedList$Entry.next]o15917, o15919[LinkedList$Entry.next]o15208, o15919[LinkedList$Entry.next]o15917) :|: o15919[LinkedList$Entry.next]o15917 < o15917[LinkedList$Entry.next]o15917 && o15917[LinkedList$Entry.next]o15917 >= 0 && o15919[LinkedList$Entry.next]o15208 < o15917[LinkedList$Entry.next]o15208 && o15917[LinkedList$Entry.next]o15208 >= 0
f13053_0_entry_FieldAccess(EOS(STATIC_13053), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15208[LinkedList$Entry.next]o15917, o15919[LinkedList$Entry.next]o15208, o15919[LinkedList$Entry.next]o15917) -> f13062_0_entry_Store(EOS(STATIC_13062), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15919[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15919, o15919[LinkedList$Entry.next]o15919) :|: o15208[LinkedList$Entry.next]o15919 > o15208[LinkedList$Entry.next]o15917 && o15208[LinkedList$Entry.next]o15917 >= 0 && o15919[LinkedList$Entry.next]o15919 > o15919[LinkedList$Entry.next]o15917 && o15919[LinkedList$Entry.next]o15917 >= 0
f13062_0_entry_Store(EOS(STATIC_13062), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15919[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15919, o15919[LinkedList$Entry.next]o15919) -> f13078_0_entry_Inc(EOS(STATIC_13078), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15919[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15919, o15919[LinkedList$Entry.next]o15919) :|: TRUE
f13078_0_entry_Inc(EOS(STATIC_13078), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15919[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15919, o15919[LinkedList$Entry.next]o15919) -> f13096_0_entry_JMP(EOS(STATIC_13096), i3510, i4329 + 1, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15919[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15919, o15919[LinkedList$Entry.next]o15919) :|: TRUE
f13096_0_entry_JMP(EOS(STATIC_13096), i3510, i4447, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15919[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15919, o15919[LinkedList$Entry.next]o15919) -> f13114_0_entry_Load(EOS(STATIC_13114), i3510, i4447, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15919[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15919, o15919[LinkedList$Entry.next]o15919) :|: TRUE
f13114_0_entry_Load(EOS(STATIC_13114), i3510, i4447, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15919[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15919, o15919[LinkedList$Entry.next]o15919) -> f12938_0_entry_Load(EOS(STATIC_12938), i3510, i4447, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15919[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15919, o15919[LinkedList$Entry.next]o15919) :|: TRUE
f12938_0_entry_Load(EOS(STATIC_12938), i3510, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15206[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206) -> f12950_0_entry_Load(EOS(STATIC_12950), i3510, i4329, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15206[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206) :|: TRUE
f12950_0_entry_Load(EOS(STATIC_12950), i3510, i4329, i4329, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15206[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206) -> f12964_0_entry_GT(EOS(STATIC_12964), i3510, i4329, i4329, i3510, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15206[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206) :|: TRUE
f12964_0_entry_GT(EOS(STATIC_12964), i3510, i4329, i4329, i3510, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15206[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206) -> f12983_0_entry_GT(EOS(STATIC_12983), i3510, i4329, i4329, i3510, o15208[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.previous]o15208, o15206[LinkedList$Entry.next]o15208, o15208[LinkedList$Entry.next]o15206, o15206[LinkedList$Entry.next]o15206) :|: i4329 <= i3510
f13036_0_entry_FieldAccess(EOS(STATIC_13036), i3510, i4329, o15921[LinkedList$Entry.next]o15921, o15921[LinkedList$Entry.previous]o15921) -> f13054_0_entry_FieldAccess(EOS(STATIC_13054), i3510, i4329, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) :|: o15923[LinkedList$Entry.next]o15921 < o15921[LinkedList$Entry.next]o15921 && o15921[LinkedList$Entry.next]o15921 >= 0 && o15924[LinkedList$Entry.previous]o15921 < o15921[LinkedList$Entry.previous]o15921 && o15921[LinkedList$Entry.previous]o15921 >= 0
f13054_0_entry_FieldAccess(EOS(STATIC_13054), i3510, i4329, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) -> f13063_0_entry_FieldAccess(EOS(STATIC_13063), i3510, i4329, o15924[LinkedList$Entry.previous]o15921, o15923[LinkedList$Entry.next]o15921) :|: o15923[LinkedList$Entry.next]o15921 > 0
f13054_0_entry_FieldAccess(EOS(STATIC_13054), i3510, i4329, o15923[LinkedList$Entry.next]o16009, o15924[LinkedList$Entry.previous]o16009) -> f13064_0_entry_FieldAccess(EOS(STATIC_13064), i3510, i4329, o15924[LinkedList$Entry.previous]o16009) :|: TRUE
f13063_0_entry_FieldAccess(EOS(STATIC_13063), i3510, i4329, o15924[LinkedList$Entry.previous]o15921, o15923[LinkedList$Entry.next]o15921) -> f13079_0_entry_FieldAccess(EOS(STATIC_13079), i3510, i4329, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) :|: o15924[LinkedList$Entry.previous]o15921 > 0
f13063_0_entry_FieldAccess(EOS(STATIC_13063), i3510, i4329, o15924[LinkedList$Entry.previous]o16087, o15923[LinkedList$Entry.next]o16087) -> f13080_0_entry_FieldAccess(EOS(STATIC_13080), i3510, i4329, o15923[LinkedList$Entry.next]o16087) :|: TRUE
f13079_0_entry_FieldAccess(EOS(STATIC_13079), i3510, i4329, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) -> f13097_0_entry_Store(EOS(STATIC_13097), i3510, i4329, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) :|: TRUE
f13097_0_entry_Store(EOS(STATIC_13097), i3510, i4329, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) -> f13115_0_entry_Inc(EOS(STATIC_13115), i3510, i4329, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) :|: TRUE
f13115_0_entry_Inc(EOS(STATIC_13115), i3510, i4329, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) -> f13136_0_entry_JMP(EOS(STATIC_13136), i3510, i4329 + 1, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) :|: TRUE
f13136_0_entry_JMP(EOS(STATIC_13136), i3510, i4478, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) -> f13156_0_entry_Load(EOS(STATIC_13156), i3510, i4478, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) :|: TRUE
f13156_0_entry_Load(EOS(STATIC_13156), i3510, i4478, o15923[LinkedList$Entry.next]o15921, o15924[LinkedList$Entry.previous]o15921) -> f12938_0_entry_Load(EOS(STATIC_12938), i3510, i4478, o15921[LinkedList$Entry.next]o15921, o15921[LinkedList$Entry.previous]o15921, o15923[LinkedList$Entry.next]o15921, o15921[LinkedList$Entry.next]o15923, o15923[LinkedList$Entry.next]o15923) :|: o15921[LinkedList$Entry.next]o15923 = 1
f13080_0_entry_FieldAccess(EOS(STATIC_13080), i3510, i4329, o15923[LinkedList$Entry.next]o16087) -> f13098_0_entry_Store(EOS(STATIC_13098), i3510, i4329, o15923[LinkedList$Entry.next]o16087) :|: TRUE
f13098_0_entry_Store(EOS(STATIC_13098), i3510, i4329, o15923[LinkedList$Entry.next]o16087) -> f13116_0_entry_Inc(EOS(STATIC_13116), i3510, i4329, o15923[LinkedList$Entry.next]o16087) :|: TRUE
f13116_0_entry_Inc(EOS(STATIC_13116), i3510, i4329, o15923[LinkedList$Entry.next]o16087) -> f13137_0_entry_JMP(EOS(STATIC_13137), i3510, i4329 + 1, o15923[LinkedList$Entry.next]o16087) :|: TRUE
f13137_0_entry_JMP(EOS(STATIC_13137), i3510, i4480, o15923[LinkedList$Entry.next]o16087) -> f13157_0_entry_Load(EOS(STATIC_13157), i3510, i4480, o15923[LinkedList$Entry.next]o16087) :|: TRUE
f13157_0_entry_Load(EOS(STATIC_13157), i3510, i4480, o15923[LinkedList$Entry.next]o16087) -> f12938_0_entry_Load(EOS(STATIC_12938), i3510, i4480, o16087[LinkedList$Entry.next]o16087, o16087[LinkedList$Entry.previous]o16087, o15923[LinkedList$Entry.next]o16087, o16087[LinkedList$Entry.next]o15923, o15923[LinkedList$Entry.next]o15923) :|: o16087[LinkedList$Entry.previous]o16087 = 1 && o16087[LinkedList$Entry.next]o15923 = 1
f13064_0_entry_FieldAccess(EOS(STATIC_13064), i3510, i4329, o15924[LinkedList$Entry.previous]o16009) -> f13081_0_entry_FieldAccess(EOS(STATIC_13081), i3510, i4329, o15924[LinkedList$Entry.previous]o16009) :|: o15924[LinkedList$Entry.previous]o16009 > 0
f13064_0_entry_FieldAccess(EOS(STATIC_13064), i3510, i4329, o15924[LinkedList$Entry.previous]o16090) -> f13082_0_entry_FieldAccess(EOS(STATIC_13082), i3510, i4329) :|: TRUE
f13081_0_entry_FieldAccess(EOS(STATIC_13081), i3510, i4329, o15924[LinkedList$Entry.previous]o16009) -> f13099_0_entry_Store(EOS(STATIC_13099), i3510, i4329, o15924[LinkedList$Entry.previous]o16009) :|: TRUE
f13099_0_entry_Store(EOS(STATIC_13099), i3510, i4329, o15924[LinkedList$Entry.previous]o16009) -> f13117_0_entry_Inc(EOS(STATIC_13117), i3510, i4329, o15924[LinkedList$Entry.previous]o16009) :|: TRUE
f13117_0_entry_Inc(EOS(STATIC_13117), i3510, i4329, o15924[LinkedList$Entry.previous]o16009) -> f13138_0_entry_JMP(EOS(STATIC_13138), i3510, i4329 + 1, o15924[LinkedList$Entry.previous]o16009) :|: TRUE
f13138_0_entry_JMP(EOS(STATIC_13138), i3510, i4483, o15924[LinkedList$Entry.previous]o16009) -> f13158_0_entry_Load(EOS(STATIC_13158), i3510, i4483, o15924[LinkedList$Entry.previous]o16009) :|: TRUE
f13158_0_entry_Load(EOS(STATIC_13158), i3510, i4483, o15924[LinkedList$Entry.previous]o16009) -> f12938_0_entry_Load(EOS(STATIC_12938), i3510, i4483, o16009[LinkedList$Entry.next]o16009, o16009[LinkedList$Entry.previous]o16009, o16009[LinkedList$Entry.next]o16009, o16009[LinkedList$Entry.next]o16009, o16009[LinkedList$Entry.next]o16009) :|: o16009[LinkedList$Entry.next]o16009 = 1 && o16009[LinkedList$Entry.next]o16009 = 1 && o16009[LinkedList$Entry.next]o16009 = 1 && o16009[LinkedList$Entry.next]o16009 = 1
f13082_0_entry_FieldAccess(EOS(STATIC_13082), i3510, i4329) -> f13100_0_entry_Store(EOS(STATIC_13100), i3510, i4329) :|: TRUE
f13100_0_entry_Store(EOS(STATIC_13100), i3510, i4329) -> f13118_0_entry_Inc(EOS(STATIC_13118), i3510, i4329) :|: TRUE
f13118_0_entry_Inc(EOS(STATIC_13118), i3510, i4329) -> f13139_0_entry_JMP(EOS(STATIC_13139), i3510, i4329 + 1) :|: TRUE
f13139_0_entry_JMP(EOS(STATIC_13139), i3510, i4484) -> f13159_0_entry_Load(EOS(STATIC_13159), i3510, i4484) :|: TRUE
f13159_0_entry_Load(EOS(STATIC_13159), i3510, i4484) -> f12938_0_entry_Load(EOS(STATIC_12938), i3510, i4484, o16090[LinkedList$Entry.next]o16090, o16090[LinkedList$Entry.previous]o16090, o16090[LinkedList$Entry.next]o16090, o16090[LinkedList$Entry.next]o16090, o16090[LinkedList$Entry.next]o16090) :|: o16090[LinkedList$Entry.next]o16090 = 1 && o16090[LinkedList$Entry.previous]o16090 = 1 && o16090[LinkedList$Entry.next]o16090 = 1 && o16090[LinkedList$Entry.next]o16090 = 1 && o16090[LinkedList$Entry.next]o16090 = 1
Combined rules. Obtained 5 IRulesP rules:
f12983_0_entry_GT(EOS(STATIC_12983), i3510:0, i4329:0, i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(EOS(STATIC_12983), i3510:0, i4329:0 + 1, i4329:0 + 1, i3510:0, 1, o16009[LinkedList$Entry.previous]o16009:0, 1, 1, 1) :|: i4329:0 + 1 <= i3510:0 && o15208[LinkedList$Entry.next]o15208:0 > -1 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 > 0 && o15208[LinkedList$Entry.previous]o15208:0 > -1
f12983_0_entry_GT(EOS(STATIC_12983), i3510:0, i4329:0, i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15206[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15206:0, o15206[LinkedList$Entry.next]o15206:0) -> f12983_0_entry_GT(EOS(STATIC_12983), i3510:0, i4329:0 + 1, i4329:0 + 1, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15919[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15919:0, o15919[LinkedList$Entry.next]o15919:0) :|: o15206[LinkedList$Entry.next]o15208:0 > 0 && o15208[LinkedList$Entry.next]o15206:0 > 0 && o15206[LinkedList$Entry.next]o15206:0 > 0 && i4329:0 + 1 <= i3510:0 && o15208[LinkedList$Entry.previous]o15208:0 > 0 && o15208[LinkedList$Entry.next]o15208:0 > 0 && o15919[LinkedList$Entry.next]o15917:0 < o15206[LinkedList$Entry.next]o15206:0 && o15208[LinkedList$Entry.next]o15919:0 > o15208[LinkedList$Entry.next]o15206:0 && o15919[LinkedList$Entry.next]o15208:0 < o15206[LinkedList$Entry.next]o15208:0 && o15919[LinkedList$Entry.next]o15917:0 > -1 && o15919[LinkedList$Entry.next]o15919:0 > o15919[LinkedList$Entry.next]o15917:0
f12983_0_entry_GT(EOS(STATIC_12983), i3510:0, i4329:0, i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(EOS(STATIC_12983), i3510:0, i4329:0 + 1, i4329:0 + 1, i3510:0, 1, 1, 1, 1, 1) :|: i4329:0 + 1 <= i3510:0 && o15208[LinkedList$Entry.next]o15208:0 > -1 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15208[LinkedList$Entry.previous]o15208:0 > -1 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0
f12983_0_entry_GT(EOS(STATIC_12983), i3510:0, i4329:0, i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(EOS(STATIC_12983), i3510:0, i4329:0 + 1, i4329:0 + 1, i3510:0, o16087[LinkedList$Entry.next]o16087:0, 1, o15923[LinkedList$Entry.next]o15921:0, 1, o15923[LinkedList$Entry.next]o15923:0) :|: i4329:0 + 1 <= i3510:0 && o15208[LinkedList$Entry.next]o15208:0 > -1 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0 && o15923[LinkedList$Entry.next]o15921:0 > 0 && o15208[LinkedList$Entry.previous]o15208:0 > -1
f12983_0_entry_GT(EOS(STATIC_12983), i3510:0, i4329:0, i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(EOS(STATIC_12983), i3510:0, i4329:0 + 1, i4329:0 + 1, i3510:0, o15921[LinkedList$Entry.next]o15921:0, o15921[LinkedList$Entry.previous]o15921:0, o15923[LinkedList$Entry.next]o15921:0, 1, o15923[LinkedList$Entry.next]o15923:0) :|: i4329:0 + 1 <= i3510:0 && o15208[LinkedList$Entry.next]o15208:0 > -1 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0 && o15208[LinkedList$Entry.previous]o15208:0 > -1 && o15924[LinkedList$Entry.previous]o15921:0 > 0 && o15923[LinkedList$Entry.next]o15921:0 > 0
Filtered constant ground arguments:
   f12983_0_entry_GT(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f12983_0_entry_GT(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f12983_0_entry_GT(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f12983_0_entry_GT(x3, x4, x5, x6, x7, x8, x9)
Finished conversion. Obtained 5 rules.P rules:
f12983_0_entry_GT(i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(i4329:0 + 1, i3510:0, 1, o16009[LinkedList$Entry.previous]o16009:0, 1, 1, 1) :|: o15208[LinkedList$Entry.next]o15208:0 > -1 && i4329:0 + 1 <= i3510:0 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0 && o15208[LinkedList$Entry.previous]o15208:0 > -1 && o15924[LinkedList$Entry.previous]o15921:0 > 0
f12983_0_entry_GT(i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15206[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15206:0, o15206[LinkedList$Entry.next]o15206:0) -> f12983_0_entry_GT(i4329:0 + 1, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15919[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15919:0, o15919[LinkedList$Entry.next]o15919:0) :|: o15208[LinkedList$Entry.next]o15206:0 > 0 && o15206[LinkedList$Entry.next]o15208:0 > 0 && o15206[LinkedList$Entry.next]o15206:0 > 0 && i4329:0 + 1 <= i3510:0 && o15208[LinkedList$Entry.previous]o15208:0 > 0 && o15208[LinkedList$Entry.next]o15208:0 > 0 && o15919[LinkedList$Entry.next]o15917:0 < o15206[LinkedList$Entry.next]o15206:0 && o15208[LinkedList$Entry.next]o15919:0 > o15208[LinkedList$Entry.next]o15206:0 && o15919[LinkedList$Entry.next]o15208:0 < o15206[LinkedList$Entry.next]o15208:0 && o15919[LinkedList$Entry.next]o15919:0 > o15919[LinkedList$Entry.next]o15917:0 && o15919[LinkedList$Entry.next]o15917:0 > -1
f12983_0_entry_GT(i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(i4329:0 + 1, i3510:0, 1, 1, 1, 1, 1) :|: o15208[LinkedList$Entry.next]o15208:0 > -1 && i4329:0 + 1 <= i3510:0 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0 && o15208[LinkedList$Entry.previous]o15208:0 > -1
f12983_0_entry_GT(i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(i4329:0 + 1, i3510:0, o16087[LinkedList$Entry.next]o16087:0, 1, o15923[LinkedList$Entry.next]o15921:0, 1, o15923[LinkedList$Entry.next]o15923:0) :|: o15208[LinkedList$Entry.next]o15208:0 > -1 && i4329:0 + 1 <= i3510:0 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0 && o15208[LinkedList$Entry.previous]o15208:0 > -1 && o15923[LinkedList$Entry.next]o15921:0 > 0
f12983_0_entry_GT(i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(i4329:0 + 1, i3510:0, o15921[LinkedList$Entry.next]o15921:0, o15921[LinkedList$Entry.previous]o15921:0, o15923[LinkedList$Entry.next]o15921:0, 1, o15923[LinkedList$Entry.next]o15923:0) :|: o15208[LinkedList$Entry.next]o15208:0 > -1 && i4329:0 + 1 <= i3510:0 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0 && o15208[LinkedList$Entry.previous]o15208:0 > -1 && o15923[LinkedList$Entry.next]o15921:0 > 0 && o15924[LinkedList$Entry.previous]o15921:0 > 0

----------------------------------------

(80)
Obligation:
Rules:
f12983_0_entry_GT(i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(i4329:0 + 1, i3510:0, 1, o16009[LinkedList$Entry.previous]o16009:0, 1, 1, 1) :|: o15208[LinkedList$Entry.next]o15208:0 > -1 && i4329:0 + 1 <= i3510:0 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0 && o15208[LinkedList$Entry.previous]o15208:0 > -1 && o15924[LinkedList$Entry.previous]o15921:0 > 0
f12983_0_entry_GT(x, x1, x2, x3, x4, x5, x6) -> f12983_0_entry_GT(x + 1, x1, x2, x3, x7, x8, x9) :|: x5 > 0 && x4 > 0 && x6 > 0 && x + 1 <= x1 && x3 > 0 && x2 > 0 && x10 < x6 && x8 > x5 && x7 < x4 && x9 > x10 && x10 > -1
f12983_0_entry_GT(x11, x12, x13, x14, x13, x13, x13) -> f12983_0_entry_GT(x11 + 1, x12, 1, 1, 1, 1, 1) :|: x13 > -1 && x11 + 1 <= x12 && x15 < x13 && x16 < x14 && x14 > -1
f12983_0_entry_GT(x17, x18, x19, x20, x19, x19, x19) -> f12983_0_entry_GT(x17 + 1, x18, x21, 1, x22, 1, x23) :|: x19 > -1 && x17 + 1 <= x18 && x22 < x19 && x24 < x20 && x20 > -1 && x22 > 0
f12983_0_entry_GT(x25, x26, x27, x28, x27, x27, x27) -> f12983_0_entry_GT(x25 + 1, x26, x29, x30, x31, 1, x32) :|: x27 > -1 && x25 + 1 <= x26 && x31 < x27 && x33 < x28 && x28 > -1 && x31 > 0 && x33 > 0

----------------------------------------

(81) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(82)
Obligation:
Rules:
f12983_0_entry_GT(i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(arith, i3510:0, 1, o16009[LinkedList$Entry.previous]o16009:0, 1, 1, 1) :|: o15208[LinkedList$Entry.next]o15208:0 > -1 && i4329:0 + 1 <= i3510:0 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0 && o15208[LinkedList$Entry.previous]o15208:0 > -1 && o15924[LinkedList$Entry.previous]o15921:0 > 0 && arith = i4329:0 + 1
f12983_0_entry_GT(x34, x35, x36, x37, x38, x39, x40) -> f12983_0_entry_GT(x41, x35, x36, x37, x42, x43, x44) :|: x39 > 0 && x38 > 0 && x40 > 0 && x34 + 1 <= x35 && x37 > 0 && x36 > 0 && x45 < x40 && x43 > x39 && x42 < x38 && x44 > x45 && x45 > -1 && x41 = x34 + 1
f12983_0_entry_GT(x46, x47, x48, x49, x48, x48, x48) -> f12983_0_entry_GT(x50, x47, 1, 1, 1, 1, 1) :|: x48 > -1 && x46 + 1 <= x47 && x51 < x48 && x52 < x49 && x49 > -1 && x50 = x46 + 1
f12983_0_entry_GT(x53, x54, x55, x56, x55, x55, x55) -> f12983_0_entry_GT(x57, x54, x58, 1, x59, 1, x60) :|: x55 > -1 && x53 + 1 <= x54 && x59 < x55 && x61 < x56 && x56 > -1 && x59 > 0 && x57 = x53 + 1
f12983_0_entry_GT(x62, x63, x64, x65, x64, x64, x64) -> f12983_0_entry_GT(x66, x63, x67, x68, x69, 1, x70) :|: x64 > -1 && x62 + 1 <= x63 && x69 < x64 && x71 < x65 && x65 > -1 && x69 > 0 && x71 > 0 && x66 = x62 + 1

----------------------------------------

(83) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12983_0_entry_GT(i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(arith, i3510:0, 1, o16009[LinkedList$Entry.previous]o16009:0, 1, 1, 1) :|: o15208[LinkedList$Entry.next]o15208:0 > -1 && i4329:0 + 1 <= i3510:0 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0 && o15208[LinkedList$Entry.previous]o15208:0 > -1 && o15924[LinkedList$Entry.previous]o15921:0 > 0 && arith = i4329:0 + 1
(2) f12983_0_entry_GT(x34, x35, x36, x37, x38, x39, x40) -> f12983_0_entry_GT(x41, x35, x36, x37, x42, x43, x44) :|: x39 > 0 && x38 > 0 && x40 > 0 && x34 + 1 <= x35 && x37 > 0 && x36 > 0 && x45 < x40 && x43 > x39 && x42 < x38 && x44 > x45 && x45 > -1 && x41 = x34 + 1
(3) f12983_0_entry_GT(x46, x47, x48, x49, x48, x48, x48) -> f12983_0_entry_GT(x50, x47, 1, 1, 1, 1, 1) :|: x48 > -1 && x46 + 1 <= x47 && x51 < x48 && x52 < x49 && x49 > -1 && x50 = x46 + 1
(4) f12983_0_entry_GT(x53, x54, x55, x56, x55, x55, x55) -> f12983_0_entry_GT(x57, x54, x58, 1, x59, 1, x60) :|: x55 > -1 && x53 + 1 <= x54 && x59 < x55 && x61 < x56 && x56 > -1 && x59 > 0 && x57 = x53 + 1
(5) f12983_0_entry_GT(x62, x63, x64, x65, x64, x64, x64) -> f12983_0_entry_GT(x66, x63, x67, x68, x69, 1, x70) :|: x64 > -1 && x62 + 1 <= x63 && x69 < x64 && x71 < x65 && x65 > -1 && x69 > 0 && x71 > 0 && x66 = x62 + 1

Arcs:
(1) -> (1), (2), (3)
(2) -> (1), (2), (3), (4), (5)
(3) -> (2), (3)
(4) -> (2), (3)
(5) -> (1), (2), (3)

This digraph is fully evaluated!
----------------------------------------

(84)
Obligation:

Termination digraph:
Nodes:
(1) f12983_0_entry_GT(i4329:0, i3510:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.previous]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0, o15208[LinkedList$Entry.next]o15208:0) -> f12983_0_entry_GT(arith, i3510:0, 1, o16009[LinkedList$Entry.previous]o16009:0, 1, 1, 1) :|: o15208[LinkedList$Entry.next]o15208:0 > -1 && i4329:0 + 1 <= i3510:0 && o15923[LinkedList$Entry.next]o15921:0 < o15208[LinkedList$Entry.next]o15208:0 && o15924[LinkedList$Entry.previous]o15921:0 < o15208[LinkedList$Entry.previous]o15208:0 && o15208[LinkedList$Entry.previous]o15208:0 > -1 && o15924[LinkedList$Entry.previous]o15921:0 > 0 && arith = i4329:0 + 1
(2) f12983_0_entry_GT(x34, x35, x36, x37, x38, x39, x40) -> f12983_0_entry_GT(x41, x35, x36, x37, x42, x43, x44) :|: x39 > 0 && x38 > 0 && x40 > 0 && x34 + 1 <= x35 && x37 > 0 && x36 > 0 && x45 < x40 && x43 > x39 && x42 < x38 && x44 > x45 && x45 > -1 && x41 = x34 + 1
(3) f12983_0_entry_GT(x46, x47, x48, x49, x48, x48, x48) -> f12983_0_entry_GT(x50, x47, 1, 1, 1, 1, 1) :|: x48 > -1 && x46 + 1 <= x47 && x51 < x48 && x52 < x49 && x49 > -1 && x50 = x46 + 1
(4) f12983_0_entry_GT(x62, x63, x64, x65, x64, x64, x64) -> f12983_0_entry_GT(x66, x63, x67, x68, x69, 1, x70) :|: x64 > -1 && x62 + 1 <= x63 && x69 < x64 && x71 < x65 && x65 > -1 && x69 > 0 && x71 > 0 && x66 = x62 + 1
(5) f12983_0_entry_GT(x53, x54, x55, x56, x55, x55, x55) -> f12983_0_entry_GT(x57, x54, x58, 1, x59, 1, x60) :|: x55 > -1 && x53 + 1 <= x54 && x59 < x55 && x61 < x56 && x56 > -1 && x59 > 0 && x57 = x53 + 1

Arcs:
(1) -> (1), (2), (3)
(2) -> (1), (2), (3), (4), (5)
(3) -> (2), (3)
(4) -> (1), (2), (3)
(5) -> (2), (3)

This digraph is fully evaluated!

----------------------------------------

(85) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(86)
Obligation:
Rules:
f12983_0_entry_GT(x46:0, x47:0, x48:0, x49:0, x48:0, x48:0, x48:0) -> f12983_0_entry_GT(x46:0 + 1, x47:0, 1, 1, 1, 1, 1) :|: x52:0 < x49:0 && x49:0 > -1 && x51:0 < x48:0 && x47:0 >= x46:0 + 1 && x48:0 > -1
f12983_0_entry_GT(x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0) -> f12983_0_entry_GT(x34:0 + 1, x35:0, x36:0, x37:0, x42:0, x43:0, x44:0) :|: x45:0 < x44:0 && x45:0 > -1 && x42:0 < x38:0 && x43:0 > x39:0 && x45:0 < x40:0 && x36:0 > 0 && x37:0 > 0 && x35:0 >= x34:0 + 1 && x40:0 > 0 && x38:0 > 0 && x39:0 > 0
f12983_0_entry_GT(i4329:0:0, i3510:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.previous]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0) -> f12983_0_entry_GT(i4329:0:0 + 1, i3510:0:0, 1, o16009[LinkedList$Entry.previous]o16009:0:0, 1, 1, 1) :|: o15208[LinkedList$Entry.previous]o15208:0:0 > -1 && o15924[LinkedList$Entry.previous]o15921:0:0 > 0 && o15924[LinkedList$Entry.previous]o15921:0:0 < o15208[LinkedList$Entry.previous]o15208:0:0 && o15923[LinkedList$Entry.next]o15921:0:0 < o15208[LinkedList$Entry.next]o15208:0:0 && i4329:0:0 + 1 <= i3510:0:0 && o15208[LinkedList$Entry.next]o15208:0:0 > -1
f12983_0_entry_GT(x62:0, x63:0, x64:0, x65:0, x64:0, x64:0, x64:0) -> f12983_0_entry_GT(x62:0 + 1, x63:0, x67:0, x68:0, x69:0, 1, x70:0) :|: x69:0 > 0 && x71:0 > 0 && x65:0 > -1 && x71:0 < x65:0 && x69:0 < x64:0 && x63:0 >= x62:0 + 1 && x64:0 > -1
f12983_0_entry_GT(x53:0, x54:0, x55:0, x56:0, x55:0, x55:0, x55:0) -> f12983_0_entry_GT(x53:0 + 1, x54:0, x58:0, 1, x59:0, 1, x60:0) :|: x56:0 > -1 && x59:0 > 0 && x61:0 < x56:0 && x59:0 < x55:0 && x54:0 >= x53:0 + 1 && x55:0 > -1

----------------------------------------

(87) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12983_0_entry_GT(INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(88)
Obligation:
Rules:
f12983_0_entry_GT(x46:0, x47:0, x48:0, x49:0, x48:0, x48:0, x48:0) -> f12983_0_entry_GT(c, x47:0, c1, c2, c3, c4, c5) :|: c5 = 1 && (c4 = 1 && (c3 = 1 && (c2 = 1 && (c1 = 1 && c = x46:0 + 1)))) && (x52:0 < x49:0 && x49:0 > -1 && x51:0 < x48:0 && x47:0 >= x46:0 + 1 && x48:0 > -1)
f12983_0_entry_GT(x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0) -> f12983_0_entry_GT(c6, x35:0, x36:0, x37:0, x42:0, x43:0, x44:0) :|: c6 = x34:0 + 1 && (x45:0 < x44:0 && x45:0 > -1 && x42:0 < x38:0 && x43:0 > x39:0 && x45:0 < x40:0 && x36:0 > 0 && x37:0 > 0 && x35:0 >= x34:0 + 1 && x40:0 > 0 && x38:0 > 0 && x39:0 > 0)
f12983_0_entry_GT(i4329:0:0, i3510:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.previous]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0) -> f12983_0_entry_GT(c7, i3510:0:0, c8, o16009[LinkedList$Entry.previous]o16009:0:0, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && c7 = i4329:0:0 + 1))) && (o15208[LinkedList$Entry.previous]o15208:0:0 > -1 && o15924[LinkedList$Entry.previous]o15921:0:0 > 0 && o15924[LinkedList$Entry.previous]o15921:0:0 < o15208[LinkedList$Entry.previous]o15208:0:0 && o15923[LinkedList$Entry.next]o15921:0:0 < o15208[LinkedList$Entry.next]o15208:0:0 && i4329:0:0 + 1 <= i3510:0:0 && o15208[LinkedList$Entry.next]o15208:0:0 > -1)
f12983_0_entry_GT(x62:0, x63:0, x64:0, x65:0, x64:0, x64:0, x64:0) -> f12983_0_entry_GT(c12, x63:0, x67:0, x68:0, x69:0, c13, x70:0) :|: c13 = 1 && c12 = x62:0 + 1 && (x69:0 > 0 && x71:0 > 0 && x65:0 > -1 && x71:0 < x65:0 && x69:0 < x64:0 && x63:0 >= x62:0 + 1 && x64:0 > -1)
f12983_0_entry_GT(x53:0, x54:0, x55:0, x56:0, x55:0, x55:0, x55:0) -> f12983_0_entry_GT(c14, x54:0, x58:0, c15, x59:0, c16, x60:0) :|: c16 = 1 && (c15 = 1 && c14 = x53:0 + 1) && (x56:0 > -1 && x59:0 > 0 && x61:0 < x56:0 && x59:0 < x55:0 && x54:0 >= x53:0 + 1 && x55:0 > -1)

----------------------------------------

(89) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f12983_0_entry_GT ] = f12983_0_entry_GT_2 + -1*f12983_0_entry_GT_1

The following rules are decreasing:
f12983_0_entry_GT(x46:0, x47:0, x48:0, x49:0, x48:0, x48:0, x48:0) -> f12983_0_entry_GT(c, x47:0, c1, c2, c3, c4, c5) :|: c5 = 1 && (c4 = 1 && (c3 = 1 && (c2 = 1 && (c1 = 1 && c = x46:0 + 1)))) && (x52:0 < x49:0 && x49:0 > -1 && x51:0 < x48:0 && x47:0 >= x46:0 + 1 && x48:0 > -1)
f12983_0_entry_GT(x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0) -> f12983_0_entry_GT(c6, x35:0, x36:0, x37:0, x42:0, x43:0, x44:0) :|: c6 = x34:0 + 1 && (x45:0 < x44:0 && x45:0 > -1 && x42:0 < x38:0 && x43:0 > x39:0 && x45:0 < x40:0 && x36:0 > 0 && x37:0 > 0 && x35:0 >= x34:0 + 1 && x40:0 > 0 && x38:0 > 0 && x39:0 > 0)
f12983_0_entry_GT(i4329:0:0, i3510:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.previous]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0) -> f12983_0_entry_GT(c7, i3510:0:0, c8, o16009[LinkedList$Entry.previous]o16009:0:0, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && c7 = i4329:0:0 + 1))) && (o15208[LinkedList$Entry.previous]o15208:0:0 > -1 && o15924[LinkedList$Entry.previous]o15921:0:0 > 0 && o15924[LinkedList$Entry.previous]o15921:0:0 < o15208[LinkedList$Entry.previous]o15208:0:0 && o15923[LinkedList$Entry.next]o15921:0:0 < o15208[LinkedList$Entry.next]o15208:0:0 && i4329:0:0 + 1 <= i3510:0:0 && o15208[LinkedList$Entry.next]o15208:0:0 > -1)
f12983_0_entry_GT(x62:0, x63:0, x64:0, x65:0, x64:0, x64:0, x64:0) -> f12983_0_entry_GT(c12, x63:0, x67:0, x68:0, x69:0, c13, x70:0) :|: c13 = 1 && c12 = x62:0 + 1 && (x69:0 > 0 && x71:0 > 0 && x65:0 > -1 && x71:0 < x65:0 && x69:0 < x64:0 && x63:0 >= x62:0 + 1 && x64:0 > -1)
f12983_0_entry_GT(x53:0, x54:0, x55:0, x56:0, x55:0, x55:0, x55:0) -> f12983_0_entry_GT(c14, x54:0, x58:0, c15, x59:0, c16, x60:0) :|: c16 = 1 && (c15 = 1 && c14 = x53:0 + 1) && (x56:0 > -1 && x59:0 > 0 && x61:0 < x56:0 && x59:0 < x55:0 && x54:0 >= x53:0 + 1 && x55:0 > -1)

The following rules are bounded:
f12983_0_entry_GT(x46:0, x47:0, x48:0, x49:0, x48:0, x48:0, x48:0) -> f12983_0_entry_GT(c, x47:0, c1, c2, c3, c4, c5) :|: c5 = 1 && (c4 = 1 && (c3 = 1 && (c2 = 1 && (c1 = 1 && c = x46:0 + 1)))) && (x52:0 < x49:0 && x49:0 > -1 && x51:0 < x48:0 && x47:0 >= x46:0 + 1 && x48:0 > -1)
f12983_0_entry_GT(x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0) -> f12983_0_entry_GT(c6, x35:0, x36:0, x37:0, x42:0, x43:0, x44:0) :|: c6 = x34:0 + 1 && (x45:0 < x44:0 && x45:0 > -1 && x42:0 < x38:0 && x43:0 > x39:0 && x45:0 < x40:0 && x36:0 > 0 && x37:0 > 0 && x35:0 >= x34:0 + 1 && x40:0 > 0 && x38:0 > 0 && x39:0 > 0)
f12983_0_entry_GT(i4329:0:0, i3510:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.previous]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0, o15208[LinkedList$Entry.next]o15208:0:0) -> f12983_0_entry_GT(c7, i3510:0:0, c8, o16009[LinkedList$Entry.previous]o16009:0:0, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && c7 = i4329:0:0 + 1))) && (o15208[LinkedList$Entry.previous]o15208:0:0 > -1 && o15924[LinkedList$Entry.previous]o15921:0:0 > 0 && o15924[LinkedList$Entry.previous]o15921:0:0 < o15208[LinkedList$Entry.previous]o15208:0:0 && o15923[LinkedList$Entry.next]o15921:0:0 < o15208[LinkedList$Entry.next]o15208:0:0 && i4329:0:0 + 1 <= i3510:0:0 && o15208[LinkedList$Entry.next]o15208:0:0 > -1)
f12983_0_entry_GT(x62:0, x63:0, x64:0, x65:0, x64:0, x64:0, x64:0) -> f12983_0_entry_GT(c12, x63:0, x67:0, x68:0, x69:0, c13, x70:0) :|: c13 = 1 && c12 = x62:0 + 1 && (x69:0 > 0 && x71:0 > 0 && x65:0 > -1 && x71:0 < x65:0 && x69:0 < x64:0 && x63:0 >= x62:0 + 1 && x64:0 > -1)
f12983_0_entry_GT(x53:0, x54:0, x55:0, x56:0, x55:0, x55:0, x55:0) -> f12983_0_entry_GT(c14, x54:0, x58:0, c15, x59:0, c16, x60:0) :|: c16 = 1 && (c15 = 1 && c14 = x53:0 + 1) && (x56:0 > -1 && x59:0 > 0 && x61:0 < x56:0 && x59:0 < x55:0 && x54:0 >= x53:0 + 1 && x55:0 > -1)


----------------------------------------

(90)
YES

----------------------------------------

(91)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveElement.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList$Entry: [previous]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(92) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 40 IRulesP rules:
f12447_0_entry_LE(EOS(STATIC_12447), i3510, i3668, i3668, i3510, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) -> f12460_0_entry_Load(EOS(STATIC_12460), i3510, i3668, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) :|: i3668 > i3510
f12460_0_entry_Load(EOS(STATIC_12460), i3510, i3668, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) -> f12479_0_entry_FieldAccess(EOS(STATIC_12479), i3510, i3668, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) :|: TRUE
f12479_0_entry_FieldAccess(EOS(STATIC_12479), i3510, i3668, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) -> f12493_0_entry_FieldAccess(EOS(STATIC_12493), i3510, i3668, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) :|: o12256[LinkedList$Entry.previous]o12254 > 0 && o12256[LinkedList$Entry.next]o12256 > 0 && o12254[LinkedList$Entry.previous]o12256 > 0 && o12256[LinkedList$Entry.previous]o12256 > 0 && o12254[LinkedList$Entry.previous]o12254 > 0
f12479_0_entry_FieldAccess(EOS(STATIC_12479), i3510, i3668, o12566[LinkedList$Entry.previous]o12566, o12566[LinkedList$Entry.next]o12566, o12566[LinkedList$Entry.previous]o12566, o12566[LinkedList$Entry.previous]o12566, o12566[LinkedList$Entry.previous]o12566) -> f12494_0_entry_FieldAccess(EOS(STATIC_12494), i3510, i3668, o12566[LinkedList$Entry.next]o12566, o12566[LinkedList$Entry.previous]o12566) :|: TRUE
f12493_0_entry_FieldAccess(EOS(STATIC_12493), i3510, i3668, o12256[LinkedList$Entry.previous]o12615, o12256[LinkedList$Entry.next]o12256, o12615[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12615[LinkedList$Entry.previous]o12615) -> f12511_0_entry_FieldAccess(EOS(STATIC_12511), i3510, i3668, o12256[LinkedList$Entry.next]o12256, o12256[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12615, o12618[LinkedList$Entry.previous]o12256, o12618[LinkedList$Entry.previous]o12615) :|: o12618[LinkedList$Entry.previous]o12256 < o12615[LinkedList$Entry.previous]o12256 && o12615[LinkedList$Entry.previous]o12256 >= 0 && o12618[LinkedList$Entry.previous]o12615 < o12615[LinkedList$Entry.previous]o12615 && o12615[LinkedList$Entry.previous]o12615 >= 0
f12511_0_entry_FieldAccess(EOS(STATIC_12511), i3510, i3668, o12256[LinkedList$Entry.next]o12256, o12256[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12615, o12618[LinkedList$Entry.previous]o12256, o12618[LinkedList$Entry.previous]o12615) -> f12531_0_entry_Store(EOS(STATIC_12531), i3510, i3668, o12256[LinkedList$Entry.next]o12256, o12256[LinkedList$Entry.previous]o12256, o12618[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12618, o12618[LinkedList$Entry.previous]o12618) :|: o12256[LinkedList$Entry.previous]o12618 > o12256[LinkedList$Entry.previous]o12615 && o12256[LinkedList$Entry.previous]o12615 >= 0 && o12618[LinkedList$Entry.previous]o12618 > o12618[LinkedList$Entry.previous]o12615 && o12618[LinkedList$Entry.previous]o12615 >= 0
f12531_0_entry_Store(EOS(STATIC_12531), i3510, i3668, o12256[LinkedList$Entry.next]o12256, o12256[LinkedList$Entry.previous]o12256, o12618[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12618, o12618[LinkedList$Entry.previous]o12618) -> f12555_0_entry_Inc(EOS(STATIC_12555), i3510, i3668, o12256[LinkedList$Entry.next]o12256, o12256[LinkedList$Entry.previous]o12256, o12618[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12618, o12618[LinkedList$Entry.previous]o12618) :|: TRUE
f12555_0_entry_Inc(EOS(STATIC_12555), i3510, i3668, o12256[LinkedList$Entry.next]o12256, o12256[LinkedList$Entry.previous]o12256, o12618[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12618, o12618[LinkedList$Entry.previous]o12618) -> f12581_0_entry_JMP(EOS(STATIC_12581), i3510, i3668 + -1, o12256[LinkedList$Entry.next]o12256, o12256[LinkedList$Entry.previous]o12256, o12618[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12618, o12618[LinkedList$Entry.previous]o12618) :|: TRUE
f12581_0_entry_JMP(EOS(STATIC_12581), i3510, i3747, o12256[LinkedList$Entry.next]o12256, o12256[LinkedList$Entry.previous]o12256, o12618[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12618, o12618[LinkedList$Entry.previous]o12618) -> f12602_0_entry_Load(EOS(STATIC_12602), i3510, i3747, o12256[LinkedList$Entry.next]o12256, o12256[LinkedList$Entry.previous]o12256, o12618[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12618, o12618[LinkedList$Entry.previous]o12618) :|: TRUE
f12602_0_entry_Load(EOS(STATIC_12602), i3510, i3747, o12256[LinkedList$Entry.next]o12256, o12256[LinkedList$Entry.previous]o12256, o12618[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12618, o12618[LinkedList$Entry.previous]o12618) -> f12417_0_entry_Load(EOS(STATIC_12417), i3510, i3747, o12256[LinkedList$Entry.previous]o12618, o12256[LinkedList$Entry.next]o12256, o12618[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12618[LinkedList$Entry.previous]o12618) :|: TRUE
f12417_0_entry_Load(EOS(STATIC_12417), i3510, i3668, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) -> f12426_0_entry_Load(EOS(STATIC_12426), i3510, i3668, i3668, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) :|: TRUE
f12426_0_entry_Load(EOS(STATIC_12426), i3510, i3668, i3668, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) -> f12437_0_entry_LE(EOS(STATIC_12437), i3510, i3668, i3668, i3510, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) :|: TRUE
f12437_0_entry_LE(EOS(STATIC_12437), i3510, i3668, i3668, i3510, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) -> f12447_0_entry_LE(EOS(STATIC_12447), i3510, i3668, i3668, i3510, o12256[LinkedList$Entry.previous]o12254, o12256[LinkedList$Entry.next]o12256, o12254[LinkedList$Entry.previous]o12256, o12256[LinkedList$Entry.previous]o12256, o12254[LinkedList$Entry.previous]o12254) :|: i3668 > i3510
f12494_0_entry_FieldAccess(EOS(STATIC_12494), i3510, i3668, o12619[LinkedList$Entry.next]o12619, o12619[LinkedList$Entry.previous]o12619) -> f12512_0_entry_FieldAccess(EOS(STATIC_12512), i3510, i3668, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) :|: o12621[LinkedList$Entry.next]o12619 < o12619[LinkedList$Entry.next]o12619 && o12619[LinkedList$Entry.next]o12619 >= 0 && o12622[LinkedList$Entry.previous]o12619 < o12619[LinkedList$Entry.previous]o12619 && o12619[LinkedList$Entry.previous]o12619 >= 0
f12512_0_entry_FieldAccess(EOS(STATIC_12512), i3510, i3668, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) -> f12532_0_entry_FieldAccess(EOS(STATIC_12532), i3510, i3668, o12622[LinkedList$Entry.previous]o12619, o12621[LinkedList$Entry.next]o12619) :|: o12621[LinkedList$Entry.next]o12619 > 0
f12512_0_entry_FieldAccess(EOS(STATIC_12512), i3510, i3668, o12621[LinkedList$Entry.next]o12685, o12622[LinkedList$Entry.previous]o12685) -> f12533_0_entry_FieldAccess(EOS(STATIC_12533), i3510, i3668, o12622[LinkedList$Entry.previous]o12685) :|: TRUE
f12532_0_entry_FieldAccess(EOS(STATIC_12532), i3510, i3668, o12622[LinkedList$Entry.previous]o12619, o12621[LinkedList$Entry.next]o12619) -> f12556_0_entry_FieldAccess(EOS(STATIC_12556), i3510, i3668, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) :|: o12622[LinkedList$Entry.previous]o12619 > 0
f12532_0_entry_FieldAccess(EOS(STATIC_12532), i3510, i3668, o12622[LinkedList$Entry.previous]o12742, o12621[LinkedList$Entry.next]o12742) -> f12557_0_entry_FieldAccess(EOS(STATIC_12557), i3510, i3668, o12621[LinkedList$Entry.next]o12742) :|: TRUE
f12556_0_entry_FieldAccess(EOS(STATIC_12556), i3510, i3668, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) -> f12582_0_entry_Store(EOS(STATIC_12582), i3510, i3668, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) :|: TRUE
f12582_0_entry_Store(EOS(STATIC_12582), i3510, i3668, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) -> f12603_0_entry_Inc(EOS(STATIC_12603), i3510, i3668, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) :|: TRUE
f12603_0_entry_Inc(EOS(STATIC_12603), i3510, i3668, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) -> f12621_0_entry_JMP(EOS(STATIC_12621), i3510, i3668 + -1, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) :|: TRUE
f12621_0_entry_JMP(EOS(STATIC_12621), i3510, i3765, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) -> f12635_0_entry_Load(EOS(STATIC_12635), i3510, i3765, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) :|: TRUE
f12635_0_entry_Load(EOS(STATIC_12635), i3510, i3765, o12621[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619) -> f12417_0_entry_Load(EOS(STATIC_12417), i3510, i3765, o12619[LinkedList$Entry.previous]o12622, o12619[LinkedList$Entry.next]o12619, o12622[LinkedList$Entry.previous]o12619, o12619[LinkedList$Entry.previous]o12619, o12622[LinkedList$Entry.previous]o12622) :|: o12619[LinkedList$Entry.previous]o12622 = 1
f12557_0_entry_FieldAccess(EOS(STATIC_12557), i3510, i3668, o12621[LinkedList$Entry.next]o12742) -> f12583_0_entry_Store(EOS(STATIC_12583), i3510, i3668, o12621[LinkedList$Entry.next]o12742) :|: TRUE
f12583_0_entry_Store(EOS(STATIC_12583), i3510, i3668, o12621[LinkedList$Entry.next]o12742) -> f12604_0_entry_Inc(EOS(STATIC_12604), i3510, i3668, o12621[LinkedList$Entry.next]o12742) :|: TRUE
f12604_0_entry_Inc(EOS(STATIC_12604), i3510, i3668, o12621[LinkedList$Entry.next]o12742) -> f12622_0_entry_JMP(EOS(STATIC_12622), i3510, i3668 + -1, o12621[LinkedList$Entry.next]o12742) :|: TRUE
f12622_0_entry_JMP(EOS(STATIC_12622), i3510, i3767, o12621[LinkedList$Entry.next]o12742) -> f12636_0_entry_Load(EOS(STATIC_12636), i3510, i3767, o12621[LinkedList$Entry.next]o12742) :|: TRUE
f12636_0_entry_Load(EOS(STATIC_12636), i3510, i3767, o12621[LinkedList$Entry.next]o12742) -> f12417_0_entry_Load(EOS(STATIC_12417), i3510, i3767, o12742[LinkedList$Entry.previous]o12742, o12742[LinkedList$Entry.next]o12742, o12742[LinkedList$Entry.previous]o12742, o12742[LinkedList$Entry.previous]o12742, o12742[LinkedList$Entry.previous]o12742) :|: o12742[LinkedList$Entry.previous]o12742 = 1 && o12742[LinkedList$Entry.previous]o12742 = 1 && o12742[LinkedList$Entry.previous]o12742 = 1 && o12742[LinkedList$Entry.previous]o12742 = 1
f12533_0_entry_FieldAccess(EOS(STATIC_12533), i3510, i3668, o12622[LinkedList$Entry.previous]o12685) -> f12558_0_entry_FieldAccess(EOS(STATIC_12558), i3510, i3668, o12622[LinkedList$Entry.previous]o12685) :|: o12622[LinkedList$Entry.previous]o12685 > 0
f12533_0_entry_FieldAccess(EOS(STATIC_12533), i3510, i3668, o12622[LinkedList$Entry.previous]o12745) -> f12559_0_entry_FieldAccess(EOS(STATIC_12559), i3510, i3668) :|: TRUE
f12558_0_entry_FieldAccess(EOS(STATIC_12558), i3510, i3668, o12622[LinkedList$Entry.previous]o12685) -> f12584_0_entry_Store(EOS(STATIC_12584), i3510, i3668, o12622[LinkedList$Entry.previous]o12685) :|: TRUE
f12584_0_entry_Store(EOS(STATIC_12584), i3510, i3668, o12622[LinkedList$Entry.previous]o12685) -> f12605_0_entry_Inc(EOS(STATIC_12605), i3510, i3668, o12622[LinkedList$Entry.previous]o12685) :|: TRUE
f12605_0_entry_Inc(EOS(STATIC_12605), i3510, i3668, o12622[LinkedList$Entry.previous]o12685) -> f12623_0_entry_JMP(EOS(STATIC_12623), i3510, i3668 + -1, o12622[LinkedList$Entry.previous]o12685) :|: TRUE
f12623_0_entry_JMP(EOS(STATIC_12623), i3510, i3768, o12622[LinkedList$Entry.previous]o12685) -> f12637_0_entry_Load(EOS(STATIC_12637), i3510, i3768, o12622[LinkedList$Entry.previous]o12685) :|: TRUE
f12637_0_entry_Load(EOS(STATIC_12637), i3510, i3768, o12622[LinkedList$Entry.previous]o12685) -> f12417_0_entry_Load(EOS(STATIC_12417), i3510, i3768, o12685[LinkedList$Entry.previous]o12622, o12685[LinkedList$Entry.next]o12685, o12622[LinkedList$Entry.previous]o12685, o12685[LinkedList$Entry.previous]o12685, o12622[LinkedList$Entry.previous]o12622) :|: o12685[LinkedList$Entry.previous]o12622 = 1 && o12685[LinkedList$Entry.next]o12685 = 1
f12559_0_entry_FieldAccess(EOS(STATIC_12559), i3510, i3668) -> f12585_0_entry_Store(EOS(STATIC_12585), i3510, i3668) :|: TRUE
f12585_0_entry_Store(EOS(STATIC_12585), i3510, i3668) -> f12606_0_entry_Inc(EOS(STATIC_12606), i3510, i3668) :|: TRUE
f12606_0_entry_Inc(EOS(STATIC_12606), i3510, i3668) -> f12624_0_entry_JMP(EOS(STATIC_12624), i3510, i3668 + -1) :|: TRUE
f12624_0_entry_JMP(EOS(STATIC_12624), i3510, i3772) -> f12638_0_entry_Load(EOS(STATIC_12638), i3510, i3772) :|: TRUE
f12638_0_entry_Load(EOS(STATIC_12638), i3510, i3772) -> f12417_0_entry_Load(EOS(STATIC_12417), i3510, i3772, o12745[LinkedList$Entry.previous]o12745, o12745[LinkedList$Entry.next]o12745, o12745[LinkedList$Entry.previous]o12745, o12745[LinkedList$Entry.previous]o12745, o12745[LinkedList$Entry.previous]o12745) :|: o12745[LinkedList$Entry.previous]o12745 = 1 && o12745[LinkedList$Entry.next]o12745 = 1 && o12745[LinkedList$Entry.previous]o12745 = 1 && o12745[LinkedList$Entry.previous]o12745 = 1 && o12745[LinkedList$Entry.previous]o12745 = 1
Combined rules. Obtained 5 IRulesP rules:
f12447_0_entry_LE(EOS(STATIC_12447), i3510:0, i3668:0, i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12254[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12254[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(EOS(STATIC_12447), i3510:0, i3668:0 - 1, i3668:0 - 1, i3510:0, o12256[LinkedList$Entry.previous]o12618:0, o12256[LinkedList$Entry.next]o12256:0, o12618[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12618[LinkedList$Entry.previous]o12618:0) :|: o12256[LinkedList$Entry.previous]o12254:0 > 0 && o12254[LinkedList$Entry.previous]o12256:0 > 0 && o12254[LinkedList$Entry.previous]o12254:0 > 0 && o12256[LinkedList$Entry.next]o12256:0 > 0 && o12618[LinkedList$Entry.previous]o12256:0 < o12254[LinkedList$Entry.previous]o12256:0 && o12256[LinkedList$Entry.previous]o12256:0 > 0 && o12256[LinkedList$Entry.previous]o12618:0 > o12256[LinkedList$Entry.previous]o12254:0 && o12618[LinkedList$Entry.previous]o12615:0 < o12254[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12618[LinkedList$Entry.previous]o12618:0 > o12618[LinkedList$Entry.previous]o12615:0 && i3668:0 - 1 > i3510:0 && o12618[LinkedList$Entry.previous]o12615:0 > -1
f12447_0_entry_LE(EOS(STATIC_12447), i3510:0, i3668:0, i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(EOS(STATIC_12447), i3510:0, i3668:0 - 1, i3668:0 - 1, i3510:0, 1, o12742[LinkedList$Entry.next]o12742:0, 1, 1, 1) :|: o12256[LinkedList$Entry.next]o12256:0 > -1 && o12621[LinkedList$Entry.next]o12619:0 < o12256[LinkedList$Entry.next]o12256:0 && o12622[LinkedList$Entry.previous]o12619:0 < o12256[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12256[LinkedList$Entry.previous]o12254:0 > -1 && i3668:0 - 1 > i3510:0 && o12621[LinkedList$Entry.next]o12619:0 > 0
f12447_0_entry_LE(EOS(STATIC_12447), i3510:0, i3668:0, i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(EOS(STATIC_12447), i3510:0, i3668:0 - 1, i3668:0 - 1, i3510:0, 1, o12619[LinkedList$Entry.next]o12619:0, o12622[LinkedList$Entry.previous]o12619:0, o12619[LinkedList$Entry.previous]o12619:0, o12622[LinkedList$Entry.previous]o12622:0) :|: o12256[LinkedList$Entry.next]o12256:0 > -1 && o12621[LinkedList$Entry.next]o12619:0 < o12256[LinkedList$Entry.next]o12256:0 && o12622[LinkedList$Entry.previous]o12619:0 < o12256[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12256[LinkedList$Entry.previous]o12254:0 > -1 && o12621[LinkedList$Entry.next]o12619:0 > 0 && i3668:0 - 1 > i3510:0 && o12622[LinkedList$Entry.previous]o12619:0 > 0
f12447_0_entry_LE(EOS(STATIC_12447), i3510:0, i3668:0, i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(EOS(STATIC_12447), i3510:0, i3668:0 - 1, i3668:0 - 1, i3510:0, 1, 1, 1, 1, 1) :|: o12256[LinkedList$Entry.next]o12256:0 > -1 && o12621[LinkedList$Entry.next]o12619:0 < o12256[LinkedList$Entry.next]o12256:0 && o12622[LinkedList$Entry.previous]o12619:0 < o12256[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && i3668:0 - 1 > i3510:0 && o12256[LinkedList$Entry.previous]o12254:0 > -1
f12447_0_entry_LE(EOS(STATIC_12447), i3510:0, i3668:0, i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(EOS(STATIC_12447), i3510:0, i3668:0 - 1, i3668:0 - 1, i3510:0, 1, 1, o12622[LinkedList$Entry.previous]o12619:0, o12685[LinkedList$Entry.previous]o12685:0, o12622[LinkedList$Entry.previous]o12622:0) :|: o12256[LinkedList$Entry.next]o12256:0 > -1 && o12621[LinkedList$Entry.next]o12619:0 < o12256[LinkedList$Entry.next]o12256:0 && o12622[LinkedList$Entry.previous]o12619:0 < o12256[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12256[LinkedList$Entry.previous]o12254:0 > -1 && i3668:0 - 1 > i3510:0 && o12622[LinkedList$Entry.previous]o12619:0 > 0
Filtered constant ground arguments:
   f12447_0_entry_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f12447_0_entry_LE(x2, x3, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f12447_0_entry_LE(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f12447_0_entry_LE(x3, x4, x5, x6, x7, x8, x9)
Finished conversion. Obtained 5 rules.P rules:
f12447_0_entry_LE(i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12254[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12254[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(i3668:0 - 1, i3510:0, o12256[LinkedList$Entry.previous]o12618:0, o12256[LinkedList$Entry.next]o12256:0, o12618[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12618[LinkedList$Entry.previous]o12618:0) :|: o12254[LinkedList$Entry.previous]o12256:0 > 0 && o12256[LinkedList$Entry.previous]o12254:0 > 0 && o12254[LinkedList$Entry.previous]o12254:0 > 0 && o12256[LinkedList$Entry.next]o12256:0 > 0 && o12618[LinkedList$Entry.previous]o12256:0 < o12254[LinkedList$Entry.previous]o12256:0 && o12256[LinkedList$Entry.previous]o12256:0 > 0 && o12256[LinkedList$Entry.previous]o12618:0 > o12256[LinkedList$Entry.previous]o12254:0 && o12618[LinkedList$Entry.previous]o12615:0 < o12254[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12618[LinkedList$Entry.previous]o12618:0 > o12618[LinkedList$Entry.previous]o12615:0 && o12618[LinkedList$Entry.previous]o12615:0 > -1 && i3668:0 - 1 > i3510:0
f12447_0_entry_LE(i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(i3668:0 - 1, i3510:0, 1, o12742[LinkedList$Entry.next]o12742:0, 1, 1, 1) :|: o12621[LinkedList$Entry.next]o12619:0 < o12256[LinkedList$Entry.next]o12256:0 && o12256[LinkedList$Entry.next]o12256:0 > -1 && o12622[LinkedList$Entry.previous]o12619:0 < o12256[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12256[LinkedList$Entry.previous]o12254:0 > -1 && o12621[LinkedList$Entry.next]o12619:0 > 0 && i3668:0 - 1 > i3510:0
f12447_0_entry_LE(i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(i3668:0 - 1, i3510:0, 1, o12619[LinkedList$Entry.next]o12619:0, o12622[LinkedList$Entry.previous]o12619:0, o12619[LinkedList$Entry.previous]o12619:0, o12622[LinkedList$Entry.previous]o12622:0) :|: o12621[LinkedList$Entry.next]o12619:0 < o12256[LinkedList$Entry.next]o12256:0 && o12256[LinkedList$Entry.next]o12256:0 > -1 && o12622[LinkedList$Entry.previous]o12619:0 < o12256[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12256[LinkedList$Entry.previous]o12254:0 > -1 && o12621[LinkedList$Entry.next]o12619:0 > 0 && o12622[LinkedList$Entry.previous]o12619:0 > 0 && i3668:0 - 1 > i3510:0
f12447_0_entry_LE(i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(i3668:0 - 1, i3510:0, 1, 1, 1, 1, 1) :|: o12621[LinkedList$Entry.next]o12619:0 < o12256[LinkedList$Entry.next]o12256:0 && o12256[LinkedList$Entry.next]o12256:0 > -1 && o12622[LinkedList$Entry.previous]o12619:0 < o12256[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12256[LinkedList$Entry.previous]o12254:0 > -1 && i3668:0 - 1 > i3510:0
f12447_0_entry_LE(i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(i3668:0 - 1, i3510:0, 1, 1, o12622[LinkedList$Entry.previous]o12619:0, o12685[LinkedList$Entry.previous]o12685:0, o12622[LinkedList$Entry.previous]o12622:0) :|: o12621[LinkedList$Entry.next]o12619:0 < o12256[LinkedList$Entry.next]o12256:0 && o12256[LinkedList$Entry.next]o12256:0 > -1 && o12622[LinkedList$Entry.previous]o12619:0 < o12256[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12256[LinkedList$Entry.previous]o12254:0 > -1 && o12622[LinkedList$Entry.previous]o12619:0 > 0 && i3668:0 - 1 > i3510:0

----------------------------------------

(93)
Obligation:
Rules:
f12447_0_entry_LE(i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12254[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12254[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(i3668:0 - 1, i3510:0, o12256[LinkedList$Entry.previous]o12618:0, o12256[LinkedList$Entry.next]o12256:0, o12618[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12618[LinkedList$Entry.previous]o12618:0) :|: o12254[LinkedList$Entry.previous]o12256:0 > 0 && o12256[LinkedList$Entry.previous]o12254:0 > 0 && o12254[LinkedList$Entry.previous]o12254:0 > 0 && o12256[LinkedList$Entry.next]o12256:0 > 0 && o12618[LinkedList$Entry.previous]o12256:0 < o12254[LinkedList$Entry.previous]o12256:0 && o12256[LinkedList$Entry.previous]o12256:0 > 0 && o12256[LinkedList$Entry.previous]o12618:0 > o12256[LinkedList$Entry.previous]o12254:0 && o12618[LinkedList$Entry.previous]o12615:0 < o12254[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12618[LinkedList$Entry.previous]o12618:0 > o12618[LinkedList$Entry.previous]o12615:0 && o12618[LinkedList$Entry.previous]o12615:0 > -1 && i3668:0 - 1 > i3510:0
f12447_0_entry_LE(x, x1, x2, x3, x2, x2, x2) -> f12447_0_entry_LE(x - 1, x1, 1, x4, 1, 1, 1) :|: x5 < x3 && x3 > -1 && x6 < x2 && x > x1 && x2 > -1 && x5 > 0 && x - 1 > x1
f12447_0_entry_LE(x7, x8, x9, x10, x9, x9, x9) -> f12447_0_entry_LE(x7 - 1, x8, 1, x11, x12, x13, x14) :|: x15 < x10 && x10 > -1 && x12 < x9 && x7 > x8 && x9 > -1 && x15 > 0 && x12 > 0 && x7 - 1 > x8
f12447_0_entry_LE(x16, x17, x18, x19, x18, x18, x18) -> f12447_0_entry_LE(x16 - 1, x17, 1, 1, 1, 1, 1) :|: x20 < x19 && x19 > -1 && x21 < x18 && x16 > x17 && x18 > -1 && x16 - 1 > x17
f12447_0_entry_LE(x22, x23, x24, x25, x24, x24, x24) -> f12447_0_entry_LE(x22 - 1, x23, 1, 1, x26, x27, x28) :|: x29 < x25 && x25 > -1 && x26 < x24 && x22 > x23 && x24 > -1 && x26 > 0 && x22 - 1 > x23

----------------------------------------

(94) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(95)
Obligation:
Rules:
f12447_0_entry_LE(i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12254[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12254[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(arith, i3510:0, o12256[LinkedList$Entry.previous]o12618:0, o12256[LinkedList$Entry.next]o12256:0, o12618[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12618[LinkedList$Entry.previous]o12618:0) :|: o12254[LinkedList$Entry.previous]o12256:0 > 0 && o12256[LinkedList$Entry.previous]o12254:0 > 0 && o12254[LinkedList$Entry.previous]o12254:0 > 0 && o12256[LinkedList$Entry.next]o12256:0 > 0 && o12618[LinkedList$Entry.previous]o12256:0 < o12254[LinkedList$Entry.previous]o12256:0 && o12256[LinkedList$Entry.previous]o12256:0 > 0 && o12256[LinkedList$Entry.previous]o12618:0 > o12256[LinkedList$Entry.previous]o12254:0 && o12618[LinkedList$Entry.previous]o12615:0 < o12254[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12618[LinkedList$Entry.previous]o12618:0 > o12618[LinkedList$Entry.previous]o12615:0 && o12618[LinkedList$Entry.previous]o12615:0 > -1 && i3668:0 - 1 > i3510:0 && arith = i3668:0 - 1
f12447_0_entry_LE(x30, x31, x32, x33, x32, x32, x32) -> f12447_0_entry_LE(x34, x31, 1, x35, 1, 1, 1) :|: x36 < x33 && x33 > -1 && x37 < x32 && x30 > x31 && x32 > -1 && x36 > 0 && x30 - 1 > x31 && x34 = x30 - 1
f12447_0_entry_LE(x38, x39, x40, x41, x40, x40, x40) -> f12447_0_entry_LE(x42, x39, 1, x43, x44, x45, x46) :|: x47 < x41 && x41 > -1 && x44 < x40 && x38 > x39 && x40 > -1 && x47 > 0 && x44 > 0 && x38 - 1 > x39 && x42 = x38 - 1
f12447_0_entry_LE(x48, x49, x50, x51, x50, x50, x50) -> f12447_0_entry_LE(x52, x49, 1, 1, 1, 1, 1) :|: x53 < x51 && x51 > -1 && x54 < x50 && x48 > x49 && x50 > -1 && x48 - 1 > x49 && x52 = x48 - 1
f12447_0_entry_LE(x55, x56, x57, x58, x57, x57, x57) -> f12447_0_entry_LE(x59, x56, 1, 1, x60, x61, x62) :|: x63 < x58 && x58 > -1 && x60 < x57 && x55 > x56 && x57 > -1 && x60 > 0 && x55 - 1 > x56 && x59 = x55 - 1

----------------------------------------

(96) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12447_0_entry_LE(i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12254[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12254[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(arith, i3510:0, o12256[LinkedList$Entry.previous]o12618:0, o12256[LinkedList$Entry.next]o12256:0, o12618[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12618[LinkedList$Entry.previous]o12618:0) :|: o12254[LinkedList$Entry.previous]o12256:0 > 0 && o12256[LinkedList$Entry.previous]o12254:0 > 0 && o12254[LinkedList$Entry.previous]o12254:0 > 0 && o12256[LinkedList$Entry.next]o12256:0 > 0 && o12618[LinkedList$Entry.previous]o12256:0 < o12254[LinkedList$Entry.previous]o12256:0 && o12256[LinkedList$Entry.previous]o12256:0 > 0 && o12256[LinkedList$Entry.previous]o12618:0 > o12256[LinkedList$Entry.previous]o12254:0 && o12618[LinkedList$Entry.previous]o12615:0 < o12254[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12618[LinkedList$Entry.previous]o12618:0 > o12618[LinkedList$Entry.previous]o12615:0 && o12618[LinkedList$Entry.previous]o12615:0 > -1 && i3668:0 - 1 > i3510:0 && arith = i3668:0 - 1
(2) f12447_0_entry_LE(x30, x31, x32, x33, x32, x32, x32) -> f12447_0_entry_LE(x34, x31, 1, x35, 1, 1, 1) :|: x36 < x33 && x33 > -1 && x37 < x32 && x30 > x31 && x32 > -1 && x36 > 0 && x30 - 1 > x31 && x34 = x30 - 1
(3) f12447_0_entry_LE(x38, x39, x40, x41, x40, x40, x40) -> f12447_0_entry_LE(x42, x39, 1, x43, x44, x45, x46) :|: x47 < x41 && x41 > -1 && x44 < x40 && x38 > x39 && x40 > -1 && x47 > 0 && x44 > 0 && x38 - 1 > x39 && x42 = x38 - 1
(4) f12447_0_entry_LE(x48, x49, x50, x51, x50, x50, x50) -> f12447_0_entry_LE(x52, x49, 1, 1, 1, 1, 1) :|: x53 < x51 && x51 > -1 && x54 < x50 && x48 > x49 && x50 > -1 && x48 - 1 > x49 && x52 = x48 - 1
(5) f12447_0_entry_LE(x55, x56, x57, x58, x57, x57, x57) -> f12447_0_entry_LE(x59, x56, 1, 1, x60, x61, x62) :|: x63 < x58 && x58 > -1 && x60 < x57 && x55 > x56 && x57 > -1 && x60 > 0 && x55 - 1 > x56 && x59 = x55 - 1

Arcs:
(1) -> (1), (2), (3), (4), (5)
(2) -> (1), (2), (4)
(3) -> (1), (2), (4)
(4) -> (1), (4)
(5) -> (1), (4)

This digraph is fully evaluated!
----------------------------------------

(97)
Obligation:

Termination digraph:
Nodes:
(1) f12447_0_entry_LE(i3668:0, i3510:0, o12256[LinkedList$Entry.previous]o12254:0, o12256[LinkedList$Entry.next]o12256:0, o12254[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12254[LinkedList$Entry.previous]o12254:0) -> f12447_0_entry_LE(arith, i3510:0, o12256[LinkedList$Entry.previous]o12618:0, o12256[LinkedList$Entry.next]o12256:0, o12618[LinkedList$Entry.previous]o12256:0, o12256[LinkedList$Entry.previous]o12256:0, o12618[LinkedList$Entry.previous]o12618:0) :|: o12254[LinkedList$Entry.previous]o12256:0 > 0 && o12256[LinkedList$Entry.previous]o12254:0 > 0 && o12254[LinkedList$Entry.previous]o12254:0 > 0 && o12256[LinkedList$Entry.next]o12256:0 > 0 && o12618[LinkedList$Entry.previous]o12256:0 < o12254[LinkedList$Entry.previous]o12256:0 && o12256[LinkedList$Entry.previous]o12256:0 > 0 && o12256[LinkedList$Entry.previous]o12618:0 > o12256[LinkedList$Entry.previous]o12254:0 && o12618[LinkedList$Entry.previous]o12615:0 < o12254[LinkedList$Entry.previous]o12254:0 && i3668:0 > i3510:0 && o12618[LinkedList$Entry.previous]o12618:0 > o12618[LinkedList$Entry.previous]o12615:0 && o12618[LinkedList$Entry.previous]o12615:0 > -1 && i3668:0 - 1 > i3510:0 && arith = i3668:0 - 1
(2) f12447_0_entry_LE(x48, x49, x50, x51, x50, x50, x50) -> f12447_0_entry_LE(x52, x49, 1, 1, 1, 1, 1) :|: x53 < x51 && x51 > -1 && x54 < x50 && x48 > x49 && x50 > -1 && x48 - 1 > x49 && x52 = x48 - 1
(3) f12447_0_entry_LE(x55, x56, x57, x58, x57, x57, x57) -> f12447_0_entry_LE(x59, x56, 1, 1, x60, x61, x62) :|: x63 < x58 && x58 > -1 && x60 < x57 && x55 > x56 && x57 > -1 && x60 > 0 && x55 - 1 > x56 && x59 = x55 - 1
(4) f12447_0_entry_LE(x30, x31, x32, x33, x32, x32, x32) -> f12447_0_entry_LE(x34, x31, 1, x35, 1, 1, 1) :|: x36 < x33 && x33 > -1 && x37 < x32 && x30 > x31 && x32 > -1 && x36 > 0 && x30 - 1 > x31 && x34 = x30 - 1
(5) f12447_0_entry_LE(x38, x39, x40, x41, x40, x40, x40) -> f12447_0_entry_LE(x42, x39, 1, x43, x44, x45, x46) :|: x47 < x41 && x41 > -1 && x44 < x40 && x38 > x39 && x40 > -1 && x47 > 0 && x44 > 0 && x38 - 1 > x39 && x42 = x38 - 1

Arcs:
(1) -> (1), (2), (3), (4), (5)
(2) -> (1), (2)
(3) -> (1), (2)
(4) -> (1), (2), (4)
(5) -> (1), (2), (4)

This digraph is fully evaluated!

----------------------------------------

(98) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(99)
Obligation:
Rules:
f12447_0_entry_LE(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f12447_0_entry_LE(x55:0 - 1, x56:0, 1, 1, x60:0, x61:0, x62:0) :|: x60:0 > 0 && x56:0 < x55:0 - 1 && x57:0 > -1 && x56:0 < x55:0 && x60:0 < x57:0 && x58:0 > -1 && x63:0 < x58:0
f12447_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12447_0_entry_LE(x38:0 - 1, x39:0, 1, x43:0, x44:0, x45:0, x46:0) :|: x44:0 > 0 && x39:0 < x38:0 - 1 && x47:0 > 0 && x40:0 > -1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x47:0 < x41:0
f12447_0_entry_LE(i3668:0:0, i3510:0:0, o12256[LinkedList$Entry.previous]o12254:0:0, o12256[LinkedList$Entry.next]o12256:0:0, o12254[LinkedList$Entry.previous]o12256:0:0, o12256[LinkedList$Entry.previous]o12256:0:0, o12254[LinkedList$Entry.previous]o12254:0:0) -> f12447_0_entry_LE(i3668:0:0 - 1, i3510:0:0, o12256[LinkedList$Entry.previous]o12618:0:0, o12256[LinkedList$Entry.next]o12256:0:0, o12618[LinkedList$Entry.previous]o12256:0:0, o12256[LinkedList$Entry.previous]o12256:0:0, o12618[LinkedList$Entry.previous]o12618:0:0) :|: o12618[LinkedList$Entry.previous]o12615:0:0 > -1 && i3668:0:0 - 1 > i3510:0:0 && o12618[LinkedList$Entry.previous]o12618:0:0 > o12618[LinkedList$Entry.previous]o12615:0:0 && i3668:0:0 > i3510:0:0 && o12618[LinkedList$Entry.previous]o12615:0:0 < o12254[LinkedList$Entry.previous]o12254:0:0 && o12256[LinkedList$Entry.previous]o12618:0:0 > o12256[LinkedList$Entry.previous]o12254:0:0 && o12256[LinkedList$Entry.previous]o12256:0:0 > 0 && o12618[LinkedList$Entry.previous]o12256:0:0 < o12254[LinkedList$Entry.previous]o12256:0:0 && o12256[LinkedList$Entry.next]o12256:0:0 > 0 && o12254[LinkedList$Entry.previous]o12254:0:0 > 0 && o12256[LinkedList$Entry.previous]o12254:0:0 > 0 && o12254[LinkedList$Entry.previous]o12256:0:0 > 0
f12447_0_entry_LE(x48:0, x49:0, x50:0, x51:0, x50:0, x50:0, x50:0) -> f12447_0_entry_LE(x48:0 - 1, x49:0, 1, 1, 1, 1, 1) :|: x50:0 > -1 && x49:0 < x48:0 - 1 && x49:0 < x48:0 && x54:0 < x50:0 && x51:0 > -1 && x53:0 < x51:0
f12447_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12447_0_entry_LE(x30:0 - 1, x31:0, 1, x35:0, 1, 1, 1) :|: x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0

----------------------------------------

(100) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12447_0_entry_LE(INTEGER, INTEGER, VARIABLE, VARIABLE, VARIABLE, VARIABLE, VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(101)
Obligation:
Rules:
f12447_0_entry_LE(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f12447_0_entry_LE(c, x56:0, c1, c2, x60:0, x61:0, x62:0) :|: c2 = 1 && (c1 = 1 && c = x55:0 - 1) && (x60:0 > 0 && x56:0 < x55:0 - 1 && x57:0 > -1 && x56:0 < x55:0 && x60:0 < x57:0 && x58:0 > -1 && x63:0 < x58:0)
f12447_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12447_0_entry_LE(c3, x39:0, c4, x43:0, x44:0, x45:0, x46:0) :|: c4 = 1 && c3 = x38:0 - 1 && (x44:0 > 0 && x39:0 < x38:0 - 1 && x47:0 > 0 && x40:0 > -1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x47:0 < x41:0)
f12447_0_entry_LE(i3668:0:0, i3510:0:0, o12256[LinkedList$Entry.previous]o12254:0:0, o12256[LinkedList$Entry.next]o12256:0:0, o12254[LinkedList$Entry.previous]o12256:0:0, o12256[LinkedList$Entry.previous]o12256:0:0, o12254[LinkedList$Entry.previous]o12254:0:0) -> f12447_0_entry_LE(c5, i3510:0:0, o12256[LinkedList$Entry.previous]o12618:0:0, o12256[LinkedList$Entry.next]o12256:0:0, o12618[LinkedList$Entry.previous]o12256:0:0, o12256[LinkedList$Entry.previous]o12256:0:0, o12618[LinkedList$Entry.previous]o12618:0:0) :|: c5 = i3668:0:0 - 1 && (o12618[LinkedList$Entry.previous]o12615:0:0 > -1 && i3668:0:0 - 1 > i3510:0:0 && o12618[LinkedList$Entry.previous]o12618:0:0 > o12618[LinkedList$Entry.previous]o12615:0:0 && i3668:0:0 > i3510:0:0 && o12618[LinkedList$Entry.previous]o12615:0:0 < o12254[LinkedList$Entry.previous]o12254:0:0 && o12256[LinkedList$Entry.previous]o12618:0:0 > o12256[LinkedList$Entry.previous]o12254:0:0 && o12256[LinkedList$Entry.previous]o12256:0:0 > 0 && o12618[LinkedList$Entry.previous]o12256:0:0 < o12254[LinkedList$Entry.previous]o12256:0:0 && o12256[LinkedList$Entry.next]o12256:0:0 > 0 && o12254[LinkedList$Entry.previous]o12254:0:0 > 0 && o12256[LinkedList$Entry.previous]o12254:0:0 > 0 && o12254[LinkedList$Entry.previous]o12256:0:0 > 0)
f12447_0_entry_LE(x48:0, x49:0, x50:0, x51:0, x50:0, x50:0, x50:0) -> f12447_0_entry_LE(c6, x49:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x48:0 - 1)))) && (x50:0 > -1 && x49:0 < x48:0 - 1 && x49:0 < x48:0 && x54:0 < x50:0 && x51:0 > -1 && x53:0 < x51:0)
f12447_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12447_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

----------------------------------------

(102) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12447_0_entry_LE(x, x1, x2, x3, x4, x5, x6)] = x - x1 + x4

The following rules are decreasing:
f12447_0_entry_LE(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f12447_0_entry_LE(c, x56:0, c1, c2, x60:0, x61:0, x62:0) :|: c2 = 1 && (c1 = 1 && c = x55:0 - 1) && (x60:0 > 0 && x56:0 < x55:0 - 1 && x57:0 > -1 && x56:0 < x55:0 && x60:0 < x57:0 && x58:0 > -1 && x63:0 < x58:0)
f12447_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12447_0_entry_LE(c3, x39:0, c4, x43:0, x44:0, x45:0, x46:0) :|: c4 = 1 && c3 = x38:0 - 1 && (x44:0 > 0 && x39:0 < x38:0 - 1 && x47:0 > 0 && x40:0 > -1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x47:0 < x41:0)
f12447_0_entry_LE(i3668:0:0, i3510:0:0, o12256[LinkedList$Entry.previous]o12254:0:0, o12256[LinkedList$Entry.next]o12256:0:0, o12254[LinkedList$Entry.previous]o12256:0:0, o12256[LinkedList$Entry.previous]o12256:0:0, o12254[LinkedList$Entry.previous]o12254:0:0) -> f12447_0_entry_LE(c5, i3510:0:0, o12256[LinkedList$Entry.previous]o12618:0:0, o12256[LinkedList$Entry.next]o12256:0:0, o12618[LinkedList$Entry.previous]o12256:0:0, o12256[LinkedList$Entry.previous]o12256:0:0, o12618[LinkedList$Entry.previous]o12618:0:0) :|: c5 = i3668:0:0 - 1 && (o12618[LinkedList$Entry.previous]o12615:0:0 > -1 && i3668:0:0 - 1 > i3510:0:0 && o12618[LinkedList$Entry.previous]o12618:0:0 > o12618[LinkedList$Entry.previous]o12615:0:0 && i3668:0:0 > i3510:0:0 && o12618[LinkedList$Entry.previous]o12615:0:0 < o12254[LinkedList$Entry.previous]o12254:0:0 && o12256[LinkedList$Entry.previous]o12618:0:0 > o12256[LinkedList$Entry.previous]o12254:0:0 && o12256[LinkedList$Entry.previous]o12256:0:0 > 0 && o12618[LinkedList$Entry.previous]o12256:0:0 < o12254[LinkedList$Entry.previous]o12256:0:0 && o12256[LinkedList$Entry.next]o12256:0:0 > 0 && o12254[LinkedList$Entry.previous]o12254:0:0 > 0 && o12256[LinkedList$Entry.previous]o12254:0:0 > 0 && o12254[LinkedList$Entry.previous]o12256:0:0 > 0)
The following rules are bounded:
f12447_0_entry_LE(x55:0, x56:0, x57:0, x58:0, x57:0, x57:0, x57:0) -> f12447_0_entry_LE(c, x56:0, c1, c2, x60:0, x61:0, x62:0) :|: c2 = 1 && (c1 = 1 && c = x55:0 - 1) && (x60:0 > 0 && x56:0 < x55:0 - 1 && x57:0 > -1 && x56:0 < x55:0 && x60:0 < x57:0 && x58:0 > -1 && x63:0 < x58:0)
f12447_0_entry_LE(x38:0, x39:0, x40:0, x41:0, x40:0, x40:0, x40:0) -> f12447_0_entry_LE(c3, x39:0, c4, x43:0, x44:0, x45:0, x46:0) :|: c4 = 1 && c3 = x38:0 - 1 && (x44:0 > 0 && x39:0 < x38:0 - 1 && x47:0 > 0 && x40:0 > -1 && x39:0 < x38:0 && x44:0 < x40:0 && x41:0 > -1 && x47:0 < x41:0)
f12447_0_entry_LE(i3668:0:0, i3510:0:0, o12256[LinkedList$Entry.previous]o12254:0:0, o12256[LinkedList$Entry.next]o12256:0:0, o12254[LinkedList$Entry.previous]o12256:0:0, o12256[LinkedList$Entry.previous]o12256:0:0, o12254[LinkedList$Entry.previous]o12254:0:0) -> f12447_0_entry_LE(c5, i3510:0:0, o12256[LinkedList$Entry.previous]o12618:0:0, o12256[LinkedList$Entry.next]o12256:0:0, o12618[LinkedList$Entry.previous]o12256:0:0, o12256[LinkedList$Entry.previous]o12256:0:0, o12618[LinkedList$Entry.previous]o12618:0:0) :|: c5 = i3668:0:0 - 1 && (o12618[LinkedList$Entry.previous]o12615:0:0 > -1 && i3668:0:0 - 1 > i3510:0:0 && o12618[LinkedList$Entry.previous]o12618:0:0 > o12618[LinkedList$Entry.previous]o12615:0:0 && i3668:0:0 > i3510:0:0 && o12618[LinkedList$Entry.previous]o12615:0:0 < o12254[LinkedList$Entry.previous]o12254:0:0 && o12256[LinkedList$Entry.previous]o12618:0:0 > o12256[LinkedList$Entry.previous]o12254:0:0 && o12256[LinkedList$Entry.previous]o12256:0:0 > 0 && o12618[LinkedList$Entry.previous]o12256:0:0 < o12254[LinkedList$Entry.previous]o12256:0:0 && o12256[LinkedList$Entry.next]o12256:0:0 > 0 && o12254[LinkedList$Entry.previous]o12254:0:0 > 0 && o12256[LinkedList$Entry.previous]o12254:0:0 > 0 && o12254[LinkedList$Entry.previous]o12256:0:0 > 0)
f12447_0_entry_LE(x48:0, x49:0, x50:0, x51:0, x50:0, x50:0, x50:0) -> f12447_0_entry_LE(c6, x49:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x48:0 - 1)))) && (x50:0 > -1 && x49:0 < x48:0 - 1 && x49:0 < x48:0 && x54:0 < x50:0 && x51:0 > -1 && x53:0 < x51:0)
f12447_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12447_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

----------------------------------------

(103)
Obligation:
Rules:
f12447_0_entry_LE(x48:0, x49:0, x50:0, x51:0, x50:0, x50:0, x50:0) -> f12447_0_entry_LE(c6, x49:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x48:0 - 1)))) && (x50:0 > -1 && x49:0 < x48:0 - 1 && x49:0 < x48:0 && x54:0 < x50:0 && x51:0 > -1 && x53:0 < x51:0)
f12447_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12447_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

----------------------------------------

(104) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f12447_0_entry_LE ] = -1*f12447_0_entry_LE_2 + f12447_0_entry_LE_1

The following rules are decreasing:
f12447_0_entry_LE(x48:0, x49:0, x50:0, x51:0, x50:0, x50:0, x50:0) -> f12447_0_entry_LE(c6, x49:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x48:0 - 1)))) && (x50:0 > -1 && x49:0 < x48:0 - 1 && x49:0 < x48:0 && x54:0 < x50:0 && x51:0 > -1 && x53:0 < x51:0)
f12447_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12447_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)

The following rules are bounded:
f12447_0_entry_LE(x48:0, x49:0, x50:0, x51:0, x50:0, x50:0, x50:0) -> f12447_0_entry_LE(c6, x49:0, c7, c8, c9, c10, c11) :|: c11 = 1 && (c10 = 1 && (c9 = 1 && (c8 = 1 && (c7 = 1 && c6 = x48:0 - 1)))) && (x50:0 > -1 && x49:0 < x48:0 - 1 && x49:0 < x48:0 && x54:0 < x50:0 && x51:0 > -1 && x53:0 < x51:0)
f12447_0_entry_LE(x30:0, x31:0, x32:0, x33:0, x32:0, x32:0, x32:0) -> f12447_0_entry_LE(c12, x31:0, c13, x35:0, c14, c15, c16) :|: c16 = 1 && (c15 = 1 && (c14 = 1 && (c13 = 1 && c12 = x30:0 - 1))) && (x36:0 > 0 && x31:0 < x30:0 - 1 && x32:0 > -1 && x31:0 < x30:0 && x37:0 < x32:0 && x33:0 > -1 && x36:0 < x33:0)


----------------------------------------

(105)
YES

----------------------------------------

(106)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveElement.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList: [header]
*javaUtilEx.LinkedList$Entry: [element, next]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(107) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 61 IRulesP rules:
f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(o11668sub0), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666) -> f12235_0_remove_FieldAccess(EOS(STATIC_12235), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(o11668sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666) :|: TRUE
f12235_0_remove_FieldAccess(EOS(STATIC_12235), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(o11668sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666) -> f12241_0_remove_EQ(EOS(STATIC_12241), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(o11668sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468, java.lang.Object(o11666sub-2081684468))), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666) :|: TRUE
f12241_0_remove_EQ(EOS(STATIC_12241), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(o11668sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468, java.lang.Object(o11666sub-2081684468))), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666) -> f12250_0_remove_EQ(EOS(STATIC_12250), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(o11668sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468, java.lang.Object(o11666sub-2081684468))), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666, o11668[LinkedList$Entry.next]o11664) :|: o11668[LinkedList$Entry.next]o11664 > 0
f12250_0_remove_EQ(EOS(STATIC_12250), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(o11668sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468, java.lang.Object(o11666sub-2081684468))), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666, o11668[LinkedList$Entry.next]o11664) -> f12258_0_remove_Load(EOS(STATIC_12258), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666, o11668[LinkedList$Entry.next]o11664) :|: TRUE
f12258_0_remove_Load(EOS(STATIC_12258), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666, o11668[LinkedList$Entry.next]o11664) -> f12267_0_remove_Load(EOS(STATIC_12267), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(javaUtilEx.Content(EOC)), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666, o11668[LinkedList$Entry.next]o11664) :|: TRUE
f12267_0_remove_Load(EOS(STATIC_12267), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(javaUtilEx.Content(EOC)), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666, o11668[LinkedList$Entry.next]o11664) -> f12276_0_remove_FieldAccess(EOS(STATIC_12276), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666, o11668[LinkedList$Entry.next]o11664) :|: TRUE
f12276_0_remove_FieldAccess(EOS(STATIC_12276), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666, o11668[LinkedList$Entry.next]o11664) -> f12284_0_remove_FieldAccess(EOS(STATIC_12284), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666) :|: o11666[LinkedList$Entry.next]o11668 > 0 && o11668[LinkedList$Entry.next]o11666 > 0
f12276_0_remove_FieldAccess(EOS(STATIC_12276), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11960sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11960sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11960sub0), o11960[LinkedList$Entry.next]o11960, o11960[LinkedList$Entry.next]o11664, o11960[LinkedList$Entry.next]o11960, o11960[LinkedList$Entry.next]o11664) -> f12285_0_remove_FieldAccess(EOS(STATIC_12285), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11960sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11960sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11960sub0), o11960[LinkedList$Entry.next]o11664, o11960[LinkedList$Entry.next]o11960) :|: TRUE
f12284_0_remove_FieldAccess(EOS(STATIC_12284), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), o11666[LinkedList$Entry.next]o11969, o11666[LinkedList$Entry.next]o11664, o11969[LinkedList$Entry.next]o11664, o11969[LinkedList$Entry.next]o11666) -> f12294_0_remove_FieldAccess(EOS(STATIC_12294), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: o11971[LinkedList$Entry.next]o11664 < o11969[LinkedList$Entry.next]o11664 && o11969[LinkedList$Entry.next]o11664 >= 0 && o11971[LinkedList$Entry.next]o11666 < o11969[LinkedList$Entry.next]o11666 && o11969[LinkedList$Entry.next]o11666 >= 0
f12294_0_remove_FieldAccess(EOS(STATIC_12294), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f12304_0_remove_InvokeMethod(EOS(STATIC_12304), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), java.lang.Object(javaUtilEx.Content(EOC)), o119700, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: TRUE
f12304_0_remove_InvokeMethod(EOS(STATIC_12304), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), java.lang.Object(javaUtilEx.Content(EOC)), o119700, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f12313_0_equals_Load(EOS(STATIC_12313), java.lang.Object(javaUtilEx.Content(EOC)), o119700, java.lang.Object(o11666sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468, java.lang.Object(o11666sub-2081684468))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), java.lang.Object(o11971sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119700, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: i3594 > 1
f12304_0_remove_InvokeMethod(EOS(STATIC_12304), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), java.lang.Object(javaUtilEx.Content(EOC)), o119700, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f12313_1_equals_Load(EOS(STATIC_12313), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), java.lang.Object(javaUtilEx.Content(EOC)), o119700, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: i3594 > 1
f12313_0_equals_Load(EOS(STATIC_12313), java.lang.Object(javaUtilEx.Content(EOC)), o119700, java.lang.Object(o11666sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468, java.lang.Object(o11666sub-2081684468))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), java.lang.Object(o11971sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119700, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f14786_0_equals_Load(EOS(STATIC_14786), java.lang.Object(javaUtilEx.Content(EOC)), o119700, java.lang.Object(o11666sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468, java.lang.Object(o11666sub-2081684468))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940, java.lang.Object(o11971sub-2081594940))), java.lang.Object(o11971sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119700, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: TRUE
f13198_0_equals_Return(EOS(STATIC_13198), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11971sub-2081594940))), matching1, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f12475_0_equals_Return(EOS(STATIC_12475), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11971sub-2081594940))), 0, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: TRUE && matching1 = 0
f12475_0_equals_Return(EOS(STATIC_12475), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12443-2080822513, java.lang.Object(o12444sub-2080822513))), matching1, o12440[LinkedList$Entry.next]o12438, o12440[LinkedList$Entry.next]o12442, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440) -> f12490_0_remove_EQ(EOS(STATIC_12490), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12443-2080822513, java.lang.Object(o12444sub-2080822513))), 0, o12440[LinkedList$Entry.next]o12438, o12440[LinkedList$Entry.next]o12442, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440) :|: TRUE && matching1 = 0
f12490_0_remove_EQ(EOS(STATIC_12490), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12443-2080822513, java.lang.Object(o12444sub-2080822513))), matching1, o12440[LinkedList$Entry.next]o12438, o12440[LinkedList$Entry.next]o12442, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440) -> f12507_0_remove_Load(EOS(STATIC_12507), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12443-2080822513, java.lang.Object(o12444sub-2080822513))), o12440[LinkedList$Entry.next]o12438, o12440[LinkedList$Entry.next]o12442, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440) :|: TRUE && matching1 = 0
f12507_0_remove_Load(EOS(STATIC_12507), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12443-2080822513, java.lang.Object(o12444sub-2080822513))), o12440[LinkedList$Entry.next]o12438, o12440[LinkedList$Entry.next]o12442, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440) -> f12527_0_remove_FieldAccess(EOS(STATIC_12527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12443-2080822513, java.lang.Object(o12444sub-2080822513))), o12440[LinkedList$Entry.next]o12438, o12440[LinkedList$Entry.next]o12442, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440) :|: TRUE
f12527_0_remove_FieldAccess(EOS(STATIC_12527), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12443-2080822513, java.lang.Object(o12444sub-2080822513))), o12440[LinkedList$Entry.next]o12438, o12440[LinkedList$Entry.next]o12442, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440) -> f12550_0_remove_Store(EOS(STATIC_12550), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12444sub0), o12440[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440, o12440[LinkedList$Entry.next]o12444) :|: o12440[LinkedList$Entry.next]o12444 > o12440[LinkedList$Entry.next]o12442 && o12440[LinkedList$Entry.next]o12442 >= 0
f12550_0_remove_Store(EOS(STATIC_12550), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12444sub0), o12440[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440, o12440[LinkedList$Entry.next]o12444) -> f12575_0_remove_JMP(EOS(STATIC_12575), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12444sub0), o12440[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440, o12440[LinkedList$Entry.next]o12444) :|: TRUE
f12575_0_remove_JMP(EOS(STATIC_12575), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12444sub0), o12440[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440, o12440[LinkedList$Entry.next]o12444) -> f12596_0_remove_Load(EOS(STATIC_12596), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12444sub0), o12440[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440, o12440[LinkedList$Entry.next]o12444) :|: TRUE
f12596_0_remove_Load(EOS(STATIC_12596), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12444sub0), o12440[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440, o12440[LinkedList$Entry.next]o12444) -> f12223_0_remove_Load(EOS(STATIC_12223), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12439133320689, java.lang.Object(o12440sub133320689)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12444sub0), o12440[LinkedList$Entry.next]o12444, o12440[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12438, o12444[LinkedList$Entry.next]o12440) :|: TRUE
f12223_0_remove_Load(EOS(STATIC_12223), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666) -> f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11668sub0), java.lang.Object(o11668sub0), o11666[LinkedList$Entry.next]o11668, o11666[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11664, o11668[LinkedList$Entry.next]o11666) :|: TRUE
f13217_0_equals_Return(EOS(STATIC_13217), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16656sub-2081594940), java.lang.Object(o11971sub-2081594940))), matching1, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f12475_0_equals_Return(EOS(STATIC_12475), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16656sub-2081594940), java.lang.Object(o11971sub-2081594940))), 0, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: TRUE && matching1 = 0
f13376_0_equals_Return(EOS(STATIC_13376), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11971sub-2081594940))), matching1, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f12667_0_equals_Return(EOS(STATIC_12667), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11971sub-2081594940))), 0, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: TRUE && matching1 = 0
f12667_0_equals_Return(EOS(STATIC_12667), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub-2079929713))), i3907, o13331[LinkedList$Entry.next]o13329, o13331[LinkedList$Entry.next]o13333, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331) -> f12681_0_remove_EQ(EOS(STATIC_12681), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub-2079929713))), i3907, o13331[LinkedList$Entry.next]o13329, o13331[LinkedList$Entry.next]o13333, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331) :|: TRUE
f12681_0_remove_EQ(EOS(STATIC_12681), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub-2079929713))), matching1, o13331[LinkedList$Entry.next]o13329, o13331[LinkedList$Entry.next]o13333, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331) -> f12693_0_remove_EQ(EOS(STATIC_12693), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub-2079929713))), 0, o13331[LinkedList$Entry.next]o13329, o13331[LinkedList$Entry.next]o13333, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331) :|: TRUE && matching1 = 0
f12693_0_remove_EQ(EOS(STATIC_12693), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub-2079929713))), matching1, o13331[LinkedList$Entry.next]o13329, o13331[LinkedList$Entry.next]o13333, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331) -> f12710_0_remove_Load(EOS(STATIC_12710), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub-2079929713))), o13331[LinkedList$Entry.next]o13329, o13331[LinkedList$Entry.next]o13333, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331) :|: TRUE && matching1 = 0
f12710_0_remove_Load(EOS(STATIC_12710), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub-2079929713))), o13331[LinkedList$Entry.next]o13329, o13331[LinkedList$Entry.next]o13333, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331) -> f12729_0_remove_FieldAccess(EOS(STATIC_12729), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub-2079929713))), o13331[LinkedList$Entry.next]o13329, o13331[LinkedList$Entry.next]o13333, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331) :|: TRUE
f12729_0_remove_FieldAccess(EOS(STATIC_12729), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub-2079929713))), o13331[LinkedList$Entry.next]o13329, o13331[LinkedList$Entry.next]o13333, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331) -> f12749_0_remove_Store(EOS(STATIC_12749), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub0), o13331[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331, o13331[LinkedList$Entry.next]o13335) :|: o13331[LinkedList$Entry.next]o13335 > o13331[LinkedList$Entry.next]o13333 && o13331[LinkedList$Entry.next]o13333 >= 0
f12749_0_remove_Store(EOS(STATIC_12749), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub0), o13331[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331, o13331[LinkedList$Entry.next]o13335) -> f12550_0_remove_Store(EOS(STATIC_12550), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13330135106289, java.lang.Object(o13331sub135106289)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub0), o13331[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13329, o13335[LinkedList$Entry.next]o13331, o13331[LinkedList$Entry.next]o13335) :|: TRUE
f13393_0_equals_Return(EOS(STATIC_13393), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11971sub-2081594940))), matching1, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f12667_0_equals_Return(EOS(STATIC_12667), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11971sub-2081594940))), 1, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: TRUE && matching1 = 1
f12285_0_remove_FieldAccess(EOS(STATIC_12285), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), o11973[LinkedList$Entry.next]o11664, o11973[LinkedList$Entry.next]o11973) -> f12295_0_remove_FieldAccess(EOS(STATIC_12295), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: o11975[LinkedList$Entry.next]o11664 < o11973[LinkedList$Entry.next]o11664 && o11973[LinkedList$Entry.next]o11664 >= 0 && o11975[LinkedList$Entry.next]o11973 < o11973[LinkedList$Entry.next]o11973 && o11973[LinkedList$Entry.next]o11973 >= 0
f12295_0_remove_FieldAccess(EOS(STATIC_12295), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f12305_0_remove_InvokeMethod(EOS(STATIC_12305), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), java.lang.Object(javaUtilEx.Content(EOC)), o119740, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: TRUE
f12305_0_remove_InvokeMethod(EOS(STATIC_12305), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), java.lang.Object(javaUtilEx.Content(EOC)), o119740, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f12314_0_equals_Load(EOS(STATIC_12314), java.lang.Object(javaUtilEx.Content(EOC)), o119740, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974131688663, java.lang.Object(o11975sub131688663))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), java.lang.Object(o11975sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119740, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: i3594 > 1
f12305_0_remove_InvokeMethod(EOS(STATIC_12305), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), java.lang.Object(javaUtilEx.Content(EOC)), o119740, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f12314_1_equals_Load(EOS(STATIC_12314), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), java.lang.Object(javaUtilEx.Content(EOC)), o119740, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: i3594 > 1
f12314_0_equals_Load(EOS(STATIC_12314), java.lang.Object(javaUtilEx.Content(EOC)), o119740, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974131688663, java.lang.Object(o11975sub131688663))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), java.lang.Object(o11975sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119740, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f14856_0_equals_Load(EOS(STATIC_14856), java.lang.Object(javaUtilEx.Content(EOC)), o119740, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974131688663, java.lang.Object(o11975sub131688663))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165, java.lang.Object(o11975sub-2081594165))), java.lang.Object(o11975sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119740, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: TRUE
f13199_0_equals_Return(EOS(STATIC_13199), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-2081594165))), matching1, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f12477_0_equals_Return(EOS(STATIC_12477), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-2081594165))), 0, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: TRUE && matching1 = 0
f12477_0_equals_Return(EOS(STATIC_12477), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12480133328439, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-1947490261, java.lang.Object(o12483sub-1947490261)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-2080818700, java.lang.Object(o12483sub-2080818700))), matching1, o12483[LinkedList$Entry.next]o12479, o12483[LinkedList$Entry.next]o12481) -> f12491_0_remove_EQ(EOS(STATIC_12491), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12480133328439, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-1947490261, java.lang.Object(o12483sub-1947490261)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-2080818700, java.lang.Object(o12483sub-2080818700))), 0, o12483[LinkedList$Entry.next]o12479, o12483[LinkedList$Entry.next]o12481) :|: TRUE && matching1 = 0
f12491_0_remove_EQ(EOS(STATIC_12491), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12480133328439, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-1947490261, java.lang.Object(o12483sub-1947490261)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-2080818700, java.lang.Object(o12483sub-2080818700))), matching1, o12483[LinkedList$Entry.next]o12479, o12483[LinkedList$Entry.next]o12481) -> f12508_0_remove_Load(EOS(STATIC_12508), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12480133328439, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-1947490261, java.lang.Object(o12483sub-1947490261)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-2080818700, java.lang.Object(o12483sub-2080818700))), o12483[LinkedList$Entry.next]o12479, o12483[LinkedList$Entry.next]o12481) :|: TRUE && matching1 = 0
f12508_0_remove_Load(EOS(STATIC_12508), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12480133328439, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-1947490261, java.lang.Object(o12483sub-1947490261)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-2080818700, java.lang.Object(o12483sub-2080818700))), o12483[LinkedList$Entry.next]o12479, o12483[LinkedList$Entry.next]o12481) -> f12528_0_remove_FieldAccess(EOS(STATIC_12528), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12480133328439, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-1947490261, java.lang.Object(o12483sub-1947490261)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-2080818700, java.lang.Object(o12483sub-2080818700))), o12483[LinkedList$Entry.next]o12479, o12483[LinkedList$Entry.next]o12481) :|: TRUE
f12528_0_remove_FieldAccess(EOS(STATIC_12528), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12480133328439, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-1947490261, java.lang.Object(o12483sub-1947490261)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-2080818700, java.lang.Object(o12483sub-2080818700))), o12483[LinkedList$Entry.next]o12479, o12483[LinkedList$Entry.next]o12481) -> f12551_0_remove_Store(EOS(STATIC_12551), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12480133328439, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-1947490261, java.lang.Object(o12483sub-1947490261)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12483sub0), o12483[LinkedList$Entry.next]o12479, o12483[LinkedList$Entry.next]o12481) :|: TRUE
f12551_0_remove_Store(EOS(STATIC_12551), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12480133328439, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-1947490261, java.lang.Object(o12483sub-1947490261)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12483sub0), o12483[LinkedList$Entry.next]o12479, o12483[LinkedList$Entry.next]o12481) -> f12749_0_remove_Store(EOS(STATIC_12749), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12480133328439, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12482-1947490261, java.lang.Object(o12483sub-1947490261)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12483sub0), o12481[LinkedList$Entry.next]o12479, o12483[LinkedList$Entry.next]o12479, o12483[LinkedList$Entry.next]o12481, o12481[LinkedList$Entry.next]o12483) :|: o12481[LinkedList$Entry.next]o12483 = 1
f13218_0_equals_Return(EOS(STATIC_13218), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-1949995836), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-2081594165), java.lang.Object(o11975sub-2081594165))), matching1, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f12477_0_equals_Return(EOS(STATIC_12477), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-1949995836), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-2081594165), java.lang.Object(o11975sub-2081594165))), 0, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: TRUE && matching1 = 0
f13377_0_equals_Return(EOS(STATIC_13377), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-2081594165))), matching1, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f12669_0_equals_Return(EOS(STATIC_12669), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-2081594165))), 0, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: TRUE && matching1 = 0
f12669_0_equals_Return(EOS(STATIC_12669), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-2079926923))), i3921, o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) -> f12682_0_remove_EQ(EOS(STATIC_12682), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-2079926923))), i3921, o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) :|: TRUE
f12682_0_remove_EQ(EOS(STATIC_12682), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-2079926923))), matching1, o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) -> f12695_0_remove_EQ(EOS(STATIC_12695), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-2079926923))), 0, o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) :|: TRUE && matching1 = 0
f12695_0_remove_EQ(EOS(STATIC_12695), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-2079926923))), matching1, o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) -> f12712_0_remove_Load(EOS(STATIC_12712), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-2079926923))), o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) :|: TRUE && matching1 = 0
f12712_0_remove_Load(EOS(STATIC_12712), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-2079926923))), o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) -> f12731_0_remove_FieldAccess(EOS(STATIC_12731), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-2079926923))), o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) :|: TRUE
f12731_0_remove_FieldAccess(EOS(STATIC_12731), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-2079926923))), o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) -> f12751_0_remove_Store(EOS(STATIC_12751), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub0), o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) :|: TRUE
f12751_0_remove_Store(EOS(STATIC_12751), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub0), o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) -> f12767_0_remove_JMP(EOS(STATIC_12767), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub0), o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) :|: TRUE
f12767_0_remove_JMP(EOS(STATIC_12767), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub0), o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) -> f12774_0_remove_Load(EOS(STATIC_12774), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub0), o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) :|: TRUE
f12774_0_remove_Load(EOS(STATIC_12774), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub0), o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) -> f12223_0_remove_Load(EOS(STATIC_12223), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13359135111993, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub-1944814930)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub0), o13360[LinkedList$Entry.next]o13362, o13360[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13358, o13362[LinkedList$Entry.next]o13360) :|: o13360[LinkedList$Entry.next]o13362 = 1
f13394_0_equals_Return(EOS(STATIC_13394), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-2081594165))), matching1, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f12669_0_equals_Return(EOS(STATIC_12669), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-2081594165))), 1, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: TRUE && matching1 = 1
f12313_1_equals_Load(EOS(STATIC_12313), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11971sub-2081594940))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f13198_0_equals_Return(EOS(STATIC_13198), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11971sub-2081594940))), 0, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: TRUE
f12313_1_equals_Load(EOS(STATIC_12313), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16656sub-2081594940), java.lang.Object(o11971sub-2081594940))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16656sub0), o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f13217_0_equals_Return(EOS(STATIC_13217), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16656sub-2081594940), java.lang.Object(o11971sub-2081594940))), 0, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: TRUE
f12313_1_equals_Load(EOS(STATIC_12313), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11971sub-2081594940))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f13376_0_equals_Return(EOS(STATIC_13376), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11971sub-2081594940))), 0, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: TRUE
f12313_1_equals_Load(EOS(STATIC_12313), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11971sub-2081594940))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) -> f13393_0_equals_Return(EOS(STATIC_13393), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(o11666sub131598329)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11971sub-2081594940))), 1, o11666[LinkedList$Entry.next]o11664, o11666[LinkedList$Entry.next]o11969, o11971[LinkedList$Entry.next]o11664, o11971[LinkedList$Entry.next]o11666) :|: TRUE
f12314_1_equals_Load(EOS(STATIC_12314), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-2081594165))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f13199_0_equals_Return(EOS(STATIC_13199), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-2081594165))), 0, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: TRUE
f12314_1_equals_Load(EOS(STATIC_12314), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-1949995836), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-2081594165), java.lang.Object(o11975sub-2081594165))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16670sub0), o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f13218_0_equals_Return(EOS(STATIC_13218), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-1949995836), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-2081594165), java.lang.Object(o11975sub-2081594165))), 0, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: TRUE
f12314_1_equals_Load(EOS(STATIC_12314), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-2081594165))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f13377_0_equals_Return(EOS(STATIC_13377), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-2081594165))), 0, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: TRUE
f12314_1_equals_Load(EOS(STATIC_12314), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-2081594165))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) -> f13394_0_equals_Return(EOS(STATIC_13394), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-1949995836)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-2081594165))), 1, o11975[LinkedList$Entry.next]o11664, o11975[LinkedList$Entry.next]o11973) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11971sub-2081594940:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11971sub-2081594940:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11666:0) -> f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13335sub0:0), java.lang.Object(o13335sub0:0), o13331[LinkedList$Entry.next]o13335:0, o11666[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11666:0) :|: o11668[LinkedList$Entry.next]o11664:0 > 0 && o11668[LinkedList$Entry.next]o11666:0 > 0 && o11666[LinkedList$Entry.next]o11668:0 > 0 && o11971[LinkedList$Entry.next]o11664:0 < o11668[LinkedList$Entry.next]o11664:0 && o11971[LinkedList$Entry.next]o11666:0 < o11668[LinkedList$Entry.next]o11666:0 && i3594:0 > 1 && o13331[LinkedList$Entry.next]o13335:0 > o11666[LinkedList$Entry.next]o11668:0
f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11971sub-2081594940:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11971sub-2081594940:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11666:0) -> f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12444sub0:0), java.lang.Object(o12444sub0:0), o12440[LinkedList$Entry.next]o12444:0, o11666[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11666:0) :|: o11668[LinkedList$Entry.next]o11664:0 > 0 && o11668[LinkedList$Entry.next]o11666:0 > 0 && o11666[LinkedList$Entry.next]o11668:0 > 0 && o11971[LinkedList$Entry.next]o11664:0 < o11668[LinkedList$Entry.next]o11664:0 && o12440[LinkedList$Entry.next]o12444:0 > o11666[LinkedList$Entry.next]o11668:0 && i3594:0 > 1 && o11971[LinkedList$Entry.next]o11666:0 < o11668[LinkedList$Entry.next]o11666:0
f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-2081594165:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-2081594165:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11668:0) -> f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12483sub0:0), java.lang.Object(o12483sub0:0), 1, o12481[LinkedList$Entry.next]o12479:0, o11975[LinkedList$Entry.next]o11664:0, o11975[LinkedList$Entry.next]o11973:0) :|: o11666[LinkedList$Entry.next]o11664:0 > 0 && o11975[LinkedList$Entry.next]o11664:0 < o11666[LinkedList$Entry.next]o11664:0 && o11975[LinkedList$Entry.next]o11973:0 < o11666[LinkedList$Entry.next]o11668:0 && i3594:0 > 1 && o11666[LinkedList$Entry.next]o11668:0 > -1
f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-2081594165:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-2081594165:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11668:0) -> f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13362sub0:0), java.lang.Object(o13362sub0:0), 1, o13360[LinkedList$Entry.next]o13358:0, o11975[LinkedList$Entry.next]o11664:0, o11975[LinkedList$Entry.next]o11973:0) :|: o11666[LinkedList$Entry.next]o11664:0 > 0 && o11975[LinkedList$Entry.next]o11664:0 < o11666[LinkedList$Entry.next]o11664:0 && o11975[LinkedList$Entry.next]o11973:0 < o11666[LinkedList$Entry.next]o11668:0 && i3594:0 > 1 && o11666[LinkedList$Entry.next]o11668:0 > -1
f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16656sub-2081594940:0), java.lang.Object(o11971sub-2081594940:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16656sub-2081594940:0), java.lang.Object(o11971sub-2081594940:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11666:0) -> f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12444sub0:0), java.lang.Object(o12444sub0:0), o12440[LinkedList$Entry.next]o12444:0, o11666[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11666:0) :|: o11668[LinkedList$Entry.next]o11664:0 > 0 && o11668[LinkedList$Entry.next]o11666:0 > 0 && o11666[LinkedList$Entry.next]o11668:0 > 0 && o11971[LinkedList$Entry.next]o11664:0 < o11668[LinkedList$Entry.next]o11664:0 && o12440[LinkedList$Entry.next]o12444:0 > o11666[LinkedList$Entry.next]o11668:0 && i3594:0 > 1 && o11971[LinkedList$Entry.next]o11666:0 < o11668[LinkedList$Entry.next]o11666:0
f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-1949995836:0), java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-2081594165:0), java.lang.Object(o11975sub-2081594165:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-2081594165:0), java.lang.Object(o11975sub-2081594165:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11668:0) -> f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16670sub-1949995836:0), java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12483sub0:0), java.lang.Object(o12483sub0:0), 1, o12481[LinkedList$Entry.next]o12479:0, o11975[LinkedList$Entry.next]o11664:0, o11975[LinkedList$Entry.next]o11973:0) :|: o11666[LinkedList$Entry.next]o11664:0 > 0 && o11975[LinkedList$Entry.next]o11664:0 < o11666[LinkedList$Entry.next]o11664:0 && o11975[LinkedList$Entry.next]o11973:0 < o11666[LinkedList$Entry.next]o11668:0 && i3594:0 > 1 && o11666[LinkedList$Entry.next]o11668:0 > -1
Removed following non-SCC rules:
f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940:0, java.lang.Object(o11971sub-2081594940:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940:0, java.lang.Object(o11971sub-2081594940:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11666:0) -> f14786_0_equals_Load(EOS(STATIC_14786), java.lang.Object(javaUtilEx.Content(EOC)), o119700:0, java.lang.Object(o11666sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468:0, java.lang.Object(o11666sub-2081684468:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11970-2081594940:0, java.lang.Object(o11971sub-2081594940:0))), java.lang.Object(o11971sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119700:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11668:0, o11971[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11666:0) :|: o11668[LinkedList$Entry.next]o11664:0 > 0 && o11668[LinkedList$Entry.next]o11666:0 > 0 && o11971[LinkedList$Entry.next]o11664:0 < o11668[LinkedList$Entry.next]o11664:0 && o11971[LinkedList$Entry.next]o11666:0 < o11668[LinkedList$Entry.next]o11666:0 && i3594:0 > 1 && o11666[LinkedList$Entry.next]o11668:0 > 0
f12230_0_remove_Load(EOS(STATIC_12230), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836:0, java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165:0, java.lang.Object(o11975sub-2081594165:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165:0, java.lang.Object(o11975sub-2081594165:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11668:0) -> f14856_0_equals_Load(EOS(STATIC_14856), java.lang.Object(javaUtilEx.Content(EOC)), o119740:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665-2081684468:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974131688663:0, java.lang.Object(o11975sub131688663:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-2081594165:0, java.lang.Object(o11975sub-2081594165:0))), java.lang.Object(o11975sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11974-1949995836:0, java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119740:0, o11975[LinkedList$Entry.next]o11664:0, o11975[LinkedList$Entry.next]o11973:0) :|: o11666[LinkedList$Entry.next]o11664:0 > 0 && o11975[LinkedList$Entry.next]o11664:0 < o11666[LinkedList$Entry.next]o11664:0 && o11975[LinkedList$Entry.next]o11973:0 < o11666[LinkedList$Entry.next]o11668:0 && i3594:0 > 1 && o11666[LinkedList$Entry.next]o11668:0 > -1
Filtered constant ground arguments:
   f12230_0_remove_Load(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f12230_0_remove_Load(x2, x4, x5, x6, x7, x8, x9)
   EOS(x1) -> EOS
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f12230_0_remove_Load(x1, x2, x3, x4, x5, x6, x7) -> f12230_0_remove_Load(x1, x3, x4, x5, x6, x7)
Finished conversion. Obtained 6 rules.P rules:
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11971sub-2081594940:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11666:0, o11665131598329:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(o13335sub0:0), o13331[LinkedList$Entry.next]o13335:0, o11666[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11666:0, o11665131598329:0) :|: o11668[LinkedList$Entry.next]o11666:0 > 0 && o11668[LinkedList$Entry.next]o11664:0 > 0 && o11666[LinkedList$Entry.next]o11668:0 > 0 && o11971[LinkedList$Entry.next]o11664:0 < o11668[LinkedList$Entry.next]o11664:0 && o11971[LinkedList$Entry.next]o11666:0 < o11668[LinkedList$Entry.next]o11666:0 && o13331[LinkedList$Entry.next]o13335:0 > o11666[LinkedList$Entry.next]o11668:0 && i3594:0 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11971sub-2081594940:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11666:0, o11665131598329:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(o12444sub0:0), o12440[LinkedList$Entry.next]o12444:0, o11666[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11666:0, o11665131598329:0) :|: o11668[LinkedList$Entry.next]o11666:0 > 0 && o11668[LinkedList$Entry.next]o11664:0 > 0 && o11666[LinkedList$Entry.next]o11668:0 > 0 && o11971[LinkedList$Entry.next]o11664:0 < o11668[LinkedList$Entry.next]o11664:0 && o12440[LinkedList$Entry.next]o12444:0 > o11666[LinkedList$Entry.next]o11668:0 && o11971[LinkedList$Entry.next]o11666:0 < o11668[LinkedList$Entry.next]o11666:0 && i3594:0 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11975sub-2081594165:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11668:0, o11665131598329:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(o12483sub0:0), 1, o12481[LinkedList$Entry.next]o12479:0, o11975[LinkedList$Entry.next]o11664:0, o11975[LinkedList$Entry.next]o11973:0, o11665131598329:0) :|: o11975[LinkedList$Entry.next]o11664:0 < o11666[LinkedList$Entry.next]o11664:0 && o11666[LinkedList$Entry.next]o11664:0 > 0 && o11975[LinkedList$Entry.next]o11973:0 < o11666[LinkedList$Entry.next]o11668:0 && o11666[LinkedList$Entry.next]o11668:0 > -1 && i3594:0 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11975sub-2081594165:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11668:0, o11665131598329:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(o13362sub0:0), 1, o13360[LinkedList$Entry.next]o13358:0, o11975[LinkedList$Entry.next]o11664:0, o11975[LinkedList$Entry.next]o11973:0, o11665131598329:0) :|: o11975[LinkedList$Entry.next]o11664:0 < o11666[LinkedList$Entry.next]o11664:0 && o11666[LinkedList$Entry.next]o11664:0 > 0 && o11975[LinkedList$Entry.next]o11973:0 < o11666[LinkedList$Entry.next]o11668:0 && o11666[LinkedList$Entry.next]o11668:0 > -1 && i3594:0 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o16656sub-2081594940:0), java.lang.Object(o11971sub-2081594940:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11666:0, o11665131598329:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(o12444sub0:0), o12440[LinkedList$Entry.next]o12444:0, o11666[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11666:0, o11665131598329:0) :|: o11668[LinkedList$Entry.next]o11666:0 > 0 && o11668[LinkedList$Entry.next]o11664:0 > 0 && o11666[LinkedList$Entry.next]o11668:0 > 0 && o11971[LinkedList$Entry.next]o11664:0 < o11668[LinkedList$Entry.next]o11664:0 && o12440[LinkedList$Entry.next]o12444:0 > o11666[LinkedList$Entry.next]o11668:0 && o11971[LinkedList$Entry.next]o11666:0 < o11668[LinkedList$Entry.next]o11666:0 && i3594:0 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o16670sub-1949995836:0), java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o16670sub-2081594165:0), java.lang.Object(o11975sub-2081594165:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11664:0, o11666[LinkedList$Entry.next]o11668:0, o11665131598329:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o16670sub-1949995836:0), java.lang.Object(o11975sub-1949995836:0)))))))))), java.lang.Object(o12483sub0:0), 1, o12481[LinkedList$Entry.next]o12479:0, o11975[LinkedList$Entry.next]o11664:0, o11975[LinkedList$Entry.next]o11973:0, o11665131598329:0) :|: o11975[LinkedList$Entry.next]o11664:0 < o11666[LinkedList$Entry.next]o11664:0 && o11666[LinkedList$Entry.next]o11664:0 > 0 && o11975[LinkedList$Entry.next]o11973:0 < o11666[LinkedList$Entry.next]o11668:0 && o11666[LinkedList$Entry.next]o11668:0 > -1 && i3594:0 > 1

----------------------------------------

(108)
Obligation:
Rules:
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11971sub-2081594940:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11666:0, o11665131598329:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(o13335sub0:0), o13331[LinkedList$Entry.next]o13335:0, o11666[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11666:0, o11665131598329:0) :|: o11668[LinkedList$Entry.next]o11666:0 > 0 && o11668[LinkedList$Entry.next]o11664:0 > 0 && o11666[LinkedList$Entry.next]o11668:0 > 0 && o11971[LinkedList$Entry.next]o11664:0 < o11668[LinkedList$Entry.next]o11664:0 && o11971[LinkedList$Entry.next]o11666:0 < o11668[LinkedList$Entry.next]o11666:0 && o13331[LinkedList$Entry.next]o13335:0 > o11666[LinkedList$Entry.next]o11668:0 && i3594:0 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x8 > x3 && x10 < x6 && x11 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14))), x15, x16, x16, x15, x12) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(x17), 1, x18, x19, x20, x12) :|: x19 < x16 && x16 > 0 && x20 < x15 && x15 > -1 && x21 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x23)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24))), x25, x26, x26, x25, x22) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x23)))))))))), java.lang.Object(x27), 1, x28, x29, x30, x22) :|: x29 < x26 && x26 > 0 && x30 < x25 && x25 > -1 && x31 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x32, java.lang.Object(x33)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x34), java.lang.Object(x35))), x36, x37, x38, x39, x32) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x32, java.lang.Object(x33)))))))), java.lang.Object(x40), x41, x37, x42, x43, x32) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x41 > x36 && x43 < x39 && x44 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x45) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

----------------------------------------

(109) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(110)
Obligation:
Rules:
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11971sub-2081594940:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11666:0, o11665131598329:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(o13335sub0:0), o13331[LinkedList$Entry.next]o13335:0, o11666[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11666:0, o11665131598329:0) :|: o11668[LinkedList$Entry.next]o11666:0 > 0 && o11668[LinkedList$Entry.next]o11664:0 > 0 && o11666[LinkedList$Entry.next]o11668:0 > 0 && o11971[LinkedList$Entry.next]o11664:0 < o11668[LinkedList$Entry.next]o11664:0 && o11971[LinkedList$Entry.next]o11666:0 < o11668[LinkedList$Entry.next]o11666:0 && o13331[LinkedList$Entry.next]o13335:0 > o11666[LinkedList$Entry.next]o11668:0 && i3594:0 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x8 > x3 && x10 < x6 && x11 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14))), x15, x16, x16, x15, x12) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(x17), 1, x18, x19, x20, x12) :|: x19 < x16 && x16 > 0 && x20 < x15 && x15 > -1 && x21 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x23)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24))), x25, x26, x26, x25, x22) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x23)))))))))), java.lang.Object(x27), 1, x28, x29, x30, x22) :|: x29 < x26 && x26 > 0 && x30 < x25 && x25 > -1 && x31 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x32, java.lang.Object(x33)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x34), java.lang.Object(x35))), x36, x37, x38, x39, x32) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x32, java.lang.Object(x33)))))))), java.lang.Object(x40), x41, x37, x42, x43, x32) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x41 > x36 && x43 < x39 && x44 > 1
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x45) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

----------------------------------------

(111) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11971sub-2081594940:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11666:0, o11665131598329:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(o13335sub0:0), o13331[LinkedList$Entry.next]o13335:0, o11666[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11666:0, o11665131598329:0) :|: o11668[LinkedList$Entry.next]o11666:0 > 0 && o11668[LinkedList$Entry.next]o11664:0 > 0 && o11666[LinkedList$Entry.next]o11668:0 > 0 && o11971[LinkedList$Entry.next]o11664:0 < o11668[LinkedList$Entry.next]o11664:0 && o11971[LinkedList$Entry.next]o11666:0 < o11668[LinkedList$Entry.next]o11666:0 && o13331[LinkedList$Entry.next]o13335:0 > o11666[LinkedList$Entry.next]o11668:0 && i3594:0 > 1
(2) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x8 > x3 && x10 < x6 && x11 > 1
(3) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14))), x15, x16, x16, x15, x12) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(x17), 1, x18, x19, x20, x12) :|: x19 < x16 && x16 > 0 && x20 < x15 && x15 > -1 && x21 > 1
(4) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x23)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24))), x25, x26, x26, x25, x22) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x23)))))))))), java.lang.Object(x27), 1, x28, x29, x30, x22) :|: x29 < x26 && x26 > 0 && x30 < x25 && x25 > -1 && x31 > 1
(5) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x32, java.lang.Object(x33)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x34), java.lang.Object(x35))), x36, x37, x38, x39, x32) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x32, java.lang.Object(x33)))))))), java.lang.Object(x40), x41, x37, x42, x43, x32) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x41 > x36 && x43 < x39 && x44 > 1
(6) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x45) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (5)
(4) -> (1), (2), (4), (5), (6)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (2), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(112)
Obligation:

Termination digraph:
Nodes:
(1) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11971sub-2081594940:0))), o11666[LinkedList$Entry.next]o11668:0, o11666[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11664:0, o11668[LinkedList$Entry.next]o11666:0, o11665131598329:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0, java.lang.Object(o11666sub131598329:0)))))))), java.lang.Object(o13335sub0:0), o13331[LinkedList$Entry.next]o13335:0, o11666[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11664:0, o11971[LinkedList$Entry.next]o11666:0, o11665131598329:0) :|: o11668[LinkedList$Entry.next]o11666:0 > 0 && o11668[LinkedList$Entry.next]o11664:0 > 0 && o11666[LinkedList$Entry.next]o11668:0 > 0 && o11971[LinkedList$Entry.next]o11664:0 < o11668[LinkedList$Entry.next]o11664:0 && o11971[LinkedList$Entry.next]o11666:0 < o11668[LinkedList$Entry.next]o11666:0 && o13331[LinkedList$Entry.next]o13335:0 > o11666[LinkedList$Entry.next]o11668:0 && i3594:0 > 1
(2) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x5, x6, x) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(x1)))))))), java.lang.Object(x7), x8, x4, x9, x10, x) :|: x6 > 0 && x5 > 0 && x3 > 0 && x9 < x5 && x8 > x3 && x10 < x6 && x11 > 1
(3) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14))), x15, x16, x16, x15, x12) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13)))))))))), java.lang.Object(x17), 1, x18, x19, x20, x12) :|: x19 < x16 && x16 > 0 && x20 < x15 && x15 > -1 && x21 > 1
(4) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x32, java.lang.Object(x33)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x34), java.lang.Object(x35))), x36, x37, x38, x39, x32) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x32, java.lang.Object(x33)))))))), java.lang.Object(x40), x41, x37, x42, x43, x32) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x41 > x36 && x43 < x39 && x44 > 1
(5) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x23)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24))), x25, x26, x26, x25, x22) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x23)))))))))), java.lang.Object(x27), 1, x28, x29, x30, x22) :|: x29 < x26 && x26 > 0 && x30 < x25 && x25 > -1 && x31 > 1
(6) f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x45) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (4), (5), (6)
(3) -> (1), (2), (3), (4)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (2), (4), (5), (6)
(6) -> (1), (2), (4), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(113) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(114)
Obligation:
Rules:
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x14:0))), x15:0, x16:0, x16:0, x15:0, x12:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x12:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x13:0)))))))))), java.lang.Object(x17:0), 1, x18:0, x19:0, x20:0, x12:0) :|: x15:0 > -1 && x21:0 > 1 && x20:0 < x15:0 && x16:0 > 0 && x19:0 < x16:0
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46:0), java.lang.Object(x47:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48:0), java.lang.Object(x49:0))), x50:0, x51:0, x51:0, x50:0, x45:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46:0), java.lang.Object(x47:0)))))))))), java.lang.Object(x52:0), 1, x53:0, x54:0, x55:0, x45:0) :|: x50:0 > -1 && x56:0 > 1 && x55:0 < x50:0 && x51:0 > 0 && x54:0 < x51:0
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x32:0, java.lang.Object(x33:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x34:0), java.lang.Object(x35:0))), x36:0, x37:0, x38:0, x39:0, x32:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x32:0, java.lang.Object(x33:0)))))))), java.lang.Object(x40:0), x41:0, x37:0, x42:0, x43:0, x32:0) :|: x43:0 < x39:0 && x44:0 > 1 && x41:0 > x36:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2:0))), x3:0, x4:0, x5:0, x6:0, x:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(x1:0)))))))), java.lang.Object(x7:0), x8:0, x4:0, x9:0, x10:0, x:0) :|: x6:0 > x10:0 && x11:0 > 1 && x8:0 > x3:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x23:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x24:0))), x25:0, x26:0, x26:0, x25:0, x22:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x22:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x23:0)))))))))), java.lang.Object(x27:0), 1, x28:0, x29:0, x30:0, x22:0) :|: x25:0 > -1 && x31:0 > 1 && x30:0 < x25:0 && x26:0 > 0 && x29:0 < x26:0
f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0:0, java.lang.Object(o11666sub131598329:0:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11971sub-2081594940:0:0))), o11666[LinkedList$Entry.next]o11668:0:0, o11666[LinkedList$Entry.next]o11664:0:0, o11668[LinkedList$Entry.next]o11664:0:0, o11668[LinkedList$Entry.next]o11666:0:0, o11665131598329:0:0) -> f12230_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11665131598329:0:0, java.lang.Object(o11666sub131598329:0:0)))))))), java.lang.Object(o13335sub0:0:0), o13331[LinkedList$Entry.next]o13335:0:0, o11666[LinkedList$Entry.next]o11664:0:0, o11971[LinkedList$Entry.next]o11664:0:0, o11971[LinkedList$Entry.next]o11666:0:0, o11665131598329:0:0) :|: o13331[LinkedList$Entry.next]o13335:0:0 > o11666[LinkedList$Entry.next]o11668:0:0 && i3594:0:0 > 1 && o11971[LinkedList$Entry.next]o11666:0:0 < o11668[LinkedList$Entry.next]o11666:0:0 && o11971[LinkedList$Entry.next]o11664:0:0 < o11668[LinkedList$Entry.next]o11664:0:0 && o11666[LinkedList$Entry.next]o11668:0:0 > 0 && o11668[LinkedList$Entry.next]o11664:0:0 > 0 && o11668[LinkedList$Entry.next]o11666:0:0 > 0

----------------------------------------

(115) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12230_0_remove_Load(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
NULL()
javaUtilEx.Content()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(116)
Obligation:
Rules:
f12230_0_remove_Load(c, c1, x15:0, x16:0, x16:0, x15:0, x12:0) -> f12230_0_remove_Load(c2, c3, c4, x18:0, x19:0, x20:0, x12:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x15:0 > -1 && x21:0 > 1 && x20:0 < x15:0 && x16:0 > 0 && x19:0 < x16:0)
f12230_0_remove_Load(c10, c11, x36:0, x37:0, x38:0, x39:0, x32:0) -> f12230_0_remove_Load(c12, c13, x41:0, x37:0, x42:0, x43:0, x32:0) :|: c13 = 0 && (c12 = 0 && (c11 = 0 && c10 = 0)) && (x43:0 < x39:0 && x44:0 > 1 && x41:0 > x36:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0)
f12230_0_remove_Load(c14, c15, x3:0, x4:0, x5:0, x6:0, x:0) -> f12230_0_remove_Load(c16, c17, x8:0, x4:0, x9:0, x10:0, x:0) :|: c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)) && (x6:0 > x10:0 && x11:0 > 1 && x8:0 > x3:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0)
f12230_0_remove_Load(c23, c24, o11666[LinkedList$Entry.next]o11668:0:0, o11666[LinkedList$Entry.next]o11664:0:0, o11668[LinkedList$Entry.next]o11664:0:0, o11668[LinkedList$Entry.next]o11666:0:0, o11665131598329:0:0) -> f12230_0_remove_Load(c25, c26, o13331[LinkedList$Entry.next]o13335:0:0, o11666[LinkedList$Entry.next]o11664:0:0, o11971[LinkedList$Entry.next]o11664:0:0, o11971[LinkedList$Entry.next]o11666:0:0, o11665131598329:0:0) :|: c26 = 0 && (c25 = 0 && (c24 = 0 && c23 = 0)) && (o13331[LinkedList$Entry.next]o13335:0:0 > o11666[LinkedList$Entry.next]o11668:0:0 && i3594:0:0 > 1 && o11971[LinkedList$Entry.next]o11666:0:0 < o11668[LinkedList$Entry.next]o11666:0:0 && o11971[LinkedList$Entry.next]o11664:0:0 < o11668[LinkedList$Entry.next]o11664:0:0 && o11666[LinkedList$Entry.next]o11668:0:0 > 0 && o11668[LinkedList$Entry.next]o11664:0:0 > 0 && o11668[LinkedList$Entry.next]o11666:0:0 > 0)

----------------------------------------

(117) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12230_0_remove_Load(x, x1, x2, x3, x4, x5, x6)] = -1 + c*x + c1*x1 + 2*x5

The following rules are decreasing:
f12230_0_remove_Load(c, c1, x15:0, x16:0, x16:0, x15:0, x12:0) -> f12230_0_remove_Load(c2, c3, c4, x18:0, x19:0, x20:0, x12:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x15:0 > -1 && x21:0 > 1 && x20:0 < x15:0 && x16:0 > 0 && x19:0 < x16:0)
f12230_0_remove_Load(c10, c11, x36:0, x37:0, x38:0, x39:0, x32:0) -> f12230_0_remove_Load(c12, c13, x41:0, x37:0, x42:0, x43:0, x32:0) :|: c13 = 0 && (c12 = 0 && (c11 = 0 && c10 = 0)) && (x43:0 < x39:0 && x44:0 > 1 && x41:0 > x36:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0)
f12230_0_remove_Load(c14, c15, x3:0, x4:0, x5:0, x6:0, x:0) -> f12230_0_remove_Load(c16, c17, x8:0, x4:0, x9:0, x10:0, x:0) :|: c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)) && (x6:0 > x10:0 && x11:0 > 1 && x8:0 > x3:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0)
f12230_0_remove_Load(c23, c24, o11666[LinkedList$Entry.next]o11668:0:0, o11666[LinkedList$Entry.next]o11664:0:0, o11668[LinkedList$Entry.next]o11664:0:0, o11668[LinkedList$Entry.next]o11666:0:0, o11665131598329:0:0) -> f12230_0_remove_Load(c25, c26, o13331[LinkedList$Entry.next]o13335:0:0, o11666[LinkedList$Entry.next]o11664:0:0, o11971[LinkedList$Entry.next]o11664:0:0, o11971[LinkedList$Entry.next]o11666:0:0, o11665131598329:0:0) :|: c26 = 0 && (c25 = 0 && (c24 = 0 && c23 = 0)) && (o13331[LinkedList$Entry.next]o13335:0:0 > o11666[LinkedList$Entry.next]o11668:0:0 && i3594:0:0 > 1 && o11971[LinkedList$Entry.next]o11666:0:0 < o11668[LinkedList$Entry.next]o11666:0:0 && o11971[LinkedList$Entry.next]o11664:0:0 < o11668[LinkedList$Entry.next]o11664:0:0 && o11666[LinkedList$Entry.next]o11668:0:0 > 0 && o11668[LinkedList$Entry.next]o11664:0:0 > 0 && o11668[LinkedList$Entry.next]o11666:0:0 > 0)
The following rules are bounded:
f12230_0_remove_Load(c10, c11, x36:0, x37:0, x38:0, x39:0, x32:0) -> f12230_0_remove_Load(c12, c13, x41:0, x37:0, x42:0, x43:0, x32:0) :|: c13 = 0 && (c12 = 0 && (c11 = 0 && c10 = 0)) && (x43:0 < x39:0 && x44:0 > 1 && x41:0 > x36:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0)
f12230_0_remove_Load(c14, c15, x3:0, x4:0, x5:0, x6:0, x:0) -> f12230_0_remove_Load(c16, c17, x8:0, x4:0, x9:0, x10:0, x:0) :|: c17 = 0 && (c16 = 0 && (c15 = 0 && c14 = 0)) && (x6:0 > x10:0 && x11:0 > 1 && x8:0 > x3:0 && x9:0 < x5:0 && x3:0 > 0 && x5:0 > 0 && x6:0 > 0)
f12230_0_remove_Load(c23, c24, o11666[LinkedList$Entry.next]o11668:0:0, o11666[LinkedList$Entry.next]o11664:0:0, o11668[LinkedList$Entry.next]o11664:0:0, o11668[LinkedList$Entry.next]o11666:0:0, o11665131598329:0:0) -> f12230_0_remove_Load(c25, c26, o13331[LinkedList$Entry.next]o13335:0:0, o11666[LinkedList$Entry.next]o11664:0:0, o11971[LinkedList$Entry.next]o11664:0:0, o11971[LinkedList$Entry.next]o11666:0:0, o11665131598329:0:0) :|: c26 = 0 && (c25 = 0 && (c24 = 0 && c23 = 0)) && (o13331[LinkedList$Entry.next]o13335:0:0 > o11666[LinkedList$Entry.next]o11668:0:0 && i3594:0:0 > 1 && o11971[LinkedList$Entry.next]o11666:0:0 < o11668[LinkedList$Entry.next]o11666:0:0 && o11971[LinkedList$Entry.next]o11664:0:0 < o11668[LinkedList$Entry.next]o11664:0:0 && o11666[LinkedList$Entry.next]o11668:0:0 > 0 && o11668[LinkedList$Entry.next]o11664:0:0 > 0 && o11668[LinkedList$Entry.next]o11666:0:0 > 0)

----------------------------------------

(118)
Obligation:
Rules:
f12230_0_remove_Load(c, c1, x15:0, x16:0, x16:0, x15:0, x12:0) -> f12230_0_remove_Load(c2, c3, c4, x18:0, x19:0, x20:0, x12:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x15:0 > -1 && x21:0 > 1 && x20:0 < x15:0 && x16:0 > 0 && x19:0 < x16:0)

----------------------------------------

(119) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f12230_0_remove_Load(x, x1, x2, x3, x4, x5, x6)] = c*x + c1*x1 + x5

The following rules are decreasing:
f12230_0_remove_Load(c, c1, x15:0, x16:0, x16:0, x15:0, x12:0) -> f12230_0_remove_Load(c2, c3, c4, x18:0, x19:0, x20:0, x12:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x15:0 > -1 && x21:0 > 1 && x20:0 < x15:0 && x16:0 > 0 && x19:0 < x16:0)
The following rules are bounded:
f12230_0_remove_Load(c, c1, x15:0, x16:0, x16:0, x15:0, x12:0) -> f12230_0_remove_Load(c2, c3, c4, x18:0, x19:0, x20:0, x12:0) :|: c4 = 1 && (c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0))) && (x15:0 > -1 && x21:0 > 1 && x20:0 < x15:0 && x16:0 > 0 && x19:0 < x16:0)

----------------------------------------

(120)
YES

----------------------------------------

(121)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: javaUtilEx.juLinkedListCreateRemoveElement.main([Ljava/lang/String;)V
SCC calls the following helper methods: javaUtilEx.Content.equals(Ljava/lang/Object;)Z
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*javaUtilEx.LinkedList: [header]
*javaUtilEx.LinkedList$Entry: [element, next]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(122) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 61 IRulesP rules:
f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(o11580sub0), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577) -> f12234_0_remove_FieldAccess(EOS(STATIC_12234), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(o11580sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577) :|: TRUE
f12234_0_remove_FieldAccess(EOS(STATIC_12234), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(o11580sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577) -> f12240_0_remove_EQ(EOS(STATIC_12240), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(o11580sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267, java.lang.Object(o11577sub-2081713267))), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577) :|: TRUE
f12240_0_remove_EQ(EOS(STATIC_12240), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(o11580sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267, java.lang.Object(o11577sub-2081713267))), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577) -> f12248_0_remove_EQ(EOS(STATIC_12248), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(o11580sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267, java.lang.Object(o11577sub-2081713267))), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577, o11580[LinkedList$Entry.next]o11575) :|: o11580[LinkedList$Entry.next]o11575 > 0
f12248_0_remove_EQ(EOS(STATIC_12248), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(o11580sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267, java.lang.Object(o11577sub-2081713267))), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577, o11580[LinkedList$Entry.next]o11575) -> f12256_0_remove_Load(EOS(STATIC_12256), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577, o11580[LinkedList$Entry.next]o11575) :|: TRUE
f12256_0_remove_Load(EOS(STATIC_12256), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577, o11580[LinkedList$Entry.next]o11575) -> f12265_0_remove_Load(EOS(STATIC_12265), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(javaUtilEx.Content(EOC)), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577, o11580[LinkedList$Entry.next]o11575) :|: TRUE
f12265_0_remove_Load(EOS(STATIC_12265), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(javaUtilEx.Content(EOC)), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577, o11580[LinkedList$Entry.next]o11575) -> f12274_0_remove_FieldAccess(EOS(STATIC_12274), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577, o11580[LinkedList$Entry.next]o11575) :|: TRUE
f12274_0_remove_FieldAccess(EOS(STATIC_12274), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577, o11580[LinkedList$Entry.next]o11575) -> f12281_0_remove_FieldAccess(EOS(STATIC_12281), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577) :|: o11577[LinkedList$Entry.next]o11580 > 0 && o11580[LinkedList$Entry.next]o11577 > 0
f12274_0_remove_FieldAccess(EOS(STATIC_12274), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11957sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11957sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11957sub0), o11957[LinkedList$Entry.next]o11957, o11578[LinkedList$Entry.previous]o11575, o11957[LinkedList$Entry.next]o11575, o11957[LinkedList$Entry.next]o11957, o11957[LinkedList$Entry.next]o11575) -> f12282_0_remove_FieldAccess(EOS(STATIC_12282), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11957sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11957sub0), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11957sub0), o11578[LinkedList$Entry.previous]o11575, o11957[LinkedList$Entry.next]o11575, o11957[LinkedList$Entry.next]o11957) :|: TRUE
f12281_0_remove_FieldAccess(EOS(STATIC_12281), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), o11577[LinkedList$Entry.next]o11961, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11961[LinkedList$Entry.next]o11575, o11961[LinkedList$Entry.next]o11577) -> f12291_0_remove_FieldAccess(EOS(STATIC_12291), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: o11963[LinkedList$Entry.next]o11575 < o11961[LinkedList$Entry.next]o11575 && o11961[LinkedList$Entry.next]o11575 >= 0 && o11963[LinkedList$Entry.next]o11577 < o11961[LinkedList$Entry.next]o11577 && o11961[LinkedList$Entry.next]o11577 >= 0
f12291_0_remove_FieldAccess(EOS(STATIC_12291), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f12302_0_remove_InvokeMethod(EOS(STATIC_12302), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), java.lang.Object(javaUtilEx.Content(EOC)), o119620, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: TRUE
f12302_0_remove_InvokeMethod(EOS(STATIC_12302), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), java.lang.Object(javaUtilEx.Content(EOC)), o119620, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f12311_0_equals_Load(EOS(STATIC_12311), java.lang.Object(javaUtilEx.Content(EOC)), o119620, java.lang.Object(o11577sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267, java.lang.Object(o11577sub-2081713267))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), java.lang.Object(o11963sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119620, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: i3581 > 1
f12302_0_remove_InvokeMethod(EOS(STATIC_12302), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), java.lang.Object(javaUtilEx.Content(EOC)), o119620, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f12311_1_equals_Load(EOS(STATIC_12311), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), java.lang.Object(javaUtilEx.Content(EOC)), o119620, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: i3581 > 1
f12311_0_equals_Load(EOS(STATIC_12311), java.lang.Object(javaUtilEx.Content(EOC)), o119620, java.lang.Object(o11577sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267, java.lang.Object(o11577sub-2081713267))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), java.lang.Object(o11963sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119620, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f15002_0_equals_Load(EOS(STATIC_15002), java.lang.Object(javaUtilEx.Content(EOC)), o119620, java.lang.Object(o11577sub0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267, java.lang.Object(o11577sub-2081713267))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188, java.lang.Object(o11963sub-2081595188))), java.lang.Object(o11963sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119620, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: TRUE
f13196_0_equals_Return(EOS(STATIC_13196), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11963sub-2081595188))), matching1, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f12471_0_equals_Return(EOS(STATIC_12471), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11963sub-2081595188))), 0, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: TRUE && matching1 = 0
f12471_0_equals_Return(EOS(STATIC_12471), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12397-2080847375, java.lang.Object(o12398sub-2080847375))), matching1, o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12393[LinkedList$Entry.next]o12396, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393) -> f12488_0_remove_EQ(EOS(STATIC_12488), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12397-2080847375, java.lang.Object(o12398sub-2080847375))), 0, o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12393[LinkedList$Entry.next]o12396, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393) :|: TRUE && matching1 = 0
f12488_0_remove_EQ(EOS(STATIC_12488), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12397-2080847375, java.lang.Object(o12398sub-2080847375))), matching1, o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12393[LinkedList$Entry.next]o12396, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393) -> f12505_0_remove_Load(EOS(STATIC_12505), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12397-2080847375, java.lang.Object(o12398sub-2080847375))), o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12393[LinkedList$Entry.next]o12396, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393) :|: TRUE && matching1 = 0
f12505_0_remove_Load(EOS(STATIC_12505), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12397-2080847375, java.lang.Object(o12398sub-2080847375))), o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12393[LinkedList$Entry.next]o12396, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393) -> f12525_0_remove_FieldAccess(EOS(STATIC_12525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12397-2080847375, java.lang.Object(o12398sub-2080847375))), o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12393[LinkedList$Entry.next]o12396, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393) :|: TRUE
f12525_0_remove_FieldAccess(EOS(STATIC_12525), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12397-2080847375, java.lang.Object(o12398sub-2080847375))), o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12393[LinkedList$Entry.next]o12396, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393) -> f12548_0_remove_Store(EOS(STATIC_12548), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12398sub0), o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393, o12393[LinkedList$Entry.next]o12398) :|: o12393[LinkedList$Entry.next]o12398 > o12393[LinkedList$Entry.next]o12396 && o12393[LinkedList$Entry.next]o12396 >= 0
f12548_0_remove_Store(EOS(STATIC_12548), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12398sub0), o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393, o12393[LinkedList$Entry.next]o12398) -> f12573_0_remove_JMP(EOS(STATIC_12573), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12398sub0), o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393, o12393[LinkedList$Entry.next]o12398) :|: TRUE
f12573_0_remove_JMP(EOS(STATIC_12573), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12398sub0), o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393, o12393[LinkedList$Entry.next]o12398) -> f12594_0_remove_Load(EOS(STATIC_12594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12398sub0), o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393, o12393[LinkedList$Entry.next]o12398) :|: TRUE
f12594_0_remove_Load(EOS(STATIC_12594), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12398sub0), o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393, o12393[LinkedList$Entry.next]o12398) -> f12221_0_remove_Load(EOS(STATIC_12221), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12392133272205, java.lang.Object(o12393sub133272205)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12398sub0), o12393[LinkedList$Entry.next]o12398, o12394[LinkedList$Entry.previous]o12391, o12393[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12391, o12398[LinkedList$Entry.next]o12393) :|: TRUE
f12221_0_remove_Load(EOS(STATIC_12221), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577) -> f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11580sub0), java.lang.Object(o11580sub0), o11577[LinkedList$Entry.next]o11580, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11575, o11580[LinkedList$Entry.next]o11577) :|: TRUE
f13215_0_equals_Return(EOS(STATIC_13215), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16626sub-2081595188), java.lang.Object(o11963sub-2081595188))), matching1, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f12471_0_equals_Return(EOS(STATIC_12471), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16626sub-2081595188), java.lang.Object(o11963sub-2081595188))), 0, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: TRUE && matching1 = 0
f13374_0_equals_Return(EOS(STATIC_13374), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11963sub-2081595188))), matching1, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f12663_0_equals_Return(EOS(STATIC_12663), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11963sub-2081595188))), 0, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: TRUE && matching1 = 0
f12663_0_equals_Return(EOS(STATIC_12663), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub-2079931666))), i3893, o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13309[LinkedList$Entry.next]o13312, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309) -> f12679_0_remove_EQ(EOS(STATIC_12679), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub-2079931666))), i3893, o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13309[LinkedList$Entry.next]o13312, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309) :|: TRUE
f12679_0_remove_EQ(EOS(STATIC_12679), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub-2079931666))), matching1, o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13309[LinkedList$Entry.next]o13312, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309) -> f12689_0_remove_EQ(EOS(STATIC_12689), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub-2079931666))), 0, o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13309[LinkedList$Entry.next]o13312, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309) :|: TRUE && matching1 = 0
f12689_0_remove_EQ(EOS(STATIC_12689), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub-2079931666))), matching1, o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13309[LinkedList$Entry.next]o13312, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309) -> f12706_0_remove_Load(EOS(STATIC_12706), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub-2079931666))), o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13309[LinkedList$Entry.next]o13312, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309) :|: TRUE && matching1 = 0
f12706_0_remove_Load(EOS(STATIC_12706), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub-2079931666))), o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13309[LinkedList$Entry.next]o13312, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309) -> f12725_0_remove_FieldAccess(EOS(STATIC_12725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub-2079931666))), o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13309[LinkedList$Entry.next]o13312, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309) :|: TRUE
f12725_0_remove_FieldAccess(EOS(STATIC_12725), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub-2079931666))), o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13309[LinkedList$Entry.next]o13312, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309) -> f12745_0_remove_Store(EOS(STATIC_12745), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub0), o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309, o13309[LinkedList$Entry.next]o13314) :|: o13309[LinkedList$Entry.next]o13314 > o13309[LinkedList$Entry.next]o13312 && o13309[LinkedList$Entry.next]o13312 >= 0
f12745_0_remove_Store(EOS(STATIC_12745), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub0), o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309, o13309[LinkedList$Entry.next]o13314) -> f12548_0_remove_Store(EOS(STATIC_12548), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13308135102321, java.lang.Object(o13309sub135102321)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub0), o13310[LinkedList$Entry.previous]o13307, o13309[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13307, o13314[LinkedList$Entry.next]o13309, o13309[LinkedList$Entry.next]o13314) :|: TRUE
f13391_0_equals_Return(EOS(STATIC_13391), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11963sub-2081595188))), matching1, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f12663_0_equals_Return(EOS(STATIC_12663), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11963sub-2081595188))), 1, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: TRUE && matching1 = 1
f12282_0_remove_FieldAccess(EOS(STATIC_12282), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), o11578[LinkedList$Entry.previous]o11575, o11965[LinkedList$Entry.next]o11575, o11965[LinkedList$Entry.next]o11965) -> f12292_0_remove_FieldAccess(EOS(STATIC_12292), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: o11967[LinkedList$Entry.next]o11575 < o11965[LinkedList$Entry.next]o11575 && o11965[LinkedList$Entry.next]o11575 >= 0 && o11967[LinkedList$Entry.next]o11965 < o11965[LinkedList$Entry.next]o11965 && o11965[LinkedList$Entry.next]o11965 >= 0
f12292_0_remove_FieldAccess(EOS(STATIC_12292), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f12303_0_remove_InvokeMethod(EOS(STATIC_12303), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), java.lang.Object(javaUtilEx.Content(EOC)), o119660, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: TRUE
f12303_0_remove_InvokeMethod(EOS(STATIC_12303), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), java.lang.Object(javaUtilEx.Content(EOC)), o119660, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f12312_0_equals_Load(EOS(STATIC_12312), java.lang.Object(javaUtilEx.Content(EOC)), o119660, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966131658965, java.lang.Object(o11967sub131658965))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), java.lang.Object(o11967sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119660, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: i3581 > 1
f12303_0_remove_InvokeMethod(EOS(STATIC_12303), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), java.lang.Object(javaUtilEx.Content(EOC)), o119660, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f12312_1_equals_Load(EOS(STATIC_12312), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), java.lang.Object(javaUtilEx.Content(EOC)), o119660, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: i3581 > 1
f12312_0_equals_Load(EOS(STATIC_12312), java.lang.Object(javaUtilEx.Content(EOC)), o119660, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966131658965, java.lang.Object(o11967sub131658965))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), java.lang.Object(o11967sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119660, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f15072_0_equals_Load(EOS(STATIC_15072), java.lang.Object(javaUtilEx.Content(EOC)), o119660, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966131658965, java.lang.Object(o11967sub131658965))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064, java.lang.Object(o11967sub-2081595064))), java.lang.Object(o11967sub0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119660, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: TRUE
f13197_0_equals_Return(EOS(STATIC_13197), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-2081595064))), matching1, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f12473_0_equals_Return(EOS(STATIC_12473), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-2081595064))), 0, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: TRUE && matching1 = 0
f12473_0_equals_Return(EOS(STATIC_12473), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12415133316597, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-1947508675, java.lang.Object(o12418sub-1947508675)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-2080825272, java.lang.Object(o12418sub-2080825272))), matching1, o12420[LinkedList$Entry.previous]o12414, o12418[LinkedList$Entry.next]o12414, o12418[LinkedList$Entry.next]o12416) -> f12489_0_remove_EQ(EOS(STATIC_12489), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12415133316597, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-1947508675, java.lang.Object(o12418sub-1947508675)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-2080825272, java.lang.Object(o12418sub-2080825272))), 0, o12420[LinkedList$Entry.previous]o12414, o12418[LinkedList$Entry.next]o12414, o12418[LinkedList$Entry.next]o12416) :|: TRUE && matching1 = 0
f12489_0_remove_EQ(EOS(STATIC_12489), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12415133316597, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-1947508675, java.lang.Object(o12418sub-1947508675)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-2080825272, java.lang.Object(o12418sub-2080825272))), matching1, o12420[LinkedList$Entry.previous]o12414, o12418[LinkedList$Entry.next]o12414, o12418[LinkedList$Entry.next]o12416) -> f12506_0_remove_Load(EOS(STATIC_12506), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12415133316597, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-1947508675, java.lang.Object(o12418sub-1947508675)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-2080825272, java.lang.Object(o12418sub-2080825272))), o12420[LinkedList$Entry.previous]o12414, o12418[LinkedList$Entry.next]o12414, o12418[LinkedList$Entry.next]o12416) :|: TRUE && matching1 = 0
f12506_0_remove_Load(EOS(STATIC_12506), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12415133316597, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-1947508675, java.lang.Object(o12418sub-1947508675)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-2080825272, java.lang.Object(o12418sub-2080825272))), o12420[LinkedList$Entry.previous]o12414, o12418[LinkedList$Entry.next]o12414, o12418[LinkedList$Entry.next]o12416) -> f12526_0_remove_FieldAccess(EOS(STATIC_12526), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12415133316597, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-1947508675, java.lang.Object(o12418sub-1947508675)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-2080825272, java.lang.Object(o12418sub-2080825272))), o12420[LinkedList$Entry.previous]o12414, o12418[LinkedList$Entry.next]o12414, o12418[LinkedList$Entry.next]o12416) :|: TRUE
f12526_0_remove_FieldAccess(EOS(STATIC_12526), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12415133316597, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-1947508675, java.lang.Object(o12418sub-1947508675)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-2080825272, java.lang.Object(o12418sub-2080825272))), o12420[LinkedList$Entry.previous]o12414, o12418[LinkedList$Entry.next]o12414, o12418[LinkedList$Entry.next]o12416) -> f12549_0_remove_Store(EOS(STATIC_12549), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12415133316597, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-1947508675, java.lang.Object(o12418sub-1947508675)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12418sub0), o12420[LinkedList$Entry.previous]o12414, o12418[LinkedList$Entry.next]o12414, o12418[LinkedList$Entry.next]o12416) :|: TRUE
f12549_0_remove_Store(EOS(STATIC_12549), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12415133316597, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-1947508675, java.lang.Object(o12418sub-1947508675)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12418sub0), o12420[LinkedList$Entry.previous]o12414, o12418[LinkedList$Entry.next]o12414, o12418[LinkedList$Entry.next]o12416) -> f12745_0_remove_Store(EOS(STATIC_12745), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12415133316597, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o12417-1947508675, java.lang.Object(o12418sub-1947508675)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12418sub0), o12420[LinkedList$Entry.previous]o12414, o12416[LinkedList$Entry.next]o12414, o12418[LinkedList$Entry.next]o12414, o12418[LinkedList$Entry.next]o12416, o12416[LinkedList$Entry.next]o12418) :|: o12416[LinkedList$Entry.next]o12418 = 1
f13216_0_equals_Return(EOS(STATIC_13216), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-1950054333), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-2081595064), java.lang.Object(o11967sub-2081595064))), matching1, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f12473_0_equals_Return(EOS(STATIC_12473), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-1950054333), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-2081595064), java.lang.Object(o11967sub-2081595064))), 0, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: TRUE && matching1 = 0
f13375_0_equals_Return(EOS(STATIC_13375), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-2081595064))), matching1, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f12665_0_equals_Return(EOS(STATIC_12665), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-2081595064))), 0, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: TRUE && matching1 = 0
f12665_0_equals_Return(EOS(STATIC_12665), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-2079931449))), i3899, o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) -> f12680_0_remove_EQ(EOS(STATIC_12680), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-2079931449))), i3899, o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) :|: TRUE
f12680_0_remove_EQ(EOS(STATIC_12680), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-2079931449))), matching1, o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) -> f12691_0_remove_EQ(EOS(STATIC_12691), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-2079931449))), 0, o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) :|: TRUE && matching1 = 0
f12691_0_remove_EQ(EOS(STATIC_12691), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-2079931449))), matching1, o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) -> f12708_0_remove_Load(EOS(STATIC_12708), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-2079931449))), o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) :|: TRUE && matching1 = 0
f12708_0_remove_Load(EOS(STATIC_12708), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-2079931449))), o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) -> f12727_0_remove_FieldAccess(EOS(STATIC_12727), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-2079931449))), o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) :|: TRUE
f12727_0_remove_FieldAccess(EOS(STATIC_12727), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-2079931449))), o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) -> f12747_0_remove_Store(EOS(STATIC_12747), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub0), o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) :|: TRUE
f12747_0_remove_Store(EOS(STATIC_12747), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub0), o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) -> f12764_0_remove_JMP(EOS(STATIC_12764), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub0), o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) :|: TRUE
f12764_0_remove_JMP(EOS(STATIC_12764), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub0), o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) -> f12773_0_remove_Load(EOS(STATIC_12773), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub0), o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) :|: TRUE
f12773_0_remove_Load(EOS(STATIC_12773), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub0), o13323[LinkedList$Entry.previous]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) -> f12221_0_remove_Load(EOS(STATIC_12221), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o13318135104243, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub-1944827206)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub0), o13319[LinkedList$Entry.next]o13321, o13323[LinkedList$Entry.previous]o13317, o13319[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13317, o13321[LinkedList$Entry.next]o13319) :|: o13319[LinkedList$Entry.next]o13321 = 1
f13392_0_equals_Return(EOS(STATIC_13392), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-2081595064))), matching1, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f12665_0_equals_Return(EOS(STATIC_12665), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-2081595064))), 1, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: TRUE && matching1 = 1
f12311_1_equals_Load(EOS(STATIC_12311), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11963sub-2081595188))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f13196_0_equals_Return(EOS(STATIC_13196), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11963sub-2081595188))), 0, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: TRUE
f12311_1_equals_Load(EOS(STATIC_12311), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16626sub-2081595188), java.lang.Object(o11963sub-2081595188))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16626sub0), o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f13215_0_equals_Return(EOS(STATIC_13215), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16626sub-2081595188), java.lang.Object(o11963sub-2081595188))), 0, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: TRUE
f12311_1_equals_Load(EOS(STATIC_12311), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11963sub-2081595188))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f13374_0_equals_Return(EOS(STATIC_13374), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11963sub-2081595188))), 0, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: TRUE
f12311_1_equals_Load(EOS(STATIC_12311), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11963sub-2081595188))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) -> f13391_0_equals_Return(EOS(STATIC_13391), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(o11577sub131540731)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11963sub-2081595188))), 1, o11578[LinkedList$Entry.previous]o11575, o11577[LinkedList$Entry.next]o11575, o11577[LinkedList$Entry.next]o11961, o11963[LinkedList$Entry.next]o11575, o11963[LinkedList$Entry.next]o11577) :|: TRUE
f12312_1_equals_Load(EOS(STATIC_12312), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-2081595064))), java.lang.Object(javaUtilEx.Content(EOC)), NULL, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f13197_0_equals_Return(EOS(STATIC_13197), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-2081595064))), 0, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: TRUE
f12312_1_equals_Load(EOS(STATIC_12312), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-1950054333), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-2081595064), java.lang.Object(o11967sub-2081595064))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o16641sub0), o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f13216_0_equals_Return(EOS(STATIC_13216), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-1950054333), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-2081595064), java.lang.Object(o11967sub-2081595064))), 0, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: TRUE
f12312_1_equals_Load(EOS(STATIC_12312), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-2081595064))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f13375_0_equals_Return(EOS(STATIC_13375), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-2081595064))), 0, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: TRUE
f12312_1_equals_Load(EOS(STATIC_12312), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-2081595064))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.Content(EOC)), o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) -> f13392_0_equals_Return(EOS(STATIC_13392), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-1950054333)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-2081595064))), 1, o11578[LinkedList$Entry.previous]o11575, o11967[LinkedList$Entry.next]o11575, o11967[LinkedList$Entry.next]o11965) :|: TRUE
Combined rules. Obtained 8 IRulesP rules:
f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11963sub-2081595188:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11963sub-2081595188:0))), o11577[LinkedList$Entry.next]o11580:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11577:0) -> f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12398sub0:0), java.lang.Object(o12398sub0:0), o12393[LinkedList$Entry.next]o12398:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11577:0) :|: o11580[LinkedList$Entry.next]o11575:0 > 0 && o11580[LinkedList$Entry.next]o11577:0 > 0 && o11577[LinkedList$Entry.next]o11580:0 > 0 && o11963[LinkedList$Entry.next]o11575:0 < o11580[LinkedList$Entry.next]o11575:0 && o12393[LinkedList$Entry.next]o12398:0 > o11577[LinkedList$Entry.next]o11580:0 && i3581:0 > 1 && o11963[LinkedList$Entry.next]o11577:0 < o11580[LinkedList$Entry.next]o11577:0
f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-2081595064:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-2081595064:0))), o11577[LinkedList$Entry.next]o11580:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11580:0) -> f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, NULL, java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12418sub0:0), java.lang.Object(o12418sub0:0), 1, o11578[LinkedList$Entry.previous]o11575:0, o12416[LinkedList$Entry.next]o12414:0, o11967[LinkedList$Entry.next]o11575:0, o11967[LinkedList$Entry.next]o11965:0) :|: o11577[LinkedList$Entry.next]o11575:0 > 0 && o11967[LinkedList$Entry.next]o11575:0 < o11577[LinkedList$Entry.next]o11575:0 && o11967[LinkedList$Entry.next]o11965:0 < o11577[LinkedList$Entry.next]o11580:0 && i3581:0 > 1 && o11577[LinkedList$Entry.next]o11580:0 > -1
f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-2081595064:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-2081595064:0))), o11577[LinkedList$Entry.next]o11580:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11580:0) -> f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13321sub0:0), java.lang.Object(o13321sub0:0), 1, o11578[LinkedList$Entry.previous]o11575:0, o13319[LinkedList$Entry.next]o13317:0, o11967[LinkedList$Entry.next]o11575:0, o11967[LinkedList$Entry.next]o11965:0) :|: o11577[LinkedList$Entry.next]o11575:0 > 0 && o11967[LinkedList$Entry.next]o11575:0 < o11577[LinkedList$Entry.next]o11575:0 && o11967[LinkedList$Entry.next]o11965:0 < o11577[LinkedList$Entry.next]o11580:0 && i3581:0 > 1 && o11577[LinkedList$Entry.next]o11580:0 > -1
f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16626sub-2081595188:0), java.lang.Object(o11963sub-2081595188:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16626sub-2081595188:0), java.lang.Object(o11963sub-2081595188:0))), o11577[LinkedList$Entry.next]o11580:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11577:0) -> f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12398sub0:0), java.lang.Object(o12398sub0:0), o12393[LinkedList$Entry.next]o12398:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11577:0) :|: o11580[LinkedList$Entry.next]o11575:0 > 0 && o11580[LinkedList$Entry.next]o11577:0 > 0 && o11577[LinkedList$Entry.next]o11580:0 > 0 && o11963[LinkedList$Entry.next]o11575:0 < o11580[LinkedList$Entry.next]o11575:0 && o12393[LinkedList$Entry.next]o12398:0 > o11577[LinkedList$Entry.next]o11580:0 && i3581:0 > 1 && o11963[LinkedList$Entry.next]o11577:0 < o11580[LinkedList$Entry.next]o11577:0
f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11963sub-2081595188:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o11963sub-2081595188:0))), o11577[LinkedList$Entry.next]o11580:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11577:0) -> f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o13314sub0:0), java.lang.Object(o13314sub0:0), o13309[LinkedList$Entry.next]o13314:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11577:0) :|: o11580[LinkedList$Entry.next]o11575:0 > 0 && o11580[LinkedList$Entry.next]o11577:0 > 0 && o11577[LinkedList$Entry.next]o11580:0 > 0 && o11963[LinkedList$Entry.next]o11575:0 < o11580[LinkedList$Entry.next]o11575:0 && o11963[LinkedList$Entry.next]o11577:0 < o11580[LinkedList$Entry.next]o11577:0 && i3581:0 > 1 && o13309[LinkedList$Entry.next]o13314:0 > o11577[LinkedList$Entry.next]o11580:0
f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-1950054333:0), java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-2081595064:0), java.lang.Object(o11967sub-2081595064:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-2081595064:0), java.lang.Object(o11967sub-2081595064:0))), o11577[LinkedList$Entry.next]o11580:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11580:0) -> f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, java.lang.Object(o16641sub-1950054333:0), java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(o12418sub0:0), java.lang.Object(o12418sub0:0), 1, o11578[LinkedList$Entry.previous]o11575:0, o12416[LinkedList$Entry.next]o12414:0, o11967[LinkedList$Entry.next]o11575:0, o11967[LinkedList$Entry.next]o11965:0) :|: o11577[LinkedList$Entry.next]o11575:0 > 0 && o11967[LinkedList$Entry.next]o11575:0 < o11577[LinkedList$Entry.next]o11575:0 && o11967[LinkedList$Entry.next]o11965:0 < o11577[LinkedList$Entry.next]o11580:0 && i3581:0 > 1 && o11577[LinkedList$Entry.next]o11580:0 > -1
Removed following non-SCC rules:
f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188:0, java.lang.Object(o11963sub-2081595188:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188:0, java.lang.Object(o11963sub-2081595188:0))), o11577[LinkedList$Entry.next]o11580:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11577:0) -> f15002_0_equals_Load(EOS(STATIC_15002), java.lang.Object(javaUtilEx.Content(EOC)), o119620:0, java.lang.Object(o11577sub0:0), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267:0, java.lang.Object(o11577sub-2081713267:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11962-2081595188:0, java.lang.Object(o11963sub-2081595188:0))), java.lang.Object(o11963sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119620:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11580:0, o11963[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11577:0) :|: o11580[LinkedList$Entry.next]o11575:0 > 0 && o11580[LinkedList$Entry.next]o11577:0 > 0 && o11963[LinkedList$Entry.next]o11575:0 < o11580[LinkedList$Entry.next]o11575:0 && o11963[LinkedList$Entry.next]o11577:0 < o11580[LinkedList$Entry.next]o11577:0 && i3581:0 > 1 && o11577[LinkedList$Entry.next]o11580:0 > 0
f12229_0_remove_Load(EOS(STATIC_12229), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333:0, java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064:0, java.lang.Object(o11967sub-2081595064:0))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064:0, java.lang.Object(o11967sub-2081595064:0))), o11577[LinkedList$Entry.next]o11580:0, o11578[LinkedList$Entry.previous]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11580:0) -> f15072_0_equals_Load(EOS(STATIC_15072), java.lang.Object(javaUtilEx.Content(EOC)), o119660:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576-2081713267:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966131658965:0, java.lang.Object(o11967sub131658965:0))))), java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-2081595064:0, java.lang.Object(o11967sub-2081595064:0))), java.lang.Object(o11967sub0:0), java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(EOC, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(EOC, o11966-1950054333:0, java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(javaUtilEx.Content(EOC)), o119660:0, o11578[LinkedList$Entry.previous]o11575:0, o11967[LinkedList$Entry.next]o11575:0, o11967[LinkedList$Entry.next]o11965:0) :|: o11577[LinkedList$Entry.next]o11575:0 > 0 && o11967[LinkedList$Entry.next]o11575:0 < o11577[LinkedList$Entry.next]o11575:0 && o11967[LinkedList$Entry.next]o11965:0 < o11577[LinkedList$Entry.next]o11580:0 && i3581:0 > 1 && o11577[LinkedList$Entry.next]o11580:0 > -1
Filtered constant ground arguments:
   f12229_0_remove_Load(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f12229_0_remove_Load(x2, x4, x5, x6, x7, x8, x9, x10)
   EOS(x1) -> EOS
   javaUtilEx.Content(x1) -> javaUtilEx.Content
   javaUtilEx.LinkedList$Entry(x1, x2, x3) -> javaUtilEx.LinkedList$Entry(x2, x3)
   javaUtilEx.LinkedList(x1, x2) -> javaUtilEx.LinkedList(x2)
Filtered duplicate arguments:
   f12229_0_remove_Load(x1, x2, x3, x4, x5, x6, x7, x8) -> f12229_0_remove_Load(x1, x3, x4, x5, x6, x7, x8)
Filtered unneeded arguments:
   f12229_0_remove_Load(x1, x2, x3, x4, x5, x6, x7) -> f12229_0_remove_Load(x1, x2, x3, x5, x6, x7)
Finished conversion. Obtained 6 rules.P rules:
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11963sub-2081595188:0))), o11577[LinkedList$Entry.next]o11580:0, o11577[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11577:0, o11576131540731:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(o12398sub0:0), o12393[LinkedList$Entry.next]o12398:0, o11577[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11577:0, o11576131540731:0) :|: o11580[LinkedList$Entry.next]o11577:0 > 0 && o11580[LinkedList$Entry.next]o11575:0 > 0 && o11577[LinkedList$Entry.next]o11580:0 > 0 && o11963[LinkedList$Entry.next]o11575:0 < o11580[LinkedList$Entry.next]o11575:0 && o12393[LinkedList$Entry.next]o12398:0 > o11577[LinkedList$Entry.next]o11580:0 && o11963[LinkedList$Entry.next]o11577:0 < o11580[LinkedList$Entry.next]o11577:0 && i3581:0 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11967sub-2081595064:0))), o11577[LinkedList$Entry.next]o11580:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11580:0, o11576131540731:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(o12418sub0:0), 1, o12416[LinkedList$Entry.next]o12414:0, o11967[LinkedList$Entry.next]o11575:0, o11967[LinkedList$Entry.next]o11965:0, o11576131540731:0) :|: o11967[LinkedList$Entry.next]o11575:0 < o11577[LinkedList$Entry.next]o11575:0 && o11577[LinkedList$Entry.next]o11575:0 > 0 && o11967[LinkedList$Entry.next]o11965:0 < o11577[LinkedList$Entry.next]o11580:0 && o11577[LinkedList$Entry.next]o11580:0 > -1 && i3581:0 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11967sub-2081595064:0))), o11577[LinkedList$Entry.next]o11580:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11580:0, o11576131540731:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(o13321sub0:0), 1, o13319[LinkedList$Entry.next]o13317:0, o11967[LinkedList$Entry.next]o11575:0, o11967[LinkedList$Entry.next]o11965:0, o11576131540731:0) :|: o11967[LinkedList$Entry.next]o11575:0 < o11577[LinkedList$Entry.next]o11575:0 && o11577[LinkedList$Entry.next]o11575:0 > 0 && o11967[LinkedList$Entry.next]o11965:0 < o11577[LinkedList$Entry.next]o11580:0 && o11577[LinkedList$Entry.next]o11580:0 > -1 && i3581:0 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o16626sub-2081595188:0), java.lang.Object(o11963sub-2081595188:0))), o11577[LinkedList$Entry.next]o11580:0, o11577[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11577:0, o11576131540731:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(o12398sub0:0), o12393[LinkedList$Entry.next]o12398:0, o11577[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11577:0, o11576131540731:0) :|: o11580[LinkedList$Entry.next]o11577:0 > 0 && o11580[LinkedList$Entry.next]o11575:0 > 0 && o11577[LinkedList$Entry.next]o11580:0 > 0 && o11963[LinkedList$Entry.next]o11575:0 < o11580[LinkedList$Entry.next]o11575:0 && o12393[LinkedList$Entry.next]o12398:0 > o11577[LinkedList$Entry.next]o11580:0 && o11963[LinkedList$Entry.next]o11577:0 < o11580[LinkedList$Entry.next]o11577:0 && i3581:0 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(o11963sub-2081595188:0))), o11577[LinkedList$Entry.next]o11580:0, o11577[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11577:0, o11576131540731:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(o13314sub0:0), o13309[LinkedList$Entry.next]o13314:0, o11577[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11577:0, o11576131540731:0) :|: o11580[LinkedList$Entry.next]o11577:0 > 0 && o11580[LinkedList$Entry.next]o11575:0 > 0 && o11577[LinkedList$Entry.next]o11580:0 > 0 && o11963[LinkedList$Entry.next]o11575:0 < o11580[LinkedList$Entry.next]o11575:0 && o11963[LinkedList$Entry.next]o11577:0 < o11580[LinkedList$Entry.next]o11577:0 && o13309[LinkedList$Entry.next]o13314:0 > o11577[LinkedList$Entry.next]o11580:0 && i3581:0 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o16641sub-1950054333:0), java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o16641sub-2081595064:0), java.lang.Object(o11967sub-2081595064:0))), o11577[LinkedList$Entry.next]o11580:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11575:0, o11577[LinkedList$Entry.next]o11580:0, o11576131540731:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(o16641sub-1950054333:0), java.lang.Object(o11967sub-1950054333:0)))))))))), java.lang.Object(o12418sub0:0), 1, o12416[LinkedList$Entry.next]o12414:0, o11967[LinkedList$Entry.next]o11575:0, o11967[LinkedList$Entry.next]o11965:0, o11576131540731:0) :|: o11967[LinkedList$Entry.next]o11575:0 < o11577[LinkedList$Entry.next]o11575:0 && o11577[LinkedList$Entry.next]o11575:0 > 0 && o11967[LinkedList$Entry.next]o11965:0 < o11577[LinkedList$Entry.next]o11580:0 && o11577[LinkedList$Entry.next]o11580:0 > -1 && i3581:0 > 1

----------------------------------------

(123)
Obligation:
Rules:
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11963sub-2081595188:0))), o11577[LinkedList$Entry.next]o11580:0, o11577[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11577:0, o11576131540731:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(o12398sub0:0), o12393[LinkedList$Entry.next]o12398:0, o11577[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11577:0, o11576131540731:0) :|: o11580[LinkedList$Entry.next]o11577:0 > 0 && o11580[LinkedList$Entry.next]o11575:0 > 0 && o11577[LinkedList$Entry.next]o11580:0 > 0 && o11963[LinkedList$Entry.next]o11575:0 < o11580[LinkedList$Entry.next]o11575:0 && o12393[LinkedList$Entry.next]o12398:0 > o11577[LinkedList$Entry.next]o11580:0 && o11963[LinkedList$Entry.next]o11577:0 < o11580[LinkedList$Entry.next]o11577:0 && i3581:0 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x4, x3, x) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x7 < x4 && x4 > 0 && x8 < x3 && x3 > -1 && x9 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x11)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x12))), x13, x14, x14, x13, x10) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x11)))))))))), java.lang.Object(x15), 1, x16, x17, x18, x10) :|: x17 < x14 && x14 > 0 && x18 < x13 && x13 > -1 && x19 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x20, java.lang.Object(x21)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x22), java.lang.Object(x23))), x24, x25, x26, x27, x20) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x20, java.lang.Object(x21)))))))), java.lang.Object(x28), x29, x25, x30, x31, x20) :|: x27 > 0 && x26 > 0 && x24 > 0 && x30 < x26 && x29 > x24 && x31 < x27 && x32 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x41, x37, x42, x43, x33) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x43 < x39 && x41 > x36 && x44 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x45) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

----------------------------------------

(124) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(125)
Obligation:
Rules:
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11963sub-2081595188:0))), o11577[LinkedList$Entry.next]o11580:0, o11577[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11577:0, o11576131540731:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(o12398sub0:0), o12393[LinkedList$Entry.next]o12398:0, o11577[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11577:0, o11576131540731:0) :|: o11580[LinkedList$Entry.next]o11577:0 > 0 && o11580[LinkedList$Entry.next]o11575:0 > 0 && o11577[LinkedList$Entry.next]o11580:0 > 0 && o11963[LinkedList$Entry.next]o11575:0 < o11580[LinkedList$Entry.next]o11575:0 && o12393[LinkedList$Entry.next]o12398:0 > o11577[LinkedList$Entry.next]o11580:0 && o11963[LinkedList$Entry.next]o11577:0 < o11580[LinkedList$Entry.next]o11577:0 && i3581:0 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x4, x3, x) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x7 < x4 && x4 > 0 && x8 < x3 && x3 > -1 && x9 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x11)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x12))), x13, x14, x14, x13, x10) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x11)))))))))), java.lang.Object(x15), 1, x16, x17, x18, x10) :|: x17 < x14 && x14 > 0 && x18 < x13 && x13 > -1 && x19 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x20, java.lang.Object(x21)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x22), java.lang.Object(x23))), x24, x25, x26, x27, x20) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x20, java.lang.Object(x21)))))))), java.lang.Object(x28), x29, x25, x30, x31, x20) :|: x27 > 0 && x26 > 0 && x24 > 0 && x30 < x26 && x29 > x24 && x31 < x27 && x32 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x41, x37, x42, x43, x33) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x43 < x39 && x41 > x36 && x44 > 1
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x45) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

----------------------------------------

(126) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11963sub-2081595188:0))), o11577[LinkedList$Entry.next]o11580:0, o11577[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11577:0, o11576131540731:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(o12398sub0:0), o12393[LinkedList$Entry.next]o12398:0, o11577[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11577:0, o11576131540731:0) :|: o11580[LinkedList$Entry.next]o11577:0 > 0 && o11580[LinkedList$Entry.next]o11575:0 > 0 && o11577[LinkedList$Entry.next]o11580:0 > 0 && o11963[LinkedList$Entry.next]o11575:0 < o11580[LinkedList$Entry.next]o11575:0 && o12393[LinkedList$Entry.next]o12398:0 > o11577[LinkedList$Entry.next]o11580:0 && o11963[LinkedList$Entry.next]o11577:0 < o11580[LinkedList$Entry.next]o11577:0 && i3581:0 > 1
(2) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x4, x3, x) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x7 < x4 && x4 > 0 && x8 < x3 && x3 > -1 && x9 > 1
(3) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x11)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x12))), x13, x14, x14, x13, x10) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x11)))))))))), java.lang.Object(x15), 1, x16, x17, x18, x10) :|: x17 < x14 && x14 > 0 && x18 < x13 && x13 > -1 && x19 > 1
(4) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x20, java.lang.Object(x21)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x22), java.lang.Object(x23))), x24, x25, x26, x27, x20) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x20, java.lang.Object(x21)))))))), java.lang.Object(x28), x29, x25, x30, x31, x20) :|: x27 > 0 && x26 > 0 && x24 > 0 && x30 < x26 && x29 > x24 && x31 < x27 && x32 > 1
(5) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x41, x37, x42, x43, x33) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x43 < x39 && x41 > x36 && x44 > 1
(6) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x45) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (4), (5)
(3) -> (1), (3), (4), (5), (6)
(4) -> (1), (2), (3), (4), (5), (6)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (3), (4), (5), (6)

This digraph is fully evaluated!
----------------------------------------

(127)
Obligation:

Termination digraph:
Nodes:
(1) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11963sub-2081595188:0))), o11577[LinkedList$Entry.next]o11580:0, o11577[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11575:0, o11580[LinkedList$Entry.next]o11577:0, o11576131540731:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0, java.lang.Object(o11577sub131540731:0)))))))), java.lang.Object(o12398sub0:0), o12393[LinkedList$Entry.next]o12398:0, o11577[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11575:0, o11963[LinkedList$Entry.next]o11577:0, o11576131540731:0) :|: o11580[LinkedList$Entry.next]o11577:0 > 0 && o11580[LinkedList$Entry.next]o11575:0 > 0 && o11577[LinkedList$Entry.next]o11580:0 > 0 && o11963[LinkedList$Entry.next]o11575:0 < o11580[LinkedList$Entry.next]o11575:0 && o12393[LinkedList$Entry.next]o12398:0 > o11577[LinkedList$Entry.next]o11580:0 && o11963[LinkedList$Entry.next]o11577:0 < o11580[LinkedList$Entry.next]o11577:0 && i3581:0 > 1
(2) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2))), x3, x4, x4, x3, x) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1)))))))))), java.lang.Object(x5), 1, x6, x7, x8, x) :|: x7 < x4 && x4 > 0 && x8 < x3 && x3 > -1 && x9 > 1
(3) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x20, java.lang.Object(x21)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x22), java.lang.Object(x23))), x24, x25, x26, x27, x20) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x20, java.lang.Object(x21)))))))), java.lang.Object(x28), x29, x25, x30, x31, x20) :|: x27 > 0 && x26 > 0 && x24 > 0 && x30 < x26 && x29 > x24 && x31 < x27 && x32 > 1
(4) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x11)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x12))), x13, x14, x14, x13, x10) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x11)))))))))), java.lang.Object(x15), 1, x16, x17, x18, x10) :|: x17 < x14 && x14 > 0 && x18 < x13 && x13 > -1 && x19 > 1
(5) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x35))), x36, x37, x38, x39, x33) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33, java.lang.Object(x34)))))))), java.lang.Object(x40), x41, x37, x42, x43, x33) :|: x39 > 0 && x38 > 0 && x36 > 0 && x42 < x38 && x43 < x39 && x41 > x36 && x44 > 1
(6) f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48), java.lang.Object(x49))), x50, x51, x51, x50, x45) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46), java.lang.Object(x47)))))))))), java.lang.Object(x52), 1, x53, x54, x55, x45) :|: x54 < x51 && x51 > 0 && x55 < x50 && x50 > -1 && x56 > 1

Arcs:
(1) -> (1), (2), (3), (4), (5), (6)
(2) -> (1), (2), (3), (5)
(3) -> (1), (2), (3), (4), (5), (6)
(4) -> (1), (3), (4), (5), (6)
(5) -> (1), (2), (3), (4), (5), (6)
(6) -> (1), (3), (4), (5), (6)

This digraph is fully evaluated!

----------------------------------------

(128) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(129)
Obligation:
Rules:
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x20:0, java.lang.Object(x21:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x22:0), java.lang.Object(x23:0))), x24:0, x25:0, x26:0, x27:0, x20:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x20:0, java.lang.Object(x21:0)))))))), java.lang.Object(x28:0), x29:0, x25:0, x30:0, x31:0, x20:0) :|: x31:0 < x27:0 && x32:0 > 1 && x29:0 > x24:0 && x30:0 < x26:0 && x24:0 > 0 && x26:0 > 0 && x27:0 > 0
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46:0), java.lang.Object(x47:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x48:0), java.lang.Object(x49:0))), x50:0, x51:0, x51:0, x50:0, x45:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x45:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(x46:0), java.lang.Object(x47:0)))))))))), java.lang.Object(x52:0), 1, x53:0, x54:0, x55:0, x45:0) :|: x50:0 > -1 && x56:0 > 1 && x55:0 < x50:0 && x51:0 > 0 && x54:0 < x51:0
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0:0, java.lang.Object(o11577sub131540731:0:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(o11963sub-2081595188:0:0))), o11577[LinkedList$Entry.next]o11580:0:0, o11577[LinkedList$Entry.next]o11575:0:0, o11580[LinkedList$Entry.next]o11575:0:0, o11580[LinkedList$Entry.next]o11577:0:0, o11576131540731:0:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(o11576131540731:0:0, java.lang.Object(o11577sub131540731:0:0)))))))), java.lang.Object(o12398sub0:0:0), o12393[LinkedList$Entry.next]o12398:0:0, o11577[LinkedList$Entry.next]o11575:0:0, o11963[LinkedList$Entry.next]o11575:0:0, o11963[LinkedList$Entry.next]o11577:0:0, o11576131540731:0:0) :|: o11963[LinkedList$Entry.next]o11577:0:0 < o11580[LinkedList$Entry.next]o11577:0:0 && i3581:0:0 > 1 && o12393[LinkedList$Entry.next]o12398:0:0 > o11577[LinkedList$Entry.next]o11580:0:0 && o11963[LinkedList$Entry.next]o11575:0:0 < o11580[LinkedList$Entry.next]o11575:0:0 && o11577[LinkedList$Entry.next]o11580:0:0 > 0 && o11580[LinkedList$Entry.next]o11575:0:0 > 0 && o11580[LinkedList$Entry.next]o11577:0:0 > 0
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x2:0))), x3:0, x4:0, x4:0, x3:0, x:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x:0, java.lang.Object(javaUtilEx.LinkedList$Entry(NULL, java.lang.Object(x1:0)))))))))), java.lang.Object(x5:0), 1, x6:0, x7:0, x8:0, x:0) :|: x3:0 > -1 && x9:0 > 1 && x8:0 < x3:0 && x4:0 > 0 && x7:0 < x4:0
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33:0, java.lang.Object(x34:0)))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x35:0))), x36:0, x37:0, x38:0, x39:0, x33:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x33:0, java.lang.Object(x34:0)))))))), java.lang.Object(x40:0), x41:0, x37:0, x42:0, x43:0, x33:0) :|: x41:0 > x36:0 && x44:0 > 1 && x43:0 < x39:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0
f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x11:0)))))))))), java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x12:0))), x13:0, x14:0, x14:0, x13:0, x10:0) -> f12229_0_remove_Load(java.lang.Object(javaUtilEx.AbstractCollection(javaUtilEx.AbstractList(javaUtilEx.AbstractSequentialList(javaUtilEx.LinkedList(java.lang.Object(javaUtilEx.LinkedList$Entry(x10:0, java.lang.Object(javaUtilEx.LinkedList$Entry(java.lang.Object(javaUtilEx.Content), java.lang.Object(x11:0)))))))))), java.lang.Object(x15:0), 1, x16:0, x17:0, x18:0, x10:0) :|: x13:0 > -1 && x19:0 > 1 && x18:0 < x13:0 && x14:0 > 0 && x17:0 < x14:0

----------------------------------------

(130) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f12229_0_remove_Load(VARIABLE, VARIABLE, VARIABLE, VARIABLE, INTEGER, INTEGER, VARIABLE)
java.lang.Object(VARIABLE)
javaUtilEx.AbstractCollection(VARIABLE)
javaUtilEx.AbstractList(VARIABLE)
javaUtilEx.AbstractSequentialList(VARIABLE)
javaUtilEx.LinkedList(VARIABLE)
javaUtilEx.LinkedList$Entry(VARIABLE, VARIABLE)
NULL()
javaUtilEx.Content()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(131)
Obligation:
Rules:
f12229_0_remove_Load(c, c1, x24:0, x25:0, x26:0, x27:0, x20:0) -> f12229_0_remove_Load(c2, c3, x29:0, x25:0, x30:0, x31:0, x20:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x31:0 < x27:0 && x32:0 > 1 && x29:0 > x24:0 && x30:0 < x26:0 && x24:0 > 0 && x26:0 > 0 && x27:0 > 0)
f12229_0_remove_Load(c4, c5, x50:0, x51:0, x51:0, x50:0, x45:0) -> f12229_0_remove_Load(c6, c7, c8, x53:0, x54:0, x55:0, x45:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x50:0 > -1 && x56:0 > 1 && x55:0 < x50:0 && x51:0 > 0 && x54:0 < x51:0)
f12229_0_remove_Load(c18, c19, x36:0, x37:0, x38:0, x39:0, x33:0) -> f12229_0_remove_Load(c20, c21, x41:0, x37:0, x42:0, x43:0, x33:0) :|: c21 = 0 && (c20 = 0 && (c19 = 0 && c18 = 0)) && (x41:0 > x36:0 && x44:0 > 1 && x43:0 < x39:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0)

----------------------------------------

(132) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f12229_0_remove_Load ] = f12229_0_remove_Load_6

The following rules are decreasing:
f12229_0_remove_Load(c, c1, x24:0, x25:0, x26:0, x27:0, x20:0) -> f12229_0_remove_Load(c2, c3, x29:0, x25:0, x30:0, x31:0, x20:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x31:0 < x27:0 && x32:0 > 1 && x29:0 > x24:0 && x30:0 < x26:0 && x24:0 > 0 && x26:0 > 0 && x27:0 > 0)
f12229_0_remove_Load(c4, c5, x50:0, x51:0, x51:0, x50:0, x45:0) -> f12229_0_remove_Load(c6, c7, c8, x53:0, x54:0, x55:0, x45:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x50:0 > -1 && x56:0 > 1 && x55:0 < x50:0 && x51:0 > 0 && x54:0 < x51:0)
f12229_0_remove_Load(c18, c19, x36:0, x37:0, x38:0, x39:0, x33:0) -> f12229_0_remove_Load(c20, c21, x41:0, x37:0, x42:0, x43:0, x33:0) :|: c21 = 0 && (c20 = 0 && (c19 = 0 && c18 = 0)) && (x41:0 > x36:0 && x44:0 > 1 && x43:0 < x39:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0)

The following rules are bounded:
f12229_0_remove_Load(c, c1, x24:0, x25:0, x26:0, x27:0, x20:0) -> f12229_0_remove_Load(c2, c3, x29:0, x25:0, x30:0, x31:0, x20:0) :|: c3 = 0 && (c2 = 0 && (c1 = 0 && c = 0)) && (x31:0 < x27:0 && x32:0 > 1 && x29:0 > x24:0 && x30:0 < x26:0 && x24:0 > 0 && x26:0 > 0 && x27:0 > 0)
f12229_0_remove_Load(c4, c5, x50:0, x51:0, x51:0, x50:0, x45:0) -> f12229_0_remove_Load(c6, c7, c8, x53:0, x54:0, x55:0, x45:0) :|: c8 = 1 && (c7 = 0 && (c6 = 0 && (c5 = 0 && c4 = 0))) && (x50:0 > -1 && x56:0 > 1 && x55:0 < x50:0 && x51:0 > 0 && x54:0 < x51:0)
f12229_0_remove_Load(c18, c19, x36:0, x37:0, x38:0, x39:0, x33:0) -> f12229_0_remove_Load(c20, c21, x41:0, x37:0, x42:0, x43:0, x33:0) :|: c21 = 0 && (c20 = 0 && (c19 = 0 && c18 = 0)) && (x41:0 > x36:0 && x44:0 > 1 && x43:0 < x39:0 && x42:0 < x38:0 && x36:0 > 0 && x38:0 > 0 && x39:0 > 0)


----------------------------------------

(133)
YES
