YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/u10d9.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 162 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) JBCTerminationSCC
        (8) SCCToIRSProof [SOUND, 32 ms]
        (9) IRSwT
        (10) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (11) IRSwT
        (12) IRSwTTerminationDigraphProof [EQUIVALENT, 12 ms]
        (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) TempFilterProof [SOUND, 20 ms]
        (17) IntTRS
        (18) PolynomialOrderProcessor [EQUIVALENT, 6 ms]
        (19) YES
    (20) JBCTerminationSCC
        (21) SCCToQDPProof [SOUND, 132 ms]
        (22) QDP
        (23) MRRProof [EQUIVALENT, 2 ms]
        (24) QDP
        (25) PisEmptyProof [EQUIVALENT, 0 ms]
        (26) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
package AlternatingGrowReduce2;

public class AlternatingGrowReduce2 {
	AlternatingGrowReduce2 next;

	public static void main(String[] argv) {
		Random.args = argv;
		AlternatingGrowReduce2 list = createList(Random.random());

		int mode = 0;
		while (list != null) {
			if (mode == 0) {
				list = list.next;
			} else if (mode == 1) {
				list = new AlternatingGrowReduce2(list);
			} else if (mode > 1) {
				list = list.next;
			}

			mode++;
			if (mode > 2) {
				mode = 0;
			}
		}
	}

	public AlternatingGrowReduce2(AlternatingGrowReduce2 old) {
		this.next = old;
	}

	public static AlternatingGrowReduce2 createList(int length) {
		AlternatingGrowReduce2 res = new AlternatingGrowReduce2(null);
		while (length > 0) {
			res = new AlternatingGrowReduce2(res);
			length--;
		}
		return res;
	}
}


package AlternatingGrowReduce2;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
package AlternatingGrowReduce2;

public class AlternatingGrowReduce2 {
	AlternatingGrowReduce2 next;

	public static void main(String[] argv) {
		Random.args = argv;
		AlternatingGrowReduce2 list = createList(Random.random());

		int mode = 0;
		while (list != null) {
			if (mode == 0) {
				list = list.next;
			} else if (mode == 1) {
				list = new AlternatingGrowReduce2(list);
			} else if (mode > 1) {
				list = list.next;
			}

			mode++;
			if (mode > 2) {
				mode = 0;
			}
		}
	}

	public AlternatingGrowReduce2(AlternatingGrowReduce2 old) {
		this.next = old;
	}

	public static AlternatingGrowReduce2 createList(int length) {
		AlternatingGrowReduce2 res = new AlternatingGrowReduce2(null);
		while (length > 0) {
			res = new AlternatingGrowReduce2(res);
			length--;
		}
		return res;
	}
}


package AlternatingGrowReduce2;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    String string = args[index];
    index++;
    return string.length();
  }
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
AlternatingGrowReduce2.AlternatingGrowReduce2.main([Ljava/lang/String;)V: Graph of 165 nodes with 1 SCC.



AlternatingGrowReduce2.AlternatingGrowReduce2.createList(I)LAlternatingGrowReduce2/AlternatingGrowReduce2;: Graph of 34 nodes with 1 SCC.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 2 SCCss.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: AlternatingGrowReduce2.AlternatingGrowReduce2.createList(I)LAlternatingGrowReduce2/AlternatingGrowReduce2;
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(8) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 17 IRulesP rules:
f531_0_createList_LE(EOS(STATIC_531), i63, i63) -> f539_0_createList_LE(EOS(STATIC_539), i63, i63) :|: TRUE
f539_0_createList_LE(EOS(STATIC_539), i63, i63) -> f547_0_createList_New(EOS(STATIC_547), i63) :|: i63 > 0
f547_0_createList_New(EOS(STATIC_547), i63) -> f550_0_createList_Duplicate(EOS(STATIC_550), i63) :|: TRUE
f550_0_createList_Duplicate(EOS(STATIC_550), i63) -> f553_0_createList_Load(EOS(STATIC_553), i63) :|: TRUE
f553_0_createList_Load(EOS(STATIC_553), i63) -> f625_0_createList_InvokeMethod(EOS(STATIC_625), i63) :|: TRUE
f625_0_createList_InvokeMethod(EOS(STATIC_625), i63) -> f635_0__init__Load(EOS(STATIC_635), i63) :|: TRUE
f635_0__init__Load(EOS(STATIC_635), i63) -> f640_0__init__InvokeMethod(EOS(STATIC_640), i63) :|: TRUE
f640_0__init__InvokeMethod(EOS(STATIC_640), i63) -> f647_0__init__Load(EOS(STATIC_647), i63) :|: TRUE
f647_0__init__Load(EOS(STATIC_647), i63) -> f661_0__init__Load(EOS(STATIC_661), i63) :|: TRUE
f661_0__init__Load(EOS(STATIC_661), i63) -> f668_0__init__FieldAccess(EOS(STATIC_668), i63) :|: TRUE
f668_0__init__FieldAccess(EOS(STATIC_668), i63) -> f679_0__init__Return(EOS(STATIC_679), i63) :|: TRUE
f679_0__init__Return(EOS(STATIC_679), i63) -> f683_0_createList_Store(EOS(STATIC_683), i63) :|: TRUE
f683_0_createList_Store(EOS(STATIC_683), i63) -> f686_0_createList_Inc(EOS(STATIC_686), i63) :|: TRUE
f686_0_createList_Inc(EOS(STATIC_686), i63) -> f690_0_createList_JMP(EOS(STATIC_690), i63 + -1) :|: TRUE
f690_0_createList_JMP(EOS(STATIC_690), i80) -> f723_0_createList_Load(EOS(STATIC_723), i80) :|: TRUE
f723_0_createList_Load(EOS(STATIC_723), i80) -> f521_0_createList_Load(EOS(STATIC_521), i80) :|: TRUE
f521_0_createList_Load(EOS(STATIC_521), i58) -> f531_0_createList_LE(EOS(STATIC_531), i58, i58) :|: TRUE
Combined rules. Obtained 1 IRulesP rules:
f531_0_createList_LE(EOS(STATIC_531), i63:0, i63:0) -> f531_0_createList_LE(EOS(STATIC_531), i63:0 - 1, i63:0 - 1) :|: i63:0 > 0
Filtered constant ground arguments:
   f531_0_createList_LE(x1, x2, x3) -> f531_0_createList_LE(x2, x3)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f531_0_createList_LE(x1, x2) -> f531_0_createList_LE(x2)
Finished conversion. Obtained 1 rules.P rules:
f531_0_createList_LE(i63:0) -> f531_0_createList_LE(i63:0 - 1) :|: i63:0 > 0

----------------------------------------

(9)
Obligation:
Rules:
f531_0_createList_LE(i63:0) -> f531_0_createList_LE(i63:0 - 1) :|: i63:0 > 0

----------------------------------------

(10) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(11)
Obligation:
Rules:
f531_0_createList_LE(i63:0) -> f531_0_createList_LE(arith) :|: i63:0 > 0 && arith = i63:0 - 1

----------------------------------------

(12) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f531_0_createList_LE(i63:0) -> f531_0_createList_LE(arith) :|: i63:0 > 0 && arith = i63:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f531_0_createList_LE(i63:0) -> f531_0_createList_LE(arith) :|: i63:0 > 0 && arith = i63:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f531_0_createList_LE(i63:0:0) -> f531_0_createList_LE(i63:0:0 - 1) :|: i63:0:0 > 0

----------------------------------------

(16) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f531_0_createList_LE(INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(17)
Obligation:
Rules:
f531_0_createList_LE(i63:0:0) -> f531_0_createList_LE(c) :|: c = i63:0:0 - 1 && i63:0:0 > 0

----------------------------------------

(18) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f531_0_createList_LE(x)] = x

The following rules are decreasing:
f531_0_createList_LE(i63:0:0) -> f531_0_createList_LE(c) :|: c = i63:0:0 - 1 && i63:0:0 > 0
The following rules are bounded:
f531_0_createList_LE(i63:0:0) -> f531_0_createList_LE(c) :|: c = i63:0:0 - 1 && i63:0:0 > 0

----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: AlternatingGrowReduce2.AlternatingGrowReduce2.main([Ljava/lang/String;)V
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*AlternatingGrowReduce2.AlternatingGrowReduce2: [next]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(21) SCCToQDPProof (SOUND)
Transformed TerminationGraph SCC to QDP. Log: 
Generated rules. Obtained 56 IRulesP rules:
f934_0_main_NULL(EOS(STATIC_934), java.lang.Object(o159sub), i89, java.lang.Object(o159sub)) -> f935_0_main_NULL(EOS(STATIC_935), java.lang.Object(o159sub), i89, java.lang.Object(o159sub)) :|: TRUE
f935_0_main_NULL(EOS(STATIC_935), java.lang.Object(o159sub), i89, java.lang.Object(o159sub)) -> f937_0_main_Load(EOS(STATIC_937), java.lang.Object(o159sub), i89) :|: TRUE
f937_0_main_Load(EOS(STATIC_937), java.lang.Object(o159sub), i89) -> f939_0_main_NE(EOS(STATIC_939), java.lang.Object(o159sub), i89, i89) :|: TRUE
f939_0_main_NE(EOS(STATIC_939), java.lang.Object(o159sub), i91, i91) -> f941_0_main_NE(EOS(STATIC_941), java.lang.Object(o159sub), i91, i91) :|: TRUE
f939_0_main_NE(EOS(STATIC_939), java.lang.Object(o159sub), matching1, matching2) -> f942_0_main_NE(EOS(STATIC_942), java.lang.Object(o159sub), 0, 0) :|: TRUE && matching1 = 0 && matching2 = 0
f941_0_main_NE(EOS(STATIC_941), java.lang.Object(o159sub), i91, i91) -> f944_0_main_Load(EOS(STATIC_944), java.lang.Object(o159sub), i91) :|: i91 > 0
f944_0_main_Load(EOS(STATIC_944), java.lang.Object(o159sub), i91) -> f946_0_main_ConstantStackPush(EOS(STATIC_946), java.lang.Object(o159sub), i91, i91) :|: TRUE
f946_0_main_ConstantStackPush(EOS(STATIC_946), java.lang.Object(o159sub), i91, i91) -> f948_0_main_NE(EOS(STATIC_948), java.lang.Object(o159sub), i91, i91, 1) :|: TRUE
f948_0_main_NE(EOS(STATIC_948), java.lang.Object(o159sub), matching1, matching2, matching3) -> f966_0_main_NE(EOS(STATIC_966), java.lang.Object(o159sub), 1, 1, 1) :|: i91 = 1 && matching1 = 1 && matching2 = 1 && matching3 = 1
f948_0_main_NE(EOS(STATIC_948), java.lang.Object(o159sub), matching1, matching2, matching3) -> f968_0_main_NE(EOS(STATIC_968), java.lang.Object(o159sub), 2, 2, 1) :|: i91 = 2 && matching1 = 2 && matching2 = 2 && matching3 = 1
f966_0_main_NE(EOS(STATIC_966), java.lang.Object(o159sub), matching1, matching2, matching3) -> f985_0_main_New(EOS(STATIC_985), java.lang.Object(o159sub), 1) :|: TRUE && matching1 = 1 && matching2 = 1 && matching3 = 1
f985_0_main_New(EOS(STATIC_985), java.lang.Object(o159sub), matching1) -> f991_0_main_Duplicate(EOS(STATIC_991), java.lang.Object(o159sub), 1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL))) :|: TRUE && matching1 = 1
f991_0_main_Duplicate(EOS(STATIC_991), java.lang.Object(o159sub), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL))) -> f994_0_main_Load(EOS(STATIC_994), java.lang.Object(o159sub), 1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL))) :|: TRUE && matching1 = 1
f994_0_main_Load(EOS(STATIC_994), java.lang.Object(o159sub), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL))) -> f997_0_main_InvokeMethod(EOS(STATIC_997), 1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub)) :|: TRUE && matching1 = 1
f997_0_main_InvokeMethod(EOS(STATIC_997), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub)) -> f1000_0__init__Load(EOS(STATIC_1000), 1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub)) :|: TRUE && matching1 = 1
f1000_0__init__Load(EOS(STATIC_1000), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub)) -> f1009_0__init__InvokeMethod(EOS(STATIC_1009), 1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL))) :|: TRUE && matching1 = 1
f1009_0__init__InvokeMethod(EOS(STATIC_1009), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL))) -> f1013_0__init__Load(EOS(STATIC_1013), 1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub)) :|: TRUE && matching1 = 1
f1013_0__init__Load(EOS(STATIC_1013), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub)) -> f1021_0__init__Load(EOS(STATIC_1021), 1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL))) :|: TRUE && matching1 = 1
f1021_0__init__Load(EOS(STATIC_1021), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL))) -> f1026_0__init__FieldAccess(EOS(STATIC_1026), 1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub)) :|: TRUE && matching1 = 1
f1026_0__init__FieldAccess(EOS(STATIC_1026), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, NULL)), java.lang.Object(o159sub)) -> f1036_0__init__Return(EOS(STATIC_1036), 1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub)))) :|: TRUE && matching1 = 1
f1036_0__init__Return(EOS(STATIC_1036), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub)))) -> f1039_0_main_Store(EOS(STATIC_1039), 1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub)))) :|: TRUE && matching1 = 1
f1039_0_main_Store(EOS(STATIC_1039), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub)))) -> f1042_0_main_JMP(EOS(STATIC_1042), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), 1) :|: TRUE && matching1 = 1
f1042_0_main_JMP(EOS(STATIC_1042), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), matching1) -> f1044_0_main_Inc(EOS(STATIC_1044), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), 1) :|: TRUE && matching1 = 1
f1044_0_main_Inc(EOS(STATIC_1044), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), matching1) -> f1048_0_main_Load(EOS(STATIC_1048), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), 2) :|: TRUE && matching1 = 1
f1048_0_main_Load(EOS(STATIC_1048), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), matching1) -> f1062_0_main_ConstantStackPush(EOS(STATIC_1062), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), 2, 2) :|: TRUE && matching1 = 2
f1062_0_main_ConstantStackPush(EOS(STATIC_1062), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), matching1, matching2) -> f1069_0_main_LE(EOS(STATIC_1069), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), 2, 2, 2) :|: TRUE && matching1 = 2 && matching2 = 2
f1069_0_main_LE(EOS(STATIC_1069), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), matching1, matching2, matching3) -> f1082_0_main_Load(EOS(STATIC_1082), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), 2) :|: TRUE && matching1 = 2 && matching2 = 2 && matching3 = 2
f1082_0_main_Load(EOS(STATIC_1082), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), matching1) -> f929_0_main_Load(EOS(STATIC_929), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub))), 2) :|: TRUE && matching1 = 2
f929_0_main_Load(EOS(STATIC_929), o155, i89) -> f934_0_main_NULL(EOS(STATIC_934), o155, i89, o155) :|: TRUE
f968_0_main_NE(EOS(STATIC_968), java.lang.Object(o159sub), matching1, matching2, matching3) -> f988_0_main_Load(EOS(STATIC_988), java.lang.Object(o159sub), 2) :|: TRUE && matching1 = 2 && matching2 = 2 && matching3 = 1
f988_0_main_Load(EOS(STATIC_988), java.lang.Object(o159sub), matching1) -> f992_0_main_ConstantStackPush(EOS(STATIC_992), java.lang.Object(o159sub), 2, 2) :|: TRUE && matching1 = 2
f992_0_main_ConstantStackPush(EOS(STATIC_992), java.lang.Object(o159sub), matching1, matching2) -> f995_0_main_LE(EOS(STATIC_995), java.lang.Object(o159sub), 2, 2) :|: TRUE && matching1 = 2 && matching2 = 2
f995_0_main_LE(EOS(STATIC_995), java.lang.Object(o159sub), matching1, matching2) -> f998_0_main_Load(EOS(STATIC_998), java.lang.Object(o159sub), 2) :|: TRUE && matching1 = 2 && matching2 = 2
f998_0_main_Load(EOS(STATIC_998), java.lang.Object(o159sub), matching1) -> f1001_0_main_FieldAccess(EOS(STATIC_1001), 2, java.lang.Object(o159sub)) :|: TRUE && matching1 = 2
f1001_0_main_FieldAccess(EOS(STATIC_1001), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, o165))) -> f1003_0_main_FieldAccess(EOS(STATIC_1003), 2, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, o165))) :|: TRUE && matching1 = 2
f1003_0_main_FieldAccess(EOS(STATIC_1003), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, o165))) -> f1011_0_main_Store(EOS(STATIC_1011), 2, o165) :|: TRUE && matching1 = 2
f1011_0_main_Store(EOS(STATIC_1011), matching1, o165) -> f1018_0_main_Inc(EOS(STATIC_1018), o165, 2) :|: TRUE && matching1 = 2
f1018_0_main_Inc(EOS(STATIC_1018), o165, matching1) -> f1024_0_main_Load(EOS(STATIC_1024), o165) :|: TRUE && matching1 = 2
f1024_0_main_Load(EOS(STATIC_1024), o165) -> f1030_0_main_ConstantStackPush(EOS(STATIC_1030), o165) :|: TRUE
f1030_0_main_ConstantStackPush(EOS(STATIC_1030), o165) -> f1038_0_main_LE(EOS(STATIC_1038), o165) :|: TRUE
f1038_0_main_LE(EOS(STATIC_1038), o165) -> f1041_0_main_ConstantStackPush(EOS(STATIC_1041), o165) :|: TRUE
f1041_0_main_ConstantStackPush(EOS(STATIC_1041), o165) -> f1043_0_main_Store(EOS(STATIC_1043), o165, 0) :|: TRUE
f1043_0_main_Store(EOS(STATIC_1043), o165, matching1) -> f1045_0_main_JMP(EOS(STATIC_1045), o165, 0) :|: TRUE && matching1 = 0
f1045_0_main_JMP(EOS(STATIC_1045), o165, matching1) -> f1060_0_main_Load(EOS(STATIC_1060), o165, 0) :|: TRUE && matching1 = 0
f1060_0_main_Load(EOS(STATIC_1060), o165, matching1) -> f929_0_main_Load(EOS(STATIC_929), o165, 0) :|: TRUE && matching1 = 0
f942_0_main_NE(EOS(STATIC_942), java.lang.Object(o159sub), matching1, matching2) -> f945_0_main_Load(EOS(STATIC_945), java.lang.Object(o159sub), 0) :|: TRUE && matching1 = 0 && matching2 = 0
f945_0_main_Load(EOS(STATIC_945), java.lang.Object(o159sub), matching1) -> f947_0_main_FieldAccess(EOS(STATIC_947), 0, java.lang.Object(o159sub)) :|: TRUE && matching1 = 0
f947_0_main_FieldAccess(EOS(STATIC_947), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, o161))) -> f949_0_main_FieldAccess(EOS(STATIC_949), 0, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, o161))) :|: TRUE && matching1 = 0
f949_0_main_FieldAccess(EOS(STATIC_949), matching1, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, o161))) -> f970_0_main_Store(EOS(STATIC_970), 0, o161) :|: TRUE && matching1 = 0
f970_0_main_Store(EOS(STATIC_970), matching1, o161) -> f990_0_main_JMP(EOS(STATIC_990), o161, 0) :|: TRUE && matching1 = 0
f990_0_main_JMP(EOS(STATIC_990), o161, matching1) -> f993_0_main_Inc(EOS(STATIC_993), o161, 0) :|: TRUE && matching1 = 0
f993_0_main_Inc(EOS(STATIC_993), o161, matching1) -> f996_0_main_Load(EOS(STATIC_996), o161, 1) :|: TRUE && matching1 = 0
f996_0_main_Load(EOS(STATIC_996), o161, matching1) -> f999_0_main_ConstantStackPush(EOS(STATIC_999), o161, 1, 1) :|: TRUE && matching1 = 1
f999_0_main_ConstantStackPush(EOS(STATIC_999), o161, matching1, matching2) -> f1002_0_main_LE(EOS(STATIC_1002), o161, 1, 1) :|: TRUE && matching1 = 1 && matching2 = 1
f1002_0_main_LE(EOS(STATIC_1002), o161, matching1, matching2) -> f1006_0_main_Load(EOS(STATIC_1006), o161, 1) :|: TRUE && matching1 = 1 && matching2 = 1
f1006_0_main_Load(EOS(STATIC_1006), o161, matching1) -> f929_0_main_Load(EOS(STATIC_929), o161, 1) :|: TRUE && matching1 = 1
Combined rules. Obtained 3 IRulesP rules:
f934_0_main_NULL(EOS(STATIC_934), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, o161:0)), 0, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, o161:0))) -> f934_0_main_NULL(EOS(STATIC_934), o161:0, 1, o161:0) :|: TRUE
f934_0_main_NULL(EOS(STATIC_934), java.lang.Object(o159sub:0), 1, java.lang.Object(o159sub:0)) -> f934_0_main_NULL(EOS(STATIC_934), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub:0))), 2, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, java.lang.Object(o159sub:0)))) :|: TRUE
f934_0_main_NULL(EOS(STATIC_934), java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, o165:0)), 2, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(EOC, o165:0))) -> f934_0_main_NULL(EOS(STATIC_934), o165:0, 0, o165:0) :|: TRUE
Filtered constant ground arguments:
   f934_0_main_NULL(x1, x2, x3, x4) -> f934_0_main_NULL(x2, x3, x4)
   EOS(x1) -> EOS
   AlternatingGrowReduce2.AlternatingGrowReduce2(x1, x2) -> AlternatingGrowReduce2.AlternatingGrowReduce2(x2)
Filtered duplicate arguments:
   f934_0_main_NULL(x1, x2, x3) -> f934_0_main_NULL(x2, x3)

----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   f934_0_main_NULL(0, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(o161:0))) -> f934_0_main_NULL(1, o161:0)
   f934_0_main_NULL(1, java.lang.Object(o159sub:0)) -> f934_0_main_NULL(2, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(java.lang.Object(o159sub:0))))
   f934_0_main_NULL(2, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(o165:0))) -> f934_0_main_NULL(0, o165:0)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   f934_0_main_NULL(0, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(o161:0))) -> f934_0_main_NULL(1, o161:0)
   f934_0_main_NULL(1, java.lang.Object(o159sub:0)) -> f934_0_main_NULL(2, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(java.lang.Object(o159sub:0))))
   f934_0_main_NULL(2, java.lang.Object(AlternatingGrowReduce2.AlternatingGrowReduce2(o165:0))) -> f934_0_main_NULL(0, o165:0)


Used ordering: Knuth-Bendix order [KBO] with precedence:2 > 0 > 1 > java.lang.Object_1 > f934_0_main_NULL_2 > AlternatingGrowReduce2.AlternatingGrowReduce2_1

and weight map:

   0=2
   1=3
   2=1
   java.lang.Object_1=1
   AlternatingGrowReduce2.AlternatingGrowReduce2_1=1
   f934_0_main_NULL_2=0

The variable weight is 1

----------------------------------------

(24)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(26)
YES
