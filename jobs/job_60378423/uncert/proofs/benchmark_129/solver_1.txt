NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/GwOT7.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 143 ms]
(4) JBCTerminationGraph
(5) JBCNonTerm [COMPLETE, 238 ms]
(6) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
package simple.ex07;

public class Ex07 {

	public static void loop(int i) {
		while (true) {
			if (i > 0) {
				i--;
			}
			if (i < 0) {
				i++;
			}
		}
	}
}


package simple.ex07;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
        int value = args[1].length();
        if (args[0].length() % 2 == 0) {
            value = -value;
        }
		Ex07.loop(value);

	}

}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
package simple.ex07;

public class Ex07 {

	public static void loop(int i) {
		while (true) {
			if (i > 0) {
				i--;
			}
			if (i < 0) {
				i++;
			}
		}
	}
}


package simple.ex07;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
        int value = args[1].length();
        if (args[0].length() % 2 == 0) {
            value = -value;
        }
		Ex07.loop(value);

	}

}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
simple.ex07.Main.main([Ljava/lang/String;)V: Graph of 120 nodes with 2 SCCs.





----------------------------------------

(5) JBCNonTerm (COMPLETE)
Constructed a run with a repetition. States 23 and 27 are repetitions (when considering only the interesting positions [lv_0_0]).

0:<simple.ex07.Main.main||0: load ADDR args||args: a2|| ->
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o31, o14} -->{java.lang.Object...}
	o14!: String(count=0, hash=#, offset=[0,+inf), value=o15?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
o15:: [CHAR] -->{java.lang.Object...}
a2-><-o32
a2-><-o31
a2-><-o15
a2-><-o14
YES:  (JL1)
1:<simple.ex07.Main.main||1: push 1||args: a2||a2>
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o31, o14} -->{java.lang.Object...}
	o14!: String(count=0, hash=#, offset=[0,+inf), value=o15?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
o15:: [CHAR] -->{java.lang.Object...}
a2-><-o32
a2-><-o31
a2-><-o15
a2-><-o14
YES:  (JL1)
2:<simple.ex07.Main.main||2: Read ADDR from array||args: a2||a2, 1>
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o31, o14} -->{java.lang.Object...}
	o14!: String(count=0, hash=#, offset=[0,+inf), value=o15?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
o15:: [CHAR] -->{java.lang.Object...}
a2-><-o32
a2-><-o31
a2-><-o15
a2-><-o14
YES:  (JL1)
3:<simple.ex07.Main.main||3: java.lang.String.length()I||args: a2||o14>
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o31, o14} -->{java.lang.Object...}
	o14!: String(count=0, hash=#, offset=[0,+inf), value=o15?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
o15:: [CHAR] -->{java.lang.Object...}
a2-><-o32
a2-><-o31
a2-><-o15
a2-><-o14
YES:  (JL1)
4:<java.lang.String.length||0: load ADDR this||this: o14|| ->
<simple.ex07.Main.main||3: java.lang.String.length||args: a2|| ->
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o31, o14} -->{java.lang.Object...}
	o14!: String(count=0, hash=#, offset=[0,+inf), value=o15?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
o15:: [CHAR] -->{java.lang.Object...}
a2-><-o32
a2-><-o31
a2-><-o15
a2-><-o14
YES:  (JL1)
5:<java.lang.String.length||1: Read from count|| - ||o14>
<simple.ex07.Main.main||3: java.lang.String.length||args: a2|| ->
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o31, o14} -->{java.lang.Object...}
	o14!: String(count=0, hash=#, offset=[0,+inf), value=o15?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
o15:: [CHAR] -->{java.lang.Object...}
a2-><-o32
a2-><-o31
a2-><-o15
a2-><-o14
YES:  (JL1)
6:<java.lang.String.length||4: return INT|| - ||0>
<simple.ex07.Main.main||3: java.lang.String.length||args: a2|| ->
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o31, o14} -->{java.lang.Object...}
	o14!: String(count=0, hash=#, offset=[0,+inf), value=o15?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
o15:: [CHAR] -->{java.lang.Object...}
a2-><-o32
a2-><-o31
a2-><-o15
a2-><-o14
YES:  (JL1)
7:<simple.ex07.Main.main||6: store INT to value||args: a2||0>
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o31, o14} -->{java.lang.Object...}
	o14!: String(count=0, hash=#, offset=[0,+inf), value=o15?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
o15:: [CHAR] -->{java.lang.Object...}
a2-><-o32
a2-><-o31
a2-><-o15
a2-><-o14
YES:  (JL1)
8:<simple.ex07.Main.main||7: load ADDR args||args: a2, value: 0|| ->
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o31, o14} -->{java.lang.Object...}
	o14!: String(count=0, hash=#, offset=[0,+inf), value=o15?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
o15:: [CHAR] -->{java.lang.Object...}
a2-><-o32
a2-><-o31
a2-><-o15
a2-><-o14
YES:  (JL1)
9:<simple.ex07.Main.main||8: push 0||value: 0||a2>
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o31, o14} -->{java.lang.Object...}
	o14!: String(count=0, hash=#, offset=[0,+inf), value=o15?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
o15:: [CHAR] -->{java.lang.Object...}
a2-><-o32
a2-><-o31
a2-><-o15
a2-><-o14
YES:  (JL1)
10:<simple.ex07.Main.main||9: Read ADDR from array||value: 0||a2, 0>
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
	a2([java.lang.String...]): {o31, o14} -->{java.lang.Object...}
	o14!: String(count=0, hash=#, offset=[0,+inf), value=o15?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
o15:: [CHAR] -->{java.lang.Object...}
a2-><-o32
a2-><-o31
a2-><-o15
a2-><-o14
YES:  (JL1)
11:<simple.ex07.Main.main||10: java.lang.String.length()I||value: 0||o31>
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
12:<java.lang.String.length||0: load ADDR this||this: o31|| ->
<simple.ex07.Main.main||10: java.lang.String.length||value: 0|| ->
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
13:<java.lang.String.length||1: Read from count|| - ||o31>
<simple.ex07.Main.main||10: java.lang.String.length||value: 0|| ->
	o31!: String(count=0, hash=#, offset=[0,+inf), value=o32?) -->{java.lang.Object...}
o32:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
14:<java.lang.String.length||4: return INT|| - ||0>
<simple.ex07.Main.main||10: java.lang.String.length||value: 0|| ->
YES:  (JL1)
15:<simple.ex07.Main.main||13: push 2||value: 0||0>
YES:  (JL1)
16:<simple.ex07.Main.main||14: TMOD||value: 0||0, 2>
YES:  (JL1)
17:<simple.ex07.Main.main||15: NE 0||value: 0||0>
YES:  (JL1)
18:<simple.ex07.Main.main||18: load INT value||value: 0|| ->
YES:  (JL1)
19:<simple.ex07.Main.main||19: NEG|| - ||0>
YES:  (JL1)
20:<simple.ex07.Main.main||20: store INT to value|| - ||0>
YES:  (JL1)
21:<simple.ex07.Main.main||21: load INT value||value: 0|| ->
YES:  (JL1)
22:<simple.ex07.Main.main||22: simple.ex07.Ex07.loop(I)V|| - ||0>
YES:  (JL1)
23:<simple.ex07.Ex07.loop||0: load INT i||i: 0|| ->
<simple.ex07.Main.main||22: simple.ex07.Ex07.loop|| - || ->
YES:  (JL1)
24:<simple.ex07.Ex07.loop||1: LE 0||i: 0||0>
<simple.ex07.Main.main||22: simple.ex07.Ex07.loop|| - || ->
YES:  (JL1)
25:<simple.ex07.Ex07.loop||7: load INT i||i: 0|| ->
<simple.ex07.Main.main||22: simple.ex07.Ex07.loop|| - || ->
YES:  (JL1)
26:<simple.ex07.Ex07.loop||8: GE 0||i: 0||0>
<simple.ex07.Main.main||22: simple.ex07.Ex07.loop|| - || ->
YES:  (JL1)
27:<simple.ex07.Ex07.loop||0: load INT i||i: 0|| ->
<simple.ex07.Main.main||22: simple.ex07.Ex07.loop|| - || ->
YES:  (JL1)

----------------------------------------

(6)
NO
