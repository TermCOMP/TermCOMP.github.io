NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/UjhZD.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 122 ms]
(4) JBCTerminationGraph
(5) JBCNonTerm [COMPLETE, 70 ms]
(6) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
package simple.mirrorIntervSim;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		MirrorIntervSim.loop(args.length);
	}

}


package simple.mirrorIntervSim;

public class MirrorIntervSim {

	/*

	 */
	public static void loop(int i) {
		while (i != 0) {
			if (-5 <= i && i <= 35) {
				if (i < 0) {
					i = -5;
				} else {
					if (i > 30) {
						i = 35;
					} else {
						i--;
					}	
				}					
			} else {
				i = 0;
			}
		}
	}
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
package simple.mirrorIntervSim;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		MirrorIntervSim.loop(args.length);
	}

}


package simple.mirrorIntervSim;

public class MirrorIntervSim {

	/*

	 */
	public static void loop(int i) {
		while (i != 0) {
			if (-5 <= i && i <= 35) {
				if (i < 0) {
					i = -5;
				} else {
					if (i > 30) {
						i = 35;
					} else {
						i--;
					}	
				}					
			} else {
				i = 0;
			}
		}
	}
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
simple.mirrorIntervSim.Main.main([Ljava/lang/String;)V: Graph of 39 nodes with 1 SCC.





----------------------------------------

(5) JBCNonTerm (COMPLETE)
Constructed a run with a repetition. States 3 and 19 are repetitions (when considering only the interesting positions [lv_0_0]).

0:<simple.mirrorIntervSim.Main.main||0: load ADDR args||args: a31|| ->
	a31([java.lang.String...]): length 35 -->{java.lang.Object...}
YES:  (JL1)
1:<simple.mirrorIntervSim.Main.main||1: arraylength|| - ||a31>
	a31([java.lang.String...]): length 35 -->{java.lang.Object...}
YES:  (JL1)
2:<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop(I)V|| - ||35>
YES:  (JL1)
3:<simple.mirrorIntervSim.MirrorIntervSim.loop||0: load INT i||i: 35|| ->
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
4:<simple.mirrorIntervSim.MirrorIntervSim.loop||1: EQ 0||i: 35||35>
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
5:<simple.mirrorIntervSim.MirrorIntervSim.loop||4: push -5||i: 35|| ->
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
6:<simple.mirrorIntervSim.MirrorIntervSim.loop||6: load INT i||i: 35||-5>
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
7:<simple.mirrorIntervSim.MirrorIntervSim.loop||7: GT||i: 35||-5, 35>
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
8:<simple.mirrorIntervSim.MirrorIntervSim.loop||10: load INT i||i: 35|| ->
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
9:<simple.mirrorIntervSim.MirrorIntervSim.loop||11: push 35||i: 35||35>
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
10:<simple.mirrorIntervSim.MirrorIntervSim.loop||13: GT||i: 35||35, 35>
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
11:<simple.mirrorIntervSim.MirrorIntervSim.loop||16: load INT i||i: 35|| ->
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
12:<simple.mirrorIntervSim.MirrorIntervSim.loop||17: GE 0||i: 35||35>
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
13:<simple.mirrorIntervSim.MirrorIntervSim.loop||26: load INT i||i: 35|| ->
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
14:<simple.mirrorIntervSim.MirrorIntervSim.loop||27: push 30||i: 35||35>
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
15:<simple.mirrorIntervSim.MirrorIntervSim.loop||29: LE||i: 35||35, 30>
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
16:<simple.mirrorIntervSim.MirrorIntervSim.loop||32: push 35|| - || ->
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
17:<simple.mirrorIntervSim.MirrorIntervSim.loop||34: store INT to i|| - ||35>
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
18:<simple.mirrorIntervSim.MirrorIntervSim.loop||35: jmp||i: 35|| ->
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)
19:<simple.mirrorIntervSim.MirrorIntervSim.loop||0: load INT i||i: 35|| ->
<simple.mirrorIntervSim.Main.main||2: simple.mirrorIntervSim.MirrorIntervSim.loop|| - || ->
YES:  (JL1)

----------------------------------------

(6)
NO
