YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/QumnF.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 61 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) TRUE


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class NonPeriodic {

    public static void main(String args[]) {
	int x = 1, y = 0;

	if (args.length >= 1) {
	    y = -1*args[0].length();
	}

	// does not terminate for x = 1 and y = 1
	while (y > 0)
	    if (x > 0) x = x - 1;
	    else {
		y = y + 1;
		x = y;
	    }
    }
}


----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class NonPeriodic {

    public static void main(String args[]) {
	int x = 1, y = 0;

	if (args.length >= 1) {
	    y = -1*args[0].length();
	}

	// does not terminate for x = 1 and y = 1
	while (y > 0)
	    if (x > 0) x = x - 1;
	    else {
		y = y + 1;
		x = y;
	    }
    }
}


----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
NonPeriodic.main([Ljava/lang/String;)V: Graph of 53 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Proven termination by absence of SCCs
----------------------------------------

(6)
TRUE
