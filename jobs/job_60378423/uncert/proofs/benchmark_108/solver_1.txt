NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/d8Uk8.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 51 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 117 ms]
(4) JBCTerminationGraph
(5) JBCNonTerm [COMPLETE, 235 ms]
(6) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class NonPeriodicNonterm2 {
  public static void main(String[] args) {
   int x = args[0].length(); 
   int y = args[1].length();
   while(x >= y) {
    int z = x - y;
    if (z > 0) {
     x--;
    } else {
     x = 2*x + 1;
     y++;
    }
   }
  }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class NonPeriodicNonterm2 {
  public static void main(String[] args) {
   int x = args[0].length(); 
   int y = args[1].length();
   while(x >= y) {
    int z = x - y;
    if (z > 0) {
     x--;
    } else {
     x = 2*x + 1;
     y++;
    }
   }
  }
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
NonPeriodicNonterm2.main([Ljava/lang/String;)V: Graph of 144 nodes with 1 SCC.





----------------------------------------

(5) JBCNonTerm (COMPLETE)
Reached a loop using the following run: 

0:<NonPeriodicNonterm2.main||0: load ADDR args||args: a13|| ->
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a13([java.lang.String...]): {o15, o37} -->{java.lang.Object...}
	o15!: String(count=1, hash=#, offset=0, value=o16?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a13-><-o38
a13-><-o37
a13-><-o16
a13-><-o15
YES:  (JL1)
1:<NonPeriodicNonterm2.main||1: push 0||args: a13||a13>
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a13([java.lang.String...]): {o15, o37} -->{java.lang.Object...}
	o15!: String(count=1, hash=#, offset=0, value=o16?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a13-><-o38
a13-><-o37
a13-><-o16
a13-><-o15
YES:  (JL1)
2:<NonPeriodicNonterm2.main||2: Read ADDR from array||args: a13||a13, 0>
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a13([java.lang.String...]): {o15, o37} -->{java.lang.Object...}
	o15!: String(count=1, hash=#, offset=0, value=o16?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a13-><-o38
a13-><-o37
a13-><-o16
a13-><-o15
YES:  (JL1)
3:<NonPeriodicNonterm2.main||3: java.lang.String.length()I||args: a13||o15>
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a13([java.lang.String...]): {o15, o37} -->{java.lang.Object...}
	o15!: String(count=1, hash=#, offset=0, value=o16?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a13-><-o38
a13-><-o37
a13-><-o16
a13-><-o15
YES:  (JL1)
4:<java.lang.String.length||0: load ADDR this||this: o15|| ->
<NonPeriodicNonterm2.main||3: java.lang.String.length||args: a13|| ->
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a13([java.lang.String...]): {o15, o37} -->{java.lang.Object...}
	o15!: String(count=1, hash=#, offset=0, value=o16?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a13-><-o38
a13-><-o37
a13-><-o16
a13-><-o15
YES:  (JL1)
5:<java.lang.String.length||1: Read from count|| - ||o15>
<NonPeriodicNonterm2.main||3: java.lang.String.length||args: a13|| ->
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a13([java.lang.String...]): {o15, o37} -->{java.lang.Object...}
	o15!: String(count=1, hash=#, offset=0, value=o16?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a13-><-o38
a13-><-o37
a13-><-o16
a13-><-o15
YES:  (JL1)
6:<java.lang.String.length||4: return INT|| - ||1>
<NonPeriodicNonterm2.main||3: java.lang.String.length||args: a13|| ->
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a13([java.lang.String...]): {o15, o37} -->{java.lang.Object...}
	o15!: String(count=1, hash=#, offset=0, value=o16?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a13-><-o38
a13-><-o37
a13-><-o16
a13-><-o15
YES:  (JL1)
7:<NonPeriodicNonterm2.main||6: store INT to x||args: a13||1>
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a13([java.lang.String...]): {o15, o37} -->{java.lang.Object...}
	o15!: String(count=1, hash=#, offset=0, value=o16?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a13-><-o38
a13-><-o37
a13-><-o16
a13-><-o15
YES:  (JL1)
8:<NonPeriodicNonterm2.main||7: load ADDR args||args: a13, x: 1|| ->
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a13([java.lang.String...]): {o15, o37} -->{java.lang.Object...}
	o15!: String(count=1, hash=#, offset=0, value=o16?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a13-><-o38
a13-><-o37
a13-><-o16
a13-><-o15
YES:  (JL1)
9:<NonPeriodicNonterm2.main||8: push 1||x: 1||a13>
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a13([java.lang.String...]): {o15, o37} -->{java.lang.Object...}
	o15!: String(count=1, hash=#, offset=0, value=o16?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a13-><-o38
a13-><-o37
a13-><-o16
a13-><-o15
YES:  (JL1)
10:<NonPeriodicNonterm2.main||9: Read ADDR from array||x: 1||a13, 1>
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
	a13([java.lang.String...]): {o15, o37} -->{java.lang.Object...}
	o15!: String(count=1, hash=#, offset=0, value=o16?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
o16:: [CHAR] -->{java.lang.Object...}
a13-><-o38
a13-><-o37
a13-><-o16
a13-><-o15
YES:  (JL1)
11:<NonPeriodicNonterm2.main||10: java.lang.String.length()I||x: 1||o37>
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
12:<java.lang.String.length||0: load ADDR this||this: o37|| ->
<NonPeriodicNonterm2.main||10: java.lang.String.length||x: 1|| ->
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
13:<java.lang.String.length||1: Read from count|| - ||o37>
<NonPeriodicNonterm2.main||10: java.lang.String.length||x: 1|| ->
	o37!: String(count=0, hash=#, offset=0, value=o38?) -->{java.lang.Object...}
o38:: [CHAR] -->{java.lang.Object...}
YES:  (JL1)
14:<java.lang.String.length||4: return INT|| - ||0>
<NonPeriodicNonterm2.main||10: java.lang.String.length||x: 1|| ->
YES:  (JL1)
15:<NonPeriodicNonterm2.main||13: store INT to y||x: 1||0>
YES:  (JL1)
16:<NonPeriodicNonterm2.main||14: load INT x||x: 1, y: 0|| ->
YES:  (JL1)
Start state of loop: 

[a4(lv_0_0)]
<NonPeriodicNonterm2.main||14: load INT x||x: i68, y: i30|| ->
	i16: [2,+inf){0,+inf}
	a4([java.lang.String...]): length i16 -->{java.lang.Object...}
	i68: [-1,+inf)(l1)
	i30: [0,+inf)
YES:  (JL1)


In the loop head node, references [i68, i30] were interesting.

All methods calls in the loop body are side-effect free, hence they can be ignored.

By SMT, we could prove

((-1 <= initial_i68 and 0 <= initial_i30 and 2 <= initial_i16) and ((((path1_i78 = (path1_i68 - path1_i30) and path1_i78 = path1_i89 and path1_i102 = (path1_i68 + -1) and path1_i102 = res_i68 and path1_i30 = res_i30 and path1_i68 = initial_i68 and path1_i30 = initial_i30) and (path1_i68 >= path1_i30 and path1_i68 >= path1_i30 and path1_i89 > 0)) or ((path2_i78 = (path2_i68 - path2_i30) and path2_i104 = (2 * path2_i68) and path2_i111 = (path2_i104 + 1) and path2_i113 = (path2_i30 + 1) and path2_i111 = res_i68 and path2_i113 = res_i30 and path2_i68 = initial_i68 and path2_i30 = initial_i30) and (path2_i68 >= path2_i30 and path2_i68 >= path2_i30 and path2_i78 = 0 and 0 <= 0))) and (((res1_i78 = (res1_i68 - res1_i30) and res1_i78 = res1_i89 and res1_i102 = (res1_i68 + -1) and res_i68 = res1_i68 and res_i30 = res1_i30) and !(res1_i68 >= res1_i30 and res1_i68 >= res1_i30 and res1_i89 > 0)) and ((res2_i78 = (res2_i68 - res2_i30) and res2_i104 = (2 * res2_i68) and res2_i111 = (res2_i104 + 1) and res2_i113 = (res2_i30 + 1) and res_i68 = res2_i68 and res_i30 = res2_i30) and !(res2_i68 >= res2_i30 and res2_i68 >= res2_i30 and res2_i78 = 0 and 0 <= 0)))))

to be UNSAT. Consequently, the loop will not terminate.
----------------------------------------

(6)
NO
