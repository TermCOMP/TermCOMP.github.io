YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/25aFr.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

between(g,g,g)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToIRSwTTransformerProof [SOUND, 19 ms]
(2) IRSwT
(3) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
(4) IRSwT
(5) IntTRSCompressionProof [EQUIVALENT, 5 ms]
(6) IRSwT
(7) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
(8) IRSwT
(9) IRSwTTerminationDigraphProof [EQUIVALENT, 10 ms]
(10) IRSwT
(11) IntTRSCompressionProof [EQUIVALENT, 0 ms]
(12) IRSwT
(13) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
(14) IRSwT
(15) TempFilterProof [SOUND, 17 ms]
(16) IntTRS
(17) PolynomialOrderProcessor [EQUIVALENT, 3 ms]
(18) YES


----------------------------------------

(0)
Obligation:
Clauses:

between(I, J, I) :- =<(I, J).
between(I, J, K) :- ','(<(I, J), ','(is(I1, +(I, 1)), between(I1, J, K))).


Query: between(g,g,g)
----------------------------------------

(1) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(between I J I)",
                "(=< I J)"
            ],
            [
                "(between I J K)",
                "(',' (< I J) (',' (is I1 (+ I (1))) (between I1 J K)))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "15": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(between T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "16": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(between T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "17": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(=< T12 T13)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T12",
                        "T13"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "18": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "19": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "1921": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T12",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T13",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<="
                        }]
                    },
                    "ground": [
                        "T13",
                        "T12"
                    ],
                    "free": [],
                    "exprvars": [
                        "T13",
                        "T12"
                    ]
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(between T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1940": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(between T23 T21 T22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T23",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T20",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T20",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "name": "T21",
                                    "type": "PlainIntegerVariable"
                                },
                                "operation": "<"
                            }
                        ]
                    },
                    "ground": [
                        "T20",
                        "T23",
                        "T22",
                        "T21"
                    ],
                    "free": ["X21"],
                    "exprvars": [
                        "T20",
                        "T23",
                        "T21"
                    ]
                }
            },
            "6": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(between T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(between T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1925": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1924": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (< T20 T21) (',' (is X21 (+ T20 (1))) (between X21 T21 T22)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T20",
                        "T21",
                        "T22"
                    ],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "1923": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T12",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T13",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T13",
                        "T12"
                    ]
                }
            },
            "1934": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T20",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T21",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">="
                        }]
                    },
                    "ground": [
                        "T20",
                        "T22",
                        "T21"
                    ],
                    "free": ["X21"],
                    "exprvars": [
                        "T20",
                        "T21"
                    ]
                }
            },
            "1922": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T12",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T13",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">"
                        }]
                    },
                    "ground": [
                        "T13",
                        "T12"
                    ],
                    "free": [],
                    "exprvars": [
                        "T13",
                        "T12"
                    ]
                }
            },
            "1933": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X21 (+ T20 (1))) (between X21 T21 T22))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T20",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T21",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<"
                        }]
                    },
                    "ground": [
                        "T20",
                        "T22",
                        "T21"
                    ],
                    "free": ["X21"],
                    "exprvars": [
                        "T20",
                        "T21"
                    ]
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 6,
                "label": "CASE"
            },
            {
                "from": 6,
                "to": 15,
                "label": "PARALLEL"
            },
            {
                "from": 6,
                "to": 16,
                "label": "PARALLEL"
            },
            {
                "from": 15,
                "to": 17,
                "label": "EVAL with clause\nbetween(X9, X10, X9) :- =<(X9, X10).\nand substitutionT1 -> T12,\nX9 -> T12,\nT2 -> T13,\nX10 -> T13,\nT3 -> T12"
            },
            {
                "from": 15,
                "to": 18,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 16,
                "to": 1924,
                "label": "ONLY EVAL with clause\nbetween(X18, X19, X20) :- ','(<(X18, X19), ','(is(X21, +(X18, 1)), between(X21, X19, X20))).\nand substitutionT1 -> T20,\nX18 -> T20,\nT2 -> T21,\nX19 -> T21,\nT3 -> T22,\nX20 -> T22"
            },
            {
                "from": 17,
                "to": 19,
                "label": "IS ERROR"
            },
            {
                "from": 17,
                "to": 1921,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 17,
                "to": 1922,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 1921,
                "to": 1923,
                "label": "SUCCESS"
            },
            {
                "from": 1924,
                "to": 1925,
                "label": "IS ERROR"
            },
            {
                "from": 1924,
                "to": 1933,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 1924,
                "to": 1934,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 1933,
                "to": 1940,
                "label": "\nX21 -> T23"
            },
            {
                "from": 1940,
                "to": 2,
                "label": "INSTANCE with matching:\nT1 -> T23\nT2 -> T21\nT3 -> T22"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Rules:
f16_in(T20, T21, T22) -> f1924_in(T20, T21, T22) :|: TRUE
f1924_out(x, x1, x2) -> f16_out(x, x1, x2) :|: TRUE
f1940_in(x3, x4, x5, x6) -> f2_in(x3, x4, x5) :|: TRUE
f2_out(x7, x8, x9) -> f1940_out(x7, x8, x9, x10) :|: TRUE
f1934_out(x11, x12, x13) -> f1924_out(x11, x13, x12) :|: x11 >= x13
f1924_in(x14, x15, x16) -> f1933_in(x14, x15, x16) :|: x14 < x15
f1933_out(x17, x18, x19) -> f1924_out(x17, x18, x19) :|: x17 < x18
f1925_out -> f1924_out(x20, x21, x22) :|: TRUE
f1924_in(x23, x24, x25) -> f1934_in(x23, x25, x24) :|: x23 >= x24
f1924_in(x26, x27, x28) -> f1925_in :|: TRUE
f1933_in(x29, x30, x31) -> f1940_in(x32, x30, x31, x29) :|: x32 = x29 + 1
f1940_out(x33, x34, x35, x36) -> f1933_out(x36, x34, x35) :|: TRUE
f6_out(T1, T2, T3) -> f2_out(T1, T2, T3) :|: TRUE
f2_in(x37, x38, x39) -> f6_in(x37, x38, x39) :|: TRUE
f6_in(x40, x41, x42) -> f16_in(x40, x41, x42) :|: TRUE
f15_out(x43, x44, x45) -> f6_out(x43, x44, x45) :|: TRUE
f6_in(x46, x47, x48) -> f15_in(x46, x47, x48) :|: TRUE
f16_out(x49, x50, x51) -> f6_out(x49, x50, x51) :|: TRUE
Start term: f2_in(T1, T2, T3)

----------------------------------------

(3) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f16_in(T20, T21, T22) -> f1924_in(T20, T21, T22) :|: TRUE
f1940_in(x3, x4, x5, x6) -> f2_in(x3, x4, x5) :|: TRUE
f1924_in(x14, x15, x16) -> f1933_in(x14, x15, x16) :|: x14 < x15
f1933_in(x29, x30, x31) -> f1940_in(x32, x30, x31, x29) :|: x32 = x29 + 1
f2_in(x37, x38, x39) -> f6_in(x37, x38, x39) :|: TRUE
f6_in(x40, x41, x42) -> f16_in(x40, x41, x42) :|: TRUE


----------------------------------------

(4)
Obligation:
Rules:
f16_in(T20, T21, T22) -> f1924_in(T20, T21, T22) :|: TRUE
f1940_in(x3, x4, x5, x6) -> f2_in(x3, x4, x5) :|: TRUE
f1924_in(x14, x15, x16) -> f1933_in(x14, x15, x16) :|: x14 < x15
f1933_in(x29, x30, x31) -> f1940_in(x32, x30, x31, x29) :|: x32 = x29 + 1
f2_in(x37, x38, x39) -> f6_in(x37, x38, x39) :|: TRUE
f6_in(x40, x41, x42) -> f16_in(x40, x41, x42) :|: TRUE

----------------------------------------

(5) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(6)
Obligation:
Rules:
f16_in(T20:0, T21:0, T22:0) -> f16_in(T20:0 + 1, T21:0, T22:0) :|: T21:0 > T20:0

----------------------------------------

(7) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(8)
Obligation:
Rules:
f16_in(T20:0, T21:0, T22:0) -> f16_in(arith, T21:0, T22:0) :|: T21:0 > T20:0 && arith = T20:0 + 1

----------------------------------------

(9) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f16_in(T20:0, T21:0, T22:0) -> f16_in(arith, T21:0, T22:0) :|: T21:0 > T20:0 && arith = T20:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(10)
Obligation:

Termination digraph:
Nodes:
(1) f16_in(T20:0, T21:0, T22:0) -> f16_in(arith, T21:0, T22:0) :|: T21:0 > T20:0 && arith = T20:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(11) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(12)
Obligation:
Rules:
f16_in(T20:0:0, T21:0:0, T22:0:0) -> f16_in(T20:0:0 + 1, T21:0:0, T22:0:0) :|: T21:0:0 > T20:0:0

----------------------------------------

(13) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f16_in(x1, x2, x3) -> f16_in(x1, x2)

----------------------------------------

(14)
Obligation:
Rules:
f16_in(T20:0:0, T21:0:0) -> f16_in(T20:0:0 + 1, T21:0:0) :|: T21:0:0 > T20:0:0

----------------------------------------

(15) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f16_in(INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(16)
Obligation:
Rules:
f16_in(T20:0:0, T21:0:0) -> f16_in(c, T21:0:0) :|: c = T20:0:0 + 1 && T21:0:0 > T20:0:0

----------------------------------------

(17) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f16_in(x, x1)] = -x + x1

The following rules are decreasing:
f16_in(T20:0:0, T21:0:0) -> f16_in(c, T21:0:0) :|: c = T20:0:0 + 1 && T21:0:0 > T20:0:0
The following rules are bounded:
f16_in(T20:0:0, T21:0:0) -> f16_in(c, T21:0:0) :|: c = T20:0:0 + 1 && T21:0:0 > T20:0:0

----------------------------------------

(18)
YES
