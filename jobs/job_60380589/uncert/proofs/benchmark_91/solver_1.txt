YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ptAiz.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

hanoi(g,g,g,g,a,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToIRSwTTransformerProof [SOUND, 21 ms]
(2) IRSwT
(3) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
(4) IRSwT
(5) IntTRSCompressionProof [EQUIVALENT, 25 ms]
(6) IRSwT
(7) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
(8) IRSwT
(9) IRSwTTerminationDigraphProof [EQUIVALENT, 14 ms]
(10) IRSwT
(11) IntTRSCompressionProof [EQUIVALENT, 0 ms]
(12) IRSwT
(13) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
(14) IRSwT
(15) TempFilterProof [SOUND, 21 ms]
(16) IntTRS
(17) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
(18) YES


----------------------------------------

(0)
Obligation:
Clauses:

hanoi(1, A, B, C, .(to(A, B), Zs), Zs).
hanoi(N, A, B, C, Xs, Zs) :- ','(>(N, 1), ','(is(N1, -(N, 1)), ','(hanoi(N1, A, C, B, Xs, .(to(A, B), Ys)), hanoi(N1, C, B, A, Ys, Zs)))).


Query: hanoi(g,g,g,g,a,a)
----------------------------------------

(1) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 137,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(hanoi (1) A B C (. (to A B) Zs) Zs)",
                null
            ],
            [
                "(hanoi N A B C Xs Zs)",
                "(',' (> N (1)) (',' (is N1 (- N (1))) (',' (hanoi N1 A C B Xs (. (to A B) Ys)) (hanoi N1 C B A Ys Zs))))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "2290": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "1"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T41",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">="
                        }]
                    },
                    "ground": [
                        "T42",
                        "T41",
                        "T44",
                        "T43"
                    ],
                    "free": [
                        "X41",
                        "X42"
                    ],
                    "exprvars": ["T41"]
                }
            },
            "1493": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "140": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(hanoi T1 T2 T3 T4 T5 T6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2293": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(hanoi T49 T44 T43 T42 T60 T61)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T42",
                        "T44",
                        "T49",
                        "T43"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2292": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(hanoi T49 T42 T44 T43 T47 (. (to T42 T43) X42))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T49",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T41",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "type": "PlainIntegerConstant",
                                    "value": "1"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "name": "T41",
                                    "type": "PlainIntegerVariable"
                                },
                                "operation": "<"
                            }
                        ]
                    },
                    "ground": [
                        "T42",
                        "T44",
                        "T49",
                        "T43"
                    ],
                    "free": ["X42"],
                    "exprvars": [
                        "T41",
                        "T49"
                    ]
                }
            },
            "2291": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (hanoi T49 T42 T44 T43 T47 (. (to T42 T43) X42)) (hanoi T49 T44 T43 T42 X42 T48))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T49",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T41",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "type": "PlainIntegerConstant",
                                    "value": "1"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "name": "T41",
                                    "type": "PlainIntegerVariable"
                                },
                                "operation": "<"
                            }
                        ]
                    },
                    "ground": [
                        "T42",
                        "T41",
                        "T44",
                        "T49",
                        "T43"
                    ],
                    "free": [
                        "X41",
                        "X42"
                    ],
                    "exprvars": [
                        "T41",
                        "T49"
                    ]
                }
            },
            "1325": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1313": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1489": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (> T41 (1)) (',' (is X41 (- T41 (1))) (',' (hanoi X41 T42 T44 T43 T47 (. (to T42 T43) X42)) (hanoi X41 T44 T43 T42 X42 T48))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T41",
                        "T42",
                        "T43",
                        "T44"
                    ],
                    "free": [
                        "X41",
                        "X42"
                    ],
                    "exprvars": []
                }
            },
            "137": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(hanoi T1 T2 T3 T4 T5 T6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "138": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(hanoi T1 T2 T3 T4 T5 T6)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(hanoi T1 T2 T3 T4 T5 T6)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2289": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X41 (- T41 (1))) (',' (hanoi X41 T42 T44 T43 T47 (. (to T42 T43) X42)) (hanoi X41 T44 T43 T42 X42 T48)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "1"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T41",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<"
                        }]
                    },
                    "ground": [
                        "T42",
                        "T41",
                        "T44",
                        "T43"
                    ],
                    "free": [
                        "X41",
                        "X42"
                    ],
                    "exprvars": ["T41"]
                }
            },
            "139": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(hanoi T1 T2 T3 T4 T5 T6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1276": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 137,
                "to": 138,
                "label": "CASE"
            },
            {
                "from": 138,
                "to": 139,
                "label": "PARALLEL"
            },
            {
                "from": 138,
                "to": 140,
                "label": "PARALLEL"
            },
            {
                "from": 139,
                "to": 1276,
                "label": "EVAL with clause\nhanoi(1, X17, X18, X19, .(to(X17, X18), X20), X20).\nand substitutionT1 -> 1,\nT2 -> T23,\nX17 -> T23,\nT3 -> T24,\nX18 -> T24,\nT4 -> T25,\nX19 -> T25,\nX20 -> T26,\nT5 -> .(to(T23, T24), T26),\nT6 -> T26"
            },
            {
                "from": 139,
                "to": 1313,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 140,
                "to": 1489,
                "label": "ONLY EVAL with clause\nhanoi(X35, X36, X37, X38, X39, X40) :- ','(>(X35, 1), ','(is(X41, -(X35, 1)), ','(hanoi(X41, X36, X38, X37, X39, .(to(X36, X37), X42)), hanoi(X41, X38, X37, X36, X42, X40)))).\nand substitutionT1 -> T41,\nX35 -> T41,\nT2 -> T42,\nX36 -> T42,\nT3 -> T43,\nX37 -> T43,\nT4 -> T44,\nX38 -> T44,\nT5 -> T47,\nX39 -> T47,\nT6 -> T48,\nX40 -> T48,\nT45 -> T47,\nT46 -> T48"
            },
            {
                "from": 1276,
                "to": 1325,
                "label": "SUCCESS"
            },
            {
                "from": 1489,
                "to": 1493,
                "label": "IS ERROR"
            },
            {
                "from": 1489,
                "to": 2289,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 1489,
                "to": 2290,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 2289,
                "to": 2291,
                "label": "\nX41 -> T49"
            },
            {
                "from": 2291,
                "to": 2292,
                "label": "SPLIT 1"
            },
            {
                "from": 2291,
                "to": 2293,
                "label": "SPLIT 2\nnew knowledge:\nT49 is ground\nT42 is ground\nT44 is ground\nT43 is ground\nreplacements:X42 -> T60,\nT48 -> T61"
            },
            {
                "from": 2292,
                "to": 137,
                "label": "INSTANCE with matching:\nT1 -> T49\nT2 -> T42\nT3 -> T44\nT4 -> T43\nT5 -> T47\nT6 -> .(to(T42, T43), X42)"
            },
            {
                "from": 2293,
                "to": 137,
                "label": "INSTANCE with matching:\nT1 -> T49\nT2 -> T44\nT3 -> T43\nT4 -> T42\nT5 -> T60\nT6 -> T61"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Rules:
f140_in(T41, T42, T43, T44) -> f1489_in(T41, T42, T44, T43) :|: TRUE
f1489_out(x, x1, x2, x3) -> f140_out(x, x1, x3, x2) :|: TRUE
f1493_out -> f1489_out(x4, x5, x6, x7) :|: TRUE
f1489_in(x8, x9, x10, x11) -> f2289_in(x8, x9, x10, x11) :|: x8 > 1
f1489_in(x12, x13, x14, x15) -> f1493_in :|: TRUE
f2289_out(x16, x17, x18, x19) -> f1489_out(x16, x17, x18, x19) :|: x16 > 1
f2290_out(x20, x21, x22, x23) -> f1489_out(x21, x20, x22, x23) :|: x21 <= 1
f1489_in(x24, x25, x26, x27) -> f2290_in(x25, x24, x26, x27) :|: x24 <= 1
f2291_out(x28, x29, x30, x31, x32) -> f2289_out(x32, x29, x30, x31) :|: TRUE
f2289_in(x33, x34, x35, x36) -> f2291_in(x37, x34, x35, x36, x33) :|: x37 = x33 - 1
f2292_out(x38, x39, x40, x41) -> f2293_in(x38, x40, x41, x39) :|: TRUE
f2291_in(x42, x43, x44, x45, x46) -> f2292_in(x42, x43, x44, x45) :|: TRUE
f2293_out(x47, x48, x49, x50) -> f2291_out(x47, x50, x48, x49, x51) :|: TRUE
f139_out(T1, T2, T3, T4) -> f138_out(T1, T2, T3, T4) :|: TRUE
f138_in(x52, x53, x54, x55) -> f140_in(x52, x53, x54, x55) :|: TRUE
f140_out(x56, x57, x58, x59) -> f138_out(x56, x57, x58, x59) :|: TRUE
f138_in(x60, x61, x62, x63) -> f139_in(x60, x61, x62, x63) :|: TRUE
f137_in(x64, x65, x66, x67) -> f138_in(x64, x65, x66, x67) :|: TRUE
f138_out(x68, x69, x70, x71) -> f137_out(x68, x69, x70, x71) :|: TRUE
f2292_in(x72, x73, x74, x75) -> f137_in(x72, x73, x74, x75) :|: TRUE
f137_out(x76, x77, x78, x79) -> f2292_out(x76, x77, x78, x79) :|: TRUE
f137_out(x80, x81, x82, x83) -> f2293_out(x80, x81, x82, x83) :|: TRUE
f2293_in(x84, x85, x86, x87) -> f137_in(x84, x85, x86, x87) :|: TRUE
Start term: f137_in(T1, T2, T3, T4)

----------------------------------------

(3) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f140_in(T41, T42, T43, T44) -> f1489_in(T41, T42, T44, T43) :|: TRUE
f1489_in(x8, x9, x10, x11) -> f2289_in(x8, x9, x10, x11) :|: x8 > 1
f2289_in(x33, x34, x35, x36) -> f2291_in(x37, x34, x35, x36, x33) :|: x37 = x33 - 1
f2291_in(x42, x43, x44, x45, x46) -> f2292_in(x42, x43, x44, x45) :|: TRUE
f138_in(x52, x53, x54, x55) -> f140_in(x52, x53, x54, x55) :|: TRUE
f137_in(x64, x65, x66, x67) -> f138_in(x64, x65, x66, x67) :|: TRUE
f2292_in(x72, x73, x74, x75) -> f137_in(x72, x73, x74, x75) :|: TRUE


----------------------------------------

(4)
Obligation:
Rules:
f140_in(T41, T42, T43, T44) -> f1489_in(T41, T42, T44, T43) :|: TRUE
f1489_in(x8, x9, x10, x11) -> f2289_in(x8, x9, x10, x11) :|: x8 > 1
f2289_in(x33, x34, x35, x36) -> f2291_in(x37, x34, x35, x36, x33) :|: x37 = x33 - 1
f2291_in(x42, x43, x44, x45, x46) -> f2292_in(x42, x43, x44, x45) :|: TRUE
f138_in(x52, x53, x54, x55) -> f140_in(x52, x53, x54, x55) :|: TRUE
f137_in(x64, x65, x66, x67) -> f138_in(x64, x65, x66, x67) :|: TRUE
f2292_in(x72, x73, x74, x75) -> f137_in(x72, x73, x74, x75) :|: TRUE

----------------------------------------

(5) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(6)
Obligation:
Rules:
f137_in(x64:0, x65:0, x66:0, x67:0) -> f137_in(x64:0 - 1, x65:0, x67:0, x66:0) :|: x64:0 > 1

----------------------------------------

(7) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(8)
Obligation:
Rules:
f137_in(x64:0, x65:0, x66:0, x67:0) -> f137_in(arith, x65:0, x67:0, x66:0) :|: x64:0 > 1 && arith = x64:0 - 1

----------------------------------------

(9) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f137_in(x64:0, x65:0, x66:0, x67:0) -> f137_in(arith, x65:0, x67:0, x66:0) :|: x64:0 > 1 && arith = x64:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(10)
Obligation:

Termination digraph:
Nodes:
(1) f137_in(x64:0, x65:0, x66:0, x67:0) -> f137_in(arith, x65:0, x67:0, x66:0) :|: x64:0 > 1 && arith = x64:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(11) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(12)
Obligation:
Rules:
f137_in(x64:0:0, x65:0:0, x66:0:0, x67:0:0) -> f137_in(x64:0:0 - 1, x65:0:0, x67:0:0, x66:0:0) :|: x64:0:0 > 1

----------------------------------------

(13) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f137_in(x1, x2, x3, x4) -> f137_in(x1)

----------------------------------------

(14)
Obligation:
Rules:
f137_in(x64:0:0) -> f137_in(x64:0:0 - 1) :|: x64:0:0 > 1

----------------------------------------

(15) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f137_in(INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(16)
Obligation:
Rules:
f137_in(x64:0:0) -> f137_in(c) :|: c = x64:0:0 - 1 && x64:0:0 > 1

----------------------------------------

(17) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f137_in(x)] = x

The following rules are decreasing:
f137_in(x64:0:0) -> f137_in(c) :|: c = x64:0:0 - 1 && x64:0:0 > 1
The following rules are bounded:
f137_in(x64:0:0) -> f137_in(c) :|: c = x64:0:0 - 1 && x64:0:0 > 1

----------------------------------------

(18)
YES
