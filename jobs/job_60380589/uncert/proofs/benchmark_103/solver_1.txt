YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/stkXh.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

range(g,g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToIRSwTTransformerProof [SOUND, 20 ms]
(2) IRSwT
(3) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
(4) IRSwT
(5) IntTRSCompressionProof [EQUIVALENT, 7 ms]
(6) IRSwT
(7) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
(8) IRSwT
(9) IRSwTTerminationDigraphProof [EQUIVALENT, 12 ms]
(10) IRSwT
(11) IntTRSCompressionProof [EQUIVALENT, 0 ms]
(12) IRSwT
(13) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
(14) IRSwT
(15) TempFilterProof [SOUND, 8 ms]
(16) IntTRS
(17) PolynomialOrderProcessor [EQUIVALENT, 3 ms]
(18) YES


----------------------------------------

(0)
Obligation:
Clauses:

range(M, N, .(M, Ns)) :- ','(<(M, N), ','(is(M1, +(M, 1)), range(M1, N, Ns))).
range(N, N, .(N, [])).


Query: range(g,g,a)
----------------------------------------

(1) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(range M N (. M Ns))",
                "(',' (< M N) (',' (is M1 (+ M (1))) (range M1 N Ns)))"
            ],
            [
                "(range N N (. N ([])))",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "11": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (< T16 T17) (',' (is X18 (+ T16 (1))) (range X18 T17 T19)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T16",
                        "T17"
                    ],
                    "free": ["X18"],
                    "exprvars": []
                }
            },
            "12": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "13": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "1732": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(range T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1731": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1730": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "8": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(range T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(range T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "9": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(range T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1729": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(range T20 T17 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T20",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T16",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T16",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "name": "T17",
                                    "type": "PlainIntegerVariable"
                                },
                                "operation": "<"
                            }
                        ]
                    },
                    "ground": [
                        "T20",
                        "T17",
                        "T16"
                    ],
                    "free": ["X18"],
                    "exprvars": [
                        "T20",
                        "T17",
                        "T16"
                    ]
                }
            },
            "1728": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T16",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T17",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">="
                        }]
                    },
                    "ground": [
                        "T17",
                        "T16"
                    ],
                    "free": ["X18"],
                    "exprvars": [
                        "T17",
                        "T16"
                    ]
                }
            },
            "1727": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X18 (+ T16 (1))) (range X18 T17 T19))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T16",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T17",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<"
                        }]
                    },
                    "ground": [
                        "T17",
                        "T16"
                    ],
                    "free": ["X18"],
                    "exprvars": [
                        "T17",
                        "T16"
                    ]
                }
            },
            "10": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(range T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 8,
                "label": "CASE"
            },
            {
                "from": 8,
                "to": 9,
                "label": "PARALLEL"
            },
            {
                "from": 8,
                "to": 10,
                "label": "PARALLEL"
            },
            {
                "from": 9,
                "to": 11,
                "label": "EVAL with clause\nrange(X15, X16, .(X15, X17)) :- ','(<(X15, X16), ','(is(X18, +(X15, 1)), range(X18, X16, X17))).\nand substitutionT1 -> T16,\nX15 -> T16,\nT2 -> T17,\nX16 -> T17,\nX17 -> T19,\nT3 -> .(T16, T19),\nT18 -> T19"
            },
            {
                "from": 9,
                "to": 12,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 10,
                "to": 1730,
                "label": "EVAL with clause\nrange(X25, X25, .(X25, [])).\nand substitutionT1 -> T26,\nX25 -> T26,\nT2 -> T26,\nT3 -> .(T26, [])"
            },
            {
                "from": 10,
                "to": 1731,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 11,
                "to": 13,
                "label": "IS ERROR"
            },
            {
                "from": 11,
                "to": 1727,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 11,
                "to": 1728,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 1727,
                "to": 1729,
                "label": "\nX18 -> T20"
            },
            {
                "from": 1729,
                "to": 3,
                "label": "INSTANCE with matching:\nT1 -> T20\nT2 -> T17\nT3 -> T19"
            },
            {
                "from": 1730,
                "to": 1732,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Rules:
f13_out -> f11_out(T16, T17) :|: TRUE
f1727_out(x, x1) -> f11_out(x, x1) :|: x < x1
f11_in(x2, x3) -> f13_in :|: TRUE
f11_in(x4, x5) -> f1728_in(x5, x4) :|: x4 >= x5
f11_in(x6, x7) -> f1727_in(x6, x7) :|: x6 < x7
f1728_out(x8, x9) -> f11_out(x9, x8) :|: x9 >= x8
f9_out(T1, T2) -> f8_out(T1, T2) :|: TRUE
f8_in(x10, x11) -> f9_in(x10, x11) :|: TRUE
f8_in(x12, x13) -> f10_in(x12, x13) :|: TRUE
f10_out(x14, x15) -> f8_out(x14, x15) :|: TRUE
f9_in(x16, x17) -> f12_in :|: TRUE
f11_out(x18, x19) -> f9_out(x18, x19) :|: TRUE
f12_out -> f9_out(x20, x21) :|: TRUE
f9_in(x22, x23) -> f11_in(x22, x23) :|: TRUE
f1729_in(x24, x25, x26) -> f3_in(x24, x25) :|: TRUE
f3_out(x27, x28) -> f1729_out(x27, x28, x29) :|: TRUE
f8_out(x30, x31) -> f3_out(x30, x31) :|: TRUE
f3_in(x32, x33) -> f8_in(x32, x33) :|: TRUE
f1727_in(x34, x35) -> f1729_in(x36, x35, x34) :|: x36 = x34 + 1
f1729_out(x37, x38, x39) -> f1727_out(x39, x38) :|: TRUE
Start term: f3_in(T1, T2)

----------------------------------------

(3) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f11_in(x6, x7) -> f1727_in(x6, x7) :|: x6 < x7
f8_in(x10, x11) -> f9_in(x10, x11) :|: TRUE
f9_in(x22, x23) -> f11_in(x22, x23) :|: TRUE
f1729_in(x24, x25, x26) -> f3_in(x24, x25) :|: TRUE
f3_in(x32, x33) -> f8_in(x32, x33) :|: TRUE
f1727_in(x34, x35) -> f1729_in(x36, x35, x34) :|: x36 = x34 + 1


----------------------------------------

(4)
Obligation:
Rules:
f11_in(x6, x7) -> f1727_in(x6, x7) :|: x6 < x7
f8_in(x10, x11) -> f9_in(x10, x11) :|: TRUE
f9_in(x22, x23) -> f11_in(x22, x23) :|: TRUE
f1729_in(x24, x25, x26) -> f3_in(x24, x25) :|: TRUE
f3_in(x32, x33) -> f8_in(x32, x33) :|: TRUE
f1727_in(x34, x35) -> f1729_in(x36, x35, x34) :|: x36 = x34 + 1

----------------------------------------

(5) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(6)
Obligation:
Rules:
f1729_in(x24:0, x25:0, x26:0) -> f1729_in(x24:0 + 1, x25:0, x24:0) :|: x25:0 > x24:0

----------------------------------------

(7) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(8)
Obligation:
Rules:
f1729_in(x24:0, x25:0, x26:0) -> f1729_in(arith, x25:0, x24:0) :|: x25:0 > x24:0 && arith = x24:0 + 1

----------------------------------------

(9) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f1729_in(x24:0, x25:0, x26:0) -> f1729_in(arith, x25:0, x24:0) :|: x25:0 > x24:0 && arith = x24:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(10)
Obligation:

Termination digraph:
Nodes:
(1) f1729_in(x24:0, x25:0, x26:0) -> f1729_in(arith, x25:0, x24:0) :|: x25:0 > x24:0 && arith = x24:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(11) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(12)
Obligation:
Rules:
f1729_in(x24:0:0, x25:0:0, x26:0:0) -> f1729_in(x24:0:0 + 1, x25:0:0, x24:0:0) :|: x25:0:0 > x24:0:0

----------------------------------------

(13) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f1729_in(x1, x2, x3) -> f1729_in(x1, x2)

----------------------------------------

(14)
Obligation:
Rules:
f1729_in(x24:0:0, x25:0:0) -> f1729_in(x24:0:0 + 1, x25:0:0) :|: x25:0:0 > x24:0:0

----------------------------------------

(15) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f1729_in(INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(16)
Obligation:
Rules:
f1729_in(x24:0:0, x25:0:0) -> f1729_in(c, x25:0:0) :|: c = x24:0:0 + 1 && x25:0:0 > x24:0:0

----------------------------------------

(17) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f1729_in(x, x1)] = -x + x1

The following rules are decreasing:
f1729_in(x24:0:0, x25:0:0) -> f1729_in(c, x25:0:0) :|: c = x24:0:0 + 1 && x25:0:0 > x24:0:0
The following rules are bounded:
f1729_in(x24:0:0, x25:0:0) -> f1729_in(c, x25:0:0) :|: c = x24:0:0 + 1 && x25:0:0 > x24:0:0

----------------------------------------

(18)
YES
