YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/CH7gw.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

coprime(g,g)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToIRSwTTransformerProof [SOUND, 10 ms]
(2) IRSwT
(3) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
(4) IRSwT
(5) IntTRSCompressionProof [EQUIVALENT, 18 ms]
(6) IRSwT
(7) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
(8) IRSwT
(9) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
(10) TRUE


----------------------------------------

(0)
Obligation:
Clauses:

coprime(X, Y) :- gcd(X, Y, 1).
gcd(X, 0, X) :- >(X, 0).
gcd(X, Y, G) :- ','(>(Y, 0), ','(is(Z, mod(X, Y)), gcd(Y, Z, G))).


Query: coprime(g,g)
----------------------------------------

(1) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(coprime X Y)",
                "(gcd X Y (1))"
            ],
            [
                "(gcd X (0) X)",
                "(> X (0))"
            ],
            [
                "(gcd X Y G)",
                "(',' (> Y (0)) (',' (is Z (mod X Y)) (gcd Y Z G)))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "12": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(gcd T8 T9 (1))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "15": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(gcd T8 T9 (1))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(gcd T8 T9 (1))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "16": {
                "goal": [{
                    "clause": 1,
                    "scope": 2,
                    "term": "(gcd T8 T9 (1))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "17": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(gcd T8 T9 (1))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "18": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(> (1) (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "19": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2287": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "0"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T21",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">="
                        }]
                    },
                    "ground": [
                        "T20",
                        "T21"
                    ],
                    "free": ["X24"],
                    "exprvars": ["T21"]
                }
            },
            "2286": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X24 (mod T20 T21)) (gcd T21 X24 (1)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "0"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T21",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<"
                        }]
                    },
                    "ground": [
                        "T20",
                        "T21"
                    ],
                    "free": ["X24"],
                    "exprvars": ["T21"]
                }
            },
            "type": "Nodes",
            "2161": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(coprime T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2159": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (> T21 (0)) (',' (is X24 (mod T20 T21)) (gcd T21 X24 (1))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T20",
                        "T21"
                    ],
                    "free": ["X24"],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(coprime T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2157": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "0"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "type": "PlainIntegerConstant",
                                "value": "1"
                            },
                            "operation": "<"
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2289": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(gcd T21 T22 (1))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T22",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T20",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "name": "T21",
                                            "type": "PlainIntegerVariable"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "mod"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "type": "PlainIntegerConstant",
                                    "value": "0"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "name": "T21",
                                    "type": "PlainIntegerVariable"
                                },
                                "operation": "<"
                            }
                        ]
                    },
                    "ground": [
                        "T20",
                        "T22",
                        "T21"
                    ],
                    "free": ["X24"],
                    "exprvars": [
                        "T20",
                        "T22",
                        "T21"
                    ]
                }
            },
            "2156": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "0"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "type": "PlainIntegerConstant",
                                "value": "1"
                            },
                            "operation": "<"
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2288": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 12,
                "label": "ONLY EVAL with clause\ncoprime(X6, X7) :- gcd(X6, X7, 1).\nand substitutionT1 -> T8,\nX6 -> T8,\nT2 -> T9,\nX7 -> T9"
            },
            {
                "from": 12,
                "to": 15,
                "label": "CASE"
            },
            {
                "from": 15,
                "to": 16,
                "label": "PARALLEL"
            },
            {
                "from": 15,
                "to": 17,
                "label": "PARALLEL"
            },
            {
                "from": 16,
                "to": 18,
                "label": "EVAL with clause\ngcd(X13, 0, X13) :- >(X13, 0).\nand substitutionT8 -> 1,\nX13 -> 1,\nT9 -> 0,\nT15 -> 1"
            },
            {
                "from": 16,
                "to": 19,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 17,
                "to": 2159,
                "label": "ONLY EVAL with clause\ngcd(X21, X22, X23) :- ','(>(X22, 0), ','(is(X24, mod(X21, X22)), gcd(X22, X24, X23))).\nand substitutionT8 -> T20,\nX21 -> T20,\nT9 -> T21,\nX22 -> T21,\nX23 -> 1"
            },
            {
                "from": 18,
                "to": 2156,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 2156,
                "to": 2157,
                "label": "SUCCESS"
            },
            {
                "from": 2159,
                "to": 2161,
                "label": "IS ERROR"
            },
            {
                "from": 2159,
                "to": 2286,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 2159,
                "to": 2287,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 2286,
                "to": 2288,
                "label": "IS ERROR"
            },
            {
                "from": 2286,
                "to": 2289,
                "label": "\nX24 -> T22"
            },
            {
                "from": 2289,
                "to": 12,
                "label": "INSTANCE with matching:\nT8 -> T21\nT9 -> T22"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Rules:
f2159_out(T21, T20) -> f17_out(T20, T21) :|: TRUE
f17_in(x, x1) -> f2159_in(x1, x) :|: TRUE
f15_out(T8, T9) -> f12_out(T8, T9) :|: TRUE
f12_in(x2, x3) -> f15_in(x2, x3) :|: TRUE
f2286_in(x4, x5) -> f2288_in :|: TRUE
f2286_in(x6, x7) -> f2289_in(x7, x8, x6) :|: x8 = mod(x6, x7)
f2288_out -> f2286_out(x9, x10) :|: TRUE
f2289_out(x11, x12, x13) -> f2286_out(x13, x11) :|: TRUE
f2289_in(x14, x15, x16) -> f12_in(x14, x15) :|: TRUE
f12_out(x17, x18) -> f2289_out(x17, x18, x19) :|: TRUE
f15_in(x20, x21) -> f16_in(x20, x21) :|: TRUE
f16_out(x22, x23) -> f15_out(x22, x23) :|: TRUE
f17_out(x24, x25) -> f15_out(x24, x25) :|: TRUE
f15_in(x26, x27) -> f17_in(x26, x27) :|: TRUE
f2161_out -> f2159_out(x28, x29) :|: TRUE
f2159_in(x30, x31) -> f2287_in(x31, x30) :|: x30 <= 0
f2287_out(x32, x33) -> f2159_out(x33, x32) :|: x33 <= 0
f2159_in(x34, x35) -> f2161_in :|: TRUE
f2286_out(x36, x37) -> f2159_out(x37, x36) :|: x37 > 0
f2159_in(x38, x39) -> f2286_in(x39, x38) :|: x38 > 0
f3_in(T1, T2) -> f5_in(T1, T2) :|: TRUE
f5_out(x40, x41) -> f3_out(x40, x41) :|: TRUE
f12_out(x42, x43) -> f5_out(x42, x43) :|: TRUE
f5_in(x44, x45) -> f12_in(x44, x45) :|: TRUE
Start term: f3_in(T1, T2)

----------------------------------------

(3) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f17_in(x, x1) -> f2159_in(x1, x) :|: TRUE
f12_in(x2, x3) -> f15_in(x2, x3) :|: TRUE
f2286_in(x6, x7) -> f2289_in(x7, x8, x6) :|: x8 = mod(x6, x7)
f2289_in(x14, x15, x16) -> f12_in(x14, x15) :|: TRUE
f15_in(x26, x27) -> f17_in(x26, x27) :|: TRUE
f2159_in(x38, x39) -> f2286_in(x39, x38) :|: x38 > 0


----------------------------------------

(4)
Obligation:
Rules:
f17_in(x, x1) -> f2159_in(x1, x) :|: TRUE
f12_in(x2, x3) -> f15_in(x2, x3) :|: TRUE
f2286_in(x6, x7) -> f2289_in(x7, x8, x6) :|: x8 = mod(x6, x7)
f2289_in(x14, x15, x16) -> f12_in(x14, x15) :|: TRUE
f15_in(x26, x27) -> f17_in(x26, x27) :|: TRUE
f2159_in(x38, x39) -> f2286_in(x39, x38) :|: x38 > 0

----------------------------------------

(5) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(6)
Obligation:
Rules:
f2286_in(x6:0, x7:0) -> f2286_in(x7:0, x8:0) :|: x8:0 = mod(x6:0, x7:0) && TRUE && x8:0 > 0

----------------------------------------

(7) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(8)
Obligation:
Rules:
f2286_in(x6:0, x7:0) -> f2286_in(x7:0, x8:0) :|: x8:0 = mod(x6:0, x7:0) && TRUE && x8:0 > 0

----------------------------------------

(9) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f2286_in(x6:0, x7:0) -> f2286_in(x7:0, x8:0) :|: x8:0 = mod(x6:0, x7:0) && TRUE && x8:0 > 0

No arcs!

This digraph is fully evaluated!
----------------------------------------

(10)
TRUE
