YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/9D1DZ.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

between(g,g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToIRSwTTransformerProof [SOUND, 19 ms]
(2) IRSwT
(3) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
(4) IRSwT
(5) IntTRSCompressionProof [EQUIVALENT, 0 ms]
(6) IRSwT
(7) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
(8) IRSwT
(9) IRSwTTerminationDigraphProof [EQUIVALENT, 11 ms]
(10) IRSwT
(11) IntTRSCompressionProof [EQUIVALENT, 0 ms]
(12) IRSwT
(13) TempFilterProof [SOUND, 21 ms]
(14) IntTRS
(15) RankingReductionPairProof [EQUIVALENT, 13 ms]
(16) YES


----------------------------------------

(0)
Obligation:
Clauses:

between(I, J, J) :- >=(J, I).
between(I, J, K) :- ','(>(J, I), ','(is(J1, -(J, 1)), between(I, J1, K))).


Query: between(g,g,a)
----------------------------------------

(1) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(between I J J)",
                "(>= J I)"
            ],
            [
                "(between I J K)",
                "(',' (> J I) (',' (is J1 (- J (1))) (between I J1 K)))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "17": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "18": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "1954": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X21 (- T22 (1))) (between T21 X21 T24))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T21",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T22",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<"
                        }]
                    },
                    "ground": [
                        "T22",
                        "T21"
                    ],
                    "free": ["X21"],
                    "exprvars": [
                        "T22",
                        "T21"
                    ]
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(between T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(between T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(between T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(between T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(between T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(>= T13 T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T12",
                        "T13"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1938": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T12",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T13",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T13",
                        "T12"
                    ]
                }
            },
            "1937": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T12",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T13",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">"
                        }]
                    },
                    "ground": [
                        "T13",
                        "T12"
                    ],
                    "free": [],
                    "exprvars": [
                        "T13",
                        "T12"
                    ]
                }
            },
            "1936": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T12",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T13",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<="
                        }]
                    },
                    "ground": [
                        "T13",
                        "T12"
                    ],
                    "free": [],
                    "exprvars": [
                        "T13",
                        "T12"
                    ]
                }
            },
            "1947": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1945": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (> T22 T21) (',' (is X21 (- T22 (1))) (between T21 X21 T24)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22"
                    ],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "1956": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(between T21 T25 T24)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T25",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T22",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T21",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "name": "T22",
                                    "type": "PlainIntegerVariable"
                                },
                                "operation": "<"
                            }
                        ]
                    },
                    "ground": [
                        "T25",
                        "T22",
                        "T21"
                    ],
                    "free": ["X21"],
                    "exprvars": [
                        "T25",
                        "T22",
                        "T21"
                    ]
                }
            },
            "1955": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T21",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T22",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">="
                        }]
                    },
                    "ground": [
                        "T22",
                        "T21"
                    ],
                    "free": ["X21"],
                    "exprvars": [
                        "T22",
                        "T21"
                    ]
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 3,
                "label": "CASE"
            },
            {
                "from": 3,
                "to": 4,
                "label": "PARALLEL"
            },
            {
                "from": 3,
                "to": 5,
                "label": "PARALLEL"
            },
            {
                "from": 4,
                "to": 6,
                "label": "EVAL with clause\nbetween(X9, X10, X10) :- >=(X10, X9).\nand substitutionT1 -> T12,\nX9 -> T12,\nT2 -> T13,\nX10 -> T13,\nT3 -> T13"
            },
            {
                "from": 4,
                "to": 17,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 5,
                "to": 1945,
                "label": "ONLY EVAL with clause\nbetween(X18, X19, X20) :- ','(>(X19, X18), ','(is(X21, -(X19, 1)), between(X18, X21, X20))).\nand substitutionT1 -> T21,\nX18 -> T21,\nT2 -> T22,\nX19 -> T22,\nT3 -> T24,\nX20 -> T24,\nT23 -> T24"
            },
            {
                "from": 6,
                "to": 18,
                "label": "IS ERROR"
            },
            {
                "from": 6,
                "to": 1936,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 6,
                "to": 1937,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 1936,
                "to": 1938,
                "label": "SUCCESS"
            },
            {
                "from": 1945,
                "to": 1947,
                "label": "IS ERROR"
            },
            {
                "from": 1945,
                "to": 1954,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 1945,
                "to": 1955,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 1954,
                "to": 1956,
                "label": "\nX21 -> T25"
            },
            {
                "from": 1956,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T21\nT2 -> T25\nT3 -> T24"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Rules:
f1945_in(T22, T21) -> f1955_in(T22, T21) :|: T22 <= T21
f1954_out(x, x1) -> f1945_out(x, x1) :|: x > x1
f1955_out(x2, x3) -> f1945_out(x2, x3) :|: x2 <= x3
f1947_out -> f1945_out(x4, x5) :|: TRUE
f1945_in(x6, x7) -> f1954_in(x6, x7) :|: x6 > x7
f1945_in(x8, x9) -> f1947_in :|: TRUE
f1956_out(x10, x11, x12) -> f1954_out(x12, x10) :|: TRUE
f1954_in(x13, x14) -> f1956_in(x14, x15, x13) :|: x15 = x13 - 1
f1_out(x16, x17) -> f1956_out(x16, x17, x18) :|: TRUE
f1956_in(x19, x20, x21) -> f1_in(x19, x20) :|: TRUE
f1_in(T1, T2) -> f3_in(T1, T2) :|: TRUE
f3_out(x22, x23) -> f1_out(x22, x23) :|: TRUE
f4_out(x24, x25) -> f3_out(x24, x25) :|: TRUE
f3_in(x26, x27) -> f4_in(x26, x27) :|: TRUE
f3_in(x28, x29) -> f5_in(x28, x29) :|: TRUE
f5_out(x30, x31) -> f3_out(x30, x31) :|: TRUE
f5_in(x32, x33) -> f1945_in(x33, x32) :|: TRUE
f1945_out(x34, x35) -> f5_out(x35, x34) :|: TRUE
Start term: f1_in(T1, T2)

----------------------------------------

(3) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f1945_in(x6, x7) -> f1954_in(x6, x7) :|: x6 > x7
f1954_in(x13, x14) -> f1956_in(x14, x15, x13) :|: x15 = x13 - 1
f1956_in(x19, x20, x21) -> f1_in(x19, x20) :|: TRUE
f1_in(T1, T2) -> f3_in(T1, T2) :|: TRUE
f3_in(x28, x29) -> f5_in(x28, x29) :|: TRUE
f5_in(x32, x33) -> f1945_in(x33, x32) :|: TRUE


----------------------------------------

(4)
Obligation:
Rules:
f1945_in(x6, x7) -> f1954_in(x6, x7) :|: x6 > x7
f1954_in(x13, x14) -> f1956_in(x14, x15, x13) :|: x15 = x13 - 1
f1956_in(x19, x20, x21) -> f1_in(x19, x20) :|: TRUE
f1_in(T1, T2) -> f3_in(T1, T2) :|: TRUE
f3_in(x28, x29) -> f5_in(x28, x29) :|: TRUE
f5_in(x32, x33) -> f1945_in(x33, x32) :|: TRUE

----------------------------------------

(5) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(6)
Obligation:
Rules:
f1945_in(x6:0, x7:0) -> f1945_in(x6:0 - 1, x7:0) :|: x7:0 < x6:0

----------------------------------------

(7) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(8)
Obligation:
Rules:
f1945_in(x6:0, x7:0) -> f1945_in(arith, x7:0) :|: x7:0 < x6:0 && arith = x6:0 - 1

----------------------------------------

(9) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f1945_in(x6:0, x7:0) -> f1945_in(arith, x7:0) :|: x7:0 < x6:0 && arith = x6:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(10)
Obligation:

Termination digraph:
Nodes:
(1) f1945_in(x6:0, x7:0) -> f1945_in(arith, x7:0) :|: x7:0 < x6:0 && arith = x6:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(11) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(12)
Obligation:
Rules:
f1945_in(x6:0:0, x7:0:0) -> f1945_in(x6:0:0 - 1, x7:0:0) :|: x7:0:0 < x6:0:0

----------------------------------------

(13) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f1945_in(INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(14)
Obligation:
Rules:
f1945_in(x6:0:0, x7:0:0) -> f1945_in(c, x7:0:0) :|: c = x6:0:0 - 1 && x7:0:0 < x6:0:0

----------------------------------------

(15) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f1945_in ] = -1*f1945_in_2 + f1945_in_1

The following rules are decreasing:
f1945_in(x6:0:0, x7:0:0) -> f1945_in(c, x7:0:0) :|: c = x6:0:0 - 1 && x7:0:0 < x6:0:0

The following rules are bounded:
f1945_in(x6:0:0, x7:0:0) -> f1945_in(c, x7:0:0) :|: c = x6:0:0 - 1 && x7:0:0 < x6:0:0


----------------------------------------

(16)
YES
