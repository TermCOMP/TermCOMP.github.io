MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/oqBv5.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

distance(g,g,g,g,a)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) IntegerArithmeticTransformerProof [SOUND, 0 ms]
(2) Prolog
    (3) CutEliminatorProof [SOUND, 0 ms]
    (4) Prolog
    (5) UnifyTransformerProof [EQUIVALENT, 0 ms]
    (6) Prolog
    (7) PrologToPiTRSProof [SOUND, 25 ms]
    (8) PiTRS
        (9) DependencyPairsProof [EQUIVALENT, 73 ms]
        (10) PiDP
        (11) DependencyGraphProof [EQUIVALENT, 5 ms]
        (12) AND
            (13) PiDP
                (14) UsableRulesProof [EQUIVALENT, 0 ms]
                (15) PiDP
                (16) PiDPToQDPProof [EQUIVALENT, 0 ms]
                (17) QDP
                (18) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (19) YES
            (20) PiDP
                (21) UsableRulesProof [EQUIVALENT, 0 ms]
                (22) PiDP
                (23) PiDPToQDPProof [EQUIVALENT, 0 ms]
                (24) QDP
                (25) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (26) YES
            (27) PiDP
                (28) UsableRulesProof [EQUIVALENT, 0 ms]
                (29) PiDP
                (30) PiDPToQDPProof [EQUIVALENT, 0 ms]
                (31) QDP
                (32) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (33) YES
            (34) PiDP
                (35) UsableRulesProof [EQUIVALENT, 0 ms]
                (36) PiDP
                (37) PiDPToQDPProof [SOUND, 0 ms]
                (38) QDP
                (39) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (40) YES
            (41) PiDP
                (42) UsableRulesProof [EQUIVALENT, 0 ms]
                (43) PiDP
                (44) PiDPToQDPProof [SOUND, 0 ms]
                (45) QDP
                (46) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (47) YES
            (48) PiDP
                (49) UsableRulesProof [EQUIVALENT, 0 ms]
                (50) PiDP
                (51) PiDPToQDPProof [SOUND, 0 ms]
                (52) QDP
                (53) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (54) YES
            (55) PiDP
                (56) UsableRulesProof [EQUIVALENT, 0 ms]
                (57) PiDP
                (58) PiDPToQDPProof [SOUND, 0 ms]
                (59) QDP
                (60) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (61) YES
            (62) PiDP
                (63) UsableRulesProof [EQUIVALENT, 0 ms]
                (64) PiDP
                (65) PiDPToQDPProof [SOUND, 0 ms]
                (66) QDP
                (67) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (68) YES
            (69) PiDP
                (70) UsableRulesProof [EQUIVALENT, 0 ms]
                (71) PiDP
                (72) PiDPToQDPProof [SOUND, 9 ms]
                (73) QDP
                (74) TransformationProof [EQUIVALENT, 3 ms]
                (75) QDP
                (76) TransformationProof [EQUIVALENT, 0 ms]
                (77) QDP
                (78) TransformationProof [EQUIVALENT, 0 ms]
                (79) QDP
                (80) TransformationProof [EQUIVALENT, 0 ms]
                (81) QDP
                (82) UsableRulesProof [EQUIVALENT, 0 ms]
                (83) QDP
                (84) QReductionProof [EQUIVALENT, 0 ms]
                (85) QDP
                (86) TransformationProof [EQUIVALENT, 0 ms]
                (87) QDP
                (88) TransformationProof [EQUIVALENT, 0 ms]
                (89) QDP
                (90) TransformationProof [EQUIVALENT, 0 ms]
                (91) QDP
                (92) TransformationProof [EQUIVALENT, 0 ms]
                (93) QDP
                (94) TransformationProof [EQUIVALENT, 0 ms]
                (95) QDP
                (96) TransformationProof [EQUIVALENT, 0 ms]
                (97) QDP
                (98) TransformationProof [EQUIVALENT, 0 ms]
                (99) QDP
                (100) TransformationProof [EQUIVALENT, 0 ms]
                (101) QDP
                (102) TransformationProof [EQUIVALENT, 0 ms]
                (103) QDP
                (104) TransformationProof [EQUIVALENT, 0 ms]
                (105) QDP
                (106) TransformationProof [EQUIVALENT, 0 ms]
                (107) QDP
                (108) TransformationProof [EQUIVALENT, 0 ms]
                (109) QDP
                (110) TransformationProof [EQUIVALENT, 0 ms]
                (111) QDP
                (112) TransformationProof [EQUIVALENT, 0 ms]
                (113) QDP
                (114) TransformationProof [EQUIVALENT, 0 ms]
                (115) QDP
                (116) TransformationProof [EQUIVALENT, 0 ms]
                (117) QDP
                (118) TransformationProof [EQUIVALENT, 0 ms]
                (119) QDP
                (120) TransformationProof [EQUIVALENT, 0 ms]
                (121) QDP
                (122) TransformationProof [EQUIVALENT, 0 ms]
                (123) QDP
                (124) TransformationProof [EQUIVALENT, 0 ms]
                (125) QDP
                (126) TransformationProof [EQUIVALENT, 0 ms]
                (127) QDP
                (128) TransformationProof [EQUIVALENT, 0 ms]
                (129) QDP
                (130) TransformationProof [EQUIVALENT, 0 ms]
                (131) QDP
                (132) TransformationProof [EQUIVALENT, 0 ms]
                (133) QDP
                (134) TransformationProof [EQUIVALENT, 0 ms]
                (135) QDP
                (136) TransformationProof [EQUIVALENT, 0 ms]
                (137) QDP
                (138) TransformationProof [EQUIVALENT, 0 ms]
                (139) QDP
                (140) TransformationProof [EQUIVALENT, 0 ms]
                (141) QDP
                (142) TransformationProof [EQUIVALENT, 0 ms]
                (143) QDP
                (144) TransformationProof [EQUIVALENT, 0 ms]
                (145) QDP
                (146) TransformationProof [EQUIVALENT, 0 ms]
                (147) QDP
                (148) TransformationProof [EQUIVALENT, 0 ms]
                (149) QDP
                (150) TransformationProof [EQUIVALENT, 0 ms]
                (151) QDP
                (152) TransformationProof [EQUIVALENT, 0 ms]
                (153) QDP
                (154) TransformationProof [EQUIVALENT, 0 ms]
                (155) QDP
                (156) TransformationProof [EQUIVALENT, 0 ms]
                (157) QDP
                (158) TransformationProof [EQUIVALENT, 0 ms]
                (159) QDP
                (160) TransformationProof [EQUIVALENT, 0 ms]
                (161) QDP
                (162) TransformationProof [EQUIVALENT, 0 ms]
                (163) QDP
                (164) TransformationProof [EQUIVALENT, 0 ms]
                (165) QDP
                (166) TransformationProof [EQUIVALENT, 0 ms]
                (167) QDP
                (168) TransformationProof [EQUIVALENT, 0 ms]
                (169) QDP
                (170) TransformationProof [EQUIVALENT, 0 ms]
                (171) QDP
    (172) PrologToPiTRSProof [SOUND, 12 ms]
    (173) PiTRS
        (174) DependencyPairsProof [EQUIVALENT, 69 ms]
        (175) PiDP
        (176) DependencyGraphProof [EQUIVALENT, 0 ms]
        (177) AND
            (178) PiDP
                (179) UsableRulesProof [EQUIVALENT, 0 ms]
                (180) PiDP
                (181) PiDPToQDPProof [EQUIVALENT, 0 ms]
                (182) QDP
                (183) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (184) YES
            (185) PiDP
                (186) UsableRulesProof [EQUIVALENT, 0 ms]
                (187) PiDP
                (188) PiDPToQDPProof [EQUIVALENT, 0 ms]
                (189) QDP
                (190) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (191) YES
            (192) PiDP
                (193) UsableRulesProof [EQUIVALENT, 0 ms]
                (194) PiDP
                (195) PiDPToQDPProof [EQUIVALENT, 0 ms]
                (196) QDP
                (197) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (198) YES
            (199) PiDP
                (200) UsableRulesProof [EQUIVALENT, 0 ms]
                (201) PiDP
                (202) PiDPToQDPProof [SOUND, 0 ms]
                (203) QDP
                (204) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (205) YES
            (206) PiDP
                (207) UsableRulesProof [EQUIVALENT, 0 ms]
                (208) PiDP
                (209) PiDPToQDPProof [SOUND, 0 ms]
                (210) QDP
                (211) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (212) YES
            (213) PiDP
                (214) UsableRulesProof [EQUIVALENT, 0 ms]
                (215) PiDP
                (216) PiDPToQDPProof [SOUND, 0 ms]
                (217) QDP
                (218) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (219) YES
            (220) PiDP
                (221) UsableRulesProof [EQUIVALENT, 0 ms]
                (222) PiDP
                (223) PiDPToQDPProof [SOUND, 0 ms]
                (224) QDP
                (225) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (226) YES
            (227) PiDP
                (228) UsableRulesProof [EQUIVALENT, 0 ms]
                (229) PiDP
                (230) PiDPToQDPProof [SOUND, 0 ms]
                (231) QDP
                (232) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (233) YES
            (234) PiDP
                (235) UsableRulesProof [EQUIVALENT, 0 ms]
                (236) PiDP
                (237) PiDPToQDPProof [SOUND, 0 ms]
                (238) QDP
                (239) TransformationProof [EQUIVALENT, 6 ms]
                (240) QDP
                (241) TransformationProof [EQUIVALENT, 0 ms]
                (242) QDP
                (243) TransformationProof [EQUIVALENT, 0 ms]
                (244) QDP
                (245) TransformationProof [EQUIVALENT, 0 ms]
                (246) QDP
                (247) UsableRulesProof [EQUIVALENT, 0 ms]
                (248) QDP
                (249) QReductionProof [EQUIVALENT, 0 ms]
                (250) QDP
                (251) TransformationProof [EQUIVALENT, 0 ms]
                (252) QDP
                (253) TransformationProof [EQUIVALENT, 0 ms]
                (254) QDP
                (255) TransformationProof [EQUIVALENT, 0 ms]
                (256) QDP
                (257) TransformationProof [EQUIVALENT, 0 ms]
                (258) QDP
                (259) TransformationProof [EQUIVALENT, 0 ms]
                (260) QDP
                (261) TransformationProof [EQUIVALENT, 0 ms]
                (262) QDP
                (263) TransformationProof [EQUIVALENT, 0 ms]
                (264) QDP
                (265) TransformationProof [EQUIVALENT, 0 ms]
                (266) QDP
                (267) TransformationProof [EQUIVALENT, 0 ms]
                (268) QDP
                (269) TransformationProof [EQUIVALENT, 0 ms]
                (270) QDP
                (271) TransformationProof [EQUIVALENT, 0 ms]
                (272) QDP
                (273) TransformationProof [EQUIVALENT, 0 ms]
                (274) QDP
                (275) TransformationProof [EQUIVALENT, 0 ms]
                (276) QDP
                (277) TransformationProof [EQUIVALENT, 0 ms]
                (278) QDP
                (279) TransformationProof [EQUIVALENT, 0 ms]
                (280) QDP
                (281) TransformationProof [EQUIVALENT, 0 ms]
                (282) QDP
                (283) TransformationProof [EQUIVALENT, 0 ms]
                (284) QDP
                (285) TransformationProof [EQUIVALENT, 0 ms]
                (286) QDP
                (287) TransformationProof [EQUIVALENT, 0 ms]
                (288) QDP
                (289) TransformationProof [EQUIVALENT, 0 ms]
                (290) QDP
                (291) TransformationProof [EQUIVALENT, 0 ms]
                (292) QDP
                (293) TransformationProof [EQUIVALENT, 0 ms]
                (294) QDP
                (295) TransformationProof [EQUIVALENT, 0 ms]
                (296) QDP
                (297) TransformationProof [EQUIVALENT, 0 ms]
                (298) QDP
                (299) TransformationProof [EQUIVALENT, 0 ms]
                (300) QDP
                (301) TransformationProof [EQUIVALENT, 0 ms]
                (302) QDP
                (303) TransformationProof [EQUIVALENT, 0 ms]
                (304) QDP
                (305) TransformationProof [EQUIVALENT, 0 ms]
                (306) QDP
                (307) TransformationProof [EQUIVALENT, 0 ms]
                (308) QDP
                (309) TransformationProof [EQUIVALENT, 0 ms]
                (310) QDP
                (311) TransformationProof [EQUIVALENT, 0 ms]
                (312) QDP
                (313) TransformationProof [EQUIVALENT, 0 ms]
                (314) QDP
                (315) TransformationProof [EQUIVALENT, 0 ms]
                (316) QDP
                (317) TransformationProof [EQUIVALENT, 0 ms]
                (318) QDP
                (319) TransformationProof [EQUIVALENT, 0 ms]
                (320) QDP
                (321) TransformationProof [EQUIVALENT, 0 ms]
                (322) QDP
                (323) TransformationProof [EQUIVALENT, 0 ms]
                (324) QDP
(325) CutEliminatorProof [SOUND, 0 ms]
(326) Prolog
    (327) UndefinedPredicateHandlerProof [SOUND, 0 ms]
    (328) Prolog
    (329) PrologToPiTRSProof [SOUND, 0 ms]
    (330) PiTRS
        (331) DependencyPairsProof [EQUIVALENT, 51 ms]
        (332) PiDP
        (333) DependencyGraphProof [EQUIVALENT, 0 ms]
        (334) PiDP
        (335) UsableRulesProof [EQUIVALENT, 0 ms]
        (336) PiDP
        (337) PiDPToQDPProof [SOUND, 0 ms]
        (338) QDP
        (339) TransformationProof [EQUIVALENT, 0 ms]
        (340) QDP
        (341) TransformationProof [EQUIVALENT, 0 ms]
        (342) QDP
    (343) PrologToPiTRSProof [SOUND, 14 ms]
    (344) PiTRS
        (345) DependencyPairsProof [EQUIVALENT, 41 ms]
        (346) PiDP
        (347) DependencyGraphProof [EQUIVALENT, 0 ms]
        (348) PiDP
        (349) UsableRulesProof [EQUIVALENT, 0 ms]
        (350) PiDP
        (351) PiDPToQDPProof [SOUND, 0 ms]
        (352) QDP
        (353) TransformationProof [EQUIVALENT, 0 ms]
        (354) QDP
        (355) TransformationProof [EQUIVALENT, 0 ms]
        (356) QDP
        (357) TransformationProof [EQUIVALENT, 0 ms]
        (358) QDP
        (359) TransformationProof [EQUIVALENT, 0 ms]
        (360) QDP
        (361) UsableRulesProof [EQUIVALENT, 0 ms]
        (362) QDP
        (363) QReductionProof [EQUIVALENT, 0 ms]
        (364) QDP
(365) PrologToDTProblemTransformerProof [SOUND, 33 ms]
(366) TRIPLES
    (367) TriplesToPiDPProof [SOUND, 0 ms]
    (368) PiDP
    (369) DependencyGraphProof [EQUIVALENT, 0 ms]
    (370) PiDP
    (371) PiDPToQDPProof [SOUND, 0 ms]
    (372) QDP
    (373) NonTerminationLoopProof [COMPLETE, 2 ms]
    (374) NO
(375) PrologToIRSwTTransformerProof [SOUND, 16 ms]
(376) IRSwT
    (377) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
    (378) IRSwT
    (379) IntTRSCompressionProof [EQUIVALENT, 23 ms]
    (380) IRSwT
    (381) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
    (382) IRSwT
    (383) IRSwTTerminationDigraphProof [EQUIVALENT, 22 ms]
    (384) IRSwT
    (385) IntTRSCompressionProof [EQUIVALENT, 0 ms]
    (386) IRSwT
    (387) IRSwTToIntTRSProof [SOUND, 1 ms]
    (388) IRSwT
    (389) IntTRSNonPeriodicNontermProof [COMPLETE, 4 ms]
    (390) NO


----------------------------------------

(0)
Obligation:
Clauses:

distance(X1, X2, 1, J, D) :- ','(!, is(D, -(J, +(1, 1)))).
distance(X3, M, I, M, D) :- ','(!, is(D, +(M, -(I, +(2, 1))))).
distance(N, M, N, J, D) :- ','(!, is(D, +(N, -(*(2, M), -(J, +(2, 1)))))).
distance(N, M, I, 1, D) :- ','(!, is(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))).
distance(N, M, I, J, D) :- ','(is(N1, -(N, 2)), ','(is(M1, -(M, 2)), ','(is(I1, -(I, 1)), ','(is(J1, -(J, 1)), ','(distance(N1, M1, I1, J1, D1), is(D, +(*(2, N), +(*(2, M), -(D1, 4))))))))).


Query: distance(g,g,g,g,a)
----------------------------------------

(1) IntegerArithmeticTransformerProof (SOUND)
Added definitions of predefined predicates [PROLOG].
----------------------------------------

(2)
Obligation:
Clauses:

distance(X1, X2, succ(zero), J, D) :- ','(!, ','(isPlus(succ(zero), succ(zero), U), ','(isMinus(J, U, U1), =(D, U1)))).
distance(X3, M, I, M, D) :- ','(!, ','(isPlus(succ(succ(zero)), succ(zero), U), ','(isMinus(I, U, U1), ','(isPlus(M, U1, U2), =(D, U2))))).
distance(N, M, N, J, D) :- ','(!, ','(isTimes(succ(succ(zero)), M, U), ','(isPlus(succ(succ(zero)), succ(zero), U1), ','(isMinus(J, U1, U2), ','(isMinus(U, U2, U3), ','(isPlus(N, U3, U4), =(D, U4))))))).
distance(N, M, I, succ(zero), D) :- ','(!, ','(isTimes(succ(succ(zero)), N, U), ','(isTimes(succ(succ(zero)), M, U1), ','(isPlus(succ(succ(succ(zero))), succ(zero), U2), ','(isMinus(I, U2, U3), ','(isMinus(U1, U3, U4), ','(isPlus(U, U4, U5), =(D, U5)))))))).
distance(N, M, I, J, D) :- ','(isMinus(N, succ(succ(zero)), U), ','(=(N1, U), ','(isMinus(M, succ(succ(zero)), U), ','(=(M1, U), ','(isMinus(I, succ(zero), U), ','(=(I1, U), ','(isMinus(J, succ(zero), U), ','(=(J1, U), ','(distance(N1, M1, I1, J1, D1), ','(isTimes(succ(succ(zero)), N, U), ','(isTimes(succ(succ(zero)), M, U1), ','(isMinus(D1, succ(succ(succ(succ(zero)))), U2), ','(isPlus(U1, U2, U3), ','(isPlus(U, U3, U4), =(D, U4))))))))))))))).
isPlus(zero, X, X).
isPlus(succ(X), zero, succ(X)).
isPlus(succ(X), succ(Y), succ(succ(Z))) :- isPlus(X, Y, Z).
isPlus(succ(X), pred(Y), Z) :- isPlus(X, Y, Z).
isPlus(pred(X), zero, pred(X)).
isPlus(pred(X), succ(Y), Z) :- isPlus(X, Y, Z).
isPlus(pred(X), pred(Y), pred(pred(Z))) :- isPlus(X, Y, Z).
isMinus(X, zero, X).
isMinus(zero, succ(Y), pred(Z)) :- isMinus(zero, Y, Z).
isMinus(zero, pred(Y), succ(Z)) :- isMinus(zero, Y, Z).
isMinus(succ(X), succ(Y), Z) :- isMinus(X, Y, Z).
isMinus(succ(X), pred(Y), succ(succ(Z))) :- isMinus(X, Y, Z).
isMinus(pred(X), succ(Y), pred(pred(Z))) :- isMinus(X, Y, Z).
isMinus(pred(X), pred(Y), Z) :- isMinus(X, Y, Z).
isTimes(X, zero, zero).
isTimes(zero, succ(Y), zero).
isTimes(zero, pred(Y), zero).
isTimes(succ(X), succ(Y), Z) :- ','(isTimes(succ(X), Y, A), isPlus(A, succ(X), Z)).
isTimes(succ(X), pred(Y), Z) :- ','(isTimes(succ(X), Y, A), isMinus(A, succ(X), Z)).
isTimes(pred(X), succ(Y), Z) :- ','(isTimes(pred(X), Y, A), isPlus(A, pred(X), Z)).
isTimes(pred(X), pred(Y), Z) :- ','(isTimes(pred(X), Y, A), isMinus(A, pred(X), Z)).
isDiv(zero, succ(Y), zero).
isDiv(zero, pred(Y), zero).
isDiv(succ(X), succ(Y), zero) :- isMinus(succ(X), succ(Y), pred(Z)).
isDiv(succ(X), succ(Y), succ(Z)) :- ','(isMinus(succ(X), succ(Y), A), isDiv(A, succ(Y), Z)).
isDiv(succ(X), pred(Y), Z) :- ','(isMinus(zero, pred(Y), A), ','(isDiv(succ(X), A, B), isMinus(zero, B, Z))).
isDiv(pred(X), pred(Y), zero) :- isMinus(pred(X), pred(Y), succ(Z)).
isDiv(pred(X), pred(Y), succ(Z)) :- ','(isMinus(pred(X), pred(Y), A), isDiv(A, pred(Y), Z)).
isDiv(pred(X), succ(Y), Z) :- ','(isMinus(zero, pred(X), A), ','(isDiv(A, succ(Y), B), isMinus(zero, B, Z))).
isModulo(X, Y, Z) :- ','(isDiv(X, Y, A), ','(isTimes(A, Y, B), isMinus(X, B, Z))).


Query: distance(g,g,g,g,a)
----------------------------------------

(3) CutEliminatorProof (SOUND)
Eliminated all cuts by simply ignoring them[PROLOG].
----------------------------------------

(4)
Obligation:
Clauses:

distance(X1, X2, succ(zero), J, D) :- ','(isPlus(succ(zero), succ(zero), U), ','(isMinus(J, U, U1), =(D, U1))).
distance(X3, M, I, M, D) :- ','(isPlus(succ(succ(zero)), succ(zero), U), ','(isMinus(I, U, U1), ','(isPlus(M, U1, U2), =(D, U2)))).
distance(N, M, N, J, D) :- ','(isTimes(succ(succ(zero)), M, U), ','(isPlus(succ(succ(zero)), succ(zero), U1), ','(isMinus(J, U1, U2), ','(isMinus(U, U2, U3), ','(isPlus(N, U3, U4), =(D, U4)))))).
distance(N, M, I, succ(zero), D) :- ','(isTimes(succ(succ(zero)), N, U), ','(isTimes(succ(succ(zero)), M, U1), ','(isPlus(succ(succ(succ(zero))), succ(zero), U2), ','(isMinus(I, U2, U3), ','(isMinus(U1, U3, U4), ','(isPlus(U, U4, U5), =(D, U5))))))).
distance(N, M, I, J, D) :- ','(isMinus(N, succ(succ(zero)), U), ','(=(N1, U), ','(isMinus(M, succ(succ(zero)), U), ','(=(M1, U), ','(isMinus(I, succ(zero), U), ','(=(I1, U), ','(isMinus(J, succ(zero), U), ','(=(J1, U), ','(distance(N1, M1, I1, J1, D1), ','(isTimes(succ(succ(zero)), N, U), ','(isTimes(succ(succ(zero)), M, U1), ','(isMinus(D1, succ(succ(succ(succ(zero)))), U2), ','(isPlus(U1, U2, U3), ','(isPlus(U, U3, U4), =(D, U4))))))))))))))).
isPlus(zero, X, X).
isPlus(succ(X), zero, succ(X)).
isPlus(succ(X), succ(Y), succ(succ(Z))) :- isPlus(X, Y, Z).
isPlus(succ(X), pred(Y), Z) :- isPlus(X, Y, Z).
isPlus(pred(X), zero, pred(X)).
isPlus(pred(X), succ(Y), Z) :- isPlus(X, Y, Z).
isPlus(pred(X), pred(Y), pred(pred(Z))) :- isPlus(X, Y, Z).
isMinus(X, zero, X).
isMinus(zero, succ(Y), pred(Z)) :- isMinus(zero, Y, Z).
isMinus(zero, pred(Y), succ(Z)) :- isMinus(zero, Y, Z).
isMinus(succ(X), succ(Y), Z) :- isMinus(X, Y, Z).
isMinus(succ(X), pred(Y), succ(succ(Z))) :- isMinus(X, Y, Z).
isMinus(pred(X), succ(Y), pred(pred(Z))) :- isMinus(X, Y, Z).
isMinus(pred(X), pred(Y), Z) :- isMinus(X, Y, Z).
isTimes(X, zero, zero).
isTimes(zero, succ(Y), zero).
isTimes(zero, pred(Y), zero).
isTimes(succ(X), succ(Y), Z) :- ','(isTimes(succ(X), Y, A), isPlus(A, succ(X), Z)).
isTimes(succ(X), pred(Y), Z) :- ','(isTimes(succ(X), Y, A), isMinus(A, succ(X), Z)).
isTimes(pred(X), succ(Y), Z) :- ','(isTimes(pred(X), Y, A), isPlus(A, pred(X), Z)).
isTimes(pred(X), pred(Y), Z) :- ','(isTimes(pred(X), Y, A), isMinus(A, pred(X), Z)).
isDiv(zero, succ(Y), zero).
isDiv(zero, pred(Y), zero).
isDiv(succ(X), succ(Y), zero) :- isMinus(succ(X), succ(Y), pred(Z)).
isDiv(succ(X), succ(Y), succ(Z)) :- ','(isMinus(succ(X), succ(Y), A), isDiv(A, succ(Y), Z)).
isDiv(succ(X), pred(Y), Z) :- ','(isMinus(zero, pred(Y), A), ','(isDiv(succ(X), A, B), isMinus(zero, B, Z))).
isDiv(pred(X), pred(Y), zero) :- isMinus(pred(X), pred(Y), succ(Z)).
isDiv(pred(X), pred(Y), succ(Z)) :- ','(isMinus(pred(X), pred(Y), A), isDiv(A, pred(Y), Z)).
isDiv(pred(X), succ(Y), Z) :- ','(isMinus(zero, pred(X), A), ','(isDiv(A, succ(Y), B), isMinus(zero, B, Z))).
isModulo(X, Y, Z) :- ','(isDiv(X, Y, A), ','(isTimes(A, Y, B), isMinus(X, B, Z))).


Query: distance(g,g,g,g,a)
----------------------------------------

(5) UnifyTransformerProof (EQUIVALENT)
Added a fact for the built-in = predicate [PROLOG].
----------------------------------------

(6)
Obligation:
Clauses:

distance(X1, X2, succ(zero), J, D) :- ','(isPlus(succ(zero), succ(zero), U), ','(isMinus(J, U, U1), =(D, U1))).
distance(X3, M, I, M, D) :- ','(isPlus(succ(succ(zero)), succ(zero), U), ','(isMinus(I, U, U1), ','(isPlus(M, U1, U2), =(D, U2)))).
distance(N, M, N, J, D) :- ','(isTimes(succ(succ(zero)), M, U), ','(isPlus(succ(succ(zero)), succ(zero), U1), ','(isMinus(J, U1, U2), ','(isMinus(U, U2, U3), ','(isPlus(N, U3, U4), =(D, U4)))))).
distance(N, M, I, succ(zero), D) :- ','(isTimes(succ(succ(zero)), N, U), ','(isTimes(succ(succ(zero)), M, U1), ','(isPlus(succ(succ(succ(zero))), succ(zero), U2), ','(isMinus(I, U2, U3), ','(isMinus(U1, U3, U4), ','(isPlus(U, U4, U5), =(D, U5))))))).
distance(N, M, I, J, D) :- ','(isMinus(N, succ(succ(zero)), U), ','(=(N1, U), ','(isMinus(M, succ(succ(zero)), U), ','(=(M1, U), ','(isMinus(I, succ(zero), U), ','(=(I1, U), ','(isMinus(J, succ(zero), U), ','(=(J1, U), ','(distance(N1, M1, I1, J1, D1), ','(isTimes(succ(succ(zero)), N, U), ','(isTimes(succ(succ(zero)), M, U1), ','(isMinus(D1, succ(succ(succ(succ(zero)))), U2), ','(isPlus(U1, U2, U3), ','(isPlus(U, U3, U4), =(D, U4))))))))))))))).
isPlus(zero, X, X).
isPlus(succ(X), zero, succ(X)).
isPlus(succ(X), succ(Y), succ(succ(Z))) :- isPlus(X, Y, Z).
isPlus(succ(X), pred(Y), Z) :- isPlus(X, Y, Z).
isPlus(pred(X), zero, pred(X)).
isPlus(pred(X), succ(Y), Z) :- isPlus(X, Y, Z).
isPlus(pred(X), pred(Y), pred(pred(Z))) :- isPlus(X, Y, Z).
isMinus(X, zero, X).
isMinus(zero, succ(Y), pred(Z)) :- isMinus(zero, Y, Z).
isMinus(zero, pred(Y), succ(Z)) :- isMinus(zero, Y, Z).
isMinus(succ(X), succ(Y), Z) :- isMinus(X, Y, Z).
isMinus(succ(X), pred(Y), succ(succ(Z))) :- isMinus(X, Y, Z).
isMinus(pred(X), succ(Y), pred(pred(Z))) :- isMinus(X, Y, Z).
isMinus(pred(X), pred(Y), Z) :- isMinus(X, Y, Z).
isTimes(X, zero, zero).
isTimes(zero, succ(Y), zero).
isTimes(zero, pred(Y), zero).
isTimes(succ(X), succ(Y), Z) :- ','(isTimes(succ(X), Y, A), isPlus(A, succ(X), Z)).
isTimes(succ(X), pred(Y), Z) :- ','(isTimes(succ(X), Y, A), isMinus(A, succ(X), Z)).
isTimes(pred(X), succ(Y), Z) :- ','(isTimes(pred(X), Y, A), isPlus(A, pred(X), Z)).
isTimes(pred(X), pred(Y), Z) :- ','(isTimes(pred(X), Y, A), isMinus(A, pred(X), Z)).
isDiv(zero, succ(Y), zero).
isDiv(zero, pred(Y), zero).
isDiv(succ(X), succ(Y), zero) :- isMinus(succ(X), succ(Y), pred(Z)).
isDiv(succ(X), succ(Y), succ(Z)) :- ','(isMinus(succ(X), succ(Y), A), isDiv(A, succ(Y), Z)).
isDiv(succ(X), pred(Y), Z) :- ','(isMinus(zero, pred(Y), A), ','(isDiv(succ(X), A, B), isMinus(zero, B, Z))).
isDiv(pred(X), pred(Y), zero) :- isMinus(pred(X), pred(Y), succ(Z)).
isDiv(pred(X), pred(Y), succ(Z)) :- ','(isMinus(pred(X), pred(Y), A), isDiv(A, pred(Y), Z)).
isDiv(pred(X), succ(Y), Z) :- ','(isMinus(zero, pred(X), A), ','(isDiv(A, succ(Y), B), isMinus(zero, B, Z))).
isModulo(X, Y, Z) :- ','(isDiv(X, Y, A), ','(isTimes(A, Y, B), isMinus(X, B, Z))).
=(X, X).


Query: distance(g,g,g,g,a)
----------------------------------------

(7) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

distance_in_5: (b,b,b,b,f)

isPlus_in_3: (b,b,f) (b,b,b)

isMinus_in_3: (b,b,f) (b,b,b)

isTimes_in_3: (b,b,f) (b,b,b)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(8)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)



----------------------------------------

(9) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(X1, X2, succ(zero), J, D) -> U1_GGGGA(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   DISTANCE_IN_GGGGA(X1, X2, succ(zero), J, D) -> ISPLUS_IN_GGA(succ(zero), succ(zero), U)
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> U36_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> U37_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> U38_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> U39_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   U1_GGGGA(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_GGGGA(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   U1_GGGGA(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> ISMINUS_IN_GGA(J, U, U1)
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> U40_GGA(Y, Z, isMinus_in_gga(zero, Y, Z))
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> U41_GGA(Y, Z, isMinus_in_gga(zero, Y, Z))
   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> U42_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> U43_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> U44_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> U45_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   U2_GGGGA(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_GGGGA(X1, X2, J, D, =_in_ag(D, U1))
   U2_GGGGA(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> =_IN_AG(D, U1)
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> U4_GGGGA(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> ISPLUS_IN_GGA(succ(succ(zero)), succ(zero), U)
   U4_GGGGA(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_GGGGA(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U4_GGGGA(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> ISMINUS_IN_GGA(I, U, U1)
   U5_GGGGA(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_GGGGA(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U5_GGGGA(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> ISPLUS_IN_GGA(M, U1, U2)
   U6_GGGGA(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_GGGGA(X3, M, I, D, =_in_ag(D, U2))
   U6_GGGGA(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> =_IN_AG(D, U2)
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> U8_GGGGA(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U)
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> U46_GGA(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> U48_GGA(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> U50_GGA(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> U52_GGA(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U52_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_GGA(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U52_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISMINUS_IN_GGA(A, pred(X), Z)
   U50_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_GGA(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U50_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISPLUS_IN_GGA(A, pred(X), Z)
   U48_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_GGA(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U48_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISMINUS_IN_GGA(A, succ(X), Z)
   U46_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_GGA(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U46_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISPLUS_IN_GGA(A, succ(X), Z)
   U8_GGGGA(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_GGGGA(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U8_GGGGA(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> ISPLUS_IN_GGA(succ(succ(zero)), succ(zero), U1)
   U9_GGGGA(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_GGGGA(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U9_GGGGA(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> ISMINUS_IN_GGA(J, U1, U2)
   U10_GGGGA(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_GGGGA(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U10_GGGGA(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> ISMINUS_IN_GGA(U, U2, U3)
   U11_GGGGA(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_GGGGA(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U11_GGGGA(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> ISPLUS_IN_GGA(N, U3, U4)
   U12_GGGGA(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_GGGGA(N, M, J, D, =_in_ag(D, U4))
   U12_GGGGA(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> =_IN_AG(D, U4)
   DISTANCE_IN_GGGGA(N, M, I, succ(zero), D) -> U14_GGGGA(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   DISTANCE_IN_GGGGA(N, M, I, succ(zero), D) -> ISTIMES_IN_GGA(succ(succ(zero)), N, U)
   U14_GGGGA(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_GGGGA(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U14_GGGGA(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U1)
   U15_GGGGA(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_GGGGA(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U15_GGGGA(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> ISPLUS_IN_GGA(succ(succ(succ(zero))), succ(zero), U2)
   U16_GGGGA(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_GGGGA(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U16_GGGGA(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> ISMINUS_IN_GGA(I, U2, U3)
   U17_GGGGA(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_GGGGA(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U17_GGGGA(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> ISMINUS_IN_GGA(U1, U3, U4)
   U18_GGGGA(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_GGGGA(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U18_GGGGA(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> ISPLUS_IN_GGA(U, U4, U5)
   U19_GGGGA(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_GGGGA(N, M, I, D, =_in_ag(D, U5))
   U19_GGGGA(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> =_IN_AG(D, U5)
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U21_GGGGA(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> ISMINUS_IN_GGA(N, succ(succ(zero)), U)
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, D, U, =_in_ag(N1, U))
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> =_IN_AG(N1, U)
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> ISMINUS_IN_GGG(M, succ(succ(zero)), U)
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> U40_GGG(Y, Z, isMinus_in_ggg(zero, Y, Z))
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> U41_GGG(Y, Z, isMinus_in_ggg(zero, Y, Z))
   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> U42_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> U43_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> U44_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> U45_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> =_IN_AG(M1, U)
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> ISMINUS_IN_GGG(I, succ(zero), U)
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> =_IN_AG(I1, U)
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> ISMINUS_IN_GGG(J, succ(zero), U)
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> =_IN_AG(J1, U)
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1, D1)
   U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> ISTIMES_IN_GGG(succ(succ(zero)), N, U)
   ISTIMES_IN_GGG(succ(X), succ(Y), Z) -> U46_GGG(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGG(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   U46_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_GGG(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   U46_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISPLUS_IN_GGG(A, succ(X), Z)
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> U36_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> U37_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> U38_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> U39_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISTIMES_IN_GGG(succ(X), pred(Y), Z) -> U48_GGG(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGG(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   U48_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_GGG(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U48_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISMINUS_IN_GGG(A, succ(X), Z)
   ISTIMES_IN_GGG(pred(X), succ(Y), Z) -> U50_GGG(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGG(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U50_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_GGG(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U50_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISPLUS_IN_GGG(A, pred(X), Z)
   ISTIMES_IN_GGG(pred(X), pred(Y), Z) -> U52_GGG(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGG(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U52_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_GGG(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U52_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISMINUS_IN_GGG(A, pred(X), Z)
   U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U1)
   U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_GGGGA(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> ISMINUS_IN_GGA(D1, succ(succ(succ(succ(zero)))), U2)
   U32_GGGGA(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_GGGGA(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U32_GGGGA(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> ISPLUS_IN_GGA(U1, U2, U3)
   U33_GGGGA(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_GGGGA(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U33_GGGGA(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> ISPLUS_IN_GGA(U, U3, U4)
   U34_GGGGA(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_GGGGA(N, M, I, J, D, =_in_ag(D, U4))
   U34_GGGGA(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> =_IN_AG(D, U4)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U1_GGGGA(x1, x2, x3, x4, x5)  =  U1_GGGGA(x1, x2, x3, x5)

ISPLUS_IN_GGA(x1, x2, x3)  =  ISPLUS_IN_GGA(x1, x2)

U36_GGA(x1, x2, x3, x4)  =  U36_GGA(x1, x2, x4)

U37_GGA(x1, x2, x3, x4)  =  U37_GGA(x1, x2, x4)

U38_GGA(x1, x2, x3, x4)  =  U38_GGA(x1, x2, x4)

U39_GGA(x1, x2, x3, x4)  =  U39_GGA(x1, x2, x4)

U2_GGGGA(x1, x2, x3, x4, x5)  =  U2_GGGGA(x1, x2, x3, x5)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)

U40_GGA(x1, x2, x3)  =  U40_GGA(x1, x3)

U41_GGA(x1, x2, x3)  =  U41_GGA(x1, x3)

U42_GGA(x1, x2, x3, x4)  =  U42_GGA(x1, x2, x4)

U43_GGA(x1, x2, x3, x4)  =  U43_GGA(x1, x2, x4)

U44_GGA(x1, x2, x3, x4)  =  U44_GGA(x1, x2, x4)

U45_GGA(x1, x2, x3, x4)  =  U45_GGA(x1, x2, x4)

U3_GGGGA(x1, x2, x3, x4, x5)  =  U3_GGGGA(x1, x2, x3, x5)

=_IN_AG(x1, x2)  =  =_IN_AG(x2)

U4_GGGGA(x1, x2, x3, x4, x5)  =  U4_GGGGA(x1, x2, x3, x5)

U5_GGGGA(x1, x2, x3, x4, x5)  =  U5_GGGGA(x1, x2, x3, x5)

U6_GGGGA(x1, x2, x3, x4, x5)  =  U6_GGGGA(x1, x2, x3, x5)

U7_GGGGA(x1, x2, x3, x4, x5)  =  U7_GGGGA(x1, x2, x3, x5)

U8_GGGGA(x1, x2, x3, x4, x5)  =  U8_GGGGA(x1, x2, x3, x5)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)

U46_GGA(x1, x2, x3, x4)  =  U46_GGA(x1, x2, x4)

U48_GGA(x1, x2, x3, x4)  =  U48_GGA(x1, x2, x4)

U50_GGA(x1, x2, x3, x4)  =  U50_GGA(x1, x2, x4)

U52_GGA(x1, x2, x3, x4)  =  U52_GGA(x1, x2, x4)

U53_GGA(x1, x2, x3, x4)  =  U53_GGA(x1, x2, x4)

U51_GGA(x1, x2, x3, x4)  =  U51_GGA(x1, x2, x4)

U49_GGA(x1, x2, x3, x4)  =  U49_GGA(x1, x2, x4)

U47_GGA(x1, x2, x3, x4)  =  U47_GGA(x1, x2, x4)

U9_GGGGA(x1, x2, x3, x4, x5, x6)  =  U9_GGGGA(x1, x2, x3, x5, x6)

U10_GGGGA(x1, x2, x3, x4, x5, x6)  =  U10_GGGGA(x1, x2, x3, x5, x6)

U11_GGGGA(x1, x2, x3, x4, x5)  =  U11_GGGGA(x1, x2, x3, x5)

U12_GGGGA(x1, x2, x3, x4, x5)  =  U12_GGGGA(x1, x2, x3, x5)

U13_GGGGA(x1, x2, x3, x4, x5)  =  U13_GGGGA(x1, x2, x3, x5)

U14_GGGGA(x1, x2, x3, x4, x5)  =  U14_GGGGA(x1, x2, x3, x5)

U15_GGGGA(x1, x2, x3, x4, x5, x6)  =  U15_GGGGA(x1, x2, x3, x5, x6)

U16_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U16_GGGGA(x1, x2, x3, x5, x6, x7)

U17_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U17_GGGGA(x1, x2, x3, x5, x6, x7)

U18_GGGGA(x1, x2, x3, x4, x5, x6)  =  U18_GGGGA(x1, x2, x3, x5, x6)

U19_GGGGA(x1, x2, x3, x4, x5)  =  U19_GGGGA(x1, x2, x3, x5)

U20_GGGGA(x1, x2, x3, x4, x5)  =  U20_GGGGA(x1, x2, x3, x5)

U21_GGGGA(x1, x2, x3, x4, x5, x6)  =  U21_GGGGA(x1, x2, x3, x4, x6)

U22_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U22_GGGGA(x1, x2, x3, x4, x6, x7)

U23_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_GGGGA(x1, x2, x3, x4, x6, x7, x8)

ISMINUS_IN_GGG(x1, x2, x3)  =  ISMINUS_IN_GGG(x1, x2, x3)

U40_GGG(x1, x2, x3)  =  U40_GGG(x1, x2, x3)

U41_GGG(x1, x2, x3)  =  U41_GGG(x1, x2, x3)

U42_GGG(x1, x2, x3, x4)  =  U42_GGG(x1, x2, x3, x4)

U43_GGG(x1, x2, x3, x4)  =  U43_GGG(x1, x2, x3, x4)

U44_GGG(x1, x2, x3, x4)  =  U44_GGG(x1, x2, x3, x4)

U45_GGG(x1, x2, x3, x4)  =  U45_GGG(x1, x2, x3, x4)

U24_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U25_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9)

U26_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9)

U27_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_GGGGA(x1, x2, x3, x4, x6, x11)

U30_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_GGGGA(x1, x2, x3, x4, x6, x11, x12)

ISTIMES_IN_GGG(x1, x2, x3)  =  ISTIMES_IN_GGG(x1, x2, x3)

U46_GGG(x1, x2, x3, x4)  =  U46_GGG(x1, x2, x3, x4)

U47_GGG(x1, x2, x3, x4)  =  U47_GGG(x1, x2, x3, x4)

ISPLUS_IN_GGG(x1, x2, x3)  =  ISPLUS_IN_GGG(x1, x2, x3)

U36_GGG(x1, x2, x3, x4)  =  U36_GGG(x1, x2, x3, x4)

U37_GGG(x1, x2, x3, x4)  =  U37_GGG(x1, x2, x3, x4)

U38_GGG(x1, x2, x3, x4)  =  U38_GGG(x1, x2, x3, x4)

U39_GGG(x1, x2, x3, x4)  =  U39_GGG(x1, x2, x3, x4)

U48_GGG(x1, x2, x3, x4)  =  U48_GGG(x1, x2, x3, x4)

U49_GGG(x1, x2, x3, x4)  =  U49_GGG(x1, x2, x3, x4)

U50_GGG(x1, x2, x3, x4)  =  U50_GGG(x1, x2, x3, x4)

U51_GGG(x1, x2, x3, x4)  =  U51_GGG(x1, x2, x3, x4)

U52_GGG(x1, x2, x3, x4)  =  U52_GGG(x1, x2, x3, x4)

U53_GGG(x1, x2, x3, x4)  =  U53_GGG(x1, x2, x3, x4)

U31_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_GGGGA(x1, x2, x3, x4, x6, x11, x12)

U32_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U33_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U33_GGGGA(x1, x2, x3, x4, x6, x7)

U34_GGGGA(x1, x2, x3, x4, x5, x6)  =  U34_GGGGA(x1, x2, x3, x4, x6)

U35_GGGGA(x1, x2, x3, x4, x5, x6)  =  U35_GGGGA(x1, x2, x3, x4, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(X1, X2, succ(zero), J, D) -> U1_GGGGA(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   DISTANCE_IN_GGGGA(X1, X2, succ(zero), J, D) -> ISPLUS_IN_GGA(succ(zero), succ(zero), U)
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> U36_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> U37_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> U38_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> U39_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   U1_GGGGA(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_GGGGA(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   U1_GGGGA(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> ISMINUS_IN_GGA(J, U, U1)
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> U40_GGA(Y, Z, isMinus_in_gga(zero, Y, Z))
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> U41_GGA(Y, Z, isMinus_in_gga(zero, Y, Z))
   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> U42_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> U43_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> U44_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> U45_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   U2_GGGGA(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_GGGGA(X1, X2, J, D, =_in_ag(D, U1))
   U2_GGGGA(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> =_IN_AG(D, U1)
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> U4_GGGGA(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> ISPLUS_IN_GGA(succ(succ(zero)), succ(zero), U)
   U4_GGGGA(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_GGGGA(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U4_GGGGA(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> ISMINUS_IN_GGA(I, U, U1)
   U5_GGGGA(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_GGGGA(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U5_GGGGA(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> ISPLUS_IN_GGA(M, U1, U2)
   U6_GGGGA(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_GGGGA(X3, M, I, D, =_in_ag(D, U2))
   U6_GGGGA(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> =_IN_AG(D, U2)
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> U8_GGGGA(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U)
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> U46_GGA(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> U48_GGA(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> U50_GGA(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> U52_GGA(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U52_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_GGA(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U52_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISMINUS_IN_GGA(A, pred(X), Z)
   U50_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_GGA(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U50_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISPLUS_IN_GGA(A, pred(X), Z)
   U48_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_GGA(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U48_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISMINUS_IN_GGA(A, succ(X), Z)
   U46_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_GGA(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U46_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISPLUS_IN_GGA(A, succ(X), Z)
   U8_GGGGA(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_GGGGA(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U8_GGGGA(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> ISPLUS_IN_GGA(succ(succ(zero)), succ(zero), U1)
   U9_GGGGA(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_GGGGA(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U9_GGGGA(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> ISMINUS_IN_GGA(J, U1, U2)
   U10_GGGGA(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_GGGGA(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U10_GGGGA(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> ISMINUS_IN_GGA(U, U2, U3)
   U11_GGGGA(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_GGGGA(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U11_GGGGA(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> ISPLUS_IN_GGA(N, U3, U4)
   U12_GGGGA(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_GGGGA(N, M, J, D, =_in_ag(D, U4))
   U12_GGGGA(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> =_IN_AG(D, U4)
   DISTANCE_IN_GGGGA(N, M, I, succ(zero), D) -> U14_GGGGA(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   DISTANCE_IN_GGGGA(N, M, I, succ(zero), D) -> ISTIMES_IN_GGA(succ(succ(zero)), N, U)
   U14_GGGGA(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_GGGGA(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U14_GGGGA(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U1)
   U15_GGGGA(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_GGGGA(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U15_GGGGA(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> ISPLUS_IN_GGA(succ(succ(succ(zero))), succ(zero), U2)
   U16_GGGGA(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_GGGGA(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U16_GGGGA(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> ISMINUS_IN_GGA(I, U2, U3)
   U17_GGGGA(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_GGGGA(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U17_GGGGA(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> ISMINUS_IN_GGA(U1, U3, U4)
   U18_GGGGA(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_GGGGA(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U18_GGGGA(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> ISPLUS_IN_GGA(U, U4, U5)
   U19_GGGGA(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_GGGGA(N, M, I, D, =_in_ag(D, U5))
   U19_GGGGA(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> =_IN_AG(D, U5)
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U21_GGGGA(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> ISMINUS_IN_GGA(N, succ(succ(zero)), U)
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, D, U, =_in_ag(N1, U))
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> =_IN_AG(N1, U)
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> ISMINUS_IN_GGG(M, succ(succ(zero)), U)
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> U40_GGG(Y, Z, isMinus_in_ggg(zero, Y, Z))
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> U41_GGG(Y, Z, isMinus_in_ggg(zero, Y, Z))
   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> U42_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> U43_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> U44_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> U45_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> =_IN_AG(M1, U)
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> ISMINUS_IN_GGG(I, succ(zero), U)
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> =_IN_AG(I1, U)
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> ISMINUS_IN_GGG(J, succ(zero), U)
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> =_IN_AG(J1, U)
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1, D1)
   U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> ISTIMES_IN_GGG(succ(succ(zero)), N, U)
   ISTIMES_IN_GGG(succ(X), succ(Y), Z) -> U46_GGG(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGG(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   U46_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_GGG(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   U46_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISPLUS_IN_GGG(A, succ(X), Z)
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> U36_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> U37_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> U38_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> U39_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISTIMES_IN_GGG(succ(X), pred(Y), Z) -> U48_GGG(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGG(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   U48_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_GGG(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U48_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISMINUS_IN_GGG(A, succ(X), Z)
   ISTIMES_IN_GGG(pred(X), succ(Y), Z) -> U50_GGG(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGG(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U50_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_GGG(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U50_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISPLUS_IN_GGG(A, pred(X), Z)
   ISTIMES_IN_GGG(pred(X), pred(Y), Z) -> U52_GGG(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGG(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U52_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_GGG(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U52_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISMINUS_IN_GGG(A, pred(X), Z)
   U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U1)
   U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_GGGGA(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> ISMINUS_IN_GGA(D1, succ(succ(succ(succ(zero)))), U2)
   U32_GGGGA(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_GGGGA(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U32_GGGGA(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> ISPLUS_IN_GGA(U1, U2, U3)
   U33_GGGGA(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_GGGGA(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U33_GGGGA(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> ISPLUS_IN_GGA(U, U3, U4)
   U34_GGGGA(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_GGGGA(N, M, I, J, D, =_in_ag(D, U4))
   U34_GGGGA(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> =_IN_AG(D, U4)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U1_GGGGA(x1, x2, x3, x4, x5)  =  U1_GGGGA(x1, x2, x3, x5)

ISPLUS_IN_GGA(x1, x2, x3)  =  ISPLUS_IN_GGA(x1, x2)

U36_GGA(x1, x2, x3, x4)  =  U36_GGA(x1, x2, x4)

U37_GGA(x1, x2, x3, x4)  =  U37_GGA(x1, x2, x4)

U38_GGA(x1, x2, x3, x4)  =  U38_GGA(x1, x2, x4)

U39_GGA(x1, x2, x3, x4)  =  U39_GGA(x1, x2, x4)

U2_GGGGA(x1, x2, x3, x4, x5)  =  U2_GGGGA(x1, x2, x3, x5)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)

U40_GGA(x1, x2, x3)  =  U40_GGA(x1, x3)

U41_GGA(x1, x2, x3)  =  U41_GGA(x1, x3)

U42_GGA(x1, x2, x3, x4)  =  U42_GGA(x1, x2, x4)

U43_GGA(x1, x2, x3, x4)  =  U43_GGA(x1, x2, x4)

U44_GGA(x1, x2, x3, x4)  =  U44_GGA(x1, x2, x4)

U45_GGA(x1, x2, x3, x4)  =  U45_GGA(x1, x2, x4)

U3_GGGGA(x1, x2, x3, x4, x5)  =  U3_GGGGA(x1, x2, x3, x5)

=_IN_AG(x1, x2)  =  =_IN_AG(x2)

U4_GGGGA(x1, x2, x3, x4, x5)  =  U4_GGGGA(x1, x2, x3, x5)

U5_GGGGA(x1, x2, x3, x4, x5)  =  U5_GGGGA(x1, x2, x3, x5)

U6_GGGGA(x1, x2, x3, x4, x5)  =  U6_GGGGA(x1, x2, x3, x5)

U7_GGGGA(x1, x2, x3, x4, x5)  =  U7_GGGGA(x1, x2, x3, x5)

U8_GGGGA(x1, x2, x3, x4, x5)  =  U8_GGGGA(x1, x2, x3, x5)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)

U46_GGA(x1, x2, x3, x4)  =  U46_GGA(x1, x2, x4)

U48_GGA(x1, x2, x3, x4)  =  U48_GGA(x1, x2, x4)

U50_GGA(x1, x2, x3, x4)  =  U50_GGA(x1, x2, x4)

U52_GGA(x1, x2, x3, x4)  =  U52_GGA(x1, x2, x4)

U53_GGA(x1, x2, x3, x4)  =  U53_GGA(x1, x2, x4)

U51_GGA(x1, x2, x3, x4)  =  U51_GGA(x1, x2, x4)

U49_GGA(x1, x2, x3, x4)  =  U49_GGA(x1, x2, x4)

U47_GGA(x1, x2, x3, x4)  =  U47_GGA(x1, x2, x4)

U9_GGGGA(x1, x2, x3, x4, x5, x6)  =  U9_GGGGA(x1, x2, x3, x5, x6)

U10_GGGGA(x1, x2, x3, x4, x5, x6)  =  U10_GGGGA(x1, x2, x3, x5, x6)

U11_GGGGA(x1, x2, x3, x4, x5)  =  U11_GGGGA(x1, x2, x3, x5)

U12_GGGGA(x1, x2, x3, x4, x5)  =  U12_GGGGA(x1, x2, x3, x5)

U13_GGGGA(x1, x2, x3, x4, x5)  =  U13_GGGGA(x1, x2, x3, x5)

U14_GGGGA(x1, x2, x3, x4, x5)  =  U14_GGGGA(x1, x2, x3, x5)

U15_GGGGA(x1, x2, x3, x4, x5, x6)  =  U15_GGGGA(x1, x2, x3, x5, x6)

U16_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U16_GGGGA(x1, x2, x3, x5, x6, x7)

U17_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U17_GGGGA(x1, x2, x3, x5, x6, x7)

U18_GGGGA(x1, x2, x3, x4, x5, x6)  =  U18_GGGGA(x1, x2, x3, x5, x6)

U19_GGGGA(x1, x2, x3, x4, x5)  =  U19_GGGGA(x1, x2, x3, x5)

U20_GGGGA(x1, x2, x3, x4, x5)  =  U20_GGGGA(x1, x2, x3, x5)

U21_GGGGA(x1, x2, x3, x4, x5, x6)  =  U21_GGGGA(x1, x2, x3, x4, x6)

U22_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U22_GGGGA(x1, x2, x3, x4, x6, x7)

U23_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_GGGGA(x1, x2, x3, x4, x6, x7, x8)

ISMINUS_IN_GGG(x1, x2, x3)  =  ISMINUS_IN_GGG(x1, x2, x3)

U40_GGG(x1, x2, x3)  =  U40_GGG(x1, x2, x3)

U41_GGG(x1, x2, x3)  =  U41_GGG(x1, x2, x3)

U42_GGG(x1, x2, x3, x4)  =  U42_GGG(x1, x2, x3, x4)

U43_GGG(x1, x2, x3, x4)  =  U43_GGG(x1, x2, x3, x4)

U44_GGG(x1, x2, x3, x4)  =  U44_GGG(x1, x2, x3, x4)

U45_GGG(x1, x2, x3, x4)  =  U45_GGG(x1, x2, x3, x4)

U24_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U25_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9)

U26_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9)

U27_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_GGGGA(x1, x2, x3, x4, x6, x11)

U30_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_GGGGA(x1, x2, x3, x4, x6, x11, x12)

ISTIMES_IN_GGG(x1, x2, x3)  =  ISTIMES_IN_GGG(x1, x2, x3)

U46_GGG(x1, x2, x3, x4)  =  U46_GGG(x1, x2, x3, x4)

U47_GGG(x1, x2, x3, x4)  =  U47_GGG(x1, x2, x3, x4)

ISPLUS_IN_GGG(x1, x2, x3)  =  ISPLUS_IN_GGG(x1, x2, x3)

U36_GGG(x1, x2, x3, x4)  =  U36_GGG(x1, x2, x3, x4)

U37_GGG(x1, x2, x3, x4)  =  U37_GGG(x1, x2, x3, x4)

U38_GGG(x1, x2, x3, x4)  =  U38_GGG(x1, x2, x3, x4)

U39_GGG(x1, x2, x3, x4)  =  U39_GGG(x1, x2, x3, x4)

U48_GGG(x1, x2, x3, x4)  =  U48_GGG(x1, x2, x3, x4)

U49_GGG(x1, x2, x3, x4)  =  U49_GGG(x1, x2, x3, x4)

U50_GGG(x1, x2, x3, x4)  =  U50_GGG(x1, x2, x3, x4)

U51_GGG(x1, x2, x3, x4)  =  U51_GGG(x1, x2, x3, x4)

U52_GGG(x1, x2, x3, x4)  =  U52_GGG(x1, x2, x3, x4)

U53_GGG(x1, x2, x3, x4)  =  U53_GGG(x1, x2, x3, x4)

U31_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_GGGGA(x1, x2, x3, x4, x6, x11, x12)

U32_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U33_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U33_GGGGA(x1, x2, x3, x4, x6, x7)

U34_GGGGA(x1, x2, x3, x4, x5, x6)  =  U34_GGGGA(x1, x2, x3, x4, x6)

U35_GGGGA(x1, x2, x3, x4, x5, x6)  =  U35_GGGGA(x1, x2, x3, x4, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 9 SCCs with 109 less nodes.
----------------------------------------

(12)
Complex Obligation (AND)

----------------------------------------

(13)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)

ISPLUS_IN_GGG(x1, x2, x3)  =  ISPLUS_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(14) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(15)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(16) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(18) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


*ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


*ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)

ISMINUS_IN_GGG(x1, x2, x3)  =  ISMINUS_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(21) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(22)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(23) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(25) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
The graph contains the following edges 1 >= 1, 2 > 2, 3 > 3


*ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
The graph contains the following edges 1 >= 1, 2 > 2, 3 > 3


----------------------------------------

(26)
YES

----------------------------------------

(27)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)

ISMINUS_IN_GGG(x1, x2, x3)  =  ISMINUS_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(28) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(29)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(30) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(31)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(32) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


*ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


----------------------------------------

(33)
YES

----------------------------------------

(34)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(35) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(36)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)

R is empty.
The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

zero  =  zero

pred(x1)  =  pred(x1)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(37) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(zero, pred(Y)) -> ISMINUS_IN_GGA(zero, Y)
   ISMINUS_IN_GGA(zero, succ(Y)) -> ISMINUS_IN_GGA(zero, Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(39) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISMINUS_IN_GGA(zero, pred(Y)) -> ISMINUS_IN_GGA(zero, Y)
The graph contains the following edges 1 >= 1, 2 > 2


*ISMINUS_IN_GGA(zero, succ(Y)) -> ISMINUS_IN_GGA(zero, Y)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(40)
YES

----------------------------------------

(41)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(42) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(43)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)

R is empty.
The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

pred(x1)  =  pred(x1)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(44) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(45)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(succ(X), pred(Y)) -> ISMINUS_IN_GGA(X, Y)
   ISMINUS_IN_GGA(succ(X), succ(Y)) -> ISMINUS_IN_GGA(X, Y)
   ISMINUS_IN_GGA(pred(X), succ(Y)) -> ISMINUS_IN_GGA(X, Y)
   ISMINUS_IN_GGA(pred(X), pred(Y)) -> ISMINUS_IN_GGA(X, Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(46) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISMINUS_IN_GGA(succ(X), pred(Y)) -> ISMINUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISMINUS_IN_GGA(succ(X), succ(Y)) -> ISMINUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISMINUS_IN_GGA(pred(X), succ(Y)) -> ISMINUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISMINUS_IN_GGA(pred(X), pred(Y)) -> ISMINUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(47)
YES

----------------------------------------

(48)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGA(X, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)

ISPLUS_IN_GGA(x1, x2, x3)  =  ISPLUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(49) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(50)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGA(X, Y, Z)

R is empty.
The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

pred(x1)  =  pred(x1)

ISPLUS_IN_GGA(x1, x2, x3)  =  ISPLUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(51) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(52)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGA(succ(X), pred(Y)) -> ISPLUS_IN_GGA(X, Y)
   ISPLUS_IN_GGA(succ(X), succ(Y)) -> ISPLUS_IN_GGA(X, Y)
   ISPLUS_IN_GGA(pred(X), succ(Y)) -> ISPLUS_IN_GGA(X, Y)
   ISPLUS_IN_GGA(pred(X), pred(Y)) -> ISPLUS_IN_GGA(X, Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(53) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISPLUS_IN_GGA(succ(X), pred(Y)) -> ISPLUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISPLUS_IN_GGA(succ(X), succ(Y)) -> ISPLUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISPLUS_IN_GGA(pred(X), succ(Y)) -> ISPLUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISPLUS_IN_GGA(pred(X), pred(Y)) -> ISPLUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(54)
YES

----------------------------------------

(55)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(56) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(57)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)

R is empty.
The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

pred(x1)  =  pred(x1)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(58) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(59)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(succ(X), pred(Y)) -> ISTIMES_IN_GGA(succ(X), Y)
   ISTIMES_IN_GGA(succ(X), succ(Y)) -> ISTIMES_IN_GGA(succ(X), Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(60) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISTIMES_IN_GGA(succ(X), pred(Y)) -> ISTIMES_IN_GGA(succ(X), Y)
The graph contains the following edges 1 >= 1, 2 > 2


*ISTIMES_IN_GGA(succ(X), succ(Y)) -> ISTIMES_IN_GGA(succ(X), Y)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(61)
YES

----------------------------------------

(62)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(63) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(64)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)

R is empty.
The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

pred(x1)  =  pred(x1)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(65) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(66)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(pred(X), pred(Y)) -> ISTIMES_IN_GGA(pred(X), Y)
   ISTIMES_IN_GGA(pred(X), succ(Y)) -> ISTIMES_IN_GGA(pred(X), Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(67) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISTIMES_IN_GGA(pred(X), pred(Y)) -> ISTIMES_IN_GGA(pred(X), Y)
The graph contains the following edges 1 >= 1, 2 > 2


*ISTIMES_IN_GGA(pred(X), succ(Y)) -> ISTIMES_IN_GGA(pred(X), Y)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(68)
YES

----------------------------------------

(69)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U21_GGGGA(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1, D1)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x1, x2, x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x1, x2, x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x1, x2, x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x1, x2, x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x1, x2, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4, x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x1, x2, x3, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x1, x2, x3, x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x1, x2, x3, x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x2, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x1, x2, x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x2, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x2, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x2, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x2, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x1, x2, x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x1, x2, x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x2, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x2, x3, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x1, x2, x3, x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x1, x2, x3, x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x1, x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x1, x2, x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x1, x2, x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x1, x2, x3, x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x1, x2, x3, x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x1, x2, x3, x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x1, x2, x3, x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x3, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x3, x4, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x1, x2, x3, x4, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg(x1, x2, x3)

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x2, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x1, x2, x3, x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg(x1, x2, x3)

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x1, x2, x3, x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x1, x2, x3, x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x1, x2, x3, x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x1, x2, x3, x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x2, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x1, x2, x3, x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x2, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x1, x2, x3, x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x2, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x1, x2, x3, x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x1, x2, x3, x4, x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x1, x2, x3, x4, x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x1, x2, x3, x4, x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x1, x2, x3, x4, x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x1, x2, x3, x4, x6)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U21_GGGGA(x1, x2, x3, x4, x5, x6)  =  U21_GGGGA(x1, x2, x3, x4, x6)

U22_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U22_GGGGA(x1, x2, x3, x4, x6, x7)

U23_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U24_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U25_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9)

U26_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9)

U27_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9, x10)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(70) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(71)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U21_GGGGA(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1, D1)

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   =_in_ag(X, X) -> =_out_ag(X, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)

The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

zero  =  zero

pred(x1)  =  pred(x1)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x1, x2, x3)

U40_gga(x1, x2, x3)  =  U40_gga(x1, x3)

U41_gga(x1, x2, x3)  =  U41_gga(x1, x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x1, x2, x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x1, x2, x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1, x2)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg(x1, x2, x3)

U40_ggg(x1, x2, x3)  =  U40_ggg(x1, x2, x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x1, x2, x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x1, x2, x3, x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x1, x2, x3, x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x1, x2, x3, x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x1, x2, x3, x4)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U21_GGGGA(x1, x2, x3, x4, x5, x6)  =  U21_GGGGA(x1, x2, x3, x4, x6)

U22_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U22_GGGGA(x1, x2, x3, x4, x6, x7)

U23_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U24_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U25_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9)

U26_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9)

U27_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9, x10)

U28_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_GGGGA(x1, x2, x3, x4, x6, x7, x8, x9, x10)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(72) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(73)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_in_ag(U))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_in_ag(U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_in_ag(U))
   U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_in_ag(U))
   U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   =_in_ag(X) -> =_out_ag(X, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(74) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_in_ag(U)) at position [5] we obtained the following new rules [LPAR04]:

   (U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U)),U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U)))


----------------------------------------

(75)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_in_ag(U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_in_ag(U))
   U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_in_ag(U))
   U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   =_in_ag(X) -> =_out_ag(X, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(76) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_in_ag(U)) at position [6] we obtained the following new rules [LPAR04]:

   (U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U)),U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U)))


----------------------------------------

(77)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_in_ag(U))
   U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_in_ag(U))
   U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U))

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   =_in_ag(X) -> =_out_ag(X, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(78) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_in_ag(U)) at position [7] we obtained the following new rules [LPAR04]:

   (U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U)),U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U)))


----------------------------------------

(79)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_in_ag(U))
   U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U))

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   =_in_ag(X) -> =_out_ag(X, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(80) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_in_ag(U)) at position [8] we obtained the following new rules [LPAR04]:

   (U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U)),U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U)))


----------------------------------------

(81)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U))

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   =_in_ag(X) -> =_out_ag(X, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(82) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(83)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(84) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   =_in_ag(x0)


----------------------------------------

(85)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(86) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U22_GGGGA(N, M, I, J, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U)) we obtained the following new rules [LPAR04]:

   (U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4)),U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4)))


----------------------------------------

(87)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(88) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U)) we obtained the following new rules [LPAR04]:

   (U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4)),U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4)))


----------------------------------------

(89)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(90) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U)) we obtained the following new rules [LPAR04]:

   (U26_GGGGA(z0, z1, z2, z3, z4, z5, z6, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_in_ggg(z3, succ(zero), z4)),U26_GGGGA(z0, z1, z2, z3, z4, z5, z6, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_in_ggg(z3, succ(zero), z4)))


----------------------------------------

(91)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z6, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_in_ggg(z3, succ(zero), z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(92) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z7, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z7, z4),U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z7, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z7, z4))


----------------------------------------

(93)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z6, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z7, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z7, z4)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(94) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U, U)) we obtained the following new rules [LPAR04]:

   (U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)),U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)))


----------------------------------------

(95)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z6, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z7, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z7, z4)
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(96) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U25_GGGGA(N, M, I, J, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, U, N1, M1, =_out_ag(U, U)) we obtained the following new rules [LPAR04]:

   (U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)),U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)))


----------------------------------------

(97)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z6, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z7, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z7, z4)
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4))
   U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(98) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U27_GGGGA(N, M, I, J, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, U, N1, M1, I1, =_out_ag(U, U)) we obtained the following new rules [LPAR04]:

   (U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)),U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)))


----------------------------------------

(99)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z6, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z7, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z7, z4)
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4))
   U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(100) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4)) we obtained the following new rules [LPAR04]:

   (U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4)),U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4)))


----------------------------------------

(101)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z6, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z7, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z7, z4)
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4))
   U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(102) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U26_GGGGA(z0, z1, z2, z3, z4, z5, z6, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_in_ggg(z3, succ(zero), z4)) we obtained the following new rules [LPAR04]:

   (U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4)),U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4)))


----------------------------------------

(103)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z7, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z7, z4)
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4))
   U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(104) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z7, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z7, z4) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4),U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4))


----------------------------------------

(105)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4))
   U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(106) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero)))) we obtained the following new rules [LPAR04]:

   (DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero)))),DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero)))))


----------------------------------------

(107)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4))
   U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4)
   DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(108) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U21_GGGGA(N, M, I, J, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U, U)) we obtained the following new rules [LPAR04]:

   (U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4)),U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4)))


----------------------------------------

(109)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4))
   U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4)
   DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(110) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4, z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4)) we obtained the following new rules [LPAR04]:

   (U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3)),U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3)))


----------------------------------------

(111)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4))
   U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4)
   DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(112) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg(z1, succ(succ(zero)), z4)) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) we obtained the following new rules [LPAR04]:

   (U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)),U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)))


----------------------------------------

(113)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4)
   DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(114) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U25_GGGGA(z0, z1, z2, z3, z4, z5, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) we obtained the following new rules [LPAR04]:

   (U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)),U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)))


----------------------------------------

(115)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4)
   DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3))
   U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(116) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U27_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) we obtained the following new rules [LPAR04]:

   (U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)),U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)))


----------------------------------------

(117)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4)
   DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3))
   U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(118) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4, z4)) -> U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4)) we obtained the following new rules [LPAR04]:

   (U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)),U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)))


----------------------------------------

(119)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4)
   DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3))
   U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(120) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U26_GGGGA(z0, z1, z2, z3, z4, z5, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_in_ggg(z3, succ(zero), z4)) we obtained the following new rules [LPAR04]:

   (U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4)),U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4)))


----------------------------------------

(121)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4)
   DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3))
   U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(122) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(z0, z1, z2, z3, z4, z5, z6, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z6, z4, z4) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4),U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4))


----------------------------------------

(123)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3))
   U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(124) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule DISTANCE_IN_GGGGA(z5, z6, z4, z4) -> U21_GGGGA(z5, z6, z4, z4, isMinus_in_gga(z5, succ(succ(zero)))) we obtained the following new rules [LPAR04]:

   (DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero)))),DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero)))))


----------------------------------------

(125)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3))
   U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4)
   DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(126) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(z0, succ(succ(zero)), x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4, x4)) we obtained the following new rules [LPAR04]:

   (U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3)),U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3)))


----------------------------------------

(127)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3))
   U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4)
   DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(128) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3, z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3)) we obtained the following new rules [LPAR04]:

   (U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2)),U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2)))


----------------------------------------

(129)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3))
   U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4)
   DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(130) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg(z1, succ(succ(zero)), z3)) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) we obtained the following new rules [LPAR04]:

   (U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)),U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)))


----------------------------------------

(131)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4))
   U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4)
   DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(132) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U25_GGGGA(z0, z1, z2, z3, z4, z4, z4, isMinus_out_ggg(z2, succ(zero), z4)) -> U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) we obtained the following new rules [LPAR04]:

   (U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)),U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)))


----------------------------------------

(133)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4)
   DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2))
   U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(134) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U27_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) we obtained the following new rules [LPAR04]:

   (U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)),U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)))


----------------------------------------

(135)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4)
   DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2))
   U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3))
   U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(136) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3, z3)) -> U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)) we obtained the following new rules [LPAR04]:

   (U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)),U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)))


----------------------------------------

(137)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4)
   DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2))
   U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3))
   U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(138) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U26_GGGGA(z0, z1, z2, z3, z4, z4, z4, =_out_ag(z4, z4)) -> U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_in_ggg(z3, succ(zero), z4)) we obtained the following new rules [LPAR04]:

   (U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)),U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)))


----------------------------------------

(139)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4)
   DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2))
   U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3))
   U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(140) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(z0, z1, z2, z3, z4, z5, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z5, z4, z4, z4) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4),U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4))


----------------------------------------

(141)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2))
   U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3))
   U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(142) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule DISTANCE_IN_GGGGA(z5, z4, z4, z4) -> U21_GGGGA(z5, z4, z4, z4, isMinus_in_gga(z5, succ(succ(zero)))) we obtained the following new rules [LPAR04]:

   (DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero)))),DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero)))))


----------------------------------------

(143)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2))
   U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3))
   U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4)
   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(144) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(z0, succ(succ(zero)), x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3, x3)) we obtained the following new rules [LPAR04]:

   (U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2)),U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2)))


----------------------------------------

(145)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2))
   U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3))
   U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4)
   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(146) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2, z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2)) we obtained the following new rules [LPAR04]:

   (U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1)),U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1)))


----------------------------------------

(147)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2))
   U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3))
   U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4)
   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(148) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg(z1, succ(succ(zero)), z2)) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) we obtained the following new rules [LPAR04]:

   (U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)),U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)))


----------------------------------------

(149)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3))
   U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4)
   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(150) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U25_GGGGA(z0, z1, z2, z2, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) we obtained the following new rules [LPAR04]:

   (U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2)),U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2)))


----------------------------------------

(151)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4)
   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))
   U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(152) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U27_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, isMinus_out_ggg(z3, succ(zero), z4)) -> U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) we obtained the following new rules [LPAR04]:

   (U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3)),U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3)))


----------------------------------------

(153)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4)
   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))
   U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2))
   U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(154) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2, z2)) -> U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)) we obtained the following new rules [LPAR04]:

   (U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)) -> U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1)),U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)) -> U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1)))


----------------------------------------

(155)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4)
   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))
   U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2))
   U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)) -> U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(156) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U26_GGGGA(z0, z1, z2, z2, z3, z3, z3, =_out_ag(z3, z3)) -> U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)) we obtained the following new rules [LPAR04]:

   (U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2)) -> U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)),U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2)) -> U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)))


----------------------------------------

(157)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4)
   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))
   U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2))
   U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)) -> U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2)) -> U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(158) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(z0, z1, z2, z3, z4, z4, z4, z4, =_out_ag(z4, z4)) -> DISTANCE_IN_GGGGA(z4, z4, z4, z4) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3)) -> DISTANCE_IN_GGGGA(z3, z3, z3, z3),U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3)) -> DISTANCE_IN_GGGGA(z3, z3, z3, z3))


----------------------------------------

(159)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))
   U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2))
   U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)) -> U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2)) -> U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3)) -> DISTANCE_IN_GGGGA(z3, z3, z3, z3)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(160) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U25_GGGGA(z0, z1, z1, z1, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2)) we obtained the following new rules [LPAR04]:

   (U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1)),U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1)))


----------------------------------------

(161)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))
   U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)) -> U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2)) -> U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3)) -> DISTANCE_IN_GGGGA(z3, z3, z3, z3)
   U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(162) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U27_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, isMinus_out_ggg(z2, succ(zero), z3)) -> U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3)) we obtained the following new rules [LPAR04]:

   (U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U28_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, =_out_ag(z2, z2)),U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U28_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, =_out_ag(z2, z2)))


----------------------------------------

(163)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)) -> U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2)) -> U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3)) -> DISTANCE_IN_GGGGA(z3, z3, z3, z3)
   U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1))
   U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U28_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, =_out_ag(z2, z2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(164) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U26_GGGGA(z0, z1, z1, z1, z2, z2, z2, =_out_ag(z2, z2)) -> U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)) we obtained the following new rules [LPAR04]:

   (U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1)) -> U27_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1)),U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1)) -> U27_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1)))


----------------------------------------

(165)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)) -> U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3)) -> DISTANCE_IN_GGGGA(z3, z3, z3, z3)
   U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1))
   U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U28_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, =_out_ag(z2, z2))
   U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1)) -> U27_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(166) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(z0, z1, z2, z2, z3, z3, z3, z3, =_out_ag(z3, z3)) -> DISTANCE_IN_GGGGA(z3, z3, z3, z3) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, =_out_ag(z2, z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2),U28_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, =_out_ag(z2, z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2))


----------------------------------------

(167)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)) -> U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1))
   U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U28_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, =_out_ag(z2, z2))
   U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1)) -> U27_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U28_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, =_out_ag(z2, z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(168) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U27_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, isMinus_out_ggg(z1, succ(zero), z2)) -> U28_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, =_out_ag(z2, z2)) we obtained the following new rules [LPAR04]:

   (U27_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U28_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, =_out_ag(z1, z1)),U27_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U28_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, =_out_ag(z1, z1)))


----------------------------------------

(169)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)) -> U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1))
   U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1)) -> U27_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U28_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, =_out_ag(z2, z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2)
   U27_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U28_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, =_out_ag(z1, z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(170) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(z0, z1, z1, z1, z2, z2, z2, z2, =_out_ag(z2, z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, =_out_ag(z1, z1)) -> DISTANCE_IN_GGGGA(z1, z1, z1, z1),U28_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, =_out_ag(z1, z1)) -> DISTANCE_IN_GGGGA(z1, z1, z1, z1))


----------------------------------------

(171)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z4, z4, z4, z4) -> U21_GGGGA(z4, z4, z4, z4, isMinus_in_gga(z4, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(z0, succ(succ(zero)), x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2, x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1, z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg(z0, succ(succ(zero)), z1)) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1, z1)) -> U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U25_GGGGA(z0, z0, z0, z0, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1))
   U26_GGGGA(z0, z0, z0, z0, z1, z1, z1, =_out_ag(z1, z1)) -> U27_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U27_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, isMinus_out_ggg(z0, succ(zero), z1)) -> U28_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, =_out_ag(z1, z1))
   U28_GGGGA(z0, z0, z0, z0, z1, z1, z1, z1, =_out_ag(z1, z1)) -> DISTANCE_IN_GGGGA(z1, z1, z1, z1)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(Y, isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(X, Y, isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(X, Y, isMinus_in_gga(X, Y))
   U44_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U45_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U43_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U41_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U42_gga(X, Y, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U40_gga(Y, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0, x1)
   U42_gga(x0, x1, x2)
   U44_gga(x0, x1, x2)
   U40_ggg(x0, x1, x2)
   U42_ggg(x0, x1, x2, x3)
   U44_ggg(x0, x1, x2, x3)
   U41_gga(x0, x1)
   U43_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)
   U41_ggg(x0, x1, x2)
   U43_ggg(x0, x1, x2, x3)
   U45_ggg(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(172) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

distance_in_5: (b,b,b,b,f)

isPlus_in_3: (b,b,f) (b,b,b)

isMinus_in_3: (b,b,f) (b,b,b)

isTimes_in_3: (b,b,f) (b,b,b)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(173)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)



----------------------------------------

(174) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(X1, X2, succ(zero), J, D) -> U1_GGGGA(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   DISTANCE_IN_GGGGA(X1, X2, succ(zero), J, D) -> ISPLUS_IN_GGA(succ(zero), succ(zero), U)
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> U36_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> U37_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> U38_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> U39_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   U1_GGGGA(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_GGGGA(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   U1_GGGGA(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> ISMINUS_IN_GGA(J, U, U1)
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> U40_GGA(Y, Z, isMinus_in_gga(zero, Y, Z))
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> U41_GGA(Y, Z, isMinus_in_gga(zero, Y, Z))
   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> U42_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> U43_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> U44_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> U45_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   U2_GGGGA(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_GGGGA(X1, X2, J, D, =_in_ag(D, U1))
   U2_GGGGA(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> =_IN_AG(D, U1)
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> U4_GGGGA(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> ISPLUS_IN_GGA(succ(succ(zero)), succ(zero), U)
   U4_GGGGA(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_GGGGA(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U4_GGGGA(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> ISMINUS_IN_GGA(I, U, U1)
   U5_GGGGA(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_GGGGA(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U5_GGGGA(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> ISPLUS_IN_GGA(M, U1, U2)
   U6_GGGGA(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_GGGGA(X3, M, I, D, =_in_ag(D, U2))
   U6_GGGGA(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> =_IN_AG(D, U2)
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> U8_GGGGA(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U)
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> U46_GGA(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> U48_GGA(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> U50_GGA(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> U52_GGA(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U52_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_GGA(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U52_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISMINUS_IN_GGA(A, pred(X), Z)
   U50_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_GGA(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U50_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISPLUS_IN_GGA(A, pred(X), Z)
   U48_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_GGA(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U48_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISMINUS_IN_GGA(A, succ(X), Z)
   U46_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_GGA(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U46_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISPLUS_IN_GGA(A, succ(X), Z)
   U8_GGGGA(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_GGGGA(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U8_GGGGA(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> ISPLUS_IN_GGA(succ(succ(zero)), succ(zero), U1)
   U9_GGGGA(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_GGGGA(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U9_GGGGA(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> ISMINUS_IN_GGA(J, U1, U2)
   U10_GGGGA(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_GGGGA(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U10_GGGGA(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> ISMINUS_IN_GGA(U, U2, U3)
   U11_GGGGA(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_GGGGA(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U11_GGGGA(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> ISPLUS_IN_GGA(N, U3, U4)
   U12_GGGGA(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_GGGGA(N, M, J, D, =_in_ag(D, U4))
   U12_GGGGA(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> =_IN_AG(D, U4)
   DISTANCE_IN_GGGGA(N, M, I, succ(zero), D) -> U14_GGGGA(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   DISTANCE_IN_GGGGA(N, M, I, succ(zero), D) -> ISTIMES_IN_GGA(succ(succ(zero)), N, U)
   U14_GGGGA(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_GGGGA(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U14_GGGGA(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U1)
   U15_GGGGA(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_GGGGA(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U15_GGGGA(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> ISPLUS_IN_GGA(succ(succ(succ(zero))), succ(zero), U2)
   U16_GGGGA(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_GGGGA(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U16_GGGGA(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> ISMINUS_IN_GGA(I, U2, U3)
   U17_GGGGA(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_GGGGA(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U17_GGGGA(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> ISMINUS_IN_GGA(U1, U3, U4)
   U18_GGGGA(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_GGGGA(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U18_GGGGA(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> ISPLUS_IN_GGA(U, U4, U5)
   U19_GGGGA(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_GGGGA(N, M, I, D, =_in_ag(D, U5))
   U19_GGGGA(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> =_IN_AG(D, U5)
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U21_GGGGA(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> ISMINUS_IN_GGA(N, succ(succ(zero)), U)
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, D, U, =_in_ag(N1, U))
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> =_IN_AG(N1, U)
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> ISMINUS_IN_GGG(M, succ(succ(zero)), U)
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> U40_GGG(Y, Z, isMinus_in_ggg(zero, Y, Z))
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> U41_GGG(Y, Z, isMinus_in_ggg(zero, Y, Z))
   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> U42_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> U43_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> U44_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> U45_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> =_IN_AG(M1, U)
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> ISMINUS_IN_GGG(I, succ(zero), U)
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> =_IN_AG(I1, U)
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> ISMINUS_IN_GGG(J, succ(zero), U)
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> =_IN_AG(J1, U)
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1, D1)
   U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> ISTIMES_IN_GGG(succ(succ(zero)), N, U)
   ISTIMES_IN_GGG(succ(X), succ(Y), Z) -> U46_GGG(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGG(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   U46_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_GGG(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   U46_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISPLUS_IN_GGG(A, succ(X), Z)
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> U36_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> U37_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> U38_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> U39_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISTIMES_IN_GGG(succ(X), pred(Y), Z) -> U48_GGG(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGG(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   U48_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_GGG(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U48_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISMINUS_IN_GGG(A, succ(X), Z)
   ISTIMES_IN_GGG(pred(X), succ(Y), Z) -> U50_GGG(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGG(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U50_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_GGG(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U50_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISPLUS_IN_GGG(A, pred(X), Z)
   ISTIMES_IN_GGG(pred(X), pred(Y), Z) -> U52_GGG(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGG(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U52_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_GGG(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U52_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISMINUS_IN_GGG(A, pred(X), Z)
   U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U1)
   U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_GGGGA(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> ISMINUS_IN_GGA(D1, succ(succ(succ(succ(zero)))), U2)
   U32_GGGGA(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_GGGGA(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U32_GGGGA(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> ISPLUS_IN_GGA(U1, U2, U3)
   U33_GGGGA(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_GGGGA(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U33_GGGGA(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> ISPLUS_IN_GGA(U, U3, U4)
   U34_GGGGA(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_GGGGA(N, M, I, J, D, =_in_ag(D, U4))
   U34_GGGGA(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> =_IN_AG(D, U4)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U1_GGGGA(x1, x2, x3, x4, x5)  =  U1_GGGGA(x3, x5)

ISPLUS_IN_GGA(x1, x2, x3)  =  ISPLUS_IN_GGA(x1, x2)

U36_GGA(x1, x2, x3, x4)  =  U36_GGA(x4)

U37_GGA(x1, x2, x3, x4)  =  U37_GGA(x4)

U38_GGA(x1, x2, x3, x4)  =  U38_GGA(x4)

U39_GGA(x1, x2, x3, x4)  =  U39_GGA(x4)

U2_GGGGA(x1, x2, x3, x4, x5)  =  U2_GGGGA(x5)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)

U40_GGA(x1, x2, x3)  =  U40_GGA(x3)

U41_GGA(x1, x2, x3)  =  U41_GGA(x3)

U42_GGA(x1, x2, x3, x4)  =  U42_GGA(x4)

U43_GGA(x1, x2, x3, x4)  =  U43_GGA(x4)

U44_GGA(x1, x2, x3, x4)  =  U44_GGA(x4)

U45_GGA(x1, x2, x3, x4)  =  U45_GGA(x4)

U3_GGGGA(x1, x2, x3, x4, x5)  =  U3_GGGGA(x5)

=_IN_AG(x1, x2)  =  =_IN_AG(x2)

U4_GGGGA(x1, x2, x3, x4, x5)  =  U4_GGGGA(x2, x3, x5)

U5_GGGGA(x1, x2, x3, x4, x5)  =  U5_GGGGA(x2, x5)

U6_GGGGA(x1, x2, x3, x4, x5)  =  U6_GGGGA(x5)

U7_GGGGA(x1, x2, x3, x4, x5)  =  U7_GGGGA(x5)

U8_GGGGA(x1, x2, x3, x4, x5)  =  U8_GGGGA(x1, x3, x5)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)

U46_GGA(x1, x2, x3, x4)  =  U46_GGA(x1, x4)

U48_GGA(x1, x2, x3, x4)  =  U48_GGA(x1, x4)

U50_GGA(x1, x2, x3, x4)  =  U50_GGA(x1, x4)

U52_GGA(x1, x2, x3, x4)  =  U52_GGA(x1, x4)

U53_GGA(x1, x2, x3, x4)  =  U53_GGA(x4)

U51_GGA(x1, x2, x3, x4)  =  U51_GGA(x4)

U49_GGA(x1, x2, x3, x4)  =  U49_GGA(x4)

U47_GGA(x1, x2, x3, x4)  =  U47_GGA(x4)

U9_GGGGA(x1, x2, x3, x4, x5, x6)  =  U9_GGGGA(x1, x3, x5, x6)

U10_GGGGA(x1, x2, x3, x4, x5, x6)  =  U10_GGGGA(x1, x5, x6)

U11_GGGGA(x1, x2, x3, x4, x5)  =  U11_GGGGA(x1, x5)

U12_GGGGA(x1, x2, x3, x4, x5)  =  U12_GGGGA(x5)

U13_GGGGA(x1, x2, x3, x4, x5)  =  U13_GGGGA(x5)

U14_GGGGA(x1, x2, x3, x4, x5)  =  U14_GGGGA(x2, x3, x5)

U15_GGGGA(x1, x2, x3, x4, x5, x6)  =  U15_GGGGA(x3, x5, x6)

U16_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U16_GGGGA(x3, x5, x6, x7)

U17_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U17_GGGGA(x5, x6, x7)

U18_GGGGA(x1, x2, x3, x4, x5, x6)  =  U18_GGGGA(x5, x6)

U19_GGGGA(x1, x2, x3, x4, x5)  =  U19_GGGGA(x5)

U20_GGGGA(x1, x2, x3, x4, x5)  =  U20_GGGGA(x5)

U21_GGGGA(x1, x2, x3, x4, x5, x6)  =  U21_GGGGA(x1, x2, x3, x4, x6)

U22_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U22_GGGGA(x1, x2, x3, x4, x6, x7)

U23_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_GGGGA(x1, x2, x3, x4, x6, x7, x8)

ISMINUS_IN_GGG(x1, x2, x3)  =  ISMINUS_IN_GGG(x1, x2, x3)

U40_GGG(x1, x2, x3)  =  U40_GGG(x3)

U41_GGG(x1, x2, x3)  =  U41_GGG(x3)

U42_GGG(x1, x2, x3, x4)  =  U42_GGG(x4)

U43_GGG(x1, x2, x3, x4)  =  U43_GGG(x4)

U44_GGG(x1, x2, x3, x4)  =  U44_GGG(x4)

U45_GGG(x1, x2, x3, x4)  =  U45_GGG(x4)

U24_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U25_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_GGGGA(x1, x2, x4, x6, x7, x8, x9)

U26_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_GGGGA(x1, x2, x4, x6, x7, x8, x9)

U27_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_GGGGA(x1, x2, x6, x7, x8, x9, x10)

U28_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_GGGGA(x1, x2, x6, x7, x8, x9, x10)

U29_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_GGGGA(x1, x2, x6, x11)

U30_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_GGGGA(x2, x6, x11, x12)

ISTIMES_IN_GGG(x1, x2, x3)  =  ISTIMES_IN_GGG(x1, x2, x3)

U46_GGG(x1, x2, x3, x4)  =  U46_GGG(x1, x3, x4)

U47_GGG(x1, x2, x3, x4)  =  U47_GGG(x4)

ISPLUS_IN_GGG(x1, x2, x3)  =  ISPLUS_IN_GGG(x1, x2, x3)

U36_GGG(x1, x2, x3, x4)  =  U36_GGG(x4)

U37_GGG(x1, x2, x3, x4)  =  U37_GGG(x4)

U38_GGG(x1, x2, x3, x4)  =  U38_GGG(x4)

U39_GGG(x1, x2, x3, x4)  =  U39_GGG(x4)

U48_GGG(x1, x2, x3, x4)  =  U48_GGG(x1, x3, x4)

U49_GGG(x1, x2, x3, x4)  =  U49_GGG(x4)

U50_GGG(x1, x2, x3, x4)  =  U50_GGG(x1, x3, x4)

U51_GGG(x1, x2, x3, x4)  =  U51_GGG(x4)

U52_GGG(x1, x2, x3, x4)  =  U52_GGG(x1, x3, x4)

U53_GGG(x1, x2, x3, x4)  =  U53_GGG(x4)

U31_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_GGGGA(x6, x11, x12)

U32_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_GGGGA(x6, x7, x8)

U33_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U33_GGGGA(x6, x7)

U34_GGGGA(x1, x2, x3, x4, x5, x6)  =  U34_GGGGA(x6)

U35_GGGGA(x1, x2, x3, x4, x5, x6)  =  U35_GGGGA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(175)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(X1, X2, succ(zero), J, D) -> U1_GGGGA(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   DISTANCE_IN_GGGGA(X1, X2, succ(zero), J, D) -> ISPLUS_IN_GGA(succ(zero), succ(zero), U)
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> U36_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> U37_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> U38_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> U39_GGA(X, Y, Z, isPlus_in_gga(X, Y, Z))
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   U1_GGGGA(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_GGGGA(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   U1_GGGGA(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> ISMINUS_IN_GGA(J, U, U1)
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> U40_GGA(Y, Z, isMinus_in_gga(zero, Y, Z))
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> U41_GGA(Y, Z, isMinus_in_gga(zero, Y, Z))
   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> U42_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> U43_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> U44_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> U45_GGA(X, Y, Z, isMinus_in_gga(X, Y, Z))
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   U2_GGGGA(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_GGGGA(X1, X2, J, D, =_in_ag(D, U1))
   U2_GGGGA(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> =_IN_AG(D, U1)
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> U4_GGGGA(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> ISPLUS_IN_GGA(succ(succ(zero)), succ(zero), U)
   U4_GGGGA(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_GGGGA(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U4_GGGGA(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> ISMINUS_IN_GGA(I, U, U1)
   U5_GGGGA(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_GGGGA(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U5_GGGGA(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> ISPLUS_IN_GGA(M, U1, U2)
   U6_GGGGA(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_GGGGA(X3, M, I, D, =_in_ag(D, U2))
   U6_GGGGA(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> =_IN_AG(D, U2)
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> U8_GGGGA(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U)
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> U46_GGA(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> U48_GGA(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> U50_GGA(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> U52_GGA(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U52_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_GGA(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U52_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISMINUS_IN_GGA(A, pred(X), Z)
   U50_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_GGA(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U50_GGA(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISPLUS_IN_GGA(A, pred(X), Z)
   U48_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_GGA(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U48_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISMINUS_IN_GGA(A, succ(X), Z)
   U46_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_GGA(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U46_GGA(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISPLUS_IN_GGA(A, succ(X), Z)
   U8_GGGGA(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_GGGGA(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U8_GGGGA(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> ISPLUS_IN_GGA(succ(succ(zero)), succ(zero), U1)
   U9_GGGGA(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_GGGGA(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U9_GGGGA(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> ISMINUS_IN_GGA(J, U1, U2)
   U10_GGGGA(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_GGGGA(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U10_GGGGA(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> ISMINUS_IN_GGA(U, U2, U3)
   U11_GGGGA(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_GGGGA(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U11_GGGGA(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> ISPLUS_IN_GGA(N, U3, U4)
   U12_GGGGA(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_GGGGA(N, M, J, D, =_in_ag(D, U4))
   U12_GGGGA(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> =_IN_AG(D, U4)
   DISTANCE_IN_GGGGA(N, M, I, succ(zero), D) -> U14_GGGGA(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   DISTANCE_IN_GGGGA(N, M, I, succ(zero), D) -> ISTIMES_IN_GGA(succ(succ(zero)), N, U)
   U14_GGGGA(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_GGGGA(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U14_GGGGA(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U1)
   U15_GGGGA(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_GGGGA(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U15_GGGGA(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> ISPLUS_IN_GGA(succ(succ(succ(zero))), succ(zero), U2)
   U16_GGGGA(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_GGGGA(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U16_GGGGA(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> ISMINUS_IN_GGA(I, U2, U3)
   U17_GGGGA(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_GGGGA(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U17_GGGGA(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> ISMINUS_IN_GGA(U1, U3, U4)
   U18_GGGGA(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_GGGGA(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U18_GGGGA(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> ISPLUS_IN_GGA(U, U4, U5)
   U19_GGGGA(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_GGGGA(N, M, I, D, =_in_ag(D, U5))
   U19_GGGGA(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> =_IN_AG(D, U5)
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U21_GGGGA(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> ISMINUS_IN_GGA(N, succ(succ(zero)), U)
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, D, U, =_in_ag(N1, U))
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> =_IN_AG(N1, U)
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> ISMINUS_IN_GGG(M, succ(succ(zero)), U)
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> U40_GGG(Y, Z, isMinus_in_ggg(zero, Y, Z))
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> U41_GGG(Y, Z, isMinus_in_ggg(zero, Y, Z))
   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> U42_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> U43_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> U44_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> U45_GGG(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> =_IN_AG(M1, U)
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> ISMINUS_IN_GGG(I, succ(zero), U)
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> =_IN_AG(I1, U)
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> ISMINUS_IN_GGG(J, succ(zero), U)
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> =_IN_AG(J1, U)
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1, D1)
   U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   U29_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> ISTIMES_IN_GGG(succ(succ(zero)), N, U)
   ISTIMES_IN_GGG(succ(X), succ(Y), Z) -> U46_GGG(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGG(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   U46_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_GGG(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   U46_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISPLUS_IN_GGG(A, succ(X), Z)
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> U36_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> U37_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> U38_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> U39_GGG(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISTIMES_IN_GGG(succ(X), pred(Y), Z) -> U48_GGG(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   ISTIMES_IN_GGG(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   U48_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_GGG(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U48_GGG(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> ISMINUS_IN_GGG(A, succ(X), Z)
   ISTIMES_IN_GGG(pred(X), succ(Y), Z) -> U50_GGG(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGG(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U50_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_GGG(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U50_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISPLUS_IN_GGG(A, pred(X), Z)
   ISTIMES_IN_GGG(pred(X), pred(Y), Z) -> U52_GGG(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   ISTIMES_IN_GGG(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   U52_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_GGG(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U52_GGG(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> ISMINUS_IN_GGG(A, pred(X), Z)
   U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U30_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> ISTIMES_IN_GGA(succ(succ(zero)), M, U1)
   U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_GGGGA(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U31_GGGGA(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> ISMINUS_IN_GGA(D1, succ(succ(succ(succ(zero)))), U2)
   U32_GGGGA(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_GGGGA(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U32_GGGGA(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> ISPLUS_IN_GGA(U1, U2, U3)
   U33_GGGGA(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_GGGGA(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U33_GGGGA(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> ISPLUS_IN_GGA(U, U3, U4)
   U34_GGGGA(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_GGGGA(N, M, I, J, D, =_in_ag(D, U4))
   U34_GGGGA(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> =_IN_AG(D, U4)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U1_GGGGA(x1, x2, x3, x4, x5)  =  U1_GGGGA(x3, x5)

ISPLUS_IN_GGA(x1, x2, x3)  =  ISPLUS_IN_GGA(x1, x2)

U36_GGA(x1, x2, x3, x4)  =  U36_GGA(x4)

U37_GGA(x1, x2, x3, x4)  =  U37_GGA(x4)

U38_GGA(x1, x2, x3, x4)  =  U38_GGA(x4)

U39_GGA(x1, x2, x3, x4)  =  U39_GGA(x4)

U2_GGGGA(x1, x2, x3, x4, x5)  =  U2_GGGGA(x5)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)

U40_GGA(x1, x2, x3)  =  U40_GGA(x3)

U41_GGA(x1, x2, x3)  =  U41_GGA(x3)

U42_GGA(x1, x2, x3, x4)  =  U42_GGA(x4)

U43_GGA(x1, x2, x3, x4)  =  U43_GGA(x4)

U44_GGA(x1, x2, x3, x4)  =  U44_GGA(x4)

U45_GGA(x1, x2, x3, x4)  =  U45_GGA(x4)

U3_GGGGA(x1, x2, x3, x4, x5)  =  U3_GGGGA(x5)

=_IN_AG(x1, x2)  =  =_IN_AG(x2)

U4_GGGGA(x1, x2, x3, x4, x5)  =  U4_GGGGA(x2, x3, x5)

U5_GGGGA(x1, x2, x3, x4, x5)  =  U5_GGGGA(x2, x5)

U6_GGGGA(x1, x2, x3, x4, x5)  =  U6_GGGGA(x5)

U7_GGGGA(x1, x2, x3, x4, x5)  =  U7_GGGGA(x5)

U8_GGGGA(x1, x2, x3, x4, x5)  =  U8_GGGGA(x1, x3, x5)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)

U46_GGA(x1, x2, x3, x4)  =  U46_GGA(x1, x4)

U48_GGA(x1, x2, x3, x4)  =  U48_GGA(x1, x4)

U50_GGA(x1, x2, x3, x4)  =  U50_GGA(x1, x4)

U52_GGA(x1, x2, x3, x4)  =  U52_GGA(x1, x4)

U53_GGA(x1, x2, x3, x4)  =  U53_GGA(x4)

U51_GGA(x1, x2, x3, x4)  =  U51_GGA(x4)

U49_GGA(x1, x2, x3, x4)  =  U49_GGA(x4)

U47_GGA(x1, x2, x3, x4)  =  U47_GGA(x4)

U9_GGGGA(x1, x2, x3, x4, x5, x6)  =  U9_GGGGA(x1, x3, x5, x6)

U10_GGGGA(x1, x2, x3, x4, x5, x6)  =  U10_GGGGA(x1, x5, x6)

U11_GGGGA(x1, x2, x3, x4, x5)  =  U11_GGGGA(x1, x5)

U12_GGGGA(x1, x2, x3, x4, x5)  =  U12_GGGGA(x5)

U13_GGGGA(x1, x2, x3, x4, x5)  =  U13_GGGGA(x5)

U14_GGGGA(x1, x2, x3, x4, x5)  =  U14_GGGGA(x2, x3, x5)

U15_GGGGA(x1, x2, x3, x4, x5, x6)  =  U15_GGGGA(x3, x5, x6)

U16_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U16_GGGGA(x3, x5, x6, x7)

U17_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U17_GGGGA(x5, x6, x7)

U18_GGGGA(x1, x2, x3, x4, x5, x6)  =  U18_GGGGA(x5, x6)

U19_GGGGA(x1, x2, x3, x4, x5)  =  U19_GGGGA(x5)

U20_GGGGA(x1, x2, x3, x4, x5)  =  U20_GGGGA(x5)

U21_GGGGA(x1, x2, x3, x4, x5, x6)  =  U21_GGGGA(x1, x2, x3, x4, x6)

U22_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U22_GGGGA(x1, x2, x3, x4, x6, x7)

U23_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_GGGGA(x1, x2, x3, x4, x6, x7, x8)

ISMINUS_IN_GGG(x1, x2, x3)  =  ISMINUS_IN_GGG(x1, x2, x3)

U40_GGG(x1, x2, x3)  =  U40_GGG(x3)

U41_GGG(x1, x2, x3)  =  U41_GGG(x3)

U42_GGG(x1, x2, x3, x4)  =  U42_GGG(x4)

U43_GGG(x1, x2, x3, x4)  =  U43_GGG(x4)

U44_GGG(x1, x2, x3, x4)  =  U44_GGG(x4)

U45_GGG(x1, x2, x3, x4)  =  U45_GGG(x4)

U24_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U25_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_GGGGA(x1, x2, x4, x6, x7, x8, x9)

U26_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_GGGGA(x1, x2, x4, x6, x7, x8, x9)

U27_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_GGGGA(x1, x2, x6, x7, x8, x9, x10)

U28_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_GGGGA(x1, x2, x6, x7, x8, x9, x10)

U29_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_GGGGA(x1, x2, x6, x11)

U30_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_GGGGA(x2, x6, x11, x12)

ISTIMES_IN_GGG(x1, x2, x3)  =  ISTIMES_IN_GGG(x1, x2, x3)

U46_GGG(x1, x2, x3, x4)  =  U46_GGG(x1, x3, x4)

U47_GGG(x1, x2, x3, x4)  =  U47_GGG(x4)

ISPLUS_IN_GGG(x1, x2, x3)  =  ISPLUS_IN_GGG(x1, x2, x3)

U36_GGG(x1, x2, x3, x4)  =  U36_GGG(x4)

U37_GGG(x1, x2, x3, x4)  =  U37_GGG(x4)

U38_GGG(x1, x2, x3, x4)  =  U38_GGG(x4)

U39_GGG(x1, x2, x3, x4)  =  U39_GGG(x4)

U48_GGG(x1, x2, x3, x4)  =  U48_GGG(x1, x3, x4)

U49_GGG(x1, x2, x3, x4)  =  U49_GGG(x4)

U50_GGG(x1, x2, x3, x4)  =  U50_GGG(x1, x3, x4)

U51_GGG(x1, x2, x3, x4)  =  U51_GGG(x4)

U52_GGG(x1, x2, x3, x4)  =  U52_GGG(x1, x3, x4)

U53_GGG(x1, x2, x3, x4)  =  U53_GGG(x4)

U31_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_GGGGA(x6, x11, x12)

U32_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_GGGGA(x6, x7, x8)

U33_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U33_GGGGA(x6, x7)

U34_GGGGA(x1, x2, x3, x4, x5, x6)  =  U34_GGGGA(x6)

U35_GGGGA(x1, x2, x3, x4, x5, x6)  =  U35_GGGGA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(176) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 9 SCCs with 109 less nodes.
----------------------------------------

(177)
Complex Obligation (AND)

----------------------------------------

(178)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)

ISPLUS_IN_GGG(x1, x2, x3)  =  ISPLUS_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(179) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(180)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(181) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(182)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
   ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(183) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISPLUS_IN_GGG(succ(X), pred(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


*ISPLUS_IN_GGG(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ISPLUS_IN_GGG(pred(X), succ(Y), Z) -> ISPLUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


*ISPLUS_IN_GGG(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


----------------------------------------

(184)
YES

----------------------------------------

(185)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)

ISMINUS_IN_GGG(x1, x2, x3)  =  ISMINUS_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(186) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(187)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(188) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(189)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
   ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(190) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISMINUS_IN_GGG(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
The graph contains the following edges 1 >= 1, 2 > 2, 3 > 3


*ISMINUS_IN_GGG(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGG(zero, Y, Z)
The graph contains the following edges 1 >= 1, 2 > 2, 3 > 3


----------------------------------------

(191)
YES

----------------------------------------

(192)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)

ISMINUS_IN_GGG(x1, x2, x3)  =  ISMINUS_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(193) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(194)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(195) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(196)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
   ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(197) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISMINUS_IN_GGG(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ISMINUS_IN_GGG(succ(X), succ(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


*ISMINUS_IN_GGG(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ISMINUS_IN_GGG(pred(X), pred(Y), Z) -> ISMINUS_IN_GGG(X, Y, Z)
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


----------------------------------------

(198)
YES

----------------------------------------

(199)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(200) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(201)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(zero, pred(Y), succ(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)
   ISMINUS_IN_GGA(zero, succ(Y), pred(Z)) -> ISMINUS_IN_GGA(zero, Y, Z)

R is empty.
The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

zero  =  zero

pred(x1)  =  pred(x1)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(202) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(203)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(zero, pred(Y)) -> ISMINUS_IN_GGA(zero, Y)
   ISMINUS_IN_GGA(zero, succ(Y)) -> ISMINUS_IN_GGA(zero, Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(204) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISMINUS_IN_GGA(zero, pred(Y)) -> ISMINUS_IN_GGA(zero, Y)
The graph contains the following edges 1 >= 1, 2 > 2


*ISMINUS_IN_GGA(zero, succ(Y)) -> ISMINUS_IN_GGA(zero, Y)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(205)
YES

----------------------------------------

(206)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(207) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(208)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(succ(X), pred(Y), succ(succ(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(succ(X), succ(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), succ(Y), pred(pred(Z))) -> ISMINUS_IN_GGA(X, Y, Z)
   ISMINUS_IN_GGA(pred(X), pred(Y), Z) -> ISMINUS_IN_GGA(X, Y, Z)

R is empty.
The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

pred(x1)  =  pred(x1)

ISMINUS_IN_GGA(x1, x2, x3)  =  ISMINUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(209) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(210)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISMINUS_IN_GGA(succ(X), pred(Y)) -> ISMINUS_IN_GGA(X, Y)
   ISMINUS_IN_GGA(succ(X), succ(Y)) -> ISMINUS_IN_GGA(X, Y)
   ISMINUS_IN_GGA(pred(X), succ(Y)) -> ISMINUS_IN_GGA(X, Y)
   ISMINUS_IN_GGA(pred(X), pred(Y)) -> ISMINUS_IN_GGA(X, Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(211) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISMINUS_IN_GGA(succ(X), pred(Y)) -> ISMINUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISMINUS_IN_GGA(succ(X), succ(Y)) -> ISMINUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISMINUS_IN_GGA(pred(X), succ(Y)) -> ISMINUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISMINUS_IN_GGA(pred(X), pred(Y)) -> ISMINUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(212)
YES

----------------------------------------

(213)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGA(X, Y, Z)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)

ISPLUS_IN_GGA(x1, x2, x3)  =  ISPLUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(214) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(215)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGA(succ(X), pred(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(succ(X), succ(Y), succ(succ(Z))) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), succ(Y), Z) -> ISPLUS_IN_GGA(X, Y, Z)
   ISPLUS_IN_GGA(pred(X), pred(Y), pred(pred(Z))) -> ISPLUS_IN_GGA(X, Y, Z)

R is empty.
The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

pred(x1)  =  pred(x1)

ISPLUS_IN_GGA(x1, x2, x3)  =  ISPLUS_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(216) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(217)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISPLUS_IN_GGA(succ(X), pred(Y)) -> ISPLUS_IN_GGA(X, Y)
   ISPLUS_IN_GGA(succ(X), succ(Y)) -> ISPLUS_IN_GGA(X, Y)
   ISPLUS_IN_GGA(pred(X), succ(Y)) -> ISPLUS_IN_GGA(X, Y)
   ISPLUS_IN_GGA(pred(X), pred(Y)) -> ISPLUS_IN_GGA(X, Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(218) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISPLUS_IN_GGA(succ(X), pred(Y)) -> ISPLUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISPLUS_IN_GGA(succ(X), succ(Y)) -> ISPLUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISPLUS_IN_GGA(pred(X), succ(Y)) -> ISPLUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


*ISPLUS_IN_GGA(pred(X), pred(Y)) -> ISPLUS_IN_GGA(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(219)
YES

----------------------------------------

(220)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(221) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(222)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(succ(X), pred(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)
   ISTIMES_IN_GGA(succ(X), succ(Y), Z) -> ISTIMES_IN_GGA(succ(X), Y, A)

R is empty.
The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

pred(x1)  =  pred(x1)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(223) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(224)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(succ(X), pred(Y)) -> ISTIMES_IN_GGA(succ(X), Y)
   ISTIMES_IN_GGA(succ(X), succ(Y)) -> ISTIMES_IN_GGA(succ(X), Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(225) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISTIMES_IN_GGA(succ(X), pred(Y)) -> ISTIMES_IN_GGA(succ(X), Y)
The graph contains the following edges 1 >= 1, 2 > 2


*ISTIMES_IN_GGA(succ(X), succ(Y)) -> ISTIMES_IN_GGA(succ(X), Y)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(226)
YES

----------------------------------------

(227)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(228) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(229)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(pred(X), pred(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)
   ISTIMES_IN_GGA(pred(X), succ(Y), Z) -> ISTIMES_IN_GGA(pred(X), Y, A)

R is empty.
The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

pred(x1)  =  pred(x1)

ISTIMES_IN_GGA(x1, x2, x3)  =  ISTIMES_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(230) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(231)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISTIMES_IN_GGA(pred(X), pred(Y)) -> ISTIMES_IN_GGA(pred(X), Y)
   ISTIMES_IN_GGA(pred(X), succ(Y)) -> ISTIMES_IN_GGA(pred(X), Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(232) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISTIMES_IN_GGA(pred(X), pred(Y)) -> ISTIMES_IN_GGA(pred(X), Y)
The graph contains the following edges 1 >= 1, 2 > 2


*ISTIMES_IN_GGA(pred(X), succ(Y)) -> ISTIMES_IN_GGA(pred(X), Y)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(233)
YES

----------------------------------------

(234)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U21_GGGGA(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1, D1)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, succ(zero), J, D) -> U1_gggga(X1, X2, J, D, isPlus_in_gga(succ(zero), succ(zero), U))
   isPlus_in_gga(zero, X, X) -> isPlus_out_gga(zero, X, X)
   isPlus_in_gga(succ(X), zero, succ(X)) -> isPlus_out_gga(succ(X), zero, succ(X))
   isPlus_in_gga(succ(X), succ(Y), succ(succ(Z))) -> U36_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(succ(X), pred(Y), Z) -> U37_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), zero, pred(X)) -> isPlus_out_gga(pred(X), zero, pred(X))
   isPlus_in_gga(pred(X), succ(Y), Z) -> U38_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   isPlus_in_gga(pred(X), pred(Y), pred(pred(Z))) -> U39_gga(X, Y, Z, isPlus_in_gga(X, Y, Z))
   U39_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), pred(Y), pred(pred(Z)))
   U38_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(pred(X), succ(Y), Z)
   U37_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), pred(Y), Z)
   U36_gga(X, Y, Z, isPlus_out_gga(X, Y, Z)) -> isPlus_out_gga(succ(X), succ(Y), succ(succ(Z)))
   U1_gggga(X1, X2, J, D, isPlus_out_gga(succ(zero), succ(zero), U)) -> U2_gggga(X1, X2, J, D, isMinus_in_gga(J, U, U1))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U2_gggga(X1, X2, J, D, isMinus_out_gga(J, U, U1)) -> U3_gggga(X1, X2, J, D, =_in_ag(D, U1))
   =_in_ag(X, X) -> =_out_ag(X, X)
   U3_gggga(X1, X2, J, D, =_out_ag(D, U1)) -> distance_out_gggga(X1, X2, succ(zero), J, D)
   distance_in_gggga(X3, M, I, M, D) -> U4_gggga(X3, M, I, D, isPlus_in_gga(succ(succ(zero)), succ(zero), U))
   U4_gggga(X3, M, I, D, isPlus_out_gga(succ(succ(zero)), succ(zero), U)) -> U5_gggga(X3, M, I, D, isMinus_in_gga(I, U, U1))
   U5_gggga(X3, M, I, D, isMinus_out_gga(I, U, U1)) -> U6_gggga(X3, M, I, D, isPlus_in_gga(M, U1, U2))
   U6_gggga(X3, M, I, D, isPlus_out_gga(M, U1, U2)) -> U7_gggga(X3, M, I, D, =_in_ag(D, U2))
   U7_gggga(X3, M, I, D, =_out_ag(D, U2)) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U8_gggga(N, M, J, D, isTimes_in_gga(succ(succ(zero)), M, U))
   isTimes_in_gga(X, zero, zero) -> isTimes_out_gga(X, zero, zero)
   isTimes_in_gga(zero, succ(Y), zero) -> isTimes_out_gga(zero, succ(Y), zero)
   isTimes_in_gga(zero, pred(Y), zero) -> isTimes_out_gga(zero, pred(Y), zero)
   isTimes_in_gga(succ(X), succ(Y), Z) -> U46_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(succ(X), pred(Y), Z) -> U48_gga(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   isTimes_in_gga(pred(X), succ(Y), Z) -> U50_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   isTimes_in_gga(pred(X), pred(Y), Z) -> U52_gga(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_gga(X, Y, Z, isMinus_in_gga(A, pred(X), Z))
   U53_gga(X, Y, Z, isMinus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), pred(Y), Z)
   U50_gga(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_gga(X, Y, Z, isPlus_in_gga(A, pred(X), Z))
   U51_gga(X, Y, Z, isPlus_out_gga(A, pred(X), Z)) -> isTimes_out_gga(pred(X), succ(Y), Z)
   U48_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_gga(X, Y, Z, isMinus_in_gga(A, succ(X), Z))
   U49_gga(X, Y, Z, isMinus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), pred(Y), Z)
   U46_gga(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_gga(X, Y, Z, isPlus_in_gga(A, succ(X), Z))
   U47_gga(X, Y, Z, isPlus_out_gga(A, succ(X), Z)) -> isTimes_out_gga(succ(X), succ(Y), Z)
   U8_gggga(N, M, J, D, isTimes_out_gga(succ(succ(zero)), M, U)) -> U9_gggga(N, M, J, D, U, isPlus_in_gga(succ(succ(zero)), succ(zero), U1))
   U9_gggga(N, M, J, D, U, isPlus_out_gga(succ(succ(zero)), succ(zero), U1)) -> U10_gggga(N, M, J, D, U, isMinus_in_gga(J, U1, U2))
   U10_gggga(N, M, J, D, U, isMinus_out_gga(J, U1, U2)) -> U11_gggga(N, M, J, D, isMinus_in_gga(U, U2, U3))
   U11_gggga(N, M, J, D, isMinus_out_gga(U, U2, U3)) -> U12_gggga(N, M, J, D, isPlus_in_gga(N, U3, U4))
   U12_gggga(N, M, J, D, isPlus_out_gga(N, U3, U4)) -> U13_gggga(N, M, J, D, =_in_ag(D, U4))
   U13_gggga(N, M, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, succ(zero), D) -> U14_gggga(N, M, I, D, isTimes_in_gga(succ(succ(zero)), N, U))
   U14_gggga(N, M, I, D, isTimes_out_gga(succ(succ(zero)), N, U)) -> U15_gggga(N, M, I, D, U, isTimes_in_gga(succ(succ(zero)), M, U1))
   U15_gggga(N, M, I, D, U, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U16_gggga(N, M, I, D, U, U1, isPlus_in_gga(succ(succ(succ(zero))), succ(zero), U2))
   U16_gggga(N, M, I, D, U, U1, isPlus_out_gga(succ(succ(succ(zero))), succ(zero), U2)) -> U17_gggga(N, M, I, D, U, U1, isMinus_in_gga(I, U2, U3))
   U17_gggga(N, M, I, D, U, U1, isMinus_out_gga(I, U2, U3)) -> U18_gggga(N, M, I, D, U, isMinus_in_gga(U1, U3, U4))
   U18_gggga(N, M, I, D, U, isMinus_out_gga(U1, U3, U4)) -> U19_gggga(N, M, I, D, isPlus_in_gga(U, U4, U5))
   U19_gggga(N, M, I, D, isPlus_out_gga(U, U4, U5)) -> U20_gggga(N, M, I, D, =_in_ag(D, U5))
   U20_gggga(N, M, I, D, =_out_ag(D, U5)) -> distance_out_gggga(N, M, I, succ(zero), D)
   distance_in_gggga(N, M, I, J, D) -> U21_gggga(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_gggga(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_gggga(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_gggga(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_gggga(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U23_gggga(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_gggga(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_gggga(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_gggga(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_gggga(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_gggga(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_gggga(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_gggga(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_in_gggga(N1, M1, I1, J1, D1))
   U29_gggga(N, M, I, J, D, U, N1, M1, I1, J1, distance_out_gggga(N1, M1, I1, J1, D1)) -> U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_ggg(succ(succ(zero)), N, U))
   isTimes_in_ggg(X, zero, zero) -> isTimes_out_ggg(X, zero, zero)
   isTimes_in_ggg(zero, succ(Y), zero) -> isTimes_out_ggg(zero, succ(Y), zero)
   isTimes_in_ggg(zero, pred(Y), zero) -> isTimes_out_ggg(zero, pred(Y), zero)
   isTimes_in_ggg(succ(X), succ(Y), Z) -> U46_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U46_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U47_ggg(X, Y, Z, isPlus_in_ggg(A, succ(X), Z))
   isPlus_in_ggg(zero, X, X) -> isPlus_out_ggg(zero, X, X)
   isPlus_in_ggg(succ(X), zero, succ(X)) -> isPlus_out_ggg(succ(X), zero, succ(X))
   isPlus_in_ggg(succ(X), succ(Y), succ(succ(Z))) -> U36_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(succ(X), pred(Y), Z) -> U37_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), zero, pred(X)) -> isPlus_out_ggg(pred(X), zero, pred(X))
   isPlus_in_ggg(pred(X), succ(Y), Z) -> U38_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   isPlus_in_ggg(pred(X), pred(Y), pred(pred(Z))) -> U39_ggg(X, Y, Z, isPlus_in_ggg(X, Y, Z))
   U39_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), pred(Y), pred(pred(Z)))
   U38_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(pred(X), succ(Y), Z)
   U37_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), pred(Y), Z)
   U36_ggg(X, Y, Z, isPlus_out_ggg(X, Y, Z)) -> isPlus_out_ggg(succ(X), succ(Y), succ(succ(Z)))
   U47_ggg(X, Y, Z, isPlus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), succ(Y), Z)
   isTimes_in_ggg(succ(X), pred(Y), Z) -> U48_ggg(X, Y, Z, isTimes_in_gga(succ(X), Y, A))
   U48_ggg(X, Y, Z, isTimes_out_gga(succ(X), Y, A)) -> U49_ggg(X, Y, Z, isMinus_in_ggg(A, succ(X), Z))
   U49_ggg(X, Y, Z, isMinus_out_ggg(A, succ(X), Z)) -> isTimes_out_ggg(succ(X), pred(Y), Z)
   isTimes_in_ggg(pred(X), succ(Y), Z) -> U50_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U50_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U51_ggg(X, Y, Z, isPlus_in_ggg(A, pred(X), Z))
   U51_ggg(X, Y, Z, isPlus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), succ(Y), Z)
   isTimes_in_ggg(pred(X), pred(Y), Z) -> U52_ggg(X, Y, Z, isTimes_in_gga(pred(X), Y, A))
   U52_ggg(X, Y, Z, isTimes_out_gga(pred(X), Y, A)) -> U53_ggg(X, Y, Z, isMinus_in_ggg(A, pred(X), Z))
   U53_ggg(X, Y, Z, isMinus_out_ggg(A, pred(X), Z)) -> isTimes_out_ggg(pred(X), pred(Y), Z)
   U30_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_ggg(succ(succ(zero)), N, U)) -> U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_in_gga(succ(succ(zero)), M, U1))
   U31_gggga(N, M, I, J, D, U, N1, M1, I1, J1, D1, isTimes_out_gga(succ(succ(zero)), M, U1)) -> U32_gggga(N, M, I, J, D, U, U1, isMinus_in_gga(D1, succ(succ(succ(succ(zero)))), U2))
   U32_gggga(N, M, I, J, D, U, U1, isMinus_out_gga(D1, succ(succ(succ(succ(zero)))), U2)) -> U33_gggga(N, M, I, J, D, U, isPlus_in_gga(U1, U2, U3))
   U33_gggga(N, M, I, J, D, U, isPlus_out_gga(U1, U2, U3)) -> U34_gggga(N, M, I, J, D, isPlus_in_gga(U, U3, U4))
   U34_gggga(N, M, I, J, D, isPlus_out_gga(U, U3, U4)) -> U35_gggga(N, M, I, J, D, =_in_ag(D, U4))
   U35_gggga(N, M, I, J, D, =_out_ag(D, U4)) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

succ(x1)  =  succ(x1)

zero  =  zero

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x3, x5)

isPlus_in_gga(x1, x2, x3)  =  isPlus_in_gga(x1, x2)

isPlus_out_gga(x1, x2, x3)  =  isPlus_out_gga(x3)

U36_gga(x1, x2, x3, x4)  =  U36_gga(x4)

pred(x1)  =  pred(x1)

U37_gga(x1, x2, x3, x4)  =  U37_gga(x4)

U38_gga(x1, x2, x3, x4)  =  U38_gga(x4)

U39_gga(x1, x2, x3, x4)  =  U39_gga(x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x5)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x2, x3, x5)

U5_gggga(x1, x2, x3, x4, x5)  =  U5_gggga(x2, x5)

U6_gggga(x1, x2, x3, x4, x5)  =  U6_gggga(x5)

U7_gggga(x1, x2, x3, x4, x5)  =  U7_gggga(x5)

U8_gggga(x1, x2, x3, x4, x5)  =  U8_gggga(x1, x3, x5)

isTimes_in_gga(x1, x2, x3)  =  isTimes_in_gga(x1, x2)

isTimes_out_gga(x1, x2, x3)  =  isTimes_out_gga(x3)

U46_gga(x1, x2, x3, x4)  =  U46_gga(x1, x4)

U48_gga(x1, x2, x3, x4)  =  U48_gga(x1, x4)

U50_gga(x1, x2, x3, x4)  =  U50_gga(x1, x4)

U52_gga(x1, x2, x3, x4)  =  U52_gga(x1, x4)

U53_gga(x1, x2, x3, x4)  =  U53_gga(x4)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x4)

U49_gga(x1, x2, x3, x4)  =  U49_gga(x4)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x4)

U9_gggga(x1, x2, x3, x4, x5, x6)  =  U9_gggga(x1, x3, x5, x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x5, x6)

U11_gggga(x1, x2, x3, x4, x5)  =  U11_gggga(x1, x5)

U12_gggga(x1, x2, x3, x4, x5)  =  U12_gggga(x5)

U13_gggga(x1, x2, x3, x4, x5)  =  U13_gggga(x5)

U14_gggga(x1, x2, x3, x4, x5)  =  U14_gggga(x2, x3, x5)

U15_gggga(x1, x2, x3, x4, x5, x6)  =  U15_gggga(x3, x5, x6)

U16_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U16_gggga(x3, x5, x6, x7)

U17_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U17_gggga(x5, x6, x7)

U18_gggga(x1, x2, x3, x4, x5, x6)  =  U18_gggga(x5, x6)

U19_gggga(x1, x2, x3, x4, x5)  =  U19_gggga(x5)

U20_gggga(x1, x2, x3, x4, x5)  =  U20_gggga(x5)

U21_gggga(x1, x2, x3, x4, x5, x6)  =  U21_gggga(x1, x2, x3, x4, x6)

U22_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U22_gggga(x1, x2, x3, x4, x6, x7)

U23_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_gggga(x1, x2, x3, x4, x6, x7, x8)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

U24_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_gggga(x1, x2, x3, x4, x6, x7, x8)

U25_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_gggga(x1, x2, x4, x6, x7, x8, x9)

U26_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_gggga(x1, x2, x4, x6, x7, x8, x9)

U27_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_gggga(x1, x2, x6, x7, x8, x9, x10)

U28_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_gggga(x1, x2, x6, x7, x8, x9, x10)

U29_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U29_gggga(x1, x2, x6, x11)

U30_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U30_gggga(x2, x6, x11, x12)

isTimes_in_ggg(x1, x2, x3)  =  isTimes_in_ggg(x1, x2, x3)

isTimes_out_ggg(x1, x2, x3)  =  isTimes_out_ggg

U46_ggg(x1, x2, x3, x4)  =  U46_ggg(x1, x3, x4)

U47_ggg(x1, x2, x3, x4)  =  U47_ggg(x4)

isPlus_in_ggg(x1, x2, x3)  =  isPlus_in_ggg(x1, x2, x3)

isPlus_out_ggg(x1, x2, x3)  =  isPlus_out_ggg

U36_ggg(x1, x2, x3, x4)  =  U36_ggg(x4)

U37_ggg(x1, x2, x3, x4)  =  U37_ggg(x4)

U38_ggg(x1, x2, x3, x4)  =  U38_ggg(x4)

U39_ggg(x1, x2, x3, x4)  =  U39_ggg(x4)

U48_ggg(x1, x2, x3, x4)  =  U48_ggg(x1, x3, x4)

U49_ggg(x1, x2, x3, x4)  =  U49_ggg(x4)

U50_ggg(x1, x2, x3, x4)  =  U50_ggg(x1, x3, x4)

U51_ggg(x1, x2, x3, x4)  =  U51_ggg(x4)

U52_ggg(x1, x2, x3, x4)  =  U52_ggg(x1, x3, x4)

U53_ggg(x1, x2, x3, x4)  =  U53_ggg(x4)

U31_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)  =  U31_gggga(x6, x11, x12)

U32_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U32_gggga(x6, x7, x8)

U33_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U33_gggga(x6, x7)

U34_gggga(x1, x2, x3, x4, x5, x6)  =  U34_gggga(x6)

U35_gggga(x1, x2, x3, x4, x5, x6)  =  U35_gggga(x6)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U21_GGGGA(x1, x2, x3, x4, x5, x6)  =  U21_GGGGA(x1, x2, x3, x4, x6)

U22_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U22_GGGGA(x1, x2, x3, x4, x6, x7)

U23_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U24_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U25_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_GGGGA(x1, x2, x4, x6, x7, x8, x9)

U26_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_GGGGA(x1, x2, x4, x6, x7, x8, x9)

U27_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_GGGGA(x1, x2, x6, x7, x8, x9, x10)

U28_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_GGGGA(x1, x2, x6, x7, x8, x9, x10)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(235) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(236)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U21_GGGGA(N, M, I, J, D, isMinus_in_gga(N, succ(succ(zero)), U))
   U21_GGGGA(N, M, I, J, D, isMinus_out_gga(N, succ(succ(zero)), U)) -> U22_GGGGA(N, M, I, J, D, U, =_in_ag(N1, U))
   U22_GGGGA(N, M, I, J, D, U, =_out_ag(N1, U)) -> U23_GGGGA(N, M, I, J, D, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U23_GGGGA(N, M, I, J, D, U, N1, isMinus_out_ggg(M, succ(succ(zero)), U)) -> U24_GGGGA(N, M, I, J, D, U, N1, =_in_ag(M1, U))
   U24_GGGGA(N, M, I, J, D, U, N1, =_out_ag(M1, U)) -> U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_GGGGA(N, M, I, J, D, U, N1, M1, isMinus_out_ggg(I, succ(zero), U)) -> U26_GGGGA(N, M, I, J, D, U, N1, M1, =_in_ag(I1, U))
   U26_GGGGA(N, M, I, J, D, U, N1, M1, =_out_ag(I1, U)) -> U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, I, J, D, U, N1, M1, I1, isMinus_out_ggg(J, succ(zero), U)) -> U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_in_ag(J1, U))
   U28_GGGGA(N, M, I, J, D, U, N1, M1, I1, =_out_ag(J1, U)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1, D1)

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y), pred(Z)) -> U40_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), succ(Y), Z) -> U42_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), succ(Y), pred(pred(Z))) -> U44_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   =_in_ag(X, X) -> =_out_ag(X, X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U40_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, succ(Y), pred(Z))
   U42_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), succ(Y), Z)
   U44_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), succ(Y), pred(pred(Z)))
   U40_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, succ(Y), pred(Z))
   U42_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), succ(Y), Z)
   U44_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), succ(Y), pred(pred(Z)))
   isMinus_in_gga(X, zero, X) -> isMinus_out_gga(X, zero, X)
   isMinus_in_gga(zero, pred(Y), succ(Z)) -> U41_gga(Y, Z, isMinus_in_gga(zero, Y, Z))
   isMinus_in_gga(succ(X), pred(Y), succ(succ(Z))) -> U43_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_gga(pred(X), pred(Y), Z) -> U45_gga(X, Y, Z, isMinus_in_gga(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg(X, zero, X)
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(Y, Z, isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(X, Y, Z, isMinus_in_ggg(X, Y, Z))
   U41_gga(Y, Z, isMinus_out_gga(zero, Y, Z)) -> isMinus_out_gga(zero, pred(Y), succ(Z))
   U43_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(succ(X), pred(Y), succ(succ(Z)))
   U45_gga(X, Y, Z, isMinus_out_gga(X, Y, Z)) -> isMinus_out_gga(pred(X), pred(Y), Z)
   U41_ggg(Y, Z, isMinus_out_ggg(zero, Y, Z)) -> isMinus_out_ggg(zero, pred(Y), succ(Z))
   U43_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(succ(X), pred(Y), succ(succ(Z)))
   U45_ggg(X, Y, Z, isMinus_out_ggg(X, Y, Z)) -> isMinus_out_ggg(pred(X), pred(Y), Z)

The argument filtering Pi contains the following mapping:
succ(x1)  =  succ(x1)

zero  =  zero

pred(x1)  =  pred(x1)

isMinus_in_gga(x1, x2, x3)  =  isMinus_in_gga(x1, x2)

isMinus_out_gga(x1, x2, x3)  =  isMinus_out_gga(x3)

U40_gga(x1, x2, x3)  =  U40_gga(x3)

U41_gga(x1, x2, x3)  =  U41_gga(x3)

U42_gga(x1, x2, x3, x4)  =  U42_gga(x4)

U43_gga(x1, x2, x3, x4)  =  U43_gga(x4)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x4)

=_in_ag(x1, x2)  =  =_in_ag(x2)

=_out_ag(x1, x2)  =  =_out_ag(x1)

isMinus_in_ggg(x1, x2, x3)  =  isMinus_in_ggg(x1, x2, x3)

isMinus_out_ggg(x1, x2, x3)  =  isMinus_out_ggg

U40_ggg(x1, x2, x3)  =  U40_ggg(x3)

U41_ggg(x1, x2, x3)  =  U41_ggg(x3)

U42_ggg(x1, x2, x3, x4)  =  U42_ggg(x4)

U43_ggg(x1, x2, x3, x4)  =  U43_ggg(x4)

U44_ggg(x1, x2, x3, x4)  =  U44_ggg(x4)

U45_ggg(x1, x2, x3, x4)  =  U45_ggg(x4)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U21_GGGGA(x1, x2, x3, x4, x5, x6)  =  U21_GGGGA(x1, x2, x3, x4, x6)

U22_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U22_GGGGA(x1, x2, x3, x4, x6, x7)

U23_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U23_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U24_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U24_GGGGA(x1, x2, x3, x4, x6, x7, x8)

U25_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U25_GGGGA(x1, x2, x4, x6, x7, x8, x9)

U26_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U26_GGGGA(x1, x2, x4, x6, x7, x8, x9)

U27_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U27_GGGGA(x1, x2, x6, x7, x8, x9, x10)

U28_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U28_GGGGA(x1, x2, x6, x7, x8, x9, x10)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(237) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(238)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_in_ag(U))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_in_ag(U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1)) -> U25_GGGGA(N, M, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_in_ag(U))
   U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(I1)) -> U27_GGGGA(N, M, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_in_ag(U))
   U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(J1)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   =_in_ag(X) -> =_out_ag(X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(239) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_in_ag(U)) at position [5] we obtained the following new rules [LPAR04]:

   (U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U)),U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U)))


----------------------------------------

(240)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_in_ag(U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1)) -> U25_GGGGA(N, M, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_in_ag(U))
   U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(I1)) -> U27_GGGGA(N, M, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_in_ag(U))
   U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(J1)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   =_in_ag(X) -> =_out_ag(X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(241) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_in_ag(U)) at position [6] we obtained the following new rules [LPAR04]:

   (U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U)),U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U)))


----------------------------------------

(242)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1)) -> U25_GGGGA(N, M, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_in_ag(U))
   U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(I1)) -> U27_GGGGA(N, M, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_in_ag(U))
   U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(J1)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U))

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   =_in_ag(X) -> =_out_ag(X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(243) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_in_ag(U)) at position [6] we obtained the following new rules [LPAR04]:

   (U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U)),U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U)))


----------------------------------------

(244)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1)) -> U25_GGGGA(N, M, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(I1)) -> U27_GGGGA(N, M, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_in_ag(U))
   U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(J1)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U))

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   =_in_ag(X) -> =_out_ag(X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(245) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_in_ag(U)) at position [6] we obtained the following new rules [LPAR04]:

   (U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U)),U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U)))


----------------------------------------

(246)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1)) -> U25_GGGGA(N, M, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(I1)) -> U27_GGGGA(N, M, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(J1)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U))

The TRS R consists of the following rules:

   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   =_in_ag(X) -> =_out_ag(X)
   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(247) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(248)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1)) -> U25_GGGGA(N, M, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(I1)) -> U27_GGGGA(N, M, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(J1)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   =_in_ag(x0)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(249) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   =_in_ag(x0)


----------------------------------------

(250)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U22_GGGGA(N, M, I, J, U, =_out_ag(N1)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1)) -> U25_GGGGA(N, M, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(I1)) -> U27_GGGGA(N, M, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(J1)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(251) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U22_GGGGA(N, M, I, J, U, =_out_ag(N1)) -> U23_GGGGA(N, M, I, J, U, N1, isMinus_in_ggg(M, succ(succ(zero)), U)) we obtained the following new rules [LPAR04]:

   (U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4)),U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4)))


----------------------------------------

(252)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1)) -> U25_GGGGA(N, M, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U))
   U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(I1)) -> U27_GGGGA(N, M, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(J1)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(253) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U24_GGGGA(N, M, I, J, U, N1, =_out_ag(M1)) -> U25_GGGGA(N, M, J, U, N1, M1, isMinus_in_ggg(I, succ(zero), U)) we obtained the following new rules [LPAR04]:

   (U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4)),U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4)))


----------------------------------------

(254)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(I1)) -> U27_GGGGA(N, M, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U))
   U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(J1)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(255) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(I1)) -> U27_GGGGA(N, M, U, N1, M1, I1, isMinus_in_ggg(J, succ(zero), U)) we obtained the following new rules [LPAR04]:

   (U26_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_in_ggg(z2, succ(zero), z3)),U26_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_in_ggg(z2, succ(zero), z3)))


----------------------------------------

(256)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(J1)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1)
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_in_ggg(z2, succ(zero), z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(257) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(J1)) -> DISTANCE_IN_GGGGA(N1, M1, I1, J1) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z5, z2),U28_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z5, z2))


----------------------------------------

(258)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z5, z2)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(259) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U23_GGGGA(N, M, I, J, U, N1, isMinus_out_ggg) -> U24_GGGGA(N, M, I, J, U, N1, =_out_ag(U)) we obtained the following new rules [LPAR04]:

   (U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)),U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)))


----------------------------------------

(260)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z5, z2)
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(261) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U25_GGGGA(N, M, J, U, N1, M1, isMinus_out_ggg) -> U26_GGGGA(N, M, J, U, N1, M1, =_out_ag(U)) we obtained the following new rules [LPAR04]:

   (U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4)),U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4)))


----------------------------------------

(262)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z5, z2)
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4))
   U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(263) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U27_GGGGA(N, M, U, N1, M1, I1, isMinus_out_ggg) -> U28_GGGGA(N, M, U, N1, M1, I1, =_out_ag(U)) we obtained the following new rules [LPAR04]:

   (U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3)),U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3)))


----------------------------------------

(264)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z5, z2)
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4))
   U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(265) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U24_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_in_ggg(z2, succ(zero), z4)) we obtained the following new rules [LPAR04]:

   (U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4)),U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4)))


----------------------------------------

(266)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z5, z2)
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4))
   U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(267) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U26_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_in_ggg(z2, succ(zero), z3)) we obtained the following new rules [LPAR04]:

   (U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)),U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)))


----------------------------------------

(268)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U28_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z5, z2)
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4))
   U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(269) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(z0, z1, z2, z3, z4, z5, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z5, z2) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2),U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2))


----------------------------------------

(270)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero))))
   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4))
   U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(271) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule DISTANCE_IN_GGGGA(N, M, I, J) -> U21_GGGGA(N, M, I, J, isMinus_in_gga(N, succ(succ(zero)))) we obtained the following new rules [LPAR04]:

   (DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero)))),DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero)))))


----------------------------------------

(272)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U))
   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4))
   U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2)
   DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(273) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U21_GGGGA(N, M, I, J, isMinus_out_gga(U)) -> U22_GGGGA(N, M, I, J, U, =_out_ag(U)) we obtained the following new rules [LPAR04]:

   (U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4)),U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4)))


----------------------------------------

(274)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4))
   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4))
   U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2)
   DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(275) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U22_GGGGA(z0, z1, z2, z3, z4, =_out_ag(z4)) -> U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_in_ggg(z1, succ(succ(zero)), z4)) we obtained the following new rules [LPAR04]:

   (U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3)),U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3)))


----------------------------------------

(276)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4))
   U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2)
   DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(277) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U23_GGGGA(z0, z1, z2, z3, z4, z4, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) we obtained the following new rules [LPAR04]:

   (U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)),U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)))


----------------------------------------

(278)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2)
   DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(279) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U25_GGGGA(z0, z1, z3, z4, z5, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z5, z4, =_out_ag(z4)) we obtained the following new rules [LPAR04]:

   (U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4)),U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4)))


----------------------------------------

(280)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2)
   DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3))
   U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(281) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U27_GGGGA(z0, z1, z3, z4, z5, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z5, z3, =_out_ag(z3)) we obtained the following new rules [LPAR04]:

   (U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z3, z3, =_out_ag(z3)),U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z3, z3, =_out_ag(z3)))


----------------------------------------

(282)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4))
   U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2)
   DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3))
   U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z3, z3, =_out_ag(z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(283) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U24_GGGGA(z0, z1, z2, z3, z4, z4, =_out_ag(z4)) -> U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_in_ggg(z2, succ(zero), z4)) we obtained the following new rules [LPAR04]:

   (U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) -> U25_GGGGA(z0, z1, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)),U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) -> U25_GGGGA(z0, z1, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)))


----------------------------------------

(284)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2)
   DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3))
   U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) -> U25_GGGGA(z0, z1, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(285) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U26_GGGGA(z0, z1, z2, z3, z4, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)) we obtained the following new rules [LPAR04]:

   (U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)),U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)))


----------------------------------------

(286)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2)
   DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3))
   U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) -> U25_GGGGA(z0, z1, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(287) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(z0, z1, z2, z3, z4, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z4, z2, z2) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2),U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2))


----------------------------------------

(288)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3))
   U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) -> U25_GGGGA(z0, z1, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(289) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule DISTANCE_IN_GGGGA(z3, z4, z2, z2) -> U21_GGGGA(z3, z4, z2, z2, isMinus_in_gga(z3, succ(succ(zero)))) we obtained the following new rules [LPAR04]:

   (DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero)))),DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero)))))


----------------------------------------

(290)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4))
   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3))
   U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) -> U25_GGGGA(z0, z1, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2)
   DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(291) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U21_GGGGA(z0, z1, z2, z2, isMinus_out_gga(x4)) -> U22_GGGGA(z0, z1, z2, z2, x4, =_out_ag(x4)) we obtained the following new rules [LPAR04]:

   (U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3)),U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3)))


----------------------------------------

(292)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3))
   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3))
   U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) -> U25_GGGGA(z0, z1, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2)
   DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(293) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U22_GGGGA(z0, z1, z2, z2, z3, =_out_ag(z3)) -> U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_in_ggg(z1, succ(succ(zero)), z3)) we obtained the following new rules [LPAR04]:

   (U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2)),U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2)))


----------------------------------------

(294)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3))
   U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) -> U25_GGGGA(z0, z1, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2)
   DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(295) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U23_GGGGA(z0, z1, z2, z2, z3, z3, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) we obtained the following new rules [LPAR04]:

   (U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)),U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)))


----------------------------------------

(296)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4))
   U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) -> U25_GGGGA(z0, z1, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2)
   DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(297) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U27_GGGGA(z0, z1, z3, z4, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z4, z3, z3, =_out_ag(z3)) we obtained the following new rules [LPAR04]:

   (U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3)),U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3)))


----------------------------------------

(298)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4))
   U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) -> U25_GGGGA(z0, z1, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2)
   DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2))
   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(299) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U24_GGGGA(z0, z1, z2, z2, z3, z3, =_out_ag(z3)) -> U25_GGGGA(z0, z1, z2, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)) we obtained the following new rules [LPAR04]:

   (U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) -> U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)),U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) -> U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)))


----------------------------------------

(300)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4))
   U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2)
   DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2))
   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) -> U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(301) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U25_GGGGA(z0, z1, z3, z4, z4, z4, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z3, z4, z4, z4, =_out_ag(z4)) we obtained the following new rules [LPAR04]:

   (U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)),U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)))


----------------------------------------

(302)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3))
   U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2)
   DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2))
   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) -> U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(303) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U26_GGGGA(z0, z1, z2, z3, z3, z3, =_out_ag(z3)) -> U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_in_ggg(z2, succ(zero), z3)) we obtained the following new rules [LPAR04]:

   (U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) -> U27_GGGGA(z0, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)),U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) -> U27_GGGGA(z0, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)))


----------------------------------------

(304)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2)
   DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2))
   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) -> U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2))
   U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) -> U27_GGGGA(z0, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(305) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(z0, z1, z2, z3, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z3, z2, z2, z2) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2),U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2))


----------------------------------------

(306)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero))))
   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2))
   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) -> U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2))
   U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) -> U27_GGGGA(z0, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(307) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule DISTANCE_IN_GGGGA(z3, z2, z2, z2) -> U21_GGGGA(z3, z2, z2, z2, isMinus_in_gga(z3, succ(succ(zero)))) we obtained the following new rules [LPAR04]:

   (DISTANCE_IN_GGGGA(z2, z2, z2, z2) -> U21_GGGGA(z2, z2, z2, z2, isMinus_in_gga(z2, succ(succ(zero)))),DISTANCE_IN_GGGGA(z2, z2, z2, z2) -> U21_GGGGA(z2, z2, z2, z2, isMinus_in_gga(z2, succ(succ(zero)))))


----------------------------------------

(308)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3))
   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2))
   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) -> U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2))
   U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) -> U27_GGGGA(z0, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2)
   DISTANCE_IN_GGGGA(z2, z2, z2, z2) -> U21_GGGGA(z2, z2, z2, z2, isMinus_in_gga(z2, succ(succ(zero))))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(309) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U21_GGGGA(z0, z1, z1, z1, isMinus_out_gga(x3)) -> U22_GGGGA(z0, z1, z1, z1, x3, =_out_ag(x3)) we obtained the following new rules [LPAR04]:

   (U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2)),U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2)))


----------------------------------------

(310)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2))
   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2))
   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) -> U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2))
   U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) -> U27_GGGGA(z0, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2)
   DISTANCE_IN_GGGGA(z2, z2, z2, z2) -> U21_GGGGA(z2, z2, z2, z2, isMinus_in_gga(z2, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(311) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U22_GGGGA(z0, z1, z1, z1, z2, =_out_ag(z2)) -> U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_in_ggg(z1, succ(succ(zero)), z2)) we obtained the following new rules [LPAR04]:

   (U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1)),U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1)))


----------------------------------------

(312)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2))
   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) -> U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2))
   U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) -> U27_GGGGA(z0, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2)
   DISTANCE_IN_GGGGA(z2, z2, z2, z2) -> U21_GGGGA(z2, z2, z2, z2, isMinus_in_gga(z2, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(313) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U23_GGGGA(z0, z1, z1, z1, z2, z2, isMinus_out_ggg) -> U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) we obtained the following new rules [LPAR04]:

   (U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1)),U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1)))


----------------------------------------

(314)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))
   U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) -> U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2))
   U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) -> U27_GGGGA(z0, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2)
   DISTANCE_IN_GGGGA(z2, z2, z2, z2) -> U21_GGGGA(z2, z2, z2, z2, isMinus_in_gga(z2, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(315) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U24_GGGGA(z0, z1, z1, z1, z2, z2, =_out_ag(z2)) -> U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)) we obtained the following new rules [LPAR04]:

   (U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1)) -> U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1)),U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1)) -> U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1)))


----------------------------------------

(316)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))
   U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2))
   U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) -> U27_GGGGA(z0, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2)
   DISTANCE_IN_GGGGA(z2, z2, z2, z2) -> U21_GGGGA(z2, z2, z2, z2, isMinus_in_gga(z2, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1)) -> U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(317) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U25_GGGGA(z0, z1, z1, z2, z2, z2, isMinus_out_ggg) -> U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) we obtained the following new rules [LPAR04]:

   (U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_out_ggg) -> U26_GGGGA(z0, z0, z0, z1, z1, z1, =_out_ag(z1)),U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_out_ggg) -> U26_GGGGA(z0, z0, z0, z1, z1, z1, =_out_ag(z1)))


----------------------------------------

(318)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))
   U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) -> U27_GGGGA(z0, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2))
   U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2)
   DISTANCE_IN_GGGGA(z2, z2, z2, z2) -> U21_GGGGA(z2, z2, z2, z2, isMinus_in_gga(z2, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1)) -> U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_out_ggg) -> U26_GGGGA(z0, z0, z0, z1, z1, z1, =_out_ag(z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(319) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U26_GGGGA(z0, z1, z1, z2, z2, z2, =_out_ag(z2)) -> U27_GGGGA(z0, z1, z2, z2, z2, z2, isMinus_in_ggg(z1, succ(zero), z2)) we obtained the following new rules [LPAR04]:

   (U26_GGGGA(z0, z0, z0, z1, z1, z1, =_out_ag(z1)) -> U27_GGGGA(z0, z0, z1, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1)),U26_GGGGA(z0, z0, z0, z1, z1, z1, =_out_ag(z1)) -> U27_GGGGA(z0, z0, z1, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1)))


----------------------------------------

(320)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3))
   U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2)
   DISTANCE_IN_GGGGA(z2, z2, z2, z2) -> U21_GGGGA(z2, z2, z2, z2, isMinus_in_gga(z2, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1)) -> U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_out_ggg) -> U26_GGGGA(z0, z0, z0, z1, z1, z1, =_out_ag(z1))
   U26_GGGGA(z0, z0, z0, z1, z1, z1, =_out_ag(z1)) -> U27_GGGGA(z0, z0, z1, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(321) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U27_GGGGA(z0, z1, z3, z3, z3, z3, isMinus_out_ggg) -> U28_GGGGA(z0, z1, z3, z3, z3, z3, =_out_ag(z3)) we obtained the following new rules [LPAR04]:

   (U27_GGGGA(z0, z0, z1, z1, z1, z1, isMinus_out_ggg) -> U28_GGGGA(z0, z0, z1, z1, z1, z1, =_out_ag(z1)),U27_GGGGA(z0, z0, z1, z1, z1, z1, isMinus_out_ggg) -> U28_GGGGA(z0, z0, z1, z1, z1, z1, =_out_ag(z1)))


----------------------------------------

(322)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2)
   DISTANCE_IN_GGGGA(z2, z2, z2, z2) -> U21_GGGGA(z2, z2, z2, z2, isMinus_in_gga(z2, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1)) -> U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_out_ggg) -> U26_GGGGA(z0, z0, z0, z1, z1, z1, =_out_ag(z1))
   U26_GGGGA(z0, z0, z0, z1, z1, z1, =_out_ag(z1)) -> U27_GGGGA(z0, z0, z1, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U27_GGGGA(z0, z0, z1, z1, z1, z1, isMinus_out_ggg) -> U28_GGGGA(z0, z0, z1, z1, z1, z1, =_out_ag(z1))

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(323) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U28_GGGGA(z0, z1, z2, z2, z2, z2, =_out_ag(z2)) -> DISTANCE_IN_GGGGA(z2, z2, z2, z2) we obtained the following new rules [LPAR04]:

   (U28_GGGGA(z0, z0, z1, z1, z1, z1, =_out_ag(z1)) -> DISTANCE_IN_GGGGA(z1, z1, z1, z1),U28_GGGGA(z0, z0, z1, z1, z1, z1, =_out_ag(z1)) -> DISTANCE_IN_GGGGA(z1, z1, z1, z1))


----------------------------------------

(324)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(z2, z2, z2, z2) -> U21_GGGGA(z2, z2, z2, z2, isMinus_in_gga(z2, succ(succ(zero))))
   U21_GGGGA(z0, z0, z0, z0, isMinus_out_gga(x2)) -> U22_GGGGA(z0, z0, z0, z0, x2, =_out_ag(x2))
   U22_GGGGA(z0, z0, z0, z0, z1, =_out_ag(z1)) -> U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_in_ggg(z0, succ(succ(zero)), z1))
   U23_GGGGA(z0, z0, z0, z0, z1, z1, isMinus_out_ggg) -> U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1))
   U24_GGGGA(z0, z0, z0, z0, z1, z1, =_out_ag(z1)) -> U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U25_GGGGA(z0, z0, z0, z1, z1, z1, isMinus_out_ggg) -> U26_GGGGA(z0, z0, z0, z1, z1, z1, =_out_ag(z1))
   U26_GGGGA(z0, z0, z0, z1, z1, z1, =_out_ag(z1)) -> U27_GGGGA(z0, z0, z1, z1, z1, z1, isMinus_in_ggg(z0, succ(zero), z1))
   U27_GGGGA(z0, z0, z1, z1, z1, z1, isMinus_out_ggg) -> U28_GGGGA(z0, z0, z1, z1, z1, z1, =_out_ag(z1))
   U28_GGGGA(z0, z0, z1, z1, z1, z1, =_out_ag(z1)) -> DISTANCE_IN_GGGGA(z1, z1, z1, z1)

The TRS R consists of the following rules:

   isMinus_in_ggg(zero, succ(Y), pred(Z)) -> U40_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), succ(Y), Z) -> U42_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), succ(Y), pred(pred(Z))) -> U44_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(X, zero, X) -> isMinus_out_ggg
   isMinus_in_ggg(zero, pred(Y), succ(Z)) -> U41_ggg(isMinus_in_ggg(zero, Y, Z))
   isMinus_in_ggg(succ(X), pred(Y), succ(succ(Z))) -> U43_ggg(isMinus_in_ggg(X, Y, Z))
   isMinus_in_ggg(pred(X), pred(Y), Z) -> U45_ggg(isMinus_in_ggg(X, Y, Z))
   U44_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U45_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U43_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U41_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U42_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   U40_ggg(isMinus_out_ggg) -> isMinus_out_ggg
   isMinus_in_gga(zero, succ(Y)) -> U40_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), succ(Y)) -> U42_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), succ(Y)) -> U44_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(X, zero) -> isMinus_out_gga(X)
   isMinus_in_gga(zero, pred(Y)) -> U41_gga(isMinus_in_gga(zero, Y))
   isMinus_in_gga(succ(X), pred(Y)) -> U43_gga(isMinus_in_gga(X, Y))
   isMinus_in_gga(pred(X), pred(Y)) -> U45_gga(isMinus_in_gga(X, Y))
   U44_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(pred(Z)))
   U45_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U43_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(succ(Z)))
   U41_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(succ(Z))
   U42_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(Z)
   U40_gga(isMinus_out_gga(Z)) -> isMinus_out_gga(pred(Z))

The set Q consists of the following terms:

   isMinus_in_gga(x0, x1)
   isMinus_in_ggg(x0, x1, x2)
   U40_gga(x0)
   U42_gga(x0)
   U44_gga(x0)
   U40_ggg(x0)
   U42_ggg(x0)
   U44_ggg(x0)
   U41_gga(x0)
   U43_gga(x0)
   U45_gga(x0)
   U41_ggg(x0)
   U43_ggg(x0)
   U45_ggg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(325) CutEliminatorProof (SOUND)
Eliminated all cuts by simply ignoring them[PROLOG].
----------------------------------------

(326)
Obligation:
Clauses:

distance(X1, X2, 1, J, D) :- is(D, -(J, +(1, 1))).
distance(X3, M, I, M, D) :- is(D, +(M, -(I, +(2, 1)))).
distance(N, M, N, J, D) :- is(D, +(N, -(*(2, M), -(J, +(2, 1))))).
distance(N, M, I, 1, D) :- is(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))).
distance(N, M, I, J, D) :- ','(is(N1, -(N, 2)), ','(is(M1, -(M, 2)), ','(is(I1, -(I, 1)), ','(is(J1, -(J, 1)), ','(distance(N1, M1, I1, J1, D1), is(D, +(*(2, N), +(*(2, M), -(D1, 4))))))))).


Query: distance(g,g,g,g,a)
----------------------------------------

(327) UndefinedPredicateHandlerProof (SOUND)
Added facts for all undefined predicates [PROLOG].
----------------------------------------

(328)
Obligation:
Clauses:

distance(X1, X2, 1, J, D) :- is(D, -(J, +(1, 1))).
distance(X3, M, I, M, D) :- is(D, +(M, -(I, +(2, 1)))).
distance(N, M, N, J, D) :- is(D, +(N, -(*(2, M), -(J, +(2, 1))))).
distance(N, M, I, 1, D) :- is(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))).
distance(N, M, I, J, D) :- ','(is(N1, -(N, 2)), ','(is(M1, -(M, 2)), ','(is(I1, -(I, 1)), ','(is(J1, -(J, 1)), ','(distance(N1, M1, I1, J1, D1), is(D, +(*(2, N), +(*(2, M), -(D1, 4))))))))).
is(X0, X1).


Query: distance(g,g,g,g,a)
----------------------------------------

(329) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

distance_in_5: (b,b,b,b,f) (f,f,f,f,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, 1, J, D) -> U1_gggga(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   is_in_ag(X0, X1) -> is_out_ag(X0, X1)
   U1_gggga(X1, X2, J, D, is_out_ag(D, -(J, +(1, 1)))) -> distance_out_gggga(X1, X2, 1, J, D)
   distance_in_gggga(X3, M, I, M, D) -> U2_gggga(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   U2_gggga(X3, M, I, D, is_out_ag(D, +(M, -(I, +(2, 1))))) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U3_gggga(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_gggga(N, M, J, D, is_out_ag(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, 1, D) -> U4_gggga(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_gggga(N, M, I, D, is_out_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_gggga(N, M, I, 1, D)
   distance_in_gggga(N, M, I, J, D) -> U5_gggga(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   U5_gggga(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_gggga(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U6_gggga(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_gggga(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U7_gggga(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_gggga(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U8_gggga(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   distance_in_aaaaa(X1, X2, 1, J, D) -> U1_aaaaa(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   is_in_aa(X0, X1) -> is_out_aa(X0, X1)
   U1_aaaaa(X1, X2, J, D, is_out_aa(D, -(J, +(1, 1)))) -> distance_out_aaaaa(X1, X2, 1, J, D)
   distance_in_aaaaa(X3, M, I, M, D) -> U2_aaaaa(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   U2_aaaaa(X3, M, I, D, is_out_aa(D, +(M, -(I, +(2, 1))))) -> distance_out_aaaaa(X3, M, I, M, D)
   distance_in_aaaaa(N, M, N, J, D) -> U3_aaaaa(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_aaaaa(N, M, J, D, is_out_aa(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_aaaaa(N, M, N, J, D)
   distance_in_aaaaa(N, M, I, 1, D) -> U4_aaaaa(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_aaaaa(N, M, I, D, is_out_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_aaaaa(N, M, I, 1, D)
   distance_in_aaaaa(N, M, I, J, D) -> U5_aaaaa(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_aaaaa(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_aaaaa(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_aaaaa(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_aaaaa(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_aaaaa(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_aaaaa(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_aaaaa(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_aaaaa(N, M, I, J, D)
   U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_gggga(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_gggga(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

1  =  1

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

is_in_ag(x1, x2)  =  is_in_ag(x2)

is_out_ag(x1, x2)  =  is_out_ag(x2)

-(x1, x2)  =  -(x1, x2)

+(x1, x2)  =  +(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

2  =  2

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

*(x1, x2)  =  *(x1, x2)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

3  =  3

U5_gggga(x1, x2, x3, x4, x5, x6)  =  U5_gggga(x1, x2, x3, x4, x6)

U6_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U6_gggga(x1, x2, x3, x4, x7)

U7_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_gggga(x1, x2, x3, x4, x8)

U8_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_gggga(x1, x2, x3, x4, x9)

U9_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_gggga(x1, x2, x3, x4, x10)

distance_in_aaaaa(x1, x2, x3, x4, x5)  =  distance_in_aaaaa

U1_aaaaa(x1, x2, x3, x4, x5)  =  U1_aaaaa(x5)

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

distance_out_aaaaa(x1, x2, x3, x4, x5)  =  distance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5)  =  U2_aaaaa(x5)

U3_aaaaa(x1, x2, x3, x4, x5)  =  U3_aaaaa(x5)

U4_aaaaa(x1, x2, x3, x4, x5)  =  U4_aaaaa(x5)

U5_aaaaa(x1, x2, x3, x4, x5, x6)  =  U5_aaaaa(x6)

U6_aaaaa(x1, x2, x3, x4, x5, x6, x7)  =  U6_aaaaa(x7)

U7_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_aaaaa(x8)

U8_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_aaaaa(x9)

U9_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_aaaaa(x10)

U10_aaaaa(x1, x2, x3, x4, x5, x6)  =  U10_aaaaa(x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x4, x6)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(330)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, 1, J, D) -> U1_gggga(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   is_in_ag(X0, X1) -> is_out_ag(X0, X1)
   U1_gggga(X1, X2, J, D, is_out_ag(D, -(J, +(1, 1)))) -> distance_out_gggga(X1, X2, 1, J, D)
   distance_in_gggga(X3, M, I, M, D) -> U2_gggga(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   U2_gggga(X3, M, I, D, is_out_ag(D, +(M, -(I, +(2, 1))))) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U3_gggga(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_gggga(N, M, J, D, is_out_ag(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, 1, D) -> U4_gggga(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_gggga(N, M, I, D, is_out_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_gggga(N, M, I, 1, D)
   distance_in_gggga(N, M, I, J, D) -> U5_gggga(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   U5_gggga(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_gggga(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U6_gggga(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_gggga(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U7_gggga(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_gggga(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U8_gggga(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   distance_in_aaaaa(X1, X2, 1, J, D) -> U1_aaaaa(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   is_in_aa(X0, X1) -> is_out_aa(X0, X1)
   U1_aaaaa(X1, X2, J, D, is_out_aa(D, -(J, +(1, 1)))) -> distance_out_aaaaa(X1, X2, 1, J, D)
   distance_in_aaaaa(X3, M, I, M, D) -> U2_aaaaa(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   U2_aaaaa(X3, M, I, D, is_out_aa(D, +(M, -(I, +(2, 1))))) -> distance_out_aaaaa(X3, M, I, M, D)
   distance_in_aaaaa(N, M, N, J, D) -> U3_aaaaa(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_aaaaa(N, M, J, D, is_out_aa(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_aaaaa(N, M, N, J, D)
   distance_in_aaaaa(N, M, I, 1, D) -> U4_aaaaa(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_aaaaa(N, M, I, D, is_out_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_aaaaa(N, M, I, 1, D)
   distance_in_aaaaa(N, M, I, J, D) -> U5_aaaaa(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_aaaaa(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_aaaaa(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_aaaaa(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_aaaaa(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_aaaaa(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_aaaaa(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_aaaaa(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_aaaaa(N, M, I, J, D)
   U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_gggga(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_gggga(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

1  =  1

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

is_in_ag(x1, x2)  =  is_in_ag(x2)

is_out_ag(x1, x2)  =  is_out_ag(x2)

-(x1, x2)  =  -(x1, x2)

+(x1, x2)  =  +(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

2  =  2

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

*(x1, x2)  =  *(x1, x2)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

3  =  3

U5_gggga(x1, x2, x3, x4, x5, x6)  =  U5_gggga(x1, x2, x3, x4, x6)

U6_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U6_gggga(x1, x2, x3, x4, x7)

U7_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_gggga(x1, x2, x3, x4, x8)

U8_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_gggga(x1, x2, x3, x4, x9)

U9_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_gggga(x1, x2, x3, x4, x10)

distance_in_aaaaa(x1, x2, x3, x4, x5)  =  distance_in_aaaaa

U1_aaaaa(x1, x2, x3, x4, x5)  =  U1_aaaaa(x5)

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

distance_out_aaaaa(x1, x2, x3, x4, x5)  =  distance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5)  =  U2_aaaaa(x5)

U3_aaaaa(x1, x2, x3, x4, x5)  =  U3_aaaaa(x5)

U4_aaaaa(x1, x2, x3, x4, x5)  =  U4_aaaaa(x5)

U5_aaaaa(x1, x2, x3, x4, x5, x6)  =  U5_aaaaa(x6)

U6_aaaaa(x1, x2, x3, x4, x5, x6, x7)  =  U6_aaaaa(x7)

U7_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_aaaaa(x8)

U8_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_aaaaa(x9)

U9_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_aaaaa(x10)

U10_aaaaa(x1, x2, x3, x4, x5, x6)  =  U10_aaaaa(x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x4, x6)



----------------------------------------

(331) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(X1, X2, 1, J, D) -> U1_GGGGA(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   DISTANCE_IN_GGGGA(X1, X2, 1, J, D) -> IS_IN_AG(D, -(J, +(1, 1)))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> U2_GGGGA(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> IS_IN_AG(D, +(M, -(I, +(2, 1))))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> U3_GGGGA(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> IS_IN_AG(D, +(N, -(*(2, M), -(J, +(2, 1)))))
   DISTANCE_IN_GGGGA(N, M, I, 1, D) -> U4_GGGGA(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   DISTANCE_IN_GGGGA(N, M, I, 1, D) -> IS_IN_AG(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U5_GGGGA(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> IS_IN_AG(N1, -(N, 2))
   U5_GGGGA(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_GGGGA(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U5_GGGGA(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> IS_IN_AG(M1, -(M, 2))
   U6_GGGGA(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_GGGGA(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U6_GGGGA(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> IS_IN_AG(I1, -(I, 1))
   U7_GGGGA(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U7_GGGGA(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> IS_IN_AG(J1, -(J, 1))
   U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)
   DISTANCE_IN_AAAAA(X1, X2, 1, J, D) -> U1_AAAAA(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   DISTANCE_IN_AAAAA(X1, X2, 1, J, D) -> IS_IN_AA(D, -(J, +(1, 1)))
   DISTANCE_IN_AAAAA(X3, M, I, M, D) -> U2_AAAAA(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   DISTANCE_IN_AAAAA(X3, M, I, M, D) -> IS_IN_AA(D, +(M, -(I, +(2, 1))))
   DISTANCE_IN_AAAAA(N, M, N, J, D) -> U3_AAAAA(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   DISTANCE_IN_AAAAA(N, M, N, J, D) -> IS_IN_AA(D, +(N, -(*(2, M), -(J, +(2, 1)))))
   DISTANCE_IN_AAAAA(N, M, I, 1, D) -> U4_AAAAA(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   DISTANCE_IN_AAAAA(N, M, I, 1, D) -> IS_IN_AA(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))
   DISTANCE_IN_AAAAA(N, M, I, J, D) -> U5_AAAAA(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   DISTANCE_IN_AAAAA(N, M, I, J, D) -> IS_IN_AA(N1, -(N, 2))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_AAAAA(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> IS_IN_AA(M1, -(M, 2))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_AAAAA(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> IS_IN_AA(I1, -(I, 1))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> IS_IN_AA(J1, -(J, 1))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)
   U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_AAAAA(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> IS_IN_AA(D, +(*(2, N), +(*(2, M), -(D1, 4))))
   U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_GGGGA(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> IS_IN_AA(D, +(*(2, N), +(*(2, M), -(D1, 4))))

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, 1, J, D) -> U1_gggga(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   is_in_ag(X0, X1) -> is_out_ag(X0, X1)
   U1_gggga(X1, X2, J, D, is_out_ag(D, -(J, +(1, 1)))) -> distance_out_gggga(X1, X2, 1, J, D)
   distance_in_gggga(X3, M, I, M, D) -> U2_gggga(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   U2_gggga(X3, M, I, D, is_out_ag(D, +(M, -(I, +(2, 1))))) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U3_gggga(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_gggga(N, M, J, D, is_out_ag(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, 1, D) -> U4_gggga(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_gggga(N, M, I, D, is_out_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_gggga(N, M, I, 1, D)
   distance_in_gggga(N, M, I, J, D) -> U5_gggga(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   U5_gggga(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_gggga(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U6_gggga(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_gggga(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U7_gggga(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_gggga(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U8_gggga(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   distance_in_aaaaa(X1, X2, 1, J, D) -> U1_aaaaa(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   is_in_aa(X0, X1) -> is_out_aa(X0, X1)
   U1_aaaaa(X1, X2, J, D, is_out_aa(D, -(J, +(1, 1)))) -> distance_out_aaaaa(X1, X2, 1, J, D)
   distance_in_aaaaa(X3, M, I, M, D) -> U2_aaaaa(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   U2_aaaaa(X3, M, I, D, is_out_aa(D, +(M, -(I, +(2, 1))))) -> distance_out_aaaaa(X3, M, I, M, D)
   distance_in_aaaaa(N, M, N, J, D) -> U3_aaaaa(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_aaaaa(N, M, J, D, is_out_aa(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_aaaaa(N, M, N, J, D)
   distance_in_aaaaa(N, M, I, 1, D) -> U4_aaaaa(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_aaaaa(N, M, I, D, is_out_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_aaaaa(N, M, I, 1, D)
   distance_in_aaaaa(N, M, I, J, D) -> U5_aaaaa(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_aaaaa(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_aaaaa(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_aaaaa(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_aaaaa(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_aaaaa(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_aaaaa(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_aaaaa(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_aaaaa(N, M, I, J, D)
   U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_gggga(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_gggga(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

1  =  1

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

is_in_ag(x1, x2)  =  is_in_ag(x2)

is_out_ag(x1, x2)  =  is_out_ag(x2)

-(x1, x2)  =  -(x1, x2)

+(x1, x2)  =  +(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

2  =  2

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

*(x1, x2)  =  *(x1, x2)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

3  =  3

U5_gggga(x1, x2, x3, x4, x5, x6)  =  U5_gggga(x1, x2, x3, x4, x6)

U6_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U6_gggga(x1, x2, x3, x4, x7)

U7_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_gggga(x1, x2, x3, x4, x8)

U8_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_gggga(x1, x2, x3, x4, x9)

U9_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_gggga(x1, x2, x3, x4, x10)

distance_in_aaaaa(x1, x2, x3, x4, x5)  =  distance_in_aaaaa

U1_aaaaa(x1, x2, x3, x4, x5)  =  U1_aaaaa(x5)

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

distance_out_aaaaa(x1, x2, x3, x4, x5)  =  distance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5)  =  U2_aaaaa(x5)

U3_aaaaa(x1, x2, x3, x4, x5)  =  U3_aaaaa(x5)

U4_aaaaa(x1, x2, x3, x4, x5)  =  U4_aaaaa(x5)

U5_aaaaa(x1, x2, x3, x4, x5, x6)  =  U5_aaaaa(x6)

U6_aaaaa(x1, x2, x3, x4, x5, x6, x7)  =  U6_aaaaa(x7)

U7_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_aaaaa(x8)

U8_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_aaaaa(x9)

U9_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_aaaaa(x10)

U10_aaaaa(x1, x2, x3, x4, x5, x6)  =  U10_aaaaa(x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x4, x6)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U1_GGGGA(x1, x2, x3, x4, x5)  =  U1_GGGGA(x1, x2, x3, x5)

IS_IN_AG(x1, x2)  =  IS_IN_AG(x2)

U2_GGGGA(x1, x2, x3, x4, x5)  =  U2_GGGGA(x1, x2, x3, x5)

U3_GGGGA(x1, x2, x3, x4, x5)  =  U3_GGGGA(x1, x2, x3, x5)

U4_GGGGA(x1, x2, x3, x4, x5)  =  U4_GGGGA(x1, x2, x3, x5)

U5_GGGGA(x1, x2, x3, x4, x5, x6)  =  U5_GGGGA(x1, x2, x3, x4, x6)

U6_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U6_GGGGA(x1, x2, x3, x4, x7)

U7_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_GGGGA(x1, x2, x3, x4, x8)

U8_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_GGGGA(x1, x2, x3, x4, x9)

U9_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_GGGGA(x1, x2, x3, x4, x10)

DISTANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_AAAAA

U1_AAAAA(x1, x2, x3, x4, x5)  =  U1_AAAAA(x5)

IS_IN_AA(x1, x2)  =  IS_IN_AA

U2_AAAAA(x1, x2, x3, x4, x5)  =  U2_AAAAA(x5)

U3_AAAAA(x1, x2, x3, x4, x5)  =  U3_AAAAA(x5)

U4_AAAAA(x1, x2, x3, x4, x5)  =  U4_AAAAA(x5)

U5_AAAAA(x1, x2, x3, x4, x5, x6)  =  U5_AAAAA(x6)

U6_AAAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAAA(x7)

U7_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_AAAAA(x8)

U8_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_AAAAA(x9)

U9_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_AAAAA(x10)

U10_AAAAA(x1, x2, x3, x4, x5, x6)  =  U10_AAAAA(x6)

U10_GGGGA(x1, x2, x3, x4, x5, x6)  =  U10_GGGGA(x1, x2, x3, x4, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(332)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(X1, X2, 1, J, D) -> U1_GGGGA(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   DISTANCE_IN_GGGGA(X1, X2, 1, J, D) -> IS_IN_AG(D, -(J, +(1, 1)))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> U2_GGGGA(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> IS_IN_AG(D, +(M, -(I, +(2, 1))))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> U3_GGGGA(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> IS_IN_AG(D, +(N, -(*(2, M), -(J, +(2, 1)))))
   DISTANCE_IN_GGGGA(N, M, I, 1, D) -> U4_GGGGA(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   DISTANCE_IN_GGGGA(N, M, I, 1, D) -> IS_IN_AG(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U5_GGGGA(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> IS_IN_AG(N1, -(N, 2))
   U5_GGGGA(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_GGGGA(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U5_GGGGA(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> IS_IN_AG(M1, -(M, 2))
   U6_GGGGA(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_GGGGA(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U6_GGGGA(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> IS_IN_AG(I1, -(I, 1))
   U7_GGGGA(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U7_GGGGA(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> IS_IN_AG(J1, -(J, 1))
   U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)
   DISTANCE_IN_AAAAA(X1, X2, 1, J, D) -> U1_AAAAA(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   DISTANCE_IN_AAAAA(X1, X2, 1, J, D) -> IS_IN_AA(D, -(J, +(1, 1)))
   DISTANCE_IN_AAAAA(X3, M, I, M, D) -> U2_AAAAA(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   DISTANCE_IN_AAAAA(X3, M, I, M, D) -> IS_IN_AA(D, +(M, -(I, +(2, 1))))
   DISTANCE_IN_AAAAA(N, M, N, J, D) -> U3_AAAAA(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   DISTANCE_IN_AAAAA(N, M, N, J, D) -> IS_IN_AA(D, +(N, -(*(2, M), -(J, +(2, 1)))))
   DISTANCE_IN_AAAAA(N, M, I, 1, D) -> U4_AAAAA(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   DISTANCE_IN_AAAAA(N, M, I, 1, D) -> IS_IN_AA(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))
   DISTANCE_IN_AAAAA(N, M, I, J, D) -> U5_AAAAA(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   DISTANCE_IN_AAAAA(N, M, I, J, D) -> IS_IN_AA(N1, -(N, 2))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_AAAAA(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> IS_IN_AA(M1, -(M, 2))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_AAAAA(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> IS_IN_AA(I1, -(I, 1))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> IS_IN_AA(J1, -(J, 1))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)
   U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_AAAAA(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> IS_IN_AA(D, +(*(2, N), +(*(2, M), -(D1, 4))))
   U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_GGGGA(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> IS_IN_AA(D, +(*(2, N), +(*(2, M), -(D1, 4))))

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, 1, J, D) -> U1_gggga(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   is_in_ag(X0, X1) -> is_out_ag(X0, X1)
   U1_gggga(X1, X2, J, D, is_out_ag(D, -(J, +(1, 1)))) -> distance_out_gggga(X1, X2, 1, J, D)
   distance_in_gggga(X3, M, I, M, D) -> U2_gggga(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   U2_gggga(X3, M, I, D, is_out_ag(D, +(M, -(I, +(2, 1))))) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U3_gggga(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_gggga(N, M, J, D, is_out_ag(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, 1, D) -> U4_gggga(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_gggga(N, M, I, D, is_out_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_gggga(N, M, I, 1, D)
   distance_in_gggga(N, M, I, J, D) -> U5_gggga(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   U5_gggga(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_gggga(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U6_gggga(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_gggga(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U7_gggga(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_gggga(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U8_gggga(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   distance_in_aaaaa(X1, X2, 1, J, D) -> U1_aaaaa(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   is_in_aa(X0, X1) -> is_out_aa(X0, X1)
   U1_aaaaa(X1, X2, J, D, is_out_aa(D, -(J, +(1, 1)))) -> distance_out_aaaaa(X1, X2, 1, J, D)
   distance_in_aaaaa(X3, M, I, M, D) -> U2_aaaaa(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   U2_aaaaa(X3, M, I, D, is_out_aa(D, +(M, -(I, +(2, 1))))) -> distance_out_aaaaa(X3, M, I, M, D)
   distance_in_aaaaa(N, M, N, J, D) -> U3_aaaaa(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_aaaaa(N, M, J, D, is_out_aa(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_aaaaa(N, M, N, J, D)
   distance_in_aaaaa(N, M, I, 1, D) -> U4_aaaaa(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_aaaaa(N, M, I, D, is_out_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_aaaaa(N, M, I, 1, D)
   distance_in_aaaaa(N, M, I, J, D) -> U5_aaaaa(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_aaaaa(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_aaaaa(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_aaaaa(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_aaaaa(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_aaaaa(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_aaaaa(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_aaaaa(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_aaaaa(N, M, I, J, D)
   U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_gggga(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_gggga(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

1  =  1

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

is_in_ag(x1, x2)  =  is_in_ag(x2)

is_out_ag(x1, x2)  =  is_out_ag(x2)

-(x1, x2)  =  -(x1, x2)

+(x1, x2)  =  +(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

2  =  2

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

*(x1, x2)  =  *(x1, x2)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

3  =  3

U5_gggga(x1, x2, x3, x4, x5, x6)  =  U5_gggga(x1, x2, x3, x4, x6)

U6_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U6_gggga(x1, x2, x3, x4, x7)

U7_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_gggga(x1, x2, x3, x4, x8)

U8_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_gggga(x1, x2, x3, x4, x9)

U9_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_gggga(x1, x2, x3, x4, x10)

distance_in_aaaaa(x1, x2, x3, x4, x5)  =  distance_in_aaaaa

U1_aaaaa(x1, x2, x3, x4, x5)  =  U1_aaaaa(x5)

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

distance_out_aaaaa(x1, x2, x3, x4, x5)  =  distance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5)  =  U2_aaaaa(x5)

U3_aaaaa(x1, x2, x3, x4, x5)  =  U3_aaaaa(x5)

U4_aaaaa(x1, x2, x3, x4, x5)  =  U4_aaaaa(x5)

U5_aaaaa(x1, x2, x3, x4, x5, x6)  =  U5_aaaaa(x6)

U6_aaaaa(x1, x2, x3, x4, x5, x6, x7)  =  U6_aaaaa(x7)

U7_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_aaaaa(x8)

U8_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_aaaaa(x9)

U9_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_aaaaa(x10)

U10_aaaaa(x1, x2, x3, x4, x5, x6)  =  U10_aaaaa(x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x4, x6)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U1_GGGGA(x1, x2, x3, x4, x5)  =  U1_GGGGA(x1, x2, x3, x5)

IS_IN_AG(x1, x2)  =  IS_IN_AG(x2)

U2_GGGGA(x1, x2, x3, x4, x5)  =  U2_GGGGA(x1, x2, x3, x5)

U3_GGGGA(x1, x2, x3, x4, x5)  =  U3_GGGGA(x1, x2, x3, x5)

U4_GGGGA(x1, x2, x3, x4, x5)  =  U4_GGGGA(x1, x2, x3, x5)

U5_GGGGA(x1, x2, x3, x4, x5, x6)  =  U5_GGGGA(x1, x2, x3, x4, x6)

U6_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U6_GGGGA(x1, x2, x3, x4, x7)

U7_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_GGGGA(x1, x2, x3, x4, x8)

U8_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_GGGGA(x1, x2, x3, x4, x9)

U9_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_GGGGA(x1, x2, x3, x4, x10)

DISTANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_AAAAA

U1_AAAAA(x1, x2, x3, x4, x5)  =  U1_AAAAA(x5)

IS_IN_AA(x1, x2)  =  IS_IN_AA

U2_AAAAA(x1, x2, x3, x4, x5)  =  U2_AAAAA(x5)

U3_AAAAA(x1, x2, x3, x4, x5)  =  U3_AAAAA(x5)

U4_AAAAA(x1, x2, x3, x4, x5)  =  U4_AAAAA(x5)

U5_AAAAA(x1, x2, x3, x4, x5, x6)  =  U5_AAAAA(x6)

U6_AAAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAAA(x7)

U7_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_AAAAA(x8)

U8_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_AAAAA(x9)

U9_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_AAAAA(x10)

U10_AAAAA(x1, x2, x3, x4, x5, x6)  =  U10_AAAAA(x6)

U10_GGGGA(x1, x2, x3, x4, x5, x6)  =  U10_GGGGA(x1, x2, x3, x4, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(333) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 35 less nodes.
----------------------------------------

(334)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_AAAAA(N, M, I, J, D) -> U5_AAAAA(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_AAAAA(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_AAAAA(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, 1, J, D) -> U1_gggga(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   is_in_ag(X0, X1) -> is_out_ag(X0, X1)
   U1_gggga(X1, X2, J, D, is_out_ag(D, -(J, +(1, 1)))) -> distance_out_gggga(X1, X2, 1, J, D)
   distance_in_gggga(X3, M, I, M, D) -> U2_gggga(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   U2_gggga(X3, M, I, D, is_out_ag(D, +(M, -(I, +(2, 1))))) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U3_gggga(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_gggga(N, M, J, D, is_out_ag(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, 1, D) -> U4_gggga(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_gggga(N, M, I, D, is_out_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_gggga(N, M, I, 1, D)
   distance_in_gggga(N, M, I, J, D) -> U5_gggga(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   U5_gggga(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_gggga(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U6_gggga(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_gggga(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U7_gggga(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_gggga(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U8_gggga(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   distance_in_aaaaa(X1, X2, 1, J, D) -> U1_aaaaa(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   is_in_aa(X0, X1) -> is_out_aa(X0, X1)
   U1_aaaaa(X1, X2, J, D, is_out_aa(D, -(J, +(1, 1)))) -> distance_out_aaaaa(X1, X2, 1, J, D)
   distance_in_aaaaa(X3, M, I, M, D) -> U2_aaaaa(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   U2_aaaaa(X3, M, I, D, is_out_aa(D, +(M, -(I, +(2, 1))))) -> distance_out_aaaaa(X3, M, I, M, D)
   distance_in_aaaaa(N, M, N, J, D) -> U3_aaaaa(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_aaaaa(N, M, J, D, is_out_aa(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_aaaaa(N, M, N, J, D)
   distance_in_aaaaa(N, M, I, 1, D) -> U4_aaaaa(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_aaaaa(N, M, I, D, is_out_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_aaaaa(N, M, I, 1, D)
   distance_in_aaaaa(N, M, I, J, D) -> U5_aaaaa(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_aaaaa(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_aaaaa(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_aaaaa(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_aaaaa(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_aaaaa(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_aaaaa(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_aaaaa(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_aaaaa(N, M, I, J, D)
   U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_gggga(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_gggga(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

1  =  1

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x1, x2, x3, x5)

is_in_ag(x1, x2)  =  is_in_ag(x2)

is_out_ag(x1, x2)  =  is_out_ag(x2)

-(x1, x2)  =  -(x1, x2)

+(x1, x2)  =  +(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga(x1, x2, x3, x4)

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x1, x2, x3, x5)

2  =  2

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x1, x2, x3, x5)

*(x1, x2)  =  *(x1, x2)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x1, x2, x3, x5)

3  =  3

U5_gggga(x1, x2, x3, x4, x5, x6)  =  U5_gggga(x1, x2, x3, x4, x6)

U6_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U6_gggga(x1, x2, x3, x4, x7)

U7_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_gggga(x1, x2, x3, x4, x8)

U8_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_gggga(x1, x2, x3, x4, x9)

U9_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_gggga(x1, x2, x3, x4, x10)

distance_in_aaaaa(x1, x2, x3, x4, x5)  =  distance_in_aaaaa

U1_aaaaa(x1, x2, x3, x4, x5)  =  U1_aaaaa(x5)

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

distance_out_aaaaa(x1, x2, x3, x4, x5)  =  distance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5)  =  U2_aaaaa(x5)

U3_aaaaa(x1, x2, x3, x4, x5)  =  U3_aaaaa(x5)

U4_aaaaa(x1, x2, x3, x4, x5)  =  U4_aaaaa(x5)

U5_aaaaa(x1, x2, x3, x4, x5, x6)  =  U5_aaaaa(x6)

U6_aaaaa(x1, x2, x3, x4, x5, x6, x7)  =  U6_aaaaa(x7)

U7_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_aaaaa(x8)

U8_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_aaaaa(x9)

U9_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_aaaaa(x10)

U10_aaaaa(x1, x2, x3, x4, x5, x6)  =  U10_aaaaa(x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x1, x2, x3, x4, x6)

DISTANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_AAAAA

U5_AAAAA(x1, x2, x3, x4, x5, x6)  =  U5_AAAAA(x6)

U6_AAAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAAA(x7)

U7_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_AAAAA(x8)

U8_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_AAAAA(x9)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(335) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(336)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_AAAAA(N, M, I, J, D) -> U5_AAAAA(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_AAAAA(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_AAAAA(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)

The TRS R consists of the following rules:

   is_in_aa(X0, X1) -> is_out_aa(X0, X1)

The argument filtering Pi contains the following mapping:
1  =  1

-(x1, x2)  =  -(x1, x2)

2  =  2

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

DISTANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_AAAAA

U5_AAAAA(x1, x2, x3, x4, x5, x6)  =  U5_AAAAA(x6)

U6_AAAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAAA(x7)

U7_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_AAAAA(x8)

U8_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_AAAAA(x9)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(337) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(338)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_AAAAA -> U5_AAAAA(is_in_aa)
   U5_AAAAA(is_out_aa) -> U6_AAAAA(is_in_aa)
   U6_AAAAA(is_out_aa) -> U7_AAAAA(is_in_aa)
   U7_AAAAA(is_out_aa) -> U8_AAAAA(is_in_aa)
   U8_AAAAA(is_out_aa) -> DISTANCE_IN_AAAAA

The TRS R consists of the following rules:

   is_in_aa -> is_out_aa

The set Q consists of the following terms:

   is_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(339) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule DISTANCE_IN_AAAAA -> U5_AAAAA(is_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa),DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa))


----------------------------------------

(340)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_AAAAA(is_out_aa) -> U6_AAAAA(is_in_aa)
   U6_AAAAA(is_out_aa) -> U7_AAAAA(is_in_aa)
   U7_AAAAA(is_out_aa) -> U8_AAAAA(is_in_aa)
   U8_AAAAA(is_out_aa) -> DISTANCE_IN_AAAAA
   DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa)

The TRS R consists of the following rules:

   is_in_aa -> is_out_aa

The set Q consists of the following terms:

   is_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(341) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U5_AAAAA(is_out_aa) -> U6_AAAAA(is_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (U5_AAAAA(is_out_aa) -> U6_AAAAA(is_out_aa),U5_AAAAA(is_out_aa) -> U6_AAAAA(is_out_aa))


----------------------------------------

(342)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAAAA(is_out_aa) -> U7_AAAAA(is_in_aa)
   U7_AAAAA(is_out_aa) -> U8_AAAAA(is_in_aa)
   U8_AAAAA(is_out_aa) -> DISTANCE_IN_AAAAA
   DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa)
   U5_AAAAA(is_out_aa) -> U6_AAAAA(is_out_aa)

The TRS R consists of the following rules:

   is_in_aa -> is_out_aa

The set Q consists of the following terms:

   is_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(343) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

distance_in_5: (b,b,b,b,f) (f,f,f,f,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, 1, J, D) -> U1_gggga(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   is_in_ag(X0, X1) -> is_out_ag(X0, X1)
   U1_gggga(X1, X2, J, D, is_out_ag(D, -(J, +(1, 1)))) -> distance_out_gggga(X1, X2, 1, J, D)
   distance_in_gggga(X3, M, I, M, D) -> U2_gggga(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   U2_gggga(X3, M, I, D, is_out_ag(D, +(M, -(I, +(2, 1))))) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U3_gggga(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_gggga(N, M, J, D, is_out_ag(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, 1, D) -> U4_gggga(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_gggga(N, M, I, D, is_out_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_gggga(N, M, I, 1, D)
   distance_in_gggga(N, M, I, J, D) -> U5_gggga(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   U5_gggga(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_gggga(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U6_gggga(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_gggga(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U7_gggga(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_gggga(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U8_gggga(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   distance_in_aaaaa(X1, X2, 1, J, D) -> U1_aaaaa(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   is_in_aa(X0, X1) -> is_out_aa(X0, X1)
   U1_aaaaa(X1, X2, J, D, is_out_aa(D, -(J, +(1, 1)))) -> distance_out_aaaaa(X1, X2, 1, J, D)
   distance_in_aaaaa(X3, M, I, M, D) -> U2_aaaaa(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   U2_aaaaa(X3, M, I, D, is_out_aa(D, +(M, -(I, +(2, 1))))) -> distance_out_aaaaa(X3, M, I, M, D)
   distance_in_aaaaa(N, M, N, J, D) -> U3_aaaaa(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_aaaaa(N, M, J, D, is_out_aa(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_aaaaa(N, M, N, J, D)
   distance_in_aaaaa(N, M, I, 1, D) -> U4_aaaaa(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_aaaaa(N, M, I, D, is_out_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_aaaaa(N, M, I, 1, D)
   distance_in_aaaaa(N, M, I, J, D) -> U5_aaaaa(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_aaaaa(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_aaaaa(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_aaaaa(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_aaaaa(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_aaaaa(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_aaaaa(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_aaaaa(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_aaaaa(N, M, I, J, D)
   U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_gggga(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_gggga(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

1  =  1

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x5)

is_in_ag(x1, x2)  =  is_in_ag(x2)

is_out_ag(x1, x2)  =  is_out_ag

-(x1, x2)  =  -(x1, x2)

+(x1, x2)  =  +(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

2  =  2

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

*(x1, x2)  =  *(x1, x2)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x5)

3  =  3

U5_gggga(x1, x2, x3, x4, x5, x6)  =  U5_gggga(x2, x3, x4, x6)

U6_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U6_gggga(x3, x4, x7)

U7_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_gggga(x4, x8)

U8_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_gggga(x9)

U9_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_gggga(x10)

distance_in_aaaaa(x1, x2, x3, x4, x5)  =  distance_in_aaaaa

U1_aaaaa(x1, x2, x3, x4, x5)  =  U1_aaaaa(x5)

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

distance_out_aaaaa(x1, x2, x3, x4, x5)  =  distance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5)  =  U2_aaaaa(x5)

U3_aaaaa(x1, x2, x3, x4, x5)  =  U3_aaaaa(x5)

U4_aaaaa(x1, x2, x3, x4, x5)  =  U4_aaaaa(x5)

U5_aaaaa(x1, x2, x3, x4, x5, x6)  =  U5_aaaaa(x6)

U6_aaaaa(x1, x2, x3, x4, x5, x6, x7)  =  U6_aaaaa(x7)

U7_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_aaaaa(x8)

U8_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_aaaaa(x9)

U9_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_aaaaa(x10)

U10_aaaaa(x1, x2, x3, x4, x5, x6)  =  U10_aaaaa(x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x6)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(344)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, 1, J, D) -> U1_gggga(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   is_in_ag(X0, X1) -> is_out_ag(X0, X1)
   U1_gggga(X1, X2, J, D, is_out_ag(D, -(J, +(1, 1)))) -> distance_out_gggga(X1, X2, 1, J, D)
   distance_in_gggga(X3, M, I, M, D) -> U2_gggga(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   U2_gggga(X3, M, I, D, is_out_ag(D, +(M, -(I, +(2, 1))))) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U3_gggga(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_gggga(N, M, J, D, is_out_ag(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, 1, D) -> U4_gggga(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_gggga(N, M, I, D, is_out_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_gggga(N, M, I, 1, D)
   distance_in_gggga(N, M, I, J, D) -> U5_gggga(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   U5_gggga(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_gggga(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U6_gggga(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_gggga(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U7_gggga(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_gggga(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U8_gggga(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   distance_in_aaaaa(X1, X2, 1, J, D) -> U1_aaaaa(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   is_in_aa(X0, X1) -> is_out_aa(X0, X1)
   U1_aaaaa(X1, X2, J, D, is_out_aa(D, -(J, +(1, 1)))) -> distance_out_aaaaa(X1, X2, 1, J, D)
   distance_in_aaaaa(X3, M, I, M, D) -> U2_aaaaa(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   U2_aaaaa(X3, M, I, D, is_out_aa(D, +(M, -(I, +(2, 1))))) -> distance_out_aaaaa(X3, M, I, M, D)
   distance_in_aaaaa(N, M, N, J, D) -> U3_aaaaa(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_aaaaa(N, M, J, D, is_out_aa(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_aaaaa(N, M, N, J, D)
   distance_in_aaaaa(N, M, I, 1, D) -> U4_aaaaa(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_aaaaa(N, M, I, D, is_out_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_aaaaa(N, M, I, 1, D)
   distance_in_aaaaa(N, M, I, J, D) -> U5_aaaaa(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_aaaaa(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_aaaaa(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_aaaaa(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_aaaaa(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_aaaaa(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_aaaaa(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_aaaaa(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_aaaaa(N, M, I, J, D)
   U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_gggga(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_gggga(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

1  =  1

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x5)

is_in_ag(x1, x2)  =  is_in_ag(x2)

is_out_ag(x1, x2)  =  is_out_ag

-(x1, x2)  =  -(x1, x2)

+(x1, x2)  =  +(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

2  =  2

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

*(x1, x2)  =  *(x1, x2)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x5)

3  =  3

U5_gggga(x1, x2, x3, x4, x5, x6)  =  U5_gggga(x2, x3, x4, x6)

U6_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U6_gggga(x3, x4, x7)

U7_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_gggga(x4, x8)

U8_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_gggga(x9)

U9_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_gggga(x10)

distance_in_aaaaa(x1, x2, x3, x4, x5)  =  distance_in_aaaaa

U1_aaaaa(x1, x2, x3, x4, x5)  =  U1_aaaaa(x5)

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

distance_out_aaaaa(x1, x2, x3, x4, x5)  =  distance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5)  =  U2_aaaaa(x5)

U3_aaaaa(x1, x2, x3, x4, x5)  =  U3_aaaaa(x5)

U4_aaaaa(x1, x2, x3, x4, x5)  =  U4_aaaaa(x5)

U5_aaaaa(x1, x2, x3, x4, x5, x6)  =  U5_aaaaa(x6)

U6_aaaaa(x1, x2, x3, x4, x5, x6, x7)  =  U6_aaaaa(x7)

U7_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_aaaaa(x8)

U8_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_aaaaa(x9)

U9_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_aaaaa(x10)

U10_aaaaa(x1, x2, x3, x4, x5, x6)  =  U10_aaaaa(x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x6)



----------------------------------------

(345) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(X1, X2, 1, J, D) -> U1_GGGGA(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   DISTANCE_IN_GGGGA(X1, X2, 1, J, D) -> IS_IN_AG(D, -(J, +(1, 1)))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> U2_GGGGA(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> IS_IN_AG(D, +(M, -(I, +(2, 1))))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> U3_GGGGA(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> IS_IN_AG(D, +(N, -(*(2, M), -(J, +(2, 1)))))
   DISTANCE_IN_GGGGA(N, M, I, 1, D) -> U4_GGGGA(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   DISTANCE_IN_GGGGA(N, M, I, 1, D) -> IS_IN_AG(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U5_GGGGA(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> IS_IN_AG(N1, -(N, 2))
   U5_GGGGA(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_GGGGA(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U5_GGGGA(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> IS_IN_AG(M1, -(M, 2))
   U6_GGGGA(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_GGGGA(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U6_GGGGA(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> IS_IN_AG(I1, -(I, 1))
   U7_GGGGA(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U7_GGGGA(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> IS_IN_AG(J1, -(J, 1))
   U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)
   DISTANCE_IN_AAAAA(X1, X2, 1, J, D) -> U1_AAAAA(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   DISTANCE_IN_AAAAA(X1, X2, 1, J, D) -> IS_IN_AA(D, -(J, +(1, 1)))
   DISTANCE_IN_AAAAA(X3, M, I, M, D) -> U2_AAAAA(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   DISTANCE_IN_AAAAA(X3, M, I, M, D) -> IS_IN_AA(D, +(M, -(I, +(2, 1))))
   DISTANCE_IN_AAAAA(N, M, N, J, D) -> U3_AAAAA(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   DISTANCE_IN_AAAAA(N, M, N, J, D) -> IS_IN_AA(D, +(N, -(*(2, M), -(J, +(2, 1)))))
   DISTANCE_IN_AAAAA(N, M, I, 1, D) -> U4_AAAAA(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   DISTANCE_IN_AAAAA(N, M, I, 1, D) -> IS_IN_AA(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))
   DISTANCE_IN_AAAAA(N, M, I, J, D) -> U5_AAAAA(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   DISTANCE_IN_AAAAA(N, M, I, J, D) -> IS_IN_AA(N1, -(N, 2))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_AAAAA(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> IS_IN_AA(M1, -(M, 2))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_AAAAA(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> IS_IN_AA(I1, -(I, 1))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> IS_IN_AA(J1, -(J, 1))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)
   U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_AAAAA(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> IS_IN_AA(D, +(*(2, N), +(*(2, M), -(D1, 4))))
   U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_GGGGA(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> IS_IN_AA(D, +(*(2, N), +(*(2, M), -(D1, 4))))

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, 1, J, D) -> U1_gggga(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   is_in_ag(X0, X1) -> is_out_ag(X0, X1)
   U1_gggga(X1, X2, J, D, is_out_ag(D, -(J, +(1, 1)))) -> distance_out_gggga(X1, X2, 1, J, D)
   distance_in_gggga(X3, M, I, M, D) -> U2_gggga(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   U2_gggga(X3, M, I, D, is_out_ag(D, +(M, -(I, +(2, 1))))) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U3_gggga(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_gggga(N, M, J, D, is_out_ag(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, 1, D) -> U4_gggga(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_gggga(N, M, I, D, is_out_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_gggga(N, M, I, 1, D)
   distance_in_gggga(N, M, I, J, D) -> U5_gggga(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   U5_gggga(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_gggga(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U6_gggga(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_gggga(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U7_gggga(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_gggga(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U8_gggga(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   distance_in_aaaaa(X1, X2, 1, J, D) -> U1_aaaaa(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   is_in_aa(X0, X1) -> is_out_aa(X0, X1)
   U1_aaaaa(X1, X2, J, D, is_out_aa(D, -(J, +(1, 1)))) -> distance_out_aaaaa(X1, X2, 1, J, D)
   distance_in_aaaaa(X3, M, I, M, D) -> U2_aaaaa(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   U2_aaaaa(X3, M, I, D, is_out_aa(D, +(M, -(I, +(2, 1))))) -> distance_out_aaaaa(X3, M, I, M, D)
   distance_in_aaaaa(N, M, N, J, D) -> U3_aaaaa(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_aaaaa(N, M, J, D, is_out_aa(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_aaaaa(N, M, N, J, D)
   distance_in_aaaaa(N, M, I, 1, D) -> U4_aaaaa(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_aaaaa(N, M, I, D, is_out_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_aaaaa(N, M, I, 1, D)
   distance_in_aaaaa(N, M, I, J, D) -> U5_aaaaa(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_aaaaa(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_aaaaa(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_aaaaa(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_aaaaa(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_aaaaa(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_aaaaa(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_aaaaa(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_aaaaa(N, M, I, J, D)
   U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_gggga(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_gggga(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

1  =  1

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x5)

is_in_ag(x1, x2)  =  is_in_ag(x2)

is_out_ag(x1, x2)  =  is_out_ag

-(x1, x2)  =  -(x1, x2)

+(x1, x2)  =  +(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

2  =  2

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

*(x1, x2)  =  *(x1, x2)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x5)

3  =  3

U5_gggga(x1, x2, x3, x4, x5, x6)  =  U5_gggga(x2, x3, x4, x6)

U6_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U6_gggga(x3, x4, x7)

U7_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_gggga(x4, x8)

U8_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_gggga(x9)

U9_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_gggga(x10)

distance_in_aaaaa(x1, x2, x3, x4, x5)  =  distance_in_aaaaa

U1_aaaaa(x1, x2, x3, x4, x5)  =  U1_aaaaa(x5)

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

distance_out_aaaaa(x1, x2, x3, x4, x5)  =  distance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5)  =  U2_aaaaa(x5)

U3_aaaaa(x1, x2, x3, x4, x5)  =  U3_aaaaa(x5)

U4_aaaaa(x1, x2, x3, x4, x5)  =  U4_aaaaa(x5)

U5_aaaaa(x1, x2, x3, x4, x5, x6)  =  U5_aaaaa(x6)

U6_aaaaa(x1, x2, x3, x4, x5, x6, x7)  =  U6_aaaaa(x7)

U7_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_aaaaa(x8)

U8_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_aaaaa(x9)

U9_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_aaaaa(x10)

U10_aaaaa(x1, x2, x3, x4, x5, x6)  =  U10_aaaaa(x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x6)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U1_GGGGA(x1, x2, x3, x4, x5)  =  U1_GGGGA(x5)

IS_IN_AG(x1, x2)  =  IS_IN_AG(x2)

U2_GGGGA(x1, x2, x3, x4, x5)  =  U2_GGGGA(x5)

U3_GGGGA(x1, x2, x3, x4, x5)  =  U3_GGGGA(x5)

U4_GGGGA(x1, x2, x3, x4, x5)  =  U4_GGGGA(x5)

U5_GGGGA(x1, x2, x3, x4, x5, x6)  =  U5_GGGGA(x2, x3, x4, x6)

U6_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U6_GGGGA(x3, x4, x7)

U7_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_GGGGA(x4, x8)

U8_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_GGGGA(x9)

U9_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_GGGGA(x10)

DISTANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_AAAAA

U1_AAAAA(x1, x2, x3, x4, x5)  =  U1_AAAAA(x5)

IS_IN_AA(x1, x2)  =  IS_IN_AA

U2_AAAAA(x1, x2, x3, x4, x5)  =  U2_AAAAA(x5)

U3_AAAAA(x1, x2, x3, x4, x5)  =  U3_AAAAA(x5)

U4_AAAAA(x1, x2, x3, x4, x5)  =  U4_AAAAA(x5)

U5_AAAAA(x1, x2, x3, x4, x5, x6)  =  U5_AAAAA(x6)

U6_AAAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAAA(x7)

U7_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_AAAAA(x8)

U8_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_AAAAA(x9)

U9_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_AAAAA(x10)

U10_AAAAA(x1, x2, x3, x4, x5, x6)  =  U10_AAAAA(x6)

U10_GGGGA(x1, x2, x3, x4, x5, x6)  =  U10_GGGGA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(346)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_GGGGA(X1, X2, 1, J, D) -> U1_GGGGA(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   DISTANCE_IN_GGGGA(X1, X2, 1, J, D) -> IS_IN_AG(D, -(J, +(1, 1)))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> U2_GGGGA(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   DISTANCE_IN_GGGGA(X3, M, I, M, D) -> IS_IN_AG(D, +(M, -(I, +(2, 1))))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> U3_GGGGA(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   DISTANCE_IN_GGGGA(N, M, N, J, D) -> IS_IN_AG(D, +(N, -(*(2, M), -(J, +(2, 1)))))
   DISTANCE_IN_GGGGA(N, M, I, 1, D) -> U4_GGGGA(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   DISTANCE_IN_GGGGA(N, M, I, 1, D) -> IS_IN_AG(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> U5_GGGGA(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   DISTANCE_IN_GGGGA(N, M, I, J, D) -> IS_IN_AG(N1, -(N, 2))
   U5_GGGGA(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_GGGGA(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U5_GGGGA(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> IS_IN_AG(M1, -(M, 2))
   U6_GGGGA(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_GGGGA(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U6_GGGGA(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> IS_IN_AG(I1, -(I, 1))
   U7_GGGGA(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U7_GGGGA(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> IS_IN_AG(J1, -(J, 1))
   U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U8_GGGGA(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)
   DISTANCE_IN_AAAAA(X1, X2, 1, J, D) -> U1_AAAAA(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   DISTANCE_IN_AAAAA(X1, X2, 1, J, D) -> IS_IN_AA(D, -(J, +(1, 1)))
   DISTANCE_IN_AAAAA(X3, M, I, M, D) -> U2_AAAAA(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   DISTANCE_IN_AAAAA(X3, M, I, M, D) -> IS_IN_AA(D, +(M, -(I, +(2, 1))))
   DISTANCE_IN_AAAAA(N, M, N, J, D) -> U3_AAAAA(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   DISTANCE_IN_AAAAA(N, M, N, J, D) -> IS_IN_AA(D, +(N, -(*(2, M), -(J, +(2, 1)))))
   DISTANCE_IN_AAAAA(N, M, I, 1, D) -> U4_AAAAA(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   DISTANCE_IN_AAAAA(N, M, I, 1, D) -> IS_IN_AA(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))
   DISTANCE_IN_AAAAA(N, M, I, J, D) -> U5_AAAAA(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   DISTANCE_IN_AAAAA(N, M, I, J, D) -> IS_IN_AA(N1, -(N, 2))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_AAAAA(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> IS_IN_AA(M1, -(M, 2))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_AAAAA(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> IS_IN_AA(I1, -(I, 1))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> IS_IN_AA(J1, -(J, 1))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)
   U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_AAAAA(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U9_AAAAA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> IS_IN_AA(D, +(*(2, N), +(*(2, M), -(D1, 4))))
   U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_GGGGA(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U9_GGGGA(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> IS_IN_AA(D, +(*(2, N), +(*(2, M), -(D1, 4))))

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, 1, J, D) -> U1_gggga(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   is_in_ag(X0, X1) -> is_out_ag(X0, X1)
   U1_gggga(X1, X2, J, D, is_out_ag(D, -(J, +(1, 1)))) -> distance_out_gggga(X1, X2, 1, J, D)
   distance_in_gggga(X3, M, I, M, D) -> U2_gggga(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   U2_gggga(X3, M, I, D, is_out_ag(D, +(M, -(I, +(2, 1))))) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U3_gggga(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_gggga(N, M, J, D, is_out_ag(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, 1, D) -> U4_gggga(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_gggga(N, M, I, D, is_out_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_gggga(N, M, I, 1, D)
   distance_in_gggga(N, M, I, J, D) -> U5_gggga(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   U5_gggga(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_gggga(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U6_gggga(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_gggga(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U7_gggga(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_gggga(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U8_gggga(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   distance_in_aaaaa(X1, X2, 1, J, D) -> U1_aaaaa(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   is_in_aa(X0, X1) -> is_out_aa(X0, X1)
   U1_aaaaa(X1, X2, J, D, is_out_aa(D, -(J, +(1, 1)))) -> distance_out_aaaaa(X1, X2, 1, J, D)
   distance_in_aaaaa(X3, M, I, M, D) -> U2_aaaaa(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   U2_aaaaa(X3, M, I, D, is_out_aa(D, +(M, -(I, +(2, 1))))) -> distance_out_aaaaa(X3, M, I, M, D)
   distance_in_aaaaa(N, M, N, J, D) -> U3_aaaaa(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_aaaaa(N, M, J, D, is_out_aa(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_aaaaa(N, M, N, J, D)
   distance_in_aaaaa(N, M, I, 1, D) -> U4_aaaaa(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_aaaaa(N, M, I, D, is_out_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_aaaaa(N, M, I, 1, D)
   distance_in_aaaaa(N, M, I, J, D) -> U5_aaaaa(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_aaaaa(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_aaaaa(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_aaaaa(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_aaaaa(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_aaaaa(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_aaaaa(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_aaaaa(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_aaaaa(N, M, I, J, D)
   U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_gggga(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_gggga(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

1  =  1

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x5)

is_in_ag(x1, x2)  =  is_in_ag(x2)

is_out_ag(x1, x2)  =  is_out_ag

-(x1, x2)  =  -(x1, x2)

+(x1, x2)  =  +(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

2  =  2

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

*(x1, x2)  =  *(x1, x2)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x5)

3  =  3

U5_gggga(x1, x2, x3, x4, x5, x6)  =  U5_gggga(x2, x3, x4, x6)

U6_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U6_gggga(x3, x4, x7)

U7_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_gggga(x4, x8)

U8_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_gggga(x9)

U9_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_gggga(x10)

distance_in_aaaaa(x1, x2, x3, x4, x5)  =  distance_in_aaaaa

U1_aaaaa(x1, x2, x3, x4, x5)  =  U1_aaaaa(x5)

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

distance_out_aaaaa(x1, x2, x3, x4, x5)  =  distance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5)  =  U2_aaaaa(x5)

U3_aaaaa(x1, x2, x3, x4, x5)  =  U3_aaaaa(x5)

U4_aaaaa(x1, x2, x3, x4, x5)  =  U4_aaaaa(x5)

U5_aaaaa(x1, x2, x3, x4, x5, x6)  =  U5_aaaaa(x6)

U6_aaaaa(x1, x2, x3, x4, x5, x6, x7)  =  U6_aaaaa(x7)

U7_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_aaaaa(x8)

U8_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_aaaaa(x9)

U9_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_aaaaa(x10)

U10_aaaaa(x1, x2, x3, x4, x5, x6)  =  U10_aaaaa(x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x6)

DISTANCE_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_GGGGA(x1, x2, x3, x4)

U1_GGGGA(x1, x2, x3, x4, x5)  =  U1_GGGGA(x5)

IS_IN_AG(x1, x2)  =  IS_IN_AG(x2)

U2_GGGGA(x1, x2, x3, x4, x5)  =  U2_GGGGA(x5)

U3_GGGGA(x1, x2, x3, x4, x5)  =  U3_GGGGA(x5)

U4_GGGGA(x1, x2, x3, x4, x5)  =  U4_GGGGA(x5)

U5_GGGGA(x1, x2, x3, x4, x5, x6)  =  U5_GGGGA(x2, x3, x4, x6)

U6_GGGGA(x1, x2, x3, x4, x5, x6, x7)  =  U6_GGGGA(x3, x4, x7)

U7_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_GGGGA(x4, x8)

U8_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_GGGGA(x9)

U9_GGGGA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_GGGGA(x10)

DISTANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_AAAAA

U1_AAAAA(x1, x2, x3, x4, x5)  =  U1_AAAAA(x5)

IS_IN_AA(x1, x2)  =  IS_IN_AA

U2_AAAAA(x1, x2, x3, x4, x5)  =  U2_AAAAA(x5)

U3_AAAAA(x1, x2, x3, x4, x5)  =  U3_AAAAA(x5)

U4_AAAAA(x1, x2, x3, x4, x5)  =  U4_AAAAA(x5)

U5_AAAAA(x1, x2, x3, x4, x5, x6)  =  U5_AAAAA(x6)

U6_AAAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAAA(x7)

U7_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_AAAAA(x8)

U8_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_AAAAA(x9)

U9_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_AAAAA(x10)

U10_AAAAA(x1, x2, x3, x4, x5, x6)  =  U10_AAAAA(x6)

U10_GGGGA(x1, x2, x3, x4, x5, x6)  =  U10_GGGGA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(347) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 35 less nodes.
----------------------------------------

(348)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_AAAAA(N, M, I, J, D) -> U5_AAAAA(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_AAAAA(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_AAAAA(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)

The TRS R consists of the following rules:

   distance_in_gggga(X1, X2, 1, J, D) -> U1_gggga(X1, X2, J, D, is_in_ag(D, -(J, +(1, 1))))
   is_in_ag(X0, X1) -> is_out_ag(X0, X1)
   U1_gggga(X1, X2, J, D, is_out_ag(D, -(J, +(1, 1)))) -> distance_out_gggga(X1, X2, 1, J, D)
   distance_in_gggga(X3, M, I, M, D) -> U2_gggga(X3, M, I, D, is_in_ag(D, +(M, -(I, +(2, 1)))))
   U2_gggga(X3, M, I, D, is_out_ag(D, +(M, -(I, +(2, 1))))) -> distance_out_gggga(X3, M, I, M, D)
   distance_in_gggga(N, M, N, J, D) -> U3_gggga(N, M, J, D, is_in_ag(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_gggga(N, M, J, D, is_out_ag(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_gggga(N, M, N, J, D)
   distance_in_gggga(N, M, I, 1, D) -> U4_gggga(N, M, I, D, is_in_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_gggga(N, M, I, D, is_out_ag(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_gggga(N, M, I, 1, D)
   distance_in_gggga(N, M, I, J, D) -> U5_gggga(N, M, I, J, D, is_in_ag(N1, -(N, 2)))
   U5_gggga(N, M, I, J, D, is_out_ag(N1, -(N, 2))) -> U6_gggga(N, M, I, J, D, N1, is_in_ag(M1, -(M, 2)))
   U6_gggga(N, M, I, J, D, N1, is_out_ag(M1, -(M, 2))) -> U7_gggga(N, M, I, J, D, N1, M1, is_in_ag(I1, -(I, 1)))
   U7_gggga(N, M, I, J, D, N1, M1, is_out_ag(I1, -(I, 1))) -> U8_gggga(N, M, I, J, D, N1, M1, I1, is_in_ag(J1, -(J, 1)))
   U8_gggga(N, M, I, J, D, N1, M1, I1, is_out_ag(J1, -(J, 1))) -> U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   distance_in_aaaaa(X1, X2, 1, J, D) -> U1_aaaaa(X1, X2, J, D, is_in_aa(D, -(J, +(1, 1))))
   is_in_aa(X0, X1) -> is_out_aa(X0, X1)
   U1_aaaaa(X1, X2, J, D, is_out_aa(D, -(J, +(1, 1)))) -> distance_out_aaaaa(X1, X2, 1, J, D)
   distance_in_aaaaa(X3, M, I, M, D) -> U2_aaaaa(X3, M, I, D, is_in_aa(D, +(M, -(I, +(2, 1)))))
   U2_aaaaa(X3, M, I, D, is_out_aa(D, +(M, -(I, +(2, 1))))) -> distance_out_aaaaa(X3, M, I, M, D)
   distance_in_aaaaa(N, M, N, J, D) -> U3_aaaaa(N, M, J, D, is_in_aa(D, +(N, -(*(2, M), -(J, +(2, 1))))))
   U3_aaaaa(N, M, J, D, is_out_aa(D, +(N, -(*(2, M), -(J, +(2, 1)))))) -> distance_out_aaaaa(N, M, N, J, D)
   distance_in_aaaaa(N, M, I, 1, D) -> U4_aaaaa(N, M, I, D, is_in_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1))))))
   U4_aaaaa(N, M, I, D, is_out_aa(D, +(*(2, N), -(*(2, M), -(I, +(3, 1)))))) -> distance_out_aaaaa(N, M, I, 1, D)
   distance_in_aaaaa(N, M, I, J, D) -> U5_aaaaa(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_aaaaa(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_aaaaa(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_aaaaa(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_aaaaa(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_aaaaa(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_aaaaa(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_in_aaaaa(N1, M1, I1, J1, D1))
   U9_aaaaa(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_aaaaa(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_aaaaa(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_aaaaa(N, M, I, J, D)
   U9_gggga(N, M, I, J, D, N1, M1, I1, J1, distance_out_aaaaa(N1, M1, I1, J1, D1)) -> U10_gggga(N, M, I, J, D, is_in_aa(D, +(*(2, N), +(*(2, M), -(D1, 4)))))
   U10_gggga(N, M, I, J, D, is_out_aa(D, +(*(2, N), +(*(2, M), -(D1, 4))))) -> distance_out_gggga(N, M, I, J, D)

The argument filtering Pi contains the following mapping:
distance_in_gggga(x1, x2, x3, x4, x5)  =  distance_in_gggga(x1, x2, x3, x4)

1  =  1

U1_gggga(x1, x2, x3, x4, x5)  =  U1_gggga(x5)

is_in_ag(x1, x2)  =  is_in_ag(x2)

is_out_ag(x1, x2)  =  is_out_ag

-(x1, x2)  =  -(x1, x2)

+(x1, x2)  =  +(x1, x2)

distance_out_gggga(x1, x2, x3, x4, x5)  =  distance_out_gggga

U2_gggga(x1, x2, x3, x4, x5)  =  U2_gggga(x5)

2  =  2

U3_gggga(x1, x2, x3, x4, x5)  =  U3_gggga(x5)

*(x1, x2)  =  *(x1, x2)

U4_gggga(x1, x2, x3, x4, x5)  =  U4_gggga(x5)

3  =  3

U5_gggga(x1, x2, x3, x4, x5, x6)  =  U5_gggga(x2, x3, x4, x6)

U6_gggga(x1, x2, x3, x4, x5, x6, x7)  =  U6_gggga(x3, x4, x7)

U7_gggga(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_gggga(x4, x8)

U8_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_gggga(x9)

U9_gggga(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_gggga(x10)

distance_in_aaaaa(x1, x2, x3, x4, x5)  =  distance_in_aaaaa

U1_aaaaa(x1, x2, x3, x4, x5)  =  U1_aaaaa(x5)

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

distance_out_aaaaa(x1, x2, x3, x4, x5)  =  distance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5)  =  U2_aaaaa(x5)

U3_aaaaa(x1, x2, x3, x4, x5)  =  U3_aaaaa(x5)

U4_aaaaa(x1, x2, x3, x4, x5)  =  U4_aaaaa(x5)

U5_aaaaa(x1, x2, x3, x4, x5, x6)  =  U5_aaaaa(x6)

U6_aaaaa(x1, x2, x3, x4, x5, x6, x7)  =  U6_aaaaa(x7)

U7_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_aaaaa(x8)

U8_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_aaaaa(x9)

U9_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U9_aaaaa(x10)

U10_aaaaa(x1, x2, x3, x4, x5, x6)  =  U10_aaaaa(x6)

U10_gggga(x1, x2, x3, x4, x5, x6)  =  U10_gggga(x6)

DISTANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_AAAAA

U5_AAAAA(x1, x2, x3, x4, x5, x6)  =  U5_AAAAA(x6)

U6_AAAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAAA(x7)

U7_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_AAAAA(x8)

U8_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_AAAAA(x9)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(349) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(350)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_AAAAA(N, M, I, J, D) -> U5_AAAAA(N, M, I, J, D, is_in_aa(N1, -(N, 2)))
   U5_AAAAA(N, M, I, J, D, is_out_aa(N1, -(N, 2))) -> U6_AAAAA(N, M, I, J, D, N1, is_in_aa(M1, -(M, 2)))
   U6_AAAAA(N, M, I, J, D, N1, is_out_aa(M1, -(M, 2))) -> U7_AAAAA(N, M, I, J, D, N1, M1, is_in_aa(I1, -(I, 1)))
   U7_AAAAA(N, M, I, J, D, N1, M1, is_out_aa(I1, -(I, 1))) -> U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_in_aa(J1, -(J, 1)))
   U8_AAAAA(N, M, I, J, D, N1, M1, I1, is_out_aa(J1, -(J, 1))) -> DISTANCE_IN_AAAAA(N1, M1, I1, J1, D1)

The TRS R consists of the following rules:

   is_in_aa(X0, X1) -> is_out_aa(X0, X1)

The argument filtering Pi contains the following mapping:
1  =  1

-(x1, x2)  =  -(x1, x2)

2  =  2

is_in_aa(x1, x2)  =  is_in_aa

is_out_aa(x1, x2)  =  is_out_aa

DISTANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  DISTANCE_IN_AAAAA

U5_AAAAA(x1, x2, x3, x4, x5, x6)  =  U5_AAAAA(x6)

U6_AAAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAAA(x7)

U7_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  U7_AAAAA(x8)

U8_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_AAAAA(x9)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(351) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(352)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCE_IN_AAAAA -> U5_AAAAA(is_in_aa)
   U5_AAAAA(is_out_aa) -> U6_AAAAA(is_in_aa)
   U6_AAAAA(is_out_aa) -> U7_AAAAA(is_in_aa)
   U7_AAAAA(is_out_aa) -> U8_AAAAA(is_in_aa)
   U8_AAAAA(is_out_aa) -> DISTANCE_IN_AAAAA

The TRS R consists of the following rules:

   is_in_aa -> is_out_aa

The set Q consists of the following terms:

   is_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(353) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule DISTANCE_IN_AAAAA -> U5_AAAAA(is_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa),DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa))


----------------------------------------

(354)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_AAAAA(is_out_aa) -> U6_AAAAA(is_in_aa)
   U6_AAAAA(is_out_aa) -> U7_AAAAA(is_in_aa)
   U7_AAAAA(is_out_aa) -> U8_AAAAA(is_in_aa)
   U8_AAAAA(is_out_aa) -> DISTANCE_IN_AAAAA
   DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa)

The TRS R consists of the following rules:

   is_in_aa -> is_out_aa

The set Q consists of the following terms:

   is_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(355) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U5_AAAAA(is_out_aa) -> U6_AAAAA(is_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (U5_AAAAA(is_out_aa) -> U6_AAAAA(is_out_aa),U5_AAAAA(is_out_aa) -> U6_AAAAA(is_out_aa))


----------------------------------------

(356)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAAAA(is_out_aa) -> U7_AAAAA(is_in_aa)
   U7_AAAAA(is_out_aa) -> U8_AAAAA(is_in_aa)
   U8_AAAAA(is_out_aa) -> DISTANCE_IN_AAAAA
   DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa)
   U5_AAAAA(is_out_aa) -> U6_AAAAA(is_out_aa)

The TRS R consists of the following rules:

   is_in_aa -> is_out_aa

The set Q consists of the following terms:

   is_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(357) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U6_AAAAA(is_out_aa) -> U7_AAAAA(is_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (U6_AAAAA(is_out_aa) -> U7_AAAAA(is_out_aa),U6_AAAAA(is_out_aa) -> U7_AAAAA(is_out_aa))


----------------------------------------

(358)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U7_AAAAA(is_out_aa) -> U8_AAAAA(is_in_aa)
   U8_AAAAA(is_out_aa) -> DISTANCE_IN_AAAAA
   DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa)
   U5_AAAAA(is_out_aa) -> U6_AAAAA(is_out_aa)
   U6_AAAAA(is_out_aa) -> U7_AAAAA(is_out_aa)

The TRS R consists of the following rules:

   is_in_aa -> is_out_aa

The set Q consists of the following terms:

   is_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(359) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U7_AAAAA(is_out_aa) -> U8_AAAAA(is_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (U7_AAAAA(is_out_aa) -> U8_AAAAA(is_out_aa),U7_AAAAA(is_out_aa) -> U8_AAAAA(is_out_aa))


----------------------------------------

(360)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U8_AAAAA(is_out_aa) -> DISTANCE_IN_AAAAA
   DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa)
   U5_AAAAA(is_out_aa) -> U6_AAAAA(is_out_aa)
   U6_AAAAA(is_out_aa) -> U7_AAAAA(is_out_aa)
   U7_AAAAA(is_out_aa) -> U8_AAAAA(is_out_aa)

The TRS R consists of the following rules:

   is_in_aa -> is_out_aa

The set Q consists of the following terms:

   is_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(361) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(362)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U8_AAAAA(is_out_aa) -> DISTANCE_IN_AAAAA
   DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa)
   U5_AAAAA(is_out_aa) -> U6_AAAAA(is_out_aa)
   U6_AAAAA(is_out_aa) -> U7_AAAAA(is_out_aa)
   U7_AAAAA(is_out_aa) -> U8_AAAAA(is_out_aa)

R is empty.
The set Q consists of the following terms:

   is_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(363) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   is_in_aa


----------------------------------------

(364)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U8_AAAAA(is_out_aa) -> DISTANCE_IN_AAAAA
   DISTANCE_IN_AAAAA -> U5_AAAAA(is_out_aa)
   U5_AAAAA(is_out_aa) -> U6_AAAAA(is_out_aa)
   U6_AAAAA(is_out_aa) -> U7_AAAAA(is_out_aa)
   U7_AAAAA(is_out_aa) -> U8_AAAAA(is_out_aa)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(365) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(distance X1 X2 (1) J D)",
                "(',' (!) (is D (- J (+ (1) (1)))))"
            ],
            [
                "(distance X3 M I M D)",
                "(',' (!) (is D (+ M (- I (+ (2) (1))))))"
            ],
            [
                "(distance N M N J D)",
                "(',' (!) (is D (+ N (- (* (2) M) (- J (+ (2) (1)))))))"
            ],
            [
                "(distance N M I (1) D)",
                "(',' (!) (is D (+ (* (2) N) (- (* (2) M) (- I (+ (3) (1)))))))"
            ],
            [
                "(distance N M I J D)",
                "(',' (is N1 (- N (2))) (',' (is M1 (- M (2))) (',' (is I1 (- I (1))) (',' (is J1 (- J (1))) (',' (distance N1 M1 I1 J1 D1) (is D (+ (* (2) N) (+ (* (2) M) (- D1 (4))))))))))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "3200": {
                "goal": [],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T103",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T100",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T101",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T102",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "3"
                                                                },
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "1"
                                                                }
                                                            ],
                                                            "type": "PlainIntegerOperation",
                                                            "operation": "+"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T103",
                        "T52",
                        "T100",
                        "T51",
                        "T101",
                        "T54",
                        "T102"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X110"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T103",
                        "T100",
                        "T51",
                        "T102",
                        "T52",
                        "T57",
                        "T101",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1141": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (is T34 (+ T30 (- (* (2) T31) (- T32 (+ (2) (1)))))))"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T30 T31 T30 T32 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T30 T31 T30 T32 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T30 T31 T30 T32 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T30 T31 T30 T32 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31",
                        "T32"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19"
                    ],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "790": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (is T24 (+ T21 (- T22 (+ (2) (1))))))"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(distance T20 T21 T22 T21 T5)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T20 T21 T22 T21 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T20 T21 T22 T21 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(distance T20 T21 T22 T21 T5)",
                        "(distance X8 X9 (1) X10 X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T20",
                        "T21",
                        "T22"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11"
                    ],
                    "exprvars": []
                }
            },
            "1855": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T45",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "2"
                                            },
                                            {
                                                "name": "T40",
                                                "type": "PlainIntegerVariable"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "*"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T41",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T42",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "3"
                                                            },
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "1"
                                                            }
                                                        ],
                                                        "type": "PlainIntegerOperation",
                                                        "operation": "+"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T42",
                        "T41",
                        "T40",
                        "T45"
                    ]
                }
            },
            "1932": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X65 (- T69 (+ (1) (1)))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X65 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T52",
                        "T51",
                        "T54",
                        "T69"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X65"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T69",
                        "T52",
                        "T57",
                        "T68",
                        "T51",
                        "T67",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1854": {
                "goal": [],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T42",
                        "T41",
                        "T40"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27"
                    ],
                    "exprvars": [
                        "T42",
                        "T41",
                        "T40"
                    ]
                }
            },
            "1931": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T57 T58 T59 T60 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "871": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19"
                    ],
                    "exprvars": []
                }
            },
            "1853": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T45",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "2"
                                            },
                                            {
                                                "name": "T40",
                                                "type": "PlainIntegerVariable"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "*"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T41",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T42",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "3"
                                                            },
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "1"
                                                            }
                                                        ],
                                                        "type": "PlainIntegerOperation",
                                                        "operation": "+"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T42",
                        "T41",
                        "T40",
                        "T45"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27"
                    ],
                    "exprvars": [
                        "T42",
                        "T41",
                        "T40",
                        "T45"
                    ]
                }
            },
            "1852": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1851": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T44 (+ (* (2) T40) (- (* (2) T41) (- T42 (+ (3) (1))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T40",
                        "T41",
                        "T42"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27"
                    ],
                    "exprvars": []
                }
            },
            "1333": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T35",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T30",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T31",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T32",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "2"
                                                            },
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "1"
                                                            }
                                                        ],
                                                        "type": "PlainIntegerOperation",
                                                        "operation": "+"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T31",
                        "T30",
                        "T35",
                        "T32"
                    ]
                }
            },
            "1850": {
                "goal": [{
                    "clause": 4,
                    "scope": 1,
                    "term": "(distance T1 T2 T3 T4 T5)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35"
                    ],
                    "exprvars": []
                }
            },
            "1298": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T34 (+ T30 (- (* (2) T31) (- T32 (+ (2) (1))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T30 T31 T30 T32 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T30 T31 T30 T32 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31",
                        "T32"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19"
                    ],
                    "exprvars": []
                }
            },
            "1859": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1936": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T70",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T69",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "1"
                                                },
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "1"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T71",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T51",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T52",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T70",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T70",
                        "T53",
                        "T58",
                        "T69",
                        "T51",
                        "T52",
                        "T57",
                        "T68",
                        "T67",
                        "T60",
                        "T71",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1858": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X47 (- T52 (2))) (',' (is X48 (- T53 (1))) (',' (is X49 (- T54 (1))) (',' (distance T57 X47 X48 X49 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4)))))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T57",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T51",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "type": "PlainIntegerConstant",
                                        "value": "2"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "-"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T53",
                        "T52",
                        "T57",
                        "T51",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X46",
                        "X47",
                        "X48",
                        "X49",
                        "X50"
                    ],
                    "exprvars": [
                        "T57",
                        "T51"
                    ]
                }
            },
            "1935": {
                "goal": [],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T70",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T69",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "1"
                                                },
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "1"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T70",
                        "T53",
                        "T69",
                        "T52",
                        "T51",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X65"
                    ],
                    "exprvars": [
                        "T70",
                        "T53",
                        "T58",
                        "T69",
                        "T51",
                        "T52",
                        "T57",
                        "T68",
                        "T67",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1857": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1934": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T70",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T69",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "1"
                                                },
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "1"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T71",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T51",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T52",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T70",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T70",
                        "T53",
                        "T69",
                        "T52",
                        "T51",
                        "T71",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X65"
                    ],
                    "exprvars": [
                        "T70",
                        "T53",
                        "T58",
                        "T69",
                        "T51",
                        "T52",
                        "T57",
                        "T68",
                        "T67",
                        "T60",
                        "T71",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1856": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X46 (- T51 (2))) (',' (is X47 (- T52 (2))) (',' (is X48 (- T53 (1))) (',' (is X49 (- T54 (1))) (',' (distance X46 X47 X48 X49 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T51",
                        "T52",
                        "T53",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X46",
                        "X47",
                        "X48",
                        "X49",
                        "X50"
                    ],
                    "exprvars": []
                }
            },
            "1933": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T56 (+ (* (2) T51) (+ (* (2) T52) (- T70 (4)))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T70",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T69",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "1"
                                                },
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "1"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T70",
                        "T53",
                        "T69",
                        "T52",
                        "T51",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X65"
                    ],
                    "exprvars": [
                        "T70",
                        "T53",
                        "T58",
                        "T69",
                        "T52",
                        "T57",
                        "T68",
                        "T51",
                        "T67",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "11": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (is T14 (- T12 (+ (1) (1)))))"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(distance T10 T11 (1) T12 T5)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(distance T10 T11 (1) T12 T5)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T10 T11 (1) T12 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T10 T11 (1) T12 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T10",
                        "T11",
                        "T12"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "12": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(distance T1 T2 T3 T4 T5)",
                        "(distance X8 X9 (1) X10 X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11"
                    ],
                    "exprvars": []
                }
            },
            "13": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T14 (- T12 (+ (1) (1))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": [],
                    "exprvars": []
                }
            },
            "14": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3211": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3210": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T56 (+ (* (2) T51) (+ (* (2) T52) (- T128 (4)))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X106 X107 X108 (1) X109)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T128",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "2"
                                            },
                                            {
                                                "name": "T113",
                                                "type": "PlainIntegerVariable"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "*"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T114",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T124",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "4"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "+"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T115",
                        "T53",
                        "T114",
                        "T52",
                        "T116",
                        "T51",
                        "T128",
                        "T54",
                        "T113",
                        "T124"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X106",
                        "X107",
                        "X108",
                        "X109",
                        "X138"
                    ],
                    "exprvars": [
                        "T114",
                        "T128",
                        "T113",
                        "T124"
                    ]
                }
            },
            "1943": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X80 (+ T79 (- T80 (+ (2) (1))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X80 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T78 T79 T80 T79 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T52",
                        "T51",
                        "T54",
                        "T78",
                        "T79",
                        "T80"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X80"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T80",
                        "T52",
                        "T57",
                        "T79",
                        "T51",
                        "T78",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "3208": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X138 (+ (* (2) T113) (+ (* (2) T114) (- T124 (4))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X138 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X106 X107 X108 (1) X109)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T115",
                        "T53",
                        "T114",
                        "T52",
                        "T116",
                        "T51",
                        "T54",
                        "T113",
                        "T124"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X106",
                        "X107",
                        "X108",
                        "X109",
                        "X138"
                    ],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(distance T1 T2 T3 T4 T5)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1865": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1942": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T57 T58 T59 T60 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T57 T58 T59 T60 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "3207": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(distance T117 T118 T119 T120 X137)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T117",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T113",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T118",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T114",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T119",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T115",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T120",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T116",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T120",
                        "T117",
                        "T119",
                        "T118"
                    ],
                    "free": ["X137"],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T120",
                        "T114",
                        "T116",
                        "T51",
                        "T113",
                        "T118",
                        "T115",
                        "T52",
                        "T57",
                        "T117",
                        "T119",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1864": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X46",
                        "X47",
                        "X48",
                        "X49",
                        "X50"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1941": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_2) (is X80 (+ T79 (- T80 (+ (2) (1)))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X80 (4))))))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (distance T78 T79 T80 T79 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (distance T78 T79 T80 T79 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (distance T78 T79 T80 T79 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T78 T79 T80 T79 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T52",
                        "T51",
                        "T54",
                        "T78",
                        "T79",
                        "T80"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X80"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T80",
                        "T52",
                        "T57",
                        "T79",
                        "T51",
                        "T78",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "3206": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (distance T117 T118 T119 T120 X137) (is X138 (+ (* (2) T113) (+ (* (2) T114) (- X137 (4)))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X138 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X106 X107 X108 (1) X109)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T117",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T113",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T118",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T114",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T119",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T115",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T120",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T116",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T115",
                        "T53",
                        "T120",
                        "T114",
                        "T52",
                        "T116",
                        "T51",
                        "T117",
                        "T119",
                        "T54",
                        "T113",
                        "T118"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X106",
                        "X107",
                        "X108",
                        "X109",
                        "X138",
                        "X133",
                        "X134",
                        "X135",
                        "X136",
                        "X137"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T120",
                        "T114",
                        "T116",
                        "T51",
                        "T113",
                        "T118",
                        "T115",
                        "T52",
                        "T57",
                        "T117",
                        "T119",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1863": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3205": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (is X136 (- T116 (1))) (',' (distance T117 T118 T119 X136 X137) (is X138 (+ (* (2) T113) (+ (* (2) T114) (- X137 (4))))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X138 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X106 X107 X108 (1) X109)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T117",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T113",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T118",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T114",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T119",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T115",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T115",
                        "T53",
                        "T114",
                        "T52",
                        "T116",
                        "T51",
                        "T117",
                        "T119",
                        "T54",
                        "T113",
                        "T118"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X106",
                        "X107",
                        "X108",
                        "X109",
                        "X138",
                        "X133",
                        "X134",
                        "X135",
                        "X136",
                        "X137"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T114",
                        "T116",
                        "T51",
                        "T113",
                        "T118",
                        "T115",
                        "T52",
                        "T57",
                        "T117",
                        "T119",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1862": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X49 (- T54 (1))) (',' (distance T57 T58 T59 X49 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4)))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T54",
                        "T59"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X46",
                        "X47",
                        "X48",
                        "X49",
                        "X50"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T59"
                    ]
                }
            },
            "3204": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (is X135 (- T115 (1))) (',' (is X136 (- T116 (1))) (',' (distance T117 T118 X135 X136 X137) (is X138 (+ (* (2) T113) (+ (* (2) T114) (- X137 (4)))))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X138 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X106 X107 X108 (1) X109)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T117",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T113",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T118",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T114",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T115",
                        "T53",
                        "T114",
                        "T52",
                        "T116",
                        "T51",
                        "T117",
                        "T54",
                        "T113",
                        "T118"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X106",
                        "X107",
                        "X108",
                        "X109",
                        "X138",
                        "X133",
                        "X134",
                        "X135",
                        "X136",
                        "X137"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T114",
                        "T116",
                        "T51",
                        "T113",
                        "T118",
                        "T115",
                        "T52",
                        "T57",
                        "T117",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1861": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3203": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (is X134 (- T114 (2))) (',' (is X135 (- T115 (1))) (',' (is X136 (- T116 (1))) (',' (distance T117 X134 X135 X136 X137) (is X138 (+ (* (2) T113) (+ (* (2) T114) (- X137 (4))))))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X138 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X106 X107 X108 (1) X109)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T117",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T113",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T115",
                        "T53",
                        "T114",
                        "T52",
                        "T116",
                        "T51",
                        "T117",
                        "T54",
                        "T113"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X106",
                        "X107",
                        "X108",
                        "X109",
                        "X138",
                        "X133",
                        "X134",
                        "X135",
                        "X136",
                        "X137"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T114",
                        "T116",
                        "T51",
                        "T113",
                        "T115",
                        "T52",
                        "T57",
                        "T117",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "6": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1860": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X48 (- T53 (1))) (',' (is X49 (- T54 (1))) (',' (distance T57 T58 X48 X49 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X46",
                        "X47",
                        "X48",
                        "X49",
                        "X50"
                    ],
                    "exprvars": [
                        "T58",
                        "T52",
                        "T57",
                        "T51"
                    ]
                }
            },
            "3202": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (is X133 (- T113 (2))) (',' (is X134 (- T114 (2))) (',' (is X135 (- T115 (1))) (',' (is X136 (- T116 (1))) (',' (distance X133 X134 X135 X136 X137) (is X138 (+ (* (2) T113) (+ (* (2) T114) (- X137 (4)))))))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X138 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X106 X107 X108 (1) X109)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T52",
                        "T51",
                        "T54",
                        "T113",
                        "T114",
                        "T115",
                        "T116"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X106",
                        "X107",
                        "X108",
                        "X109",
                        "X138",
                        "X133",
                        "X134",
                        "X135",
                        "X136",
                        "X137"
                    ],
                    "exprvars": [
                        "T115",
                        "T53",
                        "T58",
                        "T114",
                        "T52",
                        "T57",
                        "T116",
                        "T51",
                        "T60",
                        "T54",
                        "T113",
                        "T59"
                    ]
                }
            },
            "3201": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T103",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T100",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T101",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T102",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "3"
                                                                },
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "1"
                                                                }
                                                            ],
                                                            "type": "PlainIntegerOperation",
                                                            "operation": "+"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T104",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T51",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T52",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T103",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T103",
                        "T100",
                        "T51",
                        "T102",
                        "T104",
                        "T52",
                        "T57",
                        "T101",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1949": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T57 T58 T59 T60 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T57 T58 T59 T60 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T57 T58 T59 T60 X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1948": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_2) (is X95 (+ T89 (- (* (2) T90) (- T91 (+ (2) (1))))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X95 (4))))))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (distance T89 T90 T89 T91 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (distance T89 T90 T89 T91 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T89 T90 T89 T91 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T89 T90 T89 T91 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T52",
                        "T51",
                        "T54",
                        "T89",
                        "T90",
                        "T91"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X95"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T91",
                        "T52",
                        "T57",
                        "T90",
                        "T51",
                        "T89",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "925": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(distance T20 T21 T22 T21 T5)",
                        "(distance X8 X9 (1) X10 X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T25",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T21",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "name": "T22",
                                                "type": "PlainIntegerVariable"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "1"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "+"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T20",
                        "T25",
                        "T22",
                        "T21"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11"
                    ],
                    "exprvars": [
                        "T25",
                        "T22",
                        "T21"
                    ]
                }
            },
            "1947": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T81",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T79",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "name": "T80",
                                                    "type": "PlainIntegerVariable"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "1"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "+"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T82",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T51",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T52",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T81",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T81",
                        "T53",
                        "T58",
                        "T51",
                        "T80",
                        "T52",
                        "T57",
                        "T79",
                        "T78",
                        "T60",
                        "T82",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1946": {
                "goal": [],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T78 T79 T80 T79 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T81",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T79",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "name": "T80",
                                                    "type": "PlainIntegerVariable"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "1"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "+"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T81",
                        "T53",
                        "T80",
                        "T52",
                        "T79",
                        "T51",
                        "T78",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X80"
                    ],
                    "exprvars": [
                        "T81",
                        "T53",
                        "T58",
                        "T51",
                        "T80",
                        "T52",
                        "T57",
                        "T79",
                        "T78",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1307": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1945": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T78 T79 T80 T79 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T81",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T79",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "name": "T80",
                                                    "type": "PlainIntegerVariable"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "1"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "+"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T82",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T51",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T52",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T81",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T81",
                        "T53",
                        "T80",
                        "T52",
                        "T79",
                        "T51",
                        "T78",
                        "T82",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X80"
                    ],
                    "exprvars": [
                        "T81",
                        "T53",
                        "T58",
                        "T51",
                        "T80",
                        "T52",
                        "T57",
                        "T79",
                        "T78",
                        "T60",
                        "T82",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1944": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T56 (+ (* (2) T51) (+ (* (2) T52) (- T81 (4)))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T78 T79 T80 T79 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T81",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T79",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "name": "T80",
                                                    "type": "PlainIntegerVariable"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "1"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "+"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T81",
                        "T53",
                        "T80",
                        "T52",
                        "T79",
                        "T51",
                        "T78",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X80"
                    ],
                    "exprvars": [
                        "T81",
                        "T53",
                        "T58",
                        "T80",
                        "T52",
                        "T57",
                        "T79",
                        "T51",
                        "T78",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "3209": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1954": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T92",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T89",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T90",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T91",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "2"
                                                                },
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "1"
                                                                }
                                                            ],
                                                            "type": "PlainIntegerOperation",
                                                            "operation": "+"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T93",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T51",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T52",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T92",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T92",
                        "T53",
                        "T58",
                        "T90",
                        "T51",
                        "T91",
                        "T52",
                        "T57",
                        "T89",
                        "T60",
                        "T93",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1953": {
                "goal": [],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T89 T90 T89 T91 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T89 T90 T89 T91 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T92",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T89",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T90",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T91",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "2"
                                                                },
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "1"
                                                                }
                                                            ],
                                                            "type": "PlainIntegerOperation",
                                                            "operation": "+"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T92",
                        "T53",
                        "T91",
                        "T52",
                        "T90",
                        "T51",
                        "T89",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X95"
                    ],
                    "exprvars": [
                        "T92",
                        "T53",
                        "T58",
                        "T90",
                        "T51",
                        "T91",
                        "T52",
                        "T57",
                        "T89",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1952": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T89 T90 T89 T91 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T89 T90 T89 T91 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T92",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T89",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T90",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T91",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "2"
                                                                },
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "1"
                                                                }
                                                            ],
                                                            "type": "PlainIntegerOperation",
                                                            "operation": "+"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T93",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T51",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T52",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T92",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T92",
                        "T53",
                        "T91",
                        "T52",
                        "T90",
                        "T51",
                        "T89",
                        "T93",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X95"
                    ],
                    "exprvars": [
                        "T92",
                        "T53",
                        "T58",
                        "T90",
                        "T51",
                        "T91",
                        "T52",
                        "T57",
                        "T89",
                        "T60",
                        "T93",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1951": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T56 (+ (* (2) T51) (+ (* (2) T52) (- T92 (4)))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T89 T90 T89 T91 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T89 T90 T89 T91 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T92",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T89",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T90",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T91",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "2"
                                                                },
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "1"
                                                                }
                                                            ],
                                                            "type": "PlainIntegerOperation",
                                                            "operation": "+"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T92",
                        "T53",
                        "T91",
                        "T52",
                        "T90",
                        "T51",
                        "T89",
                        "T54"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X95"
                    ],
                    "exprvars": [
                        "T92",
                        "T53",
                        "T58",
                        "T91",
                        "T52",
                        "T57",
                        "T90",
                        "T51",
                        "T89",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1950": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X95 (+ T89 (- (* (2) T90) (- T91 (+ (2) (1)))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X95 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T89 T90 T89 T91 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T89 T90 T89 T91 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T52",
                        "T51",
                        "T54",
                        "T89",
                        "T90",
                        "T91"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X95"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T91",
                        "T52",
                        "T57",
                        "T90",
                        "T51",
                        "T89",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "896": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T24 (+ T21 (- T22 (+ (2) (1)))))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(distance T20 T21 T22 T21 T5)",
                        "(distance X8 X9 (1) X10 X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T20",
                        "T21",
                        "T22"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11"
                    ],
                    "exprvars": []
                }
            },
            "3214": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T128",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T113",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T114",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T124",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T129",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T51",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T52",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T128",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T114",
                        "T52",
                        "T51",
                        "T128",
                        "T113",
                        "T124",
                        "T129"
                    ]
                }
            },
            "3213": {
                "goal": [],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X106 X107 X108 (1) X109)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T128",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "2"
                                            },
                                            {
                                                "name": "T113",
                                                "type": "PlainIntegerVariable"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "*"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T114",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T124",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "4"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "+"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T115",
                        "T53",
                        "T114",
                        "T52",
                        "T116",
                        "T51",
                        "T128",
                        "T54",
                        "T113",
                        "T124"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X106",
                        "X107",
                        "X108",
                        "X109",
                        "X138"
                    ],
                    "exprvars": [
                        "T114",
                        "T52",
                        "T51",
                        "T128",
                        "T113",
                        "T124"
                    ]
                }
            },
            "3212": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ],
                        [
                            "(distance T113 T114 T115 T116 X50)",
                            "(distance X106 X107 X108 (1) X109)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T128",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T113",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T114",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T124",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T129",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T51",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T52",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T128",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T115",
                        "T53",
                        "T114",
                        "T52",
                        "T116",
                        "T51",
                        "T128",
                        "T54",
                        "T113",
                        "T124",
                        "T129"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X106",
                        "X107",
                        "X108",
                        "X109",
                        "X138"
                    ],
                    "exprvars": [
                        "T114",
                        "T52",
                        "T51",
                        "T128",
                        "T113",
                        "T124",
                        "T129"
                    ]
                }
            },
            "932": {
                "goal": [],
                "kb": {
                    "nonunifying": [[
                        "(distance T20 T21 T22 T21 T5)",
                        "(distance X8 X9 (1) X10 X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T20",
                        "T22",
                        "T21"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11"
                    ],
                    "exprvars": [
                        "T22",
                        "T21"
                    ]
                }
            },
            "3199": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T103",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T100",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T101",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T102",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "3"
                                                                },
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "1"
                                                                }
                                                            ],
                                                            "type": "PlainIntegerOperation",
                                                            "operation": "+"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T104",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T51",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T52",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T103",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "+"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T104",
                        "T53",
                        "T103",
                        "T52",
                        "T100",
                        "T51",
                        "T101",
                        "T54",
                        "T102"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X110"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T103",
                        "T100",
                        "T51",
                        "T102",
                        "T104",
                        "T52",
                        "T57",
                        "T101",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "3198": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T56 (+ (* (2) T51) (+ (* (2) T52) (- T103 (4)))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T103",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "type": "PlainIntegerConstant",
                                                    "value": "2"
                                                },
                                                {
                                                    "name": "T100",
                                                    "type": "PlainIntegerVariable"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "*"
                                        },
                                        {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "type": "PlainIntegerConstant",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "name": "T101",
                                                            "type": "PlainIntegerVariable"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "*"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "name": "T102",
                                                            "type": "PlainIntegerVariable"
                                                        },
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "3"
                                                                },
                                                                {
                                                                    "type": "PlainIntegerConstant",
                                                                    "value": "1"
                                                                }
                                                            ],
                                                            "type": "PlainIntegerOperation",
                                                            "operation": "+"
                                                        }
                                                    ],
                                                    "type": "PlainIntegerOperation",
                                                    "operation": "-"
                                                }
                                            ],
                                            "type": "PlainIntegerOperation",
                                            "operation": "-"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T103",
                        "T52",
                        "T100",
                        "T51",
                        "T101",
                        "T54",
                        "T102"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X110"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T103",
                        "T52",
                        "T100",
                        "T57",
                        "T51",
                        "T101",
                        "T60",
                        "T54",
                        "T102",
                        "T59"
                    ]
                }
            },
            "3197": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X110 (+ (* (2) T100) (- (* (2) T101) (- T102 (+ (3) (1)))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X110 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T52",
                        "T51",
                        "T54",
                        "T100",
                        "T101",
                        "T102"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X110"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T52",
                        "T100",
                        "T57",
                        "T51",
                        "T101",
                        "T60",
                        "T54",
                        "T102",
                        "T59"
                    ]
                }
            },
            "3196": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(',' (distance T57 T58 T59 T60 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T57 T58 T59 T60 X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T57 T58 T59 T60 X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T57 T58 T59 T60 X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ],
                        [
                            "(distance T57 T58 T59 T60 X50)",
                            "(distance X106 X107 X108 (1) X109)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X106",
                        "X107",
                        "X108",
                        "X109"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T52",
                        "T57",
                        "T51",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "3195": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_2) (is X110 (+ (* (2) T100) (- (* (2) T101) (- T102 (+ (3) (1))))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X110 (4))))))"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (distance T100 T101 T102 (1) X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X61 X62 (1) X63 X64)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X76 X77 X78 X77 X79)"
                        ],
                        [
                            "(distance T100 T101 T102 (1) X50)",
                            "(distance X91 X92 X91 X93 X94)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T52",
                        "T51",
                        "T54",
                        "T100",
                        "T101",
                        "T102"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X61",
                        "X62",
                        "X63",
                        "X64",
                        "X76",
                        "X77",
                        "X78",
                        "X79",
                        "X91",
                        "X92",
                        "X93",
                        "X94",
                        "X110"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T52",
                        "T100",
                        "T57",
                        "T51",
                        "T101",
                        "T60",
                        "T54",
                        "T102",
                        "T59"
                    ]
                }
            },
            "1249": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27"
                    ],
                    "exprvars": []
                }
            },
            "663": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T15",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T12",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "1"
                                            },
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "1"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "+"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "-"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T12",
                        "T15"
                    ],
                    "free": [],
                    "exprvars": [
                        "T12",
                        "T15"
                    ]
                }
            },
            "1322": {
                "goal": [],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T30 T31 T30 T32 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T30 T31 T30 T32 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T31",
                        "T30",
                        "T32"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19"
                    ],
                    "exprvars": [
                        "T31",
                        "T30",
                        "T32"
                    ]
                }
            },
            "941": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T25",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T21",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "name": "T22",
                                                "type": "PlainIntegerVariable"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "1"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "+"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T25",
                        "T22",
                        "T21"
                    ]
                }
            },
            "1320": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T30 T31 T30 T32 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T30 T31 T30 T32 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T35",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T30",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T31",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T32",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "2"
                                                            },
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "1"
                                                            }
                                                        ],
                                                        "type": "PlainIntegerOperation",
                                                        "operation": "+"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T31",
                        "T30",
                        "T35",
                        "T32"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19"
                    ],
                    "exprvars": [
                        "T31",
                        "T30",
                        "T35",
                        "T32"
                    ]
                }
            },
            "668": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": [],
                    "exprvars": ["T12"]
                }
            },
            "669": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T15",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T12",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "1"
                                            },
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "1"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "+"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "-"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T12",
                        "T15"
                    ]
                }
            },
            "1928": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_2) (is X65 (- T69 (+ (1) (1))))) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X65 (4))))))"
                    },
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(',' (distance T67 T68 (1) T69 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (distance T67 T68 (1) T69 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (distance T67 T68 (1) T69 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (distance T67 T68 (1) T69 X50) (is T56 (+ (* (2) T51) (+ (* (2) T52) (- X50 (4))))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ],
                        [
                            "(distance T51 T52 T53 T54 T5)",
                            "(distance X32 X33 X34 (1) X35)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T57",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T58",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T59",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T60",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T51",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T52",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T53",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T54",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T53",
                        "T52",
                        "T51",
                        "T54",
                        "T67",
                        "T68",
                        "T69"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X32",
                        "X33",
                        "X34",
                        "X35",
                        "X50",
                        "X65"
                    ],
                    "exprvars": [
                        "T53",
                        "T58",
                        "T69",
                        "T52",
                        "T57",
                        "T68",
                        "T51",
                        "T67",
                        "T60",
                        "T54",
                        "T59"
                    ]
                }
            },
            "1849": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (is T44 (+ (* (2) T40) (- (* (2) T41) (- T42 (+ (3) (1)))))))"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T40 T41 T42 (1) T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X8 X9 (1) X10 X11)"
                        ],
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X16 X17 X18 X17 X19)"
                        ],
                        [
                            "(distance T40 T41 T42 (1) T5)",
                            "(distance X24 X25 X24 X26 X27)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T40",
                        "T41",
                        "T42"
                    ],
                    "free": [
                        "X8",
                        "X9",
                        "X10",
                        "X11",
                        "X16",
                        "X17",
                        "X18",
                        "X19",
                        "X24",
                        "X25",
                        "X26",
                        "X27"
                    ],
                    "exprvars": []
                }
            },
            "903": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 6,
                "label": "CASE"
            },
            {
                "from": 6,
                "to": 11,
                "label": "EVAL with clause\ndistance(X8, X9, 1, X10, X11) :- ','(!_1, is(X11, -(X10, +(1, 1)))).\nand substitutionT1 -> T10,\nX8 -> T10,\nT2 -> T11,\nX9 -> T11,\nT3 -> 1,\nT4 -> T12,\nX10 -> T12,\nT5 -> T14,\nX11 -> T14,\nT13 -> T14"
            },
            {
                "from": 6,
                "to": 12,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 11,
                "to": 13,
                "label": "CUT"
            },
            {
                "from": 12,
                "to": 790,
                "label": "EVAL with clause\ndistance(X16, X17, X18, X17, X19) :- ','(!_1, is(X19, +(X17, -(X18, +(2, 1))))).\nand substitutionT1 -> T20,\nX16 -> T20,\nT2 -> T21,\nX17 -> T21,\nT3 -> T22,\nX18 -> T22,\nT4 -> T21,\nT5 -> T24,\nX19 -> T24,\nT23 -> T24"
            },
            {
                "from": 12,
                "to": 871,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 13,
                "to": 14,
                "label": "IS ERROR"
            },
            {
                "from": 13,
                "to": 663,
                "label": "\nT14 -> T15"
            },
            {
                "from": 13,
                "to": 668,
                "label": "IS FAIL"
            },
            {
                "from": 663,
                "to": 669,
                "label": "SUCCESS"
            },
            {
                "from": 790,
                "to": 896,
                "label": "CUT"
            },
            {
                "from": 871,
                "to": 1141,
                "label": "EVAL with clause\ndistance(X24, X25, X24, X26, X27) :- ','(!_1, is(X27, +(X24, -(*(2, X25), -(X26, +(2, 1)))))).\nand substitutionT1 -> T30,\nX24 -> T30,\nT2 -> T31,\nX25 -> T31,\nT3 -> T30,\nT4 -> T32,\nX26 -> T32,\nT5 -> T34,\nX27 -> T34,\nT33 -> T34"
            },
            {
                "from": 871,
                "to": 1249,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 896,
                "to": 903,
                "label": "IS ERROR"
            },
            {
                "from": 896,
                "to": 925,
                "label": "\nT24 -> T25"
            },
            {
                "from": 896,
                "to": 932,
                "label": "IS FAIL"
            },
            {
                "from": 925,
                "to": 941,
                "label": "SUCCESS"
            },
            {
                "from": 1141,
                "to": 1298,
                "label": "CUT"
            },
            {
                "from": 1249,
                "to": 1849,
                "label": "EVAL with clause\ndistance(X32, X33, X34, 1, X35) :- ','(!_1, is(X35, +(*(2, X32), -(*(2, X33), -(X34, +(3, 1)))))).\nand substitutionT1 -> T40,\nX32 -> T40,\nT2 -> T41,\nX33 -> T41,\nT3 -> T42,\nX34 -> T42,\nT4 -> 1,\nT5 -> T44,\nX35 -> T44,\nT43 -> T44"
            },
            {
                "from": 1249,
                "to": 1850,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1298,
                "to": 1307,
                "label": "IS ERROR"
            },
            {
                "from": 1298,
                "to": 1320,
                "label": "\nT34 -> T35"
            },
            {
                "from": 1298,
                "to": 1322,
                "label": "IS FAIL"
            },
            {
                "from": 1320,
                "to": 1333,
                "label": "SUCCESS"
            },
            {
                "from": 1849,
                "to": 1851,
                "label": "CUT"
            },
            {
                "from": 1850,
                "to": 1856,
                "label": "ONLY EVAL with clause\ndistance(X41, X42, X43, X44, X45) :- ','(is(X46, -(X41, 2)), ','(is(X47, -(X42, 2)), ','(is(X48, -(X43, 1)), ','(is(X49, -(X44, 1)), ','(distance(X46, X47, X48, X49, X50), is(X45, +(*(2, X41), +(*(2, X42), -(X50, 4))))))))).\nand substitutionT1 -> T51,\nX41 -> T51,\nT2 -> T52,\nX42 -> T52,\nT3 -> T53,\nX43 -> T53,\nT4 -> T54,\nX44 -> T54,\nT5 -> T56,\nX45 -> T56,\nT55 -> T56"
            },
            {
                "from": 1851,
                "to": 1852,
                "label": "IS ERROR"
            },
            {
                "from": 1851,
                "to": 1853,
                "label": "\nT44 -> T45"
            },
            {
                "from": 1851,
                "to": 1854,
                "label": "IS FAIL"
            },
            {
                "from": 1853,
                "to": 1855,
                "label": "SUCCESS"
            },
            {
                "from": 1856,
                "to": 1857,
                "label": "IS ERROR"
            },
            {
                "from": 1856,
                "to": 1858,
                "label": "\nX46 -> T57"
            },
            {
                "from": 1858,
                "to": 1859,
                "label": "IS ERROR"
            },
            {
                "from": 1858,
                "to": 1860,
                "label": "\nX47 -> T58"
            },
            {
                "from": 1860,
                "to": 1861,
                "label": "IS ERROR"
            },
            {
                "from": 1860,
                "to": 1862,
                "label": "\nX48 -> T59"
            },
            {
                "from": 1862,
                "to": 1863,
                "label": "IS ERROR"
            },
            {
                "from": 1862,
                "to": 1864,
                "label": "\nX49 -> T60"
            },
            {
                "from": 1864,
                "to": 1865,
                "label": "CASE"
            },
            {
                "from": 1865,
                "to": 1928,
                "label": "EVAL with clause\ndistance(X61, X62, 1, X63, X64) :- ','(!_2, is(X64, -(X63, +(1, 1)))).\nand substitutionT57 -> T67,\nX61 -> T67,\nT58 -> T68,\nX62 -> T68,\nT59 -> 1,\nT60 -> T69,\nX63 -> T69,\nX50 -> X65,\nX64 -> X65"
            },
            {
                "from": 1865,
                "to": 1931,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1928,
                "to": 1932,
                "label": "CUT"
            },
            {
                "from": 1931,
                "to": 1941,
                "label": "EVAL with clause\ndistance(X76, X77, X78, X77, X79) :- ','(!_2, is(X79, +(X77, -(X78, +(2, 1))))).\nand substitutionT57 -> T78,\nX76 -> T78,\nT58 -> T79,\nX77 -> T79,\nT59 -> T80,\nX78 -> T80,\nT60 -> T79,\nX50 -> X80,\nX79 -> X80"
            },
            {
                "from": 1931,
                "to": 1942,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1932,
                "to": 1933,
                "label": "\nX65 -> T70"
            },
            {
                "from": 1933,
                "to": 1934,
                "label": "\nT56 -> T71"
            },
            {
                "from": 1933,
                "to": 1935,
                "label": "IS FAIL"
            },
            {
                "from": 1934,
                "to": 1936,
                "label": "SUCCESS"
            },
            {
                "from": 1941,
                "to": 1943,
                "label": "CUT"
            },
            {
                "from": 1942,
                "to": 1948,
                "label": "EVAL with clause\ndistance(X91, X92, X91, X93, X94) :- ','(!_2, is(X94, +(X91, -(*(2, X92), -(X93, +(2, 1)))))).\nand substitutionT57 -> T89,\nX91 -> T89,\nT58 -> T90,\nX92 -> T90,\nT59 -> T89,\nT60 -> T91,\nX93 -> T91,\nX50 -> X95,\nX94 -> X95"
            },
            {
                "from": 1942,
                "to": 1949,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1943,
                "to": 1944,
                "label": "\nX80 -> T81"
            },
            {
                "from": 1944,
                "to": 1945,
                "label": "\nT56 -> T82"
            },
            {
                "from": 1944,
                "to": 1946,
                "label": "IS FAIL"
            },
            {
                "from": 1945,
                "to": 1947,
                "label": "SUCCESS"
            },
            {
                "from": 1948,
                "to": 1950,
                "label": "CUT"
            },
            {
                "from": 1949,
                "to": 3195,
                "label": "EVAL with clause\ndistance(X106, X107, X108, 1, X109) :- ','(!_2, is(X109, +(*(2, X106), -(*(2, X107), -(X108, +(3, 1)))))).\nand substitutionT57 -> T100,\nX106 -> T100,\nT58 -> T101,\nX107 -> T101,\nT59 -> T102,\nX108 -> T102,\nT60 -> 1,\nX50 -> X110,\nX109 -> X110"
            },
            {
                "from": 1949,
                "to": 3196,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1950,
                "to": 1951,
                "label": "\nX95 -> T92"
            },
            {
                "from": 1951,
                "to": 1952,
                "label": "\nT56 -> T93"
            },
            {
                "from": 1951,
                "to": 1953,
                "label": "IS FAIL"
            },
            {
                "from": 1952,
                "to": 1954,
                "label": "SUCCESS"
            },
            {
                "from": 3195,
                "to": 3197,
                "label": "CUT"
            },
            {
                "from": 3196,
                "to": 3202,
                "label": "ONLY EVAL with clause\ndistance(X128, X129, X130, X131, X132) :- ','(is(X133, -(X128, 2)), ','(is(X134, -(X129, 2)), ','(is(X135, -(X130, 1)), ','(is(X136, -(X131, 1)), ','(distance(X133, X134, X135, X136, X137), is(X132, +(*(2, X128), +(*(2, X129), -(X137, 4))))))))).\nand substitutionT57 -> T113,\nX128 -> T113,\nT58 -> T114,\nX129 -> T114,\nT59 -> T115,\nX130 -> T115,\nT60 -> T116,\nX131 -> T116,\nX50 -> X138,\nX132 -> X138"
            },
            {
                "from": 3197,
                "to": 3198,
                "label": "\nX110 -> T103"
            },
            {
                "from": 3198,
                "to": 3199,
                "label": "\nT56 -> T104"
            },
            {
                "from": 3198,
                "to": 3200,
                "label": "IS FAIL"
            },
            {
                "from": 3199,
                "to": 3201,
                "label": "SUCCESS"
            },
            {
                "from": 3202,
                "to": 3203,
                "label": "\nX133 -> T117"
            },
            {
                "from": 3203,
                "to": 3204,
                "label": "\nX134 -> T118"
            },
            {
                "from": 3204,
                "to": 3205,
                "label": "\nX135 -> T119"
            },
            {
                "from": 3205,
                "to": 3206,
                "label": "\nX136 -> T120"
            },
            {
                "from": 3206,
                "to": 3207,
                "label": "SPLIT 1"
            },
            {
                "from": 3206,
                "to": 3208,
                "label": "SPLIT 2\nnew knowledge:\nT117 is ground\nT118 is ground\nT119 is ground\nT120 is ground\nT124 is ground\nreplacements:X137 -> T124"
            },
            {
                "from": 3207,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T117\nT2 -> T118\nT3 -> T119\nT4 -> T120\nT5 -> X137"
            },
            {
                "from": 3208,
                "to": 3209,
                "label": "IS ERROR"
            },
            {
                "from": 3208,
                "to": 3210,
                "label": "\nX138 -> T128"
            },
            {
                "from": 3210,
                "to": 3211,
                "label": "IS ERROR"
            },
            {
                "from": 3210,
                "to": 3212,
                "label": "\nT56 -> T129"
            },
            {
                "from": 3210,
                "to": 3213,
                "label": "IS FAIL"
            },
            {
                "from": 3212,
                "to": 3214,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(366)
Obligation:
Triples:

distanceA(X1, X2, X3, X4, X5) :- distanceA(X6, X7, X8, X9, X10).

Clauses:

distancecA(X1, X2, 1, X3, X4).
distancecA(X1, X2, X3, X2, X4).
distancecA(X1, X2, X1, X3, X4).
distancecA(X1, X2, X3, 1, X4).
distancecA(X1, X2, X3, X4, X5).
distancecA(X1, X2, X3, X4, X5).
distancecA(X1, X2, X3, X4, X5).
distancecA(X1, X2, X3, X4, X5).
distancecA(X1, X2, X3, X4, X5) :- distancecA(X6, X7, X8, X9, X10).

Afs:

distanceA(x1, x2, x3, x4, x5)  =  distanceA(x1, x2, x3, x4)


----------------------------------------

(367) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

distanceA_in_5: (b,b,b,b,f) (f,f,f,f,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   DISTANCEA_IN_GGGGA(X1, X2, X3, X4, X5) -> U1_GGGGA(X1, X2, X3, X4, X5, distanceA_in_aaaaa(X6, X7, X8, X9, X10))
   DISTANCEA_IN_GGGGA(X1, X2, X3, X4, X5) -> DISTANCEA_IN_AAAAA(X6, X7, X8, X9, X10)
   DISTANCEA_IN_AAAAA(X1, X2, X3, X4, X5) -> U1_AAAAA(X1, X2, X3, X4, X5, distanceA_in_aaaaa(X6, X7, X8, X9, X10))
   DISTANCEA_IN_AAAAA(X1, X2, X3, X4, X5) -> DISTANCEA_IN_AAAAA(X6, X7, X8, X9, X10)

R is empty.
The argument filtering Pi contains the following mapping:
distanceA_in_aaaaa(x1, x2, x3, x4, x5)  =  distanceA_in_aaaaa

DISTANCEA_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCEA_IN_GGGGA(x1, x2, x3, x4)

U1_GGGGA(x1, x2, x3, x4, x5, x6)  =  U1_GGGGA(x1, x2, x3, x4, x6)

DISTANCEA_IN_AAAAA(x1, x2, x3, x4, x5)  =  DISTANCEA_IN_AAAAA

U1_AAAAA(x1, x2, x3, x4, x5, x6)  =  U1_AAAAA(x6)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(368)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCEA_IN_GGGGA(X1, X2, X3, X4, X5) -> U1_GGGGA(X1, X2, X3, X4, X5, distanceA_in_aaaaa(X6, X7, X8, X9, X10))
   DISTANCEA_IN_GGGGA(X1, X2, X3, X4, X5) -> DISTANCEA_IN_AAAAA(X6, X7, X8, X9, X10)
   DISTANCEA_IN_AAAAA(X1, X2, X3, X4, X5) -> U1_AAAAA(X1, X2, X3, X4, X5, distanceA_in_aaaaa(X6, X7, X8, X9, X10))
   DISTANCEA_IN_AAAAA(X1, X2, X3, X4, X5) -> DISTANCEA_IN_AAAAA(X6, X7, X8, X9, X10)

R is empty.
The argument filtering Pi contains the following mapping:
distanceA_in_aaaaa(x1, x2, x3, x4, x5)  =  distanceA_in_aaaaa

DISTANCEA_IN_GGGGA(x1, x2, x3, x4, x5)  =  DISTANCEA_IN_GGGGA(x1, x2, x3, x4)

U1_GGGGA(x1, x2, x3, x4, x5, x6)  =  U1_GGGGA(x1, x2, x3, x4, x6)

DISTANCEA_IN_AAAAA(x1, x2, x3, x4, x5)  =  DISTANCEA_IN_AAAAA

U1_AAAAA(x1, x2, x3, x4, x5, x6)  =  U1_AAAAA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(369) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 3 less nodes.
----------------------------------------

(370)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DISTANCEA_IN_AAAAA(X1, X2, X3, X4, X5) -> DISTANCEA_IN_AAAAA(X6, X7, X8, X9, X10)

R is empty.
The argument filtering Pi contains the following mapping:
DISTANCEA_IN_AAAAA(x1, x2, x3, x4, x5)  =  DISTANCEA_IN_AAAAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(371) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(372)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DISTANCEA_IN_AAAAA -> DISTANCEA_IN_AAAAA

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(373) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = DISTANCEA_IN_AAAAA evaluates to  t =DISTANCEA_IN_AAAAA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from DISTANCEA_IN_AAAAA to DISTANCEA_IN_AAAAA.




----------------------------------------

(374)
NO

----------------------------------------

(375) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(distance X1 X2 (1) J D)",
                "(',' (!) (is D (- J (+ (1) (1)))))"
            ],
            [
                "(distance X3 M I M D)",
                "(',' (!) (is D (+ M (- I (+ (2) (1))))))"
            ],
            [
                "(distance N M N J D)",
                "(',' (!) (is D (+ N (- (* (2) M) (- J (+ (2) (1)))))))"
            ],
            [
                "(distance N M I (1) D)",
                "(',' (!) (is D (+ (* (2) N) (- (* (2) M) (- I (+ (3) (1)))))))"
            ],
            [
                "(distance N M I J D)",
                "(',' (is N1 (- N (2))) (',' (is M1 (- M (2))) (',' (is I1 (- I (1))) (',' (is J1 (- J (1))) (',' (distance N1 M1 I1 J1 D1) (is D (+ (* (2) N) (+ (* (2) M) (- D1 (4))))))))))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "1976": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1975": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X72 (- T73 (2))) (',' (is X73 (- T74 (2))) (',' (is X74 (- T75 (1))) (',' (is X75 (- T76 (1))) (',' (distance X72 X73 X74 X75 X76) (is T78 (+ (* (2) T73) (+ (* (2) T74) (- X76 (4))))))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X48 X49 X50 (1) X51)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T73",
                        "T74",
                        "T75",
                        "T76"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39",
                        "X48",
                        "X49",
                        "X50",
                        "X51",
                        "X72",
                        "X73",
                        "X74",
                        "X75",
                        "X76"
                    ],
                    "exprvars": []
                }
            },
            "1974": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T61",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "2"
                                            },
                                            {
                                                "name": "T56",
                                                "type": "PlainIntegerVariable"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "*"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T57",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T58",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "3"
                                                            },
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "1"
                                                            }
                                                        ],
                                                        "type": "PlainIntegerOperation",
                                                        "operation": "+"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T58",
                        "T57",
                        "T56",
                        "T61"
                    ]
                }
            },
            "1818": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T16"],
                    "free": [],
                    "exprvars": ["T16"]
                }
            },
            "1817": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T19",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T16",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "1"
                                            },
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "1"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "+"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "-"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T19",
                        "T16"
                    ],
                    "free": [],
                    "exprvars": [
                        "T19",
                        "T16"
                    ]
                }
            },
            "1839": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(distance T28 T29 T30 T29 T5)",
                        "(distance X12 X13 (1) X14 X15)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T33",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T29",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "name": "T30",
                                                "type": "PlainIntegerVariable"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "1"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "+"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T30",
                        "T29",
                        "T28",
                        "T33"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15"
                    ],
                    "exprvars": [
                        "T30",
                        "T29",
                        "T33"
                    ]
                }
            },
            "1838": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1837": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T32 (+ T29 (- T30 (+ (2) (1)))))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(distance T28 T29 T30 T29 T5)",
                        "(distance X12 X13 (1) X14 X15)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T28",
                        "T29",
                        "T30"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15"
                    ],
                    "exprvars": []
                }
            },
            "1836": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27"
                    ],
                    "exprvars": []
                }
            },
            "1979": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X74 (- T75 (1))) (',' (is X75 (- T76 (1))) (',' (distance T79 T80 X74 X75 X76) (is T78 (+ (* (2) T73) (+ (* (2) T74) (- X76 (4))))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X48 X49 X50 (1) X51)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T79",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T73",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T80",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T74",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T75",
                        "T80",
                        "T74",
                        "T79",
                        "T73",
                        "T76"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39",
                        "X48",
                        "X49",
                        "X50",
                        "X51",
                        "X72",
                        "X73",
                        "X74",
                        "X75",
                        "X76"
                    ],
                    "exprvars": [
                        "T80",
                        "T74",
                        "T79",
                        "T73"
                    ]
                }
            },
            "1835": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (is T32 (+ T29 (- T30 (+ (2) (1))))))"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(distance T28 T29 T30 T29 T5)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T28 T29 T30 T29 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T28 T29 T30 T29 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(distance T28 T29 T30 T29 T5)",
                        "(distance X12 X13 (1) X14 X15)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T28",
                        "T29",
                        "T30"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15"
                    ],
                    "exprvars": []
                }
            },
            "1978": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "10": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1977": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X73 (- T74 (2))) (',' (is X74 (- T75 (1))) (',' (is X75 (- T76 (1))) (',' (distance T79 X73 X74 X75 X76) (is T78 (+ (* (2) T73) (+ (* (2) T74) (- X76 (4)))))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X48 X49 X50 (1) X51)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T79",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T73",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "type": "PlainIntegerConstant",
                                        "value": "2"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "-"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T75",
                        "T74",
                        "T79",
                        "T73",
                        "T76"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39",
                        "X48",
                        "X49",
                        "X50",
                        "X51",
                        "X72",
                        "X73",
                        "X74",
                        "X75",
                        "X76"
                    ],
                    "exprvars": [
                        "T79",
                        "T73"
                    ]
                }
            },
            "1844": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T46 (+ T42 (- (* (2) T43) (- T44 (+ (2) (1))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T42 T43 T42 T44 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T42 T43 T42 T44 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T42",
                        "T43",
                        "T44"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27"
                    ],
                    "exprvars": []
                }
            },
            "1987": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X48 X49 X50 (1) X51)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T90",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "2"
                                            },
                                            {
                                                "name": "T73",
                                                "type": "PlainIntegerVariable"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "*"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T74",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T86",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "4"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "+"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T75",
                        "T86",
                        "T74",
                        "T90",
                        "T73",
                        "T76"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39",
                        "X48",
                        "X49",
                        "X50",
                        "X51"
                    ],
                    "exprvars": [
                        "T86",
                        "T74",
                        "T90",
                        "T73"
                    ]
                }
            },
            "1843": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39"
                    ],
                    "exprvars": []
                }
            },
            "1986": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1820": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T19",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T16",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "1"
                                            },
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "1"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "+"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "-"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T19",
                        "T16"
                    ]
                }
            },
            "1842": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (is T46 (+ T42 (- (* (2) T43) (- T44 (+ (2) (1)))))))"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T42 T43 T42 T44 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T42 T43 T42 T44 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T42 T43 T42 T44 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T42 T43 T42 T44 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T42",
                        "T43",
                        "T44"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27"
                    ],
                    "exprvars": []
                }
            },
            "1985": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T78 (+ (* (2) T73) (+ (* (2) T74) (- T86 (4)))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X48 X49 X50 (1) X51)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T75",
                        "T74",
                        "T73",
                        "T76",
                        "T86"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39",
                        "X48",
                        "X49",
                        "X50",
                        "X51"
                    ],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(distance T1 T2 T3 T4 T5)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1841": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T33",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T29",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "name": "T30",
                                                "type": "PlainIntegerVariable"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "1"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "+"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T30",
                        "T29",
                        "T33"
                    ]
                }
            },
            "1984": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(distance T79 T80 T81 T82 X76)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T79",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T73",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T80",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T74",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T81",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T75",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T82",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T76",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T81",
                        "T80",
                        "T79",
                        "T82"
                    ],
                    "free": ["X76"],
                    "exprvars": [
                        "T81",
                        "T75",
                        "T80",
                        "T74",
                        "T79",
                        "T73",
                        "T82",
                        "T76"
                    ]
                }
            },
            "1840": {
                "goal": [],
                "kb": {
                    "nonunifying": [[
                        "(distance T28 T29 T30 T29 T5)",
                        "(distance X12 X13 (1) X14 X15)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T29",
                        "T28"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15"
                    ],
                    "exprvars": [
                        "T30",
                        "T29"
                    ]
                }
            },
            "1983": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (distance T79 T80 T81 T82 X76) (is T78 (+ (* (2) T73) (+ (* (2) T74) (- X76 (4))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X48 X49 X50 (1) X51)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T79",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T73",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T80",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T74",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T81",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T75",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T82",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T76",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T81",
                        "T75",
                        "T80",
                        "T74",
                        "T79",
                        "T73",
                        "T82",
                        "T76"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39",
                        "X48",
                        "X49",
                        "X50",
                        "X51",
                        "X72",
                        "X73",
                        "X74",
                        "X75",
                        "X76"
                    ],
                    "exprvars": [
                        "T81",
                        "T75",
                        "T80",
                        "T74",
                        "T79",
                        "T73",
                        "T82",
                        "T76"
                    ]
                }
            },
            "5": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1982": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1981": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X75 (- T76 (1))) (',' (distance T79 T80 T81 X75 X76) (is T78 (+ (* (2) T73) (+ (* (2) T74) (- X76 (4)))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X48 X49 X50 (1) X51)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T79",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T73",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T80",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T74",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "2"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T81",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T75",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            }
                        ]
                    },
                    "ground": [
                        "T81",
                        "T75",
                        "T80",
                        "T74",
                        "T79",
                        "T73",
                        "T76"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39",
                        "X48",
                        "X49",
                        "X50",
                        "X51",
                        "X72",
                        "X73",
                        "X74",
                        "X75",
                        "X76"
                    ],
                    "exprvars": [
                        "T81",
                        "T75",
                        "T80",
                        "T74",
                        "T79",
                        "T73"
                    ]
                }
            },
            "7": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (is T18 (- T16 (+ (1) (1)))))"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(distance T14 T15 (1) T16 T5)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(distance T14 T15 (1) T16 T5)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T14 T15 (1) T16 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T14 T15 (1) T16 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T14",
                        "T15",
                        "T16"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1980": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "8": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T1 T2 T3 T4 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(distance T1 T2 T3 T4 T5)",
                        "(distance X12 X13 (1) X14 X15)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15"
                    ],
                    "exprvars": []
                }
            },
            "9": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T18 (- T16 (+ (1) (1))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T16"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1927": {
                "goal": [],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T58",
                        "T57",
                        "T56"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39"
                    ],
                    "exprvars": [
                        "T58",
                        "T57",
                        "T56"
                    ]
                }
            },
            "1926": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T61",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "2"
                                            },
                                            {
                                                "name": "T56",
                                                "type": "PlainIntegerVariable"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "*"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T57",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T58",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "3"
                                                            },
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "1"
                                                            }
                                                        ],
                                                        "type": "PlainIntegerOperation",
                                                        "operation": "+"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T58",
                        "T57",
                        "T56",
                        "T61"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39"
                    ],
                    "exprvars": [
                        "T58",
                        "T57",
                        "T56",
                        "T61"
                    ]
                }
            },
            "1848": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T47",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T42",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T43",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T44",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "2"
                                                            },
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "1"
                                                            }
                                                        ],
                                                        "type": "PlainIntegerOperation",
                                                        "operation": "+"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T42",
                        "T47",
                        "T44",
                        "T43"
                    ]
                }
            },
            "1925": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1847": {
                "goal": [],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T42 T43 T42 T44 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T42 T43 T42 T44 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T42",
                        "T44",
                        "T43"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27"
                    ],
                    "exprvars": [
                        "T42",
                        "T44",
                        "T43"
                    ]
                }
            },
            "1924": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(is T60 (+ (* (2) T56) (- (* (2) T57) (- T58 (+ (3) (1))))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T56",
                        "T57",
                        "T58"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39"
                    ],
                    "exprvars": []
                }
            },
            "1846": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T42 T43 T42 T44 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T42 T43 T42 T44 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T47",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "name": "T42",
                                        "type": "PlainIntegerVariable"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T43",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T44",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "2"
                                                            },
                                                            {
                                                                "type": "PlainIntegerConstant",
                                                                "value": "1"
                                                            }
                                                        ],
                                                        "type": "PlainIntegerOperation",
                                                        "operation": "+"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "-"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [
                        "T42",
                        "T47",
                        "T44",
                        "T43"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27"
                    ],
                    "exprvars": [
                        "T42",
                        "T47",
                        "T44",
                        "T43"
                    ]
                }
            },
            "1923": {
                "goal": [{
                    "clause": 4,
                    "scope": 1,
                    "term": "(distance T1 T2 T3 T4 T5)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ],
                        [
                            "(distance T1 T2 T3 T4 T5)",
                            "(distance X48 X49 X50 (1) X51)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39",
                        "X48",
                        "X49",
                        "X50",
                        "X51"
                    ],
                    "exprvars": []
                }
            },
            "1989": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T90",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "arguments": [
                                    {
                                        "arguments": [
                                            {
                                                "type": "PlainIntegerConstant",
                                                "value": "2"
                                            },
                                            {
                                                "name": "T73",
                                                "type": "PlainIntegerVariable"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "*"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "2"
                                                    },
                                                    {
                                                        "name": "T74",
                                                        "type": "PlainIntegerVariable"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "*"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "name": "T86",
                                                        "type": "PlainIntegerVariable"
                                                    },
                                                    {
                                                        "type": "PlainIntegerConstant",
                                                        "value": "4"
                                                    }
                                                ],
                                                "type": "PlainIntegerOperation",
                                                "operation": "-"
                                            }
                                        ],
                                        "type": "PlainIntegerOperation",
                                        "operation": "+"
                                    }
                                ],
                                "type": "PlainIntegerOperation",
                                "operation": "+"
                            },
                            "operation": "="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": [
                        "T86",
                        "T74",
                        "T90",
                        "T73"
                    ]
                }
            },
            "1845": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1922": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (is T60 (+ (* (2) T56) (- (* (2) T57) (- T58 (+ (3) (1)))))))"
                    },
                    {
                        "clause": 4,
                        "scope": 1,
                        "term": "(distance T56 T57 T58 (1) T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T56 T57 T58 (1) T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T56",
                        "T57",
                        "T58"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39"
                    ],
                    "exprvars": []
                }
            },
            "1988": {
                "goal": [],
                "kb": {
                    "nonunifying": [
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X12 X13 (1) X14 X15)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X24 X25 X26 X25 X27)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X36 X37 X36 X38 X39)"
                        ],
                        [
                            "(distance T73 T74 T75 T76 T5)",
                            "(distance X48 X49 X50 (1) X51)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T75",
                        "T86",
                        "T74",
                        "T73",
                        "T76"
                    ],
                    "free": [
                        "X12",
                        "X13",
                        "X14",
                        "X15",
                        "X24",
                        "X25",
                        "X26",
                        "X27",
                        "X36",
                        "X37",
                        "X38",
                        "X39",
                        "X48",
                        "X49",
                        "X50",
                        "X51"
                    ],
                    "exprvars": [
                        "T86",
                        "T74",
                        "T73"
                    ]
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 7,
                "label": "EVAL with clause\ndistance(X12, X13, 1, X14, X15) :- ','(!_1, is(X15, -(X14, +(1, 1)))).\nand substitutionT1 -> T14,\nX12 -> T14,\nT2 -> T15,\nX13 -> T15,\nT3 -> 1,\nT4 -> T16,\nX14 -> T16,\nT5 -> T18,\nX15 -> T18,\nT17 -> T18"
            },
            {
                "from": 5,
                "to": 8,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 7,
                "to": 9,
                "label": "CUT"
            },
            {
                "from": 8,
                "to": 1835,
                "label": "EVAL with clause\ndistance(X24, X25, X26, X25, X27) :- ','(!_1, is(X27, +(X25, -(X26, +(2, 1))))).\nand substitutionT1 -> T28,\nX24 -> T28,\nT2 -> T29,\nX25 -> T29,\nT3 -> T30,\nX26 -> T30,\nT4 -> T29,\nT5 -> T32,\nX27 -> T32,\nT31 -> T32"
            },
            {
                "from": 8,
                "to": 1836,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 9,
                "to": 10,
                "label": "IS ERROR"
            },
            {
                "from": 9,
                "to": 1817,
                "label": "\nT18 -> T19"
            },
            {
                "from": 9,
                "to": 1818,
                "label": "IS FAIL"
            },
            {
                "from": 1817,
                "to": 1820,
                "label": "SUCCESS"
            },
            {
                "from": 1835,
                "to": 1837,
                "label": "CUT"
            },
            {
                "from": 1836,
                "to": 1842,
                "label": "EVAL with clause\ndistance(X36, X37, X36, X38, X39) :- ','(!_1, is(X39, +(X36, -(*(2, X37), -(X38, +(2, 1)))))).\nand substitutionT1 -> T42,\nX36 -> T42,\nT2 -> T43,\nX37 -> T43,\nT3 -> T42,\nT4 -> T44,\nX38 -> T44,\nT5 -> T46,\nX39 -> T46,\nT45 -> T46"
            },
            {
                "from": 1836,
                "to": 1843,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1837,
                "to": 1838,
                "label": "IS ERROR"
            },
            {
                "from": 1837,
                "to": 1839,
                "label": "\nT32 -> T33"
            },
            {
                "from": 1837,
                "to": 1840,
                "label": "IS FAIL"
            },
            {
                "from": 1839,
                "to": 1841,
                "label": "SUCCESS"
            },
            {
                "from": 1842,
                "to": 1844,
                "label": "CUT"
            },
            {
                "from": 1843,
                "to": 1922,
                "label": "EVAL with clause\ndistance(X48, X49, X50, 1, X51) :- ','(!_1, is(X51, +(*(2, X48), -(*(2, X49), -(X50, +(3, 1)))))).\nand substitutionT1 -> T56,\nX48 -> T56,\nT2 -> T57,\nX49 -> T57,\nT3 -> T58,\nX50 -> T58,\nT4 -> 1,\nT5 -> T60,\nX51 -> T60,\nT59 -> T60"
            },
            {
                "from": 1843,
                "to": 1923,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1844,
                "to": 1845,
                "label": "IS ERROR"
            },
            {
                "from": 1844,
                "to": 1846,
                "label": "\nT46 -> T47"
            },
            {
                "from": 1844,
                "to": 1847,
                "label": "IS FAIL"
            },
            {
                "from": 1846,
                "to": 1848,
                "label": "SUCCESS"
            },
            {
                "from": 1922,
                "to": 1924,
                "label": "CUT"
            },
            {
                "from": 1923,
                "to": 1975,
                "label": "ONLY EVAL with clause\ndistance(X67, X68, X69, X70, X71) :- ','(is(X72, -(X67, 2)), ','(is(X73, -(X68, 2)), ','(is(X74, -(X69, 1)), ','(is(X75, -(X70, 1)), ','(distance(X72, X73, X74, X75, X76), is(X71, +(*(2, X67), +(*(2, X68), -(X76, 4))))))))).\nand substitutionT1 -> T73,\nX67 -> T73,\nT2 -> T74,\nX68 -> T74,\nT3 -> T75,\nX69 -> T75,\nT4 -> T76,\nX70 -> T76,\nT5 -> T78,\nX71 -> T78,\nT77 -> T78"
            },
            {
                "from": 1924,
                "to": 1925,
                "label": "IS ERROR"
            },
            {
                "from": 1924,
                "to": 1926,
                "label": "\nT60 -> T61"
            },
            {
                "from": 1924,
                "to": 1927,
                "label": "IS FAIL"
            },
            {
                "from": 1926,
                "to": 1974,
                "label": "SUCCESS"
            },
            {
                "from": 1975,
                "to": 1976,
                "label": "IS ERROR"
            },
            {
                "from": 1975,
                "to": 1977,
                "label": "\nX72 -> T79"
            },
            {
                "from": 1977,
                "to": 1978,
                "label": "IS ERROR"
            },
            {
                "from": 1977,
                "to": 1979,
                "label": "\nX73 -> T80"
            },
            {
                "from": 1979,
                "to": 1980,
                "label": "IS ERROR"
            },
            {
                "from": 1979,
                "to": 1981,
                "label": "\nX74 -> T81"
            },
            {
                "from": 1981,
                "to": 1982,
                "label": "IS ERROR"
            },
            {
                "from": 1981,
                "to": 1983,
                "label": "\nX75 -> T82"
            },
            {
                "from": 1983,
                "to": 1984,
                "label": "SPLIT 1"
            },
            {
                "from": 1983,
                "to": 1985,
                "label": "SPLIT 2\nnew knowledge:\nT79 is ground\nT80 is ground\nT81 is ground\nT82 is ground\nT86 is ground\nreplacements:X76 -> T86"
            },
            {
                "from": 1984,
                "to": 3,
                "label": "INSTANCE with matching:\nT1 -> T79\nT2 -> T80\nT3 -> T81\nT4 -> T82\nT5 -> X76"
            },
            {
                "from": 1985,
                "to": 1986,
                "label": "IS ERROR"
            },
            {
                "from": 1985,
                "to": 1987,
                "label": "\nT78 -> T90"
            },
            {
                "from": 1985,
                "to": 1988,
                "label": "IS FAIL"
            },
            {
                "from": 1987,
                "to": 1989,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(376)
Obligation:
Rules:
f3_out(T79, T80, T81, T82) -> f1984_out(T79, T80, T81, T82) :|: TRUE
f1984_in(x, x1, x2, x3) -> f3_in(x, x1, x2, x3) :|: TRUE
f1987_in(T75, T86, T74, T90, T73, T76) -> f1987_out(T75, T86, T74, T90, T73, T76) :|: TRUE
f1985_in(x4, x5, x6, x7, x8) -> f1987_in(x7, x6, x5, x9, x4, x8) :|: x9 = 2 * x4 + (2 * x5 + (x6 - 4))
f1985_in(x10, x11, x12, x13, x14) -> f1986_in :|: TRUE
f1986_out -> f1985_out(x15, x16, x17, x18, x19) :|: TRUE
f1985_in(x20, x21, x22, x23, x24) -> f1988_in(x23, x22, x21, x20, x24) :|: !(x25 = 2 * x20 + (2 * x21 + (x22 - 4)))
f1987_out(x26, x27, x28, x29, x30, x31) -> f1985_out(x30, x28, x27, x26, x31) :|: TRUE
f1988_out(x32, x33, x34, x35, x36) -> f1985_out(x35, x34, x33, x32, x36) :|: TRUE
f1836_in(T1, T2, T3, T4) -> f1843_in(T1, T2, T3, T4) :|: TRUE
f1842_out(T42, T43, T44) -> f1836_out(T42, T43, T42, T44) :|: TRUE
f1843_out(x37, x38, x39, x40) -> f1836_out(x37, x38, x39, x40) :|: TRUE
f1836_in(x41, x42, x41, x43) -> f1842_in(x41, x42, x43) :|: TRUE
f1922_out(T56, T57, T58) -> f1843_out(T56, T57, T58, 1) :|: TRUE
f1843_in(x44, x45, x46, 1) -> f1922_in(x44, x45, x46) :|: TRUE
f1843_in(x47, x48, x49, x50) -> f1923_in(x47, x48, x49, x50) :|: TRUE
f1923_out(x51, x52, x53, x54) -> f1843_out(x51, x52, x53, x54) :|: TRUE
f8_in(x55, x56, x57, x58) -> f1836_in(x55, x56, x57, x58) :|: TRUE
f1835_out(T29, T30, T28) -> f8_out(T28, T29, T30, T29) :|: TRUE
f8_in(x59, x60, x61, x60) -> f1835_in(x60, x61, x59) :|: TRUE
f1836_out(x62, x63, x64, x65) -> f8_out(x62, x63, x64, x65) :|: TRUE
f1977_out(x66, x67, x68, x69, x70) -> f1975_out(x70, x66, x67, x68) :|: TRUE
f1975_in(x71, x72, x73, x74) -> f1976_in :|: TRUE
f1976_out -> f1975_out(x75, x76, x77, x78) :|: TRUE
f1975_in(x79, x80, x81, x82) -> f1977_in(x80, x81, x82, x83, x79) :|: x83 = x79 - 2
f1981_in(x84, x85, x86, x87, x88, x89, x90) -> f1983_in(x85, x86, x87, x91, x88, x89, x90, x84) :|: x91 = x84 - 1
f1983_out(x92, x93, x94, x95, x96, x97, x98, x99) -> f1981_out(x99, x92, x93, x94, x96, x97, x98) :|: TRUE
f1982_out -> f1981_out(x100, x101, x102, x103, x104, x105, x106) :|: TRUE
f1981_in(x107, x108, x109, x110, x111, x112, x113) -> f1982_in :|: TRUE
f3_in(x114, x115, x116, x117) -> f5_in(x114, x115, x116, x117) :|: TRUE
f5_out(x118, x119, x120, x121) -> f3_out(x118, x119, x120, x121) :|: TRUE
f8_out(x122, x123, x124, x125) -> f5_out(x122, x123, x124, x125) :|: TRUE
f5_in(T14, T15, 1, T16) -> f7_in(T16, T14, T15) :|: TRUE
f7_out(x126, x127, x128) -> f5_out(x127, x128, 1, x126) :|: TRUE
f5_in(x129, x130, x131, x132) -> f8_in(x129, x130, x131, x132) :|: TRUE
f1979_in(x133, x134, x135, x136, x137, x138) -> f1980_in :|: TRUE
f1981_out(x139, x140, x141, x142, x143, x144, x145) -> f1979_out(x145, x139, x140, x141, x143, x144) :|: TRUE
f1979_in(x146, x147, x148, x149, x150, x151) -> f1981_in(x147, x148, x149, x152, x150, x151, x146) :|: x152 = x146 - 1
f1980_out -> f1979_out(x153, x154, x155, x156, x157, x158) :|: TRUE
f1923_in(x159, x160, x161, x162) -> f1975_in(x159, x160, x161, x162) :|: TRUE
f1975_out(x163, x164, x165, x166) -> f1923_out(x163, x164, x165, x166) :|: TRUE
f1984_out(x167, x168, x169, x170) -> f1985_in(x171, x172, x173, x174, x175) :|: TRUE
f1983_in(x176, x177, x178, x179, x180, x181, x182, x183) -> f1984_in(x176, x177, x178, x179) :|: TRUE
f1985_out(x184, x185, x186, x187, x188) -> f1983_out(x189, x190, x191, x192, x184, x185, x187, x188) :|: TRUE
f1978_out -> f1977_out(x193, x194, x195, x196, x197) :|: TRUE
f1979_out(x198, x199, x200, x201, x202, x203) -> f1977_out(x203, x198, x199, x200, x202) :|: TRUE
f1977_in(x204, x205, x206, x207, x208) -> f1978_in :|: TRUE
f1977_in(x209, x210, x211, x212, x213) -> f1979_in(x210, x211, x212, x214, x213, x209) :|: x214 = x209 - 2
Start term: f3_in(T1, T2, T3, T4)

----------------------------------------

(377) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f1984_in(x, x1, x2, x3) -> f3_in(x, x1, x2, x3) :|: TRUE
f1836_in(T1, T2, T3, T4) -> f1843_in(T1, T2, T3, T4) :|: TRUE
f1843_in(x47, x48, x49, x50) -> f1923_in(x47, x48, x49, x50) :|: TRUE
f8_in(x55, x56, x57, x58) -> f1836_in(x55, x56, x57, x58) :|: TRUE
f1975_in(x79, x80, x81, x82) -> f1977_in(x80, x81, x82, x83, x79) :|: x83 = x79 - 2
f1981_in(x84, x85, x86, x87, x88, x89, x90) -> f1983_in(x85, x86, x87, x91, x88, x89, x90, x84) :|: x91 = x84 - 1
f3_in(x114, x115, x116, x117) -> f5_in(x114, x115, x116, x117) :|: TRUE
f5_in(x129, x130, x131, x132) -> f8_in(x129, x130, x131, x132) :|: TRUE
f1979_in(x146, x147, x148, x149, x150, x151) -> f1981_in(x147, x148, x149, x152, x150, x151, x146) :|: x152 = x146 - 1
f1923_in(x159, x160, x161, x162) -> f1975_in(x159, x160, x161, x162) :|: TRUE
f1983_in(x176, x177, x178, x179, x180, x181, x182, x183) -> f1984_in(x176, x177, x178, x179) :|: TRUE
f1977_in(x209, x210, x211, x212, x213) -> f1979_in(x210, x211, x212, x214, x213, x209) :|: x214 = x209 - 2


----------------------------------------

(378)
Obligation:
Rules:
f1984_in(x, x1, x2, x3) -> f3_in(x, x1, x2, x3) :|: TRUE
f1836_in(T1, T2, T3, T4) -> f1843_in(T1, T2, T3, T4) :|: TRUE
f1843_in(x47, x48, x49, x50) -> f1923_in(x47, x48, x49, x50) :|: TRUE
f8_in(x55, x56, x57, x58) -> f1836_in(x55, x56, x57, x58) :|: TRUE
f1975_in(x79, x80, x81, x82) -> f1977_in(x80, x81, x82, x83, x79) :|: x83 = x79 - 2
f1981_in(x84, x85, x86, x87, x88, x89, x90) -> f1983_in(x85, x86, x87, x91, x88, x89, x90, x84) :|: x91 = x84 - 1
f3_in(x114, x115, x116, x117) -> f5_in(x114, x115, x116, x117) :|: TRUE
f5_in(x129, x130, x131, x132) -> f8_in(x129, x130, x131, x132) :|: TRUE
f1979_in(x146, x147, x148, x149, x150, x151) -> f1981_in(x147, x148, x149, x152, x150, x151, x146) :|: x152 = x146 - 1
f1923_in(x159, x160, x161, x162) -> f1975_in(x159, x160, x161, x162) :|: TRUE
f1983_in(x176, x177, x178, x179, x180, x181, x182, x183) -> f1984_in(x176, x177, x178, x179) :|: TRUE
f1977_in(x209, x210, x211, x212, x213) -> f1979_in(x210, x211, x212, x214, x213, x209) :|: x214 = x209 - 2

----------------------------------------

(379) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(380)
Obligation:
Rules:
f1979_in(x146:0, x147:0, x148:0, x149:0, x150:0, x151:0) -> f1979_in(x146:0 - 1, x147:0 - 1, x148:0 - 2, x149:0 - 2, x148:0, x149:0) :|: TRUE

----------------------------------------

(381) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(382)
Obligation:
Rules:
f1979_in(x146:0, x147:0, x148:0, x149:0, x150:0, x151:0) -> f1979_in(arith, arith1, arith2, arith3, x148:0, x149:0) :|: TRUE && arith = x146:0 - 1 && arith1 = x147:0 - 1 && arith2 = x148:0 - 2 && arith3 = x149:0 - 2

----------------------------------------

(383) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f1979_in(x146:0, x147:0, x148:0, x149:0, x150:0, x151:0) -> f1979_in(arith, arith1, arith2, arith3, x148:0, x149:0) :|: TRUE && arith = x146:0 - 1 && arith1 = x147:0 - 1 && arith2 = x148:0 - 2 && arith3 = x149:0 - 2

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(384)
Obligation:

Termination digraph:
Nodes:
(1) f1979_in(x146:0, x147:0, x148:0, x149:0, x150:0, x151:0) -> f1979_in(arith, arith1, arith2, arith3, x148:0, x149:0) :|: TRUE && arith = x146:0 - 1 && arith1 = x147:0 - 1 && arith2 = x148:0 - 2 && arith3 = x149:0 - 2

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(385) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(386)
Obligation:
Rules:
f1979_in(x146:0:0, x147:0:0, x148:0:0, x149:0:0, x150:0:0, x151:0:0) -> f1979_in(x146:0:0 - 1, x147:0:0 - 1, x148:0:0 - 2, x149:0:0 - 2, x148:0:0, x149:0:0) :|: TRUE

----------------------------------------

(387) IRSwTToIntTRSProof (SOUND)
Applied path-length measure to transform intTRS with terms to intTRS.
----------------------------------------

(388)
Obligation:
Rules:
f1979_in(x, x1, x2, x3, x4, x5) -> f1979_in(x - 1, x1 - 1, x2 - 2, x3 - 2, x2, x3) :|: TRUE

----------------------------------------

(389) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, x, x1, x2, x3, x4, x5) -> f(1, x - 1, x1 - 1, x2 - 2, x3 - 2, x2, x3) :|: pc = 1 && TRUE
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
(((run2_0 = ((1 * 1)) and run2_1 = ((run1_1 * 1) + (1 * -1)) and run2_2 = ((run1_2 * 1) + (1 * -1)) and run2_3 = ((run1_3 * 1) + (1 * -2)) and run2_4 = ((run1_4 * 1) + (1 * -2)) and run2_5 = ((run1_3 * 1)) and run2_6 = ((run1_4 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and T)) and !(((run2_0 * 1)) = ((1 * 1)) and T))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
((run2_0 = ((1 * 1)) and run2_1 = ((run1_1 * 1) + (1 * -1)) and run2_2 = ((run1_2 * 1) + (1 * -1)) and run2_3 = ((run1_3 * 1) + (1 * -2)) and run2_4 = ((run1_4 * 1) + (1 * -2)) and run2_5 = ((run1_3 * 1)) and run2_6 = ((run1_4 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and T))

----------------------------------------

(390)
NO
