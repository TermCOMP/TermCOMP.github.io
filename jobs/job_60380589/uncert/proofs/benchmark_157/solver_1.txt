YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/BvK3Q.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

factorial(g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToIRSwTTransformerProof [SOUND, 0 ms]
(2) TRUE


----------------------------------------

(0)
Obligation:
Clauses:

factorial1(N, F) :- ','(>(N, 0), ','(is(N1, -(N, 1)), ','(factorial1(N1, F1), is(F, *(N, F1))))).
factorial1(0, 1).
factorial2(N, F) :- factorial2(0, N, 1, F).
factorial2(I, N, T, F) :- ','(<(I, N), ','(is(I1, +(I, 1)), ','(is(T1, *(T, I1)), factorial2(I1, N, T1, F)))).
factorial2(N, N, F, F).
factorial3(N, F) :- factorial3(N, 1, F).
factorial3(N, T, F) :- ','(>(N, 0), ','(is(T1, *(T, N)), ','(is(N1, -(N, 1)), factorial3(N1, T1, F)))).
factorial3(0, F, F).


Query: factorial(g,a)
----------------------------------------

(1) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(factorial1 N F)",
                "(',' (> N (0)) (',' (is N1 (- N (1))) (',' (factorial1 N1 F1) (is F (* N F1)))))"
            ],
            [
                "(factorial1 (0) (1))",
                null
            ],
            [
                "(factorial2 N F)",
                "(factorial2 (0) N (1) F)"
            ],
            [
                "(factorial2 I N T F)",
                "(',' (< I N) (',' (is I1 (+ I (1))) (',' (is T1 (* T I1)) (factorial2 I1 N T1 F))))"
            ],
            [
                "(factorial2 N N F F)",
                null
            ],
            [
                "(factorial3 N F)",
                "(factorial3 N (1) F)"
            ],
            [
                "(factorial3 N T F)",
                "(',' (> N (0)) (',' (is T1 (* T N)) (',' (is N1 (- N (1))) (factorial3 N1 T1 F))))"
            ],
            [
                "(factorial3 (0) F F)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(factorial T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes"
        },
        "edges": [{
            "from": 3,
            "to": 6,
            "label": "UNDEFINED ERROR"
        }],
        "type": "Graph"
    }
}

----------------------------------------

(2)
TRUE
