YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/2ALmd.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

shanoi(g,g,g,g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToIRSwTTransformerProof [SOUND, 36 ms]
(2) AND
    (3) IRSwT
        (4) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (5) TRUE
    (6) IRSwT
        (7) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 1 ms]
        (8) IRSwT
        (9) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (10) IRSwT
        (11) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (12) IRSwT
        (13) IRSwTTerminationDigraphProof [EQUIVALENT, 9 ms]
        (14) IRSwT
        (15) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (16) IRSwT
        (17) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (18) IRSwT
        (19) TempFilterProof [SOUND, 5 ms]
        (20) IntTRS
        (21) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (22) YES


----------------------------------------

(0)
Obligation:
Clauses:

shanoi(1, A, B, C, .(mv(A, C), [])).
shanoi(N, A, B, C, M) :- ','(>(N, 1), ','(is(N1, -(N, 1)), ','(shanoi(N1, A, C, B, M1), ','(shanoi(N1, B, A, C, M2), ','(append(M1, .(mv(A, C), []), T), append(T, M2, M)))))).
append([], L, L).
append(.(H, L), L1, .(H, R)) :- append(L, L1, R).
demo :- ','(=(Size, 15), ','(format('Towers of Hanoi for ~w elements', .(Size, [])), ','(time(X1, A), ','(nl, ','(nl, ','(shanoi(Size, a, b, c, Sol), ','(time(T, Sol), ','(format('The solution is: ~w', .(Sol, [])), ','(nl, ','(format('Solved in ~w msec.', .(T, [])), nl)))))))))).


Query: shanoi(g,g,g,g,a)
----------------------------------------

(1) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(shanoi (1) A B C (. (mv A C) ([])))",
                null
            ],
            [
                "(shanoi N A B C M)",
                "(',' (> N (1)) (',' (is N1 (- N (1))) (',' (shanoi N1 A C B M1) (',' (shanoi N1 B A C M2) (',' (append M1 (. (mv A C) ([])) T) (append T M2 M))))))"
            ],
            [
                "(append ([]) L L)",
                null
            ],
            [
                "(append (. H L) L1 (. H R))",
                "(append L L1 R)"
            ],
            [
                "(demo)",
                "(',' (= Size (15)) (',' (format ('Towers of Hanoi for ~w elements') (. Size ([]))) (',' (time X1 A) (',' (nl) (',' (nl) (',' (shanoi Size (a) (b) (c) Sol) (',' (time T Sol) (',' (format ('The solution is: ~w') (. Sol ([]))) (',' (nl) (',' (format ('Solved in ~w msec.') (. T ([]))) (nl)))))))))))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "2650": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "2647": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2646": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2645": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(append T69 T58 T37)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T58",
                        "T69"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2644": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(append T69 T58 T37)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T58",
                        "T69"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2643": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(append T69 T58 T37)"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(append T69 T58 T37)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T58",
                        "T69"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2642": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(append T69 T58 T37)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T58",
                        "T69"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2641": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(append T45 (. (mv T33 T35) ([])) X39)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T33",
                        "T45"
                    ],
                    "free": ["X39"],
                    "exprvars": []
                }
            },
            "2640": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (append T45 (. (mv T33 T35) ([])) X39) (append X39 T58 T37))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T33",
                        "T45",
                        "T58"
                    ],
                    "free": ["X39"],
                    "exprvars": []
                }
            },
            "2649": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(append T90 T91 T93)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T90",
                        "T91"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2648": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "17": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (> T32 (1)) (',' (is X36 (- T32 (1))) (',' (shanoi X36 T33 T35 T34 X37) (',' (shanoi X36 T34 T33 T35 X38) (',' (append X37 (. (mv T33 T35) ([])) X39) (append X39 X38 T37))))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T32",
                        "T33",
                        "T34",
                        "T35"
                    ],
                    "free": [
                        "X36",
                        "X37",
                        "X38",
                        "X39"
                    ],
                    "exprvars": []
                }
            },
            "18": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2636": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (shanoi T38 T33 T35 T34 X37) (',' (shanoi T38 T34 T33 T35 X38) (',' (append X37 (. (mv T33 T35) ([])) X39) (append X39 X38 T37))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T38",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T32",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "type": "PlainIntegerConstant",
                                    "value": "1"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "name": "T32",
                                    "type": "PlainIntegerVariable"
                                },
                                "operation": "<"
                            }
                        ]
                    },
                    "ground": [
                        "T35",
                        "T34",
                        "T33",
                        "T38",
                        "T32"
                    ],
                    "free": [
                        "X36",
                        "X37",
                        "X38",
                        "X39"
                    ],
                    "exprvars": [
                        "T38",
                        "T32"
                    ]
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(shanoi T1 T2 T3 T4 T5)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(shanoi T1 T2 T3 T4 T5)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(shanoi T1 T2 T3 T4 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(shanoi T1 T2 T3 T4 T5)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(shanoi T1 T2 T3 T4 T5)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T1",
                        "T2",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2632": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "1"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T32",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">="
                        }]
                    },
                    "ground": [
                        "T35",
                        "T34",
                        "T33",
                        "T32"
                    ],
                    "free": [
                        "X36",
                        "X37",
                        "X38",
                        "X39"
                    ],
                    "exprvars": ["T32"]
                }
            },
            "2631": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X36 (- T32 (1))) (',' (shanoi X36 T33 T35 T34 X37) (',' (shanoi X36 T34 T33 T35 X38) (',' (append X37 (. (mv T33 T35) ([])) X39) (append X39 X38 T37)))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "1"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T32",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<"
                        }]
                    },
                    "ground": [
                        "T35",
                        "T34",
                        "T33",
                        "T32"
                    ],
                    "free": [
                        "X36",
                        "X37",
                        "X38",
                        "X39"
                    ],
                    "exprvars": ["T32"]
                }
            },
            "7": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "8": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "9": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2639": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(shanoi T38 T34 T33 T35 X38)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T34",
                        "T33",
                        "T38"
                    ],
                    "free": ["X38"],
                    "exprvars": []
                }
            },
            "2638": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (shanoi T38 T34 T33 T35 X38) (',' (append T45 (. (mv T33 T35) ([])) X39) (append X39 X38 T37)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T34",
                        "T33",
                        "T38",
                        "T45"
                    ],
                    "free": [
                        "X38",
                        "X39"
                    ],
                    "exprvars": []
                }
            },
            "2637": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(shanoi T38 T33 T35 T34 X37)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T38",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T32",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "-"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "type": "PlainIntegerConstant",
                                    "value": "1"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "name": "T32",
                                    "type": "PlainIntegerVariable"
                                },
                                "operation": "<"
                            }
                        ]
                    },
                    "ground": [
                        "T35",
                        "T34",
                        "T33",
                        "T38"
                    ],
                    "free": ["X37"],
                    "exprvars": [
                        "T38",
                        "T32"
                    ]
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 2,
                "label": "CASE"
            },
            {
                "from": 2,
                "to": 3,
                "label": "PARALLEL"
            },
            {
                "from": 2,
                "to": 4,
                "label": "PARALLEL"
            },
            {
                "from": 3,
                "to": 7,
                "label": "EVAL with clause\nshanoi(1, X14, X15, X16, .(mv(X14, X16), [])).\nand substitutionT1 -> 1,\nT2 -> T18,\nX14 -> T18,\nT3 -> T19,\nX15 -> T19,\nT4 -> T20,\nX16 -> T20,\nT5 -> .(mv(T18, T20), [])"
            },
            {
                "from": 3,
                "to": 8,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 4,
                "to": 17,
                "label": "ONLY EVAL with clause\nshanoi(X31, X32, X33, X34, X35) :- ','(>(X31, 1), ','(is(X36, -(X31, 1)), ','(shanoi(X36, X32, X34, X33, X37), ','(shanoi(X36, X33, X32, X34, X38), ','(append(X37, .(mv(X32, X34), []), X39), append(X39, X38, X35)))))).\nand substitutionT1 -> T32,\nX31 -> T32,\nT2 -> T33,\nX32 -> T33,\nT3 -> T34,\nX33 -> T34,\nT4 -> T35,\nX34 -> T35,\nT5 -> T37,\nX35 -> T37,\nT36 -> T37"
            },
            {
                "from": 7,
                "to": 9,
                "label": "SUCCESS"
            },
            {
                "from": 17,
                "to": 18,
                "label": "IS ERROR"
            },
            {
                "from": 17,
                "to": 2631,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 17,
                "to": 2632,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 2631,
                "to": 2636,
                "label": "\nX36 -> T38"
            },
            {
                "from": 2636,
                "to": 2637,
                "label": "SPLIT 1"
            },
            {
                "from": 2636,
                "to": 2638,
                "label": "SPLIT 2\nnew knowledge:\nT38 is ground\nT33 is ground\nT35 is ground\nT34 is ground\nT45 is ground\nreplacements:X37 -> T45"
            },
            {
                "from": 2637,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T38\nT2 -> T33\nT3 -> T35\nT4 -> T34\nT5 -> X37"
            },
            {
                "from": 2638,
                "to": 2639,
                "label": "SPLIT 1"
            },
            {
                "from": 2638,
                "to": 2640,
                "label": "SPLIT 2\nnew knowledge:\nT38 is ground\nT34 is ground\nT33 is ground\nT35 is ground\nT58 is ground\nreplacements:X38 -> T58"
            },
            {
                "from": 2639,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T38\nT2 -> T34\nT3 -> T33\nT4 -> T35\nT5 -> X38"
            },
            {
                "from": 2640,
                "to": 2641,
                "label": "SPLIT 1"
            },
            {
                "from": 2640,
                "to": 2642,
                "label": "SPLIT 2\nnew knowledge:\nT45 is ground\nT33 is ground\nT35 is ground\nT69 is ground\nreplacements:X39 -> T69"
            },
            {
                "from": 2641,
                "to": 2642,
                "label": "INSTANCE with matching:\nT69 -> T45\nT58 -> .(mv(T33, T35), [])\nT37 -> X39"
            },
            {
                "from": 2642,
                "to": 2643,
                "label": "CASE"
            },
            {
                "from": 2643,
                "to": 2644,
                "label": "PARALLEL"
            },
            {
                "from": 2643,
                "to": 2645,
                "label": "PARALLEL"
            },
            {
                "from": 2644,
                "to": 2646,
                "label": "EVAL with clause\nappend([], X74, X74).\nand substitutionT69 -> [],\nT58 -> T80,\nX74 -> T80,\nT37 -> T80"
            },
            {
                "from": 2644,
                "to": 2647,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2645,
                "to": 2649,
                "label": "EVAL with clause\nappend(.(X83, X84), X85, .(X83, X86)) :- append(X84, X85, X86).\nand substitutionX83 -> T89,\nX84 -> T90,\nT69 -> .(T89, T90),\nT58 -> T91,\nX85 -> T91,\nX86 -> T93,\nT37 -> .(T89, T93),\nT92 -> T93"
            },
            {
                "from": 2645,
                "to": 2650,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2646,
                "to": 2648,
                "label": "SUCCESS"
            },
            {
                "from": 2649,
                "to": 2642,
                "label": "INSTANCE with matching:\nT69 -> T90\nT58 -> T91\nT37 -> T93"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Complex Obligation (AND)

----------------------------------------

(3)
Obligation:
Rules:
f2650_out -> f2645_out(T69, T58) :|: TRUE
f2645_in(.(T89, T90), T91) -> f2649_in(T90, T91) :|: TRUE
f2645_in(x, x1) -> f2650_in :|: TRUE
f2649_out(x2, x3) -> f2645_out(.(x4, x2), x3) :|: TRUE
f2642_in(x5, x6) -> f2643_in(x5, x6) :|: TRUE
f2643_out(x7, x8) -> f2642_out(x7, x8) :|: TRUE
f2649_in(x9, x10) -> f2642_in(x9, x10) :|: TRUE
f2642_out(x11, x12) -> f2649_out(x11, x12) :|: TRUE
f2643_in(x13, x14) -> f2644_in(x13, x14) :|: TRUE
f2643_in(x15, x16) -> f2645_in(x15, x16) :|: TRUE
f2644_out(x17, x18) -> f2643_out(x17, x18) :|: TRUE
f2645_out(x19, x20) -> f2643_out(x19, x20) :|: TRUE
f2_out(T1, T2, T3, T4) -> f1_out(T1, T2, T3, T4) :|: TRUE
f1_in(x21, x22, x23, x24) -> f2_in(x21, x22, x23, x24) :|: TRUE
f3_out(x25, x26, x27, x28) -> f2_out(x25, x26, x27, x28) :|: TRUE
f2_in(x29, x30, x31, x32) -> f3_in(x29, x30, x31, x32) :|: TRUE
f4_out(x33, x34, x35, x36) -> f2_out(x33, x34, x35, x36) :|: TRUE
f2_in(x37, x38, x39, x40) -> f4_in(x37, x38, x39, x40) :|: TRUE
f17_out(T32, T33, T35, T34) -> f4_out(T32, T33, T34, T35) :|: TRUE
f4_in(x41, x42, x43, x44) -> f17_in(x41, x42, x44, x43) :|: TRUE
f18_out -> f17_out(x45, x46, x47, x48) :|: TRUE
f17_in(x49, x50, x51, x52) -> f2631_in(x49, x50, x51, x52) :|: x49 > 1
f17_in(x53, x54, x55, x56) -> f18_in :|: TRUE
f2631_out(x57, x58, x59, x60) -> f17_out(x57, x58, x59, x60) :|: x57 > 1
f17_in(x61, x62, x63, x64) -> f2632_in(x63, x64, x62, x61) :|: x61 <= 1
f2632_out(x65, x66, x67, x68) -> f17_out(x68, x67, x65, x66) :|: x68 <= 1
f2631_in(x69, x70, x71, x72) -> f2636_in(x73, x70, x71, x72, x69) :|: x73 = x69 - 1
f2636_out(x74, x75, x76, x77, x78) -> f2631_out(x78, x75, x76, x77) :|: TRUE
f2636_in(x79, x80, x81, x82, x83) -> f2637_in(x79, x80, x81, x82) :|: TRUE
f2638_out(x84, x85, x86, x87, x88) -> f2636_out(x84, x86, x87, x85, x89) :|: TRUE
f2637_out(x90, x91, x92, x93) -> f2638_in(x90, x93, x91, x92, x94) :|: TRUE
f2640_out(x95, x96, x97, x98) -> f2638_out(x99, x100, x96, x97, x95) :|: TRUE
f2638_in(x101, x102, x103, x104, x105) -> f2639_in(x101, x102, x103, x104) :|: TRUE
f2639_out(x106, x107, x108, x109) -> f2640_in(x110, x108, x109, x111) :|: TRUE
f2642_out(x112, x113) -> f2640_out(x114, x115, x116, x113) :|: TRUE
f2641_out(x117, x118, x119) -> f2642_in(x120, x121) :|: TRUE
f2640_in(x122, x123, x124, x125) -> f2641_in(x122, x123, x124) :|: TRUE
f2641_in(x126, x127, x128) -> f2642_in(x126, .(mv(x127, x128), [])) :|: TRUE
f2642_out(x129, .(mv(x130, x131), [])) -> f2641_out(x129, x130, x131) :|: TRUE
Start term: f1_in(T1, T2, T3, T4)

----------------------------------------

(4) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(5)
TRUE

----------------------------------------

(6)
Obligation:
Rules:
f2640_out(T45, T33, T35, T58) -> f2638_out(T38, T34, T33, T35, T45) :|: TRUE
f2638_in(x, x1, x2, x3, x4) -> f2639_in(x, x1, x2, x3) :|: TRUE
f2639_out(x5, x6, x7, x8) -> f2640_in(x9, x7, x8, x10) :|: TRUE
f2642_out(x11, x12) -> f2640_out(x13, x14, x15, x12) :|: TRUE
f2641_out(x16, x17, x18) -> f2642_in(x19, x20) :|: TRUE
f2640_in(x21, x22, x23, x24) -> f2641_in(x21, x22, x23) :|: TRUE
f2631_in(x25, x26, x27, x28) -> f2636_in(x29, x26, x27, x28, x25) :|: x29 = x25 - 1
f2636_out(x30, x31, x32, x33, x34) -> f2631_out(x34, x31, x32, x33) :|: TRUE
f1_out(x35, x36, x37, x38) -> f2639_out(x35, x36, x37, x38) :|: TRUE
f2639_in(x39, x40, x41, x42) -> f1_in(x39, x40, x41, x42) :|: TRUE
f2641_in(x43, x44, x45) -> f2642_in(x43, .(mv(x44, x45), [])) :|: TRUE
f2642_out(x46, .(mv(x47, x48), [])) -> f2641_out(x46, x47, x48) :|: TRUE
f2646_in -> f2646_out :|: TRUE
f2636_in(x49, x50, x51, x52, x53) -> f2637_in(x49, x50, x51, x52) :|: TRUE
f2638_out(x54, x55, x56, x57, x58) -> f2636_out(x54, x56, x57, x55, x59) :|: TRUE
f2637_out(x60, x61, x62, x63) -> f2638_in(x60, x63, x61, x62, x64) :|: TRUE
f2647_out -> f2644_out(x65, x66) :|: TRUE
f2646_out -> f2644_out([], T80) :|: TRUE
f2644_in([], x67) -> f2646_in :|: TRUE
f2644_in(x68, x69) -> f2647_in :|: TRUE
f18_out -> f17_out(x70, x71, x72, x73) :|: TRUE
f17_in(x74, x75, x76, x77) -> f2631_in(x74, x75, x76, x77) :|: x74 > 1
f17_in(x78, x79, x80, x81) -> f18_in :|: TRUE
f2631_out(x82, x83, x84, x85) -> f17_out(x82, x83, x84, x85) :|: x82 > 1
f17_in(x86, x87, x88, x89) -> f2632_in(x88, x89, x87, x86) :|: x86 <= 1
f2632_out(x90, x91, x92, x93) -> f17_out(x93, x92, x90, x91) :|: x93 <= 1
f17_out(x94, x95, x96, x97) -> f4_out(x94, x95, x97, x96) :|: TRUE
f4_in(x98, x99, x100, x101) -> f17_in(x98, x99, x101, x100) :|: TRUE
f2650_out -> f2645_out(x102, x103) :|: TRUE
f2645_in(.(T89, T90), T91) -> f2649_in(T90, T91) :|: TRUE
f2645_in(x104, x105) -> f2650_in :|: TRUE
f2649_out(x106, x107) -> f2645_out(.(x108, x106), x107) :|: TRUE
f2642_in(x109, x110) -> f2643_in(x109, x110) :|: TRUE
f2643_out(x111, x112) -> f2642_out(x111, x112) :|: TRUE
f2637_in(x113, x114, x115, x116) -> f1_in(x113, x114, x115, x116) :|: TRUE
f1_out(x117, x118, x119, x120) -> f2637_out(x117, x118, x119, x120) :|: TRUE
f2_out(T1, T2, T3, T4) -> f1_out(T1, T2, T3, T4) :|: TRUE
f1_in(x121, x122, x123, x124) -> f2_in(x121, x122, x123, x124) :|: TRUE
f2649_in(x125, x126) -> f2642_in(x125, x126) :|: TRUE
f2642_out(x127, x128) -> f2649_out(x127, x128) :|: TRUE
f3_out(x129, x130, x131, x132) -> f2_out(x129, x130, x131, x132) :|: TRUE
f2_in(x133, x134, x135, x136) -> f3_in(x133, x134, x135, x136) :|: TRUE
f4_out(x137, x138, x139, x140) -> f2_out(x137, x138, x139, x140) :|: TRUE
f2_in(x141, x142, x143, x144) -> f4_in(x141, x142, x143, x144) :|: TRUE
f2643_in(x145, x146) -> f2644_in(x145, x146) :|: TRUE
f2643_in(x147, x148) -> f2645_in(x147, x148) :|: TRUE
f2644_out(x149, x150) -> f2643_out(x149, x150) :|: TRUE
f2645_out(x151, x152) -> f2643_out(x151, x152) :|: TRUE
Start term: f1_in(T1, T2, T3, T4)

----------------------------------------

(7) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f2631_in(x25, x26, x27, x28) -> f2636_in(x29, x26, x27, x28, x25) :|: x29 = x25 - 1
f2636_in(x49, x50, x51, x52, x53) -> f2637_in(x49, x50, x51, x52) :|: TRUE
f17_in(x74, x75, x76, x77) -> f2631_in(x74, x75, x76, x77) :|: x74 > 1
f4_in(x98, x99, x100, x101) -> f17_in(x98, x99, x101, x100) :|: TRUE
f2637_in(x113, x114, x115, x116) -> f1_in(x113, x114, x115, x116) :|: TRUE
f1_in(x121, x122, x123, x124) -> f2_in(x121, x122, x123, x124) :|: TRUE
f2_in(x141, x142, x143, x144) -> f4_in(x141, x142, x143, x144) :|: TRUE


----------------------------------------

(8)
Obligation:
Rules:
f2631_in(x25, x26, x27, x28) -> f2636_in(x29, x26, x27, x28, x25) :|: x29 = x25 - 1
f2636_in(x49, x50, x51, x52, x53) -> f2637_in(x49, x50, x51, x52) :|: TRUE
f17_in(x74, x75, x76, x77) -> f2631_in(x74, x75, x76, x77) :|: x74 > 1
f4_in(x98, x99, x100, x101) -> f17_in(x98, x99, x101, x100) :|: TRUE
f2637_in(x113, x114, x115, x116) -> f1_in(x113, x114, x115, x116) :|: TRUE
f1_in(x121, x122, x123, x124) -> f2_in(x121, x122, x123, x124) :|: TRUE
f2_in(x141, x142, x143, x144) -> f4_in(x141, x142, x143, x144) :|: TRUE

----------------------------------------

(9) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(10)
Obligation:
Rules:
f4_in(x98:0, x99:0, x100:0, x101:0) -> f4_in(x98:0 - 1, x99:0, x101:0, x100:0) :|: x98:0 > 1

----------------------------------------

(11) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(12)
Obligation:
Rules:
f4_in(x98:0, x99:0, x100:0, x101:0) -> f4_in(arith, x99:0, x101:0, x100:0) :|: x98:0 > 1 && arith = x98:0 - 1

----------------------------------------

(13) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f4_in(x98:0, x99:0, x100:0, x101:0) -> f4_in(arith, x99:0, x101:0, x100:0) :|: x98:0 > 1 && arith = x98:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(14)
Obligation:

Termination digraph:
Nodes:
(1) f4_in(x98:0, x99:0, x100:0, x101:0) -> f4_in(arith, x99:0, x101:0, x100:0) :|: x98:0 > 1 && arith = x98:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(15) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(16)
Obligation:
Rules:
f4_in(x98:0:0, x99:0:0, x100:0:0, x101:0:0) -> f4_in(x98:0:0 - 1, x99:0:0, x101:0:0, x100:0:0) :|: x98:0:0 > 1

----------------------------------------

(17) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f4_in(x1, x2, x3, x4) -> f4_in(x1)

----------------------------------------

(18)
Obligation:
Rules:
f4_in(x98:0:0) -> f4_in(x98:0:0 - 1) :|: x98:0:0 > 1

----------------------------------------

(19) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f4_in(INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(20)
Obligation:
Rules:
f4_in(x98:0:0) -> f4_in(c) :|: c = x98:0:0 - 1 && x98:0:0 > 1

----------------------------------------

(21) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f4_in(x)] = x

The following rules are decreasing:
f4_in(x98:0:0) -> f4_in(c) :|: c = x98:0:0 - 1 && x98:0:0 > 1
The following rules are bounded:
f4_in(x98:0:0) -> f4_in(c) :|: c = x98:0:0 - 1 && x98:0:0 > 1

----------------------------------------

(22)
YES
