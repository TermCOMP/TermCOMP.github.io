YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/JNAD7.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

gtsolve(g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToIRSwTTransformerProof [SOUND, 0 ms]
(2) TRUE


----------------------------------------

(0)
Obligation:
Clauses:

gtsolve(X, Y) :- ','(generate(X, Y), test(Y)).


Query: gtsolve(g,a)
----------------------------------------

(1) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [[
            "(gtsolve X Y)",
            "(',' (generate X Y) (test Y))"
        ]]
    },
    "graph": {
        "nodes": {
            "33": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(gtsolve T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "31": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(gtsolve T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "32": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (generate T8 T10) (test T10))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T8"],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 31,
                "label": "CASE"
            },
            {
                "from": 31,
                "to": 32,
                "label": "ONLY EVAL with clause\ngtsolve(X5, X6) :- ','(generate(X5, X6), test(X6)).\nand substitutionT1 -> T8,\nX5 -> T8,\nT2 -> T10,\nX6 -> T10,\nT9 -> T10"
            },
            {
                "from": 32,
                "to": 33,
                "label": "UNDEFINED ERROR"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
TRUE
