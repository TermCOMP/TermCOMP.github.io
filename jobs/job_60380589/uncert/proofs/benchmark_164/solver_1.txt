YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/gthyE.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

mergesort(g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToTRSTransformerProof [SOUND, 43 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) UsableRulesProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (16) YES
    (17) QDP
        (18) QDPOrderProof [EQUIVALENT, 97 ms]
        (19) QDP
        (20) DependencyGraphProof [EQUIVALENT, 0 ms]
        (21) TRUE


----------------------------------------

(0)
Obligation:
Clauses:

mergesort([], []).
mergesort(.(X, []), .(X, [])).
mergesort(.(X, .(Y, Xs)), Ys) :- ','(split(.(X, .(Y, Xs)), X1s, X2s), ','(mergesort(X1s, Y1s), ','(mergesort(X2s, Y2s), merge(Y1s, Y2s, Ys)))).
split([], [], []).
split(.(X, Xs), .(X, Ys), Zs) :- split(Xs, Zs, Ys).
merge([], Xs, Xs).
merge(Xs, [], Xs).
merge(.(X, Xs), .(Y, Ys), .(X, Zs)) :- ','(=<(X, Y), merge(Xs, .(Y, Ys), Zs)).
merge(.(X, Xs), .(Y, Ys), .(Y, Zs)) :- ','(>(X, Y), merge(.(X, Xs), Ys, Zs)).


Query: mergesort(g,a)
----------------------------------------

(1) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(mergesort ([]) ([]))",
                null
            ],
            [
                "(mergesort (. X ([])) (. X ([])))",
                null
            ],
            [
                "(mergesort (. X (. Y Xs)) Ys)",
                "(',' (split (. X (. Y Xs)) X1s X2s) (',' (mergesort X1s Y1s) (',' (mergesort X2s Y2s) (merge Y1s Y2s Ys))))"
            ],
            [
                "(split ([]) ([]) ([]))",
                null
            ],
            [
                "(split (. X Xs) (. X Ys) Zs)",
                "(split Xs Zs Ys)"
            ],
            [
                "(merge ([]) Xs Xs)",
                null
            ],
            [
                "(merge Xs ([]) Xs)",
                null
            ],
            [
                "(merge (. X Xs) (. Y Ys) (. X Zs))",
                "(',' (=< X Y) (merge Xs (. Y Ys) Zs))"
            ],
            [
                "(merge (. X Xs) (. Y Ys) (. Y Zs))",
                "(',' (> X Y) (merge (. X Xs) Ys Zs))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "190": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(split (. T16 (. T17 T18)) X22 X23)"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(split (. T16 (. T17 T18)) X22 X23)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T16",
                        "T17",
                        "T18"
                    ],
                    "free": [
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "2353": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2352": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2351": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 8,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2350": {
                "goal": [{
                    "clause": 6,
                    "scope": 5,
                    "term": "(merge T44 T45 T20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "152": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T16 (. T17 T18)) X22 X23)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T16",
                        "T17",
                        "T18"
                    ],
                    "free": [
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "2349": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2348": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1533": {
                "goal": [{
                    "clause": 4,
                    "scope": 4,
                    "term": "(split T37 X61 X60)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T37"],
                    "free": [
                        "X60",
                        "X61"
                    ],
                    "exprvars": []
                }
            },
            "2347": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1532": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(split T37 X61 X60)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T37"],
                    "free": [
                        "X60",
                        "X61"
                    ],
                    "exprvars": []
                }
            },
            "2346": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 7,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 8,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2345": {
                "goal": [{
                    "clause": 5,
                    "scope": 5,
                    "term": "(merge T44 T45 T20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1530": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(split T37 X61 X60)"
                    },
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(split T37 X61 X60)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T37"],
                    "free": [
                        "X60",
                        "X61"
                    ],
                    "exprvars": []
                }
            },
            "1538": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "12": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "14": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "16": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "19": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(mergesort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "161": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (mergesort T21 X24) (',' (mergesort T22 X25) (merge X24 X25 T20)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22"
                    ],
                    "free": [
                        "X24",
                        "X25"
                    ],
                    "exprvars": []
                }
            },
            "482": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T30 T31) X43 X42)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": [
                        "X42",
                        "X43"
                    ],
                    "exprvars": []
                }
            },
            "484": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(split (. T30 T31) X43 X42)"
                    },
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(split (. T30 T31) X43 X42)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": [
                        "X42",
                        "X43"
                    ],
                    "exprvars": []
                }
            },
            "2317": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(mergesort T21 X24)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": ["X24"],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(mergesort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "485": {
                "goal": [{
                    "clause": 4,
                    "scope": 3,
                    "term": "(split (. T30 T31) X43 X42)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": [
                        "X42",
                        "X43"
                    ],
                    "exprvars": []
                }
            },
            "2359": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2358": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2357": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (=< T78 T80) (merge T79 (. T80 T81) T83))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T78",
                        "T79",
                        "T80",
                        "T81"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1542": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2356": {
                "goal": [{
                    "clause": 8,
                    "scope": 5,
                    "term": "(merge T44 T45 T20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(mergesort T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(mergesort T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(mergesort T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1541": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2355": {
                "goal": [{
                    "clause": 7,
                    "scope": 5,
                    "term": "(merge T44 T45 T20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "7": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(mergesort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2354": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "8": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(mergesort T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(mergesort T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "20": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(mergesort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2318": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (mergesort T22 X25) (merge T44 X25 T20))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T22",
                        "T44"
                    ],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "24": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "25": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2692": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T100",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T98",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">="
                        }]
                    },
                    "ground": [
                        "T100",
                        "T101",
                        "T99",
                        "T98"
                    ],
                    "free": [],
                    "exprvars": [
                        "T100",
                        "T98"
                    ]
                }
            },
            "2691": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge (. T98 T99) T101 T103)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T100",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T98",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<"
                        }]
                    },
                    "ground": [
                        "T100",
                        "T101",
                        "T99",
                        "T98"
                    ],
                    "free": [],
                    "exprvars": [
                        "T100",
                        "T98"
                    ]
                }
            },
            "2690": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1633": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2326": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 6,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 7,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 8,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2689": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2688": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (> T98 T100) (merge (. T98 T99) T101 T103))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99",
                        "T100",
                        "T101"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2687": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T78",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T80",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">"
                        }]
                    },
                    "ground": [
                        "T81",
                        "T80",
                        "T79",
                        "T78"
                    ],
                    "free": [],
                    "exprvars": [
                        "T80",
                        "T78"
                    ]
                }
            },
            "1630": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split T43 X79 X78)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T43"],
                    "free": [
                        "X78",
                        "X79"
                    ],
                    "exprvars": []
                }
            },
            "2686": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T79 (. T80 T81) T83)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T78",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T80",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<="
                        }]
                    },
                    "ground": [
                        "T81",
                        "T80",
                        "T79",
                        "T78"
                    ],
                    "free": [],
                    "exprvars": [
                        "T80",
                        "T78"
                    ]
                }
            },
            "259": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(split (. T16 (. T17 T18)) X22 X23)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T16",
                        "T17",
                        "T18"
                    ],
                    "free": [
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "2322": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T44 T45 T20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2321": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(mergesort T22 X25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "141": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1524": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split T37 X61 X60)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T37"],
                    "free": [
                        "X60",
                        "X61"
                    ],
                    "exprvars": []
                }
            },
            "146": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T16 (. T17 T18)) X22 X23) (',' (mergesort X22 X24) (',' (mergesort X23 X25) (merge X24 X25 T20))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T16",
                        "T17",
                        "T18"
                    ],
                    "free": [
                        "X22",
                        "X23",
                        "X24",
                        "X25"
                    ],
                    "exprvars": []
                }
            },
            "147": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 6,
                "label": "CASE"
            },
            {
                "from": 6,
                "to": 7,
                "label": "PARALLEL"
            },
            {
                "from": 6,
                "to": 8,
                "label": "PARALLEL"
            },
            {
                "from": 7,
                "to": 12,
                "label": "EVAL with clause\nmergesort([], []).\nand substitutionT1 -> [],\nT2 -> []"
            },
            {
                "from": 7,
                "to": 14,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 8,
                "to": 19,
                "label": "PARALLEL"
            },
            {
                "from": 8,
                "to": 20,
                "label": "PARALLEL"
            },
            {
                "from": 12,
                "to": 16,
                "label": "SUCCESS"
            },
            {
                "from": 19,
                "to": 24,
                "label": "EVAL with clause\nmergesort(.(X5, []), .(X5, [])).\nand substitutionX5 -> T7,\nT1 -> .(T7, []),\nT2 -> .(T7, [])"
            },
            {
                "from": 19,
                "to": 25,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 20,
                "to": 146,
                "label": "EVAL with clause\nmergesort(.(X18, .(X19, X20)), X21) :- ','(split(.(X18, .(X19, X20)), X22, X23), ','(mergesort(X22, X24), ','(mergesort(X23, X25), merge(X24, X25, X21)))).\nand substitutionX18 -> T16,\nX19 -> T17,\nX20 -> T18,\nT1 -> .(T16, .(T17, T18)),\nT2 -> T20,\nX21 -> T20,\nT19 -> T20"
            },
            {
                "from": 20,
                "to": 147,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 24,
                "to": 141,
                "label": "SUCCESS"
            },
            {
                "from": 146,
                "to": 152,
                "label": "SPLIT 1"
            },
            {
                "from": 146,
                "to": 161,
                "label": "SPLIT 2\nnew knowledge:\nT16 is ground\nT17 is ground\nT18 is ground\nT21 is ground\nT22 is ground\nreplacements:X22 -> T21,\nX23 -> T22"
            },
            {
                "from": 152,
                "to": 190,
                "label": "CASE"
            },
            {
                "from": 161,
                "to": 2317,
                "label": "SPLIT 1"
            },
            {
                "from": 161,
                "to": 2318,
                "label": "SPLIT 2\nnew knowledge:\nT21 is ground\nT44 is ground\nreplacements:X24 -> T44"
            },
            {
                "from": 190,
                "to": 259,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 259,
                "to": 482,
                "label": "ONLY EVAL with clause\nsplit(.(X38, X39), .(X38, X40), X41) :- split(X39, X41, X40).\nand substitutionT16 -> T29,\nX38 -> T29,\nT17 -> T30,\nT18 -> T31,\nX39 -> .(T30, T31),\nX40 -> X42,\nX22 -> .(T29, X42),\nX23 -> X43,\nX41 -> X43"
            },
            {
                "from": 482,
                "to": 484,
                "label": "CASE"
            },
            {
                "from": 484,
                "to": 485,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 485,
                "to": 1524,
                "label": "ONLY EVAL with clause\nsplit(.(X56, X57), .(X56, X58), X59) :- split(X57, X59, X58).\nand substitutionT30 -> T36,\nX56 -> T36,\nT31 -> T37,\nX57 -> T37,\nX58 -> X60,\nX43 -> .(T36, X60),\nX42 -> X61,\nX59 -> X61"
            },
            {
                "from": 1524,
                "to": 1530,
                "label": "CASE"
            },
            {
                "from": 1530,
                "to": 1532,
                "label": "PARALLEL"
            },
            {
                "from": 1530,
                "to": 1533,
                "label": "PARALLEL"
            },
            {
                "from": 1532,
                "to": 1538,
                "label": "EVAL with clause\nsplit([], [], []).\nand substitutionT37 -> [],\nX61 -> [],\nX60 -> []"
            },
            {
                "from": 1532,
                "to": 1541,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1533,
                "to": 1630,
                "label": "EVAL with clause\nsplit(.(X74, X75), .(X74, X76), X77) :- split(X75, X77, X76).\nand substitutionX74 -> T42,\nX75 -> T43,\nT37 -> .(T42, T43),\nX76 -> X78,\nX61 -> .(T42, X78),\nX60 -> X79,\nX77 -> X79"
            },
            {
                "from": 1533,
                "to": 1633,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1538,
                "to": 1542,
                "label": "SUCCESS"
            },
            {
                "from": 1630,
                "to": 1524,
                "label": "INSTANCE with matching:\nT37 -> T43\nX61 -> X79\nX60 -> X78"
            },
            {
                "from": 2317,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T21\nT2 -> X24"
            },
            {
                "from": 2318,
                "to": 2321,
                "label": "SPLIT 1"
            },
            {
                "from": 2318,
                "to": 2322,
                "label": "SPLIT 2\nnew knowledge:\nT22 is ground\nT45 is ground\nreplacements:X25 -> T45"
            },
            {
                "from": 2321,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T22\nT2 -> X25"
            },
            {
                "from": 2322,
                "to": 2326,
                "label": "CASE"
            },
            {
                "from": 2326,
                "to": 2345,
                "label": "PARALLEL"
            },
            {
                "from": 2326,
                "to": 2346,
                "label": "PARALLEL"
            },
            {
                "from": 2345,
                "to": 2347,
                "label": "EVAL with clause\nmerge([], X86, X86).\nand substitutionT44 -> [],\nT45 -> T52,\nX86 -> T52,\nT20 -> T52"
            },
            {
                "from": 2345,
                "to": 2348,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2346,
                "to": 2350,
                "label": "PARALLEL"
            },
            {
                "from": 2346,
                "to": 2351,
                "label": "PARALLEL"
            },
            {
                "from": 2347,
                "to": 2349,
                "label": "SUCCESS"
            },
            {
                "from": 2350,
                "to": 2352,
                "label": "EVAL with clause\nmerge(X91, [], X91).\nand substitutionT44 -> T57,\nX91 -> T57,\nT45 -> [],\nT20 -> T57"
            },
            {
                "from": 2350,
                "to": 2353,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2351,
                "to": 2355,
                "label": "PARALLEL"
            },
            {
                "from": 2351,
                "to": 2356,
                "label": "PARALLEL"
            },
            {
                "from": 2352,
                "to": 2354,
                "label": "SUCCESS"
            },
            {
                "from": 2355,
                "to": 2357,
                "label": "EVAL with clause\nmerge(.(X112, X113), .(X114, X115), .(X112, X116)) :- ','(=<(X112, X114), merge(X113, .(X114, X115), X116)).\nand substitutionX112 -> T78,\nX113 -> T79,\nT44 -> .(T78, T79),\nX114 -> T80,\nX115 -> T81,\nT45 -> .(T80, T81),\nX116 -> T83,\nT20 -> .(T78, T83),\nT82 -> T83"
            },
            {
                "from": 2355,
                "to": 2358,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2356,
                "to": 2688,
                "label": "EVAL with clause\nmerge(.(X129, X130), .(X131, X132), .(X131, X133)) :- ','(>(X129, X131), merge(.(X129, X130), X132, X133)).\nand substitutionX129 -> T98,\nX130 -> T99,\nT44 -> .(T98, T99),\nX131 -> T100,\nX132 -> T101,\nT45 -> .(T100, T101),\nX133 -> T103,\nT20 -> .(T100, T103),\nT102 -> T103"
            },
            {
                "from": 2356,
                "to": 2689,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2357,
                "to": 2359,
                "label": "IS ERROR"
            },
            {
                "from": 2357,
                "to": 2686,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 2357,
                "to": 2687,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 2686,
                "to": 2322,
                "label": "INSTANCE with matching:\nT44 -> T79\nT45 -> .(T80, T81)\nT20 -> T83"
            },
            {
                "from": 2688,
                "to": 2690,
                "label": "IS ERROR"
            },
            {
                "from": 2688,
                "to": 2691,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 2688,
                "to": 2692,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 2691,
                "to": 2322,
                "label": "INSTANCE with matching:\nT44 -> .(T98, T99)\nT45 -> T101\nT20 -> T103"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f146_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f146_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f1524_in([]) -> f1524_out1([], [])
   f1524_in(.(T42, T43)) -> U2(f1524_in(T43), .(T42, T43))
   U2(f1524_out1(X79, X78), .(T42, T43)) -> f1524_out1(.(T42, X78), X79)
   f2322_in([], T52) -> f2322_out1(T52)
   f2322_in(T57, []) -> f2322_out1(T57)
   f2322_in(.(T78, T79), .(T80, T81)) -> U3(f2322_in(T79, .(T80, T81)), .(T78, T79), .(T80, T81))
   U3(f2322_out1(T83), .(T78, T79), .(T80, T81)) -> f2322_out1(.(T78, T83))
   f2322_in(.(T98, T99), .(T100, T101)) -> U4(f2322_in(.(T98, T99), T101), .(T98, T99), .(T100, T101))
   U4(f2322_out1(T103), .(T98, T99), .(T100, T101)) -> f2322_out1(.(T100, T103))
   f152_in(T29, T36, T37) -> U5(f1524_in(T37), T29, T36, T37)
   U5(f1524_out1(X61, X60), T29, T36, T37) -> f152_out1(.(T29, X61), .(T36, X60))
   f146_in(T16, T17, T18) -> U6(f152_in(T16, T17, T18), T16, T17, T18)
   U6(f152_out1(T21, T22), T16, T17, T18) -> U7(f161_in(T21, T22), T16, T17, T18, T21, T22)
   U7(f161_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f146_out1(T21, T22, X24, X25, T20)
   f161_in(T21, T22) -> U8(f1_in(T21), T21, T22)
   U8(f1_out1(T44), T21, T22) -> U9(f2318_in(T22, T44), T21, T22, T44)
   U9(f2318_out1(X25, T20), T21, T22, T44) -> f161_out1(T44, X25, T20)
   f2318_in(T22, T44) -> U10(f1_in(T22), T22, T44)
   U10(f1_out1(T45), T22, T44) -> U11(f2322_in(T44, T45), T22, T44, T45)
   U11(f2322_out1(T20), T22, T44, T45) -> f2318_out1(T45, T20)

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F1_IN(.(T16, .(T17, T18))) -> U1^1(f146_in(T16, T17, T18), .(T16, .(T17, T18)))
   F1_IN(.(T16, .(T17, T18))) -> F146_IN(T16, T17, T18)
   F1524_IN(.(T42, T43)) -> U2^1(f1524_in(T43), .(T42, T43))
   F1524_IN(.(T42, T43)) -> F1524_IN(T43)
   F2322_IN(.(T78, T79), .(T80, T81)) -> U3^1(f2322_in(T79, .(T80, T81)), .(T78, T79), .(T80, T81))
   F2322_IN(.(T78, T79), .(T80, T81)) -> F2322_IN(T79, .(T80, T81))
   F2322_IN(.(T98, T99), .(T100, T101)) -> U4^1(f2322_in(.(T98, T99), T101), .(T98, T99), .(T100, T101))
   F2322_IN(.(T98, T99), .(T100, T101)) -> F2322_IN(.(T98, T99), T101)
   F152_IN(T29, T36, T37) -> U5^1(f1524_in(T37), T29, T36, T37)
   F152_IN(T29, T36, T37) -> F1524_IN(T37)
   F146_IN(T16, T17, T18) -> U6^1(f152_in(T16, T17, T18), T16, T17, T18)
   F146_IN(T16, T17, T18) -> F152_IN(T16, T17, T18)
   U6^1(f152_out1(T21, T22), T16, T17, T18) -> U7^1(f161_in(T21, T22), T16, T17, T18, T21, T22)
   U6^1(f152_out1(T21, T22), T16, T17, T18) -> F161_IN(T21, T22)
   F161_IN(T21, T22) -> U8^1(f1_in(T21), T21, T22)
   F161_IN(T21, T22) -> F1_IN(T21)
   U8^1(f1_out1(T44), T21, T22) -> U9^1(f2318_in(T22, T44), T21, T22, T44)
   U8^1(f1_out1(T44), T21, T22) -> F2318_IN(T22, T44)
   F2318_IN(T22, T44) -> U10^1(f1_in(T22), T22, T44)
   F2318_IN(T22, T44) -> F1_IN(T22)
   U10^1(f1_out1(T45), T22, T44) -> U11^1(f2322_in(T44, T45), T22, T44, T45)
   U10^1(f1_out1(T45), T22, T44) -> F2322_IN(T44, T45)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f146_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f146_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f1524_in([]) -> f1524_out1([], [])
   f1524_in(.(T42, T43)) -> U2(f1524_in(T43), .(T42, T43))
   U2(f1524_out1(X79, X78), .(T42, T43)) -> f1524_out1(.(T42, X78), X79)
   f2322_in([], T52) -> f2322_out1(T52)
   f2322_in(T57, []) -> f2322_out1(T57)
   f2322_in(.(T78, T79), .(T80, T81)) -> U3(f2322_in(T79, .(T80, T81)), .(T78, T79), .(T80, T81))
   U3(f2322_out1(T83), .(T78, T79), .(T80, T81)) -> f2322_out1(.(T78, T83))
   f2322_in(.(T98, T99), .(T100, T101)) -> U4(f2322_in(.(T98, T99), T101), .(T98, T99), .(T100, T101))
   U4(f2322_out1(T103), .(T98, T99), .(T100, T101)) -> f2322_out1(.(T100, T103))
   f152_in(T29, T36, T37) -> U5(f1524_in(T37), T29, T36, T37)
   U5(f1524_out1(X61, X60), T29, T36, T37) -> f152_out1(.(T29, X61), .(T36, X60))
   f146_in(T16, T17, T18) -> U6(f152_in(T16, T17, T18), T16, T17, T18)
   U6(f152_out1(T21, T22), T16, T17, T18) -> U7(f161_in(T21, T22), T16, T17, T18, T21, T22)
   U7(f161_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f146_out1(T21, T22, X24, X25, T20)
   f161_in(T21, T22) -> U8(f1_in(T21), T21, T22)
   U8(f1_out1(T44), T21, T22) -> U9(f2318_in(T22, T44), T21, T22, T44)
   U9(f2318_out1(X25, T20), T21, T22, T44) -> f161_out1(T44, X25, T20)
   f2318_in(T22, T44) -> U10(f1_in(T22), T22, T44)
   U10(f1_out1(T45), T22, T44) -> U11(f2322_in(T44, T45), T22, T44, T45)
   U11(f2322_out1(T20), T22, T44, T45) -> f2318_out1(T45, T20)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 12 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F2322_IN(.(T98, T99), .(T100, T101)) -> F2322_IN(.(T98, T99), T101)
   F2322_IN(.(T78, T79), .(T80, T81)) -> F2322_IN(T79, .(T80, T81))

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f146_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f146_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f1524_in([]) -> f1524_out1([], [])
   f1524_in(.(T42, T43)) -> U2(f1524_in(T43), .(T42, T43))
   U2(f1524_out1(X79, X78), .(T42, T43)) -> f1524_out1(.(T42, X78), X79)
   f2322_in([], T52) -> f2322_out1(T52)
   f2322_in(T57, []) -> f2322_out1(T57)
   f2322_in(.(T78, T79), .(T80, T81)) -> U3(f2322_in(T79, .(T80, T81)), .(T78, T79), .(T80, T81))
   U3(f2322_out1(T83), .(T78, T79), .(T80, T81)) -> f2322_out1(.(T78, T83))
   f2322_in(.(T98, T99), .(T100, T101)) -> U4(f2322_in(.(T98, T99), T101), .(T98, T99), .(T100, T101))
   U4(f2322_out1(T103), .(T98, T99), .(T100, T101)) -> f2322_out1(.(T100, T103))
   f152_in(T29, T36, T37) -> U5(f1524_in(T37), T29, T36, T37)
   U5(f1524_out1(X61, X60), T29, T36, T37) -> f152_out1(.(T29, X61), .(T36, X60))
   f146_in(T16, T17, T18) -> U6(f152_in(T16, T17, T18), T16, T17, T18)
   U6(f152_out1(T21, T22), T16, T17, T18) -> U7(f161_in(T21, T22), T16, T17, T18, T21, T22)
   U7(f161_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f146_out1(T21, T22, X24, X25, T20)
   f161_in(T21, T22) -> U8(f1_in(T21), T21, T22)
   U8(f1_out1(T44), T21, T22) -> U9(f2318_in(T22, T44), T21, T22, T44)
   U9(f2318_out1(X25, T20), T21, T22, T44) -> f161_out1(T44, X25, T20)
   f2318_in(T22, T44) -> U10(f1_in(T22), T22, T44)
   U10(f1_out1(T45), T22, T44) -> U11(f2322_in(T44, T45), T22, T44, T45)
   U11(f2322_out1(T20), T22, T44, T45) -> f2318_out1(T45, T20)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F2322_IN(.(T98, T99), .(T100, T101)) -> F2322_IN(.(T98, T99), T101)
   F2322_IN(.(T78, T79), .(T80, T81)) -> F2322_IN(T79, .(T80, T81))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F2322_IN(.(T98, T99), .(T100, T101)) -> F2322_IN(.(T98, T99), T101)
The graph contains the following edges 1 >= 1, 2 > 2


*F2322_IN(.(T78, T79), .(T80, T81)) -> F2322_IN(T79, .(T80, T81))
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F1524_IN(.(T42, T43)) -> F1524_IN(T43)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f146_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f146_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f1524_in([]) -> f1524_out1([], [])
   f1524_in(.(T42, T43)) -> U2(f1524_in(T43), .(T42, T43))
   U2(f1524_out1(X79, X78), .(T42, T43)) -> f1524_out1(.(T42, X78), X79)
   f2322_in([], T52) -> f2322_out1(T52)
   f2322_in(T57, []) -> f2322_out1(T57)
   f2322_in(.(T78, T79), .(T80, T81)) -> U3(f2322_in(T79, .(T80, T81)), .(T78, T79), .(T80, T81))
   U3(f2322_out1(T83), .(T78, T79), .(T80, T81)) -> f2322_out1(.(T78, T83))
   f2322_in(.(T98, T99), .(T100, T101)) -> U4(f2322_in(.(T98, T99), T101), .(T98, T99), .(T100, T101))
   U4(f2322_out1(T103), .(T98, T99), .(T100, T101)) -> f2322_out1(.(T100, T103))
   f152_in(T29, T36, T37) -> U5(f1524_in(T37), T29, T36, T37)
   U5(f1524_out1(X61, X60), T29, T36, T37) -> f152_out1(.(T29, X61), .(T36, X60))
   f146_in(T16, T17, T18) -> U6(f152_in(T16, T17, T18), T16, T17, T18)
   U6(f152_out1(T21, T22), T16, T17, T18) -> U7(f161_in(T21, T22), T16, T17, T18, T21, T22)
   U7(f161_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f146_out1(T21, T22, X24, X25, T20)
   f161_in(T21, T22) -> U8(f1_in(T21), T21, T22)
   U8(f1_out1(T44), T21, T22) -> U9(f2318_in(T22, T44), T21, T22, T44)
   U9(f2318_out1(X25, T20), T21, T22, T44) -> f161_out1(T44, X25, T20)
   f2318_in(T22, T44) -> U10(f1_in(T22), T22, T44)
   U10(f1_out1(T45), T22, T44) -> U11(f2322_in(T44, T45), T22, T44, T45)
   U11(f2322_out1(T20), T22, T44, T45) -> f2318_out1(T45, T20)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F1524_IN(.(T42, T43)) -> F1524_IN(T43)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F1524_IN(.(T42, T43)) -> F1524_IN(T43)
The graph contains the following edges 1 > 1


----------------------------------------

(16)
YES

----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F1_IN(.(T16, .(T17, T18))) -> F146_IN(T16, T17, T18)
   F146_IN(T16, T17, T18) -> U6^1(f152_in(T16, T17, T18), T16, T17, T18)
   U6^1(f152_out1(T21, T22), T16, T17, T18) -> F161_IN(T21, T22)
   F161_IN(T21, T22) -> U8^1(f1_in(T21), T21, T22)
   U8^1(f1_out1(T44), T21, T22) -> F2318_IN(T22, T44)
   F2318_IN(T22, T44) -> F1_IN(T22)
   F161_IN(T21, T22) -> F1_IN(T21)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f146_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f146_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f1524_in([]) -> f1524_out1([], [])
   f1524_in(.(T42, T43)) -> U2(f1524_in(T43), .(T42, T43))
   U2(f1524_out1(X79, X78), .(T42, T43)) -> f1524_out1(.(T42, X78), X79)
   f2322_in([], T52) -> f2322_out1(T52)
   f2322_in(T57, []) -> f2322_out1(T57)
   f2322_in(.(T78, T79), .(T80, T81)) -> U3(f2322_in(T79, .(T80, T81)), .(T78, T79), .(T80, T81))
   U3(f2322_out1(T83), .(T78, T79), .(T80, T81)) -> f2322_out1(.(T78, T83))
   f2322_in(.(T98, T99), .(T100, T101)) -> U4(f2322_in(.(T98, T99), T101), .(T98, T99), .(T100, T101))
   U4(f2322_out1(T103), .(T98, T99), .(T100, T101)) -> f2322_out1(.(T100, T103))
   f152_in(T29, T36, T37) -> U5(f1524_in(T37), T29, T36, T37)
   U5(f1524_out1(X61, X60), T29, T36, T37) -> f152_out1(.(T29, X61), .(T36, X60))
   f146_in(T16, T17, T18) -> U6(f152_in(T16, T17, T18), T16, T17, T18)
   U6(f152_out1(T21, T22), T16, T17, T18) -> U7(f161_in(T21, T22), T16, T17, T18, T21, T22)
   U7(f161_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f146_out1(T21, T22, X24, X25, T20)
   f161_in(T21, T22) -> U8(f1_in(T21), T21, T22)
   U8(f1_out1(T44), T21, T22) -> U9(f2318_in(T22, T44), T21, T22, T44)
   U9(f2318_out1(X25, T20), T21, T22, T44) -> f161_out1(T44, X25, T20)
   f2318_in(T22, T44) -> U10(f1_in(T22), T22, T44)
   U10(f1_out1(T45), T22, T44) -> U11(f2322_in(T44, T45), T22, T44, T45)
   U11(f2322_out1(T20), T22, T44, T45) -> f2318_out1(T45, T20)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F1_IN(.(T16, .(T17, T18))) -> F146_IN(T16, T17, T18)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( U6^1_4(x_1, ..., x_4) ) = x_1 + 2
POL( U6_4(x_1, ..., x_4) ) = 2
POL( U8^1_3(x_1, ..., x_3) ) = x_3
POL( f152_in_3(x_1, ..., x_3) ) = 2x_3
POL( U5_4(x_1, ..., x_4) ) = max{0, 2x_1 - 2}
POL( f1524_in_1(x_1) ) = x_1 + 1
POL( f1_in_1(x_1) ) = 0
POL( [] ) = 0
POL( f1_out1_1(x_1) ) = max{0, -2}
POL( ._2(x_1, x_2) ) = 2x_2 + 1
POL( U1_2(x_1, x_2) ) = max{0, -2}
POL( f146_in_3(x_1, ..., x_3) ) = 2x_1 + x_2 + 2x_3
POL( f146_out1_5(x_1, ..., x_5) ) = x_1 + x_2 + 2x_4 + 2x_5 + 2
POL( f152_out1_2(x_1, x_2) ) = max{0, x_1 + x_2 - 2}
POL( U7_6(x_1, ..., x_6) ) = 2x_1 + 2x_5 + x_6
POL( f161_in_2(x_1, x_2) ) = 2
POL( f161_out1_3(x_1, ..., x_3) ) = 2x_2
POL( U8_3(x_1, ..., x_3) ) = max{0, 2x_3 - 2}
POL( U9_4(x_1, ..., x_4) ) = x_4 + 2
POL( f2318_in_2(x_1, x_2) ) = 2
POL( f2318_out1_2(x_1, x_2) ) = 2x_1 + 2
POL( U10_3(x_1, ..., x_3) ) = x_3
POL( U11_4(x_1, ..., x_4) ) = max{0, x_4 - 2}
POL( f2322_in_2(x_1, x_2) ) = 2
POL( f1524_out1_2(x_1, x_2) ) = x_1 + x_2 + 1
POL( U2_2(x_1, x_2) ) = 2x_1
POL( f2322_out1_1(x_1) ) = max{0, -2}
POL( U3_3(x_1, ..., x_3) ) = 2
POL( U4_3(x_1, ..., x_3) ) = max{0, -2}
POL( F1_IN_1(x_1) ) = x_1
POL( F146_IN_3(x_1, ..., x_3) ) = 2x_3 + 2
POL( F161_IN_2(x_1, x_2) ) = x_1 + x_2
POL( F2318_IN_2(x_1, x_2) ) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f152_in(T29, T36, T37) -> U5(f1524_in(T37), T29, T36, T37)
   f1524_in([]) -> f1524_out1([], [])
   f1524_in(.(T42, T43)) -> U2(f1524_in(T43), .(T42, T43))
   U5(f1524_out1(X61, X60), T29, T36, T37) -> f152_out1(.(T29, X61), .(T36, X60))
   U2(f1524_out1(X79, X78), .(T42, T43)) -> f1524_out1(.(T42, X78), X79)


----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F146_IN(T16, T17, T18) -> U6^1(f152_in(T16, T17, T18), T16, T17, T18)
   U6^1(f152_out1(T21, T22), T16, T17, T18) -> F161_IN(T21, T22)
   F161_IN(T21, T22) -> U8^1(f1_in(T21), T21, T22)
   U8^1(f1_out1(T44), T21, T22) -> F2318_IN(T22, T44)
   F2318_IN(T22, T44) -> F1_IN(T22)
   F161_IN(T21, T22) -> F1_IN(T21)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f146_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f146_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f1524_in([]) -> f1524_out1([], [])
   f1524_in(.(T42, T43)) -> U2(f1524_in(T43), .(T42, T43))
   U2(f1524_out1(X79, X78), .(T42, T43)) -> f1524_out1(.(T42, X78), X79)
   f2322_in([], T52) -> f2322_out1(T52)
   f2322_in(T57, []) -> f2322_out1(T57)
   f2322_in(.(T78, T79), .(T80, T81)) -> U3(f2322_in(T79, .(T80, T81)), .(T78, T79), .(T80, T81))
   U3(f2322_out1(T83), .(T78, T79), .(T80, T81)) -> f2322_out1(.(T78, T83))
   f2322_in(.(T98, T99), .(T100, T101)) -> U4(f2322_in(.(T98, T99), T101), .(T98, T99), .(T100, T101))
   U4(f2322_out1(T103), .(T98, T99), .(T100, T101)) -> f2322_out1(.(T100, T103))
   f152_in(T29, T36, T37) -> U5(f1524_in(T37), T29, T36, T37)
   U5(f1524_out1(X61, X60), T29, T36, T37) -> f152_out1(.(T29, X61), .(T36, X60))
   f146_in(T16, T17, T18) -> U6(f152_in(T16, T17, T18), T16, T17, T18)
   U6(f152_out1(T21, T22), T16, T17, T18) -> U7(f161_in(T21, T22), T16, T17, T18, T21, T22)
   U7(f161_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f146_out1(T21, T22, X24, X25, T20)
   f161_in(T21, T22) -> U8(f1_in(T21), T21, T22)
   U8(f1_out1(T44), T21, T22) -> U9(f2318_in(T22, T44), T21, T22, T44)
   U9(f2318_out1(X25, T20), T21, T22, T44) -> f161_out1(T44, X25, T20)
   f2318_in(T22, T44) -> U10(f1_in(T22), T22, T44)
   U10(f1_out1(T45), T22, T44) -> U11(f2322_in(T44, T45), T22, T44, T45)
   U11(f2322_out1(T20), T22, T44, T45) -> f2318_out1(T45, T20)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 6 less nodes.
----------------------------------------

(21)
TRUE
