YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Sgdbt.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

greatest_common_divisor(g,g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToIRSwTTransformerProof [SOUND, 12 ms]
(2) IRSwT
(3) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
(4) IRSwT
(5) IntTRSCompressionProof [EQUIVALENT, 15 ms]
(6) IRSwT
(7) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
(8) IRSwT
(9) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
(10) TRUE


----------------------------------------

(0)
Obligation:
Clauses:

greatest_common_divisor(I, 0, I).
greatest_common_divisor(I, J, Gcd) :- ','(>(J, 0), ','(is(R, mod(I, J)), greatest_common_divisor(J, R, Gcd))).


Query: greatest_common_divisor(g,g,a)
----------------------------------------

(1) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(greatest_common_divisor I (0) I)",
                null
            ],
            [
                "(greatest_common_divisor I J Gcd)",
                "(',' (> J (0)) (',' (is R (mod I J)) (greatest_common_divisor J R Gcd)))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "12": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "13": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "16": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "39": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (> T17 (0)) (',' (is X16 (mod T16 T17)) (greatest_common_divisor T17 X16 T19)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T16",
                        "T17"
                    ],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(greatest_common_divisor T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1986": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1985": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "0"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T17",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">="
                        }]
                    },
                    "ground": [
                        "T17",
                        "T16"
                    ],
                    "free": ["X16"],
                    "exprvars": ["T17"]
                }
            },
            "3": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(greatest_common_divisor T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(greatest_common_divisor T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1984": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X16 (mod T16 T17)) (greatest_common_divisor T17 X16 T19))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "0"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T17",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<"
                        }]
                    },
                    "ground": [
                        "T17",
                        "T16"
                    ],
                    "free": ["X16"],
                    "exprvars": ["T17"]
                }
            },
            "2017": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(greatest_common_divisor T17 T20 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T20",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T16",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "name": "T17",
                                            "type": "PlainIntegerVariable"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "mod"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "type": "PlainIntegerConstant",
                                    "value": "0"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "name": "T17",
                                    "type": "PlainIntegerVariable"
                                },
                                "operation": "<"
                            }
                        ]
                    },
                    "ground": [
                        "T20",
                        "T17",
                        "T16"
                    ],
                    "free": ["X16"],
                    "exprvars": [
                        "T20",
                        "T17",
                        "T16"
                    ]
                }
            },
            "4": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(greatest_common_divisor T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(greatest_common_divisor T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "40": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 3,
                "label": "CASE"
            },
            {
                "from": 3,
                "to": 4,
                "label": "PARALLEL"
            },
            {
                "from": 3,
                "to": 5,
                "label": "PARALLEL"
            },
            {
                "from": 4,
                "to": 12,
                "label": "EVAL with clause\ngreatest_common_divisor(X5, 0, X5).\nand substitutionT1 -> T8,\nX5 -> T8,\nT2 -> 0,\nT3 -> T8"
            },
            {
                "from": 4,
                "to": 13,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 5,
                "to": 39,
                "label": "ONLY EVAL with clause\ngreatest_common_divisor(X13, X14, X15) :- ','(>(X14, 0), ','(is(X16, mod(X13, X14)), greatest_common_divisor(X14, X16, X15))).\nand substitutionT1 -> T16,\nX13 -> T16,\nT2 -> T17,\nX14 -> T17,\nT3 -> T19,\nX15 -> T19,\nT18 -> T19"
            },
            {
                "from": 12,
                "to": 16,
                "label": "SUCCESS"
            },
            {
                "from": 39,
                "to": 40,
                "label": "IS ERROR"
            },
            {
                "from": 39,
                "to": 1984,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 39,
                "to": 1985,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 1984,
                "to": 1986,
                "label": "IS ERROR"
            },
            {
                "from": 1984,
                "to": 2017,
                "label": "\nX16 -> T20"
            },
            {
                "from": 2017,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T17\nT2 -> T20\nT3 -> T19"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Rules:
f39_out(T17, T16) -> f5_out(T16, T17) :|: TRUE
f5_in(x, x1) -> f39_in(x1, x) :|: TRUE
f2017_in(x2, x3, x4) -> f1_in(x2, x3) :|: TRUE
f1_out(x5, x6) -> f2017_out(x5, x6, x7) :|: TRUE
f1984_in(x8, x9) -> f2017_in(x9, x10, x8) :|: x10 = mod(x8, x9)
f1986_out -> f1984_out(x11, x12) :|: TRUE
f2017_out(x13, x14, x15) -> f1984_out(x15, x13) :|: TRUE
f1984_in(x16, x17) -> f1986_in :|: TRUE
f39_in(x18, x19) -> f40_in :|: TRUE
f39_in(x20, x21) -> f1985_in(x20, x21) :|: x20 <= 0
f40_out -> f39_out(x22, x23) :|: TRUE
f1984_out(x24, x25) -> f39_out(x25, x24) :|: x25 > 0
f39_in(x26, x27) -> f1984_in(x27, x26) :|: x26 > 0
f1985_out(x28, x29) -> f39_out(x28, x29) :|: x28 <= 0
f1_in(T1, T2) -> f3_in(T1, T2) :|: TRUE
f3_out(x30, x31) -> f1_out(x30, x31) :|: TRUE
f4_out(x32, x33) -> f3_out(x32, x33) :|: TRUE
f3_in(x34, x35) -> f4_in(x34, x35) :|: TRUE
f3_in(x36, x37) -> f5_in(x36, x37) :|: TRUE
f5_out(x38, x39) -> f3_out(x38, x39) :|: TRUE
Start term: f1_in(T1, T2)

----------------------------------------

(3) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f5_in(x, x1) -> f39_in(x1, x) :|: TRUE
f2017_in(x2, x3, x4) -> f1_in(x2, x3) :|: TRUE
f1984_in(x8, x9) -> f2017_in(x9, x10, x8) :|: x10 = mod(x8, x9)
f39_in(x26, x27) -> f1984_in(x27, x26) :|: x26 > 0
f1_in(T1, T2) -> f3_in(T1, T2) :|: TRUE
f3_in(x36, x37) -> f5_in(x36, x37) :|: TRUE


----------------------------------------

(4)
Obligation:
Rules:
f5_in(x, x1) -> f39_in(x1, x) :|: TRUE
f2017_in(x2, x3, x4) -> f1_in(x2, x3) :|: TRUE
f1984_in(x8, x9) -> f2017_in(x9, x10, x8) :|: x10 = mod(x8, x9)
f39_in(x26, x27) -> f1984_in(x27, x26) :|: x26 > 0
f1_in(T1, T2) -> f3_in(T1, T2) :|: TRUE
f3_in(x36, x37) -> f5_in(x36, x37) :|: TRUE

----------------------------------------

(5) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(6)
Obligation:
Rules:
f5_in(x:0, x1:0) -> f5_in(x1:0, x10:0) :|: x10:0 = mod(x:0, x1:0) && TRUE && x1:0 > 0

----------------------------------------

(7) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(8)
Obligation:
Rules:
f5_in(x:0, x1:0) -> f5_in(x1:0, x10:0) :|: x10:0 = mod(x:0, x1:0) && TRUE && x1:0 > 0

----------------------------------------

(9) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f5_in(x:0, x1:0) -> f5_in(x1:0, x10:0) :|: x10:0 = mod(x:0, x1:0) && TRUE && x1:0 > 0

No arcs!

This digraph is fully evaluated!
----------------------------------------

(10)
TRUE
