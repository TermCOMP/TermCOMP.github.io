YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/0EUM3.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

range(g,g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToIRSwTTransformerProof [SOUND, 9 ms]
(2) IRSwT
(3) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
(4) IRSwT
(5) IntTRSCompressionProof [EQUIVALENT, 0 ms]
(6) IRSwT
(7) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
(8) IRSwT
(9) IRSwTTerminationDigraphProof [EQUIVALENT, 11 ms]
(10) IRSwT
(11) IntTRSCompressionProof [EQUIVALENT, 0 ms]
(12) IRSwT
(13) TempFilterProof [SOUND, 20 ms]
(14) IntTRS
(15) RankingReductionPairProof [EQUIVALENT, 0 ms]
(16) YES


----------------------------------------

(0)
Obligation:
Clauses:

range(I, I, .(I, [])).
range(I, K, .(I, L)) :- ','(<(I, K), ','(is(I1, +(I, 1)), range(I1, K, L))).


Query: range(g,g,a)
----------------------------------------

(1) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(range I I (. I ([])))",
                null
            ],
            [
                "(range I K (. I L))",
                "(',' (< I K) (',' (is I1 (+ I (1))) (range I1 K L)))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "39": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(range T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(range T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(range T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1750": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(range T19 T16 T18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [
                            {
                                "lhs": {
                                    "name": "T19",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "arguments": [
                                        {
                                            "name": "T15",
                                            "type": "PlainIntegerVariable"
                                        },
                                        {
                                            "type": "PlainIntegerConstant",
                                            "value": "1"
                                        }
                                    ],
                                    "type": "PlainIntegerOperation",
                                    "operation": "+"
                                },
                                "operation": "="
                            },
                            {
                                "lhs": {
                                    "name": "T15",
                                    "type": "PlainIntegerVariable"
                                },
                                "type": "PlainIntegerRelation",
                                "rhs": {
                                    "name": "T16",
                                    "type": "PlainIntegerVariable"
                                },
                                "operation": "<"
                            }
                        ]
                    },
                    "ground": [
                        "T19",
                        "T16",
                        "T15"
                    ],
                    "free": ["X16"],
                    "exprvars": [
                        "T19",
                        "T16",
                        "T15"
                    ]
                }
            },
            "7": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(range T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "8": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(range T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "9": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "40": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (< T15 T16) (',' (is X16 (+ T15 (1))) (range X16 T16 T18)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T15",
                        "T16"
                    ],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "1749": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T15",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T16",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">="
                        }]
                    },
                    "ground": [
                        "T16",
                        "T15"
                    ],
                    "free": ["X16"],
                    "exprvars": [
                        "T16",
                        "T15"
                    ]
                }
            },
            "41": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1748": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (is X16 (+ T15 (1))) (range X16 T16 T18))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T15",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T16",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<"
                        }]
                    },
                    "ground": [
                        "T16",
                        "T15"
                    ],
                    "free": ["X16"],
                    "exprvars": [
                        "T16",
                        "T15"
                    ]
                }
            },
            "42": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "10": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 2,
                "label": "CASE"
            },
            {
                "from": 2,
                "to": 7,
                "label": "PARALLEL"
            },
            {
                "from": 2,
                "to": 8,
                "label": "PARALLEL"
            },
            {
                "from": 7,
                "to": 9,
                "label": "EVAL with clause\nrange(X5, X5, .(X5, [])).\nand substitutionT1 -> T8,\nX5 -> T8,\nT2 -> T8,\nT3 -> .(T8, [])"
            },
            {
                "from": 7,
                "to": 10,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 8,
                "to": 40,
                "label": "EVAL with clause\nrange(X13, X14, .(X13, X15)) :- ','(<(X13, X14), ','(is(X16, +(X13, 1)), range(X16, X14, X15))).\nand substitutionT1 -> T15,\nX13 -> T15,\nT2 -> T16,\nX14 -> T16,\nX15 -> T18,\nT3 -> .(T15, T18),\nT17 -> T18"
            },
            {
                "from": 8,
                "to": 41,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 9,
                "to": 39,
                "label": "SUCCESS"
            },
            {
                "from": 40,
                "to": 42,
                "label": "IS ERROR"
            },
            {
                "from": 40,
                "to": 1748,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 40,
                "to": 1749,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 1748,
                "to": 1750,
                "label": "\nX16 -> T19"
            },
            {
                "from": 1750,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T19\nT2 -> T16\nT3 -> T18"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Rules:
f1_out(T19, T16) -> f1750_out(T19, T16, T15) :|: TRUE
f1750_in(x, x1, x2) -> f1_in(x, x1) :|: TRUE
f1748_in(x3, x4) -> f1750_in(x5, x4, x3) :|: x5 = x3 + 1
f1750_out(x6, x7, x8) -> f1748_out(x8, x7) :|: TRUE
f1748_out(x9, x10) -> f40_out(x9, x10) :|: x9 < x10
f40_in(x11, x12) -> f42_in :|: TRUE
f42_out -> f40_out(x13, x14) :|: TRUE
f1749_out(x15, x16) -> f40_out(x16, x15) :|: x16 >= x15
f40_in(x17, x18) -> f1749_in(x18, x17) :|: x17 >= x18
f40_in(x19, x20) -> f1748_in(x19, x20) :|: x19 < x20
f2_out(T1, T2) -> f1_out(T1, T2) :|: TRUE
f1_in(x21, x22) -> f2_in(x21, x22) :|: TRUE
f8_in(x23, x24) -> f41_in :|: TRUE
f8_in(x25, x26) -> f40_in(x25, x26) :|: TRUE
f40_out(x27, x28) -> f8_out(x27, x28) :|: TRUE
f41_out -> f8_out(x29, x30) :|: TRUE
f8_out(x31, x32) -> f2_out(x31, x32) :|: TRUE
f7_out(x33, x34) -> f2_out(x33, x34) :|: TRUE
f2_in(x35, x36) -> f7_in(x35, x36) :|: TRUE
f2_in(x37, x38) -> f8_in(x37, x38) :|: TRUE
Start term: f1_in(T1, T2)

----------------------------------------

(3) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f1750_in(x, x1, x2) -> f1_in(x, x1) :|: TRUE
f1748_in(x3, x4) -> f1750_in(x5, x4, x3) :|: x5 = x3 + 1
f40_in(x19, x20) -> f1748_in(x19, x20) :|: x19 < x20
f1_in(x21, x22) -> f2_in(x21, x22) :|: TRUE
f8_in(x25, x26) -> f40_in(x25, x26) :|: TRUE
f2_in(x37, x38) -> f8_in(x37, x38) :|: TRUE


----------------------------------------

(4)
Obligation:
Rules:
f1750_in(x, x1, x2) -> f1_in(x, x1) :|: TRUE
f1748_in(x3, x4) -> f1750_in(x5, x4, x3) :|: x5 = x3 + 1
f40_in(x19, x20) -> f1748_in(x19, x20) :|: x19 < x20
f1_in(x21, x22) -> f2_in(x21, x22) :|: TRUE
f8_in(x25, x26) -> f40_in(x25, x26) :|: TRUE
f2_in(x37, x38) -> f8_in(x37, x38) :|: TRUE

----------------------------------------

(5) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(6)
Obligation:
Rules:
f8_in(x25:0, x26:0) -> f8_in(x25:0 + 1, x26:0) :|: x26:0 > x25:0

----------------------------------------

(7) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(8)
Obligation:
Rules:
f8_in(x25:0, x26:0) -> f8_in(arith, x26:0) :|: x26:0 > x25:0 && arith = x25:0 + 1

----------------------------------------

(9) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f8_in(x25:0, x26:0) -> f8_in(arith, x26:0) :|: x26:0 > x25:0 && arith = x25:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(10)
Obligation:

Termination digraph:
Nodes:
(1) f8_in(x25:0, x26:0) -> f8_in(arith, x26:0) :|: x26:0 > x25:0 && arith = x25:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(11) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(12)
Obligation:
Rules:
f8_in(x25:0:0, x26:0:0) -> f8_in(x25:0:0 + 1, x26:0:0) :|: x26:0:0 > x25:0:0

----------------------------------------

(13) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f8_in(INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(14)
Obligation:
Rules:
f8_in(x25:0:0, x26:0:0) -> f8_in(c, x26:0:0) :|: c = x25:0:0 + 1 && x26:0:0 > x25:0:0

----------------------------------------

(15) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f8_in ] = f8_in_2 + -1*f8_in_1

The following rules are decreasing:
f8_in(x25:0:0, x26:0:0) -> f8_in(c, x26:0:0) :|: c = x25:0:0 + 1 && x26:0:0 > x25:0:0

The following rules are bounded:
f8_in(x25:0:0, x26:0:0) -> f8_in(c, x26:0:0) :|: c = x25:0:0 + 1 && x26:0:0 > x25:0:0


----------------------------------------

(16)
YES
