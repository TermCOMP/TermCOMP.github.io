YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/APw1S.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

desc(g)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToIRSwTTransformerProof [SOUND, 10 ms]
(2) IRSwT
(3) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
(4) IRSwT
(5) IntTRSCompressionProof [EQUIVALENT, 3 ms]
(6) IRSwT
(7) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
(8) IRSwT
(9) IRSwTTerminationDigraphProof [EQUIVALENT, 11 ms]
(10) IRSwT
(11) IntTRSCompressionProof [EQUIVALENT, 0 ms]
(12) IRSwT
(13) TempFilterProof [SOUND, 20 ms]
(14) IntTRS
(15) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
(16) YES


----------------------------------------

(0)
Obligation:
Clauses:

desc(X) :- =<(X, 0).
desc(X) :- ','(>=(X, 0), desc(-(X, 1))).


Query: desc(g)
----------------------------------------

(1) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 19,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(desc X)",
                "(=< X (0))"
            ],
            [
                "(desc X)",
                "(',' (>= X (0)) (desc (- X (1))))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "19": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(desc T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1570": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "241": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(desc T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "242": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(desc T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1569": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (>= T9 (0)) (desc (- T9 (1))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1568": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T6",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "type": "PlainIntegerConstant",
                                "value": "0"
                            },
                            "operation": "<="
                        }]
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": ["T6"]
                }
            },
            "244": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(=< T6 (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1567": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T6",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "type": "PlainIntegerConstant",
                                "value": "0"
                            },
                            "operation": ">"
                        }]
                    },
                    "ground": ["T6"],
                    "free": [],
                    "exprvars": ["T6"]
                }
            },
            "1566": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "name": "T6",
                                "type": "PlainIntegerVariable"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "type": "PlainIntegerConstant",
                                "value": "0"
                            },
                            "operation": "<="
                        }]
                    },
                    "ground": ["T6"],
                    "free": [],
                    "exprvars": ["T6"]
                }
            },
            "246": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1620": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "0"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T9",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": ">"
                        }]
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": ["T9"]
                }
            },
            "1619": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(desc (- T9 (1)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": [{
                            "lhs": {
                                "type": "PlainIntegerConstant",
                                "value": "0"
                            },
                            "type": "PlainIntegerRelation",
                            "rhs": {
                                "name": "T9",
                                "type": "PlainIntegerVariable"
                            },
                            "operation": "<="
                        }]
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": ["T9"]
                }
            },
            "20": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(desc T1)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(desc T1)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 19,
                "to": 20,
                "label": "CASE"
            },
            {
                "from": 20,
                "to": 241,
                "label": "PARALLEL"
            },
            {
                "from": 20,
                "to": 242,
                "label": "PARALLEL"
            },
            {
                "from": 241,
                "to": 244,
                "label": "ONLY EVAL with clause\ndesc(X5) :- =<(X5, 0).\nand substitutionT1 -> T6,\nX5 -> T6"
            },
            {
                "from": 242,
                "to": 1569,
                "label": "ONLY EVAL with clause\ndesc(X8) :- ','(>=(X8, 0), desc(-(X8, 1))).\nand substitutionT1 -> T9,\nX8 -> T9"
            },
            {
                "from": 244,
                "to": 246,
                "label": "IS ERROR"
            },
            {
                "from": 244,
                "to": 1566,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 244,
                "to": 1567,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 1566,
                "to": 1568,
                "label": "SUCCESS"
            },
            {
                "from": 1569,
                "to": 1570,
                "label": "IS ERROR"
            },
            {
                "from": 1569,
                "to": 1619,
                "label": "ARITHCOMP SUCCESS"
            },
            {
                "from": 1569,
                "to": 1620,
                "label": "ARITHCOMP FAIL"
            },
            {
                "from": 1619,
                "to": 19,
                "label": "INSTANCE with matching:\nT1 -> -(T9, 1)"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Rules:
f1619_out(T9) -> f1569_out(T9) :|: T9 >= 0
f1569_in(x) -> f1570_in :|: TRUE
f1569_in(x1) -> f1619_in(x1) :|: x1 >= 0
f1569_in(x2) -> f1620_in(x2) :|: x2 < 0
f1620_out(x3) -> f1569_out(x3) :|: x3 < 0
f1570_out -> f1569_out(x4) :|: TRUE
f241_out(T1) -> f20_out(T1) :|: TRUE
f20_in(x5) -> f242_in(x5) :|: TRUE
f20_in(x6) -> f241_in(x6) :|: TRUE
f242_out(x7) -> f20_out(x7) :|: TRUE
f1619_in(x8) -> f19_in(x8 - 1) :|: TRUE
f19_out(x9 - 1) -> f1619_out(x9) :|: TRUE
f19_in(x10) -> f20_in(x10) :|: TRUE
f20_out(x11) -> f19_out(x11) :|: TRUE
f242_in(x12) -> f1569_in(x12) :|: TRUE
f1569_out(x13) -> f242_out(x13) :|: TRUE
Start term: f19_in(T1)

----------------------------------------

(3) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f1569_in(x1) -> f1619_in(x1) :|: x1 >= 0
f20_in(x5) -> f242_in(x5) :|: TRUE
f1619_in(x8) -> f19_in(x8 - 1) :|: TRUE
f19_in(x10) -> f20_in(x10) :|: TRUE
f242_in(x12) -> f1569_in(x12) :|: TRUE


----------------------------------------

(4)
Obligation:
Rules:
f1569_in(x1) -> f1619_in(x1) :|: x1 >= 0
f20_in(x5) -> f242_in(x5) :|: TRUE
f1619_in(x8) -> f19_in(x8 - 1) :|: TRUE
f19_in(x10) -> f20_in(x10) :|: TRUE
f242_in(x12) -> f1569_in(x12) :|: TRUE

----------------------------------------

(5) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(6)
Obligation:
Rules:
f1569_in(x1:0) -> f1569_in(x1:0 - 1) :|: x1:0 > -1

----------------------------------------

(7) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(8)
Obligation:
Rules:
f1569_in(x1:0) -> f1569_in(arith) :|: x1:0 > -1 && arith = x1:0 - 1

----------------------------------------

(9) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f1569_in(x1:0) -> f1569_in(arith) :|: x1:0 > -1 && arith = x1:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(10)
Obligation:

Termination digraph:
Nodes:
(1) f1569_in(x1:0) -> f1569_in(arith) :|: x1:0 > -1 && arith = x1:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(11) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(12)
Obligation:
Rules:
f1569_in(x1:0:0) -> f1569_in(x1:0:0 - 1) :|: x1:0:0 > -1

----------------------------------------

(13) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f1569_in(INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(14)
Obligation:
Rules:
f1569_in(x1:0:0) -> f1569_in(c) :|: c = x1:0:0 - 1 && x1:0:0 > -1

----------------------------------------

(15) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f1569_in(x)] = x

The following rules are decreasing:
f1569_in(x1:0:0) -> f1569_in(c) :|: c = x1:0:0 - 1 && x1:0:0 > -1
The following rules are bounded:
f1569_in(x1:0:0) -> f1569_in(c) :|: c = x1:0:0 - 1 && x1:0:0 > -1

----------------------------------------

(16)
YES
