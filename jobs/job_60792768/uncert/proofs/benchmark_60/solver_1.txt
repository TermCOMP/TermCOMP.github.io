NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/YqKMt.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given CSR could be disproven:

(0) CSR
(1) CSRRRRProof [EQUIVALENT, 0 ms]
(2) CSR
(3) ContextSensitiveLoopProof [COMPLETE, 0 ms]
(4) NO


----------------------------------------

(0)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   and(tt, X) -> X
   length(nil) -> 0
   length(cons(N, L)) -> s(length(L))

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
and: {1}
tt: empty set
length: {1}
nil: empty set
s: {1}

----------------------------------------

(1) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   and(tt, X) -> X
   length(nil) -> 0
   length(cons(N, L)) -> s(length(L))

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
and: {1}
tt: empty set
length: {1}
nil: empty set
s: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(and(x_1, x_2)) = 2*x_1 + x_2
   POL(cons(x_1, x_2)) = x_1 + 2*x_2
   POL(length(x_1)) = 2*x_1
   POL(nil) = 1
   POL(s(x_1)) = 2*x_1
   POL(tt) = 1
   POL(zeros) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   and(tt, X) -> X
   length(nil) -> 0




----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   length(cons(N, L)) -> s(length(L))

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
length: {1}
s: {1}

----------------------------------------

(3) ContextSensitiveLoopProof (COMPLETE)

   zeros -> cons(0, zeros)
   length(cons(N, L)) -> s(length(L))

---------- Loop: ----------

length(zeros) -> length(cons(0, zeros)) with rule zeros -> cons(0, zeros) at position [0] and matcher [ ]

length(cons(0, zeros)) -> s(length(zeros)) with rule length(cons(N, L)) -> s(length(L)) at position [] and matcher [N / 0, L / zeros]

Now an instance of the first term with Matcher [ ] occurs in the last term at position [0].

Context: s([])

We used [[THIEMANN_LOOPS_UNDER_STRATEGIES], Theorem 1] to show that this loop is an context-sensitive loop.
----------------------------------------

(4)
NO
