YES

Problem 1: 

(VAR vu95NonEmpty M N V1 V2)
(STRATEGY CONTEXTSENSITIVE
(U11 1)
(U12 1)
(U13 1)
(U14 1)
(U15 1)
(U16 1)
(U21 1)
(U22 1)
(U23 1)
(U31 1)
(U32 1)
(U41 1)
(U51 1)
(U52 1)
(U61 1)
(U62 1)
(U63 1)
(U64 1)
(isNat)
(isNatKind)
(plus 1 2)
(num0)
(fSNonEmpty)
(s 1)
(tt)
)
(RULES
U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
U14(tt,V1,V2) -> U15(isNat(V1),V2)
U15(tt,V2) -> U16(isNat(V2))
U16(tt) -> tt
U21(tt,V1) -> U22(isNatKind(V1),V1)
U22(tt,V1) -> U23(isNat(V1))
U23(tt) -> tt
U31(tt,V2) -> U32(isNatKind(V2))
U32(tt) -> tt
U41(tt) -> tt
U51(tt,N) -> U52(isNatKind(N),N)
U52(tt,N) -> N
U61(tt,M,N) -> U62(isNatKind(M),M,N)
U62(tt,M,N) -> U63(isNat(N),M,N)
U63(tt,M,N) -> U64(isNatKind(N),M,N)
U64(tt,M,N) -> s(plus(N,M))
isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
isNat(num0) -> tt
isNat(s(V1)) -> U21(isNatKind(V1),V1)
isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
isNatKind(num0) -> tt
isNatKind(s(V1)) -> U41(isNatKind(V1))
plus(N,num0) -> U51(isNat(N),N)
plus(N,s(M)) -> U61(isNat(M),M,N)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U11Sharp(tt,V1,V2) -> U12Sharp(isNatKind(V1),V1,V2)
 U11Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U12Sharp(tt,V1,V2) -> U13Sharp(isNatKind(V2),V1,V2)
 U12Sharp(tt,V1,V2) -> ISNATKIND(V2)
 U13Sharp(tt,V1,V2) -> U14Sharp(isNatKind(V2),V1,V2)
 U13Sharp(tt,V1,V2) -> ISNATKIND(V2)
 U14Sharp(tt,V1,V2) -> U15Sharp(isNat(V1),V2)
 U14Sharp(tt,V1,V2) -> ISNAT(V1)
 U15Sharp(tt,V2) -> U16Sharp(isNat(V2))
 U15Sharp(tt,V2) -> ISNAT(V2)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U21Sharp(tt,V1) -> ISNATKIND(V1)
 U22Sharp(tt,V1) -> U23Sharp(isNat(V1))
 U22Sharp(tt,V1) -> ISNAT(V1)
 U31Sharp(tt,V2) -> U32Sharp(isNatKind(V2))
 U31Sharp(tt,V2) -> ISNATKIND(V2)
 U51Sharp(tt,N) -> U52Sharp(isNatKind(N),N)
 U51Sharp(tt,N) -> ISNATKIND(N)
 U52Sharp(tt,N) -> N
 U61Sharp(tt,M,N) -> U62Sharp(isNatKind(M),M,N)
 U61Sharp(tt,M,N) -> ISNATKIND(M)
 U62Sharp(tt,M,N) -> U63Sharp(isNat(N),M,N)
 U62Sharp(tt,M,N) -> ISNAT(N)
 U63Sharp(tt,M,N) -> U64Sharp(isNatKind(N),M,N)
 U63Sharp(tt,M,N) -> ISNATKIND(N)
 U64Sharp(tt,M,N) -> PLUS(N,M)
 U64Sharp(tt,M,N) -> M
 U64Sharp(tt,M,N) -> N
 ISNAT(plus(V1,V2)) -> U11Sharp(isNatKind(V1),V1,V2)
 ISNAT(plus(V1,V2)) -> ISNATKIND(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNAT(s(V1)) -> ISNATKIND(V1)
 ISNATKIND(plus(V1,V2)) -> U31Sharp(isNatKind(V1),V2)
 ISNATKIND(plus(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(s(V1)) -> U41Sharp(isNatKind(V1))
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
 PLUS(N,num0) -> U51Sharp(isNat(N),N)
 PLUS(N,num0) -> ISNAT(N)
 PLUS(N,s(M)) -> U61Sharp(isNat(M),M,N)
 PLUS(N,s(M)) -> ISNAT(M)
-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
-> Unhiding Rules:
 Empty

Problem 1: 

SCC Processor:
-> Pairs:
 U11Sharp(tt,V1,V2) -> U12Sharp(isNatKind(V1),V1,V2)
 U11Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U12Sharp(tt,V1,V2) -> U13Sharp(isNatKind(V2),V1,V2)
 U12Sharp(tt,V1,V2) -> ISNATKIND(V2)
 U13Sharp(tt,V1,V2) -> U14Sharp(isNatKind(V2),V1,V2)
 U13Sharp(tt,V1,V2) -> ISNATKIND(V2)
 U14Sharp(tt,V1,V2) -> U15Sharp(isNat(V1),V2)
 U14Sharp(tt,V1,V2) -> ISNAT(V1)
 U15Sharp(tt,V2) -> U16Sharp(isNat(V2))
 U15Sharp(tt,V2) -> ISNAT(V2)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U21Sharp(tt,V1) -> ISNATKIND(V1)
 U22Sharp(tt,V1) -> U23Sharp(isNat(V1))
 U22Sharp(tt,V1) -> ISNAT(V1)
 U31Sharp(tt,V2) -> U32Sharp(isNatKind(V2))
 U31Sharp(tt,V2) -> ISNATKIND(V2)
 U51Sharp(tt,N) -> U52Sharp(isNatKind(N),N)
 U51Sharp(tt,N) -> ISNATKIND(N)
 U52Sharp(tt,N) -> N
 U61Sharp(tt,M,N) -> U62Sharp(isNatKind(M),M,N)
 U61Sharp(tt,M,N) -> ISNATKIND(M)
 U62Sharp(tt,M,N) -> U63Sharp(isNat(N),M,N)
 U62Sharp(tt,M,N) -> ISNAT(N)
 U63Sharp(tt,M,N) -> U64Sharp(isNatKind(N),M,N)
 U63Sharp(tt,M,N) -> ISNATKIND(N)
 U64Sharp(tt,M,N) -> PLUS(N,M)
 U64Sharp(tt,M,N) -> M
 U64Sharp(tt,M,N) -> N
 ISNAT(plus(V1,V2)) -> U11Sharp(isNatKind(V1),V1,V2)
 ISNAT(plus(V1,V2)) -> ISNATKIND(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNAT(s(V1)) -> ISNATKIND(V1)
 ISNATKIND(plus(V1,V2)) -> U31Sharp(isNatKind(V1),V2)
 ISNATKIND(plus(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(s(V1)) -> U41Sharp(isNatKind(V1))
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
 PLUS(N,num0) -> U51Sharp(isNat(N),N)
 PLUS(N,num0) -> ISNAT(N)
 PLUS(N,s(M)) -> U61Sharp(isNat(M),M,N)
 PLUS(N,s(M)) -> ISNAT(M)
-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U31Sharp(tt,V2) -> ISNATKIND(V2)
 ISNATKIND(plus(V1,V2)) -> U31Sharp(isNatKind(V1),V2)
 ISNATKIND(plus(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
->->-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U11Sharp(tt,V1,V2) -> U12Sharp(isNatKind(V1),V1,V2)
 U12Sharp(tt,V1,V2) -> U13Sharp(isNatKind(V2),V1,V2)
 U13Sharp(tt,V1,V2) -> U14Sharp(isNatKind(V2),V1,V2)
 U14Sharp(tt,V1,V2) -> U15Sharp(isNat(V1),V2)
 U14Sharp(tt,V1,V2) -> ISNAT(V1)
 U15Sharp(tt,V2) -> ISNAT(V2)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 ISNAT(plus(V1,V2)) -> U11Sharp(isNatKind(V1),V1,V2)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
->->-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U61Sharp(tt,M,N) -> U62Sharp(isNatKind(M),M,N)
 U62Sharp(tt,M,N) -> U63Sharp(isNat(N),M,N)
 U63Sharp(tt,M,N) -> U64Sharp(isNatKind(N),M,N)
 U64Sharp(tt,M,N) -> PLUS(N,M)
 PLUS(N,s(M)) -> U61Sharp(isNat(M),M,N)
->->-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
->->-> Unhiding rules:
 Empty


The problem is decomposed in 3 subproblems.

Problem 1.1: 

SubNColl Processor:
-> Pairs:
 U31Sharp(tt,V2) -> ISNATKIND(V2)
 ISNATKIND(plus(V1,V2)) -> U31Sharp(isNatKind(V1),V2)
 ISNATKIND(plus(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
-> Unhiding rules:
 Empty
->Projection:
 pi(U31Sharp) = 2
 pi(ISNATKIND) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 U31Sharp(tt,V2) -> ISNATKIND(V2)
-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Triple Processor:
-> Pairs:
 U11Sharp(tt,V1,V2) -> U12Sharp(isNatKind(V1),V1,V2)
 U12Sharp(tt,V1,V2) -> U13Sharp(isNatKind(V2),V1,V2)
 U13Sharp(tt,V1,V2) -> U14Sharp(isNatKind(V2),V1,V2)
 U14Sharp(tt,V1,V2) -> U15Sharp(isNat(V1),V2)
 U14Sharp(tt,V1,V2) -> ISNAT(V1)
 U15Sharp(tt,V2) -> ISNAT(V2)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 ISNAT(plus(V1,V2)) -> U11Sharp(isNatKind(V1),V1,V2)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
-> Unhiding rules:
 Empty
-> Usable rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2,X3) = X1 + X2 + 2.X3 + 1
[U12](X1,X2,X3) = X1 + 2.X3 + 2
[U13](X1,X2,X3) = 2.X1 + 2
[U14](X1,X2,X3) = 2
[U15](X1,X2) = 2
[U16](X) = 2
[U21](X1,X2) = 2.X1
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = X2 + 2
[U32](X) = X + 1
[U41](X) = X + 2
[U51](X1,X2) = 0
[U52](X1,X2) = 0
[U61](X1,X2,X3) = 0
[U62](X1,X2,X3) = 0
[U63](X1,X2,X3) = 0
[U64](X1,X2,X3) = 0
[isNat](X) = X
[isNatKind](X) = X + 1
[plus](X1,X2) = 2.X1 + 2.X2 + 2
[num0] = 2
[fSNonEmpty] = 0
[s](X) = 2.X + 2
[tt] = 2
[U11Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U12Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U13Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U14Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U15Sharp](X1,X2) = 2.X1 + 2.X2 + 1
[U16Sharp](X) = 0
[U21Sharp](X1,X2) = 2.X2 + 2
[U22Sharp](X1,X2) = 2.X2 + 2
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X1,X2) = 0
[U61Sharp](X1,X2,X3) = 0
[U62Sharp](X1,X2,X3) = 0
[U63Sharp](X1,X2,X3) = 0
[U64Sharp](X1,X2,X3) = 0
[ISNAT](X) = 2.X + 2
[ISNATKIND](X) = 0
[PLUS](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 U12Sharp(tt,V1,V2) -> U13Sharp(isNatKind(V2),V1,V2)
 U13Sharp(tt,V1,V2) -> U14Sharp(isNatKind(V2),V1,V2)
 U14Sharp(tt,V1,V2) -> U15Sharp(isNat(V1),V2)
 U14Sharp(tt,V1,V2) -> ISNAT(V1)
 U15Sharp(tt,V2) -> ISNAT(V2)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 ISNAT(plus(V1,V2)) -> U11Sharp(isNatKind(V1),V1,V2)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
->->-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
->->-> Unhiding rules:
 Empty

Problem 1.2: 

SubNColl Processor:
-> Pairs:
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
-> Unhiding rules:
 Empty
->Projection:
 pi(U21Sharp) = 2
 pi(U22Sharp) = 2
 pi(ISNAT) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

SubNColl Processor:
-> Pairs:
 U61Sharp(tt,M,N) -> U62Sharp(isNatKind(M),M,N)
 U62Sharp(tt,M,N) -> U63Sharp(isNat(N),M,N)
 U63Sharp(tt,M,N) -> U64Sharp(isNatKind(N),M,N)
 U64Sharp(tt,M,N) -> PLUS(N,M)
 PLUS(N,s(M)) -> U61Sharp(isNat(M),M,N)
-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
-> Unhiding rules:
 Empty
->Projection:
 pi(U61Sharp) = 2
 pi(U62Sharp) = 2
 pi(U63Sharp) = 2
 pi(U64Sharp) = 2
 pi(PLUS) = 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 U61Sharp(tt,M,N) -> U62Sharp(isNatKind(M),M,N)
 U62Sharp(tt,M,N) -> U63Sharp(isNat(N),M,N)
 U63Sharp(tt,M,N) -> U64Sharp(isNatKind(N),M,N)
 U64Sharp(tt,M,N) -> PLUS(N,M)
-> Rules:
 U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2)
 U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2)
 U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2)
 U14(tt,V1,V2) -> U15(isNat(V1),V2)
 U15(tt,V2) -> U16(isNat(V2))
 U16(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V2) -> U32(isNatKind(V2))
 U32(tt) -> tt
 U41(tt) -> tt
 U51(tt,N) -> U52(isNatKind(N),N)
 U52(tt,N) -> N
 U61(tt,M,N) -> U62(isNatKind(M),M,N)
 U62(tt,M,N) -> U63(isNat(N),M,N)
 U63(tt,M,N) -> U64(isNatKind(N),M,N)
 U64(tt,M,N) -> s(plus(N,M))
 isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2)
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U41(isNatKind(V1))
 plus(N,num0) -> U51(isNat(N),N)
 plus(N,s(M)) -> U61(isNat(M),M,N)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
