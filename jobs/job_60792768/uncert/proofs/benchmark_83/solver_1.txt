YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/vICqv.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given CSR could be proven:

(0) CSR
(1) CSRRRRProof [EQUIVALENT, 37 ms]
(2) CSR
(3) CSRRRRProof [EQUIVALENT, 10 ms]
(4) CSR
(5) CSRRRRProof [EQUIVALENT, 0 ms]
(6) CSR
(7) CSDependencyPairsProof [EQUIVALENT, 13 ms]
(8) QCSDP
(9) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
(10) AND
    (11) QCSDP
        (12) QCSUsableRulesProof [EQUIVALENT, 0 ms]
        (13) QCSDP
        (14) QCSDPMuMonotonicPoloProof [EQUIVALENT, 12 ms]
        (15) QCSDP
        (16) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (17) QCSDP
        (18) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (19) QCSDP
        (20) PIsEmptyProof [EQUIVALENT, 0 ms]
        (21) YES
    (22) QCSDP
        (23) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (24) QCSDP
        (25) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (26) TRUE
    (27) QCSDP
        (28) QCSDPReductionPairProof [EQUIVALENT, 8 ms]
        (29) QCSDP
        (30) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (31) TRUE


----------------------------------------

(0)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U81(tt) -> nil
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(nil) -> 0
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(0, IL) -> U81(isNatIList(IL))
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
U71: {1}
U72: {1}
isNat: empty set
s: {1}
length: {1}
U81: {1}
nil: empty set
U91: {1}
U92: {1}
U93: {1}
take: {1, 2}

----------------------------------------

(1) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U81(tt) -> nil
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(nil) -> 0
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(0, IL) -> U81(isNatIList(IL))
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
U71: {1}
U72: {1}
isNat: empty set
s: {1}
length: {1}
U81: {1}
nil: empty set
U91: {1}
U92: {1}
U93: {1}
take: {1, 2}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U11(x_1)) = x_1
   POL(U21(x_1)) = x_1
   POL(U31(x_1)) = x_1
   POL(U41(x_1, x_2)) = x_1
   POL(U42(x_1)) = x_1
   POL(U51(x_1, x_2)) = x_1
   POL(U52(x_1)) = x_1
   POL(U61(x_1, x_2)) = x_1
   POL(U62(x_1)) = x_1
   POL(U71(x_1, x_2, x_3)) = x_1 + x_2
   POL(U72(x_1, x_2)) = x_1 + x_2
   POL(U81(x_1)) = x_1
   POL(U91(x_1, x_2, x_3, x_4)) = x_1 + x_2 + x_3 + x_4
   POL(U92(x_1, x_2, x_3, x_4)) = x_1 + x_2 + x_3 + x_4
   POL(U93(x_1, x_2, x_3, x_4)) = x_1 + x_2 + x_3 + x_4
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(isNat(x_1)) = 1
   POL(isNatIList(x_1)) = 1
   POL(isNatList(x_1)) = 1
   POL(length(x_1)) = 1 + x_1
   POL(nil) = 1
   POL(s(x_1)) = x_1
   POL(take(x_1, x_2)) = 1 + x_1 + x_2
   POL(tt) = 1
   POL(zeros) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   length(nil) -> 0




----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U81(tt) -> nil
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(0, IL) -> U81(isNatIList(IL))
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
U71: {1}
U72: {1}
isNat: empty set
s: {1}
length: {1}
U81: {1}
nil: empty set
U91: {1}
U92: {1}
U93: {1}
take: {1, 2}

----------------------------------------

(3) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U81(tt) -> nil
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(0, IL) -> U81(isNatIList(IL))
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
U71: {1}
U72: {1}
isNat: empty set
s: {1}
length: {1}
U81: {1}
nil: empty set
U91: {1}
U92: {1}
U93: {1}
take: {1, 2}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U11(x_1)) = x_1
   POL(U21(x_1)) = x_1
   POL(U31(x_1)) = x_1
   POL(U41(x_1, x_2)) = x_1
   POL(U42(x_1)) = x_1
   POL(U51(x_1, x_2)) = x_1
   POL(U52(x_1)) = x_1
   POL(U61(x_1, x_2)) = x_1
   POL(U62(x_1)) = x_1
   POL(U71(x_1, x_2, x_3)) = x_1 + x_2
   POL(U72(x_1, x_2)) = x_1 + x_2
   POL(U81(x_1)) = 1 + x_1
   POL(U91(x_1, x_2, x_3, x_4)) = 1 + x_1 + x_2 + x_3 + x_4
   POL(U92(x_1, x_2, x_3, x_4)) = 1 + x_1 + x_2 + x_3 + x_4
   POL(U93(x_1, x_2, x_3, x_4)) = 1 + x_1 + x_2 + x_3 + x_4
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(isNat(x_1)) = 0
   POL(isNatIList(x_1)) = 0
   POL(isNatList(x_1)) = 0
   POL(length(x_1)) = x_1
   POL(nil) = 0
   POL(s(x_1)) = x_1
   POL(take(x_1, x_2)) = 1 + x_1 + x_2
   POL(tt) = 0
   POL(zeros) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U81(tt) -> nil




----------------------------------------

(4)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(0, IL) -> U81(isNatIList(IL))
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
U71: {1}
U72: {1}
isNat: empty set
s: {1}
length: {1}
U81: {1}
nil: empty set
U91: {1}
U92: {1}
U93: {1}
take: {1, 2}

----------------------------------------

(5) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(0, IL) -> U81(isNatIList(IL))
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
U71: {1}
U72: {1}
isNat: empty set
s: {1}
length: {1}
U81: {1}
nil: empty set
U91: {1}
U92: {1}
U93: {1}
take: {1, 2}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U11(x_1)) = x_1
   POL(U21(x_1)) = x_1
   POL(U31(x_1)) = x_1
   POL(U41(x_1, x_2)) = x_1
   POL(U42(x_1)) = x_1
   POL(U51(x_1, x_2)) = x_1
   POL(U52(x_1)) = x_1
   POL(U61(x_1, x_2)) = x_1
   POL(U62(x_1)) = x_1
   POL(U71(x_1, x_2, x_3)) = x_1 + x_2
   POL(U72(x_1, x_2)) = x_1 + x_2
   POL(U81(x_1)) = x_1
   POL(U91(x_1, x_2, x_3, x_4)) = 1 + x_1 + x_2 + x_3 + x_4
   POL(U92(x_1, x_2, x_3, x_4)) = 1 + x_1 + x_2 + x_3 + x_4
   POL(U93(x_1, x_2, x_3, x_4)) = 1 + x_1 + x_2 + x_3 + x_4
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(isNat(x_1)) = 0
   POL(isNatIList(x_1)) = 0
   POL(isNatList(x_1)) = 0
   POL(length(x_1)) = x_1
   POL(nil) = 1
   POL(s(x_1)) = x_1
   POL(take(x_1, x_2)) = 1 + x_1 + x_2
   POL(tt) = 0
   POL(zeros) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   take(0, IL) -> U81(isNatIList(IL))




----------------------------------------

(6)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
U71: {1}
U72: {1}
isNat: empty set
s: {1}
length: {1}
nil: empty set
U91: {1}
U92: {1}
U93: {1}
take: {1, 2}

----------------------------------------

(7) CSDependencyPairsProof (EQUIVALENT)
Using Improved CS-DPs [LPAR08] we result in the following initial Q-CSDP problem.
----------------------------------------

(8)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U11_1, U21_1, U31_1, U42_1, U52_1, U62_1, s_1, length_1, take_2, U42'_1, U52'_1, U62'_1, LENGTH_1, U11'_1, U21'_1, U31'_1, TAKE_2} are replacing on all positions.
For all symbols f in {cons_2, U41_2, U51_2, U61_2, U71_3, U72_2, U91_4, U92_4, U93_4, U41'_2, U51'_2, U61'_2, U72'_2, U71'_3, U92'_4, U91'_4, U93'_4} we have mu(f) = {1}.
The symbols in {isNatIList_1, isNatList_1, isNat_1, ISNATILIST_1, ISNATLIST_1, ISNAT_1, U_1} are not replacing on any position.

The ordinary context-sensitive dependency pairs DP_o are:
   U41'(tt, V2) -> U42'(isNatIList(V2))
   U41'(tt, V2) -> ISNATILIST(V2)
   U51'(tt, V2) -> U52'(isNatList(V2))
   U51'(tt, V2) -> ISNATLIST(V2)
   U61'(tt, V2) -> U62'(isNatIList(V2))
   U61'(tt, V2) -> ISNATILIST(V2)
   U71'(tt, L, N) -> U72'(isNat(N), L)
   U71'(tt, L, N) -> ISNAT(N)
   U72'(tt, L) -> LENGTH(L)
   U91'(tt, IL, M, N) -> U92'(isNat(M), IL, M, N)
   U91'(tt, IL, M, N) -> ISNAT(M)
   U92'(tt, IL, M, N) -> U93'(isNat(N), IL, M, N)
   U92'(tt, IL, M, N) -> ISNAT(N)
   ISNAT(length(V1)) -> U11'(isNatList(V1))
   ISNAT(length(V1)) -> ISNATLIST(V1)
   ISNAT(s(V1)) -> U21'(isNat(V1))
   ISNAT(s(V1)) -> ISNAT(V1)
   ISNATILIST(V) -> U31'(isNatList(V))
   ISNATILIST(V) -> ISNATLIST(V)
   ISNATILIST(cons(V1, V2)) -> U41'(isNat(V1), V2)
   ISNATILIST(cons(V1, V2)) -> ISNAT(V1)
   ISNATLIST(cons(V1, V2)) -> U51'(isNat(V1), V2)
   ISNATLIST(cons(V1, V2)) -> ISNAT(V1)
   ISNATLIST(take(V1, V2)) -> U61'(isNat(V1), V2)
   ISNATLIST(take(V1, V2)) -> ISNAT(V1)
   LENGTH(cons(N, L)) -> U71'(isNatList(L), L, N)
   LENGTH(cons(N, L)) -> ISNATLIST(L)
   TAKE(s(M), cons(N, IL)) -> U91'(isNatIList(IL), IL, M, N)
   TAKE(s(M), cons(N, IL)) -> ISNATILIST(IL)

The collapsing dependency pairs are DP_c:
   U72'(tt, L) -> L
   U93'(tt, IL, M, N) -> N


The hidden terms of R are:

   zeros
   take(x0, x1)

Every hiding context is built from:
   aprove.DPFramework.CSDPProblem.QCSDPProblem$1@7df11edc

Hence, the new unhiding pairs DP_u are :
   U72'(tt, L) -> U(L)
   U93'(tt, IL, M, N) -> U(N)
   U(take(x_0, x_1)) -> U(x_0)
   U(take(x_0, x_1)) -> U(x_1)
   U(zeros) -> ZEROS
   U(take(x0, x1)) -> TAKE(x0, x1)

The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

Q is empty.

----------------------------------------

(9) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 3 SCCs with 13 less nodes.

----------------------------------------

(10)
Complex Obligation (AND)

----------------------------------------

(11)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U11_1, U21_1, U31_1, U42_1, U52_1, U62_1, s_1, length_1, take_2} are replacing on all positions.
For all symbols f in {cons_2, U41_2, U51_2, U61_2, U71_3, U72_2, U91_4, U92_4, U93_4, U51'_2, U61'_2, U41'_2} we have mu(f) = {1}.
The symbols in {isNatIList_1, isNatList_1, isNat_1, ISNATLIST_1, ISNATILIST_1, ISNAT_1} are not replacing on any position.

The TRS P consists of the following rules:

   ISNATILIST(V) -> ISNATLIST(V)
   ISNATLIST(cons(V1, V2)) -> U51'(isNat(V1), V2)
   U51'(tt, V2) -> ISNATLIST(V2)
   ISNATLIST(cons(V1, V2)) -> ISNAT(V1)
   ISNAT(length(V1)) -> ISNATLIST(V1)
   ISNATLIST(take(V1, V2)) -> U61'(isNat(V1), V2)
   U61'(tt, V2) -> ISNATILIST(V2)
   ISNATILIST(cons(V1, V2)) -> U41'(isNat(V1), V2)
   U41'(tt, V2) -> ISNATILIST(V2)
   ISNATILIST(cons(V1, V2)) -> ISNAT(V1)
   ISNAT(s(V1)) -> ISNAT(V1)
   ISNATLIST(take(V1, V2)) -> ISNAT(V1)

The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

Q is empty.

----------------------------------------

(12) QCSUsableRulesProof (EQUIVALENT)
The following rules are not useable [DA_EMMES] and can be deleted:

   zeros -> cons(0, zeros)
   U71(tt, x0, x1) -> U72(isNat(x1), x0)
   U72(tt, x0) -> s(length(x0))
   U91(tt, x0, x1, x2) -> U92(isNat(x1), x0, x1, x2)
   U92(tt, x0, x1, x2) -> U93(isNat(x2), x0, x1, x2)
   U93(tt, x0, x1, x2) -> cons(x2, take(x1, x0))
   length(cons(x0, x1)) -> U71(isNatList(x1), x1, x0)
   take(s(x0), cons(x1, x2)) -> U91(isNatIList(x2), x2, x0, x1)

----------------------------------------

(13)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {length_1, U11_1, s_1, U21_1, U52_1, take_2, U62_1, U31_1, U42_1} are replacing on all positions.
For all symbols f in {cons_2, U51_2, U61_2, U41_2, U51'_2, U61'_2, U41'_2} we have mu(f) = {1}.
The symbols in {isNat_1, isNatList_1, isNatIList_1, ISNATLIST_1, ISNATILIST_1, ISNAT_1} are not replacing on any position.

The TRS P consists of the following rules:

   ISNATILIST(V) -> ISNATLIST(V)
   ISNATLIST(cons(V1, V2)) -> U51'(isNat(V1), V2)
   U51'(tt, V2) -> ISNATLIST(V2)
   ISNATLIST(cons(V1, V2)) -> ISNAT(V1)
   ISNAT(length(V1)) -> ISNATLIST(V1)
   ISNATLIST(take(V1, V2)) -> U61'(isNat(V1), V2)
   U61'(tt, V2) -> ISNATILIST(V2)
   ISNATILIST(cons(V1, V2)) -> U41'(isNat(V1), V2)
   U41'(tt, V2) -> ISNATILIST(V2)
   ISNATILIST(cons(V1, V2)) -> ISNAT(V1)
   ISNAT(s(V1)) -> ISNAT(V1)
   ISNATLIST(take(V1, V2)) -> ISNAT(V1)

The TRS R consists of the following rules:

   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   U21(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   U61(tt, V2) -> U62(isNatIList(V2))
   isNatIList(V) -> U31(isNatList(V))
   U31(tt) -> tt
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U62(tt) -> tt
   U52(tt) -> tt
   U11(tt) -> tt

Q is empty.

----------------------------------------

(14) QCSDPMuMonotonicPoloProof (EQUIVALENT)
By using the following mu-monotonic polynomial ordering [POLO], at least one Dependency Pair or term rewrite system rule of this Q-CSDP problem can be strictly oriented and thus deleted.

Strictly oriented dependency pairs:

   ISNATLIST(cons(V1, V2)) -> U51'(isNat(V1), V2)
   U51'(tt, V2) -> ISNATLIST(V2)
   ISNATLIST(cons(V1, V2)) -> ISNAT(V1)
   ISNAT(length(V1)) -> ISNATLIST(V1)
   ISNATLIST(take(V1, V2)) -> U61'(isNat(V1), V2)
   U61'(tt, V2) -> ISNATILIST(V2)
   ISNATILIST(cons(V1, V2)) -> U41'(isNat(V1), V2)
   U41'(tt, V2) -> ISNATILIST(V2)
   ISNATILIST(cons(V1, V2)) -> ISNAT(V1)
   ISNATLIST(take(V1, V2)) -> ISNAT(V1)


Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(ISNAT(x_1)) = 2 + x_1
   POL(ISNATILIST(x_1)) = 1 + 2*x_1
   POL(ISNATLIST(x_1)) = 1 + 2*x_1
   POL(U11(x_1)) = 2*x_1
   POL(U21(x_1)) = 2*x_1
   POL(U31(x_1)) = 2*x_1
   POL(U41(x_1, x_2)) = 2*x_1
   POL(U41'(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U42(x_1)) = 2*x_1
   POL(U51(x_1, x_2)) = 2*x_1
   POL(U51'(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U52(x_1)) = x_1
   POL(U61(x_1, x_2)) = 2*x_1
   POL(U61'(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(U62(x_1)) = 2*x_1
   POL(cons(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(isNat(x_1)) = 0
   POL(isNatIList(x_1)) = 0
   POL(isNatList(x_1)) = 0
   POL(length(x_1)) = 2*x_1
   POL(nil) = 2
   POL(s(x_1)) = x_1
   POL(take(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(tt) = 0
   POL(zeros) = 2


----------------------------------------

(15)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {length_1, U11_1, s_1, U21_1, U52_1, take_2, U62_1, U31_1, U42_1} are replacing on all positions.
For all symbols f in {cons_2, U51_2, U61_2, U41_2} we have mu(f) = {1}.
The symbols in {isNat_1, isNatList_1, isNatIList_1, ISNATLIST_1, ISNATILIST_1, ISNAT_1} are not replacing on any position.

The TRS P consists of the following rules:

   ISNATILIST(V) -> ISNATLIST(V)
   ISNAT(s(V1)) -> ISNAT(V1)

The TRS R consists of the following rules:

   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   U21(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   U61(tt, V2) -> U62(isNatIList(V2))
   isNatIList(V) -> U31(isNatList(V))
   U31(tt) -> tt
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U62(tt) -> tt
   U52(tt) -> tt
   U11(tt) -> tt

Q is empty.

----------------------------------------

(16) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 1 SCC with 1 less node.

----------------------------------------

(17)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {length_1, U11_1, s_1, U21_1, U52_1, take_2, U62_1, U31_1, U42_1} are replacing on all positions.
For all symbols f in {cons_2, U51_2, U61_2, U41_2} we have mu(f) = {1}.
The symbols in {isNat_1, isNatList_1, isNatIList_1, ISNAT_1} are not replacing on any position.

The TRS P consists of the following rules:

   ISNAT(s(V1)) -> ISNAT(V1)

The TRS R consists of the following rules:

   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   U21(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   U61(tt, V2) -> U62(isNatIList(V2))
   isNatIList(V) -> U31(isNatList(V))
   U31(tt) -> tt
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U62(tt) -> tt
   U52(tt) -> tt
   U11(tt) -> tt

Q is empty.

----------------------------------------

(18) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   ISNAT(s(V1)) -> ISNAT(V1)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
ISNAT(x1)  =  x1


Subterm Order

----------------------------------------

(19)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {length_1, U11_1, s_1, U21_1, U52_1, take_2, U62_1, U31_1, U42_1} are replacing on all positions.
For all symbols f in {cons_2, U51_2, U61_2, U41_2} we have mu(f) = {1}.
The symbols in {isNat_1, isNatList_1, isNatIList_1} are not replacing on any position.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   U21(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   U61(tt, V2) -> U62(isNatIList(V2))
   isNatIList(V) -> U31(isNatList(V))
   U31(tt) -> tt
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U62(tt) -> tt
   U52(tt) -> tt
   U11(tt) -> tt

Q is empty.

----------------------------------------

(20) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U11_1, U21_1, U31_1, U42_1, U52_1, U62_1, s_1, length_1, take_2, TAKE_2} are replacing on all positions.
For all symbols f in {cons_2, U41_2, U51_2, U61_2, U71_3, U72_2, U91_4, U92_4, U93_4, U92'_4, U91'_4, U93'_4} we have mu(f) = {1}.
The symbols in {isNatIList_1, isNatList_1, isNat_1, U_1} are not replacing on any position.

The TRS P consists of the following rules:

   U91'(tt, IL, M, N) -> U92'(isNat(M), IL, M, N)
   U92'(tt, IL, M, N) -> U93'(isNat(N), IL, M, N)
   U93'(tt, IL, M, N) -> U(N)
   U(take(x_0, x_1)) -> U(x_0)
   U(take(x_0, x_1)) -> U(x_1)
   U(take(x0, x1)) -> TAKE(x0, x1)
   TAKE(s(M), cons(N, IL)) -> U91'(isNatIList(IL), IL, M, N)

The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

Q is empty.

----------------------------------------

(23) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   U(take(x_0, x_1)) -> U(x_0)
   U(take(x_0, x_1)) -> U(x_1)
   U(take(x0, x1)) -> TAKE(x0, x1)
   TAKE(s(M), cons(N, IL)) -> U91'(isNatIList(IL), IL, M, N)
The remaining pairs can at least be oriented weakly.

   U91'(tt, IL, M, N) -> U92'(isNat(M), IL, M, N)
   U92'(tt, IL, M, N) -> U93'(isNat(N), IL, M, N)
   U93'(tt, IL, M, N) -> U(N)
Used ordering:  Combined order from the following AFS and order.
U92'(x1, x2, x3, x4)  =  x4

U91'(x1, x2, x3, x4)  =  x4

U93'(x1, x2, x3, x4)  =  x4

U(x1)  =  x1

TAKE(x1, x2)  =  x2


Subterm Order

----------------------------------------

(24)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U11_1, U21_1, U31_1, U42_1, U52_1, U62_1, s_1, length_1, take_2} are replacing on all positions.
For all symbols f in {cons_2, U41_2, U51_2, U61_2, U71_3, U72_2, U91_4, U92_4, U93_4, U92'_4, U91'_4, U93'_4} we have mu(f) = {1}.
The symbols in {isNatIList_1, isNatList_1, isNat_1, U_1} are not replacing on any position.

The TRS P consists of the following rules:

   U91'(tt, IL, M, N) -> U92'(isNat(M), IL, M, N)
   U92'(tt, IL, M, N) -> U93'(isNat(N), IL, M, N)
   U93'(tt, IL, M, N) -> U(N)

The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

Q is empty.

----------------------------------------

(25) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 3 less nodes.

----------------------------------------

(26)
TRUE

----------------------------------------

(27)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U11_1, U21_1, U31_1, U42_1, U52_1, U62_1, s_1, length_1, take_2, LENGTH_1} are replacing on all positions.
For all symbols f in {cons_2, U41_2, U51_2, U61_2, U71_3, U72_2, U91_4, U92_4, U93_4, U72'_2, U71'_3} we have mu(f) = {1}.
The symbols in {isNatIList_1, isNatList_1, isNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U71'(tt, L, N) -> U72'(isNat(N), L)
   U72'(tt, L) -> LENGTH(L)
   LENGTH(cons(N, L)) -> U71'(isNatList(L), L, N)

The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

Q is empty.

----------------------------------------

(28) QCSDPReductionPairProof (EQUIVALENT)
Using the order

Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(LENGTH(x_1)) = 2*x_1
   POL(U11(x_1)) = x_1
   POL(U21(x_1)) = x_1
   POL(U31(x_1)) = 2
   POL(U41(x_1, x_2)) = 2
   POL(U42(x_1)) = x_1
   POL(U51(x_1, x_2)) = 2*x_2
   POL(U52(x_1)) = x_1
   POL(U61(x_1, x_2)) = x_1
   POL(U62(x_1)) = x_1
   POL(U71(x_1, x_2, x_3)) = 2*x_2
   POL(U71'(x_1, x_2, x_3)) = x_1 + 2*x_2
   POL(U72(x_1, x_2)) = 2*x_2
   POL(U72'(x_1, x_2)) = 1 + 2*x_2
   POL(U91(x_1, x_2, x_3, x_4)) = 2*x_3
   POL(U92(x_1, x_2, x_3, x_4)) = 2*x_3
   POL(U93(x_1, x_2, x_3, x_4)) = 2*x_3
   POL(cons(x_1, x_2)) = 2*x_2
   POL(isNat(x_1)) = 2*x_1
   POL(isNatIList(x_1)) = 2
   POL(isNatList(x_1)) = 2*x_1
   POL(length(x_1)) = x_1
   POL(nil) = 2
   POL(s(x_1)) = 2*x_1
   POL(take(x_1, x_2)) = x_1
   POL(tt) = 2
   POL(zeros) = 0


the following usable rules


   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   U31(tt) -> tt
   zeros -> cons(0, zeros)
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U11(tt) -> tt
   U21(tt) -> tt


could all be oriented weakly.

Furthermore, the pairs


   U71'(tt, L, N) -> U72'(isNat(N), L)
   U72'(tt, L) -> LENGTH(L)


could be oriented strictly and thus removed by the CS-Reduction Pair Processor [LPAR08,DA_EMMES].


----------------------------------------

(29)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U11_1, U21_1, U31_1, U42_1, U52_1, U62_1, s_1, length_1, take_2, LENGTH_1} are replacing on all positions.
For all symbols f in {cons_2, U41_2, U51_2, U61_2, U71_3, U72_2, U91_4, U92_4, U93_4, U71'_3} we have mu(f) = {1}.
The symbols in {isNatIList_1, isNatList_1, isNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   LENGTH(cons(N, L)) -> U71'(isNatList(L), L, N)

The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, V2) -> U62(isNatIList(V2))
   U62(tt) -> tt
   U71(tt, L, N) -> U72(isNat(N), L)
   U72(tt, L) -> s(length(L))
   U91(tt, IL, M, N) -> U92(isNat(M), IL, M, N)
   U92(tt, IL, M, N) -> U93(isNat(N), IL, M, N)
   U93(tt, IL, M, N) -> cons(N, take(M, IL))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   isNatList(take(V1, V2)) -> U61(isNat(V1), V2)
   length(cons(N, L)) -> U71(isNatList(L), L, N)
   take(s(M), cons(N, IL)) -> U91(isNatIList(IL), IL, M, N)

Q is empty.

----------------------------------------

(30) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 1 less node.

----------------------------------------

(31)
TRUE
