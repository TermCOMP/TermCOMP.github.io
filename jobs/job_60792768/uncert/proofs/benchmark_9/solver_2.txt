YES

Problem 1: 

(VAR vu95NonEmpty L X Y)
(STRATEGY CONTEXTSENSITIVE
(eq)
(inf 1)
(length 1)
(take 1 2)
(num0)
(cons)
(fSNonEmpty)
(ffalse)
(nil)
(s)
(ftrue)
)
(RULES
eq(num0,num0) -> ftrue
eq(s(X),s(Y)) -> eq(X,Y)
eq(X,Y) -> ffalse
inf(X) -> cons(X,inf(s(X)))
length(cons(X,L)) -> s(length(L))
length(nil) -> num0
take(num0,X) -> nil
take(s(X),cons(Y,L)) -> cons(Y,take(X,L))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 EQ(s(X),s(Y)) -> EQ(X,Y)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(s(X),s(Y)) -> eq(X,Y)
 eq(X,Y) -> ffalse
 inf(X) -> cons(X,inf(s(X)))
 length(cons(X,L)) -> s(length(L))
 length(nil) -> num0
 take(num0,X) -> nil
 take(s(X),cons(Y,L)) -> cons(Y,take(X,L))
-> Unhiding Rules:
 Empty

Problem 1: 

SCC Processor:
-> Pairs:
 EQ(s(X),s(Y)) -> EQ(X,Y)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(s(X),s(Y)) -> eq(X,Y)
 eq(X,Y) -> ffalse
 inf(X) -> cons(X,inf(s(X)))
 length(cons(X,L)) -> s(length(L))
 length(nil) -> num0
 take(num0,X) -> nil
 take(s(X),cons(Y,L)) -> cons(Y,take(X,L))
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 EQ(s(X),s(Y)) -> EQ(X,Y)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(s(X),s(Y)) -> eq(X,Y)
 eq(X,Y) -> ffalse
 inf(X) -> cons(X,inf(s(X)))
 length(cons(X,L)) -> s(length(L))
 length(nil) -> num0
 take(num0,X) -> nil
 take(s(X),cons(Y,L)) -> cons(Y,take(X,L))
->->-> Unhiding rules:
 Empty

Problem 1: 

Reduction Triple Processor:
-> Pairs:
 EQ(s(X),s(Y)) -> EQ(X,Y)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(s(X),s(Y)) -> eq(X,Y)
 eq(X,Y) -> ffalse
 inf(X) -> cons(X,inf(s(X)))
 length(cons(X,L)) -> s(length(L))
 length(nil) -> num0
 take(num0,X) -> nil
 take(s(X),cons(Y,L)) -> cons(Y,take(X,L))
-> Unhiding rules:
 Empty
-> Usable rules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[eq](X1,X2) = 0
[inf](X) = 0
[length](X) = 0
[take](X1,X2) = 0
[num0] = 0
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[ffalse] = 0
[nil] = 0
[s](X) = 2.X + 2
[ftrue] = 0
[EQ](X1,X2) = 2.X1 + 2.X2
[INF](X) = 0
[LENGTH](X) = 0
[TAKE](X1,X2) = 0

Problem 1: 

Basic Processor:
-> Pairs:
 Empty
-> Rules:
 eq(num0,num0) -> ftrue
 eq(s(X),s(Y)) -> eq(X,Y)
 eq(X,Y) -> ffalse
 inf(X) -> cons(X,inf(s(X)))
 length(cons(X,L)) -> s(length(L))
 length(nil) -> num0
 take(num0,X) -> nil
 take(s(X),cons(Y,L)) -> cons(Y,take(X,L))
-> Unhiding rules:
 Empty
-> Result:
 Set P is empty

The problem is finite.
