YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Pzhfx.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given CSR could be proven:

(0) CSR
(1) CSRRRRProof [EQUIVALENT, 43 ms]
(2) CSR
(3) CSRRRRProof [EQUIVALENT, 0 ms]
(4) CSR
(5) CSRRRRProof [EQUIVALENT, 0 ms]
(6) CSR
(7) CSRRRRProof [EQUIVALENT, 0 ms]
(8) CSR
(9) CSRRRRProof [EQUIVALENT, 2 ms]
(10) CSR
(11) CSRRRRProof [EQUIVALENT, 0 ms]
(12) CSR
(13) CSRRRRProof [EQUIVALENT, 0 ms]
(14) CSR
(15) CSRRRRProof [EQUIVALENT, 0 ms]
(16) CSR
(17) CSRRRRProof [EQUIVALENT, 0 ms]
(18) CSR
(19) RisEmptyProof [EQUIVALENT, 0 ms]
(20) YES


----------------------------------------

(0)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   zip(nil, XS) -> nil
   zip(X, nil) -> nil
   zip(cons(X, XS), cons(Y, YS)) -> cons(pair(X, Y), zip(XS, YS))
   tail(cons(X, XS)) -> XS
   repItems(nil) -> nil
   repItems(cons(X, XS)) -> cons(X, cons(X, repItems(XS)))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set
zip: {1, 2}
pair: {1, 2}
tail: {1}
repItems: {1}

----------------------------------------

(1) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   zip(nil, XS) -> nil
   zip(X, nil) -> nil
   zip(cons(X, XS), cons(Y, YS)) -> cons(pair(X, Y), zip(XS, YS))
   tail(cons(X, XS)) -> XS
   repItems(nil) -> nil
   repItems(cons(X, XS)) -> cons(X, cons(X, repItems(XS)))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set
zip: {1, 2}
pair: {1, 2}
tail: {1}
repItems: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(cons(x_1, x_2)) = 2*x_1 + x_2
   POL(incr(x_1)) = 2*x_1
   POL(nil) = 0
   POL(oddNs) = 0
   POL(pair(x_1, x_2)) = x_1 + x_2
   POL(pairNs) = 0
   POL(repItems(x_1)) = 2 + 2*x_1
   POL(s(x_1)) = 2*x_1
   POL(tail(x_1)) = 2*x_1
   POL(take(x_1, x_2)) = x_1 + 2*x_2
   POL(zip(x_1, x_2)) = 2*x_1 + 2*x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   repItems(nil) -> nil




----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   zip(nil, XS) -> nil
   zip(X, nil) -> nil
   zip(cons(X, XS), cons(Y, YS)) -> cons(pair(X, Y), zip(XS, YS))
   tail(cons(X, XS)) -> XS
   repItems(cons(X, XS)) -> cons(X, cons(X, repItems(XS)))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set
zip: {1, 2}
pair: {1, 2}
tail: {1}
repItems: {1}

----------------------------------------

(3) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   zip(nil, XS) -> nil
   zip(X, nil) -> nil
   zip(cons(X, XS), cons(Y, YS)) -> cons(pair(X, Y), zip(XS, YS))
   tail(cons(X, XS)) -> XS
   repItems(cons(X, XS)) -> cons(X, cons(X, repItems(XS)))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set
zip: {1, 2}
pair: {1, 2}
tail: {1}
repItems: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(cons(x_1, x_2)) = 2*x_1 + x_2
   POL(incr(x_1)) = x_1
   POL(nil) = 0
   POL(oddNs) = 0
   POL(pair(x_1, x_2)) = x_1 + x_2
   POL(pairNs) = 0
   POL(repItems(x_1)) = 2 + 2*x_1
   POL(s(x_1)) = x_1
   POL(tail(x_1)) = 1 + 2*x_1
   POL(take(x_1, x_2)) = x_1 + 2*x_2
   POL(zip(x_1, x_2)) = x_1 + 2*x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   tail(cons(X, XS)) -> XS




----------------------------------------

(4)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   zip(nil, XS) -> nil
   zip(X, nil) -> nil
   zip(cons(X, XS), cons(Y, YS)) -> cons(pair(X, Y), zip(XS, YS))
   repItems(cons(X, XS)) -> cons(X, cons(X, repItems(XS)))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set
zip: {1, 2}
pair: {1, 2}
repItems: {1}

----------------------------------------

(5) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   zip(nil, XS) -> nil
   zip(X, nil) -> nil
   zip(cons(X, XS), cons(Y, YS)) -> cons(pair(X, Y), zip(XS, YS))
   repItems(cons(X, XS)) -> cons(X, cons(X, repItems(XS)))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set
zip: {1, 2}
pair: {1, 2}
repItems: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(cons(x_1, x_2)) = 1 + x_1
   POL(incr(x_1)) = x_1
   POL(nil) = 1
   POL(oddNs) = 1
   POL(pair(x_1, x_2)) = 1 + x_1 + x_2
   POL(pairNs) = 1
   POL(repItems(x_1)) = x_1
   POL(s(x_1)) = x_1
   POL(take(x_1, x_2)) = 1 + x_1 + x_2
   POL(zip(x_1, x_2)) = x_1 + x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))




----------------------------------------

(6)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil
   zip(nil, XS) -> nil
   zip(X, nil) -> nil
   zip(cons(X, XS), cons(Y, YS)) -> cons(pair(X, Y), zip(XS, YS))
   repItems(cons(X, XS)) -> cons(X, cons(X, repItems(XS)))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set
zip: {1, 2}
pair: {1, 2}
repItems: {1}

----------------------------------------

(7) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil
   zip(nil, XS) -> nil
   zip(X, nil) -> nil
   zip(cons(X, XS), cons(Y, YS)) -> cons(pair(X, Y), zip(XS, YS))
   repItems(cons(X, XS)) -> cons(X, cons(X, repItems(XS)))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set
zip: {1, 2}
pair: {1, 2}
repItems: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(cons(x_1, x_2)) = 1 + x_1
   POL(incr(x_1)) = x_1
   POL(nil) = 1
   POL(oddNs) = 1
   POL(pair(x_1, x_2)) = 1 + x_1 + x_2
   POL(pairNs) = 1
   POL(repItems(x_1)) = 1 + x_1
   POL(s(x_1)) = x_1
   POL(take(x_1, x_2)) = 1 + x_1 + x_2
   POL(zip(x_1, x_2)) = x_1 + x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   repItems(cons(X, XS)) -> cons(X, cons(X, repItems(XS)))




----------------------------------------

(8)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil
   zip(nil, XS) -> nil
   zip(X, nil) -> nil
   zip(cons(X, XS), cons(Y, YS)) -> cons(pair(X, Y), zip(XS, YS))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set
zip: {1, 2}
pair: {1, 2}

----------------------------------------

(9) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil
   zip(nil, XS) -> nil
   zip(X, nil) -> nil
   zip(cons(X, XS), cons(Y, YS)) -> cons(pair(X, Y), zip(XS, YS))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set
zip: {1, 2}
pair: {1, 2}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(cons(x_1, x_2)) = 1 + x_1
   POL(incr(x_1)) = x_1
   POL(nil) = 1
   POL(oddNs) = 1
   POL(pair(x_1, x_2)) = 1 + x_1 + x_2
   POL(pairNs) = 1
   POL(s(x_1)) = x_1
   POL(take(x_1, x_2)) = 1 + x_1 + x_2
   POL(zip(x_1, x_2)) = 1 + x_1 + x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   zip(nil, XS) -> nil
   zip(X, nil) -> nil
   zip(cons(X, XS), cons(Y, YS)) -> cons(pair(X, Y), zip(XS, YS))




----------------------------------------

(10)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set

----------------------------------------

(11) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))
   take(0, XS) -> nil

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
take: {1, 2}
nil: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(incr(x_1)) = x_1
   POL(nil) = 0
   POL(oddNs) = 1
   POL(pairNs) = 1
   POL(s(x_1)) = x_1
   POL(take(x_1, x_2)) = 1 + x_1 + x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   take(0, XS) -> nil




----------------------------------------

(12)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}

----------------------------------------

(13) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   pairNs -> cons(0, incr(oddNs))
   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
0: empty set
incr: {1}
oddNs: empty set
s: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(cons(x_1, x_2)) = x_1
   POL(incr(x_1)) = x_1
   POL(oddNs) = 1
   POL(pairNs) = 1
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   pairNs -> cons(0, incr(oddNs))




----------------------------------------

(14)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
incr: {1}
oddNs: empty set
s: {1}

----------------------------------------

(15) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   oddNs -> incr(pairNs)
   incr(cons(X, XS)) -> cons(s(X), incr(XS))

The replacement map contains the following entries:

pairNs: empty set
cons: {1}
incr: {1}
oddNs: empty set
s: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(cons(x_1, x_2)) = x_1
   POL(incr(x_1)) = 1 + x_1
   POL(oddNs) = 1
   POL(pairNs) = 0
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   incr(cons(X, XS)) -> cons(s(X), incr(XS))




----------------------------------------

(16)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   oddNs -> incr(pairNs)

The replacement map contains the following entries:

pairNs: empty set
incr: {1}
oddNs: empty set

----------------------------------------

(17) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   oddNs -> incr(pairNs)

The replacement map contains the following entries:

pairNs: empty set
incr: {1}
oddNs: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(incr(x_1)) = 1 + 2*x_1
   POL(oddNs) = 2
   POL(pairNs) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   oddNs -> incr(pairNs)




----------------------------------------

(18)
Obligation:
Context-sensitive rewrite system:
R is empty.

----------------------------------------

(19) RisEmptyProof (EQUIVALENT)
The CSR R is empty. Hence, termination is trivially proven.
----------------------------------------

(20)
YES
