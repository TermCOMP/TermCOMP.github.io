YES

Problem 1: 

(VAR vu95NonEmpty M N X)
(STRATEGY CONTEXTSENSITIVE
(and 1)
(plus 1 2)
(num0)
(fSNonEmpty)
(s 1)
(tt)
)
(RULES
and(tt,X) -> X
plus(N,num0) -> N
plus(N,s(M)) -> s(plus(N,M))
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 and(tt,X) -> X
 plus(N,num0) -> N
 plus(N,s(M)) -> s(plus(N,M))
-> The context-sensitive term rewriting system is an orthogonal system. Therefore, innermost cs-termination implies cs-termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AND(tt,X) -> X
 PLUS(N,s(M)) -> PLUS(N,M)
-> Rules:
 and(tt,X) -> X
 plus(N,num0) -> N
 plus(N,s(M)) -> s(plus(N,M))
-> Unhiding Rules:
 Empty

Problem 1: 

SCC Processor:
-> Pairs:
 AND(tt,X) -> X
 PLUS(N,s(M)) -> PLUS(N,M)
-> Rules:
 and(tt,X) -> X
 plus(N,num0) -> N
 plus(N,s(M)) -> s(plus(N,M))
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(N,s(M)) -> PLUS(N,M)
->->-> Rules:
 and(tt,X) -> X
 plus(N,num0) -> N
 plus(N,s(M)) -> s(plus(N,M))
->->-> Unhiding rules:
 Empty

Problem 1: 

SubNColl Processor:
-> Pairs:
 PLUS(N,s(M)) -> PLUS(N,M)
-> Rules:
 and(tt,X) -> X
 plus(N,num0) -> N
 plus(N,s(M)) -> s(plus(N,M))
-> Unhiding rules:
 Empty
->Projection:
 pi(PLUS) = 2

Problem 1: 

Basic Processor:
-> Pairs:
 Empty
-> Rules:
 and(tt,X) -> X
 plus(N,num0) -> N
 plus(N,s(M)) -> s(plus(N,M))
-> Unhiding rules:
 Empty
-> Result:
 Set P is empty

The problem is finite.
