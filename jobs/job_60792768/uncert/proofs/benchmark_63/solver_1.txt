YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/8XagN.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given CSR could be proven:

(0) CSR
(1) CSDependencyPairsProof [EQUIVALENT, 212 ms]
(2) QCSDP
(3) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QCSDP
        (6) QCSUsableRulesProof [EQUIVALENT, 0 ms]
        (7) QCSDP
        (8) QCSDPMuMonotonicPoloProof [EQUIVALENT, 15 ms]
        (9) QCSDP
        (10) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (11) QCSDP
        (12) PIsEmptyProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QCSDP
        (15) QCSUsableRulesProof [EQUIVALENT, 0 ms]
        (16) QCSDP
        (17) QCSDPMuMonotonicPoloProof [EQUIVALENT, 84 ms]
        (18) QCSDP
        (19) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (20) TRUE
    (21) QCSDP
        (22) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (23) QCSDP
        (24) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (25) TRUE
    (26) QCSDP
        (27) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (28) QCSDP
        (29) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (30) TRUE


----------------------------------------

(0)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   U101(tt, V1, V2) -> U102(isNaturalKind(V1), V1, V2)
   U102(tt, V1, V2) -> U103(isLNatKind(V2), V1, V2)
   U103(tt, V1, V2) -> U104(isLNatKind(V2), V1, V2)
   U104(tt, V1, V2) -> U105(isNatural(V1), V2)
   U105(tt, V2) -> U106(isLNat(V2))
   U106(tt) -> tt
   U11(tt, N, XS) -> U12(isNaturalKind(N), N, XS)
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt
   U12(tt, N, XS) -> U13(isLNat(XS), N, XS)
   U121(tt, V2) -> U122(isLNatKind(V2))
   U122(tt) -> tt
   U13(tt, N, XS) -> U14(isLNatKind(XS), N, XS)
   U131(tt) -> tt
   U14(tt, N, XS) -> snd(splitAt(N, XS))
   U141(tt) -> tt
   U151(tt) -> tt
   U161(tt) -> tt
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U181(tt, V1) -> U182(isLNatKind(V1), V1)
   U182(tt, V1) -> U183(isLNat(V1))
   U183(tt) -> tt
   U191(tt, V1) -> U192(isNaturalKind(V1), V1)
   U192(tt, V1) -> U193(isNatural(V1))
   U193(tt) -> tt
   U201(tt, V1, V2) -> U202(isNaturalKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isLNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isLNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNatural(V1), V2)
   U205(tt, V2) -> U206(isLNat(V2))
   U206(tt) -> tt
   U21(tt, X, Y) -> U22(isLNatKind(X), X, Y)
   U211(tt) -> tt
   U22(tt, X, Y) -> U23(isLNat(Y), X, Y)
   U221(tt) -> tt
   U23(tt, X, Y) -> U24(isLNatKind(Y), X)
   U231(tt, V2) -> U232(isLNatKind(V2))
   U232(tt) -> tt
   U24(tt, X) -> X
   U241(tt, V1, V2) -> U242(isLNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isLNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isLNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isLNat(V1), V2)
   U245(tt, V2) -> U246(isLNat(V2))
   U246(tt) -> tt
   U251(tt, V1, V2) -> U252(isNaturalKind(V1), V1, V2)
   U252(tt, V1, V2) -> U253(isLNatKind(V2), V1, V2)
   U253(tt, V1, V2) -> U254(isLNatKind(V2), V1, V2)
   U254(tt, V1, V2) -> U255(isNatural(V1), V2)
   U255(tt, V2) -> U256(isLNat(V2))
   U256(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isLNatKind(V2))
   U272(tt) -> tt
   U281(tt, N) -> U282(isNaturalKind(N), N)
   U282(tt, N) -> cons(N, natsFrom(s(N)))
   U291(tt, N, XS) -> U292(isNaturalKind(N), N, XS)
   U292(tt, N, XS) -> U293(isLNat(XS), N, XS)
   U293(tt, N, XS) -> U294(isLNatKind(XS), N, XS)
   U294(tt, N, XS) -> head(afterNth(N, XS))
   U301(tt, X, Y) -> U302(isLNatKind(X), Y)
   U302(tt, Y) -> U303(isLNat(Y), Y)
   U303(tt, Y) -> U304(isLNatKind(Y), Y)
   U304(tt, Y) -> Y
   U31(tt, N, XS) -> U32(isNaturalKind(N), N, XS)
   U311(tt, XS) -> U312(isLNatKind(XS), XS)
   U312(tt, XS) -> pair(nil, XS)
   U32(tt, N, XS) -> U33(isLNat(XS), N, XS)
   U321(tt, N, X, XS) -> U322(isNaturalKind(N), N, X, XS)
   U322(tt, N, X, XS) -> U323(isNatural(X), N, X, XS)
   U323(tt, N, X, XS) -> U324(isNaturalKind(X), N, X, XS)
   U324(tt, N, X, XS) -> U325(isLNat(XS), N, X, XS)
   U325(tt, N, X, XS) -> U326(isLNatKind(XS), N, X, XS)
   U326(tt, N, X, XS) -> U327(splitAt(N, XS), X)
   U327(pair(YS, ZS), X) -> pair(cons(X, YS), ZS)
   U33(tt, N, XS) -> U34(isLNatKind(XS), N)
   U331(tt, N, XS) -> U332(isNaturalKind(N), XS)
   U332(tt, XS) -> U333(isLNat(XS), XS)
   U333(tt, XS) -> U334(isLNatKind(XS), XS)
   U334(tt, XS) -> XS
   U34(tt, N) -> N
   U341(tt, N, XS) -> U342(isNaturalKind(N), N, XS)
   U342(tt, N, XS) -> U343(isLNat(XS), N, XS)
   U343(tt, N, XS) -> U344(isLNatKind(XS), N, XS)
   U344(tt, N, XS) -> fst(splitAt(N, XS))
   U41(tt, V1, V2) -> U42(isNaturalKind(V1), V1, V2)
   U42(tt, V1, V2) -> U43(isLNatKind(V2), V1, V2)
   U43(tt, V1, V2) -> U44(isLNatKind(V2), V1, V2)
   U44(tt, V1, V2) -> U45(isNatural(V1), V2)
   U45(tt, V2) -> U46(isLNat(V2))
   U46(tt) -> tt
   U51(tt, V1, V2) -> U52(isNaturalKind(V1), V1, V2)
   U52(tt, V1, V2) -> U53(isLNatKind(V2), V1, V2)
   U53(tt, V1, V2) -> U54(isLNatKind(V2), V1, V2)
   U54(tt, V1, V2) -> U55(isNatural(V1), V2)
   U55(tt, V2) -> U56(isLNat(V2))
   U56(tt) -> tt
   U61(tt, V1) -> U62(isPLNatKind(V1), V1)
   U62(tt, V1) -> U63(isPLNat(V1))
   U63(tt) -> tt
   U71(tt, V1) -> U72(isNaturalKind(V1), V1)
   U72(tt, V1) -> U73(isNatural(V1))
   U73(tt) -> tt
   U81(tt, V1) -> U82(isPLNatKind(V1), V1)
   U82(tt, V1) -> U83(isPLNat(V1))
   U83(tt) -> tt
   U91(tt, V1) -> U92(isLNatKind(V1), V1)
   U92(tt, V1) -> U93(isLNat(V1))
   U93(tt) -> tt
   afterNth(N, XS) -> U11(isNatural(N), N, XS)
   fst(pair(X, Y)) -> U21(isLNat(X), X, Y)
   head(cons(N, XS)) -> U31(isNatural(N), N, XS)
   isLNat(nil) -> tt
   isLNat(afterNth(V1, V2)) -> U41(isNaturalKind(V1), V1, V2)
   isLNat(cons(V1, V2)) -> U51(isNaturalKind(V1), V1, V2)
   isLNat(fst(V1)) -> U61(isPLNatKind(V1), V1)
   isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1), V1)
   isLNat(snd(V1)) -> U81(isPLNatKind(V1), V1)
   isLNat(tail(V1)) -> U91(isLNatKind(V1), V1)
   isLNat(take(V1, V2)) -> U101(isNaturalKind(V1), V1, V2)
   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   isNatural(0) -> tt
   isNatural(head(V1)) -> U181(isLNatKind(V1), V1)
   isNatural(s(V1)) -> U191(isNaturalKind(V1), V1)
   isNatural(sel(V1, V2)) -> U201(isNaturalKind(V1), V1, V2)
   isNaturalKind(0) -> tt
   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   isPLNat(pair(V1, V2)) -> U241(isLNatKind(V1), V1, V2)
   isPLNat(splitAt(V1, V2)) -> U251(isNaturalKind(V1), V1, V2)
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   natsFrom(N) -> U281(isNatural(N), N)
   sel(N, XS) -> U291(isNatural(N), N, XS)
   snd(pair(X, Y)) -> U301(isLNat(X), X, Y)
   splitAt(0, XS) -> U311(isLNat(XS), XS)
   splitAt(s(N), cons(X, XS)) -> U321(isNatural(N), N, X, XS)
   tail(cons(N, XS)) -> U331(isNatural(N), N, XS)
   take(N, XS) -> U341(isNatural(N), N, XS)

The replacement map contains the following entries:

U101: {1}
tt: empty set
U102: {1}
isNaturalKind: empty set
U103: {1}
isLNatKind: empty set
U104: {1}
U105: {1}
isNatural: empty set
U106: {1}
isLNat: empty set
U11: {1}
U12: {1}
U111: {1}
U112: {1}
U13: {1}
U121: {1}
U122: {1}
U14: {1}
U131: {1}
snd: {1}
splitAt: {1, 2}
U141: {1}
U151: {1}
U161: {1}
U171: {1}
U172: {1}
U181: {1}
U182: {1}
U183: {1}
U191: {1}
U192: {1}
U193: {1}
U201: {1}
U202: {1}
U203: {1}
U204: {1}
U205: {1}
U206: {1}
U21: {1}
U22: {1}
U211: {1}
U23: {1}
U221: {1}
U24: {1}
U231: {1}
U232: {1}
U241: {1}
U242: {1}
U243: {1}
U244: {1}
U245: {1}
U246: {1}
U251: {1}
U252: {1}
U253: {1}
U254: {1}
U255: {1}
U256: {1}
U261: {1}
U262: {1}
U271: {1}
U272: {1}
U281: {1}
U282: {1}
cons: {1}
natsFrom: {1}
s: {1}
U291: {1}
U292: {1}
U293: {1}
U294: {1}
head: {1}
afterNth: {1, 2}
U301: {1}
U302: {1}
U303: {1}
U304: {1}
U31: {1}
U32: {1}
U311: {1}
U312: {1}
pair: {1, 2}
nil: empty set
U33: {1}
U321: {1}
U322: {1}
U323: {1}
U324: {1}
U325: {1}
U326: {1}
U327: {1}
U34: {1}
U331: {1}
U332: {1}
U333: {1}
U334: {1}
U341: {1}
U342: {1}
U343: {1}
U344: {1}
fst: {1}
U41: {1}
U42: {1}
U43: {1}
U44: {1}
U45: {1}
U46: {1}
U51: {1}
U52: {1}
U53: {1}
U54: {1}
U55: {1}
U56: {1}
U61: {1}
U62: {1}
isPLNatKind: empty set
U63: {1}
isPLNat: empty set
U71: {1}
U72: {1}
U73: {1}
U81: {1}
U82: {1}
U83: {1}
U91: {1}
U92: {1}
U93: {1}
tail: {1}
take: {1, 2}
0: empty set
sel: {1, 2}

----------------------------------------

(1) CSDependencyPairsProof (EQUIVALENT)
Using Improved CS-DPs [LPAR08] we result in the following initial Q-CSDP problem.
----------------------------------------

(2)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U106_1, U112_1, U122_1, U131_1, snd_1, splitAt_2, U141_1, U151_1, U161_1, U172_1, U183_1, U193_1, U206_1, U211_1, U221_1, U232_1, U246_1, U256_1, U262_1, U272_1, natsFrom_1, s_1, head_1, afterNth_2, pair_2, fst_1, U46_1, U56_1, U63_1, U73_1, U83_1, U93_1, tail_1, take_2, sel_2, U106'_1, U112'_1, U122'_1, SND_1, SPLITAT_2, U172'_1, U183'_1, U193'_1, U206'_1, U232'_1, U246'_1, U256'_1, U262'_1, U272'_1, HEAD_1, AFTERNTH_2, FST_1, U46'_1, U56'_1, U63'_1, U73'_1, U83'_1, U93'_1, U131'_1, U141'_1, U151'_1, U161'_1, U211'_1, U221'_1, NATSFROM_1, SEL_2, TAIL_1, TAKE_2} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U105_2, U11_3, U12_3, U111_2, U13_3, U121_2, U14_3, U171_2, U181_2, U182_2, U191_2, U192_2, U201_3, U202_3, U203_3, U204_3, U205_2, U21_3, U22_3, U23_3, U24_2, U231_2, U241_3, U242_3, U243_3, U244_3, U245_2, U251_3, U252_3, U253_3, U254_3, U255_2, U261_2, U271_2, U281_2, U282_2, cons_2, U291_3, U292_3, U293_3, U294_3, U301_3, U302_2, U303_2, U304_2, U31_3, U32_3, U311_2, U312_2, U33_3, U321_4, U322_4, U323_4, U324_4, U325_4, U326_4, U327_2, U34_2, U331_3, U332_2, U333_2, U334_2, U341_3, U342_3, U343_3, U344_3, U41_3, U42_3, U43_3, U44_3, U45_2, U51_3, U52_3, U53_3, U54_3, U55_2, U61_2, U62_2, U71_2, U72_2, U81_2, U82_2, U91_2, U92_2, U102'_3, U101'_3, U103'_3, U104'_3, U105'_2, U12'_3, U11'_3, U111'_2, U13'_3, U121'_2, U14'_3, U171'_2, U182'_2, U181'_2, U192'_2, U191'_2, U202'_3, U201'_3, U203'_3, U204'_3, U205'_2, U22'_3, U21'_3, U23'_3, U24'_2, U231'_2, U242'_3, U241'_3, U243'_3, U244'_3, U245'_2, U252'_3, U251'_3, U253'_3, U254'_3, U255'_2, U261'_2, U271'_2, U282'_2, U281'_2, U292'_3, U291'_3, U293'_3, U294'_3, U302'_2, U301'_3, U303'_2, U304'_2, U32'_3, U31'_3, U312'_2, U311'_2, U33'_3, U322'_4, U321'_4, U323'_4, U324'_4, U325'_4, U326'_4, U327'_2, U34'_2, U332'_2, U331'_3, U333'_2, U334'_2, U342'_3, U341'_3, U343'_3, U344'_3, U42'_3, U41'_3, U43'_3, U44'_3, U45'_2, U52'_3, U51'_3, U53'_3, U54'_3, U55'_2, U62'_2, U61'_2, U72'_2, U71'_2, U82'_2, U81'_2, U92'_2, U91'_2} we have mu(f) = {1}.
The symbols in {isNaturalKind_1, isLNatKind_1, isNatural_1, isLNat_1, isPLNatKind_1, isPLNat_1, ISNATURALKIND_1, ISLNATKIND_1, ISNATURAL_1, ISLNAT_1, ISPLNATKIND_1, ISPLNAT_1, U_1} are not replacing on any position.

The ordinary context-sensitive dependency pairs DP_o are:
   U101'(tt, V1, V2) -> U102'(isNaturalKind(V1), V1, V2)
   U101'(tt, V1, V2) -> ISNATURALKIND(V1)
   U102'(tt, V1, V2) -> U103'(isLNatKind(V2), V1, V2)
   U102'(tt, V1, V2) -> ISLNATKIND(V2)
   U103'(tt, V1, V2) -> U104'(isLNatKind(V2), V1, V2)
   U103'(tt, V1, V2) -> ISLNATKIND(V2)
   U104'(tt, V1, V2) -> U105'(isNatural(V1), V2)
   U104'(tt, V1, V2) -> ISNATURAL(V1)
   U105'(tt, V2) -> U106'(isLNat(V2))
   U105'(tt, V2) -> ISLNAT(V2)
   U11'(tt, N, XS) -> U12'(isNaturalKind(N), N, XS)
   U11'(tt, N, XS) -> ISNATURALKIND(N)
   U111'(tt, V2) -> U112'(isLNatKind(V2))
   U111'(tt, V2) -> ISLNATKIND(V2)
   U12'(tt, N, XS) -> U13'(isLNat(XS), N, XS)
   U12'(tt, N, XS) -> ISLNAT(XS)
   U121'(tt, V2) -> U122'(isLNatKind(V2))
   U121'(tt, V2) -> ISLNATKIND(V2)
   U13'(tt, N, XS) -> U14'(isLNatKind(XS), N, XS)
   U13'(tt, N, XS) -> ISLNATKIND(XS)
   U14'(tt, N, XS) -> SND(splitAt(N, XS))
   U14'(tt, N, XS) -> SPLITAT(N, XS)
   U171'(tt, V2) -> U172'(isLNatKind(V2))
   U171'(tt, V2) -> ISLNATKIND(V2)
   U181'(tt, V1) -> U182'(isLNatKind(V1), V1)
   U181'(tt, V1) -> ISLNATKIND(V1)
   U182'(tt, V1) -> U183'(isLNat(V1))
   U182'(tt, V1) -> ISLNAT(V1)
   U191'(tt, V1) -> U192'(isNaturalKind(V1), V1)
   U191'(tt, V1) -> ISNATURALKIND(V1)
   U192'(tt, V1) -> U193'(isNatural(V1))
   U192'(tt, V1) -> ISNATURAL(V1)
   U201'(tt, V1, V2) -> U202'(isNaturalKind(V1), V1, V2)
   U201'(tt, V1, V2) -> ISNATURALKIND(V1)
   U202'(tt, V1, V2) -> U203'(isLNatKind(V2), V1, V2)
   U202'(tt, V1, V2) -> ISLNATKIND(V2)
   U203'(tt, V1, V2) -> U204'(isLNatKind(V2), V1, V2)
   U203'(tt, V1, V2) -> ISLNATKIND(V2)
   U204'(tt, V1, V2) -> U205'(isNatural(V1), V2)
   U204'(tt, V1, V2) -> ISNATURAL(V1)
   U205'(tt, V2) -> U206'(isLNat(V2))
   U205'(tt, V2) -> ISLNAT(V2)
   U21'(tt, X, Y) -> U22'(isLNatKind(X), X, Y)
   U21'(tt, X, Y) -> ISLNATKIND(X)
   U22'(tt, X, Y) -> U23'(isLNat(Y), X, Y)
   U22'(tt, X, Y) -> ISLNAT(Y)
   U23'(tt, X, Y) -> U24'(isLNatKind(Y), X)
   U23'(tt, X, Y) -> ISLNATKIND(Y)
   U231'(tt, V2) -> U232'(isLNatKind(V2))
   U231'(tt, V2) -> ISLNATKIND(V2)
   U241'(tt, V1, V2) -> U242'(isLNatKind(V1), V1, V2)
   U241'(tt, V1, V2) -> ISLNATKIND(V1)
   U242'(tt, V1, V2) -> U243'(isLNatKind(V2), V1, V2)
   U242'(tt, V1, V2) -> ISLNATKIND(V2)
   U243'(tt, V1, V2) -> U244'(isLNatKind(V2), V1, V2)
   U243'(tt, V1, V2) -> ISLNATKIND(V2)
   U244'(tt, V1, V2) -> U245'(isLNat(V1), V2)
   U244'(tt, V1, V2) -> ISLNAT(V1)
   U245'(tt, V2) -> U246'(isLNat(V2))
   U245'(tt, V2) -> ISLNAT(V2)
   U251'(tt, V1, V2) -> U252'(isNaturalKind(V1), V1, V2)
   U251'(tt, V1, V2) -> ISNATURALKIND(V1)
   U252'(tt, V1, V2) -> U253'(isLNatKind(V2), V1, V2)
   U252'(tt, V1, V2) -> ISLNATKIND(V2)
   U253'(tt, V1, V2) -> U254'(isLNatKind(V2), V1, V2)
   U253'(tt, V1, V2) -> ISLNATKIND(V2)
   U254'(tt, V1, V2) -> U255'(isNatural(V1), V2)
   U254'(tt, V1, V2) -> ISNATURAL(V1)
   U255'(tt, V2) -> U256'(isLNat(V2))
   U255'(tt, V2) -> ISLNAT(V2)
   U261'(tt, V2) -> U262'(isLNatKind(V2))
   U261'(tt, V2) -> ISLNATKIND(V2)
   U271'(tt, V2) -> U272'(isLNatKind(V2))
   U271'(tt, V2) -> ISLNATKIND(V2)
   U281'(tt, N) -> U282'(isNaturalKind(N), N)
   U281'(tt, N) -> ISNATURALKIND(N)
   U291'(tt, N, XS) -> U292'(isNaturalKind(N), N, XS)
   U291'(tt, N, XS) -> ISNATURALKIND(N)
   U292'(tt, N, XS) -> U293'(isLNat(XS), N, XS)
   U292'(tt, N, XS) -> ISLNAT(XS)
   U293'(tt, N, XS) -> U294'(isLNatKind(XS), N, XS)
   U293'(tt, N, XS) -> ISLNATKIND(XS)
   U294'(tt, N, XS) -> HEAD(afterNth(N, XS))
   U294'(tt, N, XS) -> AFTERNTH(N, XS)
   U301'(tt, X, Y) -> U302'(isLNatKind(X), Y)
   U301'(tt, X, Y) -> ISLNATKIND(X)
   U302'(tt, Y) -> U303'(isLNat(Y), Y)
   U302'(tt, Y) -> ISLNAT(Y)
   U303'(tt, Y) -> U304'(isLNatKind(Y), Y)
   U303'(tt, Y) -> ISLNATKIND(Y)
   U31'(tt, N, XS) -> U32'(isNaturalKind(N), N, XS)
   U31'(tt, N, XS) -> ISNATURALKIND(N)
   U311'(tt, XS) -> U312'(isLNatKind(XS), XS)
   U311'(tt, XS) -> ISLNATKIND(XS)
   U32'(tt, N, XS) -> U33'(isLNat(XS), N, XS)
   U32'(tt, N, XS) -> ISLNAT(XS)
   U321'(tt, N, X, XS) -> U322'(isNaturalKind(N), N, X, XS)
   U321'(tt, N, X, XS) -> ISNATURALKIND(N)
   U322'(tt, N, X, XS) -> U323'(isNatural(X), N, X, XS)
   U322'(tt, N, X, XS) -> ISNATURAL(X)
   U323'(tt, N, X, XS) -> U324'(isNaturalKind(X), N, X, XS)
   U323'(tt, N, X, XS) -> ISNATURALKIND(X)
   U324'(tt, N, X, XS) -> U325'(isLNat(XS), N, X, XS)
   U324'(tt, N, X, XS) -> ISLNAT(XS)
   U325'(tt, N, X, XS) -> U326'(isLNatKind(XS), N, X, XS)
   U325'(tt, N, X, XS) -> ISLNATKIND(XS)
   U326'(tt, N, X, XS) -> U327'(splitAt(N, XS), X)
   U326'(tt, N, X, XS) -> SPLITAT(N, XS)
   U33'(tt, N, XS) -> U34'(isLNatKind(XS), N)
   U33'(tt, N, XS) -> ISLNATKIND(XS)
   U331'(tt, N, XS) -> U332'(isNaturalKind(N), XS)
   U331'(tt, N, XS) -> ISNATURALKIND(N)
   U332'(tt, XS) -> U333'(isLNat(XS), XS)
   U332'(tt, XS) -> ISLNAT(XS)
   U333'(tt, XS) -> U334'(isLNatKind(XS), XS)
   U333'(tt, XS) -> ISLNATKIND(XS)
   U341'(tt, N, XS) -> U342'(isNaturalKind(N), N, XS)
   U341'(tt, N, XS) -> ISNATURALKIND(N)
   U342'(tt, N, XS) -> U343'(isLNat(XS), N, XS)
   U342'(tt, N, XS) -> ISLNAT(XS)
   U343'(tt, N, XS) -> U344'(isLNatKind(XS), N, XS)
   U343'(tt, N, XS) -> ISLNATKIND(XS)
   U344'(tt, N, XS) -> FST(splitAt(N, XS))
   U344'(tt, N, XS) -> SPLITAT(N, XS)
   U41'(tt, V1, V2) -> U42'(isNaturalKind(V1), V1, V2)
   U41'(tt, V1, V2) -> ISNATURALKIND(V1)
   U42'(tt, V1, V2) -> U43'(isLNatKind(V2), V1, V2)
   U42'(tt, V1, V2) -> ISLNATKIND(V2)
   U43'(tt, V1, V2) -> U44'(isLNatKind(V2), V1, V2)
   U43'(tt, V1, V2) -> ISLNATKIND(V2)
   U44'(tt, V1, V2) -> U45'(isNatural(V1), V2)
   U44'(tt, V1, V2) -> ISNATURAL(V1)
   U45'(tt, V2) -> U46'(isLNat(V2))
   U45'(tt, V2) -> ISLNAT(V2)
   U51'(tt, V1, V2) -> U52'(isNaturalKind(V1), V1, V2)
   U51'(tt, V1, V2) -> ISNATURALKIND(V1)
   U52'(tt, V1, V2) -> U53'(isLNatKind(V2), V1, V2)
   U52'(tt, V1, V2) -> ISLNATKIND(V2)
   U53'(tt, V1, V2) -> U54'(isLNatKind(V2), V1, V2)
   U53'(tt, V1, V2) -> ISLNATKIND(V2)
   U54'(tt, V1, V2) -> U55'(isNatural(V1), V2)
   U54'(tt, V1, V2) -> ISNATURAL(V1)
   U55'(tt, V2) -> U56'(isLNat(V2))
   U55'(tt, V2) -> ISLNAT(V2)
   U61'(tt, V1) -> U62'(isPLNatKind(V1), V1)
   U61'(tt, V1) -> ISPLNATKIND(V1)
   U62'(tt, V1) -> U63'(isPLNat(V1))
   U62'(tt, V1) -> ISPLNAT(V1)
   U71'(tt, V1) -> U72'(isNaturalKind(V1), V1)
   U71'(tt, V1) -> ISNATURALKIND(V1)
   U72'(tt, V1) -> U73'(isNatural(V1))
   U72'(tt, V1) -> ISNATURAL(V1)
   U81'(tt, V1) -> U82'(isPLNatKind(V1), V1)
   U81'(tt, V1) -> ISPLNATKIND(V1)
   U82'(tt, V1) -> U83'(isPLNat(V1))
   U82'(tt, V1) -> ISPLNAT(V1)
   U91'(tt, V1) -> U92'(isLNatKind(V1), V1)
   U91'(tt, V1) -> ISLNATKIND(V1)
   U92'(tt, V1) -> U93'(isLNat(V1))
   U92'(tt, V1) -> ISLNAT(V1)
   AFTERNTH(N, XS) -> U11'(isNatural(N), N, XS)
   AFTERNTH(N, XS) -> ISNATURAL(N)
   FST(pair(X, Y)) -> U21'(isLNat(X), X, Y)
   FST(pair(X, Y)) -> ISLNAT(X)
   HEAD(cons(N, XS)) -> U31'(isNatural(N), N, XS)
   HEAD(cons(N, XS)) -> ISNATURAL(N)
   ISLNAT(afterNth(V1, V2)) -> U41'(isNaturalKind(V1), V1, V2)
   ISLNAT(afterNth(V1, V2)) -> ISNATURALKIND(V1)
   ISLNAT(cons(V1, V2)) -> U51'(isNaturalKind(V1), V1, V2)
   ISLNAT(cons(V1, V2)) -> ISNATURALKIND(V1)
   ISLNAT(fst(V1)) -> U61'(isPLNatKind(V1), V1)
   ISLNAT(fst(V1)) -> ISPLNATKIND(V1)
   ISLNAT(natsFrom(V1)) -> U71'(isNaturalKind(V1), V1)
   ISLNAT(natsFrom(V1)) -> ISNATURALKIND(V1)
   ISLNAT(snd(V1)) -> U81'(isPLNatKind(V1), V1)
   ISLNAT(snd(V1)) -> ISPLNATKIND(V1)
   ISLNAT(tail(V1)) -> U91'(isLNatKind(V1), V1)
   ISLNAT(tail(V1)) -> ISLNATKIND(V1)
   ISLNAT(take(V1, V2)) -> U101'(isNaturalKind(V1), V1, V2)
   ISLNAT(take(V1, V2)) -> ISNATURALKIND(V1)
   ISLNATKIND(afterNth(V1, V2)) -> U111'(isNaturalKind(V1), V2)
   ISLNATKIND(afterNth(V1, V2)) -> ISNATURALKIND(V1)
   ISLNATKIND(cons(V1, V2)) -> U121'(isNaturalKind(V1), V2)
   ISLNATKIND(cons(V1, V2)) -> ISNATURALKIND(V1)
   ISLNATKIND(fst(V1)) -> U131'(isPLNatKind(V1))
   ISLNATKIND(fst(V1)) -> ISPLNATKIND(V1)
   ISLNATKIND(natsFrom(V1)) -> U141'(isNaturalKind(V1))
   ISLNATKIND(natsFrom(V1)) -> ISNATURALKIND(V1)
   ISLNATKIND(snd(V1)) -> U151'(isPLNatKind(V1))
   ISLNATKIND(snd(V1)) -> ISPLNATKIND(V1)
   ISLNATKIND(tail(V1)) -> U161'(isLNatKind(V1))
   ISLNATKIND(tail(V1)) -> ISLNATKIND(V1)
   ISLNATKIND(take(V1, V2)) -> U171'(isNaturalKind(V1), V2)
   ISLNATKIND(take(V1, V2)) -> ISNATURALKIND(V1)
   ISNATURAL(head(V1)) -> U181'(isLNatKind(V1), V1)
   ISNATURAL(head(V1)) -> ISLNATKIND(V1)
   ISNATURAL(s(V1)) -> U191'(isNaturalKind(V1), V1)
   ISNATURAL(s(V1)) -> ISNATURALKIND(V1)
   ISNATURAL(sel(V1, V2)) -> U201'(isNaturalKind(V1), V1, V2)
   ISNATURAL(sel(V1, V2)) -> ISNATURALKIND(V1)
   ISNATURALKIND(head(V1)) -> U211'(isLNatKind(V1))
   ISNATURALKIND(head(V1)) -> ISLNATKIND(V1)
   ISNATURALKIND(s(V1)) -> U221'(isNaturalKind(V1))
   ISNATURALKIND(s(V1)) -> ISNATURALKIND(V1)
   ISNATURALKIND(sel(V1, V2)) -> U231'(isNaturalKind(V1), V2)
   ISNATURALKIND(sel(V1, V2)) -> ISNATURALKIND(V1)
   ISPLNAT(pair(V1, V2)) -> U241'(isLNatKind(V1), V1, V2)
   ISPLNAT(pair(V1, V2)) -> ISLNATKIND(V1)
   ISPLNAT(splitAt(V1, V2)) -> U251'(isNaturalKind(V1), V1, V2)
   ISPLNAT(splitAt(V1, V2)) -> ISNATURALKIND(V1)
   ISPLNATKIND(pair(V1, V2)) -> U261'(isLNatKind(V1), V2)
   ISPLNATKIND(pair(V1, V2)) -> ISLNATKIND(V1)
   ISPLNATKIND(splitAt(V1, V2)) -> U271'(isNaturalKind(V1), V2)
   ISPLNATKIND(splitAt(V1, V2)) -> ISNATURALKIND(V1)
   NATSFROM(N) -> U281'(isNatural(N), N)
   NATSFROM(N) -> ISNATURAL(N)
   SEL(N, XS) -> U291'(isNatural(N), N, XS)
   SEL(N, XS) -> ISNATURAL(N)
   SND(pair(X, Y)) -> U301'(isLNat(X), X, Y)
   SND(pair(X, Y)) -> ISLNAT(X)
   SPLITAT(0, XS) -> U311'(isLNat(XS), XS)
   SPLITAT(0, XS) -> ISLNAT(XS)
   SPLITAT(s(N), cons(X, XS)) -> U321'(isNatural(N), N, X, XS)
   SPLITAT(s(N), cons(X, XS)) -> ISNATURAL(N)
   TAIL(cons(N, XS)) -> U331'(isNatural(N), N, XS)
   TAIL(cons(N, XS)) -> ISNATURAL(N)
   TAKE(N, XS) -> U341'(isNatural(N), N, XS)
   TAKE(N, XS) -> ISNATURAL(N)

The collapsing dependency pairs are DP_c:
   U14'(tt, N, XS) -> N
   U14'(tt, N, XS) -> XS
   U24'(tt, X) -> X
   U282'(tt, N) -> N
   U294'(tt, N, XS) -> N
   U294'(tt, N, XS) -> XS
   U304'(tt, Y) -> Y
   U312'(tt, XS) -> XS
   U326'(tt, N, X, XS) -> N
   U326'(tt, N, X, XS) -> XS
   U327'(pair(YS, ZS), X) -> X
   U334'(tt, XS) -> XS
   U34'(tt, N) -> N
   U344'(tt, N, XS) -> N
   U344'(tt, N, XS) -> XS


The hidden terms of R are:

   natsFrom(s(x0))

Every hiding context is built from:
   aprove.DPFramework.CSDPProblem.QCSDPProblem$1@4b4c1bec
   aprove.DPFramework.CSDPProblem.QCSDPProblem$1@28c0cc2a

Hence, the new unhiding pairs DP_u are :
   U14'(tt, N, XS) -> U(N)
   U14'(tt, N, XS) -> U(XS)
   U24'(tt, X) -> U(X)
   U282'(tt, N) -> U(N)
   U294'(tt, N, XS) -> U(N)
   U294'(tt, N, XS) -> U(XS)
   U304'(tt, Y) -> U(Y)
   U312'(tt, XS) -> U(XS)
   U326'(tt, N, X, XS) -> U(N)
   U326'(tt, N, X, XS) -> U(XS)
   U327'(pair(YS, ZS), X) -> U(X)
   U334'(tt, XS) -> U(XS)
   U34'(tt, N) -> U(N)
   U344'(tt, N, XS) -> U(N)
   U344'(tt, N, XS) -> U(XS)
   U(s(x_0)) -> U(x_0)
   U(natsFrom(x_0)) -> U(x_0)
   U(natsFrom(s(x0))) -> NATSFROM(s(x0))

The TRS R consists of the following rules:

   U101(tt, V1, V2) -> U102(isNaturalKind(V1), V1, V2)
   U102(tt, V1, V2) -> U103(isLNatKind(V2), V1, V2)
   U103(tt, V1, V2) -> U104(isLNatKind(V2), V1, V2)
   U104(tt, V1, V2) -> U105(isNatural(V1), V2)
   U105(tt, V2) -> U106(isLNat(V2))
   U106(tt) -> tt
   U11(tt, N, XS) -> U12(isNaturalKind(N), N, XS)
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt
   U12(tt, N, XS) -> U13(isLNat(XS), N, XS)
   U121(tt, V2) -> U122(isLNatKind(V2))
   U122(tt) -> tt
   U13(tt, N, XS) -> U14(isLNatKind(XS), N, XS)
   U131(tt) -> tt
   U14(tt, N, XS) -> snd(splitAt(N, XS))
   U141(tt) -> tt
   U151(tt) -> tt
   U161(tt) -> tt
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U181(tt, V1) -> U182(isLNatKind(V1), V1)
   U182(tt, V1) -> U183(isLNat(V1))
   U183(tt) -> tt
   U191(tt, V1) -> U192(isNaturalKind(V1), V1)
   U192(tt, V1) -> U193(isNatural(V1))
   U193(tt) -> tt
   U201(tt, V1, V2) -> U202(isNaturalKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isLNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isLNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNatural(V1), V2)
   U205(tt, V2) -> U206(isLNat(V2))
   U206(tt) -> tt
   U21(tt, X, Y) -> U22(isLNatKind(X), X, Y)
   U211(tt) -> tt
   U22(tt, X, Y) -> U23(isLNat(Y), X, Y)
   U221(tt) -> tt
   U23(tt, X, Y) -> U24(isLNatKind(Y), X)
   U231(tt, V2) -> U232(isLNatKind(V2))
   U232(tt) -> tt
   U24(tt, X) -> X
   U241(tt, V1, V2) -> U242(isLNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isLNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isLNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isLNat(V1), V2)
   U245(tt, V2) -> U246(isLNat(V2))
   U246(tt) -> tt
   U251(tt, V1, V2) -> U252(isNaturalKind(V1), V1, V2)
   U252(tt, V1, V2) -> U253(isLNatKind(V2), V1, V2)
   U253(tt, V1, V2) -> U254(isLNatKind(V2), V1, V2)
   U254(tt, V1, V2) -> U255(isNatural(V1), V2)
   U255(tt, V2) -> U256(isLNat(V2))
   U256(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isLNatKind(V2))
   U272(tt) -> tt
   U281(tt, N) -> U282(isNaturalKind(N), N)
   U282(tt, N) -> cons(N, natsFrom(s(N)))
   U291(tt, N, XS) -> U292(isNaturalKind(N), N, XS)
   U292(tt, N, XS) -> U293(isLNat(XS), N, XS)
   U293(tt, N, XS) -> U294(isLNatKind(XS), N, XS)
   U294(tt, N, XS) -> head(afterNth(N, XS))
   U301(tt, X, Y) -> U302(isLNatKind(X), Y)
   U302(tt, Y) -> U303(isLNat(Y), Y)
   U303(tt, Y) -> U304(isLNatKind(Y), Y)
   U304(tt, Y) -> Y
   U31(tt, N, XS) -> U32(isNaturalKind(N), N, XS)
   U311(tt, XS) -> U312(isLNatKind(XS), XS)
   U312(tt, XS) -> pair(nil, XS)
   U32(tt, N, XS) -> U33(isLNat(XS), N, XS)
   U321(tt, N, X, XS) -> U322(isNaturalKind(N), N, X, XS)
   U322(tt, N, X, XS) -> U323(isNatural(X), N, X, XS)
   U323(tt, N, X, XS) -> U324(isNaturalKind(X), N, X, XS)
   U324(tt, N, X, XS) -> U325(isLNat(XS), N, X, XS)
   U325(tt, N, X, XS) -> U326(isLNatKind(XS), N, X, XS)
   U326(tt, N, X, XS) -> U327(splitAt(N, XS), X)
   U327(pair(YS, ZS), X) -> pair(cons(X, YS), ZS)
   U33(tt, N, XS) -> U34(isLNatKind(XS), N)
   U331(tt, N, XS) -> U332(isNaturalKind(N), XS)
   U332(tt, XS) -> U333(isLNat(XS), XS)
   U333(tt, XS) -> U334(isLNatKind(XS), XS)
   U334(tt, XS) -> XS
   U34(tt, N) -> N
   U341(tt, N, XS) -> U342(isNaturalKind(N), N, XS)
   U342(tt, N, XS) -> U343(isLNat(XS), N, XS)
   U343(tt, N, XS) -> U344(isLNatKind(XS), N, XS)
   U344(tt, N, XS) -> fst(splitAt(N, XS))
   U41(tt, V1, V2) -> U42(isNaturalKind(V1), V1, V2)
   U42(tt, V1, V2) -> U43(isLNatKind(V2), V1, V2)
   U43(tt, V1, V2) -> U44(isLNatKind(V2), V1, V2)
   U44(tt, V1, V2) -> U45(isNatural(V1), V2)
   U45(tt, V2) -> U46(isLNat(V2))
   U46(tt) -> tt
   U51(tt, V1, V2) -> U52(isNaturalKind(V1), V1, V2)
   U52(tt, V1, V2) -> U53(isLNatKind(V2), V1, V2)
   U53(tt, V1, V2) -> U54(isLNatKind(V2), V1, V2)
   U54(tt, V1, V2) -> U55(isNatural(V1), V2)
   U55(tt, V2) -> U56(isLNat(V2))
   U56(tt) -> tt
   U61(tt, V1) -> U62(isPLNatKind(V1), V1)
   U62(tt, V1) -> U63(isPLNat(V1))
   U63(tt) -> tt
   U71(tt, V1) -> U72(isNaturalKind(V1), V1)
   U72(tt, V1) -> U73(isNatural(V1))
   U73(tt) -> tt
   U81(tt, V1) -> U82(isPLNatKind(V1), V1)
   U82(tt, V1) -> U83(isPLNat(V1))
   U83(tt) -> tt
   U91(tt, V1) -> U92(isLNatKind(V1), V1)
   U92(tt, V1) -> U93(isLNat(V1))
   U93(tt) -> tt
   afterNth(N, XS) -> U11(isNatural(N), N, XS)
   fst(pair(X, Y)) -> U21(isLNat(X), X, Y)
   head(cons(N, XS)) -> U31(isNatural(N), N, XS)
   isLNat(nil) -> tt
   isLNat(afterNth(V1, V2)) -> U41(isNaturalKind(V1), V1, V2)
   isLNat(cons(V1, V2)) -> U51(isNaturalKind(V1), V1, V2)
   isLNat(fst(V1)) -> U61(isPLNatKind(V1), V1)
   isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1), V1)
   isLNat(snd(V1)) -> U81(isPLNatKind(V1), V1)
   isLNat(tail(V1)) -> U91(isLNatKind(V1), V1)
   isLNat(take(V1, V2)) -> U101(isNaturalKind(V1), V1, V2)
   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   isNatural(0) -> tt
   isNatural(head(V1)) -> U181(isLNatKind(V1), V1)
   isNatural(s(V1)) -> U191(isNaturalKind(V1), V1)
   isNatural(sel(V1, V2)) -> U201(isNaturalKind(V1), V1, V2)
   isNaturalKind(0) -> tt
   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   isPLNat(pair(V1, V2)) -> U241(isLNatKind(V1), V1, V2)
   isPLNat(splitAt(V1, V2)) -> U251(isNaturalKind(V1), V1, V2)
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   natsFrom(N) -> U281(isNatural(N), N)
   sel(N, XS) -> U291(isNatural(N), N, XS)
   snd(pair(X, Y)) -> U301(isLNat(X), X, Y)
   splitAt(0, XS) -> U311(isLNat(XS), XS)
   splitAt(s(N), cons(X, XS)) -> U321(isNatural(N), N, X, XS)
   tail(cons(N, XS)) -> U331(isNatural(N), N, XS)
   take(N, XS) -> U341(isNatural(N), N, XS)

Q is empty.

----------------------------------------

(3) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 4 SCCs with 149 less nodes.

----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U106_1, U112_1, U122_1, U131_1, snd_1, splitAt_2, U141_1, U151_1, U161_1, U172_1, U183_1, U193_1, U206_1, U211_1, U221_1, U232_1, U246_1, U256_1, U262_1, U272_1, natsFrom_1, s_1, head_1, afterNth_2, pair_2, fst_1, U46_1, U56_1, U63_1, U73_1, U83_1, U93_1, tail_1, take_2, sel_2} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U105_2, U11_3, U12_3, U111_2, U13_3, U121_2, U14_3, U171_2, U181_2, U182_2, U191_2, U192_2, U201_3, U202_3, U203_3, U204_3, U205_2, U21_3, U22_3, U23_3, U24_2, U231_2, U241_3, U242_3, U243_3, U244_3, U245_2, U251_3, U252_3, U253_3, U254_3, U255_2, U261_2, U271_2, U281_2, U282_2, cons_2, U291_3, U292_3, U293_3, U294_3, U301_3, U302_2, U303_2, U304_2, U31_3, U32_3, U311_2, U312_2, U33_3, U321_4, U322_4, U323_4, U324_4, U325_4, U326_4, U327_2, U34_2, U331_3, U332_2, U333_2, U334_2, U341_3, U342_3, U343_3, U344_3, U41_3, U42_3, U43_3, U44_3, U45_2, U51_3, U52_3, U53_3, U54_3, U55_2, U61_2, U62_2, U71_2, U72_2, U81_2, U82_2, U91_2, U92_2, U111'_2, U231'_2, U121'_2, U261'_2, U171'_2, U271'_2} we have mu(f) = {1}.
The symbols in {isNaturalKind_1, isLNatKind_1, isNatural_1, isLNat_1, isPLNatKind_1, isPLNat_1, ISLNATKIND_1, ISNATURALKIND_1, ISPLNATKIND_1} are not replacing on any position.

The TRS P consists of the following rules:

   ISNATURALKIND(head(V1)) -> ISLNATKIND(V1)
   ISLNATKIND(afterNth(V1, V2)) -> U111'(isNaturalKind(V1), V2)
   U111'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(afterNth(V1, V2)) -> ISNATURALKIND(V1)
   ISNATURALKIND(s(V1)) -> ISNATURALKIND(V1)
   ISNATURALKIND(sel(V1, V2)) -> U231'(isNaturalKind(V1), V2)
   U231'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(cons(V1, V2)) -> U121'(isNaturalKind(V1), V2)
   U121'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(cons(V1, V2)) -> ISNATURALKIND(V1)
   ISNATURALKIND(sel(V1, V2)) -> ISNATURALKIND(V1)
   ISLNATKIND(fst(V1)) -> ISPLNATKIND(V1)
   ISPLNATKIND(pair(V1, V2)) -> U261'(isLNatKind(V1), V2)
   U261'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(natsFrom(V1)) -> ISNATURALKIND(V1)
   ISLNATKIND(snd(V1)) -> ISPLNATKIND(V1)
   ISPLNATKIND(pair(V1, V2)) -> ISLNATKIND(V1)
   ISLNATKIND(tail(V1)) -> ISLNATKIND(V1)
   ISLNATKIND(take(V1, V2)) -> U171'(isNaturalKind(V1), V2)
   U171'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(take(V1, V2)) -> ISNATURALKIND(V1)
   ISPLNATKIND(splitAt(V1, V2)) -> U271'(isNaturalKind(V1), V2)
   U271'(tt, V2) -> ISLNATKIND(V2)
   ISPLNATKIND(splitAt(V1, V2)) -> ISNATURALKIND(V1)

The TRS R consists of the following rules:

   U101(tt, V1, V2) -> U102(isNaturalKind(V1), V1, V2)
   U102(tt, V1, V2) -> U103(isLNatKind(V2), V1, V2)
   U103(tt, V1, V2) -> U104(isLNatKind(V2), V1, V2)
   U104(tt, V1, V2) -> U105(isNatural(V1), V2)
   U105(tt, V2) -> U106(isLNat(V2))
   U106(tt) -> tt
   U11(tt, N, XS) -> U12(isNaturalKind(N), N, XS)
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt
   U12(tt, N, XS) -> U13(isLNat(XS), N, XS)
   U121(tt, V2) -> U122(isLNatKind(V2))
   U122(tt) -> tt
   U13(tt, N, XS) -> U14(isLNatKind(XS), N, XS)
   U131(tt) -> tt
   U14(tt, N, XS) -> snd(splitAt(N, XS))
   U141(tt) -> tt
   U151(tt) -> tt
   U161(tt) -> tt
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U181(tt, V1) -> U182(isLNatKind(V1), V1)
   U182(tt, V1) -> U183(isLNat(V1))
   U183(tt) -> tt
   U191(tt, V1) -> U192(isNaturalKind(V1), V1)
   U192(tt, V1) -> U193(isNatural(V1))
   U193(tt) -> tt
   U201(tt, V1, V2) -> U202(isNaturalKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isLNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isLNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNatural(V1), V2)
   U205(tt, V2) -> U206(isLNat(V2))
   U206(tt) -> tt
   U21(tt, X, Y) -> U22(isLNatKind(X), X, Y)
   U211(tt) -> tt
   U22(tt, X, Y) -> U23(isLNat(Y), X, Y)
   U221(tt) -> tt
   U23(tt, X, Y) -> U24(isLNatKind(Y), X)
   U231(tt, V2) -> U232(isLNatKind(V2))
   U232(tt) -> tt
   U24(tt, X) -> X
   U241(tt, V1, V2) -> U242(isLNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isLNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isLNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isLNat(V1), V2)
   U245(tt, V2) -> U246(isLNat(V2))
   U246(tt) -> tt
   U251(tt, V1, V2) -> U252(isNaturalKind(V1), V1, V2)
   U252(tt, V1, V2) -> U253(isLNatKind(V2), V1, V2)
   U253(tt, V1, V2) -> U254(isLNatKind(V2), V1, V2)
   U254(tt, V1, V2) -> U255(isNatural(V1), V2)
   U255(tt, V2) -> U256(isLNat(V2))
   U256(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isLNatKind(V2))
   U272(tt) -> tt
   U281(tt, N) -> U282(isNaturalKind(N), N)
   U282(tt, N) -> cons(N, natsFrom(s(N)))
   U291(tt, N, XS) -> U292(isNaturalKind(N), N, XS)
   U292(tt, N, XS) -> U293(isLNat(XS), N, XS)
   U293(tt, N, XS) -> U294(isLNatKind(XS), N, XS)
   U294(tt, N, XS) -> head(afterNth(N, XS))
   U301(tt, X, Y) -> U302(isLNatKind(X), Y)
   U302(tt, Y) -> U303(isLNat(Y), Y)
   U303(tt, Y) -> U304(isLNatKind(Y), Y)
   U304(tt, Y) -> Y
   U31(tt, N, XS) -> U32(isNaturalKind(N), N, XS)
   U311(tt, XS) -> U312(isLNatKind(XS), XS)
   U312(tt, XS) -> pair(nil, XS)
   U32(tt, N, XS) -> U33(isLNat(XS), N, XS)
   U321(tt, N, X, XS) -> U322(isNaturalKind(N), N, X, XS)
   U322(tt, N, X, XS) -> U323(isNatural(X), N, X, XS)
   U323(tt, N, X, XS) -> U324(isNaturalKind(X), N, X, XS)
   U324(tt, N, X, XS) -> U325(isLNat(XS), N, X, XS)
   U325(tt, N, X, XS) -> U326(isLNatKind(XS), N, X, XS)
   U326(tt, N, X, XS) -> U327(splitAt(N, XS), X)
   U327(pair(YS, ZS), X) -> pair(cons(X, YS), ZS)
   U33(tt, N, XS) -> U34(isLNatKind(XS), N)
   U331(tt, N, XS) -> U332(isNaturalKind(N), XS)
   U332(tt, XS) -> U333(isLNat(XS), XS)
   U333(tt, XS) -> U334(isLNatKind(XS), XS)
   U334(tt, XS) -> XS
   U34(tt, N) -> N
   U341(tt, N, XS) -> U342(isNaturalKind(N), N, XS)
   U342(tt, N, XS) -> U343(isLNat(XS), N, XS)
   U343(tt, N, XS) -> U344(isLNatKind(XS), N, XS)
   U344(tt, N, XS) -> fst(splitAt(N, XS))
   U41(tt, V1, V2) -> U42(isNaturalKind(V1), V1, V2)
   U42(tt, V1, V2) -> U43(isLNatKind(V2), V1, V2)
   U43(tt, V1, V2) -> U44(isLNatKind(V2), V1, V2)
   U44(tt, V1, V2) -> U45(isNatural(V1), V2)
   U45(tt, V2) -> U46(isLNat(V2))
   U46(tt) -> tt
   U51(tt, V1, V2) -> U52(isNaturalKind(V1), V1, V2)
   U52(tt, V1, V2) -> U53(isLNatKind(V2), V1, V2)
   U53(tt, V1, V2) -> U54(isLNatKind(V2), V1, V2)
   U54(tt, V1, V2) -> U55(isNatural(V1), V2)
   U55(tt, V2) -> U56(isLNat(V2))
   U56(tt) -> tt
   U61(tt, V1) -> U62(isPLNatKind(V1), V1)
   U62(tt, V1) -> U63(isPLNat(V1))
   U63(tt) -> tt
   U71(tt, V1) -> U72(isNaturalKind(V1), V1)
   U72(tt, V1) -> U73(isNatural(V1))
   U73(tt) -> tt
   U81(tt, V1) -> U82(isPLNatKind(V1), V1)
   U82(tt, V1) -> U83(isPLNat(V1))
   U83(tt) -> tt
   U91(tt, V1) -> U92(isLNatKind(V1), V1)
   U92(tt, V1) -> U93(isLNat(V1))
   U93(tt) -> tt
   afterNth(N, XS) -> U11(isNatural(N), N, XS)
   fst(pair(X, Y)) -> U21(isLNat(X), X, Y)
   head(cons(N, XS)) -> U31(isNatural(N), N, XS)
   isLNat(nil) -> tt
   isLNat(afterNth(V1, V2)) -> U41(isNaturalKind(V1), V1, V2)
   isLNat(cons(V1, V2)) -> U51(isNaturalKind(V1), V1, V2)
   isLNat(fst(V1)) -> U61(isPLNatKind(V1), V1)
   isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1), V1)
   isLNat(snd(V1)) -> U81(isPLNatKind(V1), V1)
   isLNat(tail(V1)) -> U91(isLNatKind(V1), V1)
   isLNat(take(V1, V2)) -> U101(isNaturalKind(V1), V1, V2)
   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   isNatural(0) -> tt
   isNatural(head(V1)) -> U181(isLNatKind(V1), V1)
   isNatural(s(V1)) -> U191(isNaturalKind(V1), V1)
   isNatural(sel(V1, V2)) -> U201(isNaturalKind(V1), V1, V2)
   isNaturalKind(0) -> tt
   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   isPLNat(pair(V1, V2)) -> U241(isLNatKind(V1), V1, V2)
   isPLNat(splitAt(V1, V2)) -> U251(isNaturalKind(V1), V1, V2)
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   natsFrom(N) -> U281(isNatural(N), N)
   sel(N, XS) -> U291(isNatural(N), N, XS)
   snd(pair(X, Y)) -> U301(isLNat(X), X, Y)
   splitAt(0, XS) -> U311(isLNat(XS), XS)
   splitAt(s(N), cons(X, XS)) -> U321(isNatural(N), N, X, XS)
   tail(cons(N, XS)) -> U331(isNatural(N), N, XS)
   take(N, XS) -> U341(isNatural(N), N, XS)

Q is empty.

----------------------------------------

(6) QCSUsableRulesProof (EQUIVALENT)
The following rules are not useable [DA_EMMES] and can be deleted:

   U101(tt, x0, x1) -> U102(isNaturalKind(x0), x0, x1)
   U102(tt, x0, x1) -> U103(isLNatKind(x1), x0, x1)
   U103(tt, x0, x1) -> U104(isLNatKind(x1), x0, x1)
   U104(tt, x0, x1) -> U105(isNatural(x0), x1)
   U105(tt, x0) -> U106(isLNat(x0))
   U106(tt) -> tt
   U11(tt, x0, x1) -> U12(isNaturalKind(x0), x0, x1)
   U12(tt, x0, x1) -> U13(isLNat(x1), x0, x1)
   U13(tt, x0, x1) -> U14(isLNatKind(x1), x0, x1)
   U14(tt, x0, x1) -> snd(splitAt(x0, x1))
   U181(tt, x0) -> U182(isLNatKind(x0), x0)
   U182(tt, x0) -> U183(isLNat(x0))
   U183(tt) -> tt
   U191(tt, x0) -> U192(isNaturalKind(x0), x0)
   U192(tt, x0) -> U193(isNatural(x0))
   U193(tt) -> tt
   U201(tt, x0, x1) -> U202(isNaturalKind(x0), x0, x1)
   U202(tt, x0, x1) -> U203(isLNatKind(x1), x0, x1)
   U203(tt, x0, x1) -> U204(isLNatKind(x1), x0, x1)
   U204(tt, x0, x1) -> U205(isNatural(x0), x1)
   U205(tt, x0) -> U206(isLNat(x0))
   U206(tt) -> tt
   U21(tt, x0, x1) -> U22(isLNatKind(x0), x0, x1)
   U22(tt, x0, x1) -> U23(isLNat(x1), x0, x1)
   U23(tt, x0, x1) -> U24(isLNatKind(x1), x0)
   U24(tt, x0) -> x0
   U241(tt, x0, x1) -> U242(isLNatKind(x0), x0, x1)
   U242(tt, x0, x1) -> U243(isLNatKind(x1), x0, x1)
   U243(tt, x0, x1) -> U244(isLNatKind(x1), x0, x1)
   U244(tt, x0, x1) -> U245(isLNat(x0), x1)
   U245(tt, x0) -> U246(isLNat(x0))
   U246(tt) -> tt
   U251(tt, x0, x1) -> U252(isNaturalKind(x0), x0, x1)
   U252(tt, x0, x1) -> U253(isLNatKind(x1), x0, x1)
   U253(tt, x0, x1) -> U254(isLNatKind(x1), x0, x1)
   U254(tt, x0, x1) -> U255(isNatural(x0), x1)
   U255(tt, x0) -> U256(isLNat(x0))
   U256(tt) -> tt
   U281(tt, x0) -> U282(isNaturalKind(x0), x0)
   U282(tt, x0) -> cons(x0, natsFrom(s(x0)))
   U291(tt, x0, x1) -> U292(isNaturalKind(x0), x0, x1)
   U292(tt, x0, x1) -> U293(isLNat(x1), x0, x1)
   U293(tt, x0, x1) -> U294(isLNatKind(x1), x0, x1)
   U294(tt, x0, x1) -> head(afterNth(x0, x1))
   U301(tt, x0, x1) -> U302(isLNatKind(x0), x1)
   U302(tt, x0) -> U303(isLNat(x0), x0)
   U303(tt, x0) -> U304(isLNatKind(x0), x0)
   U304(tt, x0) -> x0
   U31(tt, x0, x1) -> U32(isNaturalKind(x0), x0, x1)
   U311(tt, x0) -> U312(isLNatKind(x0), x0)
   U312(tt, x0) -> pair(nil, x0)
   U32(tt, x0, x1) -> U33(isLNat(x1), x0, x1)
   U321(tt, x0, x1, x2) -> U322(isNaturalKind(x0), x0, x1, x2)
   U322(tt, x0, x1, x2) -> U323(isNatural(x1), x0, x1, x2)
   U323(tt, x0, x1, x2) -> U324(isNaturalKind(x1), x0, x1, x2)
   U324(tt, x0, x1, x2) -> U325(isLNat(x2), x0, x1, x2)
   U325(tt, x0, x1, x2) -> U326(isLNatKind(x2), x0, x1, x2)
   U326(tt, x0, x1, x2) -> U327(splitAt(x0, x2), x1)
   U327(pair(x0, x1), x2) -> pair(cons(x2, x0), x1)
   U33(tt, x0, x1) -> U34(isLNatKind(x1), x0)
   U331(tt, x0, x1) -> U332(isNaturalKind(x0), x1)
   U332(tt, x0) -> U333(isLNat(x0), x0)
   U333(tt, x0) -> U334(isLNatKind(x0), x0)
   U334(tt, x0) -> x0
   U34(tt, x0) -> x0
   U341(tt, x0, x1) -> U342(isNaturalKind(x0), x0, x1)
   U342(tt, x0, x1) -> U343(isLNat(x1), x0, x1)
   U343(tt, x0, x1) -> U344(isLNatKind(x1), x0, x1)
   U344(tt, x0, x1) -> fst(splitAt(x0, x1))
   U41(tt, x0, x1) -> U42(isNaturalKind(x0), x0, x1)
   U42(tt, x0, x1) -> U43(isLNatKind(x1), x0, x1)
   U43(tt, x0, x1) -> U44(isLNatKind(x1), x0, x1)
   U44(tt, x0, x1) -> U45(isNatural(x0), x1)
   U45(tt, x0) -> U46(isLNat(x0))
   U46(tt) -> tt
   U51(tt, x0, x1) -> U52(isNaturalKind(x0), x0, x1)
   U52(tt, x0, x1) -> U53(isLNatKind(x1), x0, x1)
   U53(tt, x0, x1) -> U54(isLNatKind(x1), x0, x1)
   U54(tt, x0, x1) -> U55(isNatural(x0), x1)
   U55(tt, x0) -> U56(isLNat(x0))
   U56(tt) -> tt
   U61(tt, x0) -> U62(isPLNatKind(x0), x0)
   U62(tt, x0) -> U63(isPLNat(x0))
   U63(tt) -> tt
   U71(tt, x0) -> U72(isNaturalKind(x0), x0)
   U72(tt, x0) -> U73(isNatural(x0))
   U73(tt) -> tt
   U81(tt, x0) -> U82(isPLNatKind(x0), x0)
   U82(tt, x0) -> U83(isPLNat(x0))
   U83(tt) -> tt
   U91(tt, x0) -> U92(isLNatKind(x0), x0)
   U92(tt, x0) -> U93(isLNat(x0))
   U93(tt) -> tt
   afterNth(x0, x1) -> U11(isNatural(x0), x0, x1)
   fst(pair(x0, x1)) -> U21(isLNat(x0), x0, x1)
   head(cons(x0, x1)) -> U31(isNatural(x0), x0, x1)
   isLNat(nil) -> tt
   isLNat(afterNth(x0, x1)) -> U41(isNaturalKind(x0), x0, x1)
   isLNat(cons(x0, x1)) -> U51(isNaturalKind(x0), x0, x1)
   isLNat(fst(x0)) -> U61(isPLNatKind(x0), x0)
   isLNat(natsFrom(x0)) -> U71(isNaturalKind(x0), x0)
   isLNat(snd(x0)) -> U81(isPLNatKind(x0), x0)
   isLNat(tail(x0)) -> U91(isLNatKind(x0), x0)
   isLNat(take(x0, x1)) -> U101(isNaturalKind(x0), x0, x1)
   isNatural(0) -> tt
   isNatural(head(x0)) -> U181(isLNatKind(x0), x0)
   isNatural(s(x0)) -> U191(isNaturalKind(x0), x0)
   isNatural(sel(x0, x1)) -> U201(isNaturalKind(x0), x0, x1)
   isPLNat(pair(x0, x1)) -> U241(isLNatKind(x0), x0, x1)
   isPLNat(splitAt(x0, x1)) -> U251(isNaturalKind(x0), x0, x1)
   natsFrom(x0) -> U281(isNatural(x0), x0)
   sel(x0, x1) -> U291(isNatural(x0), x0, x1)
   snd(pair(x0, x1)) -> U301(isLNat(x0), x0, x1)
   splitAt(0, x0) -> U311(isLNat(x0), x0)
   splitAt(s(x0), cons(x1, x2)) -> U321(isNatural(x0), x0, x1, x2)
   tail(cons(x0, x1)) -> U331(isNatural(x0), x0, x1)
   take(x0, x1) -> U341(isNatural(x0), x0, x1)

----------------------------------------

(7)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {head_1, U211_1, afterNth_2, s_1, U221_1, sel_2, U232_1, U122_1, fst_1, U131_1, pair_2, natsFrom_1, U141_1, snd_1, U151_1, splitAt_2, U272_1, tail_1, U161_1, take_2, U172_1, U262_1, U112_1} are replacing on all positions.
For all symbols f in {U111_2, U231_2, cons_2, U121_2, U261_2, U271_2, U171_2, U111'_2, U231'_2, U121'_2, U261'_2, U171'_2, U271'_2} we have mu(f) = {1}.
The symbols in {isNaturalKind_1, isLNatKind_1, isPLNatKind_1, ISLNATKIND_1, ISNATURALKIND_1, ISPLNATKIND_1} are not replacing on any position.

The TRS P consists of the following rules:

   ISNATURALKIND(head(V1)) -> ISLNATKIND(V1)
   ISLNATKIND(afterNth(V1, V2)) -> U111'(isNaturalKind(V1), V2)
   U111'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(afterNth(V1, V2)) -> ISNATURALKIND(V1)
   ISNATURALKIND(s(V1)) -> ISNATURALKIND(V1)
   ISNATURALKIND(sel(V1, V2)) -> U231'(isNaturalKind(V1), V2)
   U231'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(cons(V1, V2)) -> U121'(isNaturalKind(V1), V2)
   U121'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(cons(V1, V2)) -> ISNATURALKIND(V1)
   ISNATURALKIND(sel(V1, V2)) -> ISNATURALKIND(V1)
   ISLNATKIND(fst(V1)) -> ISPLNATKIND(V1)
   ISPLNATKIND(pair(V1, V2)) -> U261'(isLNatKind(V1), V2)
   U261'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(natsFrom(V1)) -> ISNATURALKIND(V1)
   ISLNATKIND(snd(V1)) -> ISPLNATKIND(V1)
   ISPLNATKIND(pair(V1, V2)) -> ISLNATKIND(V1)
   ISLNATKIND(tail(V1)) -> ISLNATKIND(V1)
   ISLNATKIND(take(V1, V2)) -> U171'(isNaturalKind(V1), V2)
   U171'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(take(V1, V2)) -> ISNATURALKIND(V1)
   ISPLNATKIND(splitAt(V1, V2)) -> U271'(isNaturalKind(V1), V2)
   U271'(tt, V2) -> ISLNATKIND(V2)
   ISPLNATKIND(splitAt(V1, V2)) -> ISNATURALKIND(V1)

The TRS R consists of the following rules:

   isNaturalKind(0) -> tt
   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   U231(tt, V2) -> U232(isLNatKind(V2))
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   U121(tt, V2) -> U122(isLNatKind(V2))
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   U141(tt) -> tt
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   U271(tt, V2) -> U272(isLNatKind(V2))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U161(tt) -> tt
   U272(tt) -> tt
   U151(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U131(tt) -> tt
   U122(tt) -> tt
   U232(tt) -> tt
   U221(tt) -> tt
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt
   U211(tt) -> tt

Q is empty.

----------------------------------------

(8) QCSDPMuMonotonicPoloProof (EQUIVALENT)
By using the following mu-monotonic polynomial ordering [POLO], at least one Dependency Pair or term rewrite system rule of this Q-CSDP problem can be strictly oriented and thus deleted.

Strictly oriented dependency pairs:

   ISNATURALKIND(head(V1)) -> ISLNATKIND(V1)
   ISLNATKIND(afterNth(V1, V2)) -> U111'(isNaturalKind(V1), V2)
   U111'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(afterNth(V1, V2)) -> ISNATURALKIND(V1)
   ISNATURALKIND(s(V1)) -> ISNATURALKIND(V1)
   ISNATURALKIND(sel(V1, V2)) -> U231'(isNaturalKind(V1), V2)
   U231'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(cons(V1, V2)) -> U121'(isNaturalKind(V1), V2)
   U121'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(cons(V1, V2)) -> ISNATURALKIND(V1)
   ISNATURALKIND(sel(V1, V2)) -> ISNATURALKIND(V1)
   ISLNATKIND(fst(V1)) -> ISPLNATKIND(V1)
   ISPLNATKIND(pair(V1, V2)) -> U261'(isLNatKind(V1), V2)
   U261'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(natsFrom(V1)) -> ISNATURALKIND(V1)
   ISLNATKIND(snd(V1)) -> ISPLNATKIND(V1)
   ISPLNATKIND(pair(V1, V2)) -> ISLNATKIND(V1)
   ISLNATKIND(take(V1, V2)) -> U171'(isNaturalKind(V1), V2)
   U171'(tt, V2) -> ISLNATKIND(V2)
   ISLNATKIND(take(V1, V2)) -> ISNATURALKIND(V1)
   ISPLNATKIND(splitAt(V1, V2)) -> U271'(isNaturalKind(V1), V2)
   U271'(tt, V2) -> ISLNATKIND(V2)
   ISPLNATKIND(splitAt(V1, V2)) -> ISNATURALKIND(V1)

Strictly oriented rules of the TRS R:

   isNaturalKind(0) -> tt
   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   U231(tt, V2) -> U232(isLNatKind(V2))
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   U141(tt) -> tt
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   U271(tt, V2) -> U272(isLNatKind(V2))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U272(tt) -> tt
   U151(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U131(tt) -> tt
   U122(tt) -> tt
   U232(tt) -> tt
   U221(tt) -> tt
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt

Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(ISLNATKIND(x_1)) = 1 + 2*x_1
   POL(ISNATURALKIND(x_1)) = 2 + x_1
   POL(ISPLNATKIND(x_1)) = 1 + 2*x_1
   POL(U111(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U111'(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U112(x_1)) = 1 + x_1
   POL(U121(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(U121'(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U122(x_1)) = 1 + x_1
   POL(U131(x_1)) = 1 + x_1
   POL(U141(x_1)) = 1 + x_1
   POL(U151(x_1)) = 1 + 2*x_1
   POL(U161(x_1)) = x_1
   POL(U171(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U171'(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U172(x_1)) = 1 + x_1
   POL(U211(x_1)) = x_1
   POL(U221(x_1)) = 1 + 2*x_1
   POL(U231(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U231'(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U232(x_1)) = 1 + x_1
   POL(U261(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U261'(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(U262(x_1)) = 1 + x_1
   POL(U271(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U271'(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(U272(x_1)) = 1 + x_1
   POL(afterNth(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(cons(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(fst(x_1)) = 1 + 2*x_1
   POL(head(x_1)) = 2*x_1
   POL(isLNatKind(x_1)) = 2*x_1
   POL(isNaturalKind(x_1)) = 2*x_1
   POL(isPLNatKind(x_1)) = 1 + 2*x_1
   POL(natsFrom(x_1)) = 2 + 2*x_1
   POL(nil) = 1
   POL(pair(x_1, x_2)) = 1 + 2*x_1 + 2*x_2
   POL(s(x_1)) = 1 + 2*x_1
   POL(sel(x_1, x_2)) = 1 + 2*x_1 + 2*x_2
   POL(snd(x_1)) = 2 + 2*x_1
   POL(splitAt(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(tail(x_1)) = x_1
   POL(take(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(tt) = 0


----------------------------------------

(9)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {head_1, U211_1, sel_2, U122_1, fst_1, U131_1, tail_1, U161_1} are replacing on all positions.
For all symbols f in {U231_2, U121_2} we have mu(f) = {1}.
The symbols in {isNaturalKind_1, isLNatKind_1, isPLNatKind_1, ISLNATKIND_1} are not replacing on any position.

The TRS P consists of the following rules:

   ISLNATKIND(tail(V1)) -> ISLNATKIND(V1)

The TRS R consists of the following rules:

   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   U121(tt, V2) -> U122(isLNatKind(V2))
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   U161(tt) -> tt
   U211(tt) -> tt

Q is empty.

----------------------------------------

(10) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   ISLNATKIND(tail(V1)) -> ISLNATKIND(V1)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
ISLNATKIND(x1)  =  x1


Subterm Order

----------------------------------------

(11)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {head_1, U211_1, sel_2, U122_1, fst_1, U131_1, tail_1, U161_1} are replacing on all positions.
For all symbols f in {U231_2, U121_2} we have mu(f) = {1}.
The symbols in {isNaturalKind_1, isLNatKind_1, isPLNatKind_1} are not replacing on any position.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   U121(tt, V2) -> U122(isLNatKind(V2))
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   U161(tt) -> tt
   U211(tt) -> tt

Q is empty.

----------------------------------------

(12) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U106_1, U112_1, U122_1, U131_1, snd_1, splitAt_2, U141_1, U151_1, U161_1, U172_1, U183_1, U193_1, U206_1, U211_1, U221_1, U232_1, U246_1, U256_1, U262_1, U272_1, natsFrom_1, s_1, head_1, afterNth_2, pair_2, fst_1, U46_1, U56_1, U63_1, U73_1, U83_1, U93_1, tail_1, take_2, sel_2} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U105_2, U11_3, U12_3, U111_2, U13_3, U121_2, U14_3, U171_2, U181_2, U182_2, U191_2, U192_2, U201_3, U202_3, U203_3, U204_3, U205_2, U21_3, U22_3, U23_3, U24_2, U231_2, U241_3, U242_3, U243_3, U244_3, U245_2, U251_3, U252_3, U253_3, U254_3, U255_2, U261_2, U271_2, U281_2, U282_2, cons_2, U291_3, U292_3, U293_3, U294_3, U301_3, U302_2, U303_2, U304_2, U31_3, U32_3, U311_2, U312_2, U33_3, U321_4, U322_4, U323_4, U324_4, U325_4, U326_4, U327_2, U34_2, U331_3, U332_2, U333_2, U334_2, U341_3, U342_3, U343_3, U344_3, U41_3, U42_3, U43_3, U44_3, U45_2, U51_3, U52_3, U53_3, U54_3, U55_2, U61_2, U62_2, U71_2, U72_2, U81_2, U82_2, U91_2, U92_2, U103'_3, U102'_3, U104'_3, U105'_2, U41'_3, U42'_3, U43'_3, U44'_3, U45'_2, U51'_3, U52'_3, U53'_3, U54'_3, U55'_2, U61'_2, U62'_2, U241'_3, U242'_3, U243'_3, U244'_3, U245'_2, U71'_2, U72'_2, U181'_2, U182'_2, U81'_2, U82'_2, U251'_3, U252'_3, U253'_3, U254'_3, U255'_2, U91'_2, U92'_2, U101'_3, U191'_2, U192'_2, U201'_3, U202'_3, U203'_3, U204'_3, U205'_2} we have mu(f) = {1}.
The symbols in {isNaturalKind_1, isLNatKind_1, isNatural_1, isLNat_1, isPLNatKind_1, isPLNat_1, ISLNAT_1, ISPLNAT_1, ISNATURAL_1} are not replacing on any position.

The TRS P consists of the following rules:

   U102'(tt, V1, V2) -> U103'(isLNatKind(V2), V1, V2)
   U103'(tt, V1, V2) -> U104'(isLNatKind(V2), V1, V2)
   U104'(tt, V1, V2) -> U105'(isNatural(V1), V2)
   U105'(tt, V2) -> ISLNAT(V2)
   ISLNAT(afterNth(V1, V2)) -> U41'(isNaturalKind(V1), V1, V2)
   U41'(tt, V1, V2) -> U42'(isNaturalKind(V1), V1, V2)
   U42'(tt, V1, V2) -> U43'(isLNatKind(V2), V1, V2)
   U43'(tt, V1, V2) -> U44'(isLNatKind(V2), V1, V2)
   U44'(tt, V1, V2) -> U45'(isNatural(V1), V2)
   U45'(tt, V2) -> ISLNAT(V2)
   ISLNAT(cons(V1, V2)) -> U51'(isNaturalKind(V1), V1, V2)
   U51'(tt, V1, V2) -> U52'(isNaturalKind(V1), V1, V2)
   U52'(tt, V1, V2) -> U53'(isLNatKind(V2), V1, V2)
   U53'(tt, V1, V2) -> U54'(isLNatKind(V2), V1, V2)
   U54'(tt, V1, V2) -> U55'(isNatural(V1), V2)
   U55'(tt, V2) -> ISLNAT(V2)
   ISLNAT(fst(V1)) -> U61'(isPLNatKind(V1), V1)
   U61'(tt, V1) -> U62'(isPLNatKind(V1), V1)
   U62'(tt, V1) -> ISPLNAT(V1)
   ISPLNAT(pair(V1, V2)) -> U241'(isLNatKind(V1), V1, V2)
   U241'(tt, V1, V2) -> U242'(isLNatKind(V1), V1, V2)
   U242'(tt, V1, V2) -> U243'(isLNatKind(V2), V1, V2)
   U243'(tt, V1, V2) -> U244'(isLNatKind(V2), V1, V2)
   U244'(tt, V1, V2) -> U245'(isLNat(V1), V2)
   U245'(tt, V2) -> ISLNAT(V2)
   ISLNAT(natsFrom(V1)) -> U71'(isNaturalKind(V1), V1)
   U71'(tt, V1) -> U72'(isNaturalKind(V1), V1)
   U72'(tt, V1) -> ISNATURAL(V1)
   ISNATURAL(head(V1)) -> U181'(isLNatKind(V1), V1)
   U181'(tt, V1) -> U182'(isLNatKind(V1), V1)
   U182'(tt, V1) -> ISLNAT(V1)
   ISLNAT(snd(V1)) -> U81'(isPLNatKind(V1), V1)
   U81'(tt, V1) -> U82'(isPLNatKind(V1), V1)
   U82'(tt, V1) -> ISPLNAT(V1)
   ISPLNAT(splitAt(V1, V2)) -> U251'(isNaturalKind(V1), V1, V2)
   U251'(tt, V1, V2) -> U252'(isNaturalKind(V1), V1, V2)
   U252'(tt, V1, V2) -> U253'(isLNatKind(V2), V1, V2)
   U253'(tt, V1, V2) -> U254'(isLNatKind(V2), V1, V2)
   U254'(tt, V1, V2) -> U255'(isNatural(V1), V2)
   U255'(tt, V2) -> ISLNAT(V2)
   ISLNAT(tail(V1)) -> U91'(isLNatKind(V1), V1)
   U91'(tt, V1) -> U92'(isLNatKind(V1), V1)
   U92'(tt, V1) -> ISLNAT(V1)
   ISLNAT(take(V1, V2)) -> U101'(isNaturalKind(V1), V1, V2)
   U101'(tt, V1, V2) -> U102'(isNaturalKind(V1), V1, V2)
   U254'(tt, V1, V2) -> ISNATURAL(V1)
   ISNATURAL(s(V1)) -> U191'(isNaturalKind(V1), V1)
   U191'(tt, V1) -> U192'(isNaturalKind(V1), V1)
   U192'(tt, V1) -> ISNATURAL(V1)
   ISNATURAL(sel(V1, V2)) -> U201'(isNaturalKind(V1), V1, V2)
   U201'(tt, V1, V2) -> U202'(isNaturalKind(V1), V1, V2)
   U202'(tt, V1, V2) -> U203'(isLNatKind(V2), V1, V2)
   U203'(tt, V1, V2) -> U204'(isLNatKind(V2), V1, V2)
   U204'(tt, V1, V2) -> U205'(isNatural(V1), V2)
   U205'(tt, V2) -> ISLNAT(V2)
   U204'(tt, V1, V2) -> ISNATURAL(V1)
   U244'(tt, V1, V2) -> ISLNAT(V1)
   U54'(tt, V1, V2) -> ISNATURAL(V1)
   U44'(tt, V1, V2) -> ISNATURAL(V1)
   U104'(tt, V1, V2) -> ISNATURAL(V1)

The TRS R consists of the following rules:

   U101(tt, V1, V2) -> U102(isNaturalKind(V1), V1, V2)
   U102(tt, V1, V2) -> U103(isLNatKind(V2), V1, V2)
   U103(tt, V1, V2) -> U104(isLNatKind(V2), V1, V2)
   U104(tt, V1, V2) -> U105(isNatural(V1), V2)
   U105(tt, V2) -> U106(isLNat(V2))
   U106(tt) -> tt
   U11(tt, N, XS) -> U12(isNaturalKind(N), N, XS)
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt
   U12(tt, N, XS) -> U13(isLNat(XS), N, XS)
   U121(tt, V2) -> U122(isLNatKind(V2))
   U122(tt) -> tt
   U13(tt, N, XS) -> U14(isLNatKind(XS), N, XS)
   U131(tt) -> tt
   U14(tt, N, XS) -> snd(splitAt(N, XS))
   U141(tt) -> tt
   U151(tt) -> tt
   U161(tt) -> tt
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U181(tt, V1) -> U182(isLNatKind(V1), V1)
   U182(tt, V1) -> U183(isLNat(V1))
   U183(tt) -> tt
   U191(tt, V1) -> U192(isNaturalKind(V1), V1)
   U192(tt, V1) -> U193(isNatural(V1))
   U193(tt) -> tt
   U201(tt, V1, V2) -> U202(isNaturalKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isLNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isLNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNatural(V1), V2)
   U205(tt, V2) -> U206(isLNat(V2))
   U206(tt) -> tt
   U21(tt, X, Y) -> U22(isLNatKind(X), X, Y)
   U211(tt) -> tt
   U22(tt, X, Y) -> U23(isLNat(Y), X, Y)
   U221(tt) -> tt
   U23(tt, X, Y) -> U24(isLNatKind(Y), X)
   U231(tt, V2) -> U232(isLNatKind(V2))
   U232(tt) -> tt
   U24(tt, X) -> X
   U241(tt, V1, V2) -> U242(isLNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isLNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isLNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isLNat(V1), V2)
   U245(tt, V2) -> U246(isLNat(V2))
   U246(tt) -> tt
   U251(tt, V1, V2) -> U252(isNaturalKind(V1), V1, V2)
   U252(tt, V1, V2) -> U253(isLNatKind(V2), V1, V2)
   U253(tt, V1, V2) -> U254(isLNatKind(V2), V1, V2)
   U254(tt, V1, V2) -> U255(isNatural(V1), V2)
   U255(tt, V2) -> U256(isLNat(V2))
   U256(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isLNatKind(V2))
   U272(tt) -> tt
   U281(tt, N) -> U282(isNaturalKind(N), N)
   U282(tt, N) -> cons(N, natsFrom(s(N)))
   U291(tt, N, XS) -> U292(isNaturalKind(N), N, XS)
   U292(tt, N, XS) -> U293(isLNat(XS), N, XS)
   U293(tt, N, XS) -> U294(isLNatKind(XS), N, XS)
   U294(tt, N, XS) -> head(afterNth(N, XS))
   U301(tt, X, Y) -> U302(isLNatKind(X), Y)
   U302(tt, Y) -> U303(isLNat(Y), Y)
   U303(tt, Y) -> U304(isLNatKind(Y), Y)
   U304(tt, Y) -> Y
   U31(tt, N, XS) -> U32(isNaturalKind(N), N, XS)
   U311(tt, XS) -> U312(isLNatKind(XS), XS)
   U312(tt, XS) -> pair(nil, XS)
   U32(tt, N, XS) -> U33(isLNat(XS), N, XS)
   U321(tt, N, X, XS) -> U322(isNaturalKind(N), N, X, XS)
   U322(tt, N, X, XS) -> U323(isNatural(X), N, X, XS)
   U323(tt, N, X, XS) -> U324(isNaturalKind(X), N, X, XS)
   U324(tt, N, X, XS) -> U325(isLNat(XS), N, X, XS)
   U325(tt, N, X, XS) -> U326(isLNatKind(XS), N, X, XS)
   U326(tt, N, X, XS) -> U327(splitAt(N, XS), X)
   U327(pair(YS, ZS), X) -> pair(cons(X, YS), ZS)
   U33(tt, N, XS) -> U34(isLNatKind(XS), N)
   U331(tt, N, XS) -> U332(isNaturalKind(N), XS)
   U332(tt, XS) -> U333(isLNat(XS), XS)
   U333(tt, XS) -> U334(isLNatKind(XS), XS)
   U334(tt, XS) -> XS
   U34(tt, N) -> N
   U341(tt, N, XS) -> U342(isNaturalKind(N), N, XS)
   U342(tt, N, XS) -> U343(isLNat(XS), N, XS)
   U343(tt, N, XS) -> U344(isLNatKind(XS), N, XS)
   U344(tt, N, XS) -> fst(splitAt(N, XS))
   U41(tt, V1, V2) -> U42(isNaturalKind(V1), V1, V2)
   U42(tt, V1, V2) -> U43(isLNatKind(V2), V1, V2)
   U43(tt, V1, V2) -> U44(isLNatKind(V2), V1, V2)
   U44(tt, V1, V2) -> U45(isNatural(V1), V2)
   U45(tt, V2) -> U46(isLNat(V2))
   U46(tt) -> tt
   U51(tt, V1, V2) -> U52(isNaturalKind(V1), V1, V2)
   U52(tt, V1, V2) -> U53(isLNatKind(V2), V1, V2)
   U53(tt, V1, V2) -> U54(isLNatKind(V2), V1, V2)
   U54(tt, V1, V2) -> U55(isNatural(V1), V2)
   U55(tt, V2) -> U56(isLNat(V2))
   U56(tt) -> tt
   U61(tt, V1) -> U62(isPLNatKind(V1), V1)
   U62(tt, V1) -> U63(isPLNat(V1))
   U63(tt) -> tt
   U71(tt, V1) -> U72(isNaturalKind(V1), V1)
   U72(tt, V1) -> U73(isNatural(V1))
   U73(tt) -> tt
   U81(tt, V1) -> U82(isPLNatKind(V1), V1)
   U82(tt, V1) -> U83(isPLNat(V1))
   U83(tt) -> tt
   U91(tt, V1) -> U92(isLNatKind(V1), V1)
   U92(tt, V1) -> U93(isLNat(V1))
   U93(tt) -> tt
   afterNth(N, XS) -> U11(isNatural(N), N, XS)
   fst(pair(X, Y)) -> U21(isLNat(X), X, Y)
   head(cons(N, XS)) -> U31(isNatural(N), N, XS)
   isLNat(nil) -> tt
   isLNat(afterNth(V1, V2)) -> U41(isNaturalKind(V1), V1, V2)
   isLNat(cons(V1, V2)) -> U51(isNaturalKind(V1), V1, V2)
   isLNat(fst(V1)) -> U61(isPLNatKind(V1), V1)
   isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1), V1)
   isLNat(snd(V1)) -> U81(isPLNatKind(V1), V1)
   isLNat(tail(V1)) -> U91(isLNatKind(V1), V1)
   isLNat(take(V1, V2)) -> U101(isNaturalKind(V1), V1, V2)
   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   isNatural(0) -> tt
   isNatural(head(V1)) -> U181(isLNatKind(V1), V1)
   isNatural(s(V1)) -> U191(isNaturalKind(V1), V1)
   isNatural(sel(V1, V2)) -> U201(isNaturalKind(V1), V1, V2)
   isNaturalKind(0) -> tt
   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   isPLNat(pair(V1, V2)) -> U241(isLNatKind(V1), V1, V2)
   isPLNat(splitAt(V1, V2)) -> U251(isNaturalKind(V1), V1, V2)
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   natsFrom(N) -> U281(isNatural(N), N)
   sel(N, XS) -> U291(isNatural(N), N, XS)
   snd(pair(X, Y)) -> U301(isLNat(X), X, Y)
   splitAt(0, XS) -> U311(isLNat(XS), XS)
   splitAt(s(N), cons(X, XS)) -> U321(isNatural(N), N, X, XS)
   tail(cons(N, XS)) -> U331(isNatural(N), N, XS)
   take(N, XS) -> U341(isNatural(N), N, XS)

Q is empty.

----------------------------------------

(15) QCSUsableRulesProof (EQUIVALENT)
The following rules are not useable [DA_EMMES] and can be deleted:

   U11(tt, x0, x1) -> U12(isNaturalKind(x0), x0, x1)
   U12(tt, x0, x1) -> U13(isLNat(x1), x0, x1)
   U13(tt, x0, x1) -> U14(isLNatKind(x1), x0, x1)
   U14(tt, x0, x1) -> snd(splitAt(x0, x1))
   U21(tt, x0, x1) -> U22(isLNatKind(x0), x0, x1)
   U22(tt, x0, x1) -> U23(isLNat(x1), x0, x1)
   U23(tt, x0, x1) -> U24(isLNatKind(x1), x0)
   U24(tt, x0) -> x0
   U281(tt, x0) -> U282(isNaturalKind(x0), x0)
   U282(tt, x0) -> cons(x0, natsFrom(s(x0)))
   U291(tt, x0, x1) -> U292(isNaturalKind(x0), x0, x1)
   U292(tt, x0, x1) -> U293(isLNat(x1), x0, x1)
   U293(tt, x0, x1) -> U294(isLNatKind(x1), x0, x1)
   U294(tt, x0, x1) -> head(afterNth(x0, x1))
   U301(tt, x0, x1) -> U302(isLNatKind(x0), x1)
   U302(tt, x0) -> U303(isLNat(x0), x0)
   U303(tt, x0) -> U304(isLNatKind(x0), x0)
   U304(tt, x0) -> x0
   U31(tt, x0, x1) -> U32(isNaturalKind(x0), x0, x1)
   U311(tt, x0) -> U312(isLNatKind(x0), x0)
   U312(tt, x0) -> pair(nil, x0)
   U32(tt, x0, x1) -> U33(isLNat(x1), x0, x1)
   U321(tt, x0, x1, x2) -> U322(isNaturalKind(x0), x0, x1, x2)
   U322(tt, x0, x1, x2) -> U323(isNatural(x1), x0, x1, x2)
   U323(tt, x0, x1, x2) -> U324(isNaturalKind(x1), x0, x1, x2)
   U324(tt, x0, x1, x2) -> U325(isLNat(x2), x0, x1, x2)
   U325(tt, x0, x1, x2) -> U326(isLNatKind(x2), x0, x1, x2)
   U326(tt, x0, x1, x2) -> U327(splitAt(x0, x2), x1)
   U327(pair(x0, x1), x2) -> pair(cons(x2, x0), x1)
   U33(tt, x0, x1) -> U34(isLNatKind(x1), x0)
   U331(tt, x0, x1) -> U332(isNaturalKind(x0), x1)
   U332(tt, x0) -> U333(isLNat(x0), x0)
   U333(tt, x0) -> U334(isLNatKind(x0), x0)
   U334(tt, x0) -> x0
   U34(tt, x0) -> x0
   U341(tt, x0, x1) -> U342(isNaturalKind(x0), x0, x1)
   U342(tt, x0, x1) -> U343(isLNat(x1), x0, x1)
   U343(tt, x0, x1) -> U344(isLNatKind(x1), x0, x1)
   U344(tt, x0, x1) -> fst(splitAt(x0, x1))
   afterNth(x0, x1) -> U11(isNatural(x0), x0, x1)
   fst(pair(x0, x1)) -> U21(isLNat(x0), x0, x1)
   head(cons(x0, x1)) -> U31(isNatural(x0), x0, x1)
   natsFrom(x0) -> U281(isNatural(x0), x0)
   sel(x0, x1) -> U291(isNatural(x0), x0, x1)
   snd(pair(x0, x1)) -> U301(isLNat(x0), x0, x1)
   splitAt(0, x0) -> U311(isLNat(x0), x0)
   splitAt(s(x0), cons(x1, x2)) -> U321(isNatural(x0), x0, x1, x2)
   tail(cons(x0, x1)) -> U331(isNatural(x0), x0, x1)
   take(x0, x1) -> U341(isNatural(x0), x0, x1)

----------------------------------------

(16)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {afterNth_2, head_1, U211_1, s_1, U221_1, sel_2, U232_1, fst_1, U131_1, pair_2, natsFrom_1, U141_1, snd_1, U151_1, splitAt_2, U272_1, tail_1, U161_1, take_2, U172_1, U262_1, U122_1, U112_1, U183_1, U193_1, U206_1, U56_1, U63_1, U73_1, U83_1, U256_1, U93_1, U106_1, U246_1, U46_1} are replacing on all positions.
For all symbols f in {U111_2, cons_2, U121_2, U231_2, U261_2, U271_2, U171_2, U181_2, U182_2, U41_3, U42_3, U43_3, U44_3, U45_2, U191_2, U192_2, U201_3, U202_3, U203_3, U204_3, U205_2, U51_3, U52_3, U53_3, U54_3, U55_2, U61_2, U62_2, U241_3, U242_3, U243_3, U244_3, U245_2, U71_2, U72_2, U81_2, U82_2, U251_3, U252_3, U253_3, U254_3, U255_2, U91_2, U92_2, U101_3, U102_3, U103_3, U104_3, U105_2, U103'_3, U102'_3, U104'_3, U105'_2, U41'_3, U42'_3, U43'_3, U44'_3, U45'_2, U51'_3, U52'_3, U53'_3, U54'_3, U55'_2, U61'_2, U62'_2, U241'_3, U242'_3, U243'_3, U244'_3, U245'_2, U71'_2, U72'_2, U181'_2, U182'_2, U81'_2, U82'_2, U251'_3, U252'_3, U253'_3, U254'_3, U255'_2, U91'_2, U92'_2, U101'_3, U191'_2, U192'_2, U201'_3, U202'_3, U203'_3, U204'_3, U205'_2} we have mu(f) = {1}.
The symbols in {isLNatKind_1, isNaturalKind_1, isPLNatKind_1, isNatural_1, isLNat_1, isPLNat_1, ISLNAT_1, ISPLNAT_1, ISNATURAL_1} are not replacing on any position.

The TRS P consists of the following rules:

   U102'(tt, V1, V2) -> U103'(isLNatKind(V2), V1, V2)
   U103'(tt, V1, V2) -> U104'(isLNatKind(V2), V1, V2)
   U104'(tt, V1, V2) -> U105'(isNatural(V1), V2)
   U105'(tt, V2) -> ISLNAT(V2)
   ISLNAT(afterNth(V1, V2)) -> U41'(isNaturalKind(V1), V1, V2)
   U41'(tt, V1, V2) -> U42'(isNaturalKind(V1), V1, V2)
   U42'(tt, V1, V2) -> U43'(isLNatKind(V2), V1, V2)
   U43'(tt, V1, V2) -> U44'(isLNatKind(V2), V1, V2)
   U44'(tt, V1, V2) -> U45'(isNatural(V1), V2)
   U45'(tt, V2) -> ISLNAT(V2)
   ISLNAT(cons(V1, V2)) -> U51'(isNaturalKind(V1), V1, V2)
   U51'(tt, V1, V2) -> U52'(isNaturalKind(V1), V1, V2)
   U52'(tt, V1, V2) -> U53'(isLNatKind(V2), V1, V2)
   U53'(tt, V1, V2) -> U54'(isLNatKind(V2), V1, V2)
   U54'(tt, V1, V2) -> U55'(isNatural(V1), V2)
   U55'(tt, V2) -> ISLNAT(V2)
   ISLNAT(fst(V1)) -> U61'(isPLNatKind(V1), V1)
   U61'(tt, V1) -> U62'(isPLNatKind(V1), V1)
   U62'(tt, V1) -> ISPLNAT(V1)
   ISPLNAT(pair(V1, V2)) -> U241'(isLNatKind(V1), V1, V2)
   U241'(tt, V1, V2) -> U242'(isLNatKind(V1), V1, V2)
   U242'(tt, V1, V2) -> U243'(isLNatKind(V2), V1, V2)
   U243'(tt, V1, V2) -> U244'(isLNatKind(V2), V1, V2)
   U244'(tt, V1, V2) -> U245'(isLNat(V1), V2)
   U245'(tt, V2) -> ISLNAT(V2)
   ISLNAT(natsFrom(V1)) -> U71'(isNaturalKind(V1), V1)
   U71'(tt, V1) -> U72'(isNaturalKind(V1), V1)
   U72'(tt, V1) -> ISNATURAL(V1)
   ISNATURAL(head(V1)) -> U181'(isLNatKind(V1), V1)
   U181'(tt, V1) -> U182'(isLNatKind(V1), V1)
   U182'(tt, V1) -> ISLNAT(V1)
   ISLNAT(snd(V1)) -> U81'(isPLNatKind(V1), V1)
   U81'(tt, V1) -> U82'(isPLNatKind(V1), V1)
   U82'(tt, V1) -> ISPLNAT(V1)
   ISPLNAT(splitAt(V1, V2)) -> U251'(isNaturalKind(V1), V1, V2)
   U251'(tt, V1, V2) -> U252'(isNaturalKind(V1), V1, V2)
   U252'(tt, V1, V2) -> U253'(isLNatKind(V2), V1, V2)
   U253'(tt, V1, V2) -> U254'(isLNatKind(V2), V1, V2)
   U254'(tt, V1, V2) -> U255'(isNatural(V1), V2)
   U255'(tt, V2) -> ISLNAT(V2)
   ISLNAT(tail(V1)) -> U91'(isLNatKind(V1), V1)
   U91'(tt, V1) -> U92'(isLNatKind(V1), V1)
   U92'(tt, V1) -> ISLNAT(V1)
   ISLNAT(take(V1, V2)) -> U101'(isNaturalKind(V1), V1, V2)
   U101'(tt, V1, V2) -> U102'(isNaturalKind(V1), V1, V2)
   U254'(tt, V1, V2) -> ISNATURAL(V1)
   ISNATURAL(s(V1)) -> U191'(isNaturalKind(V1), V1)
   U191'(tt, V1) -> U192'(isNaturalKind(V1), V1)
   U192'(tt, V1) -> ISNATURAL(V1)
   ISNATURAL(sel(V1, V2)) -> U201'(isNaturalKind(V1), V1, V2)
   U201'(tt, V1, V2) -> U202'(isNaturalKind(V1), V1, V2)
   U202'(tt, V1, V2) -> U203'(isLNatKind(V2), V1, V2)
   U203'(tt, V1, V2) -> U204'(isLNatKind(V2), V1, V2)
   U204'(tt, V1, V2) -> U205'(isNatural(V1), V2)
   U205'(tt, V2) -> ISLNAT(V2)
   U204'(tt, V1, V2) -> ISNATURAL(V1)
   U244'(tt, V1, V2) -> ISLNAT(V1)
   U54'(tt, V1, V2) -> ISNATURAL(V1)
   U44'(tt, V1, V2) -> ISNATURAL(V1)
   U104'(tt, V1, V2) -> ISNATURAL(V1)

The TRS R consists of the following rules:

   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isNaturalKind(0) -> tt
   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   U231(tt, V2) -> U232(isLNatKind(V2))
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   U141(tt) -> tt
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   U271(tt, V2) -> U272(isLNatKind(V2))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U161(tt) -> tt
   U272(tt) -> tt
   U151(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U131(tt) -> tt
   U232(tt) -> tt
   U221(tt) -> tt
   U121(tt, V2) -> U122(isLNatKind(V2))
   U122(tt) -> tt
   U211(tt) -> tt
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt
   isNatural(0) -> tt
   isNatural(head(V1)) -> U181(isLNatKind(V1), V1)
   U181(tt, V1) -> U182(isLNatKind(V1), V1)
   U182(tt, V1) -> U183(isLNat(V1))
   isLNat(nil) -> tt
   isLNat(afterNth(V1, V2)) -> U41(isNaturalKind(V1), V1, V2)
   U41(tt, V1, V2) -> U42(isNaturalKind(V1), V1, V2)
   U42(tt, V1, V2) -> U43(isLNatKind(V2), V1, V2)
   U43(tt, V1, V2) -> U44(isLNatKind(V2), V1, V2)
   U44(tt, V1, V2) -> U45(isNatural(V1), V2)
   isNatural(s(V1)) -> U191(isNaturalKind(V1), V1)
   U191(tt, V1) -> U192(isNaturalKind(V1), V1)
   U192(tt, V1) -> U193(isNatural(V1))
   isNatural(sel(V1, V2)) -> U201(isNaturalKind(V1), V1, V2)
   U201(tt, V1, V2) -> U202(isNaturalKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isLNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isLNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNatural(V1), V2)
   U205(tt, V2) -> U206(isLNat(V2))
   isLNat(cons(V1, V2)) -> U51(isNaturalKind(V1), V1, V2)
   U51(tt, V1, V2) -> U52(isNaturalKind(V1), V1, V2)
   U52(tt, V1, V2) -> U53(isLNatKind(V2), V1, V2)
   U53(tt, V1, V2) -> U54(isLNatKind(V2), V1, V2)
   U54(tt, V1, V2) -> U55(isNatural(V1), V2)
   U55(tt, V2) -> U56(isLNat(V2))
   isLNat(fst(V1)) -> U61(isPLNatKind(V1), V1)
   U61(tt, V1) -> U62(isPLNatKind(V1), V1)
   U62(tt, V1) -> U63(isPLNat(V1))
   isPLNat(pair(V1, V2)) -> U241(isLNatKind(V1), V1, V2)
   U241(tt, V1, V2) -> U242(isLNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isLNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isLNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isLNat(V1), V2)
   isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1), V1)
   U71(tt, V1) -> U72(isNaturalKind(V1), V1)
   U72(tt, V1) -> U73(isNatural(V1))
   U73(tt) -> tt
   isLNat(snd(V1)) -> U81(isPLNatKind(V1), V1)
   U81(tt, V1) -> U82(isPLNatKind(V1), V1)
   U82(tt, V1) -> U83(isPLNat(V1))
   isPLNat(splitAt(V1, V2)) -> U251(isNaturalKind(V1), V1, V2)
   U251(tt, V1, V2) -> U252(isNaturalKind(V1), V1, V2)
   U252(tt, V1, V2) -> U253(isLNatKind(V2), V1, V2)
   U253(tt, V1, V2) -> U254(isLNatKind(V2), V1, V2)
   U254(tt, V1, V2) -> U255(isNatural(V1), V2)
   U255(tt, V2) -> U256(isLNat(V2))
   isLNat(tail(V1)) -> U91(isLNatKind(V1), V1)
   U91(tt, V1) -> U92(isLNatKind(V1), V1)
   U92(tt, V1) -> U93(isLNat(V1))
   isLNat(take(V1, V2)) -> U101(isNaturalKind(V1), V1, V2)
   U101(tt, V1, V2) -> U102(isNaturalKind(V1), V1, V2)
   U102(tt, V1, V2) -> U103(isLNatKind(V2), V1, V2)
   U103(tt, V1, V2) -> U104(isLNatKind(V2), V1, V2)
   U104(tt, V1, V2) -> U105(isNatural(V1), V2)
   U105(tt, V2) -> U106(isLNat(V2))
   U106(tt) -> tt
   U93(tt) -> tt
   U256(tt) -> tt
   U83(tt) -> tt
   U245(tt, V2) -> U246(isLNat(V2))
   U246(tt) -> tt
   U63(tt) -> tt
   U56(tt) -> tt
   U206(tt) -> tt
   U193(tt) -> tt
   U45(tt, V2) -> U46(isLNat(V2))
   U46(tt) -> tt
   U183(tt) -> tt

Q is empty.

----------------------------------------

(17) QCSDPMuMonotonicPoloProof (EQUIVALENT)
By using the following mu-monotonic polynomial ordering [POLO], at least one Dependency Pair or term rewrite system rule of this Q-CSDP problem can be strictly oriented and thus deleted.

Strictly oriented dependency pairs:

   U104'(tt, V1, V2) -> U105'(isNatural(V1), V2)
   U105'(tt, V2) -> ISLNAT(V2)
   U43'(tt, V1, V2) -> U44'(isLNatKind(V2), V1, V2)
   U45'(tt, V2) -> ISLNAT(V2)
   U51'(tt, V1, V2) -> U52'(isNaturalKind(V1), V1, V2)
   U52'(tt, V1, V2) -> U53'(isLNatKind(V2), V1, V2)
   ISLNAT(fst(V1)) -> U61'(isPLNatKind(V1), V1)
   U61'(tt, V1) -> U62'(isPLNatKind(V1), V1)
   ISPLNAT(pair(V1, V2)) -> U241'(isLNatKind(V1), V1, V2)
   U241'(tt, V1, V2) -> U242'(isLNatKind(V1), V1, V2)
   U242'(tt, V1, V2) -> U243'(isLNatKind(V2), V1, V2)
   U71'(tt, V1) -> U72'(isNaturalKind(V1), V1)
   U72'(tt, V1) -> ISNATURAL(V1)
   U181'(tt, V1) -> U182'(isLNatKind(V1), V1)
   U182'(tt, V1) -> ISLNAT(V1)
   U81'(tt, V1) -> U82'(isPLNatKind(V1), V1)
   U82'(tt, V1) -> ISPLNAT(V1)
   ISPLNAT(splitAt(V1, V2)) -> U251'(isNaturalKind(V1), V1, V2)
   U253'(tt, V1, V2) -> U254'(isLNatKind(V2), V1, V2)
   U254'(tt, V1, V2) -> U255'(isNatural(V1), V2)
   ISLNAT(tail(V1)) -> U91'(isLNatKind(V1), V1)
   U91'(tt, V1) -> U92'(isLNatKind(V1), V1)
   U254'(tt, V1, V2) -> ISNATURAL(V1)
   U191'(tt, V1) -> U192'(isNaturalKind(V1), V1)
   U192'(tt, V1) -> ISNATURAL(V1)
   ISNATURAL(sel(V1, V2)) -> U201'(isNaturalKind(V1), V1, V2)
   U44'(tt, V1, V2) -> ISNATURAL(V1)
   U104'(tt, V1, V2) -> ISNATURAL(V1)

Strictly oriented rules of the TRS R:

   isNatural(0) -> tt
   isNatural(head(V1)) -> U181(isLNatKind(V1), V1)
   U182(tt, V1) -> U183(isLNat(V1))
   isLNat(nil) -> tt
   U43(tt, V1, V2) -> U44(isLNatKind(V2), V1, V2)
   U44(tt, V1, V2) -> U45(isNatural(V1), V2)
   isNatural(s(V1)) -> U191(isNaturalKind(V1), V1)
   U191(tt, V1) -> U192(isNaturalKind(V1), V1)
   U192(tt, V1) -> U193(isNatural(V1))
   isNatural(sel(V1, V2)) -> U201(isNaturalKind(V1), V1, V2)
   U51(tt, V1, V2) -> U52(isNaturalKind(V1), V1, V2)
   U53(tt, V1, V2) -> U54(isLNatKind(V2), V1, V2)
   isLNat(fst(V1)) -> U61(isPLNatKind(V1), V1)
   U244(tt, V1, V2) -> U245(isLNat(V1), V2)
   U71(tt, V1) -> U72(isNaturalKind(V1), V1)
   U73(tt) -> tt
   U82(tt, V1) -> U83(isPLNat(V1))
   U254(tt, V1, V2) -> U255(isNatural(V1), V2)
   isLNat(tail(V1)) -> U91(isLNatKind(V1), V1)
   U101(tt, V1, V2) -> U102(isNaturalKind(V1), V1, V2)
   U104(tt, V1, V2) -> U105(isNatural(V1), V2)
   U93(tt) -> tt
   U83(tt) -> tt
   U245(tt, V2) -> U246(isLNat(V2))
   U63(tt) -> tt
   U183(tt) -> tt

Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(ISLNAT(x_1)) = x_1
   POL(ISNATURAL(x_1)) = x_1
   POL(ISPLNAT(x_1)) = 2*x_1
   POL(U101(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U101'(x_1, x_2, x_3)) = 2 + x_1 + 2*x_2 + 2*x_3
   POL(U102(x_1, x_2, x_3)) = 1 + x_1 + 2*x_2 + x_3
   POL(U102'(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U103(x_1, x_2, x_3)) = 1 + 2*x_1 + 2*x_2 + x_3
   POL(U103'(x_1, x_2, x_3)) = 2 + x_1 + 2*x_2 + 2*x_3
   POL(U104(x_1, x_2, x_3)) = 1 + 2*x_1 + 2*x_2 + x_3
   POL(U104'(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U105(x_1, x_2)) = x_1 + x_2
   POL(U105'(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(U106(x_1)) = x_1
   POL(U111(x_1, x_2)) = 2*x_1
   POL(U112(x_1)) = 2*x_1
   POL(U121(x_1, x_2)) = 2*x_1
   POL(U122(x_1)) = x_1
   POL(U131(x_1)) = 2*x_1
   POL(U141(x_1)) = 2*x_1
   POL(U151(x_1)) = 2*x_1
   POL(U161(x_1)) = 2*x_1
   POL(U171(x_1, x_2)) = x_1
   POL(U172(x_1)) = 2*x_1
   POL(U181(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U181'(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(U182(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(U182'(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(U183(x_1)) = 1 + x_1
   POL(U191(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U191'(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(U192(x_1, x_2)) = 1 + 2*x_1 + 2*x_2
   POL(U192'(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(U193(x_1)) = x_1
   POL(U201(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(U201'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(U202(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(U202'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(U203(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(U203'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(U204(x_1, x_2, x_3)) = x_1 + 2*x_2 + x_3
   POL(U204'(x_1, x_2, x_3)) = x_1 + 2*x_2 + x_3
   POL(U205(x_1, x_2)) = x_1 + x_2
   POL(U205'(x_1, x_2)) = x_1 + x_2
   POL(U206(x_1)) = x_1
   POL(U211(x_1)) = 2*x_1
   POL(U221(x_1)) = 2*x_1
   POL(U231(x_1, x_2)) = x_1
   POL(U232(x_1)) = 2*x_1
   POL(U241(x_1, x_2, x_3)) = 2 + x_1 + x_2 + x_3
   POL(U241'(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + x_3
   POL(U242(x_1, x_2, x_3)) = 2 + 2*x_1 + x_2 + x_3
   POL(U242'(x_1, x_2, x_3)) = 1 + 2*x_1 + 2*x_2 + x_3
   POL(U243(x_1, x_2, x_3)) = 2 + 2*x_1 + x_2 + x_3
   POL(U243'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(U244(x_1, x_2, x_3)) = 2 + x_1 + x_2 + x_3
   POL(U244'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(U245(x_1, x_2)) = 1 + x_1 + x_2
   POL(U245'(x_1, x_2)) = 2*x_1 + x_2
   POL(U246(x_1)) = x_1
   POL(U251(x_1, x_2, x_3)) = 2 + x_1 + 2*x_2 + x_3
   POL(U251'(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U252(x_1, x_2, x_3)) = 2 + x_1 + 2*x_2 + x_3
   POL(U252'(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + x_3
   POL(U253(x_1, x_2, x_3)) = 2 + x_1 + 2*x_2 + x_3
   POL(U253'(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + x_3
   POL(U254(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + x_3
   POL(U254'(x_1, x_2, x_3)) = 1 + x_1 + 2*x_2 + x_3
   POL(U255(x_1, x_2)) = x_1 + x_2
   POL(U255'(x_1, x_2)) = x_1 + x_2
   POL(U256(x_1)) = x_1
   POL(U261(x_1, x_2)) = x_1
   POL(U262(x_1)) = x_1
   POL(U271(x_1, x_2)) = 2*x_1
   POL(U272(x_1)) = x_1
   POL(U41(x_1, x_2, x_3)) = 2 + x_1 + 2*x_2 + 2*x_3
   POL(U41'(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U42(x_1, x_2, x_3)) = 2 + x_1 + 2*x_2 + 2*x_3
   POL(U42'(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + x_3
   POL(U43(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U43'(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + x_3
   POL(U44(x_1, x_2, x_3)) = 1 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U44'(x_1, x_2, x_3)) = 1 + x_1 + 2*x_2 + x_3
   POL(U45(x_1, x_2)) = x_1 + 2*x_2
   POL(U45'(x_1, x_2)) = 1 + x_1 + x_2
   POL(U46(x_1)) = 2*x_1
   POL(U51(x_1, x_2, x_3)) = 2 + x_1 + 2*x_2 + 2*x_3
   POL(U51'(x_1, x_2, x_3)) = 2 + x_1 + 2*x_2 + 2*x_3
   POL(U52(x_1, x_2, x_3)) = 1 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U52'(x_1, x_2, x_3)) = 1 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U53(x_1, x_2, x_3)) = 1 + x_1 + 2*x_2 + 2*x_3
   POL(U53'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(U54(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + 2*x_3
   POL(U54'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(U55(x_1, x_2)) = x_1 + 2*x_2
   POL(U55'(x_1, x_2)) = x_1 + x_2
   POL(U56(x_1)) = 2*x_1
   POL(U61(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(U61'(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(U62(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(U62'(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(U63(x_1)) = 1 + x_1
   POL(U71(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U71'(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(U72(x_1, x_2)) = 1 + 2*x_1 + 2*x_2
   POL(U72'(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(U73(x_1)) = 1 + x_1
   POL(U81(x_1, x_2)) = 2 + x_1 + x_2
   POL(U81'(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(U82(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(U82'(x_1, x_2)) = 1 + 2*x_1 + 2*x_2
   POL(U83(x_1)) = 1 + x_1
   POL(U91(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(U91'(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(U92(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(U92'(x_1, x_2)) = x_1 + 2*x_2
   POL(U93(x_1)) = 1 + x_1
   POL(afterNth(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(cons(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(fst(x_1)) = 2 + 2*x_1
   POL(head(x_1)) = 2 + 2*x_1
   POL(isLNat(x_1)) = x_1
   POL(isLNatKind(x_1)) = 0
   POL(isNatural(x_1)) = 2*x_1
   POL(isNaturalKind(x_1)) = 0
   POL(isPLNat(x_1)) = x_1
   POL(isPLNatKind(x_1)) = 0
   POL(natsFrom(x_1)) = 2 + 2*x_1
   POL(nil) = 2
   POL(pair(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(s(x_1)) = 2 + 2*x_1
   POL(sel(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(snd(x_1)) = 2 + 2*x_1
   POL(splitAt(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(tail(x_1)) = 2 + 2*x_1
   POL(take(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(tt) = 0


----------------------------------------

(18)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {afterNth_2, head_1, U211_1, s_1, U221_1, sel_2, U232_1, fst_1, U131_1, pair_2, natsFrom_1, U141_1, snd_1, U151_1, splitAt_2, U272_1, tail_1, U161_1, take_2, U172_1, U262_1, U122_1, U112_1, U206_1, U56_1, U63_1, U73_1, U256_1, U93_1, U106_1, U246_1, U193_1, U46_1} are replacing on all positions.
For all symbols f in {U111_2, cons_2, U121_2, U231_2, U261_2, U271_2, U171_2, U181_2, U182_2, U41_3, U42_3, U43_3, U201_3, U202_3, U203_3, U204_3, U205_2, U51_3, U52_3, U53_3, U54_3, U55_2, U61_2, U62_2, U241_3, U242_3, U243_3, U244_3, U71_2, U72_2, U81_2, U82_2, U251_3, U252_3, U253_3, U254_3, U255_2, U91_2, U92_2, U101_3, U102_3, U103_3, U104_3, U105_2, U45_2, U103'_3, U102'_3, U104'_3, U41'_3, U42'_3, U43'_3, U45'_2, U44'_3, U51'_3, U54'_3, U53'_3, U55'_2, U62'_2, U244'_3, U243'_3, U245'_2, U71'_2, U181'_2, U81'_2, U252'_3, U251'_3, U253'_3, U255'_2, U92'_2, U101'_3, U191'_2, U202'_3, U201'_3, U203'_3, U204'_3, U205'_2} we have mu(f) = {1}.
The symbols in {isLNatKind_1, isNaturalKind_1, isPLNatKind_1, isLNat_1, isNatural_1, isPLNat_1, ISLNAT_1, ISPLNAT_1, ISNATURAL_1} are not replacing on any position.

The TRS P consists of the following rules:

   U102'(tt, V1, V2) -> U103'(isLNatKind(V2), V1, V2)
   U103'(tt, V1, V2) -> U104'(isLNatKind(V2), V1, V2)
   ISLNAT(afterNth(V1, V2)) -> U41'(isNaturalKind(V1), V1, V2)
   U41'(tt, V1, V2) -> U42'(isNaturalKind(V1), V1, V2)
   U42'(tt, V1, V2) -> U43'(isLNatKind(V2), V1, V2)
   U44'(tt, V1, V2) -> U45'(isNatural(V1), V2)
   ISLNAT(cons(V1, V2)) -> U51'(isNaturalKind(V1), V1, V2)
   U53'(tt, V1, V2) -> U54'(isLNatKind(V2), V1, V2)
   U54'(tt, V1, V2) -> U55'(isNatural(V1), V2)
   U55'(tt, V2) -> ISLNAT(V2)
   U62'(tt, V1) -> ISPLNAT(V1)
   U243'(tt, V1, V2) -> U244'(isLNatKind(V2), V1, V2)
   U244'(tt, V1, V2) -> U245'(isLNat(V1), V2)
   U245'(tt, V2) -> ISLNAT(V2)
   ISLNAT(natsFrom(V1)) -> U71'(isNaturalKind(V1), V1)
   ISNATURAL(head(V1)) -> U181'(isLNatKind(V1), V1)
   ISLNAT(snd(V1)) -> U81'(isPLNatKind(V1), V1)
   U251'(tt, V1, V2) -> U252'(isNaturalKind(V1), V1, V2)
   U252'(tt, V1, V2) -> U253'(isLNatKind(V2), V1, V2)
   U255'(tt, V2) -> ISLNAT(V2)
   U92'(tt, V1) -> ISLNAT(V1)
   ISLNAT(take(V1, V2)) -> U101'(isNaturalKind(V1), V1, V2)
   U101'(tt, V1, V2) -> U102'(isNaturalKind(V1), V1, V2)
   ISNATURAL(s(V1)) -> U191'(isNaturalKind(V1), V1)
   U201'(tt, V1, V2) -> U202'(isNaturalKind(V1), V1, V2)
   U202'(tt, V1, V2) -> U203'(isLNatKind(V2), V1, V2)
   U203'(tt, V1, V2) -> U204'(isLNatKind(V2), V1, V2)
   U204'(tt, V1, V2) -> U205'(isNatural(V1), V2)
   U205'(tt, V2) -> ISLNAT(V2)
   U204'(tt, V1, V2) -> ISNATURAL(V1)
   U244'(tt, V1, V2) -> ISLNAT(V1)
   U54'(tt, V1, V2) -> ISNATURAL(V1)

The TRS R consists of the following rules:

   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isNaturalKind(0) -> tt
   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   U231(tt, V2) -> U232(isLNatKind(V2))
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   U141(tt) -> tt
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   U271(tt, V2) -> U272(isLNatKind(V2))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U161(tt) -> tt
   U272(tt) -> tt
   U151(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U131(tt) -> tt
   U232(tt) -> tt
   U221(tt) -> tt
   U121(tt, V2) -> U122(isLNatKind(V2))
   U122(tt) -> tt
   U211(tt) -> tt
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt
   U181(tt, V1) -> U182(isLNatKind(V1), V1)
   isLNat(afterNth(V1, V2)) -> U41(isNaturalKind(V1), V1, V2)
   U41(tt, V1, V2) -> U42(isNaturalKind(V1), V1, V2)
   U42(tt, V1, V2) -> U43(isLNatKind(V2), V1, V2)
   U201(tt, V1, V2) -> U202(isNaturalKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isLNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isLNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNatural(V1), V2)
   U205(tt, V2) -> U206(isLNat(V2))
   isLNat(cons(V1, V2)) -> U51(isNaturalKind(V1), V1, V2)
   U52(tt, V1, V2) -> U53(isLNatKind(V2), V1, V2)
   U54(tt, V1, V2) -> U55(isNatural(V1), V2)
   U55(tt, V2) -> U56(isLNat(V2))
   U61(tt, V1) -> U62(isPLNatKind(V1), V1)
   U62(tt, V1) -> U63(isPLNat(V1))
   isPLNat(pair(V1, V2)) -> U241(isLNatKind(V1), V1, V2)
   U241(tt, V1, V2) -> U242(isLNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isLNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isLNatKind(V2), V1, V2)
   isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1), V1)
   U72(tt, V1) -> U73(isNatural(V1))
   isLNat(snd(V1)) -> U81(isPLNatKind(V1), V1)
   U81(tt, V1) -> U82(isPLNatKind(V1), V1)
   isPLNat(splitAt(V1, V2)) -> U251(isNaturalKind(V1), V1, V2)
   U251(tt, V1, V2) -> U252(isNaturalKind(V1), V1, V2)
   U252(tt, V1, V2) -> U253(isLNatKind(V2), V1, V2)
   U253(tt, V1, V2) -> U254(isLNatKind(V2), V1, V2)
   U255(tt, V2) -> U256(isLNat(V2))
   U91(tt, V1) -> U92(isLNatKind(V1), V1)
   U92(tt, V1) -> U93(isLNat(V1))
   isLNat(take(V1, V2)) -> U101(isNaturalKind(V1), V1, V2)
   U102(tt, V1, V2) -> U103(isLNatKind(V2), V1, V2)
   U103(tt, V1, V2) -> U104(isLNatKind(V2), V1, V2)
   U105(tt, V2) -> U106(isLNat(V2))
   U106(tt) -> tt
   U256(tt) -> tt
   U246(tt) -> tt
   U56(tt) -> tt
   U206(tt) -> tt
   U193(tt) -> tt
   U45(tt, V2) -> U46(isLNat(V2))
   U46(tt) -> tt

Q is empty.

----------------------------------------

(19) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 32 less nodes.

----------------------------------------

(20)
TRUE

----------------------------------------

(21)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U106_1, U112_1, U122_1, U131_1, snd_1, splitAt_2, U141_1, U151_1, U161_1, U172_1, U183_1, U193_1, U206_1, U211_1, U221_1, U232_1, U246_1, U256_1, U262_1, U272_1, natsFrom_1, s_1, head_1, afterNth_2, pair_2, fst_1, U46_1, U56_1, U63_1, U73_1, U83_1, U93_1, tail_1, take_2, sel_2, NATSFROM_1} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U105_2, U11_3, U12_3, U111_2, U13_3, U121_2, U14_3, U171_2, U181_2, U182_2, U191_2, U192_2, U201_3, U202_3, U203_3, U204_3, U205_2, U21_3, U22_3, U23_3, U24_2, U231_2, U241_3, U242_3, U243_3, U244_3, U245_2, U251_3, U252_3, U253_3, U254_3, U255_2, U261_2, U271_2, U281_2, U282_2, cons_2, U291_3, U292_3, U293_3, U294_3, U301_3, U302_2, U303_2, U304_2, U31_3, U32_3, U311_2, U312_2, U33_3, U321_4, U322_4, U323_4, U324_4, U325_4, U326_4, U327_2, U34_2, U331_3, U332_2, U333_2, U334_2, U341_3, U342_3, U343_3, U344_3, U41_3, U42_3, U43_3, U44_3, U45_2, U51_3, U52_3, U53_3, U54_3, U55_2, U61_2, U62_2, U71_2, U72_2, U81_2, U82_2, U91_2, U92_2, U281'_2, U282'_2} we have mu(f) = {1}.
The symbols in {isNaturalKind_1, isLNatKind_1, isNatural_1, isLNat_1, isPLNatKind_1, isPLNat_1, U_1} are not replacing on any position.

The TRS P consists of the following rules:

   NATSFROM(N) -> U281'(isNatural(N), N)
   U281'(tt, N) -> U282'(isNaturalKind(N), N)
   U282'(tt, N) -> U(N)
   U(s(x_0)) -> U(x_0)
   U(natsFrom(x_0)) -> U(x_0)
   U(natsFrom(s(x0))) -> NATSFROM(s(x0))

The TRS R consists of the following rules:

   U101(tt, V1, V2) -> U102(isNaturalKind(V1), V1, V2)
   U102(tt, V1, V2) -> U103(isLNatKind(V2), V1, V2)
   U103(tt, V1, V2) -> U104(isLNatKind(V2), V1, V2)
   U104(tt, V1, V2) -> U105(isNatural(V1), V2)
   U105(tt, V2) -> U106(isLNat(V2))
   U106(tt) -> tt
   U11(tt, N, XS) -> U12(isNaturalKind(N), N, XS)
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt
   U12(tt, N, XS) -> U13(isLNat(XS), N, XS)
   U121(tt, V2) -> U122(isLNatKind(V2))
   U122(tt) -> tt
   U13(tt, N, XS) -> U14(isLNatKind(XS), N, XS)
   U131(tt) -> tt
   U14(tt, N, XS) -> snd(splitAt(N, XS))
   U141(tt) -> tt
   U151(tt) -> tt
   U161(tt) -> tt
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U181(tt, V1) -> U182(isLNatKind(V1), V1)
   U182(tt, V1) -> U183(isLNat(V1))
   U183(tt) -> tt
   U191(tt, V1) -> U192(isNaturalKind(V1), V1)
   U192(tt, V1) -> U193(isNatural(V1))
   U193(tt) -> tt
   U201(tt, V1, V2) -> U202(isNaturalKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isLNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isLNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNatural(V1), V2)
   U205(tt, V2) -> U206(isLNat(V2))
   U206(tt) -> tt
   U21(tt, X, Y) -> U22(isLNatKind(X), X, Y)
   U211(tt) -> tt
   U22(tt, X, Y) -> U23(isLNat(Y), X, Y)
   U221(tt) -> tt
   U23(tt, X, Y) -> U24(isLNatKind(Y), X)
   U231(tt, V2) -> U232(isLNatKind(V2))
   U232(tt) -> tt
   U24(tt, X) -> X
   U241(tt, V1, V2) -> U242(isLNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isLNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isLNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isLNat(V1), V2)
   U245(tt, V2) -> U246(isLNat(V2))
   U246(tt) -> tt
   U251(tt, V1, V2) -> U252(isNaturalKind(V1), V1, V2)
   U252(tt, V1, V2) -> U253(isLNatKind(V2), V1, V2)
   U253(tt, V1, V2) -> U254(isLNatKind(V2), V1, V2)
   U254(tt, V1, V2) -> U255(isNatural(V1), V2)
   U255(tt, V2) -> U256(isLNat(V2))
   U256(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isLNatKind(V2))
   U272(tt) -> tt
   U281(tt, N) -> U282(isNaturalKind(N), N)
   U282(tt, N) -> cons(N, natsFrom(s(N)))
   U291(tt, N, XS) -> U292(isNaturalKind(N), N, XS)
   U292(tt, N, XS) -> U293(isLNat(XS), N, XS)
   U293(tt, N, XS) -> U294(isLNatKind(XS), N, XS)
   U294(tt, N, XS) -> head(afterNth(N, XS))
   U301(tt, X, Y) -> U302(isLNatKind(X), Y)
   U302(tt, Y) -> U303(isLNat(Y), Y)
   U303(tt, Y) -> U304(isLNatKind(Y), Y)
   U304(tt, Y) -> Y
   U31(tt, N, XS) -> U32(isNaturalKind(N), N, XS)
   U311(tt, XS) -> U312(isLNatKind(XS), XS)
   U312(tt, XS) -> pair(nil, XS)
   U32(tt, N, XS) -> U33(isLNat(XS), N, XS)
   U321(tt, N, X, XS) -> U322(isNaturalKind(N), N, X, XS)
   U322(tt, N, X, XS) -> U323(isNatural(X), N, X, XS)
   U323(tt, N, X, XS) -> U324(isNaturalKind(X), N, X, XS)
   U324(tt, N, X, XS) -> U325(isLNat(XS), N, X, XS)
   U325(tt, N, X, XS) -> U326(isLNatKind(XS), N, X, XS)
   U326(tt, N, X, XS) -> U327(splitAt(N, XS), X)
   U327(pair(YS, ZS), X) -> pair(cons(X, YS), ZS)
   U33(tt, N, XS) -> U34(isLNatKind(XS), N)
   U331(tt, N, XS) -> U332(isNaturalKind(N), XS)
   U332(tt, XS) -> U333(isLNat(XS), XS)
   U333(tt, XS) -> U334(isLNatKind(XS), XS)
   U334(tt, XS) -> XS
   U34(tt, N) -> N
   U341(tt, N, XS) -> U342(isNaturalKind(N), N, XS)
   U342(tt, N, XS) -> U343(isLNat(XS), N, XS)
   U343(tt, N, XS) -> U344(isLNatKind(XS), N, XS)
   U344(tt, N, XS) -> fst(splitAt(N, XS))
   U41(tt, V1, V2) -> U42(isNaturalKind(V1), V1, V2)
   U42(tt, V1, V2) -> U43(isLNatKind(V2), V1, V2)
   U43(tt, V1, V2) -> U44(isLNatKind(V2), V1, V2)
   U44(tt, V1, V2) -> U45(isNatural(V1), V2)
   U45(tt, V2) -> U46(isLNat(V2))
   U46(tt) -> tt
   U51(tt, V1, V2) -> U52(isNaturalKind(V1), V1, V2)
   U52(tt, V1, V2) -> U53(isLNatKind(V2), V1, V2)
   U53(tt, V1, V2) -> U54(isLNatKind(V2), V1, V2)
   U54(tt, V1, V2) -> U55(isNatural(V1), V2)
   U55(tt, V2) -> U56(isLNat(V2))
   U56(tt) -> tt
   U61(tt, V1) -> U62(isPLNatKind(V1), V1)
   U62(tt, V1) -> U63(isPLNat(V1))
   U63(tt) -> tt
   U71(tt, V1) -> U72(isNaturalKind(V1), V1)
   U72(tt, V1) -> U73(isNatural(V1))
   U73(tt) -> tt
   U81(tt, V1) -> U82(isPLNatKind(V1), V1)
   U82(tt, V1) -> U83(isPLNat(V1))
   U83(tt) -> tt
   U91(tt, V1) -> U92(isLNatKind(V1), V1)
   U92(tt, V1) -> U93(isLNat(V1))
   U93(tt) -> tt
   afterNth(N, XS) -> U11(isNatural(N), N, XS)
   fst(pair(X, Y)) -> U21(isLNat(X), X, Y)
   head(cons(N, XS)) -> U31(isNatural(N), N, XS)
   isLNat(nil) -> tt
   isLNat(afterNth(V1, V2)) -> U41(isNaturalKind(V1), V1, V2)
   isLNat(cons(V1, V2)) -> U51(isNaturalKind(V1), V1, V2)
   isLNat(fst(V1)) -> U61(isPLNatKind(V1), V1)
   isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1), V1)
   isLNat(snd(V1)) -> U81(isPLNatKind(V1), V1)
   isLNat(tail(V1)) -> U91(isLNatKind(V1), V1)
   isLNat(take(V1, V2)) -> U101(isNaturalKind(V1), V1, V2)
   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   isNatural(0) -> tt
   isNatural(head(V1)) -> U181(isLNatKind(V1), V1)
   isNatural(s(V1)) -> U191(isNaturalKind(V1), V1)
   isNatural(sel(V1, V2)) -> U201(isNaturalKind(V1), V1, V2)
   isNaturalKind(0) -> tt
   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   isPLNat(pair(V1, V2)) -> U241(isLNatKind(V1), V1, V2)
   isPLNat(splitAt(V1, V2)) -> U251(isNaturalKind(V1), V1, V2)
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   natsFrom(N) -> U281(isNatural(N), N)
   sel(N, XS) -> U291(isNatural(N), N, XS)
   snd(pair(X, Y)) -> U301(isLNat(X), X, Y)
   splitAt(0, XS) -> U311(isLNat(XS), XS)
   splitAt(s(N), cons(X, XS)) -> U321(isNatural(N), N, X, XS)
   tail(cons(N, XS)) -> U331(isNatural(N), N, XS)
   take(N, XS) -> U341(isNatural(N), N, XS)

Q is empty.

----------------------------------------

(22) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   U(s(x_0)) -> U(x_0)
   U(natsFrom(x_0)) -> U(x_0)
   U(natsFrom(s(x0))) -> NATSFROM(s(x0))
The remaining pairs can at least be oriented weakly.

   NATSFROM(N) -> U281'(isNatural(N), N)
   U281'(tt, N) -> U282'(isNaturalKind(N), N)
   U282'(tt, N) -> U(N)
Used ordering:  Combined order from the following AFS and order.
U281'(x1, x2)  =  x2

NATSFROM(x1)  =  x1

U282'(x1, x2)  =  x2

U(x1)  =  x1


Subterm Order

----------------------------------------

(23)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U106_1, U112_1, U122_1, U131_1, snd_1, splitAt_2, U141_1, U151_1, U161_1, U172_1, U183_1, U193_1, U206_1, U211_1, U221_1, U232_1, U246_1, U256_1, U262_1, U272_1, natsFrom_1, s_1, head_1, afterNth_2, pair_2, fst_1, U46_1, U56_1, U63_1, U73_1, U83_1, U93_1, tail_1, take_2, sel_2, NATSFROM_1} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U105_2, U11_3, U12_3, U111_2, U13_3, U121_2, U14_3, U171_2, U181_2, U182_2, U191_2, U192_2, U201_3, U202_3, U203_3, U204_3, U205_2, U21_3, U22_3, U23_3, U24_2, U231_2, U241_3, U242_3, U243_3, U244_3, U245_2, U251_3, U252_3, U253_3, U254_3, U255_2, U261_2, U271_2, U281_2, U282_2, cons_2, U291_3, U292_3, U293_3, U294_3, U301_3, U302_2, U303_2, U304_2, U31_3, U32_3, U311_2, U312_2, U33_3, U321_4, U322_4, U323_4, U324_4, U325_4, U326_4, U327_2, U34_2, U331_3, U332_2, U333_2, U334_2, U341_3, U342_3, U343_3, U344_3, U41_3, U42_3, U43_3, U44_3, U45_2, U51_3, U52_3, U53_3, U54_3, U55_2, U61_2, U62_2, U71_2, U72_2, U81_2, U82_2, U91_2, U92_2, U281'_2, U282'_2} we have mu(f) = {1}.
The symbols in {isNaturalKind_1, isLNatKind_1, isNatural_1, isLNat_1, isPLNatKind_1, isPLNat_1, U_1} are not replacing on any position.

The TRS P consists of the following rules:

   NATSFROM(N) -> U281'(isNatural(N), N)
   U281'(tt, N) -> U282'(isNaturalKind(N), N)
   U282'(tt, N) -> U(N)

The TRS R consists of the following rules:

   U101(tt, V1, V2) -> U102(isNaturalKind(V1), V1, V2)
   U102(tt, V1, V2) -> U103(isLNatKind(V2), V1, V2)
   U103(tt, V1, V2) -> U104(isLNatKind(V2), V1, V2)
   U104(tt, V1, V2) -> U105(isNatural(V1), V2)
   U105(tt, V2) -> U106(isLNat(V2))
   U106(tt) -> tt
   U11(tt, N, XS) -> U12(isNaturalKind(N), N, XS)
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt
   U12(tt, N, XS) -> U13(isLNat(XS), N, XS)
   U121(tt, V2) -> U122(isLNatKind(V2))
   U122(tt) -> tt
   U13(tt, N, XS) -> U14(isLNatKind(XS), N, XS)
   U131(tt) -> tt
   U14(tt, N, XS) -> snd(splitAt(N, XS))
   U141(tt) -> tt
   U151(tt) -> tt
   U161(tt) -> tt
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U181(tt, V1) -> U182(isLNatKind(V1), V1)
   U182(tt, V1) -> U183(isLNat(V1))
   U183(tt) -> tt
   U191(tt, V1) -> U192(isNaturalKind(V1), V1)
   U192(tt, V1) -> U193(isNatural(V1))
   U193(tt) -> tt
   U201(tt, V1, V2) -> U202(isNaturalKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isLNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isLNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNatural(V1), V2)
   U205(tt, V2) -> U206(isLNat(V2))
   U206(tt) -> tt
   U21(tt, X, Y) -> U22(isLNatKind(X), X, Y)
   U211(tt) -> tt
   U22(tt, X, Y) -> U23(isLNat(Y), X, Y)
   U221(tt) -> tt
   U23(tt, X, Y) -> U24(isLNatKind(Y), X)
   U231(tt, V2) -> U232(isLNatKind(V2))
   U232(tt) -> tt
   U24(tt, X) -> X
   U241(tt, V1, V2) -> U242(isLNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isLNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isLNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isLNat(V1), V2)
   U245(tt, V2) -> U246(isLNat(V2))
   U246(tt) -> tt
   U251(tt, V1, V2) -> U252(isNaturalKind(V1), V1, V2)
   U252(tt, V1, V2) -> U253(isLNatKind(V2), V1, V2)
   U253(tt, V1, V2) -> U254(isLNatKind(V2), V1, V2)
   U254(tt, V1, V2) -> U255(isNatural(V1), V2)
   U255(tt, V2) -> U256(isLNat(V2))
   U256(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isLNatKind(V2))
   U272(tt) -> tt
   U281(tt, N) -> U282(isNaturalKind(N), N)
   U282(tt, N) -> cons(N, natsFrom(s(N)))
   U291(tt, N, XS) -> U292(isNaturalKind(N), N, XS)
   U292(tt, N, XS) -> U293(isLNat(XS), N, XS)
   U293(tt, N, XS) -> U294(isLNatKind(XS), N, XS)
   U294(tt, N, XS) -> head(afterNth(N, XS))
   U301(tt, X, Y) -> U302(isLNatKind(X), Y)
   U302(tt, Y) -> U303(isLNat(Y), Y)
   U303(tt, Y) -> U304(isLNatKind(Y), Y)
   U304(tt, Y) -> Y
   U31(tt, N, XS) -> U32(isNaturalKind(N), N, XS)
   U311(tt, XS) -> U312(isLNatKind(XS), XS)
   U312(tt, XS) -> pair(nil, XS)
   U32(tt, N, XS) -> U33(isLNat(XS), N, XS)
   U321(tt, N, X, XS) -> U322(isNaturalKind(N), N, X, XS)
   U322(tt, N, X, XS) -> U323(isNatural(X), N, X, XS)
   U323(tt, N, X, XS) -> U324(isNaturalKind(X), N, X, XS)
   U324(tt, N, X, XS) -> U325(isLNat(XS), N, X, XS)
   U325(tt, N, X, XS) -> U326(isLNatKind(XS), N, X, XS)
   U326(tt, N, X, XS) -> U327(splitAt(N, XS), X)
   U327(pair(YS, ZS), X) -> pair(cons(X, YS), ZS)
   U33(tt, N, XS) -> U34(isLNatKind(XS), N)
   U331(tt, N, XS) -> U332(isNaturalKind(N), XS)
   U332(tt, XS) -> U333(isLNat(XS), XS)
   U333(tt, XS) -> U334(isLNatKind(XS), XS)
   U334(tt, XS) -> XS
   U34(tt, N) -> N
   U341(tt, N, XS) -> U342(isNaturalKind(N), N, XS)
   U342(tt, N, XS) -> U343(isLNat(XS), N, XS)
   U343(tt, N, XS) -> U344(isLNatKind(XS), N, XS)
   U344(tt, N, XS) -> fst(splitAt(N, XS))
   U41(tt, V1, V2) -> U42(isNaturalKind(V1), V1, V2)
   U42(tt, V1, V2) -> U43(isLNatKind(V2), V1, V2)
   U43(tt, V1, V2) -> U44(isLNatKind(V2), V1, V2)
   U44(tt, V1, V2) -> U45(isNatural(V1), V2)
   U45(tt, V2) -> U46(isLNat(V2))
   U46(tt) -> tt
   U51(tt, V1, V2) -> U52(isNaturalKind(V1), V1, V2)
   U52(tt, V1, V2) -> U53(isLNatKind(V2), V1, V2)
   U53(tt, V1, V2) -> U54(isLNatKind(V2), V1, V2)
   U54(tt, V1, V2) -> U55(isNatural(V1), V2)
   U55(tt, V2) -> U56(isLNat(V2))
   U56(tt) -> tt
   U61(tt, V1) -> U62(isPLNatKind(V1), V1)
   U62(tt, V1) -> U63(isPLNat(V1))
   U63(tt) -> tt
   U71(tt, V1) -> U72(isNaturalKind(V1), V1)
   U72(tt, V1) -> U73(isNatural(V1))
   U73(tt) -> tt
   U81(tt, V1) -> U82(isPLNatKind(V1), V1)
   U82(tt, V1) -> U83(isPLNat(V1))
   U83(tt) -> tt
   U91(tt, V1) -> U92(isLNatKind(V1), V1)
   U92(tt, V1) -> U93(isLNat(V1))
   U93(tt) -> tt
   afterNth(N, XS) -> U11(isNatural(N), N, XS)
   fst(pair(X, Y)) -> U21(isLNat(X), X, Y)
   head(cons(N, XS)) -> U31(isNatural(N), N, XS)
   isLNat(nil) -> tt
   isLNat(afterNth(V1, V2)) -> U41(isNaturalKind(V1), V1, V2)
   isLNat(cons(V1, V2)) -> U51(isNaturalKind(V1), V1, V2)
   isLNat(fst(V1)) -> U61(isPLNatKind(V1), V1)
   isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1), V1)
   isLNat(snd(V1)) -> U81(isPLNatKind(V1), V1)
   isLNat(tail(V1)) -> U91(isLNatKind(V1), V1)
   isLNat(take(V1, V2)) -> U101(isNaturalKind(V1), V1, V2)
   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   isNatural(0) -> tt
   isNatural(head(V1)) -> U181(isLNatKind(V1), V1)
   isNatural(s(V1)) -> U191(isNaturalKind(V1), V1)
   isNatural(sel(V1, V2)) -> U201(isNaturalKind(V1), V1, V2)
   isNaturalKind(0) -> tt
   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   isPLNat(pair(V1, V2)) -> U241(isLNatKind(V1), V1, V2)
   isPLNat(splitAt(V1, V2)) -> U251(isNaturalKind(V1), V1, V2)
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   natsFrom(N) -> U281(isNatural(N), N)
   sel(N, XS) -> U291(isNatural(N), N, XS)
   snd(pair(X, Y)) -> U301(isLNat(X), X, Y)
   splitAt(0, XS) -> U311(isLNat(XS), XS)
   splitAt(s(N), cons(X, XS)) -> U321(isNatural(N), N, X, XS)
   tail(cons(N, XS)) -> U331(isNatural(N), N, XS)
   take(N, XS) -> U341(isNatural(N), N, XS)

Q is empty.

----------------------------------------

(24) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 3 less nodes.

----------------------------------------

(25)
TRUE

----------------------------------------

(26)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U106_1, U112_1, U122_1, U131_1, snd_1, splitAt_2, U141_1, U151_1, U161_1, U172_1, U183_1, U193_1, U206_1, U211_1, U221_1, U232_1, U246_1, U256_1, U262_1, U272_1, natsFrom_1, s_1, head_1, afterNth_2, pair_2, fst_1, U46_1, U56_1, U63_1, U73_1, U83_1, U93_1, tail_1, take_2, sel_2, SPLITAT_2} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U105_2, U11_3, U12_3, U111_2, U13_3, U121_2, U14_3, U171_2, U181_2, U182_2, U191_2, U192_2, U201_3, U202_3, U203_3, U204_3, U205_2, U21_3, U22_3, U23_3, U24_2, U231_2, U241_3, U242_3, U243_3, U244_3, U245_2, U251_3, U252_3, U253_3, U254_3, U255_2, U261_2, U271_2, U281_2, U282_2, cons_2, U291_3, U292_3, U293_3, U294_3, U301_3, U302_2, U303_2, U304_2, U31_3, U32_3, U311_2, U312_2, U33_3, U321_4, U322_4, U323_4, U324_4, U325_4, U326_4, U327_2, U34_2, U331_3, U332_2, U333_2, U334_2, U341_3, U342_3, U343_3, U344_3, U41_3, U42_3, U43_3, U44_3, U45_2, U51_3, U52_3, U53_3, U54_3, U55_2, U61_2, U62_2, U71_2, U72_2, U81_2, U82_2, U91_2, U92_2, U325'_4, U324'_4, U326'_4, U321'_4, U322'_4, U323'_4} we have mu(f) = {1}.
The symbols in {isNaturalKind_1, isLNatKind_1, isNatural_1, isLNat_1, isPLNatKind_1, isPLNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U324'(tt, N, X, XS) -> U325'(isLNat(XS), N, X, XS)
   U325'(tt, N, X, XS) -> U326'(isLNatKind(XS), N, X, XS)
   U326'(tt, N, X, XS) -> SPLITAT(N, XS)
   SPLITAT(s(N), cons(X, XS)) -> U321'(isNatural(N), N, X, XS)
   U321'(tt, N, X, XS) -> U322'(isNaturalKind(N), N, X, XS)
   U322'(tt, N, X, XS) -> U323'(isNatural(X), N, X, XS)
   U323'(tt, N, X, XS) -> U324'(isNaturalKind(X), N, X, XS)

The TRS R consists of the following rules:

   U101(tt, V1, V2) -> U102(isNaturalKind(V1), V1, V2)
   U102(tt, V1, V2) -> U103(isLNatKind(V2), V1, V2)
   U103(tt, V1, V2) -> U104(isLNatKind(V2), V1, V2)
   U104(tt, V1, V2) -> U105(isNatural(V1), V2)
   U105(tt, V2) -> U106(isLNat(V2))
   U106(tt) -> tt
   U11(tt, N, XS) -> U12(isNaturalKind(N), N, XS)
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt
   U12(tt, N, XS) -> U13(isLNat(XS), N, XS)
   U121(tt, V2) -> U122(isLNatKind(V2))
   U122(tt) -> tt
   U13(tt, N, XS) -> U14(isLNatKind(XS), N, XS)
   U131(tt) -> tt
   U14(tt, N, XS) -> snd(splitAt(N, XS))
   U141(tt) -> tt
   U151(tt) -> tt
   U161(tt) -> tt
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U181(tt, V1) -> U182(isLNatKind(V1), V1)
   U182(tt, V1) -> U183(isLNat(V1))
   U183(tt) -> tt
   U191(tt, V1) -> U192(isNaturalKind(V1), V1)
   U192(tt, V1) -> U193(isNatural(V1))
   U193(tt) -> tt
   U201(tt, V1, V2) -> U202(isNaturalKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isLNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isLNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNatural(V1), V2)
   U205(tt, V2) -> U206(isLNat(V2))
   U206(tt) -> tt
   U21(tt, X, Y) -> U22(isLNatKind(X), X, Y)
   U211(tt) -> tt
   U22(tt, X, Y) -> U23(isLNat(Y), X, Y)
   U221(tt) -> tt
   U23(tt, X, Y) -> U24(isLNatKind(Y), X)
   U231(tt, V2) -> U232(isLNatKind(V2))
   U232(tt) -> tt
   U24(tt, X) -> X
   U241(tt, V1, V2) -> U242(isLNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isLNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isLNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isLNat(V1), V2)
   U245(tt, V2) -> U246(isLNat(V2))
   U246(tt) -> tt
   U251(tt, V1, V2) -> U252(isNaturalKind(V1), V1, V2)
   U252(tt, V1, V2) -> U253(isLNatKind(V2), V1, V2)
   U253(tt, V1, V2) -> U254(isLNatKind(V2), V1, V2)
   U254(tt, V1, V2) -> U255(isNatural(V1), V2)
   U255(tt, V2) -> U256(isLNat(V2))
   U256(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isLNatKind(V2))
   U272(tt) -> tt
   U281(tt, N) -> U282(isNaturalKind(N), N)
   U282(tt, N) -> cons(N, natsFrom(s(N)))
   U291(tt, N, XS) -> U292(isNaturalKind(N), N, XS)
   U292(tt, N, XS) -> U293(isLNat(XS), N, XS)
   U293(tt, N, XS) -> U294(isLNatKind(XS), N, XS)
   U294(tt, N, XS) -> head(afterNth(N, XS))
   U301(tt, X, Y) -> U302(isLNatKind(X), Y)
   U302(tt, Y) -> U303(isLNat(Y), Y)
   U303(tt, Y) -> U304(isLNatKind(Y), Y)
   U304(tt, Y) -> Y
   U31(tt, N, XS) -> U32(isNaturalKind(N), N, XS)
   U311(tt, XS) -> U312(isLNatKind(XS), XS)
   U312(tt, XS) -> pair(nil, XS)
   U32(tt, N, XS) -> U33(isLNat(XS), N, XS)
   U321(tt, N, X, XS) -> U322(isNaturalKind(N), N, X, XS)
   U322(tt, N, X, XS) -> U323(isNatural(X), N, X, XS)
   U323(tt, N, X, XS) -> U324(isNaturalKind(X), N, X, XS)
   U324(tt, N, X, XS) -> U325(isLNat(XS), N, X, XS)
   U325(tt, N, X, XS) -> U326(isLNatKind(XS), N, X, XS)
   U326(tt, N, X, XS) -> U327(splitAt(N, XS), X)
   U327(pair(YS, ZS), X) -> pair(cons(X, YS), ZS)
   U33(tt, N, XS) -> U34(isLNatKind(XS), N)
   U331(tt, N, XS) -> U332(isNaturalKind(N), XS)
   U332(tt, XS) -> U333(isLNat(XS), XS)
   U333(tt, XS) -> U334(isLNatKind(XS), XS)
   U334(tt, XS) -> XS
   U34(tt, N) -> N
   U341(tt, N, XS) -> U342(isNaturalKind(N), N, XS)
   U342(tt, N, XS) -> U343(isLNat(XS), N, XS)
   U343(tt, N, XS) -> U344(isLNatKind(XS), N, XS)
   U344(tt, N, XS) -> fst(splitAt(N, XS))
   U41(tt, V1, V2) -> U42(isNaturalKind(V1), V1, V2)
   U42(tt, V1, V2) -> U43(isLNatKind(V2), V1, V2)
   U43(tt, V1, V2) -> U44(isLNatKind(V2), V1, V2)
   U44(tt, V1, V2) -> U45(isNatural(V1), V2)
   U45(tt, V2) -> U46(isLNat(V2))
   U46(tt) -> tt
   U51(tt, V1, V2) -> U52(isNaturalKind(V1), V1, V2)
   U52(tt, V1, V2) -> U53(isLNatKind(V2), V1, V2)
   U53(tt, V1, V2) -> U54(isLNatKind(V2), V1, V2)
   U54(tt, V1, V2) -> U55(isNatural(V1), V2)
   U55(tt, V2) -> U56(isLNat(V2))
   U56(tt) -> tt
   U61(tt, V1) -> U62(isPLNatKind(V1), V1)
   U62(tt, V1) -> U63(isPLNat(V1))
   U63(tt) -> tt
   U71(tt, V1) -> U72(isNaturalKind(V1), V1)
   U72(tt, V1) -> U73(isNatural(V1))
   U73(tt) -> tt
   U81(tt, V1) -> U82(isPLNatKind(V1), V1)
   U82(tt, V1) -> U83(isPLNat(V1))
   U83(tt) -> tt
   U91(tt, V1) -> U92(isLNatKind(V1), V1)
   U92(tt, V1) -> U93(isLNat(V1))
   U93(tt) -> tt
   afterNth(N, XS) -> U11(isNatural(N), N, XS)
   fst(pair(X, Y)) -> U21(isLNat(X), X, Y)
   head(cons(N, XS)) -> U31(isNatural(N), N, XS)
   isLNat(nil) -> tt
   isLNat(afterNth(V1, V2)) -> U41(isNaturalKind(V1), V1, V2)
   isLNat(cons(V1, V2)) -> U51(isNaturalKind(V1), V1, V2)
   isLNat(fst(V1)) -> U61(isPLNatKind(V1), V1)
   isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1), V1)
   isLNat(snd(V1)) -> U81(isPLNatKind(V1), V1)
   isLNat(tail(V1)) -> U91(isLNatKind(V1), V1)
   isLNat(take(V1, V2)) -> U101(isNaturalKind(V1), V1, V2)
   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   isNatural(0) -> tt
   isNatural(head(V1)) -> U181(isLNatKind(V1), V1)
   isNatural(s(V1)) -> U191(isNaturalKind(V1), V1)
   isNatural(sel(V1, V2)) -> U201(isNaturalKind(V1), V1, V2)
   isNaturalKind(0) -> tt
   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   isPLNat(pair(V1, V2)) -> U241(isLNatKind(V1), V1, V2)
   isPLNat(splitAt(V1, V2)) -> U251(isNaturalKind(V1), V1, V2)
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   natsFrom(N) -> U281(isNatural(N), N)
   sel(N, XS) -> U291(isNatural(N), N, XS)
   snd(pair(X, Y)) -> U301(isLNat(X), X, Y)
   splitAt(0, XS) -> U311(isLNat(XS), XS)
   splitAt(s(N), cons(X, XS)) -> U321(isNatural(N), N, X, XS)
   tail(cons(N, XS)) -> U331(isNatural(N), N, XS)
   take(N, XS) -> U341(isNatural(N), N, XS)

Q is empty.

----------------------------------------

(27) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   SPLITAT(s(N), cons(X, XS)) -> U321'(isNatural(N), N, X, XS)
The remaining pairs can at least be oriented weakly.

   U324'(tt, N, X, XS) -> U325'(isLNat(XS), N, X, XS)
   U325'(tt, N, X, XS) -> U326'(isLNatKind(XS), N, X, XS)
   U326'(tt, N, X, XS) -> SPLITAT(N, XS)
   U321'(tt, N, X, XS) -> U322'(isNaturalKind(N), N, X, XS)
   U322'(tt, N, X, XS) -> U323'(isNatural(X), N, X, XS)
   U323'(tt, N, X, XS) -> U324'(isNaturalKind(X), N, X, XS)
Used ordering:  Combined order from the following AFS and order.
U325'(x1, x2, x3, x4)  =  x2

U324'(x1, x2, x3, x4)  =  x2

U326'(x1, x2, x3, x4)  =  x2

SPLITAT(x1, x2)  =  x1

U321'(x1, x2, x3, x4)  =  x2

U322'(x1, x2, x3, x4)  =  x2

U323'(x1, x2, x3, x4)  =  x2


Subterm Order

----------------------------------------

(28)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U106_1, U112_1, U122_1, U131_1, snd_1, splitAt_2, U141_1, U151_1, U161_1, U172_1, U183_1, U193_1, U206_1, U211_1, U221_1, U232_1, U246_1, U256_1, U262_1, U272_1, natsFrom_1, s_1, head_1, afterNth_2, pair_2, fst_1, U46_1, U56_1, U63_1, U73_1, U83_1, U93_1, tail_1, take_2, sel_2, SPLITAT_2} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U105_2, U11_3, U12_3, U111_2, U13_3, U121_2, U14_3, U171_2, U181_2, U182_2, U191_2, U192_2, U201_3, U202_3, U203_3, U204_3, U205_2, U21_3, U22_3, U23_3, U24_2, U231_2, U241_3, U242_3, U243_3, U244_3, U245_2, U251_3, U252_3, U253_3, U254_3, U255_2, U261_2, U271_2, U281_2, U282_2, cons_2, U291_3, U292_3, U293_3, U294_3, U301_3, U302_2, U303_2, U304_2, U31_3, U32_3, U311_2, U312_2, U33_3, U321_4, U322_4, U323_4, U324_4, U325_4, U326_4, U327_2, U34_2, U331_3, U332_2, U333_2, U334_2, U341_3, U342_3, U343_3, U344_3, U41_3, U42_3, U43_3, U44_3, U45_2, U51_3, U52_3, U53_3, U54_3, U55_2, U61_2, U62_2, U71_2, U72_2, U81_2, U82_2, U91_2, U92_2, U325'_4, U324'_4, U326'_4, U322'_4, U321'_4, U323'_4} we have mu(f) = {1}.
The symbols in {isNaturalKind_1, isLNatKind_1, isNatural_1, isLNat_1, isPLNatKind_1, isPLNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U324'(tt, N, X, XS) -> U325'(isLNat(XS), N, X, XS)
   U325'(tt, N, X, XS) -> U326'(isLNatKind(XS), N, X, XS)
   U326'(tt, N, X, XS) -> SPLITAT(N, XS)
   U321'(tt, N, X, XS) -> U322'(isNaturalKind(N), N, X, XS)
   U322'(tt, N, X, XS) -> U323'(isNatural(X), N, X, XS)
   U323'(tt, N, X, XS) -> U324'(isNaturalKind(X), N, X, XS)

The TRS R consists of the following rules:

   U101(tt, V1, V2) -> U102(isNaturalKind(V1), V1, V2)
   U102(tt, V1, V2) -> U103(isLNatKind(V2), V1, V2)
   U103(tt, V1, V2) -> U104(isLNatKind(V2), V1, V2)
   U104(tt, V1, V2) -> U105(isNatural(V1), V2)
   U105(tt, V2) -> U106(isLNat(V2))
   U106(tt) -> tt
   U11(tt, N, XS) -> U12(isNaturalKind(N), N, XS)
   U111(tt, V2) -> U112(isLNatKind(V2))
   U112(tt) -> tt
   U12(tt, N, XS) -> U13(isLNat(XS), N, XS)
   U121(tt, V2) -> U122(isLNatKind(V2))
   U122(tt) -> tt
   U13(tt, N, XS) -> U14(isLNatKind(XS), N, XS)
   U131(tt) -> tt
   U14(tt, N, XS) -> snd(splitAt(N, XS))
   U141(tt) -> tt
   U151(tt) -> tt
   U161(tt) -> tt
   U171(tt, V2) -> U172(isLNatKind(V2))
   U172(tt) -> tt
   U181(tt, V1) -> U182(isLNatKind(V1), V1)
   U182(tt, V1) -> U183(isLNat(V1))
   U183(tt) -> tt
   U191(tt, V1) -> U192(isNaturalKind(V1), V1)
   U192(tt, V1) -> U193(isNatural(V1))
   U193(tt) -> tt
   U201(tt, V1, V2) -> U202(isNaturalKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isLNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isLNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNatural(V1), V2)
   U205(tt, V2) -> U206(isLNat(V2))
   U206(tt) -> tt
   U21(tt, X, Y) -> U22(isLNatKind(X), X, Y)
   U211(tt) -> tt
   U22(tt, X, Y) -> U23(isLNat(Y), X, Y)
   U221(tt) -> tt
   U23(tt, X, Y) -> U24(isLNatKind(Y), X)
   U231(tt, V2) -> U232(isLNatKind(V2))
   U232(tt) -> tt
   U24(tt, X) -> X
   U241(tt, V1, V2) -> U242(isLNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isLNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isLNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isLNat(V1), V2)
   U245(tt, V2) -> U246(isLNat(V2))
   U246(tt) -> tt
   U251(tt, V1, V2) -> U252(isNaturalKind(V1), V1, V2)
   U252(tt, V1, V2) -> U253(isLNatKind(V2), V1, V2)
   U253(tt, V1, V2) -> U254(isLNatKind(V2), V1, V2)
   U254(tt, V1, V2) -> U255(isNatural(V1), V2)
   U255(tt, V2) -> U256(isLNat(V2))
   U256(tt) -> tt
   U261(tt, V2) -> U262(isLNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isLNatKind(V2))
   U272(tt) -> tt
   U281(tt, N) -> U282(isNaturalKind(N), N)
   U282(tt, N) -> cons(N, natsFrom(s(N)))
   U291(tt, N, XS) -> U292(isNaturalKind(N), N, XS)
   U292(tt, N, XS) -> U293(isLNat(XS), N, XS)
   U293(tt, N, XS) -> U294(isLNatKind(XS), N, XS)
   U294(tt, N, XS) -> head(afterNth(N, XS))
   U301(tt, X, Y) -> U302(isLNatKind(X), Y)
   U302(tt, Y) -> U303(isLNat(Y), Y)
   U303(tt, Y) -> U304(isLNatKind(Y), Y)
   U304(tt, Y) -> Y
   U31(tt, N, XS) -> U32(isNaturalKind(N), N, XS)
   U311(tt, XS) -> U312(isLNatKind(XS), XS)
   U312(tt, XS) -> pair(nil, XS)
   U32(tt, N, XS) -> U33(isLNat(XS), N, XS)
   U321(tt, N, X, XS) -> U322(isNaturalKind(N), N, X, XS)
   U322(tt, N, X, XS) -> U323(isNatural(X), N, X, XS)
   U323(tt, N, X, XS) -> U324(isNaturalKind(X), N, X, XS)
   U324(tt, N, X, XS) -> U325(isLNat(XS), N, X, XS)
   U325(tt, N, X, XS) -> U326(isLNatKind(XS), N, X, XS)
   U326(tt, N, X, XS) -> U327(splitAt(N, XS), X)
   U327(pair(YS, ZS), X) -> pair(cons(X, YS), ZS)
   U33(tt, N, XS) -> U34(isLNatKind(XS), N)
   U331(tt, N, XS) -> U332(isNaturalKind(N), XS)
   U332(tt, XS) -> U333(isLNat(XS), XS)
   U333(tt, XS) -> U334(isLNatKind(XS), XS)
   U334(tt, XS) -> XS
   U34(tt, N) -> N
   U341(tt, N, XS) -> U342(isNaturalKind(N), N, XS)
   U342(tt, N, XS) -> U343(isLNat(XS), N, XS)
   U343(tt, N, XS) -> U344(isLNatKind(XS), N, XS)
   U344(tt, N, XS) -> fst(splitAt(N, XS))
   U41(tt, V1, V2) -> U42(isNaturalKind(V1), V1, V2)
   U42(tt, V1, V2) -> U43(isLNatKind(V2), V1, V2)
   U43(tt, V1, V2) -> U44(isLNatKind(V2), V1, V2)
   U44(tt, V1, V2) -> U45(isNatural(V1), V2)
   U45(tt, V2) -> U46(isLNat(V2))
   U46(tt) -> tt
   U51(tt, V1, V2) -> U52(isNaturalKind(V1), V1, V2)
   U52(tt, V1, V2) -> U53(isLNatKind(V2), V1, V2)
   U53(tt, V1, V2) -> U54(isLNatKind(V2), V1, V2)
   U54(tt, V1, V2) -> U55(isNatural(V1), V2)
   U55(tt, V2) -> U56(isLNat(V2))
   U56(tt) -> tt
   U61(tt, V1) -> U62(isPLNatKind(V1), V1)
   U62(tt, V1) -> U63(isPLNat(V1))
   U63(tt) -> tt
   U71(tt, V1) -> U72(isNaturalKind(V1), V1)
   U72(tt, V1) -> U73(isNatural(V1))
   U73(tt) -> tt
   U81(tt, V1) -> U82(isPLNatKind(V1), V1)
   U82(tt, V1) -> U83(isPLNat(V1))
   U83(tt) -> tt
   U91(tt, V1) -> U92(isLNatKind(V1), V1)
   U92(tt, V1) -> U93(isLNat(V1))
   U93(tt) -> tt
   afterNth(N, XS) -> U11(isNatural(N), N, XS)
   fst(pair(X, Y)) -> U21(isLNat(X), X, Y)
   head(cons(N, XS)) -> U31(isNatural(N), N, XS)
   isLNat(nil) -> tt
   isLNat(afterNth(V1, V2)) -> U41(isNaturalKind(V1), V1, V2)
   isLNat(cons(V1, V2)) -> U51(isNaturalKind(V1), V1, V2)
   isLNat(fst(V1)) -> U61(isPLNatKind(V1), V1)
   isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1), V1)
   isLNat(snd(V1)) -> U81(isPLNatKind(V1), V1)
   isLNat(tail(V1)) -> U91(isLNatKind(V1), V1)
   isLNat(take(V1, V2)) -> U101(isNaturalKind(V1), V1, V2)
   isLNatKind(nil) -> tt
   isLNatKind(afterNth(V1, V2)) -> U111(isNaturalKind(V1), V2)
   isLNatKind(cons(V1, V2)) -> U121(isNaturalKind(V1), V2)
   isLNatKind(fst(V1)) -> U131(isPLNatKind(V1))
   isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1))
   isLNatKind(snd(V1)) -> U151(isPLNatKind(V1))
   isLNatKind(tail(V1)) -> U161(isLNatKind(V1))
   isLNatKind(take(V1, V2)) -> U171(isNaturalKind(V1), V2)
   isNatural(0) -> tt
   isNatural(head(V1)) -> U181(isLNatKind(V1), V1)
   isNatural(s(V1)) -> U191(isNaturalKind(V1), V1)
   isNatural(sel(V1, V2)) -> U201(isNaturalKind(V1), V1, V2)
   isNaturalKind(0) -> tt
   isNaturalKind(head(V1)) -> U211(isLNatKind(V1))
   isNaturalKind(s(V1)) -> U221(isNaturalKind(V1))
   isNaturalKind(sel(V1, V2)) -> U231(isNaturalKind(V1), V2)
   isPLNat(pair(V1, V2)) -> U241(isLNatKind(V1), V1, V2)
   isPLNat(splitAt(V1, V2)) -> U251(isNaturalKind(V1), V1, V2)
   isPLNatKind(pair(V1, V2)) -> U261(isLNatKind(V1), V2)
   isPLNatKind(splitAt(V1, V2)) -> U271(isNaturalKind(V1), V2)
   natsFrom(N) -> U281(isNatural(N), N)
   sel(N, XS) -> U291(isNatural(N), N, XS)
   snd(pair(X, Y)) -> U301(isLNat(X), X, Y)
   splitAt(0, XS) -> U311(isLNat(XS), XS)
   splitAt(s(N), cons(X, XS)) -> U321(isNatural(N), N, X, XS)
   tail(cons(N, XS)) -> U331(isNatural(N), N, XS)
   take(N, XS) -> U341(isNatural(N), N, XS)

Q is empty.

----------------------------------------

(29) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 6 less nodes.

----------------------------------------

(30)
TRUE
