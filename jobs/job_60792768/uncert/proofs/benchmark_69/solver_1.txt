YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/lolSt.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given CSR could be proven:

(0) CSR
(1) CSDependencyPairsProof [EQUIVALENT, 0 ms]
(2) QCSDP
(3) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QCSDP
        (6) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (7) QCSDP
        (8) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (9) TRUE
    (10) QCSDP
        (11) QCSUsableRulesProof [EQUIVALENT, 0 ms]
        (12) QCSDP
        (13) QCSDPMuMonotonicPoloProof [EQUIVALENT, 32 ms]
        (14) QCSDP
        (15) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (16) TRUE
    (17) QCSDP
        (18) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (19) QCSDP
        (20) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (21) TRUE
    (22) QCSDP
        (23) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (24) QCSDP
        (25) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (26) TRUE


----------------------------------------

(0)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> plus(x(N, M), N)
   U11(tt, V1, V2) -> U12(isNatKind(V1), V1, V2)
   U12(tt, V1, V2) -> U13(isNatKind(V2), V1, V2)
   U13(tt, V1, V2) -> U14(isNatKind(V2), V1, V2)
   U14(tt, V1, V2) -> U15(isNat(V1), V2)
   U15(tt, V2) -> U16(isNat(V2))
   U16(tt) -> tt
   U21(tt, V1) -> U22(isNatKind(V1), V1)
   U22(tt, V1) -> U23(isNat(V1))
   U23(tt) -> tt
   U31(tt, V1, V2) -> U32(isNatKind(V1), V1, V2)
   U32(tt, V1, V2) -> U33(isNatKind(V2), V1, V2)
   U33(tt, V1, V2) -> U34(isNatKind(V2), V1, V2)
   U34(tt, V1, V2) -> U35(isNat(V1), V2)
   U35(tt, V2) -> U36(isNat(V2))
   U36(tt) -> tt
   U41(tt, V2) -> U42(isNatKind(V2))
   U42(tt) -> tt
   U51(tt) -> tt
   U61(tt, V2) -> U62(isNatKind(V2))
   U62(tt) -> tt
   U71(tt, N) -> U72(isNatKind(N), N)
   U72(tt, N) -> N
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> s(plus(N, M))
   U91(tt, N) -> U92(isNatKind(N))
   U92(tt) -> 0
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNatKind(V1), V1, V2)
   isNat(s(V1)) -> U21(isNatKind(V1), V1)
   isNat(x(V1, V2)) -> U31(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(plus(V1, V2)) -> U41(isNatKind(V1), V2)
   isNatKind(s(V1)) -> U51(isNatKind(V1))
   isNatKind(x(V1, V2)) -> U61(isNatKind(V1), V2)
   plus(N, 0) -> U71(isNat(N), N)
   plus(N, s(M)) -> U81(isNat(M), M, N)
   x(N, 0) -> U91(isNat(N), N)
   x(N, s(M)) -> U101(isNat(M), M, N)

The replacement map contains the following entries:

U101: {1}
tt: empty set
U102: {1}
isNatKind: empty set
U103: {1}
isNat: empty set
U104: {1}
plus: {1, 2}
x: {1, 2}
U11: {1}
U12: {1}
U13: {1}
U14: {1}
U15: {1}
U16: {1}
U21: {1}
U22: {1}
U23: {1}
U31: {1}
U32: {1}
U33: {1}
U34: {1}
U35: {1}
U36: {1}
U41: {1}
U42: {1}
U51: {1}
U61: {1}
U62: {1}
U71: {1}
U72: {1}
U81: {1}
U82: {1}
U83: {1}
U84: {1}
s: {1}
U91: {1}
U92: {1}
0: empty set

----------------------------------------

(1) CSDependencyPairsProof (EQUIVALENT)
Using Improved CS-DPs [LPAR08] we result in the following initial Q-CSDP problem.
----------------------------------------

(2)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, x_2, U16_1, U23_1, U36_1, U42_1, U51_1, U62_1, s_1, U92_1, PLUS_2, X_2, U16'_1, U23'_1, U36'_1, U42'_1, U62'_1, U92'_1, U51'_1} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U11_3, U12_3, U13_3, U14_3, U15_2, U21_2, U22_2, U31_3, U32_3, U33_3, U34_3, U35_2, U41_2, U61_2, U71_2, U72_2, U81_3, U82_3, U83_3, U84_3, U91_2, U102'_3, U101'_3, U103'_3, U104'_3, U12'_3, U11'_3, U13'_3, U14'_3, U15'_2, U22'_2, U21'_2, U32'_3, U31'_3, U33'_3, U34'_3, U35'_2, U41'_2, U61'_2, U72'_2, U71'_2, U82'_3, U81'_3, U83'_3, U84'_3, U91'_2} we have mu(f) = {1}.
The symbols in {isNatKind_1, isNat_1, ISNATKIND_1, ISNAT_1, U_1} are not replacing on any position.

The ordinary context-sensitive dependency pairs DP_o are:
   U101'(tt, M, N) -> U102'(isNatKind(M), M, N)
   U101'(tt, M, N) -> ISNATKIND(M)
   U102'(tt, M, N) -> U103'(isNat(N), M, N)
   U102'(tt, M, N) -> ISNAT(N)
   U103'(tt, M, N) -> U104'(isNatKind(N), M, N)
   U103'(tt, M, N) -> ISNATKIND(N)
   U104'(tt, M, N) -> PLUS(x(N, M), N)
   U104'(tt, M, N) -> X(N, M)
   U11'(tt, V1, V2) -> U12'(isNatKind(V1), V1, V2)
   U11'(tt, V1, V2) -> ISNATKIND(V1)
   U12'(tt, V1, V2) -> U13'(isNatKind(V2), V1, V2)
   U12'(tt, V1, V2) -> ISNATKIND(V2)
   U13'(tt, V1, V2) -> U14'(isNatKind(V2), V1, V2)
   U13'(tt, V1, V2) -> ISNATKIND(V2)
   U14'(tt, V1, V2) -> U15'(isNat(V1), V2)
   U14'(tt, V1, V2) -> ISNAT(V1)
   U15'(tt, V2) -> U16'(isNat(V2))
   U15'(tt, V2) -> ISNAT(V2)
   U21'(tt, V1) -> U22'(isNatKind(V1), V1)
   U21'(tt, V1) -> ISNATKIND(V1)
   U22'(tt, V1) -> U23'(isNat(V1))
   U22'(tt, V1) -> ISNAT(V1)
   U31'(tt, V1, V2) -> U32'(isNatKind(V1), V1, V2)
   U31'(tt, V1, V2) -> ISNATKIND(V1)
   U32'(tt, V1, V2) -> U33'(isNatKind(V2), V1, V2)
   U32'(tt, V1, V2) -> ISNATKIND(V2)
   U33'(tt, V1, V2) -> U34'(isNatKind(V2), V1, V2)
   U33'(tt, V1, V2) -> ISNATKIND(V2)
   U34'(tt, V1, V2) -> U35'(isNat(V1), V2)
   U34'(tt, V1, V2) -> ISNAT(V1)
   U35'(tt, V2) -> U36'(isNat(V2))
   U35'(tt, V2) -> ISNAT(V2)
   U41'(tt, V2) -> U42'(isNatKind(V2))
   U41'(tt, V2) -> ISNATKIND(V2)
   U61'(tt, V2) -> U62'(isNatKind(V2))
   U61'(tt, V2) -> ISNATKIND(V2)
   U71'(tt, N) -> U72'(isNatKind(N), N)
   U71'(tt, N) -> ISNATKIND(N)
   U81'(tt, M, N) -> U82'(isNatKind(M), M, N)
   U81'(tt, M, N) -> ISNATKIND(M)
   U82'(tt, M, N) -> U83'(isNat(N), M, N)
   U82'(tt, M, N) -> ISNAT(N)
   U83'(tt, M, N) -> U84'(isNatKind(N), M, N)
   U83'(tt, M, N) -> ISNATKIND(N)
   U84'(tt, M, N) -> PLUS(N, M)
   U91'(tt, N) -> U92'(isNatKind(N))
   U91'(tt, N) -> ISNATKIND(N)
   ISNAT(plus(V1, V2)) -> U11'(isNatKind(V1), V1, V2)
   ISNAT(plus(V1, V2)) -> ISNATKIND(V1)
   ISNAT(s(V1)) -> U21'(isNatKind(V1), V1)
   ISNAT(s(V1)) -> ISNATKIND(V1)
   ISNAT(x(V1, V2)) -> U31'(isNatKind(V1), V1, V2)
   ISNAT(x(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(plus(V1, V2)) -> U41'(isNatKind(V1), V2)
   ISNATKIND(plus(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(s(V1)) -> U51'(isNatKind(V1))
   ISNATKIND(s(V1)) -> ISNATKIND(V1)
   ISNATKIND(x(V1, V2)) -> U61'(isNatKind(V1), V2)
   ISNATKIND(x(V1, V2)) -> ISNATKIND(V1)
   PLUS(N, 0) -> U71'(isNat(N), N)
   PLUS(N, 0) -> ISNAT(N)
   PLUS(N, s(M)) -> U81'(isNat(M), M, N)
   PLUS(N, s(M)) -> ISNAT(M)
   X(N, 0) -> U91'(isNat(N), N)
   X(N, 0) -> ISNAT(N)
   X(N, s(M)) -> U101'(isNat(M), M, N)
   X(N, s(M)) -> ISNAT(M)

The collapsing dependency pairs are DP_c:
   U104'(tt, M, N) -> N
   U104'(tt, M, N) -> M
   U72'(tt, N) -> N
   U84'(tt, M, N) -> N
   U84'(tt, M, N) -> M


The hidden terms of R are:
none

Every hiding context is built from:none

Hence, the new unhiding pairs DP_u are :
   U104'(tt, M, N) -> U(N)
   U104'(tt, M, N) -> U(M)
   U72'(tt, N) -> U(N)
   U84'(tt, M, N) -> U(N)
   U84'(tt, M, N) -> U(M)

The TRS R consists of the following rules:

   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> plus(x(N, M), N)
   U11(tt, V1, V2) -> U12(isNatKind(V1), V1, V2)
   U12(tt, V1, V2) -> U13(isNatKind(V2), V1, V2)
   U13(tt, V1, V2) -> U14(isNatKind(V2), V1, V2)
   U14(tt, V1, V2) -> U15(isNat(V1), V2)
   U15(tt, V2) -> U16(isNat(V2))
   U16(tt) -> tt
   U21(tt, V1) -> U22(isNatKind(V1), V1)
   U22(tt, V1) -> U23(isNat(V1))
   U23(tt) -> tt
   U31(tt, V1, V2) -> U32(isNatKind(V1), V1, V2)
   U32(tt, V1, V2) -> U33(isNatKind(V2), V1, V2)
   U33(tt, V1, V2) -> U34(isNatKind(V2), V1, V2)
   U34(tt, V1, V2) -> U35(isNat(V1), V2)
   U35(tt, V2) -> U36(isNat(V2))
   U36(tt) -> tt
   U41(tt, V2) -> U42(isNatKind(V2))
   U42(tt) -> tt
   U51(tt) -> tt
   U61(tt, V2) -> U62(isNatKind(V2))
   U62(tt) -> tt
   U71(tt, N) -> U72(isNatKind(N), N)
   U72(tt, N) -> N
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> s(plus(N, M))
   U91(tt, N) -> U92(isNatKind(N))
   U92(tt) -> 0
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNatKind(V1), V1, V2)
   isNat(s(V1)) -> U21(isNatKind(V1), V1)
   isNat(x(V1, V2)) -> U31(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(plus(V1, V2)) -> U41(isNatKind(V1), V2)
   isNatKind(s(V1)) -> U51(isNatKind(V1))
   isNatKind(x(V1, V2)) -> U61(isNatKind(V1), V2)
   plus(N, 0) -> U71(isNat(N), N)
   plus(N, s(M)) -> U81(isNat(M), M, N)
   x(N, 0) -> U91(isNat(N), N)
   x(N, s(M)) -> U101(isNat(M), M, N)

Q is empty.

----------------------------------------

(3) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 4 SCCs with 38 less nodes.

----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, x_2, U16_1, U23_1, U36_1, U42_1, U51_1, U62_1, s_1, U92_1} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U11_3, U12_3, U13_3, U14_3, U15_2, U21_2, U22_2, U31_3, U32_3, U33_3, U34_3, U35_2, U41_2, U61_2, U71_2, U72_2, U81_3, U82_3, U83_3, U84_3, U91_2, U41'_2, U61'_2} we have mu(f) = {1}.
The symbols in {isNatKind_1, isNat_1, ISNATKIND_1} are not replacing on any position.

The TRS P consists of the following rules:

   U41'(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(plus(V1, V2)) -> U41'(isNatKind(V1), V2)
   ISNATKIND(plus(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(s(V1)) -> ISNATKIND(V1)
   ISNATKIND(x(V1, V2)) -> U61'(isNatKind(V1), V2)
   U61'(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(x(V1, V2)) -> ISNATKIND(V1)

The TRS R consists of the following rules:

   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> plus(x(N, M), N)
   U11(tt, V1, V2) -> U12(isNatKind(V1), V1, V2)
   U12(tt, V1, V2) -> U13(isNatKind(V2), V1, V2)
   U13(tt, V1, V2) -> U14(isNatKind(V2), V1, V2)
   U14(tt, V1, V2) -> U15(isNat(V1), V2)
   U15(tt, V2) -> U16(isNat(V2))
   U16(tt) -> tt
   U21(tt, V1) -> U22(isNatKind(V1), V1)
   U22(tt, V1) -> U23(isNat(V1))
   U23(tt) -> tt
   U31(tt, V1, V2) -> U32(isNatKind(V1), V1, V2)
   U32(tt, V1, V2) -> U33(isNatKind(V2), V1, V2)
   U33(tt, V1, V2) -> U34(isNatKind(V2), V1, V2)
   U34(tt, V1, V2) -> U35(isNat(V1), V2)
   U35(tt, V2) -> U36(isNat(V2))
   U36(tt) -> tt
   U41(tt, V2) -> U42(isNatKind(V2))
   U42(tt) -> tt
   U51(tt) -> tt
   U61(tt, V2) -> U62(isNatKind(V2))
   U62(tt) -> tt
   U71(tt, N) -> U72(isNatKind(N), N)
   U72(tt, N) -> N
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> s(plus(N, M))
   U91(tt, N) -> U92(isNatKind(N))
   U92(tt) -> 0
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNatKind(V1), V1, V2)
   isNat(s(V1)) -> U21(isNatKind(V1), V1)
   isNat(x(V1, V2)) -> U31(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(plus(V1, V2)) -> U41(isNatKind(V1), V2)
   isNatKind(s(V1)) -> U51(isNatKind(V1))
   isNatKind(x(V1, V2)) -> U61(isNatKind(V1), V2)
   plus(N, 0) -> U71(isNat(N), N)
   plus(N, s(M)) -> U81(isNat(M), M, N)
   x(N, 0) -> U91(isNat(N), N)
   x(N, s(M)) -> U101(isNat(M), M, N)

Q is empty.

----------------------------------------

(6) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   ISNATKIND(plus(V1, V2)) -> U41'(isNatKind(V1), V2)
   ISNATKIND(plus(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(s(V1)) -> ISNATKIND(V1)
   ISNATKIND(x(V1, V2)) -> U61'(isNatKind(V1), V2)
   ISNATKIND(x(V1, V2)) -> ISNATKIND(V1)
The remaining pairs can at least be oriented weakly.

   U41'(tt, V2) -> ISNATKIND(V2)
   U61'(tt, V2) -> ISNATKIND(V2)
Used ordering:  Combined order from the following AFS and order.
ISNATKIND(x1)  =  x1

U41'(x1, x2)  =  x2

U61'(x1, x2)  =  x2


Subterm Order

----------------------------------------

(7)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, x_2, U16_1, U23_1, U36_1, U42_1, U51_1, U62_1, s_1, U92_1} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U11_3, U12_3, U13_3, U14_3, U15_2, U21_2, U22_2, U31_3, U32_3, U33_3, U34_3, U35_2, U41_2, U61_2, U71_2, U72_2, U81_3, U82_3, U83_3, U84_3, U91_2, U41'_2, U61'_2} we have mu(f) = {1}.
The symbols in {isNatKind_1, isNat_1, ISNATKIND_1} are not replacing on any position.

The TRS P consists of the following rules:

   U41'(tt, V2) -> ISNATKIND(V2)
   U61'(tt, V2) -> ISNATKIND(V2)

The TRS R consists of the following rules:

   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> plus(x(N, M), N)
   U11(tt, V1, V2) -> U12(isNatKind(V1), V1, V2)
   U12(tt, V1, V2) -> U13(isNatKind(V2), V1, V2)
   U13(tt, V1, V2) -> U14(isNatKind(V2), V1, V2)
   U14(tt, V1, V2) -> U15(isNat(V1), V2)
   U15(tt, V2) -> U16(isNat(V2))
   U16(tt) -> tt
   U21(tt, V1) -> U22(isNatKind(V1), V1)
   U22(tt, V1) -> U23(isNat(V1))
   U23(tt) -> tt
   U31(tt, V1, V2) -> U32(isNatKind(V1), V1, V2)
   U32(tt, V1, V2) -> U33(isNatKind(V2), V1, V2)
   U33(tt, V1, V2) -> U34(isNatKind(V2), V1, V2)
   U34(tt, V1, V2) -> U35(isNat(V1), V2)
   U35(tt, V2) -> U36(isNat(V2))
   U36(tt) -> tt
   U41(tt, V2) -> U42(isNatKind(V2))
   U42(tt) -> tt
   U51(tt) -> tt
   U61(tt, V2) -> U62(isNatKind(V2))
   U62(tt) -> tt
   U71(tt, N) -> U72(isNatKind(N), N)
   U72(tt, N) -> N
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> s(plus(N, M))
   U91(tt, N) -> U92(isNatKind(N))
   U92(tt) -> 0
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNatKind(V1), V1, V2)
   isNat(s(V1)) -> U21(isNatKind(V1), V1)
   isNat(x(V1, V2)) -> U31(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(plus(V1, V2)) -> U41(isNatKind(V1), V2)
   isNatKind(s(V1)) -> U51(isNatKind(V1))
   isNatKind(x(V1, V2)) -> U61(isNatKind(V1), V2)
   plus(N, 0) -> U71(isNat(N), N)
   plus(N, s(M)) -> U81(isNat(M), M, N)
   x(N, 0) -> U91(isNat(N), N)
   x(N, s(M)) -> U101(isNat(M), M, N)

Q is empty.

----------------------------------------

(8) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 2 less nodes.

----------------------------------------

(9)
TRUE

----------------------------------------

(10)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, x_2, U16_1, U23_1, U36_1, U42_1, U51_1, U62_1, s_1, U92_1} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U11_3, U12_3, U13_3, U14_3, U15_2, U21_2, U22_2, U31_3, U32_3, U33_3, U34_3, U35_2, U41_2, U61_2, U71_2, U72_2, U81_3, U82_3, U83_3, U84_3, U91_2, U12'_3, U11'_3, U13'_3, U14'_3, U15'_2, U21'_2, U22'_2, U31'_3, U32'_3, U33'_3, U34'_3, U35'_2} we have mu(f) = {1}.
The symbols in {isNatKind_1, isNat_1, ISNAT_1} are not replacing on any position.

The TRS P consists of the following rules:

   U11'(tt, V1, V2) -> U12'(isNatKind(V1), V1, V2)
   U12'(tt, V1, V2) -> U13'(isNatKind(V2), V1, V2)
   U13'(tt, V1, V2) -> U14'(isNatKind(V2), V1, V2)
   U14'(tt, V1, V2) -> U15'(isNat(V1), V2)
   U15'(tt, V2) -> ISNAT(V2)
   ISNAT(plus(V1, V2)) -> U11'(isNatKind(V1), V1, V2)
   ISNAT(s(V1)) -> U21'(isNatKind(V1), V1)
   U21'(tt, V1) -> U22'(isNatKind(V1), V1)
   U22'(tt, V1) -> ISNAT(V1)
   ISNAT(x(V1, V2)) -> U31'(isNatKind(V1), V1, V2)
   U31'(tt, V1, V2) -> U32'(isNatKind(V1), V1, V2)
   U32'(tt, V1, V2) -> U33'(isNatKind(V2), V1, V2)
   U33'(tt, V1, V2) -> U34'(isNatKind(V2), V1, V2)
   U34'(tt, V1, V2) -> U35'(isNat(V1), V2)
   U35'(tt, V2) -> ISNAT(V2)
   U34'(tt, V1, V2) -> ISNAT(V1)
   U14'(tt, V1, V2) -> ISNAT(V1)

The TRS R consists of the following rules:

   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> plus(x(N, M), N)
   U11(tt, V1, V2) -> U12(isNatKind(V1), V1, V2)
   U12(tt, V1, V2) -> U13(isNatKind(V2), V1, V2)
   U13(tt, V1, V2) -> U14(isNatKind(V2), V1, V2)
   U14(tt, V1, V2) -> U15(isNat(V1), V2)
   U15(tt, V2) -> U16(isNat(V2))
   U16(tt) -> tt
   U21(tt, V1) -> U22(isNatKind(V1), V1)
   U22(tt, V1) -> U23(isNat(V1))
   U23(tt) -> tt
   U31(tt, V1, V2) -> U32(isNatKind(V1), V1, V2)
   U32(tt, V1, V2) -> U33(isNatKind(V2), V1, V2)
   U33(tt, V1, V2) -> U34(isNatKind(V2), V1, V2)
   U34(tt, V1, V2) -> U35(isNat(V1), V2)
   U35(tt, V2) -> U36(isNat(V2))
   U36(tt) -> tt
   U41(tt, V2) -> U42(isNatKind(V2))
   U42(tt) -> tt
   U51(tt) -> tt
   U61(tt, V2) -> U62(isNatKind(V2))
   U62(tt) -> tt
   U71(tt, N) -> U72(isNatKind(N), N)
   U72(tt, N) -> N
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> s(plus(N, M))
   U91(tt, N) -> U92(isNatKind(N))
   U92(tt) -> 0
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNatKind(V1), V1, V2)
   isNat(s(V1)) -> U21(isNatKind(V1), V1)
   isNat(x(V1, V2)) -> U31(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(plus(V1, V2)) -> U41(isNatKind(V1), V2)
   isNatKind(s(V1)) -> U51(isNatKind(V1))
   isNatKind(x(V1, V2)) -> U61(isNatKind(V1), V2)
   plus(N, 0) -> U71(isNat(N), N)
   plus(N, s(M)) -> U81(isNat(M), M, N)
   x(N, 0) -> U91(isNat(N), N)
   x(N, s(M)) -> U101(isNat(M), M, N)

Q is empty.

----------------------------------------

(11) QCSUsableRulesProof (EQUIVALENT)
The following rules are not useable [DA_EMMES] and can be deleted:

   U101(tt, x0, x1) -> U102(isNatKind(x0), x0, x1)
   U102(tt, x0, x1) -> U103(isNat(x1), x0, x1)
   U103(tt, x0, x1) -> U104(isNatKind(x1), x0, x1)
   U104(tt, x0, x1) -> plus(x(x1, x0), x1)
   U71(tt, x0) -> U72(isNatKind(x0), x0)
   U72(tt, x0) -> x0
   U81(tt, x0, x1) -> U82(isNatKind(x0), x0, x1)
   U82(tt, x0, x1) -> U83(isNat(x1), x0, x1)
   U83(tt, x0, x1) -> U84(isNatKind(x1), x0, x1)
   U84(tt, x0, x1) -> s(plus(x1, x0))
   U91(tt, x0) -> U92(isNatKind(x0))
   U92(tt) -> 0
   plus(x0, 0) -> U71(isNat(x0), x0)
   plus(x0, s(x1)) -> U81(isNat(x1), x1, x0)
   x(x0, 0) -> U91(isNat(x0), x0)
   x(x0, s(x1)) -> U101(isNat(x1), x1, x0)

----------------------------------------

(12)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, s_1, U51_1, x_2, U62_1, U42_1, U23_1, U36_1, U16_1} are replacing on all positions.
For all symbols f in {U41_2, U61_2, U11_3, U12_3, U13_3, U14_3, U15_2, U21_2, U22_2, U31_3, U32_3, U33_3, U34_3, U35_2, U12'_3, U11'_3, U13'_3, U14'_3, U15'_2, U21'_2, U22'_2, U31'_3, U32'_3, U33'_3, U34'_3, U35'_2} we have mu(f) = {1}.
The symbols in {isNatKind_1, isNat_1, ISNAT_1} are not replacing on any position.

The TRS P consists of the following rules:

   U11'(tt, V1, V2) -> U12'(isNatKind(V1), V1, V2)
   U12'(tt, V1, V2) -> U13'(isNatKind(V2), V1, V2)
   U13'(tt, V1, V2) -> U14'(isNatKind(V2), V1, V2)
   U14'(tt, V1, V2) -> U15'(isNat(V1), V2)
   U15'(tt, V2) -> ISNAT(V2)
   ISNAT(plus(V1, V2)) -> U11'(isNatKind(V1), V1, V2)
   ISNAT(s(V1)) -> U21'(isNatKind(V1), V1)
   U21'(tt, V1) -> U22'(isNatKind(V1), V1)
   U22'(tt, V1) -> ISNAT(V1)
   ISNAT(x(V1, V2)) -> U31'(isNatKind(V1), V1, V2)
   U31'(tt, V1, V2) -> U32'(isNatKind(V1), V1, V2)
   U32'(tt, V1, V2) -> U33'(isNatKind(V2), V1, V2)
   U33'(tt, V1, V2) -> U34'(isNatKind(V2), V1, V2)
   U34'(tt, V1, V2) -> U35'(isNat(V1), V2)
   U35'(tt, V2) -> ISNAT(V2)
   U34'(tt, V1, V2) -> ISNAT(V1)
   U14'(tt, V1, V2) -> ISNAT(V1)

The TRS R consists of the following rules:

   isNatKind(0) -> tt
   isNatKind(plus(V1, V2)) -> U41(isNatKind(V1), V2)
   isNatKind(s(V1)) -> U51(isNatKind(V1))
   isNatKind(x(V1, V2)) -> U61(isNatKind(V1), V2)
   U61(tt, V2) -> U62(isNatKind(V2))
   U62(tt) -> tt
   U51(tt) -> tt
   U41(tt, V2) -> U42(isNatKind(V2))
   U42(tt) -> tt
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNatKind(V1), V1, V2)
   U11(tt, V1, V2) -> U12(isNatKind(V1), V1, V2)
   U12(tt, V1, V2) -> U13(isNatKind(V2), V1, V2)
   U13(tt, V1, V2) -> U14(isNatKind(V2), V1, V2)
   U14(tt, V1, V2) -> U15(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNatKind(V1), V1)
   U21(tt, V1) -> U22(isNatKind(V1), V1)
   U22(tt, V1) -> U23(isNat(V1))
   isNat(x(V1, V2)) -> U31(isNatKind(V1), V1, V2)
   U31(tt, V1, V2) -> U32(isNatKind(V1), V1, V2)
   U32(tt, V1, V2) -> U33(isNatKind(V2), V1, V2)
   U33(tt, V1, V2) -> U34(isNatKind(V2), V1, V2)
   U34(tt, V1, V2) -> U35(isNat(V1), V2)
   U35(tt, V2) -> U36(isNat(V2))
   U36(tt) -> tt
   U23(tt) -> tt
   U15(tt, V2) -> U16(isNat(V2))
   U16(tt) -> tt

Q is empty.

----------------------------------------

(13) QCSDPMuMonotonicPoloProof (EQUIVALENT)
By using the following mu-monotonic polynomial ordering [POLO], at least one Dependency Pair or term rewrite system rule of this Q-CSDP problem can be strictly oriented and thus deleted.

Strictly oriented dependency pairs:

   U14'(tt, V1, V2) -> U15'(isNat(V1), V2)
   U15'(tt, V2) -> ISNAT(V2)
   ISNAT(plus(V1, V2)) -> U11'(isNatKind(V1), V1, V2)
   ISNAT(s(V1)) -> U21'(isNatKind(V1), V1)
   U21'(tt, V1) -> U22'(isNatKind(V1), V1)
   U22'(tt, V1) -> ISNAT(V1)
   ISNAT(x(V1, V2)) -> U31'(isNatKind(V1), V1, V2)
   U34'(tt, V1, V2) -> U35'(isNat(V1), V2)
   U35'(tt, V2) -> ISNAT(V2)
   U34'(tt, V1, V2) -> ISNAT(V1)
   U14'(tt, V1, V2) -> ISNAT(V1)

Strictly oriented rules of the TRS R:

   U14(tt, V1, V2) -> U15(isNat(V1), V2)
   U22(tt, V1) -> U23(isNat(V1))
   U34(tt, V1, V2) -> U35(isNat(V1), V2)
   U35(tt, V2) -> U36(isNat(V2))
   U23(tt) -> tt
   U15(tt, V2) -> U16(isNat(V2))
   U16(tt) -> tt

Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(ISNAT(x_1)) = 2 + 2*x_1
   POL(U11(x_1, x_2, x_3)) = x_1 + 2*x_2 + 2*x_3
   POL(U11'(x_1, x_2, x_3)) = 1 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U12(x_1, x_2, x_3)) = x_1 + 2*x_2 + 2*x_3
   POL(U12'(x_1, x_2, x_3)) = 1 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U13(x_1, x_2, x_3)) = x_1 + 2*x_2 + 2*x_3
   POL(U13'(x_1, x_2, x_3)) = 1 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U14(x_1, x_2, x_3)) = x_1 + 2*x_2 + 2*x_3
   POL(U14'(x_1, x_2, x_3)) = 1 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U15(x_1, x_2)) = x_1 + 2*x_2
   POL(U15'(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(U16(x_1)) = 2*x_1
   POL(U21(x_1, x_2)) = x_1 + 2*x_2
   POL(U21'(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(U22(x_1, x_2)) = x_1 + 2*x_2
   POL(U22'(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(U23(x_1)) = 1 + 2*x_1
   POL(U31(x_1, x_2, x_3)) = x_1 + 2*x_2 + 2*x_3
   POL(U31'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + 2*x_3
   POL(U32(x_1, x_2, x_3)) = x_1 + 2*x_2 + x_3
   POL(U32'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + 2*x_3
   POL(U33(x_1, x_2, x_3)) = x_1 + 2*x_2 + x_3
   POL(U33'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + 2*x_3
   POL(U34(x_1, x_2, x_3)) = x_1 + 2*x_2 + x_3
   POL(U34'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + 2*x_3
   POL(U35(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(U35'(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(U36(x_1)) = x_1
   POL(U41(x_1, x_2)) = x_1
   POL(U42(x_1)) = x_1
   POL(U51(x_1)) = x_1
   POL(U61(x_1, x_2)) = x_1
   POL(U62(x_1)) = x_1
   POL(isNat(x_1)) = x_1
   POL(isNatKind(x_1)) = 2
   POL(plus(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(s(x_1)) = 2 + 2*x_1
   POL(tt) = 2
   POL(x(x_1, x_2)) = 2 + 2*x_1 + 2*x_2


----------------------------------------

(14)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, s_1, U51_1, x_2, U62_1, U42_1, U36_1} are replacing on all positions.
For all symbols f in {U41_2, U61_2, U11_3, U12_3, U13_3, U14_3, U21_2, U22_2, U31_3, U32_3, U33_3, U34_3, U12'_3, U11'_3, U13'_3, U14'_3, U32'_3, U31'_3, U33'_3, U34'_3} we have mu(f) = {1}.
The symbols in {isNatKind_1, isNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U11'(tt, V1, V2) -> U12'(isNatKind(V1), V1, V2)
   U12'(tt, V1, V2) -> U13'(isNatKind(V2), V1, V2)
   U13'(tt, V1, V2) -> U14'(isNatKind(V2), V1, V2)
   U31'(tt, V1, V2) -> U32'(isNatKind(V1), V1, V2)
   U32'(tt, V1, V2) -> U33'(isNatKind(V2), V1, V2)
   U33'(tt, V1, V2) -> U34'(isNatKind(V2), V1, V2)

The TRS R consists of the following rules:

   isNatKind(0) -> tt
   isNatKind(plus(V1, V2)) -> U41(isNatKind(V1), V2)
   isNatKind(s(V1)) -> U51(isNatKind(V1))
   isNatKind(x(V1, V2)) -> U61(isNatKind(V1), V2)
   U61(tt, V2) -> U62(isNatKind(V2))
   U62(tt) -> tt
   U51(tt) -> tt
   U41(tt, V2) -> U42(isNatKind(V2))
   U42(tt) -> tt
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNatKind(V1), V1, V2)
   U11(tt, V1, V2) -> U12(isNatKind(V1), V1, V2)
   U12(tt, V1, V2) -> U13(isNatKind(V2), V1, V2)
   U13(tt, V1, V2) -> U14(isNatKind(V2), V1, V2)
   isNat(s(V1)) -> U21(isNatKind(V1), V1)
   U21(tt, V1) -> U22(isNatKind(V1), V1)
   isNat(x(V1, V2)) -> U31(isNatKind(V1), V1, V2)
   U31(tt, V1, V2) -> U32(isNatKind(V1), V1, V2)
   U32(tt, V1, V2) -> U33(isNatKind(V2), V1, V2)
   U33(tt, V1, V2) -> U34(isNatKind(V2), V1, V2)
   U36(tt) -> tt

Q is empty.

----------------------------------------

(15) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 6 less nodes.

----------------------------------------

(16)
TRUE

----------------------------------------

(17)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, x_2, U16_1, U23_1, U36_1, U42_1, U51_1, U62_1, s_1, U92_1, PLUS_2} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U11_3, U12_3, U13_3, U14_3, U15_2, U21_2, U22_2, U31_3, U32_3, U33_3, U34_3, U35_2, U41_2, U61_2, U71_2, U72_2, U81_3, U82_3, U83_3, U84_3, U91_2, U83'_3, U82'_3, U84'_3, U81'_3} we have mu(f) = {1}.
The symbols in {isNatKind_1, isNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U82'(tt, M, N) -> U83'(isNat(N), M, N)
   U83'(tt, M, N) -> U84'(isNatKind(N), M, N)
   U84'(tt, M, N) -> PLUS(N, M)
   PLUS(N, s(M)) -> U81'(isNat(M), M, N)
   U81'(tt, M, N) -> U82'(isNatKind(M), M, N)

The TRS R consists of the following rules:

   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> plus(x(N, M), N)
   U11(tt, V1, V2) -> U12(isNatKind(V1), V1, V2)
   U12(tt, V1, V2) -> U13(isNatKind(V2), V1, V2)
   U13(tt, V1, V2) -> U14(isNatKind(V2), V1, V2)
   U14(tt, V1, V2) -> U15(isNat(V1), V2)
   U15(tt, V2) -> U16(isNat(V2))
   U16(tt) -> tt
   U21(tt, V1) -> U22(isNatKind(V1), V1)
   U22(tt, V1) -> U23(isNat(V1))
   U23(tt) -> tt
   U31(tt, V1, V2) -> U32(isNatKind(V1), V1, V2)
   U32(tt, V1, V2) -> U33(isNatKind(V2), V1, V2)
   U33(tt, V1, V2) -> U34(isNatKind(V2), V1, V2)
   U34(tt, V1, V2) -> U35(isNat(V1), V2)
   U35(tt, V2) -> U36(isNat(V2))
   U36(tt) -> tt
   U41(tt, V2) -> U42(isNatKind(V2))
   U42(tt) -> tt
   U51(tt) -> tt
   U61(tt, V2) -> U62(isNatKind(V2))
   U62(tt) -> tt
   U71(tt, N) -> U72(isNatKind(N), N)
   U72(tt, N) -> N
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> s(plus(N, M))
   U91(tt, N) -> U92(isNatKind(N))
   U92(tt) -> 0
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNatKind(V1), V1, V2)
   isNat(s(V1)) -> U21(isNatKind(V1), V1)
   isNat(x(V1, V2)) -> U31(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(plus(V1, V2)) -> U41(isNatKind(V1), V2)
   isNatKind(s(V1)) -> U51(isNatKind(V1))
   isNatKind(x(V1, V2)) -> U61(isNatKind(V1), V2)
   plus(N, 0) -> U71(isNat(N), N)
   plus(N, s(M)) -> U81(isNat(M), M, N)
   x(N, 0) -> U91(isNat(N), N)
   x(N, s(M)) -> U101(isNat(M), M, N)

Q is empty.

----------------------------------------

(18) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   PLUS(N, s(M)) -> U81'(isNat(M), M, N)
The remaining pairs can at least be oriented weakly.

   U82'(tt, M, N) -> U83'(isNat(N), M, N)
   U83'(tt, M, N) -> U84'(isNatKind(N), M, N)
   U84'(tt, M, N) -> PLUS(N, M)
   U81'(tt, M, N) -> U82'(isNatKind(M), M, N)
Used ordering:  Combined order from the following AFS and order.
U83'(x1, x2, x3)  =  x2

U82'(x1, x2, x3)  =  x2

U84'(x1, x2, x3)  =  x2

PLUS(x1, x2)  =  x2

U81'(x1, x2, x3)  =  x2


Subterm Order

----------------------------------------

(19)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, x_2, U16_1, U23_1, U36_1, U42_1, U51_1, U62_1, s_1, U92_1, PLUS_2} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U11_3, U12_3, U13_3, U14_3, U15_2, U21_2, U22_2, U31_3, U32_3, U33_3, U34_3, U35_2, U41_2, U61_2, U71_2, U72_2, U81_3, U82_3, U83_3, U84_3, U91_2, U83'_3, U82'_3, U84'_3, U81'_3} we have mu(f) = {1}.
The symbols in {isNatKind_1, isNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U82'(tt, M, N) -> U83'(isNat(N), M, N)
   U83'(tt, M, N) -> U84'(isNatKind(N), M, N)
   U84'(tt, M, N) -> PLUS(N, M)
   U81'(tt, M, N) -> U82'(isNatKind(M), M, N)

The TRS R consists of the following rules:

   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> plus(x(N, M), N)
   U11(tt, V1, V2) -> U12(isNatKind(V1), V1, V2)
   U12(tt, V1, V2) -> U13(isNatKind(V2), V1, V2)
   U13(tt, V1, V2) -> U14(isNatKind(V2), V1, V2)
   U14(tt, V1, V2) -> U15(isNat(V1), V2)
   U15(tt, V2) -> U16(isNat(V2))
   U16(tt) -> tt
   U21(tt, V1) -> U22(isNatKind(V1), V1)
   U22(tt, V1) -> U23(isNat(V1))
   U23(tt) -> tt
   U31(tt, V1, V2) -> U32(isNatKind(V1), V1, V2)
   U32(tt, V1, V2) -> U33(isNatKind(V2), V1, V2)
   U33(tt, V1, V2) -> U34(isNatKind(V2), V1, V2)
   U34(tt, V1, V2) -> U35(isNat(V1), V2)
   U35(tt, V2) -> U36(isNat(V2))
   U36(tt) -> tt
   U41(tt, V2) -> U42(isNatKind(V2))
   U42(tt) -> tt
   U51(tt) -> tt
   U61(tt, V2) -> U62(isNatKind(V2))
   U62(tt) -> tt
   U71(tt, N) -> U72(isNatKind(N), N)
   U72(tt, N) -> N
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> s(plus(N, M))
   U91(tt, N) -> U92(isNatKind(N))
   U92(tt) -> 0
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNatKind(V1), V1, V2)
   isNat(s(V1)) -> U21(isNatKind(V1), V1)
   isNat(x(V1, V2)) -> U31(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(plus(V1, V2)) -> U41(isNatKind(V1), V2)
   isNatKind(s(V1)) -> U51(isNatKind(V1))
   isNatKind(x(V1, V2)) -> U61(isNatKind(V1), V2)
   plus(N, 0) -> U71(isNat(N), N)
   plus(N, s(M)) -> U81(isNat(M), M, N)
   x(N, 0) -> U91(isNat(N), N)
   x(N, s(M)) -> U101(isNat(M), M, N)

Q is empty.

----------------------------------------

(20) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 4 less nodes.

----------------------------------------

(21)
TRUE

----------------------------------------

(22)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, x_2, U16_1, U23_1, U36_1, U42_1, U51_1, U62_1, s_1, U92_1, X_2} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U11_3, U12_3, U13_3, U14_3, U15_2, U21_2, U22_2, U31_3, U32_3, U33_3, U34_3, U35_2, U41_2, U61_2, U71_2, U72_2, U81_3, U82_3, U83_3, U84_3, U91_2, U103'_3, U102'_3, U104'_3, U101'_3} we have mu(f) = {1}.
The symbols in {isNatKind_1, isNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U102'(tt, M, N) -> U103'(isNat(N), M, N)
   U103'(tt, M, N) -> U104'(isNatKind(N), M, N)
   U104'(tt, M, N) -> X(N, M)
   X(N, s(M)) -> U101'(isNat(M), M, N)
   U101'(tt, M, N) -> U102'(isNatKind(M), M, N)

The TRS R consists of the following rules:

   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> plus(x(N, M), N)
   U11(tt, V1, V2) -> U12(isNatKind(V1), V1, V2)
   U12(tt, V1, V2) -> U13(isNatKind(V2), V1, V2)
   U13(tt, V1, V2) -> U14(isNatKind(V2), V1, V2)
   U14(tt, V1, V2) -> U15(isNat(V1), V2)
   U15(tt, V2) -> U16(isNat(V2))
   U16(tt) -> tt
   U21(tt, V1) -> U22(isNatKind(V1), V1)
   U22(tt, V1) -> U23(isNat(V1))
   U23(tt) -> tt
   U31(tt, V1, V2) -> U32(isNatKind(V1), V1, V2)
   U32(tt, V1, V2) -> U33(isNatKind(V2), V1, V2)
   U33(tt, V1, V2) -> U34(isNatKind(V2), V1, V2)
   U34(tt, V1, V2) -> U35(isNat(V1), V2)
   U35(tt, V2) -> U36(isNat(V2))
   U36(tt) -> tt
   U41(tt, V2) -> U42(isNatKind(V2))
   U42(tt) -> tt
   U51(tt) -> tt
   U61(tt, V2) -> U62(isNatKind(V2))
   U62(tt) -> tt
   U71(tt, N) -> U72(isNatKind(N), N)
   U72(tt, N) -> N
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> s(plus(N, M))
   U91(tt, N) -> U92(isNatKind(N))
   U92(tt) -> 0
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNatKind(V1), V1, V2)
   isNat(s(V1)) -> U21(isNatKind(V1), V1)
   isNat(x(V1, V2)) -> U31(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(plus(V1, V2)) -> U41(isNatKind(V1), V2)
   isNatKind(s(V1)) -> U51(isNatKind(V1))
   isNatKind(x(V1, V2)) -> U61(isNatKind(V1), V2)
   plus(N, 0) -> U71(isNat(N), N)
   plus(N, s(M)) -> U81(isNat(M), M, N)
   x(N, 0) -> U91(isNat(N), N)
   x(N, s(M)) -> U101(isNat(M), M, N)

Q is empty.

----------------------------------------

(23) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   X(N, s(M)) -> U101'(isNat(M), M, N)
The remaining pairs can at least be oriented weakly.

   U102'(tt, M, N) -> U103'(isNat(N), M, N)
   U103'(tt, M, N) -> U104'(isNatKind(N), M, N)
   U104'(tt, M, N) -> X(N, M)
   U101'(tt, M, N) -> U102'(isNatKind(M), M, N)
Used ordering:  Combined order from the following AFS and order.
U103'(x1, x2, x3)  =  x2

U102'(x1, x2, x3)  =  x2

U104'(x1, x2, x3)  =  x2

X(x1, x2)  =  x2

U101'(x1, x2, x3)  =  x2


Subterm Order

----------------------------------------

(24)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, x_2, U16_1, U23_1, U36_1, U42_1, U51_1, U62_1, s_1, U92_1, X_2} are replacing on all positions.
For all symbols f in {U101_3, U102_3, U103_3, U104_3, U11_3, U12_3, U13_3, U14_3, U15_2, U21_2, U22_2, U31_3, U32_3, U33_3, U34_3, U35_2, U41_2, U61_2, U71_2, U72_2, U81_3, U82_3, U83_3, U84_3, U91_2, U103'_3, U102'_3, U104'_3, U101'_3} we have mu(f) = {1}.
The symbols in {isNatKind_1, isNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U102'(tt, M, N) -> U103'(isNat(N), M, N)
   U103'(tt, M, N) -> U104'(isNatKind(N), M, N)
   U104'(tt, M, N) -> X(N, M)
   U101'(tt, M, N) -> U102'(isNatKind(M), M, N)

The TRS R consists of the following rules:

   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> plus(x(N, M), N)
   U11(tt, V1, V2) -> U12(isNatKind(V1), V1, V2)
   U12(tt, V1, V2) -> U13(isNatKind(V2), V1, V2)
   U13(tt, V1, V2) -> U14(isNatKind(V2), V1, V2)
   U14(tt, V1, V2) -> U15(isNat(V1), V2)
   U15(tt, V2) -> U16(isNat(V2))
   U16(tt) -> tt
   U21(tt, V1) -> U22(isNatKind(V1), V1)
   U22(tt, V1) -> U23(isNat(V1))
   U23(tt) -> tt
   U31(tt, V1, V2) -> U32(isNatKind(V1), V1, V2)
   U32(tt, V1, V2) -> U33(isNatKind(V2), V1, V2)
   U33(tt, V1, V2) -> U34(isNatKind(V2), V1, V2)
   U34(tt, V1, V2) -> U35(isNat(V1), V2)
   U35(tt, V2) -> U36(isNat(V2))
   U36(tt) -> tt
   U41(tt, V2) -> U42(isNatKind(V2))
   U42(tt) -> tt
   U51(tt) -> tt
   U61(tt, V2) -> U62(isNatKind(V2))
   U62(tt) -> tt
   U71(tt, N) -> U72(isNatKind(N), N)
   U72(tt, N) -> N
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> s(plus(N, M))
   U91(tt, N) -> U92(isNatKind(N))
   U92(tt) -> 0
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNatKind(V1), V1, V2)
   isNat(s(V1)) -> U21(isNatKind(V1), V1)
   isNat(x(V1, V2)) -> U31(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(plus(V1, V2)) -> U41(isNatKind(V1), V2)
   isNatKind(s(V1)) -> U51(isNatKind(V1))
   isNatKind(x(V1, V2)) -> U61(isNatKind(V1), V2)
   plus(N, 0) -> U71(isNat(N), N)
   plus(N, s(M)) -> U81(isNat(M), M, N)
   x(N, 0) -> U91(isNat(N), N)
   x(N, s(M)) -> U101(isNat(M), M, N)

Q is empty.

----------------------------------------

(25) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 4 less nodes.

----------------------------------------

(26)
TRUE
