YES

Problem 1: 

(VAR vu95NonEmpty IL L M N V V1 V2)
(STRATEGY CONTEXTSENSITIVE
(U101 1)
(U102 1)
(U103 1)
(U104 1)
(U105 1)
(U106 1)
(U11 1)
(U111 1)
(U112 1)
(U113 1)
(U114 1)
(U12 1)
(U121 1)
(U122 1)
(U13 1)
(U131 1)
(U132 1)
(U133 1)
(U134 1)
(U135 1)
(U136 1)
(U21 1)
(U22 1)
(U23 1)
(U31 1)
(U32 1)
(U33 1)
(U41 1)
(U42 1)
(U43 1)
(U44 1)
(U45 1)
(U46 1)
(U51 1)
(U52 1)
(U61 1)
(U62 1)
(U71 1)
(U81 1)
(U91 1)
(U92 1)
(U93 1)
(U94 1)
(U95 1)
(U96 1)
(isNat)
(isNatIList)
(isNatIListKind)
(isNatKind)
(isNatList)
(length 1)
(take 1 2)
(zeros)
(num0)
(cons 1)
(fSNonEmpty)
(nil)
(s 1)
(tt)
)
(RULES
U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
U104(tt,V1,V2) -> U105(isNat(V1),V2)
U105(tt,V2) -> U106(isNatIList(V2))
U106(tt) -> tt
U11(tt,V1) -> U12(isNatIListKind(V1),V1)
U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
U112(tt,L,N) -> U113(isNat(N),L,N)
U113(tt,L,N) -> U114(isNatKind(N),L)
U114(tt,L) -> s(length(L))
U12(tt,V1) -> U13(isNatList(V1))
U121(tt,IL) -> U122(isNatIListKind(IL))
U122(tt) -> nil
U13(tt) -> tt
U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
U136(tt,IL,M,N) -> cons(N,take(M,IL))
U21(tt,V1) -> U22(isNatKind(V1),V1)
U22(tt,V1) -> U23(isNat(V1))
U23(tt) -> tt
U31(tt,V) -> U32(isNatIListKind(V),V)
U32(tt,V) -> U33(isNatList(V))
U33(tt) -> tt
U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
U44(tt,V1,V2) -> U45(isNat(V1),V2)
U45(tt,V2) -> U46(isNatIList(V2))
U46(tt) -> tt
U51(tt,V2) -> U52(isNatIListKind(V2))
U52(tt) -> tt
U61(tt,V2) -> U62(isNatIListKind(V2))
U62(tt) -> tt
U71(tt) -> tt
U81(tt) -> tt
U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
U94(tt,V1,V2) -> U95(isNat(V1),V2)
U95(tt,V2) -> U96(isNatList(V2))
U96(tt) -> tt
isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
isNat(num0) -> tt
isNat(s(V1)) -> U21(isNatKind(V1),V1)
isNatIList(zeros) -> tt
isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
isNatIList(V) -> U31(isNatIListKind(V),V)
isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
isNatIListKind(zeros) -> tt
isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
isNatIListKind(nil) -> tt
isNatKind(length(V1)) -> U71(isNatIListKind(V1))
isNatKind(num0) -> tt
isNatKind(s(V1)) -> U81(isNatKind(V1))
isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
isNatList(nil) -> tt
length(cons(N,L)) -> U111(isNatList(L),L,N)
length(nil) -> num0
take(num0,IL) -> U121(isNatIList(IL),IL)
take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
zeros -> cons(num0,zeros)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U101Sharp(tt,V1,V2) -> U102Sharp(isNatKind(V1),V1,V2)
 U101Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U102Sharp(tt,V1,V2) -> U103Sharp(isNatIListKind(V2),V1,V2)
 U102Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U103Sharp(tt,V1,V2) -> U104Sharp(isNatIListKind(V2),V1,V2)
 U103Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U104Sharp(tt,V1,V2) -> U105Sharp(isNat(V1),V2)
 U104Sharp(tt,V1,V2) -> ISNAT(V1)
 U105Sharp(tt,V2) -> U106Sharp(isNatIList(V2))
 U105Sharp(tt,V2) -> ISNATILIST(V2)
 U11Sharp(tt,V1) -> U12Sharp(isNatIListKind(V1),V1)
 U11Sharp(tt,V1) -> ISNATILISTKIND(V1)
 U111Sharp(tt,L,N) -> U112Sharp(isNatIListKind(L),L,N)
 U111Sharp(tt,L,N) -> ISNATILISTKIND(L)
 U112Sharp(tt,L,N) -> U113Sharp(isNat(N),L,N)
 U112Sharp(tt,L,N) -> ISNAT(N)
 U113Sharp(tt,L,N) -> U114Sharp(isNatKind(N),L)
 U113Sharp(tt,L,N) -> ISNATKIND(N)
 U114Sharp(tt,L) -> LENGTH(L)
 U114Sharp(tt,L) -> L
 U12Sharp(tt,V1) -> U13Sharp(isNatList(V1))
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U121Sharp(tt,IL) -> U122Sharp(isNatIListKind(IL))
 U121Sharp(tt,IL) -> ISNATILISTKIND(IL)
 U131Sharp(tt,IL,M,N) -> U132Sharp(isNatIListKind(IL),IL,M,N)
 U131Sharp(tt,IL,M,N) -> ISNATILISTKIND(IL)
 U132Sharp(tt,IL,M,N) -> U133Sharp(isNat(M),IL,M,N)
 U132Sharp(tt,IL,M,N) -> ISNAT(M)
 U133Sharp(tt,IL,M,N) -> U134Sharp(isNatKind(M),IL,M,N)
 U133Sharp(tt,IL,M,N) -> ISNATKIND(M)
 U134Sharp(tt,IL,M,N) -> U135Sharp(isNat(N),IL,M,N)
 U134Sharp(tt,IL,M,N) -> ISNAT(N)
 U135Sharp(tt,IL,M,N) -> U136Sharp(isNatKind(N),IL,M,N)
 U135Sharp(tt,IL,M,N) -> ISNATKIND(N)
 U136Sharp(tt,IL,M,N) -> N
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U21Sharp(tt,V1) -> ISNATKIND(V1)
 U22Sharp(tt,V1) -> U23Sharp(isNat(V1))
 U22Sharp(tt,V1) -> ISNAT(V1)
 U31Sharp(tt,V) -> U32Sharp(isNatIListKind(V),V)
 U31Sharp(tt,V) -> ISNATILISTKIND(V)
 U32Sharp(tt,V) -> U33Sharp(isNatList(V))
 U32Sharp(tt,V) -> ISNATLIST(V)
 U41Sharp(tt,V1,V2) -> U42Sharp(isNatKind(V1),V1,V2)
 U41Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U42Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U44Sharp(tt,V1,V2) -> ISNAT(V1)
 U45Sharp(tt,V2) -> U46Sharp(isNatIList(V2))
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 U51Sharp(tt,V2) -> U52Sharp(isNatIListKind(V2))
 U51Sharp(tt,V2) -> ISNATILISTKIND(V2)
 U61Sharp(tt,V2) -> U62Sharp(isNatIListKind(V2))
 U61Sharp(tt,V2) -> ISNATILISTKIND(V2)
 U91Sharp(tt,V1,V2) -> U92Sharp(isNatKind(V1),V1,V2)
 U91Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U92Sharp(tt,V1,V2) -> U93Sharp(isNatIListKind(V2),V1,V2)
 U92Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U93Sharp(tt,V1,V2) -> U94Sharp(isNatIListKind(V2),V1,V2)
 U93Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U94Sharp(tt,V1,V2) -> U95Sharp(isNat(V1),V2)
 U94Sharp(tt,V1,V2) -> ISNAT(V1)
 U95Sharp(tt,V2) -> U96Sharp(isNatList(V2))
 U95Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(length(V1)) -> ISNATILISTKIND(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNAT(s(V1)) -> ISNATKIND(V1)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
 ISNATILIST(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATILIST(V) -> U31Sharp(isNatIListKind(V),V)
 ISNATILIST(V) -> ISNATILISTKIND(V)
 ISNATILISTKIND(take(V1,V2)) -> U61Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(take(V1,V2)) -> ISNATKIND(V1)
 ISNATILISTKIND(cons(V1,V2)) -> U51Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> U71Sharp(isNatIListKind(V1))
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> U81Sharp(isNatKind(V1))
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
 ISNATLIST(take(V1,V2)) -> U101Sharp(isNatKind(V1),V1,V2)
 ISNATLIST(take(V1,V2)) -> ISNATKIND(V1)
 ISNATLIST(cons(V1,V2)) -> U91Sharp(isNatKind(V1),V1,V2)
 ISNATLIST(cons(V1,V2)) -> ISNATKIND(V1)
 LENGTH(cons(N,L)) -> U111Sharp(isNatList(L),L,N)
 LENGTH(cons(N,L)) -> ISNATLIST(L)
 TAKE(num0,IL) -> U121Sharp(isNatIList(IL),IL)
 TAKE(num0,IL) -> ISNATILIST(IL)
 TAKE(s(M),cons(N,IL)) -> U131Sharp(isNatIList(IL),IL,M,N)
 TAKE(s(M),cons(N,IL)) -> ISNATILIST(IL)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding Rules:
 take(M,IL) -> TAKE(M,IL)
 take(M,x8) -> x8
 take(x8,IL) -> x8
 zeros -> ZEROS

Problem 1: 

SCC Processor:
-> Pairs:
 U101Sharp(tt,V1,V2) -> U102Sharp(isNatKind(V1),V1,V2)
 U101Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U102Sharp(tt,V1,V2) -> U103Sharp(isNatIListKind(V2),V1,V2)
 U102Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U103Sharp(tt,V1,V2) -> U104Sharp(isNatIListKind(V2),V1,V2)
 U103Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U104Sharp(tt,V1,V2) -> U105Sharp(isNat(V1),V2)
 U104Sharp(tt,V1,V2) -> ISNAT(V1)
 U105Sharp(tt,V2) -> U106Sharp(isNatIList(V2))
 U105Sharp(tt,V2) -> ISNATILIST(V2)
 U11Sharp(tt,V1) -> U12Sharp(isNatIListKind(V1),V1)
 U11Sharp(tt,V1) -> ISNATILISTKIND(V1)
 U111Sharp(tt,L,N) -> U112Sharp(isNatIListKind(L),L,N)
 U111Sharp(tt,L,N) -> ISNATILISTKIND(L)
 U112Sharp(tt,L,N) -> U113Sharp(isNat(N),L,N)
 U112Sharp(tt,L,N) -> ISNAT(N)
 U113Sharp(tt,L,N) -> U114Sharp(isNatKind(N),L)
 U113Sharp(tt,L,N) -> ISNATKIND(N)
 U114Sharp(tt,L) -> LENGTH(L)
 U114Sharp(tt,L) -> L
 U12Sharp(tt,V1) -> U13Sharp(isNatList(V1))
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U121Sharp(tt,IL) -> U122Sharp(isNatIListKind(IL))
 U121Sharp(tt,IL) -> ISNATILISTKIND(IL)
 U131Sharp(tt,IL,M,N) -> U132Sharp(isNatIListKind(IL),IL,M,N)
 U131Sharp(tt,IL,M,N) -> ISNATILISTKIND(IL)
 U132Sharp(tt,IL,M,N) -> U133Sharp(isNat(M),IL,M,N)
 U132Sharp(tt,IL,M,N) -> ISNAT(M)
 U133Sharp(tt,IL,M,N) -> U134Sharp(isNatKind(M),IL,M,N)
 U133Sharp(tt,IL,M,N) -> ISNATKIND(M)
 U134Sharp(tt,IL,M,N) -> U135Sharp(isNat(N),IL,M,N)
 U134Sharp(tt,IL,M,N) -> ISNAT(N)
 U135Sharp(tt,IL,M,N) -> U136Sharp(isNatKind(N),IL,M,N)
 U135Sharp(tt,IL,M,N) -> ISNATKIND(N)
 U136Sharp(tt,IL,M,N) -> N
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U21Sharp(tt,V1) -> ISNATKIND(V1)
 U22Sharp(tt,V1) -> U23Sharp(isNat(V1))
 U22Sharp(tt,V1) -> ISNAT(V1)
 U31Sharp(tt,V) -> U32Sharp(isNatIListKind(V),V)
 U31Sharp(tt,V) -> ISNATILISTKIND(V)
 U32Sharp(tt,V) -> U33Sharp(isNatList(V))
 U32Sharp(tt,V) -> ISNATLIST(V)
 U41Sharp(tt,V1,V2) -> U42Sharp(isNatKind(V1),V1,V2)
 U41Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U42Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U44Sharp(tt,V1,V2) -> ISNAT(V1)
 U45Sharp(tt,V2) -> U46Sharp(isNatIList(V2))
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 U51Sharp(tt,V2) -> U52Sharp(isNatIListKind(V2))
 U51Sharp(tt,V2) -> ISNATILISTKIND(V2)
 U61Sharp(tt,V2) -> U62Sharp(isNatIListKind(V2))
 U61Sharp(tt,V2) -> ISNATILISTKIND(V2)
 U91Sharp(tt,V1,V2) -> U92Sharp(isNatKind(V1),V1,V2)
 U91Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U92Sharp(tt,V1,V2) -> U93Sharp(isNatIListKind(V2),V1,V2)
 U92Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U93Sharp(tt,V1,V2) -> U94Sharp(isNatIListKind(V2),V1,V2)
 U93Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U94Sharp(tt,V1,V2) -> U95Sharp(isNat(V1),V2)
 U94Sharp(tt,V1,V2) -> ISNAT(V1)
 U95Sharp(tt,V2) -> U96Sharp(isNatList(V2))
 U95Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(length(V1)) -> ISNATILISTKIND(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNAT(s(V1)) -> ISNATKIND(V1)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
 ISNATILIST(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATILIST(V) -> U31Sharp(isNatIListKind(V),V)
 ISNATILIST(V) -> ISNATILISTKIND(V)
 ISNATILISTKIND(take(V1,V2)) -> U61Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(take(V1,V2)) -> ISNATKIND(V1)
 ISNATILISTKIND(cons(V1,V2)) -> U51Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> U71Sharp(isNatIListKind(V1))
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> U81Sharp(isNatKind(V1))
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
 ISNATLIST(take(V1,V2)) -> U101Sharp(isNatKind(V1),V1,V2)
 ISNATLIST(take(V1,V2)) -> ISNATKIND(V1)
 ISNATLIST(cons(V1,V2)) -> U91Sharp(isNatKind(V1),V1,V2)
 ISNATLIST(cons(V1,V2)) -> ISNATKIND(V1)
 LENGTH(cons(N,L)) -> U111Sharp(isNatList(L),L,N)
 LENGTH(cons(N,L)) -> ISNATLIST(L)
 TAKE(num0,IL) -> U121Sharp(isNatIList(IL),IL)
 TAKE(num0,IL) -> ISNATILIST(IL)
 TAKE(s(M),cons(N,IL)) -> U131Sharp(isNatIList(IL),IL,M,N)
 TAKE(s(M),cons(N,IL)) -> ISNATILIST(IL)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 take(M,IL) -> TAKE(M,IL)
 take(M,x8) -> x8
 take(x8,IL) -> x8
 zeros -> ZEROS
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U51Sharp(tt,V2) -> ISNATILISTKIND(V2)
 U61Sharp(tt,V2) -> ISNATILISTKIND(V2)
 ISNATILISTKIND(take(V1,V2)) -> U61Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(take(V1,V2)) -> ISNATKIND(V1)
 ISNATILISTKIND(cons(V1,V2)) -> U51Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
->->-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U101Sharp(tt,V1,V2) -> U102Sharp(isNatKind(V1),V1,V2)
 U102Sharp(tt,V1,V2) -> U103Sharp(isNatIListKind(V2),V1,V2)
 U103Sharp(tt,V1,V2) -> U104Sharp(isNatIListKind(V2),V1,V2)
 U104Sharp(tt,V1,V2) -> U105Sharp(isNat(V1),V2)
 U104Sharp(tt,V1,V2) -> ISNAT(V1)
 U105Sharp(tt,V2) -> ISNATILIST(V2)
 U11Sharp(tt,V1) -> U12Sharp(isNatIListKind(V1),V1)
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 U31Sharp(tt,V) -> U32Sharp(isNatIListKind(V),V)
 U32Sharp(tt,V) -> ISNATLIST(V)
 U41Sharp(tt,V1,V2) -> U42Sharp(isNatKind(V1),V1,V2)
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U44Sharp(tt,V1,V2) -> ISNAT(V1)
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 U91Sharp(tt,V1,V2) -> U92Sharp(isNatKind(V1),V1,V2)
 U92Sharp(tt,V1,V2) -> U93Sharp(isNatIListKind(V2),V1,V2)
 U93Sharp(tt,V1,V2) -> U94Sharp(isNatIListKind(V2),V1,V2)
 U94Sharp(tt,V1,V2) -> U95Sharp(isNat(V1),V2)
 U94Sharp(tt,V1,V2) -> ISNAT(V1)
 U95Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
 ISNATILIST(V) -> U31Sharp(isNatIListKind(V),V)
 ISNATLIST(take(V1,V2)) -> U101Sharp(isNatKind(V1),V1,V2)
 ISNATLIST(cons(V1,V2)) -> U91Sharp(isNatKind(V1),V1,V2)
->->-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U131Sharp(tt,IL,M,N) -> U132Sharp(isNatIListKind(IL),IL,M,N)
 U132Sharp(tt,IL,M,N) -> U133Sharp(isNat(M),IL,M,N)
 U133Sharp(tt,IL,M,N) -> U134Sharp(isNatKind(M),IL,M,N)
 U134Sharp(tt,IL,M,N) -> U135Sharp(isNat(N),IL,M,N)
 U135Sharp(tt,IL,M,N) -> U136Sharp(isNatKind(N),IL,M,N)
 U136Sharp(tt,IL,M,N) -> N
 TAKE(s(M),cons(N,IL)) -> U131Sharp(isNatIList(IL),IL,M,N)
->->-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 take(M,IL) -> TAKE(M,IL)
 take(M,x8) -> x8
 take(x8,IL) -> x8
->->Cycle:
->->-> Pairs:
 U111Sharp(tt,L,N) -> U112Sharp(isNatIListKind(L),L,N)
 U112Sharp(tt,L,N) -> U113Sharp(isNat(N),L,N)
 U113Sharp(tt,L,N) -> U114Sharp(isNatKind(N),L)
 U114Sharp(tt,L) -> LENGTH(L)
 LENGTH(cons(N,L)) -> U111Sharp(isNatList(L),L,N)
->->-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Reduction Triple Processor:
-> Pairs:
 U51Sharp(tt,V2) -> ISNATILISTKIND(V2)
 U61Sharp(tt,V2) -> ISNATILISTKIND(V2)
 ISNATILISTKIND(take(V1,V2)) -> U61Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(take(V1,V2)) -> ISNATKIND(V1)
 ISNATILISTKIND(cons(V1,V2)) -> U51Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U101](X1,X2,X3) = 0
[U102](X1,X2,X3) = 0
[U103](X1,X2,X3) = 0
[U104](X1,X2,X3) = 0
[U105](X1,X2) = 0
[U106](X) = 0
[U11](X1,X2) = 0
[U111](X1,X2,X3) = 0
[U112](X1,X2,X3) = 0
[U113](X1,X2,X3) = 0
[U114](X1,X2) = 0
[U12](X1,X2) = 0
[U121](X1,X2) = 0
[U122](X) = 0
[U13](X) = 0
[U131](X1,X2,X3,X4) = 0
[U132](X1,X2,X3,X4) = 0
[U133](X1,X2,X3,X4) = 0
[U134](X1,X2,X3,X4) = 0
[U135](X1,X2,X3,X4) = 0
[U136](X1,X2,X3,X4) = 0
[U21](X1,X2) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X1,X2) = 0
[U33](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2,X3) = 0
[U43](X1,X2,X3) = 0
[U44](X1,X2,X3) = 0
[U45](X1,X2) = 0
[U46](X) = 0
[U51](X1,X2) = X1 + 2.X2 + 2
[U52](X) = 2.X
[U61](X1,X2) = 2
[U62](X) = 2
[U71](X) = 2.X + 2
[U81](X) = 2.X
[U91](X1,X2,X3) = 0
[U92](X1,X2,X3) = 0
[U93](X1,X2,X3) = 0
[U94](X1,X2,X3) = 0
[U95](X1,X2) = 0
[U96](X) = 0
[isNat](X) = 0
[isNatIList](X) = 0
[isNatIListKind](X) = X + 2
[isNatKind](X) = 2.X + 2
[isNatList](X) = 0
[length](X) = 2.X + 2
[take](X1,X2) = 2.X1 + 2.X2
[zeros] = 1
[num0] = 2
[cons](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[nil] = 1
[s](X) = 2.X + 2
[tt] = 2
[U101Sharp](X1,X2,X3) = 0
[U102Sharp](X1,X2,X3) = 0
[U103Sharp](X1,X2,X3) = 0
[U104Sharp](X1,X2,X3) = 0
[U105Sharp](X1,X2) = 0
[U106Sharp](X) = 0
[U11Sharp](X1,X2) = 0
[U111Sharp](X1,X2,X3) = 0
[U112Sharp](X1,X2,X3) = 0
[U113Sharp](X1,X2,X3) = 0
[U114Sharp](X1,X2) = 0
[U12Sharp](X1,X2) = 0
[U121Sharp](X1,X2) = 0
[U122Sharp](X) = 0
[U13Sharp](X) = 0
[U131Sharp](X1,X2,X3,X4) = 0
[U132Sharp](X1,X2,X3,X4) = 0
[U133Sharp](X1,X2,X3,X4) = 0
[U134Sharp](X1,X2,X3,X4) = 0
[U135Sharp](X1,X2,X3,X4) = 0
[U136Sharp](X1,X2,X3,X4) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X1,X2) = 0
[U33Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2,X3) = 0
[U43Sharp](X1,X2,X3) = 0
[U44Sharp](X1,X2,X3) = 0
[U45Sharp](X1,X2) = 0
[U46Sharp](X) = 0
[U51Sharp](X1,X2) = X1 + 2.X2 + 2
[U52Sharp](X) = 0
[U61Sharp](X1,X2) = 2.X2 + 2
[U62Sharp](X) = 0
[U71Sharp](X) = 0
[U81Sharp](X) = 0
[U91Sharp](X1,X2,X3) = 0
[U92Sharp](X1,X2,X3) = 0
[U93Sharp](X1,X2,X3) = 0
[U94Sharp](X1,X2,X3) = 0
[U95Sharp](X1,X2) = 0
[U96Sharp](X) = 0
[ISNAT](X) = 0
[ISNATILIST](X) = 0
[ISNATILISTKIND](X) = 2.X + 2
[ISNATKIND](X) = 2.X + 1
[ISNATLIST](X) = 0
[LENGTH](X) = 0
[TAKE](X1,X2) = 0
[ZEROS] = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 U61Sharp(tt,V2) -> ISNATILISTKIND(V2)
 ISNATILISTKIND(take(V1,V2)) -> U61Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(take(V1,V2)) -> ISNATKIND(V1)
 ISNATILISTKIND(cons(V1,V2)) -> U51Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U61Sharp(tt,V2) -> ISNATILISTKIND(V2)
 ISNATILISTKIND(take(V1,V2)) -> U61Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(take(V1,V2)) -> ISNATKIND(V1)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
->->-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty

Problem 1.1: 

SubNColl Processor:
-> Pairs:
 U61Sharp(tt,V2) -> ISNATILISTKIND(V2)
 ISNATILISTKIND(take(V1,V2)) -> U61Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(take(V1,V2)) -> ISNATKIND(V1)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Projection:
 pi(U61Sharp) = 2
 pi(ISNATILISTKIND) = 1
 pi(ISNATKIND) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 U61Sharp(tt,V2) -> ISNATILISTKIND(V2)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Triple Processor:
-> Pairs:
 U101Sharp(tt,V1,V2) -> U102Sharp(isNatKind(V1),V1,V2)
 U102Sharp(tt,V1,V2) -> U103Sharp(isNatIListKind(V2),V1,V2)
 U103Sharp(tt,V1,V2) -> U104Sharp(isNatIListKind(V2),V1,V2)
 U104Sharp(tt,V1,V2) -> U105Sharp(isNat(V1),V2)
 U104Sharp(tt,V1,V2) -> ISNAT(V1)
 U105Sharp(tt,V2) -> ISNATILIST(V2)
 U11Sharp(tt,V1) -> U12Sharp(isNatIListKind(V1),V1)
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 U31Sharp(tt,V) -> U32Sharp(isNatIListKind(V),V)
 U32Sharp(tt,V) -> ISNATLIST(V)
 U41Sharp(tt,V1,V2) -> U42Sharp(isNatKind(V1),V1,V2)
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U44Sharp(tt,V1,V2) -> ISNAT(V1)
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 U91Sharp(tt,V1,V2) -> U92Sharp(isNatKind(V1),V1,V2)
 U92Sharp(tt,V1,V2) -> U93Sharp(isNatIListKind(V2),V1,V2)
 U93Sharp(tt,V1,V2) -> U94Sharp(isNatIListKind(V2),V1,V2)
 U94Sharp(tt,V1,V2) -> U95Sharp(isNat(V1),V2)
 U94Sharp(tt,V1,V2) -> ISNAT(V1)
 U95Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
 ISNATILIST(V) -> U31Sharp(isNatIListKind(V),V)
 ISNATLIST(take(V1,V2)) -> U101Sharp(isNatKind(V1),V1,V2)
 ISNATLIST(cons(V1,V2)) -> U91Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U101](X1,X2,X3) = 2.X1 + 2.X3
[U102](X1,X2,X3) = X1 + 2.X3 + 2
[U103](X1,X2,X3) = X3 + 2
[U104](X1,X2,X3) = X1 + 2
[U105](X1,X2) = X1 + 2
[U106](X) = 2
[U11](X1,X2) = 2
[U111](X1,X2,X3) = 0
[U112](X1,X2,X3) = 0
[U113](X1,X2,X3) = 0
[U114](X1,X2) = 0
[U12](X1,X2) = 2
[U121](X1,X2) = 0
[U122](X) = 0
[U13](X) = 2
[U131](X1,X2,X3,X4) = 0
[U132](X1,X2,X3,X4) = 0
[U133](X1,X2,X3,X4) = 0
[U134](X1,X2,X3,X4) = 0
[U135](X1,X2,X3,X4) = 0
[U136](X1,X2,X3,X4) = 0
[U21](X1,X2) = 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = X1 + X2 + 1
[U32](X1,X2) = X1 + 2
[U33](X) = 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U43](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U44](X1,X2,X3) = 2.X1 + 2.X2 + 2
[U45](X1,X2) = 2.X1 + 2
[U46](X) = 2
[U51](X1,X2) = 2.X2 + 2
[U52](X) = X + 1
[U61](X1,X2) = 2.X2 + 2
[U62](X) = 2.X + 2
[U71](X) = 2
[U81](X) = 2
[U91](X1,X2,X3) = 2.X1 + 2.X3 + 2
[U92](X1,X2,X3) = 2.X3 + 2
[U93](X1,X2,X3) = X1 + X3 + 2
[U94](X1,X2,X3) = X1 + 2
[U95](X1,X2) = 2.X1
[U96](X) = 2
[isNat](X) = 2
[isNatIList](X) = 2.X + 2
[isNatIListKind](X) = X
[isNatKind](X) = 2
[isNatList](X) = 2.X + 2
[length](X) = 2.X + 2
[take](X1,X2) = 2.X1 + 2.X2 + 2
[zeros] = 2
[num0] = 2
[cons](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[nil] = 2
[s](X) = 2.X
[tt] = 2
[U101Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U102Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U103Sharp](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[U104Sharp](X1,X2,X3) = 2.X2 + X3 + 2
[U105Sharp](X1,X2) = X1 + X2
[U106Sharp](X) = 0
[U11Sharp](X1,X2) = 2.X1 + 2.X2 + 2
[U111Sharp](X1,X2,X3) = 0
[U112Sharp](X1,X2,X3) = 0
[U113Sharp](X1,X2,X3) = 0
[U114Sharp](X1,X2) = 0
[U12Sharp](X1,X2) = 2.X2 + 2
[U121Sharp](X1,X2) = 0
[U122Sharp](X) = 0
[U13Sharp](X) = 0
[U131Sharp](X1,X2,X3,X4) = 0
[U132Sharp](X1,X2,X3,X4) = 0
[U133Sharp](X1,X2,X3,X4) = 0
[U134Sharp](X1,X2,X3,X4) = 0
[U135Sharp](X1,X2,X3,X4) = 0
[U136Sharp](X1,X2,X3,X4) = 0
[U21Sharp](X1,X2) = 2.X2 + 2
[U22Sharp](X1,X2) = 2.X2 + 2
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = X2 + 2
[U32Sharp](X1,X2) = X2 + 2
[U33Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U42Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U43Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 1
[U44Sharp](X1,X2,X3) = X1 + 2.X2 + X3 + 1
[U45Sharp](X1,X2) = X1 + X2 + 1
[U46Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X) = 0
[U81Sharp](X) = 0
[U91Sharp](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U92Sharp](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U93Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U94Sharp](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[U95Sharp](X1,X2) = 2.X1 + X2
[U96Sharp](X) = 0
[ISNAT](X) = 2.X + 2
[ISNATILIST](X) = X + 2
[ISNATILISTKIND](X) = 0
[ISNATKIND](X) = 0
[ISNATLIST](X) = X + 2
[LENGTH](X) = 0
[TAKE](X1,X2) = 0
[ZEROS] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 U102Sharp(tt,V1,V2) -> U103Sharp(isNatIListKind(V2),V1,V2)
 U103Sharp(tt,V1,V2) -> U104Sharp(isNatIListKind(V2),V1,V2)
 U104Sharp(tt,V1,V2) -> U105Sharp(isNat(V1),V2)
 U104Sharp(tt,V1,V2) -> ISNAT(V1)
 U105Sharp(tt,V2) -> ISNATILIST(V2)
 U11Sharp(tt,V1) -> U12Sharp(isNatIListKind(V1),V1)
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 U31Sharp(tt,V) -> U32Sharp(isNatIListKind(V),V)
 U32Sharp(tt,V) -> ISNATLIST(V)
 U41Sharp(tt,V1,V2) -> U42Sharp(isNatKind(V1),V1,V2)
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U44Sharp(tt,V1,V2) -> ISNAT(V1)
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 U91Sharp(tt,V1,V2) -> U92Sharp(isNatKind(V1),V1,V2)
 U92Sharp(tt,V1,V2) -> U93Sharp(isNatIListKind(V2),V1,V2)
 U93Sharp(tt,V1,V2) -> U94Sharp(isNatIListKind(V2),V1,V2)
 U94Sharp(tt,V1,V2) -> U95Sharp(isNat(V1),V2)
 U94Sharp(tt,V1,V2) -> ISNAT(V1)
 U95Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
 ISNATILIST(V) -> U31Sharp(isNatIListKind(V),V)
 ISNATLIST(take(V1,V2)) -> U101Sharp(isNatKind(V1),V1,V2)
 ISNATLIST(cons(V1,V2)) -> U91Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U11Sharp(tt,V1) -> U12Sharp(isNatIListKind(V1),V1)
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 U91Sharp(tt,V1,V2) -> U92Sharp(isNatKind(V1),V1,V2)
 U92Sharp(tt,V1,V2) -> U93Sharp(isNatIListKind(V2),V1,V2)
 U93Sharp(tt,V1,V2) -> U94Sharp(isNatIListKind(V2),V1,V2)
 U94Sharp(tt,V1,V2) -> U95Sharp(isNat(V1),V2)
 U94Sharp(tt,V1,V2) -> ISNAT(V1)
 U95Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNATLIST(cons(V1,V2)) -> U91Sharp(isNatKind(V1),V1,V2)
->->-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U41Sharp(tt,V1,V2) -> U42Sharp(isNatKind(V1),V1,V2)
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
->->-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty


The problem is decomposed in 2 subproblems.

Problem 1.2.1: 

Reduction Triple Processor:
-> Pairs:
 U11Sharp(tt,V1) -> U12Sharp(isNatIListKind(V1),V1)
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 U91Sharp(tt,V1,V2) -> U92Sharp(isNatKind(V1),V1,V2)
 U92Sharp(tt,V1,V2) -> U93Sharp(isNatIListKind(V2),V1,V2)
 U93Sharp(tt,V1,V2) -> U94Sharp(isNatIListKind(V2),V1,V2)
 U94Sharp(tt,V1,V2) -> U95Sharp(isNat(V1),V2)
 U94Sharp(tt,V1,V2) -> ISNAT(V1)
 U95Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNATLIST(cons(V1,V2)) -> U91Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U101](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U102](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[U103](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[U104](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[U105](X1,X2) = X1 + 2.X2 + 1
[U106](X) = X + 1
[U11](X1,X2) = X1 + 2.X2
[U111](X1,X2,X3) = 0
[U112](X1,X2,X3) = 0
[U113](X1,X2,X3) = 0
[U114](X1,X2) = 0
[U12](X1,X2) = 2.X2 + 1
[U121](X1,X2) = 0
[U122](X) = 0
[U13](X) = X + 1
[U131](X1,X2,X3,X4) = 0
[U132](X1,X2,X3,X4) = 0
[U133](X1,X2,X3,X4) = 0
[U134](X1,X2,X3,X4) = 0
[U135](X1,X2,X3,X4) = 0
[U136](X1,X2,X3,X4) = 0
[U21](X1,X2) = 2.X2 + 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = X1 + 2.X2
[U32](X1,X2) = 2.X2 + 2
[U33](X) = X + 2
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[U43](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[U44](X1,X2,X3) = 2.X1 + X2 + 2.X3
[U45](X1,X2) = X1 + X2
[U46](X) = 2
[U51](X1,X2) = 2
[U52](X) = X
[U61](X1,X2) = 2
[U62](X) = X
[U71](X) = 2
[U81](X) = 2.X + 1
[U91](X1,X2,X3) = 2.X1 + 2.X2 + 2
[U92](X1,X2,X3) = 2.X1 + 2
[U93](X1,X2,X3) = X1 + 2
[U94](X1,X2,X3) = X1 + 2
[U95](X1,X2) = 2
[U96](X) = 2
[isNat](X) = X
[isNatIList](X) = 2.X + 2
[isNatIListKind](X) = 2
[isNatKind](X) = X + 1
[isNatList](X) = 2.X
[length](X) = 2.X + 2
[take](X1,X2) = 2.X1 + 2.X2 + 2
[zeros] = 2
[num0] = 2
[cons](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[nil] = 2
[s](X) = 2.X + 2
[tt] = 2
[U101Sharp](X1,X2,X3) = 0
[U102Sharp](X1,X2,X3) = 0
[U103Sharp](X1,X2,X3) = 0
[U104Sharp](X1,X2,X3) = 0
[U105Sharp](X1,X2) = 0
[U106Sharp](X) = 0
[U11Sharp](X1,X2) = X1 + 2.X2 + 1
[U111Sharp](X1,X2,X3) = 0
[U112Sharp](X1,X2,X3) = 0
[U113Sharp](X1,X2,X3) = 0
[U114Sharp](X1,X2) = 0
[U12Sharp](X1,X2) = 2.X2 + 2
[U121Sharp](X1,X2) = 0
[U122Sharp](X) = 0
[U13Sharp](X) = 0
[U131Sharp](X1,X2,X3,X4) = 0
[U132Sharp](X1,X2,X3,X4) = 0
[U133Sharp](X1,X2,X3,X4) = 0
[U134Sharp](X1,X2,X3,X4) = 0
[U135Sharp](X1,X2,X3,X4) = 0
[U136Sharp](X1,X2,X3,X4) = 0
[U21Sharp](X1,X2) = X1 + X2 + 1
[U22Sharp](X1,X2) = X2 + 1
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X1,X2) = 0
[U33Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2,X3) = 0
[U43Sharp](X1,X2,X3) = 0
[U44Sharp](X1,X2,X3) = 0
[U45Sharp](X1,X2) = 0
[U46Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X) = 0
[U81Sharp](X) = 0
[U91Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U92Sharp](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[U93Sharp](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[U94Sharp](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[U95Sharp](X1,X2) = X1 + 2.X2 + 2
[U96Sharp](X) = 0
[ISNAT](X) = X + 1
[ISNATILIST](X) = 0
[ISNATILISTKIND](X) = 0
[ISNATKIND](X) = 0
[ISNATLIST](X) = 2.X + 2
[LENGTH](X) = 0
[TAKE](X1,X2) = 0
[ZEROS] = 0

Problem 1.2.1: 

SCC Processor:
-> Pairs:
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 U91Sharp(tt,V1,V2) -> U92Sharp(isNatKind(V1),V1,V2)
 U92Sharp(tt,V1,V2) -> U93Sharp(isNatIListKind(V2),V1,V2)
 U93Sharp(tt,V1,V2) -> U94Sharp(isNatIListKind(V2),V1,V2)
 U94Sharp(tt,V1,V2) -> U95Sharp(isNat(V1),V2)
 U94Sharp(tt,V1,V2) -> ISNAT(V1)
 U95Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNATLIST(cons(V1,V2)) -> U91Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
->->-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U91Sharp(tt,V1,V2) -> U92Sharp(isNatKind(V1),V1,V2)
 U92Sharp(tt,V1,V2) -> U93Sharp(isNatIListKind(V2),V1,V2)
 U93Sharp(tt,V1,V2) -> U94Sharp(isNatIListKind(V2),V1,V2)
 U94Sharp(tt,V1,V2) -> U95Sharp(isNat(V1),V2)
 U95Sharp(tt,V2) -> ISNATLIST(V2)
 ISNATLIST(cons(V1,V2)) -> U91Sharp(isNatKind(V1),V1,V2)
->->-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty


The problem is decomposed in 2 subproblems.

Problem 1.2.1.1: 

SubNColl Processor:
-> Pairs:
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Projection:
 pi(U21Sharp) = 2
 pi(U22Sharp) = 2
 pi(ISNAT) = 1

Problem 1.2.1.1: 

SCC Processor:
-> Pairs:
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2.1.2: 

Reduction Triple Processor:
-> Pairs:
 U91Sharp(tt,V1,V2) -> U92Sharp(isNatKind(V1),V1,V2)
 U92Sharp(tt,V1,V2) -> U93Sharp(isNatIListKind(V2),V1,V2)
 U93Sharp(tt,V1,V2) -> U94Sharp(isNatIListKind(V2),V1,V2)
 U94Sharp(tt,V1,V2) -> U95Sharp(isNat(V1),V2)
 U95Sharp(tt,V2) -> ISNATLIST(V2)
 ISNATLIST(cons(V1,V2)) -> U91Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U101](X1,X2,X3) = 2.X1 + 2.X3 + 2
[U102](X1,X2,X3) = 2.X3 + 2
[U103](X1,X2,X3) = 2.X3 + 2
[U104](X1,X2,X3) = 2.X1 + 2
[U105](X1,X2) = 2
[U106](X) = 2
[U11](X1,X2) = 2.X1 + 2
[U111](X1,X2,X3) = 0
[U112](X1,X2,X3) = 0
[U113](X1,X2,X3) = 0
[U114](X1,X2) = 0
[U12](X1,X2) = 2
[U121](X1,X2) = 0
[U122](X) = 0
[U13](X) = 2
[U131](X1,X2,X3,X4) = 0
[U132](X1,X2,X3,X4) = 0
[U133](X1,X2,X3,X4) = 0
[U134](X1,X2,X3,X4) = 0
[U135](X1,X2,X3,X4) = 0
[U136](X1,X2,X3,X4) = 0
[U21](X1,X2) = 2.X2 + 2
[U22](X1,X2) = 2.X2 + 2
[U23](X) = 2.X + 2
[U31](X1,X2) = 2.X2 + 2
[U32](X1,X2) = 2.X1 + 2
[U33](X) = 2
[U41](X1,X2,X3) = 2.X1 + 2.X3 + 2
[U42](X1,X2,X3) = 2.X3 + 2
[U43](X1,X2,X3) = 2.X1 + 2
[U44](X1,X2,X3) = 2
[U45](X1,X2) = 2
[U46](X) = 2
[U51](X1,X2) = 2
[U52](X) = 2
[U61](X1,X2) = 2.X2 + 2
[U62](X) = 2.X + 1
[U71](X) = X + 1
[U81](X) = X + 1
[U91](X1,X2,X3) = X1 + 2.X2 + 2
[U92](X1,X2,X3) = X1 + 2
[U93](X1,X2,X3) = 2
[U94](X1,X2,X3) = 2
[U95](X1,X2) = 2
[U96](X) = 2
[isNat](X) = X
[isNatIList](X) = 2.X + 2
[isNatIListKind](X) = X
[isNatKind](X) = 2.X + 2
[isNatList](X) = 2.X + 2
[length](X) = 2.X + 2
[take](X1,X2) = 2.X1 + 2.X2 + 2
[zeros] = 2
[num0] = 2
[cons](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[nil] = 2
[s](X) = 2.X + 2
[tt] = 2
[U101Sharp](X1,X2,X3) = 0
[U102Sharp](X1,X2,X3) = 0
[U103Sharp](X1,X2,X3) = 0
[U104Sharp](X1,X2,X3) = 0
[U105Sharp](X1,X2) = 0
[U106Sharp](X) = 0
[U11Sharp](X1,X2) = 0
[U111Sharp](X1,X2,X3) = 0
[U112Sharp](X1,X2,X3) = 0
[U113Sharp](X1,X2,X3) = 0
[U114Sharp](X1,X2) = 0
[U12Sharp](X1,X2) = 0
[U121Sharp](X1,X2) = 0
[U122Sharp](X) = 0
[U13Sharp](X) = 0
[U131Sharp](X1,X2,X3,X4) = 0
[U132Sharp](X1,X2,X3,X4) = 0
[U133Sharp](X1,X2,X3,X4) = 0
[U134Sharp](X1,X2,X3,X4) = 0
[U135Sharp](X1,X2,X3,X4) = 0
[U136Sharp](X1,X2,X3,X4) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X1,X2) = 0
[U33Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2,X3) = 0
[U43Sharp](X1,X2,X3) = 0
[U44Sharp](X1,X2,X3) = 0
[U45Sharp](X1,X2) = 0
[U46Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X) = 0
[U81Sharp](X) = 0
[U91Sharp](X1,X2,X3) = X1 + 2.X3 + 2
[U92Sharp](X1,X2,X3) = 2.X3 + 2
[U93Sharp](X1,X2,X3) = 2.X3 + 2
[U94Sharp](X1,X2,X3) = X1 + X3 + 2
[U95Sharp](X1,X2) = X2 + 2
[U96Sharp](X) = 0
[ISNAT](X) = 0
[ISNATILIST](X) = 0
[ISNATILISTKIND](X) = 0
[ISNATKIND](X) = 0
[ISNATLIST](X) = X + 2
[LENGTH](X) = 0
[TAKE](X1,X2) = 0
[ZEROS] = 0

Problem 1.2.1.2: 

SCC Processor:
-> Pairs:
 U92Sharp(tt,V1,V2) -> U93Sharp(isNatIListKind(V2),V1,V2)
 U93Sharp(tt,V1,V2) -> U94Sharp(isNatIListKind(V2),V1,V2)
 U94Sharp(tt,V1,V2) -> U95Sharp(isNat(V1),V2)
 U95Sharp(tt,V2) -> ISNATLIST(V2)
 ISNATLIST(cons(V1,V2)) -> U91Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2.2: 

Reduction Triple Processor:
-> Pairs:
 U41Sharp(tt,V1,V2) -> U42Sharp(isNatKind(V1),V1,V2)
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U101](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U102](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U103](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U104](X1,X2,X3) = 2.X1 + 2.X2
[U105](X1,X2) = 2.X1 + 2
[U106](X) = 2
[U11](X1,X2) = 2.X1 + 2
[U111](X1,X2,X3) = 0
[U112](X1,X2,X3) = 0
[U113](X1,X2,X3) = 0
[U114](X1,X2) = 0
[U12](X1,X2) = 2
[U121](X1,X2) = 0
[U122](X) = 0
[U13](X) = 2
[U131](X1,X2,X3,X4) = 0
[U132](X1,X2,X3,X4) = 0
[U133](X1,X2,X3,X4) = 0
[U134](X1,X2,X3,X4) = 0
[U135](X1,X2,X3,X4) = 0
[U136](X1,X2,X3,X4) = 0
[U21](X1,X2) = 2.X2 + 1
[U22](X1,X2) = X1 + 1
[U23](X) = 2
[U31](X1,X2) = 2.X2 + 2
[U32](X1,X2) = 2.X1 + 2
[U33](X) = 2
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 1
[U42](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U43](X1,X2,X3) = 2.X1 + 2.X2 + 2
[U44](X1,X2,X3) = 2.X2 + 2
[U45](X1,X2) = 2.X1
[U46](X) = 2
[U51](X1,X2) = X1 + 2.X2 + 2
[U52](X) = X + 2
[U61](X1,X2) = X1 + X2 + 2
[U62](X) = X + 2
[U71](X) = 2.X
[U81](X) = 2.X
[U91](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 1
[U92](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U93](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[U94](X1,X2,X3) = X1 + 2.X2 + 2
[U95](X1,X2) = X1 + 2
[U96](X) = 2
[isNat](X) = X + 1
[isNatIList](X) = 2.X + 2
[isNatIListKind](X) = X
[isNatKind](X) = 2.X
[isNatList](X) = 2.X
[length](X) = 2.X + 2
[take](X1,X2) = 2.X1 + X2 + 2
[zeros] = 2
[num0] = 1
[cons](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[nil] = 2
[s](X) = 2.X
[tt] = 2
[U101Sharp](X1,X2,X3) = 0
[U102Sharp](X1,X2,X3) = 0
[U103Sharp](X1,X2,X3) = 0
[U104Sharp](X1,X2,X3) = 0
[U105Sharp](X1,X2) = 0
[U106Sharp](X) = 0
[U11Sharp](X1,X2) = 0
[U111Sharp](X1,X2,X3) = 0
[U112Sharp](X1,X2,X3) = 0
[U113Sharp](X1,X2,X3) = 0
[U114Sharp](X1,X2) = 0
[U12Sharp](X1,X2) = 0
[U121Sharp](X1,X2) = 0
[U122Sharp](X) = 0
[U13Sharp](X) = 0
[U131Sharp](X1,X2,X3,X4) = 0
[U132Sharp](X1,X2,X3,X4) = 0
[U133Sharp](X1,X2,X3,X4) = 0
[U134Sharp](X1,X2,X3,X4) = 0
[U135Sharp](X1,X2,X3,X4) = 0
[U136Sharp](X1,X2,X3,X4) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X1,X2) = 0
[U33Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 1
[U42Sharp](X1,X2,X3) = X1 + 2.X3
[U43Sharp](X1,X2,X3) = 2.X3 + 2
[U44Sharp](X1,X2,X3) = X1 + X3 + 2
[U45Sharp](X1,X2) = X2 + 2
[U46Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X) = 0
[U81Sharp](X) = 0
[U91Sharp](X1,X2,X3) = 0
[U92Sharp](X1,X2,X3) = 0
[U93Sharp](X1,X2,X3) = 0
[U94Sharp](X1,X2,X3) = 0
[U95Sharp](X1,X2) = 0
[U96Sharp](X) = 0
[ISNAT](X) = 0
[ISNATILIST](X) = X + 1
[ISNATILISTKIND](X) = 0
[ISNATKIND](X) = 0
[ISNATLIST](X) = 0
[LENGTH](X) = 0
[TAKE](X1,X2) = 0
[ZEROS] = 0

Problem 1.2.2: 

SCC Processor:
-> Pairs:
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

SubNColl Processor:
-> Pairs:
 U131Sharp(tt,IL,M,N) -> U132Sharp(isNatIListKind(IL),IL,M,N)
 U132Sharp(tt,IL,M,N) -> U133Sharp(isNat(M),IL,M,N)
 U133Sharp(tt,IL,M,N) -> U134Sharp(isNatKind(M),IL,M,N)
 U134Sharp(tt,IL,M,N) -> U135Sharp(isNat(N),IL,M,N)
 U135Sharp(tt,IL,M,N) -> U136Sharp(isNatKind(N),IL,M,N)
 U136Sharp(tt,IL,M,N) -> N
 TAKE(s(M),cons(N,IL)) -> U131Sharp(isNatIList(IL),IL,M,N)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 take(M,IL) -> TAKE(M,IL)
 take(M,x8) -> x8
 take(x8,IL) -> x8
->Projection:
 pi(U131Sharp) = 4
 pi(U132Sharp) = 4
 pi(U133Sharp) = 4
 pi(U134Sharp) = 4
 pi(U135Sharp) = 4
 pi(U136Sharp) = 4
 pi(TAKE) = 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 U131Sharp(tt,IL,M,N) -> U132Sharp(isNatIListKind(IL),IL,M,N)
 U132Sharp(tt,IL,M,N) -> U133Sharp(isNat(M),IL,M,N)
 U133Sharp(tt,IL,M,N) -> U134Sharp(isNatKind(M),IL,M,N)
 U134Sharp(tt,IL,M,N) -> U135Sharp(isNat(N),IL,M,N)
 U135Sharp(tt,IL,M,N) -> U136Sharp(isNatKind(N),IL,M,N)
 U136Sharp(tt,IL,M,N) -> N
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Reduction Triple Processor:
-> Pairs:
 U111Sharp(tt,L,N) -> U112Sharp(isNatIListKind(L),L,N)
 U112Sharp(tt,L,N) -> U113Sharp(isNat(N),L,N)
 U113Sharp(tt,L,N) -> U114Sharp(isNatKind(N),L)
 U114Sharp(tt,L) -> LENGTH(L)
 LENGTH(cons(N,L)) -> U111Sharp(isNatList(L),L,N)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U101](X1,X2,X3) = X2 + X3 + 1
[U102](X1,X2,X3) = X2 + X3 + 1
[U103](X1,X2,X3) = X2 + X3 + 1
[U104](X1,X2,X3) = X2 + X3 + 1
[U105](X1,X2) = X1 + X2
[U106](X) = X
[U11](X1,X2) = X2 + 1
[U111](X1,X2,X3) = 2.X2
[U112](X1,X2,X3) = 2.X2
[U113](X1,X2,X3) = 2.X2
[U114](X1,X2) = 2.X2
[U12](X1,X2) = X2 + 1
[U121](X1,X2) = X1
[U122](X) = 2
[U13](X) = X
[U131](X1,X2,X3,X4) = 2.X2 + 2.X3
[U132](X1,X2,X3,X4) = 2.X2 + 2.X3
[U133](X1,X2,X3,X4) = 2.X2 + 2.X3
[U134](X1,X2,X3,X4) = 2.X2 + 2.X3
[U135](X1,X2,X3,X4) = 2.X2 + 2.X3
[U136](X1,X2,X3,X4) = 2.X2 + 2.X3
[U21](X1,X2) = 2.X2 + 1
[U22](X1,X2) = 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = X2 + 2
[U32](X1,X2) = X2 + 2
[U33](X) = X
[U41](X1,X2,X3) = 2.X3 + 2
[U42](X1,X2,X3) = 2.X3 + 2
[U43](X1,X2,X3) = X1 + 2.X3
[U44](X1,X2,X3) = X1 + 2.X3
[U45](X1,X2) = X2 + 2
[U46](X) = 2
[U51](X1,X2) = 2
[U52](X) = 2
[U61](X1,X2) = 2
[U62](X) = X
[U71](X) = 2
[U81](X) = 2
[U91](X1,X2,X3) = 2.X3 + 1
[U92](X1,X2,X3) = X3 + 1
[U93](X1,X2,X3) = X3 + 1
[U94](X1,X2,X3) = X3 + 1
[U95](X1,X2) = X2 + 1
[U96](X) = X
[isNat](X) = X + 1
[isNatIList](X) = X + 2
[isNatIListKind](X) = 2
[isNatKind](X) = 2
[isNatList](X) = X + 1
[length](X) = X
[take](X1,X2) = X1 + X2
[zeros] = 0
[num0] = 2
[cons](X1,X2) = 2.X2
[fSNonEmpty] = 0
[nil] = 2
[s](X) = 2.X
[tt] = 2
[U101Sharp](X1,X2,X3) = 0
[U102Sharp](X1,X2,X3) = 0
[U103Sharp](X1,X2,X3) = 0
[U104Sharp](X1,X2,X3) = 0
[U105Sharp](X1,X2) = 0
[U106Sharp](X) = 0
[U11Sharp](X1,X2) = 0
[U111Sharp](X1,X2,X3) = X1 + 2.X2 + 1
[U112Sharp](X1,X2,X3) = 2.X2 + 2
[U113Sharp](X1,X2,X3) = 2.X2 + 2
[U114Sharp](X1,X2) = 2.X2 + 2
[U12Sharp](X1,X2) = 0
[U121Sharp](X1,X2) = 0
[U122Sharp](X) = 0
[U13Sharp](X) = 0
[U131Sharp](X1,X2,X3,X4) = 0
[U132Sharp](X1,X2,X3,X4) = 0
[U133Sharp](X1,X2,X3,X4) = 0
[U134Sharp](X1,X2,X3,X4) = 0
[U135Sharp](X1,X2,X3,X4) = 0
[U136Sharp](X1,X2,X3,X4) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X1,X2) = 0
[U33Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2,X3) = 0
[U43Sharp](X1,X2,X3) = 0
[U44Sharp](X1,X2,X3) = 0
[U45Sharp](X1,X2) = 0
[U46Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X) = 0
[U81Sharp](X) = 0
[U91Sharp](X1,X2,X3) = 0
[U92Sharp](X1,X2,X3) = 0
[U93Sharp](X1,X2,X3) = 0
[U94Sharp](X1,X2,X3) = 0
[U95Sharp](X1,X2) = 0
[U96Sharp](X) = 0
[ISNAT](X) = 0
[ISNATILIST](X) = 0
[ISNATILISTKIND](X) = 0
[ISNATKIND](X) = 0
[ISNATLIST](X) = 0
[LENGTH](X) = 2.X + 2
[TAKE](X1,X2) = 0
[ZEROS] = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 U112Sharp(tt,L,N) -> U113Sharp(isNat(N),L,N)
 U113Sharp(tt,L,N) -> U114Sharp(isNatKind(N),L)
 U114Sharp(tt,L) -> LENGTH(L)
 LENGTH(cons(N,L)) -> U111Sharp(isNatList(L),L,N)
-> Rules:
 U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2)
 U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2)
 U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2)
 U104(tt,V1,V2) -> U105(isNat(V1),V2)
 U105(tt,V2) -> U106(isNatIList(V2))
 U106(tt) -> tt
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U111(tt,L,N) -> U112(isNatIListKind(L),L,N)
 U112(tt,L,N) -> U113(isNat(N),L,N)
 U113(tt,L,N) -> U114(isNatKind(N),L)
 U114(tt,L) -> s(length(L))
 U12(tt,V1) -> U13(isNatList(V1))
 U121(tt,IL) -> U122(isNatIListKind(IL))
 U122(tt) -> nil
 U13(tt) -> tt
 U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N)
 U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N)
 U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N)
 U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N)
 U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N)
 U136(tt,IL,M,N) -> cons(N,take(M,IL))
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt,V2) -> U62(isNatIListKind(V2))
 U62(tt) -> tt
 U71(tt) -> tt
 U81(tt) -> tt
 U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2)
 U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2)
 U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2)
 U94(tt,V1,V2) -> U95(isNat(V1),V2)
 U95(tt,V2) -> U96(isNatList(V2))
 U96(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U71(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U81(isNatKind(V1))
 isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2)
 isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U111(isNatList(L),L,N)
 length(nil) -> num0
 take(num0,IL) -> U121(isNatIList(IL),IL)
 take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
