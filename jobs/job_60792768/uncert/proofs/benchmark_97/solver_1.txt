YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/fTIwq.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given CSR could be proven:

(0) CSR
(1) CSRRRRProof [EQUIVALENT, 35 ms]
(2) CSR
(3) CSRRRRProof [EQUIVALENT, 0 ms]
(4) CSR
(5) CSRRRRProof [EQUIVALENT, 0 ms]
(6) CSR
(7) CSDependencyPairsProof [EQUIVALENT, 0 ms]
(8) QCSDP
(9) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
(10) TRUE


----------------------------------------

(0)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   f_1(x, x) -> f_1(i_0(x), g_1(g_1(x)))
   f_1(x, y) -> x
   g_1(x) -> i_0(x)
   f_1(x, i_0(x)) -> f_1(x, x)
   f_1(i_0(x), i_0(g_1(x))) -> a_0

The replacement map contains the following entries:

f_1: empty set
i_0: {1}
g_1: empty set
a_0: empty set

----------------------------------------

(1) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   f_1(x, x) -> f_1(i_0(x), g_1(g_1(x)))
   f_1(x, y) -> x
   g_1(x) -> i_0(x)
   f_1(x, i_0(x)) -> f_1(x, x)
   f_1(i_0(x), i_0(g_1(x))) -> a_0

The replacement map contains the following entries:

f_1: empty set
i_0: {1}
g_1: empty set
a_0: empty set
Used ordering:
Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(f_1(x_1, x_2)) =  	[[1], [1]] 	 +  	[[1, 0], [0, 1]] 	* 	x_1 	 +  	[[1, 0], [0, 1]] 	* 	x_2
>>>

   <<<
 POL(i_0(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 1]] 	* 	x_1
>>>

   <<<
 POL(g_1(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 1]] 	* 	x_1
>>>

   <<<
 POL(a_0) =  	[[0], [1]]
>>>

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f_1(x, y) -> x
   f_1(i_0(x), i_0(g_1(x))) -> a_0




----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   f_1(x, x) -> f_1(i_0(x), g_1(g_1(x)))
   g_1(x) -> i_0(x)
   f_1(x, i_0(x)) -> f_1(x, x)

The replacement map contains the following entries:

f_1: empty set
i_0: {1}
g_1: empty set

----------------------------------------

(3) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   f_1(x, x) -> f_1(i_0(x), g_1(g_1(x)))
   g_1(x) -> i_0(x)
   f_1(x, i_0(x)) -> f_1(x, x)

The replacement map contains the following entries:

f_1: empty set
i_0: {1}
g_1: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(f_1(x_1, x_2)) = x_1
   POL(g_1(x_1)) = 1 + x_1
   POL(i_0(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   g_1(x) -> i_0(x)




----------------------------------------

(4)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   f_1(x, x) -> f_1(i_0(x), g_1(g_1(x)))
   f_1(x, i_0(x)) -> f_1(x, x)

The replacement map contains the following entries:

f_1: empty set
i_0: {1}
g_1: empty set

----------------------------------------

(5) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   f_1(x, x) -> f_1(i_0(x), g_1(g_1(x)))
   f_1(x, i_0(x)) -> f_1(x, x)

The replacement map contains the following entries:

f_1: empty set
i_0: {1}
g_1: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(f_1(x_1, x_2)) = 2*x_2
   POL(g_1(x_1)) = 0
   POL(i_0(x_1)) = 1 + 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f_1(x, i_0(x)) -> f_1(x, x)




----------------------------------------

(6)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   f_1(x, x) -> f_1(i_0(x), g_1(g_1(x)))

The replacement map contains the following entries:

f_1: empty set
i_0: {1}
g_1: empty set

----------------------------------------

(7) CSDependencyPairsProof (EQUIVALENT)
Using Improved CS-DPs [LPAR08] we result in the following initial Q-CSDP problem.
----------------------------------------

(8)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {i_0_1} are replacing on all positions.
The symbols in {f_1_2, g_1_1, F_1_2} are not replacing on any position.

The ordinary context-sensitive dependency pairs DP_o are:
   F_1(x, x) -> F_1(i_0(x), g_1(g_1(x)))

The TRS R consists of the following rules:

   f_1(x, x) -> f_1(i_0(x), g_1(g_1(x)))

Q is empty.

----------------------------------------

(9) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs.
The rules F_1(z0, z0) -> F_1(i_0(z0), g_1(g_1(z0))) and F_1(x0, x0) -> F_1(i_0(x0), g_1(g_1(x0))) form no chain, because ECap^mu(F_1(i_0(z0), g_1(g_1(z0)))) = F_1(i_0(z0), g_1(g_1(z0))) does not unify with F_1(x0, x0). 
----------------------------------------

(10)
TRUE
