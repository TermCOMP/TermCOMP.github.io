YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/BWBsd.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given CSR could be proven:

(0) CSR
(1) CSRInnermostProof [EQUIVALENT, 0 ms]
(2) CSR
(3) CSDependencyPairsProof [EQUIVALENT, 0 ms]
(4) QCSDP
(5) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QCSDP
        (8) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (9) QCSDP
        (10) PIsEmptyProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QCSDP
        (13) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (14) QCSDP
        (15) PIsEmptyProof [EQUIVALENT, 0 ms]
        (16) YES


----------------------------------------

(0)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   head(cons(X, XS)) -> X
   2nd(cons(X, XS)) -> head(XS)
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The replacement map contains the following entries:

from: {1}
cons: {1}
s: {1}
head: {1}
2nd: {1}
take: {1, 2}
0: empty set
nil: empty set
sel: {1, 2}

----------------------------------------

(1) CSRInnermostProof (EQUIVALENT)
The CSR is orthogonal. By [CS_Inn] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   head(cons(X, XS)) -> X
   2nd(cons(X, XS)) -> head(XS)
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The replacement map contains the following entries:

from: {1}
cons: {1}
s: {1}
head: {1}
2nd: {1}
take: {1, 2}
0: empty set
nil: empty set
sel: {1, 2}


Innermost Strategy.

----------------------------------------

(3) CSDependencyPairsProof (EQUIVALENT)
Using Improved CS-DPs [LPAR08] we result in the following initial Q-CSDP problem.
----------------------------------------

(4)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {from_1, s_1, head_1, 2nd_1, take_2, sel_2, HEAD_1, 2ND_1, SEL_2, FROM_1, TAKE_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.
The symbols in {U_1} are not replacing on any position.

The ordinary context-sensitive dependency pairs DP_o are:
   2ND(cons(X, XS)) -> HEAD(XS)
   SEL(s(N), cons(X, XS)) -> SEL(N, XS)

The collapsing dependency pairs are DP_c:
   2ND(cons(X, XS)) -> XS
   SEL(s(N), cons(X, XS)) -> XS


The hidden terms of R are:

   from(s(x0))
   take(x0, x1)

Every hiding context is built from:
   aprove.DPFramework.CSDPProblem.QCSDPProblem$1@1afec09c
   aprove.DPFramework.CSDPProblem.QCSDPProblem$1@3cdf7ebf
   aprove.DPFramework.CSDPProblem.QCSDPProblem$1@7c5a7950

Hence, the new unhiding pairs DP_u are :
   2ND(cons(X, XS)) -> U(XS)
   SEL(s(N), cons(X, XS)) -> U(XS)
   U(s(x_0)) -> U(x_0)
   U(from(x_0)) -> U(x_0)
   U(take(x_0, x_1)) -> U(x_0)
   U(take(x_0, x_1)) -> U(x_1)
   U(from(s(x0))) -> FROM(s(x0))
   U(take(x0, x1)) -> TAKE(x0, x1)

The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   head(cons(X, XS)) -> X
   2nd(cons(X, XS)) -> head(XS)
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   from(x0)
   head(cons(x0, x1))
   2nd(cons(x0, x1))
   take(0, x0)
   take(s(x0), cons(x1, x2))
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(5) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 2 SCCs with 4 less nodes.

----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {from_1, s_1, head_1, 2nd_1, take_2, sel_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.
The symbols in {U_1} are not replacing on any position.

The TRS P consists of the following rules:

   U(s(x_0)) -> U(x_0)
   U(from(x_0)) -> U(x_0)
   U(take(x_0, x_1)) -> U(x_0)
   U(take(x_0, x_1)) -> U(x_1)

The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   head(cons(X, XS)) -> X
   2nd(cons(X, XS)) -> head(XS)
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   from(x0)
   head(cons(x0, x1))
   2nd(cons(x0, x1))
   take(0, x0)
   take(s(x0), cons(x1, x2))
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(8) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   U(s(x_0)) -> U(x_0)
   U(from(x_0)) -> U(x_0)
   U(take(x_0, x_1)) -> U(x_0)
   U(take(x_0, x_1)) -> U(x_1)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
U(x1)  =  x1


Subterm Order

----------------------------------------

(9)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {from_1, s_1, head_1, 2nd_1, take_2, sel_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   head(cons(X, XS)) -> X
   2nd(cons(X, XS)) -> head(XS)
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   from(x0)
   head(cons(x0, x1))
   2nd(cons(x0, x1))
   take(0, x0)
   take(s(x0), cons(x1, x2))
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(10) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {from_1, s_1, head_1, 2nd_1, take_2, sel_2, SEL_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:

   SEL(s(N), cons(X, XS)) -> SEL(N, XS)

The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   head(cons(X, XS)) -> X
   2nd(cons(X, XS)) -> head(XS)
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   from(x0)
   head(cons(x0, x1))
   2nd(cons(x0, x1))
   take(0, x0)
   take(s(x0), cons(x1, x2))
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(13) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   SEL(s(N), cons(X, XS)) -> SEL(N, XS)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
SEL(x1, x2)  =  x1


Subterm Order

----------------------------------------

(14)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {from_1, s_1, head_1, 2nd_1, take_2, sel_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   head(cons(X, XS)) -> X
   2nd(cons(X, XS)) -> head(XS)
   take(0, XS) -> nil
   take(s(N), cons(X, XS)) -> cons(X, take(N, XS))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   from(x0)
   head(cons(x0, x1))
   2nd(cons(x0, x1))
   take(0, x0)
   take(s(x0), cons(x1, x2))
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(15) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(16)
YES
