YES

Problem 1: 

(VAR vu95NonEmpty I P V V1 V2 X Y Z)
(STRATEGY CONTEXTSENSITIVE
(U11 1)
(U12 1)
(U21 1)
(U22 1)
(U23 1)
(U31 1)
(U32 1)
(U41 1)
(U42 1)
(U43 1)
(U51 1)
(U52 1)
(U53 1)
(U61 1)
(U62 1)
(U71 1)
(U72 1)
(u95u95 1 2)
(and 1)
(isList)
(isNeList)
(isNePal)
(isPal)
(isPalListKind)
(isQid)
(a)
(e)
(fSNonEmpty)
(i)
(nil)
(o)
(tt)
(u)
)
(RULES
U11(tt,V) -> U12(isNeList(V))
U12(tt) -> tt
U21(tt,V1,V2) -> U22(isList(V1),V2)
U22(tt,V2) -> U23(isList(V2))
U23(tt) -> tt
U31(tt,V) -> U32(isQid(V))
U32(tt) -> tt
U41(tt,V1,V2) -> U42(isList(V1),V2)
U42(tt,V2) -> U43(isNeList(V2))
U43(tt) -> tt
U51(tt,V1,V2) -> U52(isNeList(V1),V2)
U52(tt,V2) -> U53(isList(V2))
U53(tt) -> tt
U61(tt,V) -> U62(isQid(V))
U62(tt) -> tt
U71(tt,V) -> U72(isNePal(V))
U72(tt) -> tt
u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
u95u95(nil,X) -> X
u95u95(X,nil) -> X
and(tt,X) -> X
isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
isList(nil) -> tt
isList(V) -> U11(isPalListKind(V),V)
isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
isNeList(V) -> U31(isPalListKind(V),V)
isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
isNePal(V) -> U61(isPalListKind(V),V)
isPal(nil) -> tt
isPal(V) -> U71(isPalListKind(V),V)
isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
isPalListKind(a) -> tt
isPalListKind(e) -> tt
isPalListKind(i) -> tt
isPalListKind(nil) -> tt
isPalListKind(o) -> tt
isPalListKind(u) -> tt
isQid(a) -> tt
isQid(e) -> tt
isQid(i) -> tt
isQid(o) -> tt
isQid(u) -> tt
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U11Sharp(tt,V) -> U12Sharp(isNeList(V))
 U11Sharp(tt,V) -> ISNELIST(V)
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(V1),V2)
 U21Sharp(tt,V1,V2) -> ISLIST(V1)
 U22Sharp(tt,V2) -> U23Sharp(isList(V2))
 U22Sharp(tt,V2) -> ISLIST(V2)
 U31Sharp(tt,V) -> U32Sharp(isQid(V))
 U31Sharp(tt,V) -> ISQID(V)
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(V1),V2)
 U41Sharp(tt,V1,V2) -> ISLIST(V1)
 U42Sharp(tt,V2) -> U43Sharp(isNeList(V2))
 U42Sharp(tt,V2) -> ISNELIST(V2)
 U51Sharp(tt,V1,V2) -> U52Sharp(isNeList(V1),V2)
 U51Sharp(tt,V1,V2) -> ISNELIST(V1)
 U52Sharp(tt,V2) -> U53Sharp(isList(V2))
 U52Sharp(tt,V2) -> ISLIST(V2)
 U61Sharp(tt,V) -> U62Sharp(isQid(V))
 U61Sharp(tt,V) -> ISQID(V)
 U71Sharp(tt,V) -> U72Sharp(isNePal(V))
 U71Sharp(tt,V) -> ISNEPAL(V)
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
 AND(tt,X) -> X
 ISLIST(u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISLIST(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISLIST(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
 ISLIST(V) -> U11Sharp(isPalListKind(V),V)
 ISLIST(V) -> ISPALLISTKIND(V)
 ISNELIST(u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISNELIST(u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISNELIST(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISNELIST(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
 ISNELIST(V) -> U31Sharp(isPalListKind(V),V)
 ISNELIST(V) -> ISPALLISTKIND(V)
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(isQid(I),isPalListKind(I))
 ISNEPAL(u95u95(I,u95u95(P,I))) -> ISQID(I)
 ISNEPAL(V) -> U61Sharp(isPalListKind(V),V)
 ISNEPAL(V) -> ISPALLISTKIND(V)
 ISPAL(V) -> U71Sharp(isPalListKind(V),V)
 ISPAL(V) -> ISPALLISTKIND(V)
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding Rules:
 and(isPal(P),isPalListKind(P)) -> AND(isPal(P),isPalListKind(P))
 and(isPal(P),isPalListKind(P)) -> ISPAL(P)
 isPalListKind(I) -> ISPALLISTKIND(I)
 isPalListKind(V2) -> ISPALLISTKIND(V2)

Problem 1: 

SCC Processor:
-> Pairs:
 U11Sharp(tt,V) -> U12Sharp(isNeList(V))
 U11Sharp(tt,V) -> ISNELIST(V)
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(V1),V2)
 U21Sharp(tt,V1,V2) -> ISLIST(V1)
 U22Sharp(tt,V2) -> U23Sharp(isList(V2))
 U22Sharp(tt,V2) -> ISLIST(V2)
 U31Sharp(tt,V) -> U32Sharp(isQid(V))
 U31Sharp(tt,V) -> ISQID(V)
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(V1),V2)
 U41Sharp(tt,V1,V2) -> ISLIST(V1)
 U42Sharp(tt,V2) -> U43Sharp(isNeList(V2))
 U42Sharp(tt,V2) -> ISNELIST(V2)
 U51Sharp(tt,V1,V2) -> U52Sharp(isNeList(V1),V2)
 U51Sharp(tt,V1,V2) -> ISNELIST(V1)
 U52Sharp(tt,V2) -> U53Sharp(isList(V2))
 U52Sharp(tt,V2) -> ISLIST(V2)
 U61Sharp(tt,V) -> U62Sharp(isQid(V))
 U61Sharp(tt,V) -> ISQID(V)
 U71Sharp(tt,V) -> U72Sharp(isNePal(V))
 U71Sharp(tt,V) -> ISNEPAL(V)
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
 AND(tt,X) -> X
 ISLIST(u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISLIST(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISLIST(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
 ISLIST(V) -> U11Sharp(isPalListKind(V),V)
 ISLIST(V) -> ISPALLISTKIND(V)
 ISNELIST(u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISNELIST(u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISNELIST(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISNELIST(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
 ISNELIST(V) -> U31Sharp(isPalListKind(V),V)
 ISNELIST(V) -> ISPALLISTKIND(V)
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(isQid(I),isPalListKind(I))
 ISNEPAL(u95u95(I,u95u95(P,I))) -> ISQID(I)
 ISNEPAL(V) -> U61Sharp(isPalListKind(V),V)
 ISNEPAL(V) -> ISPALLISTKIND(V)
 ISPAL(V) -> U71Sharp(isPalListKind(V),V)
 ISPAL(V) -> ISPALLISTKIND(V)
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 and(isPal(P),isPalListKind(P)) -> AND(isPal(P),isPalListKind(P))
 and(isPal(P),isPalListKind(P)) -> ISPAL(P)
 isPalListKind(I) -> ISPALLISTKIND(I)
 isPalListKind(V2) -> ISPALLISTKIND(V2)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
->->-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U71Sharp(tt,V) -> ISNEPAL(V)
 AND(tt,X) -> X
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(isQid(I),isPalListKind(I))
 ISNEPAL(V) -> ISPALLISTKIND(V)
 ISPAL(V) -> U71Sharp(isPalListKind(V),V)
 ISPAL(V) -> ISPALLISTKIND(V)
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
->->-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->->-> Unhiding rules:
 and(isPal(P),isPalListKind(P)) -> AND(isPal(P),isPalListKind(P))
 and(isPal(P),isPalListKind(P)) -> ISPAL(P)
 isPalListKind(I) -> ISPALLISTKIND(I)
 isPalListKind(V2) -> ISPALLISTKIND(V2)
->->Cycle:
->->-> Pairs:
 U11Sharp(tt,V) -> ISNELIST(V)
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(V1),V2)
 U21Sharp(tt,V1,V2) -> ISLIST(V1)
 U22Sharp(tt,V2) -> ISLIST(V2)
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(V1),V2)
 U41Sharp(tt,V1,V2) -> ISLIST(V1)
 U42Sharp(tt,V2) -> ISNELIST(V2)
 U51Sharp(tt,V1,V2) -> U52Sharp(isNeList(V1),V2)
 U51Sharp(tt,V1,V2) -> ISNELIST(V1)
 U52Sharp(tt,V2) -> ISLIST(V2)
 ISLIST(u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISLIST(V) -> U11Sharp(isPalListKind(V),V)
 ISNELIST(u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISNELIST(u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
->->-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->->-> Unhiding rules:
 Empty


The problem is decomposed in 3 subproblems.

Problem 1.1: 

SubNColl Processor:
-> Pairs:
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
->Projection:
 pi(U95U95) = 1

Problem 1.1: 

Basic Processor:
-> Pairs:
 Empty
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
-> Result:
 Set P is empty

The problem is finite.

Problem 1.2: 

Reduction Triple Processor:
-> Pairs:
 U71Sharp(tt,V) -> ISNEPAL(V)
 AND(tt,X) -> X
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(isQid(I),isPalListKind(I))
 ISNEPAL(V) -> ISPALLISTKIND(V)
 ISPAL(V) -> U71Sharp(isPalListKind(V),V)
 ISPAL(V) -> ISPALLISTKIND(V)
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 and(isPal(P),isPalListKind(P)) -> AND(isPal(P),isPalListKind(P))
 and(isPal(P),isPalListKind(P)) -> ISPAL(P)
 isPalListKind(I) -> ISPALLISTKIND(I)
 isPalListKind(V2) -> ISPALLISTKIND(V2)
-> Usable rules:
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = 2.X2 + 1
[U62](X) = 2.X + 1
[U71](X1,X2) = X1 + 1
[U72](X) = 1
[u95u95](X1,X2) = 2.X1 + X2 + 2
[and](X1,X2) = X1 + X2 + 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2.X + 1
[isQid](X) = X
[a] = 1
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[nil] = 1
[o] = 1
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 2.X2 + 2
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[AND](X1,X2) = X2 + 2
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 2.X + 2
[ISPAL](X) = 2.X + 2
[ISPALLISTKIND](X) = 2.X + 1
[ISQID](X) = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 U71Sharp(tt,V) -> ISNEPAL(V)
 AND(tt,X) -> X
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(isQid(I),isPalListKind(I))
 ISNEPAL(V) -> ISPALLISTKIND(V)
 ISPAL(V) -> U71Sharp(isPalListKind(V),V)
 ISPAL(V) -> ISPALLISTKIND(V)
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 and(isPal(P),isPalListKind(P)) -> ISPAL(P)
 isPalListKind(I) -> ISPALLISTKIND(I)
 isPalListKind(V2) -> ISPALLISTKIND(V2)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U71Sharp(tt,V) -> ISNEPAL(V)
 AND(tt,X) -> X
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(isQid(I),isPalListKind(I))
 ISNEPAL(V) -> ISPALLISTKIND(V)
 ISPAL(V) -> U71Sharp(isPalListKind(V),V)
 ISPAL(V) -> ISPALLISTKIND(V)
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
->->-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->->-> Unhiding rules:
 and(isPal(P),isPalListKind(P)) -> ISPAL(P)
 isPalListKind(I) -> ISPALLISTKIND(I)
 isPalListKind(V2) -> ISPALLISTKIND(V2)

Problem 1.2: 

Reduction Triple Processor:
-> Pairs:
 U71Sharp(tt,V) -> ISNEPAL(V)
 AND(tt,X) -> X
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(isQid(I),isPalListKind(I))
 ISNEPAL(V) -> ISPALLISTKIND(V)
 ISPAL(V) -> U71Sharp(isPalListKind(V),V)
 ISPAL(V) -> ISPALLISTKIND(V)
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 and(isPal(P),isPalListKind(P)) -> ISPAL(P)
 isPalListKind(I) -> ISPALLISTKIND(I)
 isPalListKind(V2) -> ISPALLISTKIND(V2)
-> Usable rules:
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = X1
[U62](X) = 2
[U71](X1,X2) = 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[and](X1,X2) = X1 + X2 + 1
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2.X + 2
[isQid](X) = 2.X + 1
[a] = 1
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[nil] = 1
[o] = 2
[tt] = 2
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 2.X2 + 2
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[AND](X1,X2) = X1 + X2
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 2.X + 2
[ISPAL](X) = 2.X + 2
[ISPALLISTKIND](X) = 2.X + 2
[ISQID](X) = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 U71Sharp(tt,V) -> ISNEPAL(V)
 AND(tt,X) -> X
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 ISNEPAL(u95u95(I,u95u95(P,I))) -> AND(isQid(I),isPalListKind(I))
 ISNEPAL(V) -> ISPALLISTKIND(V)
 ISPAL(V) -> U71Sharp(isPalListKind(V),V)
 ISPAL(V) -> ISPALLISTKIND(V)
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 isPalListKind(I) -> ISPALLISTKIND(I)
 isPalListKind(V2) -> ISPALLISTKIND(V2)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(tt,X) -> X
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
->->-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->->-> Unhiding rules:
 isPalListKind(I) -> ISPALLISTKIND(I)
 isPalListKind(V2) -> ISPALLISTKIND(V2)

Problem 1.2: 

Reduction Triple Processor:
-> Pairs:
 AND(tt,X) -> X
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 isPalListKind(I) -> ISPALLISTKIND(I)
 isPalListKind(V2) -> ISPALLISTKIND(V2)
-> Usable rules:
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = X1
[U62](X) = 2
[U71](X1,X2) = X2 + 2
[U72](X) = 2
[u95u95](X1,X2) = 2.X1 + X2 + 1
[and](X1,X2) = X2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2.X + 2
[isQid](X) = 2.X + 2
[a] = 0
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[nil] = 2
[o] = 0
[tt] = 2
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[AND](X1,X2) = X2 + 1
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 2.X + 1
[ISQID](X) = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 AND(tt,X) -> X
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 isPalListKind(V2) -> ISPALLISTKIND(V2)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(tt,X) -> X
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
->->-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->->-> Unhiding rules:
 isPalListKind(V2) -> ISPALLISTKIND(V2)

Problem 1.2: 

Reduction Triple Processor:
-> Pairs:
 AND(tt,X) -> X
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 isPalListKind(V2) -> ISPALLISTKIND(V2)
-> Usable rules:
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = 2.X2 + 1
[U62](X) = 2.X + 1
[U71](X1,X2) = 2.X1
[U72](X) = 2
[u95u95](X1,X2) = 2.X1 + X2 + 1
[and](X1,X2) = X2 + 1
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = X + 1
[isQid](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 2
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[AND](X1,X2) = X2
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = X
[ISQID](X) = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 AND(tt,X) -> X
 ISPALLISTKIND(u95u95(V1,V2)) -> AND(isPalListKind(V1),isPalListKind(V2))
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
->->-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->->-> Unhiding rules:
 Empty

Problem 1.2: 

SubNColl Processor:
-> Pairs:
 ISPALLISTKIND(u95u95(V1,V2)) -> ISPALLISTKIND(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
->Projection:
 pi(ISPALLISTKIND) = 1

Problem 1.2: 

Basic Processor:
-> Pairs:
 Empty
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
-> Result:
 Set P is empty

The problem is finite.

Problem 1.3: 

Reduction Triple Processor:
-> Pairs:
 U11Sharp(tt,V) -> ISNELIST(V)
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(V1),V2)
 U21Sharp(tt,V1,V2) -> ISLIST(V1)
 U22Sharp(tt,V2) -> ISLIST(V2)
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(V1),V2)
 U41Sharp(tt,V1,V2) -> ISLIST(V1)
 U42Sharp(tt,V2) -> ISNELIST(V2)
 U51Sharp(tt,V1,V2) -> U52Sharp(isNeList(V1),V2)
 U51Sharp(tt,V1,V2) -> ISNELIST(V1)
 U52Sharp(tt,V2) -> ISLIST(V2)
 ISLIST(u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISLIST(V) -> U11Sharp(isPalListKind(V),V)
 ISNELIST(u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISNELIST(u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
-> Usable rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + X2
[U12](X) = 2
[U21](X1,X2,X3) = X1 + X3 + 1
[U22](X1,X2) = X2 + 2
[U23](X) = X
[U31](X1,X2) = 2.X2 + 2
[U32](X) = 2.X + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = 2.X1 + 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + X2 + 2
[U53](X) = X + 2
[U61](X1,X2) = 2.X2 + 2
[U62](X) = 2
[U71](X1,X2) = X1
[U72](X) = 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[and](X1,X2) = X2
[isList](X) = X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2
[isPalListKind](X) = 2
[isQid](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 2
[u] = 2
[U11Sharp](X1,X2) = 2.X2 + 2
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22Sharp](X1,X2) = 2.X1 + 2.X2 + 2
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U42Sharp](X1,X2) = X1 + 2.X2 + 2
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[U52Sharp](X1,X2) = X1 + 2.X2 + 2
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[AND](X1,X2) = 0
[ISLIST](X) = 2.X + 2
[ISNELIST](X) = 2.X + 1
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(V1),V2)
 U21Sharp(tt,V1,V2) -> ISLIST(V1)
 U22Sharp(tt,V2) -> ISLIST(V2)
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(V1),V2)
 U41Sharp(tt,V1,V2) -> ISLIST(V1)
 U42Sharp(tt,V2) -> ISNELIST(V2)
 U51Sharp(tt,V1,V2) -> U52Sharp(isNeList(V1),V2)
 U51Sharp(tt,V1,V2) -> ISNELIST(V1)
 U52Sharp(tt,V2) -> ISLIST(V2)
 ISLIST(u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISLIST(V) -> U11Sharp(isPalListKind(V),V)
 ISNELIST(u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISNELIST(u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(V1),V2)
 U21Sharp(tt,V1,V2) -> ISLIST(V1)
 U22Sharp(tt,V2) -> ISLIST(V2)
 ISLIST(u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
->->-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(V1),V2)
 U42Sharp(tt,V2) -> ISNELIST(V2)
 U51Sharp(tt,V1,V2) -> ISNELIST(V1)
 ISNELIST(u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISNELIST(u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
->->-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->->-> Unhiding rules:
 Empty


The problem is decomposed in 2 subproblems.

Problem 1.3.1: 

Reduction Triple Processor:
-> Pairs:
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(V1),V2)
 U21Sharp(tt,V1,V2) -> ISLIST(V1)
 U22Sharp(tt,V2) -> ISLIST(V2)
 ISLIST(u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
-> Usable rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1
[U12](X) = 2
[U21](X1,X2,X3) = 2.X2 + X3 + 2
[U22](X1,X2) = X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = X1 + X2 + 2
[U32](X) = X + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2
[U42](X1,X2) = 2.X1 + 2
[U43](X) = 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2
[U52](X1,X2) = X1 + 2
[U53](X) = 2
[U61](X1,X2) = X2 + 2
[U62](X) = X
[U71](X1,X2) = X1 + X2 + 2
[U72](X) = X + 1
[u95u95](X1,X2) = 2.X1 + X2 + 2
[and](X1,X2) = X2 + 2
[isList](X) = X
[isNeList](X) = 2.X + 2
[isNePal](X) = X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = X
[isQid](X) = X + 1
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 2
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 2.X2 + X3 + 2
[U22Sharp](X1,X2) = X1 + X2 + 1
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[AND](X1,X2) = 0
[ISLIST](X) = X + 2
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0

Problem 1.3.1: 

SCC Processor:
-> Pairs:
 U21Sharp(tt,V1,V2) -> ISLIST(V1)
 U22Sharp(tt,V2) -> ISLIST(V2)
 ISLIST(u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U21Sharp(tt,V1,V2) -> ISLIST(V1)
 ISLIST(u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
->->-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
->->-> Unhiding rules:
 Empty

Problem 1.3.1: 

SubNColl Processor:
-> Pairs:
 U21Sharp(tt,V1,V2) -> ISLIST(V1)
 ISLIST(u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
->Projection:
 pi(U21Sharp) = 2
 pi(ISLIST) = 1

Problem 1.3.1: 

SCC Processor:
-> Pairs:
 U21Sharp(tt,V1,V2) -> ISLIST(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3.2: 

SubNColl Processor:
-> Pairs:
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(V1),V2)
 U42Sharp(tt,V2) -> ISNELIST(V2)
 U51Sharp(tt,V1,V2) -> ISNELIST(V1)
 ISNELIST(u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ISNELIST(u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
->Projection:
 pi(U41Sharp) = 3
 pi(U42Sharp) = 2
 pi(U51Sharp) = 2
 pi(ISNELIST) = 1

Problem 1.3.2: 

SCC Processor:
-> Pairs:
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(V1),V2)
 U42Sharp(tt,V2) -> ISNELIST(V2)
 U51Sharp(tt,V1,V2) -> ISNELIST(V1)
-> Rules:
 U11(tt,V) -> U12(isNeList(V))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(V1),V2)
 U22(tt,V2) -> U23(isList(V2))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(V))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(V1),V2)
 U42(tt,V2) -> U43(isNeList(V2))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(V1),V2)
 U52(tt,V2) -> U53(isList(V2))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(V))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(V))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 and(tt,X) -> X
 isList(u95u95(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isList(nil) -> tt
 isList(V) -> U11(isPalListKind(V),V)
 isNeList(u95u95(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(u95u95(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 isNeList(V) -> U31(isPalListKind(V),V)
 isNePal(u95u95(I,u95u95(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 isNePal(V) -> U61(isPalListKind(V),V)
 isPal(nil) -> tt
 isPal(V) -> U71(isPalListKind(V),V)
 isPalListKind(u95u95(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2))
 isPalListKind(a) -> tt
 isPalListKind(e) -> tt
 isPalListKind(i) -> tt
 isPalListKind(nil) -> tt
 isPalListKind(o) -> tt
 isPalListKind(u) -> tt
 isQid(a) -> tt
 isQid(e) -> tt
 isQid(i) -> tt
 isQid(o) -> tt
 isQid(u) -> tt
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
