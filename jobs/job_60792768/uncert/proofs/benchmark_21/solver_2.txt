YES

Problem 1: 

(VAR vu95NonEmpty X Y Z)
(STRATEGY CONTEXTSENSITIVE
(add 1 2)
(from 1)
(fst 1 2)
(len 1)
(num0)
(cons 1)
(fSNonEmpty)
(nil)
(s)
)
(RULES
add(num0,X) -> X
add(s(X),Y) -> s(add(X,Y))
from(X) -> cons(X,from(s(X)))
fst(num0,Z) -> nil
fst(s(X),cons(Y,Z)) -> cons(Y,fst(X,Z))
len(cons(X,Z)) -> s(len(Z))
len(nil) -> num0
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 from(X) -> cons(X,from(s(X)))
 fst(num0,Z) -> nil
 fst(s(X),cons(Y,Z)) -> cons(Y,fst(X,Z))
 len(cons(X,Z)) -> s(len(Z))
 len(nil) -> num0
-> The context-sensitive term rewriting system is an orthogonal system. Therefore, innermost cs-termination implies cs-termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 Empty
-> Rules:
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 from(X) -> cons(X,from(s(X)))
 fst(num0,Z) -> nil
 fst(s(X),cons(Y,Z)) -> cons(Y,fst(X,Z))
 len(cons(X,Z)) -> s(len(Z))
 len(nil) -> num0
-> Unhiding Rules:
 Empty

Problem 1: 

Basic Processor:
-> Pairs:
 Empty
-> Rules:
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 from(X) -> cons(X,from(s(X)))
 fst(num0,Z) -> nil
 fst(s(X),cons(Y,Z)) -> cons(Y,fst(X,Z))
 len(cons(X,Z)) -> s(len(Z))
 len(nil) -> num0
-> Unhiding rules:
 Empty
-> Result:
 Set P is empty

The problem is finite.
