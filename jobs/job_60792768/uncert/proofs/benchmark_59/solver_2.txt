YES

Problem 1: 

(VAR vu95NonEmpty L N V V1 V2)
(STRATEGY CONTEXTSENSITIVE
(U11 1)
(U21 1)
(U31 1)
(U41 1)
(U42 1)
(U51 1)
(U52 1)
(U61 1)
(U62 1)
(isNat)
(isNatIList)
(isNatList)
(length 1)
(zeros)
(num0)
(cons 1)
(fSNonEmpty)
(nil)
(s 1)
(tt)
)
(RULES
U11(tt) -> tt
U21(tt) -> tt
U31(tt) -> tt
U41(tt,V2) -> U42(isNatIList(V2))
U42(tt) -> tt
U51(tt,V2) -> U52(isNatList(V2))
U52(tt) -> tt
U61(tt,L,N) -> U62(isNat(N),L)
U62(tt,L) -> s(length(L))
isNat(length(V1)) -> U11(isNatList(V1))
isNat(num0) -> tt
isNat(s(V1)) -> U21(isNat(V1))
isNatIList(zeros) -> tt
isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
isNatIList(V) -> U31(isNatList(V))
isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
isNatList(nil) -> tt
length(cons(N,L)) -> U61(isNatList(L),L,N)
length(nil) -> num0
zeros -> cons(num0,zeros)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U41Sharp(tt,V2) -> U42Sharp(isNatIList(V2))
 U41Sharp(tt,V2) -> ISNATILIST(V2)
 U51Sharp(tt,V2) -> U52Sharp(isNatList(V2))
 U51Sharp(tt,V2) -> ISNATLIST(V2)
 U61Sharp(tt,L,N) -> U62Sharp(isNat(N),L)
 U61Sharp(tt,L,N) -> ISNAT(N)
 U62Sharp(tt,L) -> LENGTH(L)
 U62Sharp(tt,L) -> L
 ISNAT(length(V1)) -> U11Sharp(isNatList(V1))
 ISNAT(length(V1)) -> ISNATLIST(V1)
 ISNAT(s(V1)) -> U21Sharp(isNat(V1))
 ISNAT(s(V1)) -> ISNAT(V1)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNat(V1),V2)
 ISNATILIST(cons(V1,V2)) -> ISNAT(V1)
 ISNATILIST(V) -> U31Sharp(isNatList(V))
 ISNATILIST(V) -> ISNATLIST(V)
 ISNATLIST(cons(V1,V2)) -> U51Sharp(isNat(V1),V2)
 ISNATLIST(cons(V1,V2)) -> ISNAT(V1)
 LENGTH(cons(N,L)) -> U61Sharp(isNatList(L),L,N)
 LENGTH(cons(N,L)) -> ISNATLIST(L)
-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding Rules:
 zeros -> ZEROS

Problem 1: 

SCC Processor:
-> Pairs:
 U41Sharp(tt,V2) -> U42Sharp(isNatIList(V2))
 U41Sharp(tt,V2) -> ISNATILIST(V2)
 U51Sharp(tt,V2) -> U52Sharp(isNatList(V2))
 U51Sharp(tt,V2) -> ISNATLIST(V2)
 U61Sharp(tt,L,N) -> U62Sharp(isNat(N),L)
 U61Sharp(tt,L,N) -> ISNAT(N)
 U62Sharp(tt,L) -> LENGTH(L)
 U62Sharp(tt,L) -> L
 ISNAT(length(V1)) -> U11Sharp(isNatList(V1))
 ISNAT(length(V1)) -> ISNATLIST(V1)
 ISNAT(s(V1)) -> U21Sharp(isNat(V1))
 ISNAT(s(V1)) -> ISNAT(V1)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNat(V1),V2)
 ISNATILIST(cons(V1,V2)) -> ISNAT(V1)
 ISNATILIST(V) -> U31Sharp(isNatList(V))
 ISNATILIST(V) -> ISNATLIST(V)
 ISNATLIST(cons(V1,V2)) -> U51Sharp(isNat(V1),V2)
 ISNATLIST(cons(V1,V2)) -> ISNAT(V1)
 LENGTH(cons(N,L)) -> U61Sharp(isNatList(L),L,N)
 LENGTH(cons(N,L)) -> ISNATLIST(L)
-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 zeros -> ZEROS
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U51Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> ISNATLIST(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
 ISNATLIST(cons(V1,V2)) -> U51Sharp(isNat(V1),V2)
 ISNATLIST(cons(V1,V2)) -> ISNAT(V1)
->->-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U61Sharp(tt,L,N) -> U62Sharp(isNat(N),L)
 U62Sharp(tt,L) -> LENGTH(L)
 LENGTH(cons(N,L)) -> U61Sharp(isNatList(L),L,N)
->->-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U41Sharp(tt,V2) -> ISNATILIST(V2)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNat(V1),V2)
->->-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Reduction Triple Processor:
-> Pairs:
 U51Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> ISNATLIST(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
 ISNATLIST(cons(V1,V2)) -> U51Sharp(isNat(V1),V2)
 ISNATLIST(cons(V1,V2)) -> ISNAT(V1)
-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = X + 2
[U21](X) = 2.X + 1
[U31](X) = 0
[U41](X1,X2) = 0
[U42](X) = 0
[U51](X1,X2) = 2.X1 + 2.X2
[U52](X) = X
[U61](X1,X2,X3) = 0
[U62](X1,X2) = 0
[isNat](X) = 2.X
[isNatIList](X) = 0
[isNatList](X) = 2.X + 2
[length](X) = 2.X + 2
[zeros] = 0
[num0] = 1
[cons](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[nil] = 1
[s](X) = 2.X + 2
[tt] = 2
[U11Sharp](X) = 0
[U21Sharp](X) = 0
[U31Sharp](X) = 0
[U41Sharp](X1,X2) = 0
[U42Sharp](X) = 0
[U51Sharp](X1,X2) = 2.X2 + 2
[U52Sharp](X) = 0
[U61Sharp](X1,X2,X3) = 0
[U62Sharp](X1,X2) = 0
[ISNAT](X) = 2.X
[ISNATILIST](X) = 0
[ISNATLIST](X) = 2.X
[LENGTH](X) = 0
[ZEROS] = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 ISNAT(length(V1)) -> ISNATLIST(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
 ISNATLIST(cons(V1,V2)) -> U51Sharp(isNat(V1),V2)
 ISNATLIST(cons(V1,V2)) -> ISNAT(V1)
-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ISNAT(length(V1)) -> ISNATLIST(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
 ISNATLIST(cons(V1,V2)) -> ISNAT(V1)
->->-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty

Problem 1.1: 

SubNColl Processor:
-> Pairs:
 ISNAT(length(V1)) -> ISNATLIST(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
 ISNATLIST(cons(V1,V2)) -> ISNAT(V1)
-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Projection:
 pi(ISNAT) = 1
 pi(ISNATLIST) = 1

Problem 1.1: 

Basic Processor:
-> Pairs:
 Empty
-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Result:
 Set P is empty

The problem is finite.

Problem 1.2: 

Reduction Triple Processor:
-> Pairs:
 U61Sharp(tt,L,N) -> U62Sharp(isNat(N),L)
 U62Sharp(tt,L) -> LENGTH(L)
 LENGTH(cons(N,L)) -> U61Sharp(isNatList(L),L,N)
-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 2.X + 2
[U21](X) = 2
[U31](X) = 0
[U41](X1,X2) = 0
[U42](X) = 0
[U51](X1,X2) = X2
[U52](X) = X
[U61](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 1
[U62](X1,X2) = X1 + 1
[isNat](X) = 2.X + 2
[isNatIList](X) = 0
[isNatList](X) = X
[length](X) = 2.X + 1
[zeros] = 0
[num0] = 0
[cons](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[nil] = 2
[s](X) = 2
[tt] = 2
[U11Sharp](X) = 0
[U21Sharp](X) = 0
[U31Sharp](X) = 0
[U41Sharp](X1,X2) = 0
[U42Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U62Sharp](X1,X2) = X1 + 2.X2 + 1
[ISNAT](X) = 0
[ISNATILIST](X) = 0
[ISNATLIST](X) = 0
[LENGTH](X) = 2.X
[ZEROS] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 U62Sharp(tt,L) -> LENGTH(L)
 LENGTH(cons(N,L)) -> U61Sharp(isNatList(L),L,N)
-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Triple Processor:
-> Pairs:
 U41Sharp(tt,V2) -> ISNATILIST(V2)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNat(V1),V2)
-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = X + 2
[U21](X) = X + 1
[U31](X) = 0
[U41](X1,X2) = 0
[U42](X) = 0
[U51](X1,X2) = 2.X1 + 2.X2 + 1
[U52](X) = X + 2
[U61](X1,X2,X3) = 0
[U62](X1,X2) = 0
[isNat](X) = 2.X + 2
[isNatIList](X) = 0
[isNatList](X) = 2.X + 2
[length](X) = X + 2
[zeros] = 0
[num0] = 1
[cons](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[nil] = 2
[s](X) = X + 2
[tt] = 2
[U11Sharp](X) = 0
[U21Sharp](X) = 0
[U31Sharp](X) = 0
[U41Sharp](X1,X2) = 2.X1 + 2.X2
[U42Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X1,X2,X3) = 0
[U62Sharp](X1,X2) = 0
[ISNAT](X) = 0
[ISNATILIST](X) = 2.X + 2
[ISNATLIST](X) = 0
[LENGTH](X) = 0
[ZEROS] = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNat(V1),V2)
-> Rules:
 U11(tt) -> tt
 U21(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNatIList(V2))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isNatList(V2))
 U52(tt) -> tt
 U61(tt,L,N) -> U62(isNat(N),L)
 U62(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatList(V1))
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNat(V1))
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2)
 isNatIList(V) -> U31(isNatList(V))
 isNatList(cons(V1,V2)) -> U51(isNat(V1),V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U61(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
