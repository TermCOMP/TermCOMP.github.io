YES

Problem 1: 

(VAR vu95NonEmpty L N V V1 V2)
(STRATEGY CONTEXTSENSITIVE
(U11 1)
(U12 1)
(U13 1)
(U21 1)
(U22 1)
(U23 1)
(U31 1)
(U32 1)
(U33 1)
(U41 1)
(U42 1)
(U43 1)
(U44 1)
(U45 1)
(U46 1)
(U51 1)
(U52 1)
(U61 1)
(U71 1)
(U81 1)
(U82 1)
(U83 1)
(U84 1)
(U85 1)
(U86 1)
(U91 1)
(U92 1)
(U93 1)
(U94 1)
(isNat)
(isNatIList)
(isNatIListKind)
(isNatKind)
(isNatList)
(length 1)
(zeros)
(num0)
(cons 1)
(fSNonEmpty)
(nil)
(s 1)
(tt)
)
(RULES
U11(tt,V1) -> U12(isNatIListKind(V1),V1)
U12(tt,V1) -> U13(isNatList(V1))
U13(tt) -> tt
U21(tt,V1) -> U22(isNatKind(V1),V1)
U22(tt,V1) -> U23(isNat(V1))
U23(tt) -> tt
U31(tt,V) -> U32(isNatIListKind(V),V)
U32(tt,V) -> U33(isNatList(V))
U33(tt) -> tt
U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
U44(tt,V1,V2) -> U45(isNat(V1),V2)
U45(tt,V2) -> U46(isNatIList(V2))
U46(tt) -> tt
U51(tt,V2) -> U52(isNatIListKind(V2))
U52(tt) -> tt
U61(tt) -> tt
U71(tt) -> tt
U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
U84(tt,V1,V2) -> U85(isNat(V1),V2)
U85(tt,V2) -> U86(isNatList(V2))
U86(tt) -> tt
U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
U92(tt,L,N) -> U93(isNat(N),L,N)
U93(tt,L,N) -> U94(isNatKind(N),L)
U94(tt,L) -> s(length(L))
isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
isNat(num0) -> tt
isNat(s(V1)) -> U21(isNatKind(V1),V1)
isNatIList(zeros) -> tt
isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
isNatIList(V) -> U31(isNatIListKind(V),V)
isNatIListKind(zeros) -> tt
isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
isNatIListKind(nil) -> tt
isNatKind(length(V1)) -> U61(isNatIListKind(V1))
isNatKind(num0) -> tt
isNatKind(s(V1)) -> U71(isNatKind(V1))
isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
isNatList(nil) -> tt
length(cons(N,L)) -> U91(isNatList(L),L,N)
length(nil) -> num0
zeros -> cons(num0,zeros)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U11Sharp(tt,V1) -> U12Sharp(isNatIListKind(V1),V1)
 U11Sharp(tt,V1) -> ISNATILISTKIND(V1)
 U12Sharp(tt,V1) -> U13Sharp(isNatList(V1))
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U21Sharp(tt,V1) -> ISNATKIND(V1)
 U22Sharp(tt,V1) -> U23Sharp(isNat(V1))
 U22Sharp(tt,V1) -> ISNAT(V1)
 U31Sharp(tt,V) -> U32Sharp(isNatIListKind(V),V)
 U31Sharp(tt,V) -> ISNATILISTKIND(V)
 U32Sharp(tt,V) -> U33Sharp(isNatList(V))
 U32Sharp(tt,V) -> ISNATLIST(V)
 U41Sharp(tt,V1,V2) -> U42Sharp(isNatKind(V1),V1,V2)
 U41Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U42Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U44Sharp(tt,V1,V2) -> ISNAT(V1)
 U45Sharp(tt,V2) -> U46Sharp(isNatIList(V2))
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 U51Sharp(tt,V2) -> U52Sharp(isNatIListKind(V2))
 U51Sharp(tt,V2) -> ISNATILISTKIND(V2)
 U81Sharp(tt,V1,V2) -> U82Sharp(isNatKind(V1),V1,V2)
 U81Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U82Sharp(tt,V1,V2) -> U83Sharp(isNatIListKind(V2),V1,V2)
 U82Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U83Sharp(tt,V1,V2) -> U84Sharp(isNatIListKind(V2),V1,V2)
 U83Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U84Sharp(tt,V1,V2) -> U85Sharp(isNat(V1),V2)
 U84Sharp(tt,V1,V2) -> ISNAT(V1)
 U85Sharp(tt,V2) -> U86Sharp(isNatList(V2))
 U85Sharp(tt,V2) -> ISNATLIST(V2)
 U91Sharp(tt,L,N) -> U92Sharp(isNatIListKind(L),L,N)
 U91Sharp(tt,L,N) -> ISNATILISTKIND(L)
 U92Sharp(tt,L,N) -> U93Sharp(isNat(N),L,N)
 U92Sharp(tt,L,N) -> ISNAT(N)
 U93Sharp(tt,L,N) -> U94Sharp(isNatKind(N),L)
 U93Sharp(tt,L,N) -> ISNATKIND(N)
 U94Sharp(tt,L) -> LENGTH(L)
 U94Sharp(tt,L) -> L
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(length(V1)) -> ISNATILISTKIND(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNAT(s(V1)) -> ISNATKIND(V1)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
 ISNATILIST(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATILIST(V) -> U31Sharp(isNatIListKind(V),V)
 ISNATILIST(V) -> ISNATILISTKIND(V)
 ISNATILISTKIND(cons(V1,V2)) -> U51Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> U61Sharp(isNatIListKind(V1))
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> U71Sharp(isNatKind(V1))
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
 ISNATLIST(cons(V1,V2)) -> U81Sharp(isNatKind(V1),V1,V2)
 ISNATLIST(cons(V1,V2)) -> ISNATKIND(V1)
 LENGTH(cons(N,L)) -> U91Sharp(isNatList(L),L,N)
 LENGTH(cons(N,L)) -> ISNATLIST(L)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding Rules:
 zeros -> ZEROS

Problem 1: 

SCC Processor:
-> Pairs:
 U11Sharp(tt,V1) -> U12Sharp(isNatIListKind(V1),V1)
 U11Sharp(tt,V1) -> ISNATILISTKIND(V1)
 U12Sharp(tt,V1) -> U13Sharp(isNatList(V1))
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U21Sharp(tt,V1) -> ISNATKIND(V1)
 U22Sharp(tt,V1) -> U23Sharp(isNat(V1))
 U22Sharp(tt,V1) -> ISNAT(V1)
 U31Sharp(tt,V) -> U32Sharp(isNatIListKind(V),V)
 U31Sharp(tt,V) -> ISNATILISTKIND(V)
 U32Sharp(tt,V) -> U33Sharp(isNatList(V))
 U32Sharp(tt,V) -> ISNATLIST(V)
 U41Sharp(tt,V1,V2) -> U42Sharp(isNatKind(V1),V1,V2)
 U41Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U42Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U44Sharp(tt,V1,V2) -> ISNAT(V1)
 U45Sharp(tt,V2) -> U46Sharp(isNatIList(V2))
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 U51Sharp(tt,V2) -> U52Sharp(isNatIListKind(V2))
 U51Sharp(tt,V2) -> ISNATILISTKIND(V2)
 U81Sharp(tt,V1,V2) -> U82Sharp(isNatKind(V1),V1,V2)
 U81Sharp(tt,V1,V2) -> ISNATKIND(V1)
 U82Sharp(tt,V1,V2) -> U83Sharp(isNatIListKind(V2),V1,V2)
 U82Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U83Sharp(tt,V1,V2) -> U84Sharp(isNatIListKind(V2),V1,V2)
 U83Sharp(tt,V1,V2) -> ISNATILISTKIND(V2)
 U84Sharp(tt,V1,V2) -> U85Sharp(isNat(V1),V2)
 U84Sharp(tt,V1,V2) -> ISNAT(V1)
 U85Sharp(tt,V2) -> U86Sharp(isNatList(V2))
 U85Sharp(tt,V2) -> ISNATLIST(V2)
 U91Sharp(tt,L,N) -> U92Sharp(isNatIListKind(L),L,N)
 U91Sharp(tt,L,N) -> ISNATILISTKIND(L)
 U92Sharp(tt,L,N) -> U93Sharp(isNat(N),L,N)
 U92Sharp(tt,L,N) -> ISNAT(N)
 U93Sharp(tt,L,N) -> U94Sharp(isNatKind(N),L)
 U93Sharp(tt,L,N) -> ISNATKIND(N)
 U94Sharp(tt,L) -> LENGTH(L)
 U94Sharp(tt,L) -> L
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(length(V1)) -> ISNATILISTKIND(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNAT(s(V1)) -> ISNATKIND(V1)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
 ISNATILIST(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATILIST(V) -> U31Sharp(isNatIListKind(V),V)
 ISNATILIST(V) -> ISNATILISTKIND(V)
 ISNATILISTKIND(cons(V1,V2)) -> U51Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> U61Sharp(isNatIListKind(V1))
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> U71Sharp(isNatKind(V1))
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
 ISNATLIST(cons(V1,V2)) -> U81Sharp(isNatKind(V1),V1,V2)
 ISNATLIST(cons(V1,V2)) -> ISNATKIND(V1)
 LENGTH(cons(N,L)) -> U91Sharp(isNatList(L),L,N)
 LENGTH(cons(N,L)) -> ISNATLIST(L)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 zeros -> ZEROS
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U51Sharp(tt,V2) -> ISNATILISTKIND(V2)
 ISNATILISTKIND(cons(V1,V2)) -> U51Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
->->-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U11Sharp(tt,V1) -> U12Sharp(isNatIListKind(V1),V1)
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 U81Sharp(tt,V1,V2) -> U82Sharp(isNatKind(V1),V1,V2)
 U82Sharp(tt,V1,V2) -> U83Sharp(isNatIListKind(V2),V1,V2)
 U83Sharp(tt,V1,V2) -> U84Sharp(isNatIListKind(V2),V1,V2)
 U84Sharp(tt,V1,V2) -> U85Sharp(isNat(V1),V2)
 U84Sharp(tt,V1,V2) -> ISNAT(V1)
 U85Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNATLIST(cons(V1,V2)) -> U81Sharp(isNatKind(V1),V1,V2)
->->-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U41Sharp(tt,V1,V2) -> U42Sharp(isNatKind(V1),V1,V2)
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
->->-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U91Sharp(tt,L,N) -> U92Sharp(isNatIListKind(L),L,N)
 U92Sharp(tt,L,N) -> U93Sharp(isNat(N),L,N)
 U93Sharp(tt,L,N) -> U94Sharp(isNatKind(N),L)
 U94Sharp(tt,L) -> LENGTH(L)
 LENGTH(cons(N,L)) -> U91Sharp(isNatList(L),L,N)
->->-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Reduction Triple Processor:
-> Pairs:
 U51Sharp(tt,V2) -> ISNATILISTKIND(V2)
 ISNATILISTKIND(cons(V1,V2)) -> U51Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X1,X2) = 0
[U13](X) = 0
[U21](X1,X2) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X1,X2) = 0
[U33](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2,X3) = 0
[U43](X1,X2,X3) = 0
[U44](X1,X2,X3) = 0
[U45](X1,X2) = 0
[U46](X) = 0
[U51](X1,X2) = 2.X1 + 2.X2 + 2
[U52](X) = X + 2
[U61](X) = 2
[U71](X) = 2.X + 2
[U81](X1,X2,X3) = 0
[U82](X1,X2,X3) = 0
[U83](X1,X2,X3) = 0
[U84](X1,X2,X3) = 0
[U85](X1,X2) = 0
[U86](X) = 0
[U91](X1,X2,X3) = 0
[U92](X1,X2,X3) = 0
[U93](X1,X2,X3) = 0
[U94](X1,X2) = 0
[isNat](X) = 0
[isNatIList](X) = 0
[isNatIListKind](X) = 2.X + 2
[isNatKind](X) = 2.X + 2
[isNatList](X) = 0
[length](X) = 2.X + 1
[zeros] = 2
[num0] = 2
[cons](X1,X2) = 2.X1 + X2 + 2
[fSNonEmpty] = 0
[nil] = 1
[s](X) = 2.X + 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X1,X2) = 0
[U13Sharp](X) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X1,X2) = 0
[U33Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2,X3) = 0
[U43Sharp](X1,X2,X3) = 0
[U44Sharp](X1,X2,X3) = 0
[U45Sharp](X1,X2) = 0
[U46Sharp](X) = 0
[U51Sharp](X1,X2) = 2.X1 + 2.X2 + 1
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X) = 0
[U81Sharp](X1,X2,X3) = 0
[U82Sharp](X1,X2,X3) = 0
[U83Sharp](X1,X2,X3) = 0
[U84Sharp](X1,X2,X3) = 0
[U85Sharp](X1,X2) = 0
[U86Sharp](X) = 0
[U91Sharp](X1,X2,X3) = 0
[U92Sharp](X1,X2,X3) = 0
[U93Sharp](X1,X2,X3) = 0
[U94Sharp](X1,X2) = 0
[ISNAT](X) = 0
[ISNATILIST](X) = 0
[ISNATILISTKIND](X) = 2.X + 1
[ISNATKIND](X) = X
[ISNATLIST](X) = 0
[LENGTH](X) = 0
[ZEROS] = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 ISNATILISTKIND(cons(V1,V2)) -> U51Sharp(isNatKind(V1),V2)
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
->->-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty

Problem 1.1: 

SubNColl Processor:
-> Pairs:
 ISNATILISTKIND(cons(V1,V2)) -> ISNATKIND(V1)
 ISNATKIND(length(V1)) -> ISNATILISTKIND(V1)
 ISNATKIND(s(V1)) -> ISNATKIND(V1)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Projection:
 pi(ISNATILISTKIND) = 1
 pi(ISNATKIND) = 1

Problem 1.1: 

Basic Processor:
-> Pairs:
 Empty
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Result:
 Set P is empty

The problem is finite.

Problem 1.2: 

Reduction Triple Processor:
-> Pairs:
 U11Sharp(tt,V1) -> U12Sharp(isNatIListKind(V1),V1)
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 U81Sharp(tt,V1,V2) -> U82Sharp(isNatKind(V1),V1,V2)
 U82Sharp(tt,V1,V2) -> U83Sharp(isNatIListKind(V2),V1,V2)
 U83Sharp(tt,V1,V2) -> U84Sharp(isNatIListKind(V2),V1,V2)
 U84Sharp(tt,V1,V2) -> U85Sharp(isNat(V1),V2)
 U84Sharp(tt,V1,V2) -> ISNAT(V1)
 U85Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNATLIST(cons(V1,V2)) -> U81Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 2
[U12](X1,X2) = 2.X1 + 1
[U13](X) = 2
[U21](X1,X2) = 2.X1 + 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = 0
[U32](X1,X2) = 0
[U33](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2,X3) = 0
[U43](X1,X2,X3) = 0
[U44](X1,X2,X3) = 0
[U45](X1,X2) = 0
[U46](X) = 0
[U51](X1,X2) = 2.X2 + 2
[U52](X) = X + 2
[U61](X) = 2.X + 2
[U71](X) = 2
[U81](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U82](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[U83](X1,X2,X3) = X1 + X2 + X3
[U84](X1,X2,X3) = X1 + X2 + 2
[U85](X1,X2) = 2
[U86](X) = 2
[U91](X1,X2,X3) = 0
[U92](X1,X2,X3) = 0
[U93](X1,X2,X3) = 0
[U94](X1,X2) = 0
[isNat](X) = 2.X + 2
[isNatIList](X) = 0
[isNatIListKind](X) = X
[isNatKind](X) = X
[isNatList](X) = 2.X + 2
[length](X) = 2.X + 2
[zeros] = 2
[num0] = 2
[cons](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[nil] = 2
[s](X) = 2.X + 2
[tt] = 2
[U11Sharp](X1,X2) = 2.X1 + 2.X2 + 2
[U12Sharp](X1,X2) = X1 + X2 + 2
[U13Sharp](X) = 0
[U21Sharp](X1,X2) = 2.X1 + 2.X2 + 2
[U22Sharp](X1,X2) = 2.X2 + 2
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X1,X2) = 0
[U33Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2,X3) = 0
[U43Sharp](X1,X2,X3) = 0
[U44Sharp](X1,X2,X3) = 0
[U45Sharp](X1,X2) = 0
[U46Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X) = 0
[U81Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U82Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U83Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U84Sharp](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[U85Sharp](X1,X2) = X1 + X2 + 2
[U86Sharp](X) = 0
[U91Sharp](X1,X2,X3) = 0
[U92Sharp](X1,X2,X3) = 0
[U93Sharp](X1,X2,X3) = 0
[U94Sharp](X1,X2) = 0
[ISNAT](X) = 2.X + 2
[ISNATILIST](X) = 0
[ISNATILISTKIND](X) = 0
[ISNATKIND](X) = 0
[ISNATLIST](X) = X + 2
[LENGTH](X) = 0
[ZEROS] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 U12Sharp(tt,V1) -> ISNATLIST(V1)
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 U81Sharp(tt,V1,V2) -> U82Sharp(isNatKind(V1),V1,V2)
 U82Sharp(tt,V1,V2) -> U83Sharp(isNatIListKind(V2),V1,V2)
 U83Sharp(tt,V1,V2) -> U84Sharp(isNatIListKind(V2),V1,V2)
 U84Sharp(tt,V1,V2) -> U85Sharp(isNat(V1),V2)
 U84Sharp(tt,V1,V2) -> ISNAT(V1)
 U85Sharp(tt,V2) -> ISNATLIST(V2)
 ISNAT(length(V1)) -> U11Sharp(isNatIListKind(V1),V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
 ISNATLIST(cons(V1,V2)) -> U81Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
->->-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty
->->Cycle:
->->-> Pairs:
 U81Sharp(tt,V1,V2) -> U82Sharp(isNatKind(V1),V1,V2)
 U82Sharp(tt,V1,V2) -> U83Sharp(isNatIListKind(V2),V1,V2)
 U83Sharp(tt,V1,V2) -> U84Sharp(isNatIListKind(V2),V1,V2)
 U84Sharp(tt,V1,V2) -> U85Sharp(isNat(V1),V2)
 U85Sharp(tt,V2) -> ISNATLIST(V2)
 ISNATLIST(cons(V1,V2)) -> U81Sharp(isNatKind(V1),V1,V2)
->->-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->->-> Unhiding rules:
 Empty


The problem is decomposed in 2 subproblems.

Problem 1.2.1: 

SubNColl Processor:
-> Pairs:
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
 ISNAT(s(V1)) -> U21Sharp(isNatKind(V1),V1)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Projection:
 pi(U21Sharp) = 2
 pi(U22Sharp) = 2
 pi(ISNAT) = 1

Problem 1.2.1: 

SCC Processor:
-> Pairs:
 U21Sharp(tt,V1) -> U22Sharp(isNatKind(V1),V1)
 U22Sharp(tt,V1) -> ISNAT(V1)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2.2: 

Reduction Triple Processor:
-> Pairs:
 U81Sharp(tt,V1,V2) -> U82Sharp(isNatKind(V1),V1,V2)
 U82Sharp(tt,V1,V2) -> U83Sharp(isNatIListKind(V2),V1,V2)
 U83Sharp(tt,V1,V2) -> U84Sharp(isNatIListKind(V2),V1,V2)
 U84Sharp(tt,V1,V2) -> U85Sharp(isNat(V1),V2)
 U85Sharp(tt,V2) -> ISNATLIST(V2)
 ISNATLIST(cons(V1,V2)) -> U81Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + 2.X2 + 2
[U12](X1,X2) = X1 + 2
[U13](X) = 2
[U21](X1,X2) = 2.X1 + 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = 0
[U32](X1,X2) = 0
[U33](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2,X3) = 0
[U43](X1,X2,X3) = 0
[U44](X1,X2,X3) = 0
[U45](X1,X2) = 0
[U46](X) = 0
[U51](X1,X2) = 2.X1 + 2.X2 + 1
[U52](X) = 2
[U61](X) = 2
[U71](X) = X + 2
[U81](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U82](X1,X2,X3) = 2.X1 + 2.X3 + 2
[U83](X1,X2,X3) = X1 + 2
[U84](X1,X2,X3) = 2
[U85](X1,X2) = 2
[U86](X) = 2
[U91](X1,X2,X3) = 0
[U92](X1,X2,X3) = 0
[U93](X1,X2,X3) = 0
[U94](X1,X2) = 0
[isNat](X) = 2.X + 2
[isNatIList](X) = 0
[isNatIListKind](X) = 2.X + 2
[isNatKind](X) = X
[isNatList](X) = 2.X + 2
[length](X) = 2.X + 2
[zeros] = 2
[num0] = 2
[cons](X1,X2) = 2.X1 + X2 + 2
[fSNonEmpty] = 0
[nil] = 0
[s](X) = 2.X + 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X1,X2) = 0
[U13Sharp](X) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X1,X2) = 0
[U33Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2,X3) = 0
[U43Sharp](X1,X2,X3) = 0
[U44Sharp](X1,X2,X3) = 0
[U45Sharp](X1,X2) = 0
[U46Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X) = 0
[U81Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U82Sharp](X1,X2,X3) = X1 + X2 + 2.X3 + 1
[U83Sharp](X1,X2,X3) = X2 + 2.X3 + 2
[U84Sharp](X1,X2,X3) = X2 + 2.X3 + 2
[U85Sharp](X1,X2) = 2.X2 + 2
[U86Sharp](X) = 0
[U91Sharp](X1,X2,X3) = 0
[U92Sharp](X1,X2,X3) = 0
[U93Sharp](X1,X2,X3) = 0
[U94Sharp](X1,X2) = 0
[ISNAT](X) = 0
[ISNATILIST](X) = 0
[ISNATILISTKIND](X) = 0
[ISNATKIND](X) = 0
[ISNATLIST](X) = 2.X + 1
[LENGTH](X) = 0
[ZEROS] = 0

Problem 1.2.2: 

SCC Processor:
-> Pairs:
 U82Sharp(tt,V1,V2) -> U83Sharp(isNatIListKind(V2),V1,V2)
 U83Sharp(tt,V1,V2) -> U84Sharp(isNatIListKind(V2),V1,V2)
 U84Sharp(tt,V1,V2) -> U85Sharp(isNat(V1),V2)
 U85Sharp(tt,V2) -> ISNATLIST(V2)
 ISNATLIST(cons(V1,V2)) -> U81Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Triple Processor:
-> Pairs:
 U41Sharp(tt,V1,V2) -> U42Sharp(isNatKind(V1),V1,V2)
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + 2.X2 + 2
[U12](X1,X2) = X1 + 2
[U13](X) = 2
[U21](X1,X2) = 2.X1 + 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = 0
[U32](X1,X2) = 0
[U33](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2,X3) = 0
[U43](X1,X2,X3) = 0
[U44](X1,X2,X3) = 0
[U45](X1,X2) = 0
[U46](X) = 0
[U51](X1,X2) = 2.X1 + 2.X2 + 1
[U52](X) = 2
[U61](X) = 2
[U71](X) = X + 2
[U81](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U82](X1,X2,X3) = 2.X1 + 2.X3 + 2
[U83](X1,X2,X3) = X1 + 2
[U84](X1,X2,X3) = 2
[U85](X1,X2) = 2
[U86](X) = 2
[U91](X1,X2,X3) = 0
[U92](X1,X2,X3) = 0
[U93](X1,X2,X3) = 0
[U94](X1,X2) = 0
[isNat](X) = 2.X + 2
[isNatIList](X) = 0
[isNatIListKind](X) = 2.X + 2
[isNatKind](X) = X
[isNatList](X) = 2.X + 2
[length](X) = 2.X + 2
[zeros] = 2
[num0] = 2
[cons](X1,X2) = 2.X1 + X2 + 2
[fSNonEmpty] = 0
[nil] = 0
[s](X) = 2.X + 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X1,X2) = 0
[U13Sharp](X) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X1,X2) = 0
[U33Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42Sharp](X1,X2,X3) = X1 + X2 + 2.X3 + 1
[U43Sharp](X1,X2,X3) = X2 + 2.X3 + 2
[U44Sharp](X1,X2,X3) = X2 + 2.X3 + 2
[U45Sharp](X1,X2) = 2.X2 + 2
[U46Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X) = 0
[U81Sharp](X1,X2,X3) = 0
[U82Sharp](X1,X2,X3) = 0
[U83Sharp](X1,X2,X3) = 0
[U84Sharp](X1,X2,X3) = 0
[U85Sharp](X1,X2) = 0
[U86Sharp](X) = 0
[U91Sharp](X1,X2,X3) = 0
[U92Sharp](X1,X2,X3) = 0
[U93Sharp](X1,X2,X3) = 0
[U94Sharp](X1,X2) = 0
[ISNAT](X) = 0
[ISNATILIST](X) = 2.X + 1
[ISNATILISTKIND](X) = 0
[ISNATKIND](X) = 0
[ISNATLIST](X) = 0
[LENGTH](X) = 0
[ZEROS] = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 U42Sharp(tt,V1,V2) -> U43Sharp(isNatIListKind(V2),V1,V2)
 U43Sharp(tt,V1,V2) -> U44Sharp(isNatIListKind(V2),V1,V2)
 U44Sharp(tt,V1,V2) -> U45Sharp(isNat(V1),V2)
 U45Sharp(tt,V2) -> ISNATILIST(V2)
 ISNATILIST(cons(V1,V2)) -> U41Sharp(isNatKind(V1),V1,V2)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Reduction Triple Processor:
-> Pairs:
 U91Sharp(tt,L,N) -> U92Sharp(isNatIListKind(L),L,N)
 U92Sharp(tt,L,N) -> U93Sharp(isNat(N),L,N)
 U93Sharp(tt,L,N) -> U94Sharp(isNatKind(N),L)
 U94Sharp(tt,L) -> LENGTH(L)
 LENGTH(cons(N,L)) -> U91Sharp(isNatList(L),L,N)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
-> Usable rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 2
[U12](X1,X2) = 2.X1 + 2.X2 + 2
[U13](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = 0
[U32](X1,X2) = 0
[U33](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2,X3) = 0
[U43](X1,X2,X3) = 0
[U44](X1,X2,X3) = 0
[U45](X1,X2) = 0
[U46](X) = 0
[U51](X1,X2) = X1
[U52](X) = X
[U61](X) = X
[U71](X) = 2
[U81](X1,X2,X3) = 2.X2 + 2.X3
[U82](X1,X2,X3) = 2.X2 + 2.X3
[U83](X1,X2,X3) = X2 + 2.X3
[U84](X1,X2,X3) = X2 + 2.X3
[U85](X1,X2) = 2.X2
[U86](X) = X
[U91](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U92](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[U93](X1,X2,X3) = X1 + 2.X2 + 2
[U94](X1,X2) = X1 + 2.X2 + 2
[isNat](X) = 2.X + 2
[isNatIList](X) = 0
[isNatIListKind](X) = 2
[isNatKind](X) = 2
[isNatList](X) = X
[length](X) = 2.X + 2
[zeros] = 0
[num0] = 0
[cons](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[nil] = 2
[s](X) = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X1,X2) = 0
[U13Sharp](X) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X1,X2) = 0
[U33Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2,X3) = 0
[U43Sharp](X1,X2,X3) = 0
[U44Sharp](X1,X2,X3) = 0
[U45Sharp](X1,X2) = 0
[U46Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X) = 0
[U81Sharp](X1,X2,X3) = 0
[U82Sharp](X1,X2,X3) = 0
[U83Sharp](X1,X2,X3) = 0
[U84Sharp](X1,X2,X3) = 0
[U85Sharp](X1,X2) = 0
[U86Sharp](X) = 0
[U91Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U92Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U93Sharp](X1,X2,X3) = X1 + 2.X2
[U94Sharp](X1,X2) = 2.X2 + 2
[ISNAT](X) = 0
[ISNATILIST](X) = 0
[ISNATILISTKIND](X) = 0
[ISNATKIND](X) = 0
[ISNATLIST](X) = 0
[LENGTH](X) = 2.X
[ZEROS] = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 U92Sharp(tt,L,N) -> U93Sharp(isNat(N),L,N)
 U93Sharp(tt,L,N) -> U94Sharp(isNatKind(N),L)
 U94Sharp(tt,L) -> LENGTH(L)
 LENGTH(cons(N,L)) -> U91Sharp(isNatList(L),L,N)
-> Rules:
 U11(tt,V1) -> U12(isNatIListKind(V1),V1)
 U12(tt,V1) -> U13(isNatList(V1))
 U13(tt) -> tt
 U21(tt,V1) -> U22(isNatKind(V1),V1)
 U22(tt,V1) -> U23(isNat(V1))
 U23(tt) -> tt
 U31(tt,V) -> U32(isNatIListKind(V),V)
 U32(tt,V) -> U33(isNatList(V))
 U33(tt) -> tt
 U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2)
 U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2)
 U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2)
 U44(tt,V1,V2) -> U45(isNat(V1),V2)
 U45(tt,V2) -> U46(isNatIList(V2))
 U46(tt) -> tt
 U51(tt,V2) -> U52(isNatIListKind(V2))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt) -> tt
 U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2)
 U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2)
 U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2)
 U84(tt,V1,V2) -> U85(isNat(V1),V2)
 U85(tt,V2) -> U86(isNatList(V2))
 U86(tt) -> tt
 U91(tt,L,N) -> U92(isNatIListKind(L),L,N)
 U92(tt,L,N) -> U93(isNat(N),L,N)
 U93(tt,L,N) -> U94(isNatKind(N),L)
 U94(tt,L) -> s(length(L))
 isNat(length(V1)) -> U11(isNatIListKind(V1),V1)
 isNat(num0) -> tt
 isNat(s(V1)) -> U21(isNatKind(V1),V1)
 isNatIList(zeros) -> tt
 isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2)
 isNatIList(V) -> U31(isNatIListKind(V),V)
 isNatIListKind(zeros) -> tt
 isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2)
 isNatIListKind(nil) -> tt
 isNatKind(length(V1)) -> U61(isNatIListKind(V1))
 isNatKind(num0) -> tt
 isNatKind(s(V1)) -> U71(isNatKind(V1))
 isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2)
 isNatList(nil) -> tt
 length(cons(N,L)) -> U91(isNatList(L),L,N)
 length(nil) -> num0
 zeros -> cons(num0,zeros)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
