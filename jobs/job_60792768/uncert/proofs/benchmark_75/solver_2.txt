YES

Problem 1: 

(VAR vu95NonEmpty M N V1 V2 X)
(STRATEGY CONTEXTSENSITIVE
(U11 1)
(U21 1)
(and 1)
(isNat)
(plus 1 2)
(num0)
(fSNonEmpty)
(s 1)
(tt)
)
(RULES
U11(tt,N) -> N
U21(tt,M,N) -> s(plus(N,M))
and(tt,X) -> X
isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
isNat(num0) -> tt
isNat(s(V1)) -> isNat(V1)
plus(N,num0) -> U11(isNat(N),N)
plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U11Sharp(tt,N) -> N
 U21Sharp(tt,M,N) -> PLUS(N,M)
 U21Sharp(tt,M,N) -> M
 U21Sharp(tt,M,N) -> N
 AND(tt,X) -> X
 ISNAT(plus(V1,V2)) -> AND(isNat(V1),isNat(V2))
 ISNAT(plus(V1,V2)) -> ISNAT(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
 PLUS(N,num0) -> U11Sharp(isNat(N),N)
 PLUS(N,num0) -> ISNAT(N)
 PLUS(N,s(M)) -> U21Sharp(and(isNat(M),isNat(N)),M,N)
 PLUS(N,s(M)) -> AND(isNat(M),isNat(N))
 PLUS(N,s(M)) -> ISNAT(M)
-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
-> Unhiding Rules:
 isNat(N) -> ISNAT(N)
 isNat(V2) -> ISNAT(V2)

Problem 1: 

SCC Processor:
-> Pairs:
 U11Sharp(tt,N) -> N
 U21Sharp(tt,M,N) -> PLUS(N,M)
 U21Sharp(tt,M,N) -> M
 U21Sharp(tt,M,N) -> N
 AND(tt,X) -> X
 ISNAT(plus(V1,V2)) -> AND(isNat(V1),isNat(V2))
 ISNAT(plus(V1,V2)) -> ISNAT(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
 PLUS(N,num0) -> U11Sharp(isNat(N),N)
 PLUS(N,num0) -> ISNAT(N)
 PLUS(N,s(M)) -> U21Sharp(and(isNat(M),isNat(N)),M,N)
 PLUS(N,s(M)) -> AND(isNat(M),isNat(N))
 PLUS(N,s(M)) -> ISNAT(M)
-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
-> Unhiding rules:
 isNat(N) -> ISNAT(N)
 isNat(V2) -> ISNAT(V2)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(tt,X) -> X
 ISNAT(plus(V1,V2)) -> AND(isNat(V1),isNat(V2))
 ISNAT(plus(V1,V2)) -> ISNAT(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
->->-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
->->-> Unhiding rules:
 isNat(N) -> ISNAT(N)
 isNat(V2) -> ISNAT(V2)
->->Cycle:
->->-> Pairs:
 U21Sharp(tt,M,N) -> PLUS(N,M)
 PLUS(N,s(M)) -> U21Sharp(and(isNat(M),isNat(N)),M,N)
->->-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
->->-> Unhiding rules:
 Empty


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Reduction Triple Processor:
-> Pairs:
 AND(tt,X) -> X
 ISNAT(plus(V1,V2)) -> AND(isNat(V1),isNat(V2))
 ISNAT(plus(V1,V2)) -> ISNAT(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
-> Unhiding rules:
 isNat(N) -> ISNAT(N)
 isNat(V2) -> ISNAT(V2)
-> Usable rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X2
[U21](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = X1 + X2 + 2
[isNat](X) = 2.X + 2
[plus](X1,X2) = 2.X1 + 2.X2 + 2
[num0] = 2
[fSNonEmpty] = 0
[s](X) = X
[tt] = 0
[U11Sharp](X1,X2) = 0
[U21Sharp](X1,X2,X3) = 0
[AND](X1,X2) = 2.X2 + 1
[ISNAT](X) = 2.X + 1
[PLUS](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 AND(tt,X) -> X
 ISNAT(plus(V1,V2)) -> AND(isNat(V1),isNat(V2))
 ISNAT(plus(V1,V2)) -> ISNAT(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
-> Unhiding rules:
 isNat(V2) -> ISNAT(V2)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(tt,X) -> X
 ISNAT(plus(V1,V2)) -> AND(isNat(V1),isNat(V2))
 ISNAT(plus(V1,V2)) -> ISNAT(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
->->-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
->->-> Unhiding rules:
 isNat(V2) -> ISNAT(V2)

Problem 1.1: 

Reduction Triple Processor:
-> Pairs:
 AND(tt,X) -> X
 ISNAT(plus(V1,V2)) -> AND(isNat(V1),isNat(V2))
 ISNAT(plus(V1,V2)) -> ISNAT(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
-> Unhiding rules:
 isNat(V2) -> ISNAT(V2)
-> Usable rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X2 + 2
[U21](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + X2
[isNat](X) = 2.X + 2
[plus](X1,X2) = 2.X1 + 2.X2 + 2
[num0] = 0
[fSNonEmpty] = 0
[s](X) = X
[tt] = 1
[U11Sharp](X1,X2) = 0
[U21Sharp](X1,X2,X3) = 0
[AND](X1,X2) = X2 + 2
[ISNAT](X) = 2.X + 1
[PLUS](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 AND(tt,X) -> X
 ISNAT(plus(V1,V2)) -> AND(isNat(V1),isNat(V2))
 ISNAT(plus(V1,V2)) -> ISNAT(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ISNAT(plus(V1,V2)) -> ISNAT(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
->->-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
->->-> Unhiding rules:
 Empty

Problem 1.1: 

SubNColl Processor:
-> Pairs:
 ISNAT(plus(V1,V2)) -> ISNAT(V1)
 ISNAT(s(V1)) -> ISNAT(V1)
-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
-> Unhiding rules:
 Empty
->Projection:
 pi(ISNAT) = 1

Problem 1.1: 

Basic Processor:
-> Pairs:
 Empty
-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
-> Unhiding rules:
 Empty
-> Result:
 Set P is empty

The problem is finite.

Problem 1.2: 

SubNColl Processor:
-> Pairs:
 U21Sharp(tt,M,N) -> PLUS(N,M)
 PLUS(N,s(M)) -> U21Sharp(and(isNat(M),isNat(N)),M,N)
-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
-> Unhiding rules:
 Empty
->Projection:
 pi(U21Sharp) = 2
 pi(PLUS) = 2

Problem 1.2: 

SCC Processor:
-> Pairs:
 U21Sharp(tt,M,N) -> PLUS(N,M)
-> Rules:
 U11(tt,N) -> N
 U21(tt,M,N) -> s(plus(N,M))
 and(tt,X) -> X
 isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2))
 isNat(num0) -> tt
 isNat(s(V1)) -> isNat(V1)
 plus(N,num0) -> U11(isNat(N),N)
 plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)
-> Unhiding rules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
