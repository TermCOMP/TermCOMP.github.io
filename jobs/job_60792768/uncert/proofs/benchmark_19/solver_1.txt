YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/fFM2C.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given CSR could be proven:

(0) CSR
(1) CSRRRRProof [EQUIVALENT, 34 ms]
(2) CSR
(3) CSRRRRProof [EQUIVALENT, 0 ms]
(4) CSR
(5) CSRRRRProof [EQUIVALENT, 0 ms]
(6) CSR
(7) CSRRRRProof [EQUIVALENT, 0 ms]
(8) CSR
(9) CSRRRRProof [EQUIVALENT, 4 ms]
(10) CSR
(11) RisEmptyProof [EQUIVALENT, 0 ms]
(12) YES


----------------------------------------

(0)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))

The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: empty set
0: empty set
add: {1, 2}
dbl: {1}
first: {1, 2}
nil: empty set

----------------------------------------

(1) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))

The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: empty set
0: empty set
add: {1, 2}
dbl: {1}
first: {1, 2}
nil: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 1
   POL(add(x_1, x_2)) = x_1 + x_2
   POL(cons(x_1, x_2)) = x_1
   POL(dbl(x_1)) = x_1
   POL(first(x_1, x_2)) = x_1 + x_2
   POL(nil) = 1
   POL(recip(x_1)) = 1 + x_1
   POL(s(x_1)) = 0
   POL(sqr(x_1)) = x_1
   POL(terms(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   add(0, X) -> X




----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))

The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: empty set
0: empty set
add: {1, 2}
dbl: {1}
first: {1, 2}
nil: empty set

----------------------------------------

(3) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))

The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: empty set
0: empty set
add: {1, 2}
dbl: {1}
first: {1, 2}
nil: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 1
   POL(add(x_1, x_2)) = x_1 + x_2
   POL(cons(x_1, x_2)) = x_1
   POL(dbl(x_1)) = x_1
   POL(first(x_1, x_2)) = 1 + x_1 + x_2
   POL(nil) = 0
   POL(recip(x_1)) = 1 + x_1
   POL(s(x_1)) = 1
   POL(sqr(x_1)) = x_1
   POL(terms(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))




----------------------------------------

(4)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(s(X), Y) -> s(add(X, Y))

The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: empty set
0: empty set
add: {1, 2}
dbl: {1}

----------------------------------------

(5) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(s(X), Y) -> s(add(X, Y))

The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: empty set
0: empty set
add: {1, 2}
dbl: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(add(x_1, x_2)) = 1 + x_1 + x_2
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(dbl(x_1)) = x_1
   POL(recip(x_1)) = x_1
   POL(s(x_1)) = 0
   POL(sqr(x_1)) = x_1
   POL(terms(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   add(s(X), Y) -> s(add(X, Y))




----------------------------------------

(6)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))

The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: empty set
0: empty set
add: {1, 2}
dbl: {1}

----------------------------------------

(7) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))

The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: empty set
0: empty set
add: {1, 2}
dbl: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(add(x_1, x_2)) = x_1 + x_2
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(dbl(x_1)) = 1 + x_1
   POL(recip(x_1)) = x_1
   POL(s(x_1)) = 0
   POL(sqr(x_1)) = x_1
   POL(terms(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))




----------------------------------------

(8)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))

The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: empty set
0: empty set
add: {1, 2}
dbl: {1}

----------------------------------------

(9) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))

The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: empty set
0: empty set
add: {1, 2}
dbl: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(add(x_1, x_2)) = 2 + x_1 + x_2
   POL(cons(x_1, x_2)) = x_1
   POL(dbl(x_1)) = 2*x_1
   POL(recip(x_1)) = x_1
   POL(s(x_1)) = 2
   POL(sqr(x_1)) = 1 + 2*x_1
   POL(terms(x_1)) = 2 + 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))




----------------------------------------

(10)
Obligation:
Context-sensitive rewrite system:
R is empty.

----------------------------------------

(11) RisEmptyProof (EQUIVALENT)
The CSR R is empty. Hence, termination is trivially proven.
----------------------------------------

(12)
YES
