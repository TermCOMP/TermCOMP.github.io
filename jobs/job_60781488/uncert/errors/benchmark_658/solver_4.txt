Input TRS:
    1: app(nil(),k) -> k
    2: app(l,nil()) -> l
    3: app(cons(x,l),k) -> cons(x,app(l,k))
    4: sum(cons(x,nil())) -> cons(x,nil())
    5: sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h()),l))
    6: a(h(),h(),x) -> s(x)
    7: a(x,s(y),h()) -> a(x,y,s(h()))
    8: a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
    9: a(s(x),h(),z) -> a(x,z,z)
Number of strict rules: 9
Direct Order(PosReal,>,Poly) ... failed.
Freezing sum
1: app(nil(),k) -> k
2: app(l,nil()) -> l
3: app(cons(x,l),k) -> cons(x,app(l,k))
4: sum❆1_cons(x,nil()) -> cons(x,nil())
5: sum❆1_cons(x,cons(y,l)) -> sum❆1_cons(a(x,y,h()),l)
6: a(h(),h(),x) -> s(x)
7: a(x,s(y),h()) -> a(x,y,s(h()))
8: a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
9: a(s(x),h(),z) -> a(x,z,z)
10: sum(cons(_1,_2)) ->= sum❆1_cons(_1,_2)
Number of strict rules: 9
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #a(s(x),h(),z) -> #a(x,z,z)
   #2: #a(x,s(y),h()) -> #a(x,y,s(h()))
   #3: #sum(cons(_1,_2)) ->? #sum❆1_cons(_1,_2)
   #4: #sum❆1_cons(x,cons(y,l)) -> #sum❆1_cons(a(x,y,h()),l)
   #5: #sum❆1_cons(x,cons(y,l)) -> #a(x,y,h())
   #6: #app(cons(x,l),k) -> #app(l,k)
   #7: #a(x,s(y),s(z)) -> #a(x,y,a(x,s(y),z))
   #8: #a(x,s(y),s(z)) -> #a(x,s(y),z)
Number of SCCs: 3, DPs: 6, edges: 15
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a(x1,x2,x3)	weight: 0
     h()	weight: 0
     s(x1)	weight: 0
sum❆1_cons(x1,x2)	weight: 0
#sum❆1_cons(x1,x2)	weight: 0
   sum(x1)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: x1
  cons(x1,x2)	weight: (/ 1 2) + x2
   #a(x1,x2,x3)	weight: 0
 #sum(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 2, DPs: 5, edges: 14
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a(x1,x2,x3)	weight: (/ 1 4) + x2 + x3
     h()	weight: 0
     s(x1)	weight: (/ 1 2) + x1
sum❆1_cons(x1,x2)	weight: 0
#sum❆1_cons(x1,x2)	weight: x2
   sum(x1)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 4) + x1 + x2
   #a(x1,x2,x3)	weight: 0
 #sum(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 1, DPs: 4, edges: 13
	SCC { #1 #2 #7 #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a(x1,x2,x3)	weight: (/ 1 4) + x3
     h()	weight: 0
     s(x1)	weight: (/ 1 2) + x1
sum❆1_cons(x1,x2)	weight: 0
#sum❆1_cons(x1,x2)	weight: 0
   sum(x1)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 4)
   #a(x1,x2,x3)	weight: x1
 #sum(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 1, DPs: 3, edges: 7
	SCC { #2 #7 #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a(x1,x2,x3)	weight: (/ 1 4) + x3
     h()	weight: 0
     s(x1)	weight: (/ 1 2) + x1
sum❆1_cons(x1,x2)	weight: 0
#sum❆1_cons(x1,x2)	weight: 0
   sum(x1)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 4)
   #a(x1,x2,x3)	weight: x2
 #sum(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2 #7
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
     a(x1,x2,x3)	weight: 0
     h()	weight: 0
     s(x1)	weight: (/ 1 4) + x1
sum❆1_cons(x1,x2)	weight: 0
#sum❆1_cons(x1,x2)	weight: 0
   sum(x1)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
  cons(x1,x2)	weight: 0
   #a(x1,x2,x3)	weight: max{0, (/ 1 4) + x3}
 #sum(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 0, DPs: 0, edges: 0
