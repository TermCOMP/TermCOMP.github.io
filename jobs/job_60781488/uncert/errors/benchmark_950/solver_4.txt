Input TRS:
    1: nats() -> cons(0(),n__incr(nats()))
    2: pairs() -> cons(0(),n__incr(odds()))
    3: odds() -> incr(pairs())
    4: incr(cons(X,XS)) -> cons(s(X),n__incr(activate(XS)))
    5: head(cons(X,XS)) -> X
    6: tail(cons(X,XS)) -> activate(XS)
    7: incr(X) -> n__incr(X)
    8: activate(n__incr(X)) -> incr(X)
    9: activate(X) -> X
Number of strict rules: 9
Direct Order(PosReal,>,Poly) ... removes: 5 6
  incr(x1)	weight: x1
     s(x1)	weight: x1
activate(x1)	weight: x1
 pairs()	weight: 0
  tail(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
  odds()	weight: 0
  nats()	weight: 0
  head(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: x1 + x2
n__incr(x1)	weight: x1
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #pairs() -> #odds()
   #2: #odds() -> #incr(pairs())
   #3: #odds() -> #pairs()
   #4: #nats() -> #nats()
   #5: #activate(n__incr(X)) -> #incr(X)
   #6: #incr(cons(X,XS)) -> #activate(XS)
Number of SCCs: 3, DPs: 5, edges: 5
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #nats()	-#4->
  #nats()	--->*
  #nats()
  Looping with: [ ]
