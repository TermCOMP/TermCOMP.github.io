Input TRS:
    1: pairNs() -> cons(0(),n__incr(oddNs()))
    2: oddNs() -> incr(pairNs())
    3: incr(cons(X,XS)) -> cons(s(X),n__incr(activate(XS)))
    4: take(0(),XS) -> nil()
    5: take(s(N),cons(X,XS)) -> cons(X,n__take(N,activate(XS)))
    6: zip(nil(),XS) -> nil()
    7: zip(X,nil()) -> nil()
    8: zip(cons(X,XS),cons(Y,YS)) -> cons(pair(X,Y),n__zip(activate(XS),activate(YS)))
    9: tail(cons(X,XS)) -> activate(XS)
    10: repItems(nil()) -> nil()
    11: repItems(cons(X,XS)) -> cons(X,n__cons(X,n__repItems(activate(XS))))
    12: incr(X) -> n__incr(X)
    13: take(X1,X2) -> n__take(X1,X2)
    14: zip(X1,X2) -> n__zip(X1,X2)
    15: cons(X1,X2) -> n__cons(X1,X2)
    16: repItems(X) -> n__repItems(X)
    17: activate(n__incr(X)) -> incr(X)
    18: activate(n__take(X1,X2)) -> take(X1,X2)
    19: activate(n__zip(X1,X2)) -> zip(X1,X2)
    20: activate(n__cons(X1,X2)) -> cons(X1,X2)
    21: activate(n__repItems(X)) -> repItems(X)
    22: activate(X) -> X
Number of strict rules: 22
Direct Order(PosReal,>,Poly) ... removes: 4 10 7 9 6
repItems(x1)	weight: (/ 56447 2) + 2 * x1
  incr(x1)	weight: x1
     s(x1)	weight: x1
activate(x1)	weight: x1
  take(x1,x2)	weight: (/ 35777 4) + x1 + x2
  pair(x1,x2)	weight: x1 + x2
  tail(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
n__take(x1,x2)	weight: (/ 35777 4) + x1 + x2
n__cons(x1,x2)	weight: x1 + x2
   nil()	weight: 0
n__zip(x1,x2)	weight: (/ 13757 2) + x1 + x2
pairNs()	weight: 0
 oddNs()	weight: 0
n__repItems(x1)	weight: (/ 56447 2) + 2 * x1
  cons(x1,x2)	weight: x1 + x2
n__incr(x1)	weight: x1
   zip(x1,x2)	weight: (/ 13757 2) + x1 + x2
Number of strict rules: 17
Direct Order(PosReal,>,Poly) ... removes: 19
repItems(x1)	weight: 2 * x1
  incr(x1)	weight: 2 * x1
     s(x1)	weight: x1
activate(x1)	weight: 2 * x1
  take(x1,x2)	weight: x1 + 2 * x2
  pair(x1,x2)	weight: x1 + x2
  tail(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
n__take(x1,x2)	weight: x1 + x2
n__cons(x1,x2)	weight: x1 + x2
   nil()	weight: 0
n__zip(x1,x2)	weight: (/ 38315 2) + x1 + x2
pairNs()	weight: 0
 oddNs()	weight: 0
n__repItems(x1)	weight: x1
  cons(x1,x2)	weight: x1 + x2
n__incr(x1)	weight: x1
   zip(x1,x2)	weight: (/ 38315 2) + 2 * x1 + 2 * x2
Number of strict rules: 16
Direct Order(PosReal,>,Poly) ... removes: 8 14
repItems(x1)	weight: 2 * x1
  incr(x1)	weight: 2 * x1
     s(x1)	weight: x1
activate(x1)	weight: 2 * x1
  take(x1,x2)	weight: x1 + 2 * x2
  pair(x1,x2)	weight: x1 + x2
  tail(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
n__take(x1,x2)	weight: x1 + x2
n__cons(x1,x2)	weight: x1 + x2
   nil()	weight: 0
n__zip(x1,x2)	weight: (/ 38315 2) + x1 + x2
pairNs()	weight: 0
 oddNs()	weight: 0
n__repItems(x1)	weight: x1
  cons(x1,x2)	weight: x1 + x2
n__incr(x1)	weight: x1
   zip(x1,x2)	weight: 19158 + 2 * x1 + 2 * x2
Number of strict rules: 14
Direct Order(PosReal,>,Poly) ... removes: 16 5 11 13
repItems(x1)	weight: (/ 11217 2) + 2 * x1
  incr(x1)	weight: 2 * x1
     s(x1)	weight: 2 * x1
activate(x1)	weight: 2 * x1
  take(x1,x2)	weight: (/ 115749 2) + x1 + 2 * x2
  pair(x1,x2)	weight: (/ 1 4) + x1 + x2
  tail(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
n__take(x1,x2)	weight: (/ 115749 4) + x1 + x2
n__cons(x1,x2)	weight: x1 + x2
   nil()	weight: 0
n__zip(x1,x2)	weight: (/ 76629 4) + x1 + x2
pairNs()	weight: 0
 oddNs()	weight: 0
n__repItems(x1)	weight: (/ 11217 4) + x1
  cons(x1,x2)	weight: x1 + x2
n__incr(x1)	weight: x1
   zip(x1,x2)	weight: 19157 + 2 * x1 + 2 * x2
Number of strict rules: 10
Direct Order(PosReal,>,Poly) ... removes: 18 21
repItems(x1)	weight: (/ 22433 4) + 2 * x1
  incr(x1)	weight: 2 * x1
     s(x1)	weight: 2 * x1
activate(x1)	weight: 2 * x1
  take(x1,x2)	weight: (/ 231499 4) + x1 + 2 * x2
  pair(x1,x2)	weight: (/ 1 4) + x1 + x2
  tail(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
n__take(x1,x2)	weight: (/ 57875 2) + x1 + x2
n__cons(x1,x2)	weight: x1 + x2
   nil()	weight: 0
n__zip(x1,x2)	weight: (/ 76629 4) + x1 + x2
pairNs()	weight: 0
 oddNs()	weight: 0
n__repItems(x1)	weight: (/ 11217 4) + x1
  cons(x1,x2)	weight: x1 + x2
n__incr(x1)	weight: x1
   zip(x1,x2)	weight: 19157 + 2 * x1 + 2 * x2
Number of strict rules: 8
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #oddNs() -> #incr(pairNs())
   #2: #oddNs() -> #pairNs()
   #3: #activate(n__cons(X1,X2)) -> #cons(X1,X2)
   #4: #activate(n__incr(X)) -> #incr(X)
   #5: #incr(cons(X,XS)) -> #cons(s(X),n__incr(activate(XS)))
   #6: #incr(cons(X,XS)) -> #activate(XS)
   #7: #pairNs() -> #cons(0(),n__incr(oddNs()))
   #8: #pairNs() -> #oddNs()
Number of SCCs: 2, DPs: 4, edges: 4
	SCC { #2 #8 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #pairNs()	-#8->
  #oddNs()	--->*
  #oddNs()	-#2->
  #pairNs()	--->*
  #pairNs()
  Looping with: [ ]
