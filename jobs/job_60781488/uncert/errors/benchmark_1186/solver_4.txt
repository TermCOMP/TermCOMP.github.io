Input TRS:
    1: a__zeros() -> cons(0(),zeros())
    2: a__U11(tt(),V1) -> a__U12(a__isNatList(V1))
    3: a__U12(tt()) -> tt()
    4: a__U21(tt(),V1) -> a__U22(a__isNat(V1))
    5: a__U22(tt()) -> tt()
    6: a__U31(tt(),V) -> a__U32(a__isNatList(V))
    7: a__U32(tt()) -> tt()
    8: a__U41(tt(),V1,V2) -> a__U42(a__isNat(V1),V2)
    9: a__U42(tt(),V2) -> a__U43(a__isNatIList(V2))
    10: a__U43(tt()) -> tt()
    11: a__U51(tt(),V1,V2) -> a__U52(a__isNat(V1),V2)
    12: a__U52(tt(),V2) -> a__U53(a__isNatList(V2))
    13: a__U53(tt()) -> tt()
    14: a__U61(tt(),L) -> s(a__length(mark(L)))
    15: a__and(tt(),X) -> mark(X)
    16: a__isNat(0()) -> tt()
    17: a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1),V1)
    18: a__isNat(s(V1)) -> a__U21(a__isNatKind(V1),V1)
    19: a__isNatIList(V) -> a__U31(a__isNatIListKind(V),V)
    20: a__isNatIList(zeros()) -> tt()
    21: a__isNatIList(cons(V1,V2)) -> a__U41(a__and(a__isNatKind(V1),isNatIListKind(V2)),V1,V2)
    22: a__isNatIListKind(nil()) -> tt()
    23: a__isNatIListKind(zeros()) -> tt()
    24: a__isNatIListKind(cons(V1,V2)) -> a__and(a__isNatKind(V1),isNatIListKind(V2))
    25: a__isNatKind(0()) -> tt()
    26: a__isNatKind(length(V1)) -> a__isNatIListKind(V1)
    27: a__isNatKind(s(V1)) -> a__isNatKind(V1)
    28: a__isNatList(nil()) -> tt()
    29: a__isNatList(cons(V1,V2)) -> a__U51(a__and(a__isNatKind(V1),isNatIListKind(V2)),V1,V2)
    30: a__length(nil()) -> 0()
    31: a__length(cons(N,L)) -> a__U61(a__and(a__and(a__isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L)
    32: mark(zeros()) -> a__zeros()
    33: mark(U11(X1,X2)) -> a__U11(mark(X1),X2)
    34: mark(U12(X)) -> a__U12(mark(X))
    35: mark(isNatList(X)) -> a__isNatList(X)
    36: mark(U21(X1,X2)) -> a__U21(mark(X1),X2)
    37: mark(U22(X)) -> a__U22(mark(X))
    38: mark(isNat(X)) -> a__isNat(X)
    39: mark(U31(X1,X2)) -> a__U31(mark(X1),X2)
    40: mark(U32(X)) -> a__U32(mark(X))
    41: mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3)
    42: mark(U42(X1,X2)) -> a__U42(mark(X1),X2)
    43: mark(U43(X)) -> a__U43(mark(X))
    44: mark(isNatIList(X)) -> a__isNatIList(X)
    45: mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3)
    46: mark(U52(X1,X2)) -> a__U52(mark(X1),X2)
    47: mark(U53(X)) -> a__U53(mark(X))
    48: mark(U61(X1,X2)) -> a__U61(mark(X1),X2)
    49: mark(length(X)) -> a__length(mark(X))
    50: mark(and(X1,X2)) -> a__and(mark(X1),X2)
    51: mark(isNatIListKind(X)) -> a__isNatIListKind(X)
    52: mark(isNatKind(X)) -> a__isNatKind(X)
    53: mark(cons(X1,X2)) -> cons(mark(X1),X2)
    54: mark(0()) -> 0()
    55: mark(tt()) -> tt()
    56: mark(s(X)) -> s(mark(X))
    57: mark(nil()) -> nil()
    58: a__zeros() -> zeros()
    59: a__U11(X1,X2) -> U11(X1,X2)
    60: a__U12(X) -> U12(X)
    61: a__isNatList(X) -> isNatList(X)
    62: a__U21(X1,X2) -> U21(X1,X2)
    63: a__U22(X) -> U22(X)
    64: a__isNat(X) -> isNat(X)
    65: a__U31(X1,X2) -> U31(X1,X2)
    66: a__U32(X) -> U32(X)
    67: a__U41(X1,X2,X3) -> U41(X1,X2,X3)
    68: a__U42(X1,X2) -> U42(X1,X2)
    69: a__U43(X) -> U43(X)
    70: a__isNatIList(X) -> isNatIList(X)
    71: a__U51(X1,X2,X3) -> U51(X1,X2,X3)
    72: a__U52(X1,X2) -> U52(X1,X2)
    73: a__U53(X) -> U53(X)
    74: a__U61(X1,X2) -> U61(X1,X2)
    75: a__length(X) -> length(X)
    76: a__and(X1,X2) -> and(X1,X2)
    77: a__isNatIListKind(X) -> isNatIListKind(X)
    78: a__isNatKind(X) -> isNatKind(X)
Number of strict rules: 78
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #a__U11(tt(),V1) -> #a__U12(a__isNatList(V1))
   #2: #a__U11(tt(),V1) -> #a__isNatList(V1)
   #3: #mark(U43(X)) -> #a__U43(mark(X))
   #4: #mark(U43(X)) -> #mark(X)
   #5: #a__isNatList(cons(V1,V2)) -> #a__U51(a__and(a__isNatKind(V1),isNatIListKind(V2)),V1,V2)
   #6: #a__isNatList(cons(V1,V2)) -> #a__and(a__isNatKind(V1),isNatIListKind(V2))
   #7: #a__isNatList(cons(V1,V2)) -> #a__isNatKind(V1)
   #8: #mark(isNatList(X)) -> #a__isNatList(X)
   #9: #mark(U52(X1,X2)) -> #a__U52(mark(X1),X2)
   #10: #mark(U52(X1,X2)) -> #mark(X1)
   #11: #mark(U42(X1,X2)) -> #a__U42(mark(X1),X2)
   #12: #mark(U42(X1,X2)) -> #mark(X1)
   #13: #mark(U41(X1,X2,X3)) -> #a__U41(mark(X1),X2,X3)
   #14: #mark(U41(X1,X2,X3)) -> #mark(X1)
   #15: #mark(U22(X)) -> #a__U22(mark(X))
   #16: #mark(U22(X)) -> #mark(X)
   #17: #mark(U53(X)) -> #a__U53(mark(X))
   #18: #mark(U53(X)) -> #mark(X)
   #19: #mark(cons(X1,X2)) -> #mark(X1)
   #20: #mark(U61(X1,X2)) -> #a__U61(mark(X1),X2)
   #21: #mark(U61(X1,X2)) -> #mark(X1)
   #22: #mark(isNat(X)) -> #a__isNat(X)
   #23: #a__U31(tt(),V) -> #a__U32(a__isNatList(V))
   #24: #a__U31(tt(),V) -> #a__isNatList(V)
   #25: #mark(U32(X)) -> #a__U32(mark(X))
   #26: #mark(U32(X)) -> #mark(X)
   #27: #mark(isNatIListKind(X)) -> #a__isNatIListKind(X)
   #28: #a__U42(tt(),V2) -> #a__U43(a__isNatIList(V2))
   #29: #a__U42(tt(),V2) -> #a__isNatIList(V2)
   #30: #a__U51(tt(),V1,V2) -> #a__U52(a__isNat(V1),V2)
   #31: #a__U51(tt(),V1,V2) -> #a__isNat(V1)
   #32: #a__isNatIListKind(cons(V1,V2)) -> #a__and(a__isNatKind(V1),isNatIListKind(V2))
   #33: #a__isNatIListKind(cons(V1,V2)) -> #a__isNatKind(V1)
   #34: #mark(U51(X1,X2,X3)) -> #a__U51(mark(X1),X2,X3)
   #35: #mark(U51(X1,X2,X3)) -> #mark(X1)
   #36: #a__U52(tt(),V2) -> #a__U53(a__isNatList(V2))
   #37: #a__U52(tt(),V2) -> #a__isNatList(V2)
   #38: #a__length(cons(N,L)) -> #a__U61(a__and(a__and(a__isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L)
   #39: #a__length(cons(N,L)) -> #a__and(a__and(a__isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N)))
   #40: #a__length(cons(N,L)) -> #a__and(a__isNatList(L),isNatIListKind(L))
   #41: #a__length(cons(N,L)) -> #a__isNatList(L)
   #42: #mark(s(X)) -> #mark(X)
   #43: #a__U61(tt(),L) -> #a__length(mark(L))
   #44: #a__U61(tt(),L) -> #mark(L)
   #45: #mark(isNatKind(X)) -> #a__isNatKind(X)
   #46: #mark(length(X)) -> #a__length(mark(X))
   #47: #mark(length(X)) -> #mark(X)
   #48: #mark(U31(X1,X2)) -> #a__U31(mark(X1),X2)
   #49: #mark(U31(X1,X2)) -> #mark(X1)
   #50: #mark(U11(X1,X2)) -> #a__U11(mark(X1),X2)
   #51: #mark(U11(X1,X2)) -> #mark(X1)
   #52: #mark(isNatIList(X)) -> #a__isNatIList(X)
   #53: #mark(U12(X)) -> #a__U12(mark(X))
   #54: #mark(U12(X)) -> #mark(X)
   #55: #a__isNatKind(s(V1)) -> #a__isNatKind(V1)
   #56: #a__isNat(length(V1)) -> #a__U11(a__isNatIListKind(V1),V1)
   #57: #a__isNat(length(V1)) -> #a__isNatIListKind(V1)
   #58: #mark(zeros()) -> #a__zeros()
   #59: #a__isNatIList(V) -> #a__U31(a__isNatIListKind(V),V)
   #60: #a__isNatIList(V) -> #a__isNatIListKind(V)
   #61: #a__isNatKind(length(V1)) -> #a__isNatIListKind(V1)
   #62: #mark(U21(X1,X2)) -> #a__U21(mark(X1),X2)
   #63: #mark(U21(X1,X2)) -> #mark(X1)
   #64: #a__isNatIList(cons(V1,V2)) -> #a__U41(a__and(a__isNatKind(V1),isNatIListKind(V2)),V1,V2)
   #65: #a__isNatIList(cons(V1,V2)) -> #a__and(a__isNatKind(V1),isNatIListKind(V2))
   #66: #a__isNatIList(cons(V1,V2)) -> #a__isNatKind(V1)
   #67: #a__U41(tt(),V1,V2) -> #a__U42(a__isNat(V1),V2)
   #68: #a__U41(tt(),V1,V2) -> #a__isNat(V1)
   #69: #a__and(tt(),X) -> #mark(X)
   #70: #a__U21(tt(),V1) -> #a__U22(a__isNat(V1))
   #71: #a__U21(tt(),V1) -> #a__isNat(V1)
   #72: #mark(and(X1,X2)) -> #a__and(mark(X1),X2)
   #73: #mark(and(X1,X2)) -> #mark(X1)
   #74: #a__isNat(s(V1)) -> #a__U21(a__isNatKind(V1),V1)
   #75: #a__isNat(s(V1)) -> #a__isNatKind(V1)
Number of SCCs: 1, DPs: 64, edges: 705
	SCC { #2 #4..14 #16 #18..22 #24 #26 #27 #29..35 #37..52 #54..57 #59..69 #71..75 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#a__isNatKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: x1
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: x1
     s(x1)	weight: x1
#a__U31(x1,x2)	weight: (/ 1 4)
a__isNatIList(x1)	weight: (/ 3 4)
#a__isNatIListKind(x1)	weight: 0
   U42(x1,x2)	weight: (/ 3 4) + x1
#a__isNat(x1)	weight: 0
   and(x1,x2)	weight: x1 + x2
isNatIList(x1)	weight: (/ 3 4)
#a__U43(x1)	weight: 0
   U43(x1)	weight: x1
#a__U51(x1,x2,x3)	weight: 0
a__U22(x1)	weight: x1
#a__U11(x1,x2)	weight: 0
 zeros()	weight: 0
a__U31(x1,x2)	weight: (/ 1 2) + x1
a__U51(x1,x2,x3)	weight: x1
#a__U53(x1)	weight: 0
   U12(x1)	weight: x1
a__isNatList(x1)	weight: 0
a__U43(x1)	weight: x1
#a__U42(x1,x2)	weight: (/ 1 2)
a__U41(x1,x2,x3)	weight: (/ 3 4) + x1
#a__U12(x1)	weight: 0
#a__U21(x1,x2)	weight: 0
#a__isNatIList(x1)	weight: (/ 1 2)
#a__U61(x1,x2)	weight: (/ 1 4) + x2
#mark(x1)	weight: x1
     0()	weight: 0
#a__and(x1,x2)	weight: x2
#a__zeros()	weight: 0
a__U21(x1,x2)	weight: x1
a__U32(x1)	weight: (/ 1 4) + x1
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
#a__U52(x1,x2)	weight: 0
  mark(x1)	weight: x1
a__U11(x1,x2)	weight: x1
   U32(x1)	weight: (/ 1 4) + x1
a__U53(x1)	weight: x1
a__U42(x1,x2)	weight: (/ 3 4) + x1
a__U52(x1,x2)	weight: x1
#a__length(x1)	weight: (/ 1 4) + x1
a__U12(x1)	weight: x1
a__isNatIListKind(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: x1
   U61(x1,x2)	weight: (/ 1 2) + x1 + x2
#a__U22(x1)	weight: 0
   U31(x1,x2)	weight: (/ 1 2) + x1
#a__isNatList(x1)	weight: 0
  cons(x1,x2)	weight: x1 + x2
a__U61(x1,x2)	weight: (/ 1 2) + x1 + x2
#a__U41(x1,x2,x3)	weight: (/ 1 2)
    tt()	weight: 0
a__isNat(x1)	weight: 0
a__isNatKind(x1)	weight: 0
   U22(x1)	weight: x1
   U51(x1,x2,x3)	weight: x1
a__and(x1,x2)	weight: x1 + x2
   U53(x1)	weight: x1
length(x1)	weight: (/ 1 2) + x1
   U41(x1,x2,x3)	weight: (/ 3 4) + x1
#a__U32(x1)	weight: 0
a__zeros()	weight: 0
a__length(x1)	weight: (/ 1 2) + x1
    Usable rules: { 1..78 }
    Removed DPs: #11..14 #20 #21 #24 #26 #39..41 #44 #46..49 #52 #59 #60 #65 #66 #68
Number of SCCs: 3, DPs: 42, edges: 295
	SCC { #38 #43 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,â‰¥,Sum-Sum)... succeeded.
#a__isNatKind(x1)	weight: 0; 0
isNatKind(x1)	weight: 0; 0
   U21(x1,x2)	weight: (/ 1 4); 0
isNatList(x1)	weight: x1_2; x1_2
   U11(x1,x2)	weight: (/ 1 4); 0
     s(x1)	weight: 0; 0
#a__U31(x1,x2)	weight: 0; 0
a__isNatIList(x1)	weight: (/ 1 2); (/ 1 2)
#a__isNatIListKind(x1)	weight: 0; 0
   U42(x1,x2)	weight: (/ 1 2) + x1_2; x1_1
#a__isNat(x1)	weight: 0; 0
   and(x1,x2)	weight: x2_1 + x2_2 + x1_1; x2_1 + x2_2 + x1_2
isNatIList(x1)	weight: (/ 1 2); 0
#a__U43(x1)	weight: 0; 0
   U43(x1)	weight: (/ 1 4); (/ 1 4)
#a__U51(x1,x2,x3)	weight: 0; 0
a__U22(x1)	weight: (/ 1 2); 0
#a__U11(x1,x2)	weight: 0; 0
 zeros()	weight: 0; 0
a__U31(x1,x2)	weight: x1_1; x1_2
a__U51(x1,x2,x3)	weight: x3_2; x3_2
#a__U53(x1)	weight: 0; 0
   U12(x1)	weight: 0; 0
a__isNatList(x1)	weight: x1_2; x1_2
a__U43(x1)	weight: (/ 1 2); (/ 1 4)
#a__U42(x1,x2)	weight: 0; 0
a__U41(x1,x2,x3)	weight: (/ 1 2) + x1_2; x1_1
#a__U12(x1)	weight: 0; 0
#a__U21(x1,x2)	weight: 0; 0
#a__isNatIList(x1)	weight: 0; 0
#a__U61(x1,x2)	weight: x2_1 + x1_1; x2_1 + x2_2 + x1_1
#mark(x1)	weight: 0; 0
     0()	weight: 0; 0
#a__and(x1,x2)	weight: 0; 0
#a__zeros()	weight: 0; 0
a__U21(x1,x2)	weight: (/ 1 2); 0
a__U32(x1)	weight: (/ 1 2); 0
isNatIListKind(x1)	weight: 0; 0
   nil()	weight: (/ 1 2); (/ 1 2)
#a__U52(x1,x2)	weight: 0; 0
  mark(x1)	weight: (/ 1 2) + x1_2; x1_1
a__U11(x1,x2)	weight: (/ 1 2); 0
   U32(x1)	weight: 0; 0
a__U53(x1)	weight: x1_1; x1_2
a__U42(x1,x2)	weight: (/ 1 2) + x1_2; x1_1
a__U52(x1,x2)	weight: x2_2; x2_2
#a__length(x1)	weight: (/ 1 4) + x1_2; x1_1 + x1_2
a__U12(x1)	weight: (/ 1 2); 0
a__isNatIListKind(x1)	weight: (/ 1 2); 0
 isNat(x1)	weight: 0; 0
   U52(x1,x2)	weight: x2_2; x2_2
   U61(x1,x2)	weight: x2_1; x2_1
#a__U22(x1)	weight: 0; 0
   U31(x1,x2)	weight: x1_1; x1_2
#a__isNatList(x1)	weight: 0; 0
  cons(x1,x2)	weight: x2_1 + x2_2; x2_1 + x2_2
a__U61(x1,x2)	weight: x2_1; x2_1
#a__U41(x1,x2,x3)	weight: 0; 0
    tt()	weight: (/ 1 2); 0
a__isNat(x1)	weight: (/ 1 2); 0
a__isNatKind(x1)	weight: (/ 1 2); 0
   U22(x1)	weight: (/ 1 4); 0
   U51(x1,x2,x3)	weight: x3_2; x3_2
a__and(x1,x2)	weight: x2_1 + x2_2 + x1_1; x2_1 + x2_2 + x1_2
   U53(x1)	weight: x1_1; x1_2
length(x1)	weight: x1_1; x1_2
   U41(x1,x2,x3)	weight: (/ 1 2) + x1_2; x1_1
#a__U32(x1)	weight: 0; 0
a__zeros()	weight: (/ 1 2); 0
a__length(x1)	weight: x1_1; x1_2
    Usable rules: { 1..78 }
    Removed DPs: #38 #43
Number of SCCs: 2, DPs: 40, edges: 293
	SCC { #29 #64 #67 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#a__isNatKind(x1)	weight: 0
isNatKind(x1)	weight: (/ 1 2) + x1
   U21(x1,x2)	weight: (/ 1 4) + x1 + x2
isNatList(x1)	weight: (/ 1 2) + x1
   U11(x1,x2)	weight: (/ 5 8) + x1
     s(x1)	weight: (/ 3 8) + x1
#a__U31(x1,x2)	weight: (/ 1 8)
a__isNatIList(x1)	weight: (/ 3 8)
#a__isNatIListKind(x1)	weight: 0
   U42(x1,x2)	weight: (/ 3 8) + x1
#a__isNat(x1)	weight: 0
   and(x1,x2)	weight: (/ 1 4) + x1
isNatIList(x1)	weight: (/ 1 2) + x1
#a__U43(x1)	weight: 0
   U43(x1)	weight: (/ 1 4) + x1
#a__U51(x1,x2,x3)	weight: 0
a__U22(x1)	weight: (/ 1 8) + x1
#a__U11(x1,x2)	weight: 0
 zeros()	weight: 0
a__U31(x1,x2)	weight: (/ 1 2)
a__U51(x1,x2,x3)	weight: (/ 3 8) + x1 + x2 + x3
#a__U53(x1)	weight: 0
   U12(x1)	weight: (/ 3 4) + x1
a__isNatList(x1)	weight: (/ 3 8)
a__U43(x1)	weight: (/ 1 8) + x1
#a__U42(x1,x2)	weight: (/ 1 4) + x2
a__U41(x1,x2,x3)	weight: (/ 1 2)
#a__U12(x1)	weight: 0
#a__U21(x1,x2)	weight: 0
#a__isNatIList(x1)	weight: (/ 1 8) + x1
#a__U61(x1,x2)	weight: (/ 1 8)
#mark(x1)	weight: 0
     0()	weight: 0
#a__and(x1,x2)	weight: 0
#a__zeros()	weight: 0
a__U21(x1,x2)	weight: (/ 1 8) + x1
a__U32(x1)	weight: (/ 5 8)
isNatIListKind(x1)	weight: (/ 1 8)
   nil()	weight: 0
#a__U52(x1,x2)	weight: 0
  mark(x1)	weight: (/ 1 4)
a__U11(x1,x2)	weight: (/ 1 2) + x2
   U32(x1)	weight: (/ 3 4) + x1
a__U53(x1)	weight: (/ 1 8) + x1
a__U42(x1,x2)	weight: (/ 1 4) + x1 + x2
a__U52(x1,x2)	weight: (/ 1 8) + x1
#a__length(x1)	weight: 0
a__U12(x1)	weight: (/ 5 8)
a__isNatIListKind(x1)	weight: 0
 isNat(x1)	weight: (/ 1 2) + x1
   U52(x1,x2)	weight: (/ 1 4) + x1
   U61(x1,x2)	weight: (/ 3 4) + x1
#a__U22(x1)	weight: 0
   U31(x1,x2)	weight: (/ 5 8) + x1 + x2
#a__isNatList(x1)	weight: 0
  cons(x1,x2)	weight: (/ 3 8) + x1 + x2
a__U61(x1,x2)	weight: (/ 5 8) + x2
#a__U41(x1,x2,x3)	weight: (/ 3 8) + x2 + x3
    tt()	weight: 0
a__isNat(x1)	weight: (/ 3 8)
a__isNatKind(x1)	weight: (/ 3 8)
   U22(x1)	weight: (/ 1 4) + x1
   U51(x1,x2,x3)	weight: (/ 1 2) + x1
a__and(x1,x2)	weight: (/ 1 8)
   U53(x1)	weight: (/ 1 4) + x1
length(x1)	weight: (/ 1 4)
   U41(x1,x2,x3)	weight: (/ 5 8) + x1 + x2
#a__U32(x1)	weight: 0
a__zeros()	weight: 0
a__length(x1)	weight: (/ 1 8) + x1
    Usable rules: { }
    Removed DPs: #29 #64 #67
Number of SCCs: 1, DPs: 37, edges: 290
	SCC { #2 #4..10 #16 #18 #19 #22 #27 #30..35 #37 #42 #45 #50 #51 #54..57 #61..63 #69 #71..75 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#a__isNatKind(x1)	weight: x1
isNatKind(x1)	weight: (/ 1 2) + x1
   U21(x1,x2)	weight: (/ 1 4) + x1 + x2
isNatList(x1)	weight: (/ 1 2) + x1
   U11(x1,x2)	weight: (/ 5 8) + x1 + x2
     s(x1)	weight: (/ 3 8) + x1
#a__U31(x1,x2)	weight: (/ 1 8)
a__isNatIList(x1)	weight: (/ 3 8)
#a__isNatIListKind(x1)	weight: x1
   U42(x1,x2)	weight: (/ 3 8) + x1
#a__isNat(x1)	weight: x1
   and(x1,x2)	weight: (/ 1 4) + x1 + x2
isNatIList(x1)	weight: (/ 1 2) + x1
#a__U43(x1)	weight: 0
   U43(x1)	weight: (/ 1 4) + x1
#a__U51(x1,x2,x3)	weight: (/ 1 4) + x2 + x3
a__U22(x1)	weight: (/ 1 8) + x1
#a__U11(x1,x2)	weight: (/ 1 8) + x2
 zeros()	weight: 0
a__U31(x1,x2)	weight: (/ 1 2)
a__U51(x1,x2,x3)	weight: (/ 3 8) + x1 + x2 + x3
#a__U53(x1)	weight: 0
   U12(x1)	weight: (/ 3 4) + x1
a__isNatList(x1)	weight: (/ 3 8)
a__U43(x1)	weight: (/ 1 8) + x1
#a__U42(x1,x2)	weight: (/ 1 4)
a__U41(x1,x2,x3)	weight: (/ 1 2)
#a__U12(x1)	weight: 0
#a__U21(x1,x2)	weight: (/ 1 8) + x2
#a__isNatIList(x1)	weight: (/ 1 8)
#a__U61(x1,x2)	weight: (/ 1 8)
#mark(x1)	weight: x1
     0()	weight: 0
#a__and(x1,x2)	weight: (/ 1 8) + x2
#a__zeros()	weight: 0
a__U21(x1,x2)	weight: (/ 1 8) + x1
a__U32(x1)	weight: (/ 5 8)
isNatIListKind(x1)	weight: (/ 1 8) + x1
   nil()	weight: 0
#a__U52(x1,x2)	weight: (/ 1 8) + x2
  mark(x1)	weight: (/ 1 4)
a__U11(x1,x2)	weight: (/ 1 2) + x2
   U32(x1)	weight: (/ 3 4) + x1
a__U53(x1)	weight: (/ 1 8) + x1
a__U42(x1,x2)	weight: (/ 1 4) + x1 + x2
a__U52(x1,x2)	weight: (/ 1 8) + x1 + x2
#a__length(x1)	weight: 0
a__U12(x1)	weight: (/ 5 8)
a__isNatIListKind(x1)	weight: 0
 isNat(x1)	weight: (/ 1 2) + x1
   U52(x1,x2)	weight: (/ 1 4) + x1 + x2
   U61(x1,x2)	weight: (/ 3 4) + x1
#a__U22(x1)	weight: 0
   U31(x1,x2)	weight: (/ 5 8) + x1 + x2
#a__isNatList(x1)	weight: x1
  cons(x1,x2)	weight: (/ 3 8) + x1 + x2
a__U61(x1,x2)	weight: (/ 5 8) + x2
#a__U41(x1,x2,x3)	weight: (/ 3 8)
    tt()	weight: 0
a__isNat(x1)	weight: (/ 3 8)
a__isNatKind(x1)	weight: (/ 3 8)
   U22(x1)	weight: (/ 1 4) + x1
   U51(x1,x2,x3)	weight: (/ 1 2) + x1 + x2 + x3
a__and(x1,x2)	weight: (/ 1 8)
   U53(x1)	weight: (/ 1 4) + x1
length(x1)	weight: (/ 1 4) + x1
   U41(x1,x2,x3)	weight: (/ 5 8) + x1 + x2
#a__U32(x1)	weight: 0
a__zeros()	weight: 0
a__length(x1)	weight: (/ 1 8) + x1
    Usable rules: { }
    Removed DPs: #2 #4..10 #16 #18 #19 #22 #27 #30..35 #37 #42 #45 #50 #51 #54..57 #61..63 #69 #71..75
Number of SCCs: 0, DPs: 0, edges: 0
