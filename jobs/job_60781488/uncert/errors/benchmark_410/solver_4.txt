Input TRS:
    1: while(true(),x,y) -> while(lt(x,y),s(x),s(y))
    2: lt(s(x),s(y)) -> lt(x,y)
    3: lt(0(),y) -> true()
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #lt(s(x),s(y)) -> #lt(x,y)
   #2: #while(true(),x,y) -> #while(lt(x,y),s(x),s(y))
   #3: #while(true(),x,y) -> #lt(x,y)
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: x2
#while(x1,x2,x3)	weight: 0
  true()	weight: 0
     0()	weight: 0
 while(x1,x2,x3)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
