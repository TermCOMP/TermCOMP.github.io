Input TRS:
    1: +(x,0()) -> x
    2: +(0(),x) -> x
    3: +(s(x),s(y)) -> s(s(+(x,y)))
    4: +(+(x,y),z) -> +(x,+(y,z))
    5: *(x,0()) -> 0()
    6: *(0(),x) -> 0()
    7: *(s(x),s(y)) -> s(+(*(x,y),+(x,y)))
    8: *(*(x,y),z) -> *(x,*(y,z))
    9: app(nil(),l) -> l
    10: app(cons(x,l1),l2) -> cons(x,app(l1,l2))
    11: sum(nil()) -> 0()
    12: sum(cons(x,l)) -> +(x,sum(l))
    13: sum(app(l1,l2)) -> +(sum(l1),sum(l2))
    14: prod(nil()) -> s(0())
    15: prod(cons(x,l)) -> *(x,prod(l))
    16: prod(app(l1,l2)) -> *(prod(l1),prod(l2))
Number of strict rules: 16
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #sum(app(l1,l2)) -> #+(sum(l1),sum(l2))
   #2: #sum(app(l1,l2)) -> #sum(l1)
   #3: #sum(app(l1,l2)) -> #sum(l2)
   #4: #sum(cons(x,l)) -> #+(x,sum(l))
   #5: #sum(cons(x,l)) -> #sum(l)
   #6: #*(s(x),s(y)) -> #+(*(x,y),+(x,y))
   #7: #*(s(x),s(y)) -> #*(x,y)
   #8: #*(s(x),s(y)) -> #+(x,y)
   #9: #app(cons(x,l1),l2) -> #app(l1,l2)
   #10: #prod(app(l1,l2)) -> #*(prod(l1),prod(l2))
   #11: #prod(app(l1,l2)) -> #prod(l1)
   #12: #prod(app(l1,l2)) -> #prod(l2)
   #13: #+(s(x),s(y)) -> #+(x,y)
   #14: #*(*(x,y),z) -> #*(x,*(y,z))
   #15: #*(*(x,y),z) -> #*(y,z)
   #16: #prod(cons(x,l)) -> #*(x,prod(l))
   #17: #prod(cons(x,l)) -> #prod(l)
   #18: #+(+(x,y),z) -> #+(x,+(y,z))
   #19: #+(+(x,y),z) -> #+(y,z)
Number of SCCs: 5, DPs: 13, edges: 37
	SCC { #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  prod(x1)	weight: 0
     s(x1)	weight: 0
#prod(x1)	weight: 0
   #*(x1,x2)	weight: 0
   sum(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: x1
  cons(x1,x2)	weight: (/ 1 2) + x2
     +(x1,x2)	weight: 0
 #sum(x1)	weight: 0
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #9
Number of SCCs: 4, DPs: 12, edges: 36
	SCC { #2 #3 #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  prod(x1)	weight: 0
     s(x1)	weight: 0
#prod(x1)	weight: 0
   #*(x1,x2)	weight: 0
   sum(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
     +(x1,x2)	weight: 0
 #sum(x1)	weight: x1
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: 0
   app(x1,x2)	weight: (/ 1 2) + x1 + x2
    Usable rules: { }
    Removed DPs: #2 #3 #5
Number of SCCs: 3, DPs: 9, edges: 27
	SCC { #11 #12 #17 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  prod(x1)	weight: 0
     s(x1)	weight: 0
#prod(x1)	weight: x1
   #*(x1,x2)	weight: 0
   sum(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
     +(x1,x2)	weight: 0
 #sum(x1)	weight: 0
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: 0
   app(x1,x2)	weight: (/ 1 2) + x1 + x2
    Usable rules: { }
    Removed DPs: #11 #12 #17
Number of SCCs: 2, DPs: 6, edges: 18
	SCC { #13 #18 #19 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  prod(x1)	weight: 0
     s(x1)	weight: (/ 1 4) + x1
#prod(x1)	weight: 0
   #*(x1,x2)	weight: 0
   sum(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 4)
     +(x1,x2)	weight: (/ 1 4) + x1 + x2
 #sum(x1)	weight: 0
   #+(x1,x2)	weight: x1
     *(x1,x2)	weight: 0
   app(x1,x2)	weight: (/ 1 4)
    Usable rules: { }
    Removed DPs: #13 #18 #19
Number of SCCs: 1, DPs: 3, edges: 9
	SCC { #7 #14 #15 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  prod(x1)	weight: 0
     s(x1)	weight: (/ 1 4) + x1
#prod(x1)	weight: 0
   #*(x1,x2)	weight: x1
   sum(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 4)
     +(x1,x2)	weight: 0
 #sum(x1)	weight: 0
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: (/ 1 4) + x1 + x2
   app(x1,x2)	weight: (/ 1 4)
    Usable rules: { }
    Removed DPs: #7 #14 #15
Number of SCCs: 0, DPs: 0, edges: 0
