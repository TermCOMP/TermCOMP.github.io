Input TRS:
    1: a__sel(s(X),cons(Y,Z)) -> a__sel(mark(X),mark(Z))
    2: a__sel(0(),cons(X,Z)) -> mark(X)
    3: a__first(0(),Z) -> nil()
    4: a__first(s(X),cons(Y,Z)) -> cons(mark(Y),first(X,Z))
    5: a__from(X) -> cons(mark(X),from(s(X)))
    6: a__sel1(s(X),cons(Y,Z)) -> a__sel1(mark(X),mark(Z))
    7: a__sel1(0(),cons(X,Z)) -> a__quote(X)
    8: a__first1(0(),Z) -> nil1()
    9: a__first1(s(X),cons(Y,Z)) -> cons1(a__quote(Y),a__first1(mark(X),mark(Z)))
    10: a__quote(0()) -> 01()
    11: a__quote1(cons(X,Z)) -> cons1(a__quote(X),a__quote1(Z))
    12: a__quote1(nil()) -> nil1()
    13: a__quote(s(X)) -> s1(a__quote(X))
    14: a__quote(sel(X,Z)) -> a__sel1(mark(X),mark(Z))
    15: a__quote1(first(X,Z)) -> a__first1(mark(X),mark(Z))
    16: a__unquote(01()) -> 0()
    17: a__unquote(s1(X)) -> s(a__unquote(mark(X)))
    18: a__unquote1(nil1()) -> nil()
    19: a__unquote1(cons1(X,Z)) -> a__fcons(a__unquote(mark(X)),a__unquote1(mark(Z)))
    20: a__fcons(X,Z) -> cons(mark(X),Z)
    21: mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2))
    22: mark(first(X1,X2)) -> a__first(mark(X1),mark(X2))
    23: mark(from(X)) -> a__from(mark(X))
    24: mark(sel1(X1,X2)) -> a__sel1(mark(X1),mark(X2))
    25: mark(quote(X)) -> a__quote(X)
    26: mark(first1(X1,X2)) -> a__first1(mark(X1),mark(X2))
    27: mark(quote1(X)) -> a__quote1(X)
    28: mark(unquote(X)) -> a__unquote(mark(X))
    29: mark(unquote1(X)) -> a__unquote1(mark(X))
    30: mark(fcons(X1,X2)) -> a__fcons(mark(X1),mark(X2))
    31: mark(s(X)) -> s(mark(X))
    32: mark(cons(X1,X2)) -> cons(mark(X1),X2)
    33: mark(0()) -> 0()
    34: mark(nil()) -> nil()
    35: mark(nil1()) -> nil1()
    36: mark(cons1(X1,X2)) -> cons1(mark(X1),mark(X2))
    37: mark(01()) -> 01()
    38: mark(s1(X)) -> s1(mark(X))
    39: a__sel(X1,X2) -> sel(X1,X2)
    40: a__first(X1,X2) -> first(X1,X2)
    41: a__from(X) -> from(X)
    42: a__sel1(X1,X2) -> sel1(X1,X2)
    43: a__quote(X) -> quote(X)
    44: a__first1(X1,X2) -> first1(X1,X2)
    45: a__quote1(X) -> quote1(X)
    46: a__unquote(X) -> unquote(X)
    47: a__unquote1(X) -> unquote1(X)
    48: a__fcons(X1,X2) -> fcons(X1,X2)
Number of strict rules: 48
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #a__sel(0(),cons(X,Z)) -> #mark(X)
   #2: #mark(unquote1(X)) -> #a__unquote1(mark(X))
   #3: #mark(unquote1(X)) -> #mark(X)
   #4: #mark(s1(X)) -> #mark(X)
   #5: #a__sel1(s(X),cons(Y,Z)) -> #a__sel1(mark(X),mark(Z))
   #6: #a__sel1(s(X),cons(Y,Z)) -> #mark(X)
   #7: #a__sel1(s(X),cons(Y,Z)) -> #mark(Z)
   #8: #a__quote(s(X)) -> #a__quote(X)
   #9: #a__first1(s(X),cons(Y,Z)) -> #a__quote(Y)
   #10: #a__first1(s(X),cons(Y,Z)) -> #a__first1(mark(X),mark(Z))
   #11: #a__first1(s(X),cons(Y,Z)) -> #mark(X)
   #12: #a__first1(s(X),cons(Y,Z)) -> #mark(Z)
   #13: #a__quote1(cons(X,Z)) -> #a__quote(X)
   #14: #a__quote1(cons(X,Z)) -> #a__quote1(Z)
   #15: #mark(sel1(X1,X2)) -> #a__sel1(mark(X1),mark(X2))
   #16: #mark(sel1(X1,X2)) -> #mark(X1)
   #17: #mark(sel1(X1,X2)) -> #mark(X2)
   #18: #mark(from(X)) -> #a__from(mark(X))
   #19: #mark(from(X)) -> #mark(X)
   #20: #mark(s(X)) -> #mark(X)
   #21: #a__quote(sel(X,Z)) -> #a__sel1(mark(X),mark(Z))
   #22: #a__quote(sel(X,Z)) -> #mark(X)
   #23: #a__quote(sel(X,Z)) -> #mark(Z)
   #24: #mark(fcons(X1,X2)) -> #a__fcons(mark(X1),mark(X2))
   #25: #mark(fcons(X1,X2)) -> #mark(X1)
   #26: #mark(fcons(X1,X2)) -> #mark(X2)
   #27: #mark(quote(X)) -> #a__quote(X)
   #28: #a__fcons(X,Z) -> #mark(X)
   #29: #a__sel1(0(),cons(X,Z)) -> #a__quote(X)
   #30: #a__from(X) -> #mark(X)
   #31: #mark(unquote(X)) -> #a__unquote(mark(X))
   #32: #mark(unquote(X)) -> #mark(X)
   #33: #mark(first(X1,X2)) -> #a__first(mark(X1),mark(X2))
   #34: #mark(first(X1,X2)) -> #mark(X1)
   #35: #mark(first(X1,X2)) -> #mark(X2)
   #36: #mark(quote1(X)) -> #a__quote1(X)
   #37: #a__unquote(s1(X)) -> #a__unquote(mark(X))
   #38: #a__unquote(s1(X)) -> #mark(X)
   #39: #mark(cons(X1,X2)) -> #mark(X1)
   #40: #a__unquote1(cons1(X,Z)) -> #a__fcons(a__unquote(mark(X)),a__unquote1(mark(Z)))
   #41: #a__unquote1(cons1(X,Z)) -> #a__unquote(mark(X))
   #42: #a__unquote1(cons1(X,Z)) -> #mark(X)
   #43: #a__unquote1(cons1(X,Z)) -> #a__unquote1(mark(Z))
   #44: #a__unquote1(cons1(X,Z)) -> #mark(Z)
   #45: #mark(first1(X1,X2)) -> #a__first1(mark(X1),mark(X2))
   #46: #mark(first1(X1,X2)) -> #mark(X1)
   #47: #mark(first1(X1,X2)) -> #mark(X2)
   #48: #mark(cons1(X1,X2)) -> #mark(X1)
   #49: #mark(cons1(X1,X2)) -> #mark(X2)
   #50: #mark(sel(X1,X2)) -> #a__sel(mark(X1),mark(X2))
   #51: #mark(sel(X1,X2)) -> #mark(X1)
   #52: #mark(sel(X1,X2)) -> #mark(X2)
   #53: #a__sel(s(X),cons(Y,Z)) -> #a__sel(mark(X),mark(Z))
   #54: #a__sel(s(X),cons(Y,Z)) -> #mark(X)
   #55: #a__sel(s(X),cons(Y,Z)) -> #mark(Z)
   #56: #a__quote1(first(X,Z)) -> #a__first1(mark(X),mark(Z))
   #57: #a__quote1(first(X,Z)) -> #mark(X)
   #58: #a__quote1(first(X,Z)) -> #mark(Z)
   #59: #a__first(s(X),cons(Y,Z)) -> #mark(Y)
Number of SCCs: 1, DPs: 59, edges: 1062
	SCC { #1..59 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
#a__quote(x1)	weight: x1
    01()	weight: 0
     s(x1)	weight: x1
unquote1(x1)	weight: (/ 3 8) + x1
a__first1(x1,x2)	weight: max{x2, x1}
#a__from(x1)	weight: x1
#a__fcons(x1,x2)	weight: max{0, (/ 1 8) + x1}
#a__first(x1,x2)	weight: max{0, (/ 1 8) + x2}
a__from(x1)	weight: x1
#a__first1(x1,x2)	weight: max{x2, x1}
#a__unquote(x1)	weight: x1
a__unquote(x1)	weight: x1
a__sel1(x1,x2)	weight: max{x2, x1}
a__fcons(x1,x2)	weight: max{x2, (/ 1 4) + x1}
 cons1(x1,x2)	weight: max{x2, x1}
#mark(x1)	weight: x1
     0()	weight: 0
a__quote(x1)	weight: x1
  from(x1)	weight: x1
   sel(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 4) + x1}
#a__sel1(x1,x2)	weight: max{x2, x1}
   nil()	weight: (/ 3 8)
quote1(x1)	weight: (/ 1 4) + x1
#a__quote1(x1)	weight: (/ 1 8) + x1
#a__sel(x1,x2)	weight: max{(/ 1 8) + x2, x1}
  mark(x1)	weight: x1
  nil1()	weight: 0
a__sel(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 4) + x1}
 first(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 4) + x1}
a__first(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 4) + x1}
first1(x1,x2)	weight: max{x2, x1}
a__unquote1(x1)	weight: (/ 3 8) + x1
#a__unquote1(x1)	weight: (/ 1 4) + x1
 quote(x1)	weight: x1
  cons(x1,x2)	weight: max{x2, x1}
  sel1(x1,x2)	weight: max{x2, x1}
a__quote1(x1)	weight: (/ 1 4) + x1
    s1(x1)	weight: x1
unquote(x1)	weight: x1
 fcons(x1,x2)	weight: max{x2, (/ 1 4) + x1}
    Usable rules: { 1..48 }
    Removed DPs: #1..3 #13 #21..25 #28 #33..36 #40..42 #44 #50..52 #55..59
Number of SCCs: 5, DPs: 29, edges: 309
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#a__quote(x1)	weight: x1
    01()	weight: 0
     s(x1)	weight: (/ 1 8) + x1
unquote1(x1)	weight: (/ 1 4)
a__first1(x1,x2)	weight: (/ 3 8)
#a__from(x1)	weight: 0
#a__fcons(x1,x2)	weight: 0
#a__first(x1,x2)	weight: 0
a__from(x1)	weight: (/ 1 4)
#a__first1(x1,x2)	weight: 0
#a__unquote(x1)	weight: 0
a__unquote(x1)	weight: (/ 1 4)
a__sel1(x1,x2)	weight: (/ 1 4)
a__fcons(x1,x2)	weight: (/ 1 4) + x1 + x2
 cons1(x1,x2)	weight: (/ 1 2)
#mark(x1)	weight: 0
     0()	weight: 0
a__quote(x1)	weight: (/ 3 8) + x1
  from(x1)	weight: (/ 3 8)
   sel(x1,x2)	weight: (/ 3 8) + x2
#a__sel1(x1,x2)	weight: 0
   nil()	weight: 0
quote1(x1)	weight: (/ 3 8)
#a__quote1(x1)	weight: 0
#a__sel(x1,x2)	weight: (/ 1 8)
  mark(x1)	weight: (/ 1 8)
  nil1()	weight: 0
a__sel(x1,x2)	weight: (/ 1 4)
 first(x1,x2)	weight: (/ 3 8) + x2
a__first(x1,x2)	weight: (/ 1 4)
first1(x1,x2)	weight: (/ 1 2) + x1 + x2
a__unquote1(x1)	weight: (/ 1 8) + x1
#a__unquote1(x1)	weight: 0
 quote(x1)	weight: (/ 1 2)
  cons(x1,x2)	weight: (/ 1 4) + x1
  sel1(x1,x2)	weight: (/ 3 8) + x1 + x2
a__quote1(x1)	weight: (/ 1 4)
    s1(x1)	weight: (/ 5 8)
unquote(x1)	weight: (/ 3 8)
 fcons(x1,x2)	weight: (/ 3 8)
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 4, DPs: 28, edges: 308
	SCC { #14 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#a__quote(x1)	weight: 0
    01()	weight: 0
     s(x1)	weight: (/ 1 8) + x1
unquote1(x1)	weight: (/ 1 4)
a__first1(x1,x2)	weight: (/ 3 8)
#a__from(x1)	weight: 0
#a__fcons(x1,x2)	weight: 0
#a__first(x1,x2)	weight: 0
a__from(x1)	weight: (/ 1 4)
#a__first1(x1,x2)	weight: 0
#a__unquote(x1)	weight: 0
a__unquote(x1)	weight: (/ 1 4)
a__sel1(x1,x2)	weight: (/ 1 4)
a__fcons(x1,x2)	weight: (/ 1 4) + x1 + x2
 cons1(x1,x2)	weight: (/ 1 2)
#mark(x1)	weight: 0
     0()	weight: 0
a__quote(x1)	weight: (/ 3 8) + x1
  from(x1)	weight: 0
   sel(x1,x2)	weight: (/ 3 8) + x2
#a__sel1(x1,x2)	weight: 0
   nil()	weight: 0
quote1(x1)	weight: (/ 3 8)
#a__quote1(x1)	weight: x1
#a__sel(x1,x2)	weight: (/ 1 8)
  mark(x1)	weight: (/ 1 8)
  nil1()	weight: 0
a__sel(x1,x2)	weight: (/ 1 4)
 first(x1,x2)	weight: (/ 3 8) + x2
a__first(x1,x2)	weight: (/ 1 4)
first1(x1,x2)	weight: (/ 1 2) + x1 + x2
a__unquote1(x1)	weight: (/ 1 8) + x1
#a__unquote1(x1)	weight: 0
 quote(x1)	weight: (/ 1 2)
  cons(x1,x2)	weight: (/ 1 4) + x1 + x2
  sel1(x1,x2)	weight: (/ 3 8) + x1 + x2
a__quote1(x1)	weight: (/ 1 4)
    s1(x1)	weight: (/ 5 8)
unquote(x1)	weight: (/ 3 8)
 fcons(x1,x2)	weight: (/ 3 8)
    Usable rules: { }
    Removed DPs: #14
Number of SCCs: 3, DPs: 27, edges: 307
	SCC { #43 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
