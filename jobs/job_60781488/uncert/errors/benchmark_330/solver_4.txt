Input TRS:
    1: if(true(),x,y) -> x
    2: if(false(),x,y) -> y
    3: eq(0(),0()) -> true()
    4: eq(0(),s(x)) -> false()
    5: eq(s(x),0()) -> false()
    6: eq(s(x),s(y)) -> eq(x,y)
    7: app(nil(),l) -> l
    8: app(cons(x,l1),l2) -> cons(x,app(l1,l2))
    9: app(app(l1,l2),l3) -> app(l1,app(l2,l3))
    10: mem(x,nil()) -> false()
    11: mem(x,cons(y,l)) -> ifmem(eq(x,y),x,l)
    12: ifmem(true(),x,l) -> true()
    13: ifmem(false(),x,l) -> mem(x,l)
    14: inter(x,nil()) -> nil()
    15: inter(nil(),x) -> nil()
    16: inter(app(l1,l2),l3) -> app(inter(l1,l3),inter(l2,l3))
    17: inter(l1,app(l2,l3)) -> app(inter(l1,l2),inter(l1,l3))
    18: inter(cons(x,l1),l2) -> ifinter(mem(x,l2),x,l1,l2)
    19: inter(l1,cons(x,l2)) -> ifinter(mem(x,l1),x,l2,l1)
    20: ifinter(true(),x,l1,l2) -> cons(x,inter(l1,l2))
    21: ifinter(false(),x,l1,l2) -> inter(l1,l2)
Number of strict rules: 21
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #eq(s(x),s(y)) -> #eq(x,y)
   #2: #ifmem(false(),x,l) -> #mem(x,l)
   #3: #app(app(l1,l2),l3) -> #app(l1,app(l2,l3))
   #4: #app(app(l1,l2),l3) -> #app(l2,l3)
   #5: #mem(x,cons(y,l)) -> #ifmem(eq(x,y),x,l)
   #6: #mem(x,cons(y,l)) -> #eq(x,y)
   #7: #ifinter(true(),x,l1,l2) -> #inter(l1,l2)
   #8: #inter(l1,app(l2,l3)) -> #app(inter(l1,l2),inter(l1,l3))
   #9: #inter(l1,app(l2,l3)) -> #inter(l1,l2)
   #10: #inter(l1,app(l2,l3)) -> #inter(l1,l3)
   #11: #inter(l1,cons(x,l2)) -> #ifinter(mem(x,l1),x,l2,l1)
   #12: #inter(l1,cons(x,l2)) -> #mem(x,l1)
   #13: #ifinter(false(),x,l1,l2) -> #inter(l1,l2)
   #14: #inter(app(l1,l2),l3) -> #app(inter(l1,l3),inter(l2,l3))
   #15: #inter(app(l1,l2),l3) -> #inter(l1,l3)
   #16: #inter(app(l1,l2),l3) -> #inter(l2,l3)
   #17: #app(cons(x,l1),l2) -> #app(l1,l2)
   #18: #inter(cons(x,l1),l2) -> #ifinter(mem(x,l2),x,l1,l2)
   #19: #inter(cons(x,l1),l2) -> #mem(x,l2)
Number of SCCs: 4, DPs: 14, edges: 52
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   mem(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
ifinter(x1,x2,x3,x4)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
 #mem(x1,x2)	weight: 0
 ifmem(x1,x2,x3)	weight: 0
#ifinter(x1,x2,x3,x4)	weight: 0
  true()	weight: 0
#ifmem(x1,x2,x3)	weight: 0
  #eq(x1,x2)	weight: x2
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
 inter(x1,x2)	weight: 0
#inter(x1,x2)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 3, DPs: 13, edges: 51
	SCC { #2 #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   mem(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4)
ifinter(x1,x2,x3,x4)	weight: 0
    eq(x1,x2)	weight: (/ 1 4) + x1 + x2
 false()	weight: 0
 #mem(x1,x2)	weight: x2
 ifmem(x1,x2,x3)	weight: 0
#ifinter(x1,x2,x3,x4)	weight: 0
  true()	weight: 0
#ifmem(x1,x2,x3)	weight: (/ 1 4) + x3
  #eq(x1,x2)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x1 + x2
  #if(x1,x2,x3)	weight: 0
 inter(x1,x2)	weight: 0
#inter(x1,x2)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2 #5
Number of SCCs: 2, DPs: 11, edges: 49
	SCC { #3 #4 #17 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   mem(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4)
ifinter(x1,x2,x3,x4)	weight: 0
    eq(x1,x2)	weight: (/ 1 4) + x1 + x2
 false()	weight: 0
 #mem(x1,x2)	weight: 0
 ifmem(x1,x2,x3)	weight: 0
#ifinter(x1,x2,x3,x4)	weight: 0
  true()	weight: 0
#ifmem(x1,x2,x3)	weight: (/ 1 4)
  #eq(x1,x2)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: x1
  cons(x1,x2)	weight: (/ 1 2) + x2
  #if(x1,x2,x3)	weight: 0
 inter(x1,x2)	weight: 0
#inter(x1,x2)	weight: 0
   app(x1,x2)	weight: (/ 1 4) + x1 + x2
    Usable rules: { 7..9 }
    Removed DPs: #3 #4 #17
Number of SCCs: 1, DPs: 8, edges: 40
	SCC { #7 #9..11 #13 #15 #16 #18 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   mem(x1,x2)	weight: (/ 1 4)
     s(x1)	weight: x1
ifinter(x1,x2,x3,x4)	weight: 0
    eq(x1,x2)	weight: (/ 1 2) + x1
 false()	weight: 0
 #mem(x1,x2)	weight: 0
 ifmem(x1,x2,x3)	weight: x1 + x3
#ifinter(x1,x2,x3,x4)	weight: (/ 1 4) + x3 + x4
  true()	weight: 0
#ifmem(x1,x2,x3)	weight: (/ 1 4)
  #eq(x1,x2)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
  #if(x1,x2,x3)	weight: 0
 inter(x1,x2)	weight: 0
#inter(x1,x2)	weight: x1 + x2
   app(x1,x2)	weight: (/ 1 4) + x1 + x2
    Usable rules: { 3..6 }
    Removed DPs: #7 #9..11 #13 #15 #16 #18
Number of SCCs: 0, DPs: 0, edges: 0
