Input TRS:
    1: f(tt(),x) -> f(eq(toOne(x),s(0())),s(x))
    2: eq(s(x),s(y)) -> eq(x,y)
    3: eq(0(),0()) -> tt()
    4: toOne(s(s(x))) -> toOne(s(x))
    5: toOne(s(0())) -> s(0())
Number of strict rules: 5
Direct Order(PosReal,>,Poly) ... failed.
Freezing toOne
1: f(tt(),x) -> f(eq(toOne(x),s(0())),s(x))
2: eq(s(x),s(y)) -> eq(x,y)
3: eq(0(),0()) -> tt()
4: toOne❆1_s(s(x)) -> toOne❆1_s(x)
5: toOne❆1_s(0()) -> s(0())
6: toOne(s(_1)) ->= toOne❆1_s(_1)
Number of strict rules: 5
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #eq(s(x),s(y)) -> #eq(x,y)
   #2: #toOne(s(_1)) ->? #toOne❆1_s(_1)
   #3: #f(tt(),x) -> #f(eq(toOne(x),s(0())),s(x))
   #4: #f(tt(),x) -> #eq(toOne(x),s(0()))
   #5: #f(tt(),x) -> #toOne(x)
   #6: #toOne❆1_s(s(x)) -> #toOne❆1_s(x)
Number of SCCs: 3, DPs: 3, edges: 3
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
 toOne(x1)	weight: 0
    eq(x1,x2)	weight: 0
#toOne❆1_s(x1)	weight: x1
     f(x1,x2)	weight: 0
  #eq(x1,x2)	weight: 0
     0()	weight: 0
toOne❆1_s(x1)	weight: 0
   #f(x1,x2)	weight: 0
    tt()	weight: 0
#toOne(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
 toOne(x1)	weight: 0
    eq(x1,x2)	weight: 0
#toOne❆1_s(x1)	weight: 0
     f(x1,x2)	weight: 0
  #eq(x1,x2)	weight: x2
     0()	weight: 0
toOne❆1_s(x1)	weight: 0
   #f(x1,x2)	weight: 0
    tt()	weight: 0
#toOne(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
