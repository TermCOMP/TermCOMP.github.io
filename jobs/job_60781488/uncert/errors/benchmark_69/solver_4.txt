Input TRS:
    1: app(app(plus(),0()),y) -> y
    2: app(app(plus(),app(s(),x)),y) -> app(s(),app(app(plus(),x),y))
    3: app(app(times(),0()),y) -> 0()
    4: app(app(times(),app(s(),x)),y) -> app(app(plus(),app(app(times(),x),y)),y)
    5: app(inc(),xs) -> app(app(map(),app(plus(),app(s(),0()))),xs)
    6: app(double(),xs) -> app(app(map(),app(times(),app(s(),app(s(),0())))),xs)
    7: app(app(map(),f),nil()) -> nil()
    8: app(app(map(),f),app(app(cons(),x),xs)) -> app(app(cons(),app(f,x)),app(app(map(),f),xs))
Number of strict rules: 8
Direct Order(PosReal,>,Poly) ... failed.
Freezing app
1: app❆2_plus(0(),y) -> y
2: app❆2_plus(app❆1_s(x),y) -> app❆1_s(app❆2_plus(x,y))
3: app❆2_times(0(),y) -> 0()
4: app❆2_times(app❆1_s(x),y) -> app❆2_plus(app❆2_times(x,y),y)
5: app❆1_inc(xs) -> app❆2_map(app❆1_plus(app❆1_s(0())),xs)
6: app❆1_double(xs) -> app❆2_map(app❆1_times(app❆1_s(app❆1_s(0()))),xs)
7: app❆2_map(f,nil()) -> nil()
8: app❆2_map(f,app❆2_cons(x,xs)) -> app❆2_cons(app(f,x),app❆2_map(f,xs))
9: app(plus(),_1) ->= app❆1_plus(_1)
10: app(app❆1_plus(_1),_2) ->= app❆2_plus(_1,_2)
11: app(cons(),_1) ->= app❆1_cons(_1)
12: app(app❆1_cons(_1),_2) ->= app❆2_cons(_1,_2)
13: app(double(),_1) ->= app❆1_double(_1)
14: app(times(),_1) ->= app❆1_times(_1)
15: app(app❆1_times(_1),_2) ->= app❆2_times(_1,_2)
16: app(s(),_1) ->= app❆1_s(_1)
17: app(inc(),_1) ->= app❆1_inc(_1)
18: app(map(),_1) ->= app❆1_map(_1)
19: app(app❆1_map(_1),_2) ->= app❆2_map(_1,_2)
Number of strict rules: 8
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #app❆2_plus(app❆1_s(x),y) -> #app❆2_plus(x,y)
   #2: #app❆1_double(xs) -> #app❆2_map(app❆1_times(app❆1_s(app❆1_s(0()))),xs)
   #3: #app(double(),_1) ->? #app❆1_double(_1)
   #4: #app(app❆1_plus(_1),_2) ->? #app❆2_plus(_1,_2)
   #5: #app❆1_inc(xs) -> #app❆2_map(app❆1_plus(app❆1_s(0())),xs)
   #6: #app(inc(),_1) ->? #app❆1_inc(_1)
   #7: #app(app❆1_map(_1),_2) ->? #app❆2_map(_1,_2)
   #8: #app❆2_map(f,app❆2_cons(x,xs)) -> #app(f,x)
   #9: #app❆2_map(f,app❆2_cons(x,xs)) -> #app❆2_map(f,xs)
   #10: #app(app❆1_times(_1),_2) ->? #app❆2_times(_1,_2)
   #11: #app❆2_times(app❆1_s(x),y) -> #app❆2_plus(app❆2_times(x,y),y)
   #12: #app❆2_times(app❆1_s(x),y) -> #app❆2_times(x,y)
Number of SCCs: 3, DPs: 9, edges: 15
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#app❆2_map(x1,x2)	weight: 0
#app❆1_double(x1)	weight: 0
     s()	weight: 0
app❆1_map(x1)	weight: 0
app❆1_plus(x1)	weight: 0
app❆2_plus(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
   inc()	weight: 0
     0()	weight: 0
#app❆2_plus(x1,x2)	weight: x1
double()	weight: 0
 times()	weight: 0
app❆1_inc(x1)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   map()	weight: 0
#app❆1_inc(x1)	weight: 0
#app❆2_times(x1,x2)	weight: 0
  plus()	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: 0
app❆1_double(x1)	weight: 0
app❆2_times(x1,x2)	weight: 0
app❆1_s(x1)	weight: (/ 1 2) + x1
app❆1_cons(x1)	weight: 0
app❆1_times(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 8, edges: 14
	SCC { #12 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#app❆2_map(x1,x2)	weight: 0
#app❆1_double(x1)	weight: 0
     s()	weight: 0
app❆1_map(x1)	weight: 0
app❆1_plus(x1)	weight: 0
app❆2_plus(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
   inc()	weight: 0
     0()	weight: 0
#app❆2_plus(x1,x2)	weight: 0
double()	weight: 0
 times()	weight: 0
app❆1_inc(x1)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   map()	weight: 0
#app❆1_inc(x1)	weight: 0
#app❆2_times(x1,x2)	weight: x1
  plus()	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: 0
app❆1_double(x1)	weight: 0
app❆2_times(x1,x2)	weight: 0
app❆1_s(x1)	weight: (/ 1 2) + x1
app❆1_cons(x1)	weight: 0
app❆1_times(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #12
Number of SCCs: 1, DPs: 7, edges: 13
	SCC { #2 #3 #5..9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#app❆2_map(x1,x2)	weight: x2
#app❆1_double(x1)	weight: (/ 1 4) + x1
     s()	weight: 0
app❆1_map(x1)	weight: (/ 1 4)
app❆1_plus(x1)	weight: (/ 1 4)
app❆2_plus(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
   inc()	weight: 0
     0()	weight: 0
#app❆2_plus(x1,x2)	weight: 0
double()	weight: 0
 times()	weight: 0
app❆1_inc(x1)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: (/ 1 2) + x2
   map()	weight: 0
#app❆1_inc(x1)	weight: (/ 1 4) + x1
#app❆2_times(x1,x2)	weight: 0
  plus()	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 3 4) + x1 + x2
app❆1_double(x1)	weight: 0
app❆2_times(x1,x2)	weight: 0
app❆1_s(x1)	weight: (/ 1 4)
app❆1_cons(x1)	weight: 0
app❆1_times(x1)	weight: (/ 1 4)
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2 #3 #5..9
Number of SCCs: 0, DPs: 0, edges: 0
