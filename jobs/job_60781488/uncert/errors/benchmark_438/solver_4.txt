Input TRS:
    1: diff(x,y) -> cond1(equal(x,y),x,y)
    2: cond1(true(),x,y) -> 0()
    3: cond1(false(),x,y) -> cond2(gt(x,y),x,y)
    4: cond2(true(),x,y) -> s(diff(x,s(y)))
    5: cond2(false(),x,y) -> s(diff(s(x),y))
    6: gt(0(),v) -> false()
    7: gt(s(u),0()) -> true()
    8: gt(s(u),s(v)) -> gt(u,v)
    9: equal(0(),0()) -> true()
    10: equal(s(x),0()) -> false()
    11: equal(0(),s(y)) -> false()
    12: equal(s(x),s(y)) -> equal(x,y)
Number of strict rules: 12
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #equal(s(x),s(y)) -> #equal(x,y)
   #2: #cond2(false(),x,y) -> #diff(s(x),y)
   #3: #cond1(false(),x,y) -> #cond2(gt(x,y),x,y)
   #4: #cond1(false(),x,y) -> #gt(x,y)
   #5: #diff(x,y) -> #cond1(equal(x,y),x,y)
   #6: #diff(x,y) -> #equal(x,y)
   #7: #gt(s(u),s(v)) -> #gt(u,v)
   #8: #cond2(true(),x,y) -> #diff(x,s(y))
Number of SCCs: 3, DPs: 6, edges: 7
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 cond2(x1,x2,x3)	weight: 0
  diff(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
#cond1(x1,x2,x3)	weight: 0
    gt(x1,x2)	weight: 0
#equal(x1,x2)	weight: x2
 false()	weight: 0
  true()	weight: 0
 cond1(x1,x2,x3)	weight: 0
     0()	weight: 0
  #gt(x1,x2)	weight: 0
#diff(x1,x2)	weight: 0
 equal(x1,x2)	weight: 0
#cond2(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 5, edges: 6
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 cond2(x1,x2,x3)	weight: 0
  diff(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
#cond1(x1,x2,x3)	weight: 0
    gt(x1,x2)	weight: 0
#equal(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
 cond1(x1,x2,x3)	weight: 0
     0()	weight: 0
  #gt(x1,x2)	weight: x2
#diff(x1,x2)	weight: 0
 equal(x1,x2)	weight: 0
#cond2(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #7
Number of SCCs: 1, DPs: 4, edges: 5
	SCC { #2 #3 #5 #8 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
