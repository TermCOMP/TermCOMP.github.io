Input TRS:
    1: NUMERAL(0()) -> 0()
    2: BIT0(0()) -> 0()
    3: SUC(NUMERAL(n)) -> NUMERAL(SUC(n))
    4: SUC(0()) -> BIT1(0())
    5: SUC(BIT0(n)) -> BIT1(n)
    6: SUC(BIT1(n)) -> BIT0(SUC(n))
    7: PRE(NUMERAL(n)) -> NUMERAL(PRE(n))
    8: PRE(0()) -> 0()
    9: PRE(BIT0(n)) -> if(eq(n,0()),0(),BIT1(PRE(n)))
    10: PRE(BIT1(n)) -> BIT0(n)
    11: plus(NUMERAL(m),NUMERAL(n)) -> NUMERAL(plus(m,n))
    12: plus(0(),0()) -> 0()
    13: plus(0(),BIT0(n)) -> BIT0(n)
    14: plus(0(),BIT1(n)) -> BIT1(n)
    15: plus(BIT0(n),0()) -> BIT0(n)
    16: plus(BIT1(n),0()) -> BIT1(n)
    17: plus(BIT0(m),BIT0(n)) -> BIT0(plus(m,n))
    18: plus(BIT0(m),BIT1(n)) -> BIT1(plus(m,n))
    19: plus(BIT1(m),BIT0(n)) -> BIT1(plus(m,n))
    20: plus(BIT1(m),BIT1(n)) -> BIT0(SUC(plus(m,n)))
    21: mult(NUMERAL(m),NUMERAL(n)) -> NUMERAL(mult(m,n))
    22: mult(0(),0()) -> 0()
    23: mult(0(),BIT0(n)) -> 0()
    24: mult(0(),BIT1(n)) -> 0()
    25: mult(BIT0(n),0()) -> 0()
    26: mult(BIT1(n),0()) -> 0()
    27: mult(BIT0(m),BIT0(n)) -> BIT0(BIT0(mult(m,n)))
    28: mult(BIT0(m),BIT1(n)) -> plus(BIT0(m),BIT0(BIT0(mult(m,n))))
    29: mult(BIT1(m),BIT0(n)) -> plus(BIT0(n),BIT0(BIT0(mult(m,n))))
    30: mult(BIT1(m),BIT1(n)) -> plus(plus(BIT1(m),BIT0(n)),BIT0(BIT0(mult(m,n))))
    31: exp(NUMERAL(m),NUMERAL(n)) -> NUMERAL(exp(m,n))
    32: exp(0(),0()) -> BIT1(0())
    33: exp(BIT0(m),0()) -> BIT1(0())
    34: exp(BIT1(m),0()) -> BIT1(0())
    35: exp(0(),BIT0(n)) -> mult(exp(0(),n),exp(0(),n))
    36: exp(BIT0(m),BIT0(n)) -> mult(exp(BIT0(m),n),exp(BIT0(m),n))
    37: exp(BIT1(m),BIT0(n)) -> mult(exp(BIT1(m),n),exp(BIT1(m),n))
    38: exp(0(),BIT1(n)) -> 0()
    39: exp(BIT0(m),BIT1(n)) -> mult(mult(BIT0(m),exp(BIT0(m),n)),exp(BIT0(m),n))
    40: exp(BIT1(m),BIT1(n)) -> mult(mult(BIT1(m),exp(BIT1(m),n)),exp(BIT1(m),n))
    41: EVEN(NUMERAL(n)) -> EVEN(n)
    42: EVEN(0()) -> T()
    43: EVEN(BIT0(n)) -> T()
    44: EVEN(BIT1(n)) -> F()
    45: ODD(NUMERAL(n)) -> ODD(n)
    46: ODD(0()) -> F()
    47: ODD(BIT0(n)) -> F()
    48: ODD(BIT1(n)) -> T()
    49: eq(NUMERAL(m),NUMERAL(n)) -> eq(m,n)
    50: eq(0(),0()) -> T()
    51: eq(BIT0(n),0()) -> eq(n,0())
    52: eq(BIT1(n),0()) -> F()
    53: eq(0(),BIT0(n)) -> eq(0(),n)
    54: eq(0(),BIT1(n)) -> F()
    55: eq(BIT0(m),BIT0(n)) -> eq(m,n)
    56: eq(BIT0(m),BIT1(n)) -> F()
    57: eq(BIT1(m),BIT0(n)) -> F()
    58: eq(BIT1(m),BIT1(n)) -> eq(m,n)
    59: le(NUMERAL(m),NUMERAL(n)) -> le(m,n)
    60: le(0(),0()) -> T()
    61: le(BIT0(n),0()) -> le(n,0())
    62: le(BIT1(n),0()) -> F()
    63: le(0(),BIT0(n)) -> T()
    64: le(0(),BIT1(n)) -> T()
    65: le(BIT0(m),BIT0(n)) -> le(m,n)
    66: le(BIT0(m),BIT1(n)) -> le(m,n)
    67: le(BIT1(m),BIT0(n)) -> lt(m,n)
    68: le(BIT1(m),BIT1(n)) -> le(m,n)
    69: lt(NUMERAL(m),NUMERAL(n)) -> lt(m,n)
    70: lt(0(),0()) -> F()
    71: lt(BIT0(n),0()) -> F()
    72: lt(BIT1(n),0()) -> F()
    73: lt(0(),BIT0(n)) -> lt(0(),n)
    74: lt(0(),BIT1(n)) -> T()
    75: lt(BIT0(m),BIT0(n)) -> lt(m,n)
    76: lt(BIT0(m),BIT1(n)) -> le(m,n)
    77: lt(BIT1(m),BIT0(n)) -> lt(m,n)
    78: lt(BIT1(m),BIT1(n)) -> lt(m,n)
    79: ge(NUMERAL(n),NUMERAL(m)) -> ge(n,m)
    80: ge(0(),0()) -> T()
    81: ge(0(),BIT0(n)) -> ge(0(),n)
    82: ge(0(),BIT1(n)) -> F()
    83: ge(BIT0(n),0()) -> T()
    84: ge(BIT1(n),0()) -> T()
    85: ge(BIT0(n),BIT0(m)) -> ge(n,m)
    86: ge(BIT1(n),BIT0(m)) -> ge(n,m)
    87: ge(BIT0(n),BIT1(m)) -> gt(n,m)
    88: ge(BIT1(n),BIT1(m)) -> ge(n,m)
    89: gt(NUMERAL(n),NUMERAL(m)) -> gt(n,m)
    90: gt(0(),0()) -> F()
    91: gt(0(),BIT0(n)) -> F()
    92: gt(0(),BIT1(n)) -> F()
    93: gt(BIT0(n),0()) -> gt(n,0())
    94: gt(BIT1(n),0()) -> T()
    95: gt(BIT0(n),BIT0(m)) -> gt(n,m)
    96: gt(BIT1(n),BIT0(m)) -> ge(n,m)
    97: gt(BIT0(n),BIT1(m)) -> gt(n,m)
    98: gt(BIT1(n),BIT1(m)) -> gt(n,m)
    99: minus(NUMERAL(m),NUMERAL(n)) -> NUMERAL(minus(m,n))
    100: minus(0(),0()) -> 0()
    101: minus(0(),BIT0(n)) -> 0()
    102: minus(0(),BIT1(n)) -> 0()
    103: minus(BIT0(n),0()) -> BIT0(n)
    104: minus(BIT1(n),0()) -> BIT1(n)
    105: minus(BIT0(m),BIT0(n)) -> BIT0(minus(m,n))
    106: minus(BIT0(m),BIT1(n)) -> PRE(BIT0(minus(m,n)))
    107: minus(BIT1(m),BIT0(n)) -> if(le(n,m),BIT1(minus(m,n)),0())
    108: minus(BIT1(m),BIT1(n)) -> BIT0(minus(m,n))
Number of strict rules: 108
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #ge(BIT1(n),BIT0(m)) -> #ge(n,m)
   #2: #mult(BIT1(m),BIT0(n)) -> #plus(BIT0(n),BIT0(BIT0(mult(m,n))))
   #3: #mult(BIT1(m),BIT0(n)) -> #BIT0(BIT0(mult(m,n)))
   #4: #mult(BIT1(m),BIT0(n)) -> #BIT0(mult(m,n))
   #5: #mult(BIT1(m),BIT0(n)) -> #mult(m,n)
   #6: #exp(0(),BIT0(n)) -> #mult(exp(0(),n),exp(0(),n))
   #7: #exp(0(),BIT0(n)) -> #exp(0(),n)
   #8: #exp(0(),BIT0(n)) -> #exp(0(),n)
   #9: #le(BIT0(m),BIT1(n)) -> #le(m,n)
   #10: #gt(BIT0(n),BIT0(m)) -> #gt(n,m)
   #11: #EVEN(NUMERAL(n)) -> #EVEN(n)
   #12: #exp(BIT1(m),BIT0(n)) -> #mult(exp(BIT1(m),n),exp(BIT1(m),n))
   #13: #exp(BIT1(m),BIT0(n)) -> #exp(BIT1(m),n)
   #14: #exp(BIT1(m),BIT0(n)) -> #exp(BIT1(m),n)
   #15: #minus(NUMERAL(m),NUMERAL(n)) -> #NUMERAL(minus(m,n))
   #16: #minus(NUMERAL(m),NUMERAL(n)) -> #minus(m,n)
   #17: #gt(BIT0(n),BIT1(m)) -> #gt(n,m)
   #18: #lt(0(),BIT0(n)) -> #lt(0(),n)
   #19: #eq(0(),BIT0(n)) -> #eq(0(),n)
   #20: #lt(BIT0(m),BIT0(n)) -> #lt(m,n)
   #21: #eq(BIT1(m),BIT1(n)) -> #eq(m,n)
   #22: #le(BIT0(n),0()) -> #le(n,0())
   #23: #SUC(BIT1(n)) -> #BIT0(SUC(n))
   #24: #SUC(BIT1(n)) -> #SUC(n)
   #25: #le(NUMERAL(m),NUMERAL(n)) -> #le(m,n)
   #26: #eq(BIT0(m),BIT0(n)) -> #eq(m,n)
   #27: #le(BIT1(m),BIT0(n)) -> #lt(m,n)
   #28: #exp(BIT1(m),BIT1(n)) -> #mult(mult(BIT1(m),exp(BIT1(m),n)),exp(BIT1(m),n))
   #29: #exp(BIT1(m),BIT1(n)) -> #mult(BIT1(m),exp(BIT1(m),n))
   #30: #exp(BIT1(m),BIT1(n)) -> #exp(BIT1(m),n)
   #31: #exp(BIT1(m),BIT1(n)) -> #exp(BIT1(m),n)
   #32: #minus(BIT1(m),BIT0(n)) -> #le(n,m)
   #33: #minus(BIT1(m),BIT0(n)) -> #minus(m,n)
   #34: #eq(BIT0(n),0()) -> #eq(n,0())
   #35: #PRE(BIT0(n)) -> #eq(n,0())
   #36: #PRE(BIT0(n)) -> #PRE(n)
   #37: #plus(NUMERAL(m),NUMERAL(n)) -> #NUMERAL(plus(m,n))
   #38: #plus(NUMERAL(m),NUMERAL(n)) -> #plus(m,n)
   #39: #gt(BIT1(n),BIT1(m)) -> #gt(n,m)
   #40: #lt(BIT0(m),BIT1(n)) -> #le(m,n)
   #41: #ge(0(),BIT0(n)) -> #ge(0(),n)
   #42: #lt(BIT1(m),BIT1(n)) -> #lt(m,n)
   #43: #ODD(NUMERAL(n)) -> #ODD(n)
   #44: #gt(BIT1(n),BIT0(m)) -> #ge(n,m)
   #45: #lt(NUMERAL(m),NUMERAL(n)) -> #lt(m,n)
   #46: #exp(NUMERAL(m),NUMERAL(n)) -> #NUMERAL(exp(m,n))
   #47: #exp(NUMERAL(m),NUMERAL(n)) -> #exp(m,n)
   #48: #ge(NUMERAL(n),NUMERAL(m)) -> #ge(n,m)
   #49: #gt(NUMERAL(n),NUMERAL(m)) -> #gt(n,m)
   #50: #minus(BIT0(m),BIT1(n)) -> #PRE(BIT0(minus(m,n)))
   #51: #minus(BIT0(m),BIT1(n)) -> #BIT0(minus(m,n))
   #52: #minus(BIT0(m),BIT1(n)) -> #minus(m,n)
   #53: #mult(BIT1(m),BIT1(n)) -> #plus(plus(BIT1(m),BIT0(n)),BIT0(BIT0(mult(m,n))))
   #54: #mult(BIT1(m),BIT1(n)) -> #plus(BIT1(m),BIT0(n))
   #55: #mult(BIT1(m),BIT1(n)) -> #BIT0(n)
   #56: #mult(BIT1(m),BIT1(n)) -> #BIT0(BIT0(mult(m,n)))
   #57: #mult(BIT1(m),BIT1(n)) -> #BIT0(mult(m,n))
   #58: #mult(BIT1(m),BIT1(n)) -> #mult(m,n)
   #59: #eq(NUMERAL(m),NUMERAL(n)) -> #eq(m,n)
   #60: #minus(BIT1(m),BIT1(n)) -> #BIT0(minus(m,n))
   #61: #minus(BIT1(m),BIT1(n)) -> #minus(m,n)
   #62: #plus(BIT1(m),BIT1(n)) -> #BIT0(SUC(plus(m,n)))
   #63: #plus(BIT1(m),BIT1(n)) -> #SUC(plus(m,n))
   #64: #plus(BIT1(m),BIT1(n)) -> #plus(m,n)
   #65: #ge(BIT1(n),BIT1(m)) -> #ge(n,m)
   #66: #PRE(NUMERAL(n)) -> #NUMERAL(PRE(n))
   #67: #PRE(NUMERAL(n)) -> #PRE(n)
   #68: #exp(BIT0(m),BIT1(n)) -> #mult(mult(BIT0(m),exp(BIT0(m),n)),exp(BIT0(m),n))
   #69: #exp(BIT0(m),BIT1(n)) -> #mult(BIT0(m),exp(BIT0(m),n))
   #70: #exp(BIT0(m),BIT1(n)) -> #exp(BIT0(m),n)
   #71: #exp(BIT0(m),BIT1(n)) -> #exp(BIT0(m),n)
   #72: #PRE(BIT1(n)) -> #BIT0(n)
   #73: #gt(BIT0(n),0()) -> #gt(n,0())
   #74: #le(BIT0(m),BIT0(n)) -> #le(m,n)
   #75: #mult(BIT0(m),BIT1(n)) -> #plus(BIT0(m),BIT0(BIT0(mult(m,n))))
   #76: #mult(BIT0(m),BIT1(n)) -> #BIT0(BIT0(mult(m,n)))
   #77: #mult(BIT0(m),BIT1(n)) -> #BIT0(mult(m,n))
   #78: #mult(BIT0(m),BIT1(n)) -> #mult(m,n)
   #79: #ge(BIT0(n),BIT1(m)) -> #gt(n,m)
   #80: #mult(BIT0(m),BIT0(n)) -> #BIT0(BIT0(mult(m,n)))
   #81: #mult(BIT0(m),BIT0(n)) -> #BIT0(mult(m,n))
   #82: #mult(BIT0(m),BIT0(n)) -> #mult(m,n)
   #83: #plus(BIT0(m),BIT0(n)) -> #BIT0(plus(m,n))
   #84: #plus(BIT0(m),BIT0(n)) -> #plus(m,n)
   #85: #plus(BIT1(m),BIT0(n)) -> #plus(m,n)
   #86: #minus(BIT0(m),BIT0(n)) -> #BIT0(minus(m,n))
   #87: #minus(BIT0(m),BIT0(n)) -> #minus(m,n)
   #88: #ge(BIT0(n),BIT0(m)) -> #ge(n,m)
   #89: #le(BIT1(m),BIT1(n)) -> #le(m,n)
   #90: #exp(BIT0(m),BIT0(n)) -> #mult(exp(BIT0(m),n),exp(BIT0(m),n))
   #91: #exp(BIT0(m),BIT0(n)) -> #exp(BIT0(m),n)
   #92: #exp(BIT0(m),BIT0(n)) -> #exp(BIT0(m),n)
   #93: #mult(NUMERAL(m),NUMERAL(n)) -> #NUMERAL(mult(m,n))
   #94: #mult(NUMERAL(m),NUMERAL(n)) -> #mult(m,n)
   #95: #SUC(NUMERAL(n)) -> #NUMERAL(SUC(n))
   #96: #SUC(NUMERAL(n)) -> #SUC(n)
   #97: #lt(BIT1(m),BIT0(n)) -> #lt(m,n)
   #98: #plus(BIT0(m),BIT1(n)) -> #plus(m,n)
Number of SCCs: 20, DPs: 61, edges: 237
	SCC { #43 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: 0
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2) + x1
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: x1
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: 0
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #43
Number of SCCs: 19, DPs: 60, edges: 236
	SCC { #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: 0
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2) + x1
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: x1
  BIT0(x1)	weight: 0
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #11
Number of SCCs: 18, DPs: 59, edges: 235
	SCC { #18 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: 0
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: x2
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2)
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #18
Number of SCCs: 17, DPs: 58, edges: 234
	SCC { #22 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: 0
  #le(x1,x2)	weight: x1
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2)
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #22
Number of SCCs: 16, DPs: 57, edges: 233
	SCC { #34 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: 0
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2)
  #eq(x1,x2)	weight: x1
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #34
Number of SCCs: 15, DPs: 56, edges: 232
	SCC { #73 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: 0
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2)
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: x1
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #73
Number of SCCs: 14, DPs: 55, edges: 231
	SCC { #41 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: 0
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: x2
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2)
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #41
Number of SCCs: 13, DPs: 54, edges: 230
	SCC { #19 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: 0
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2)
  #eq(x1,x2)	weight: x2
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #19
Number of SCCs: 12, DPs: 53, edges: 229
	SCC { #47 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: 0
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: x2
NUMERAL(x1)	weight: (/ 1 2) + x1
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2)
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #47
Number of SCCs: 11, DPs: 52, edges: 228
	SCC { #24 #96 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2) + x1
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: x1
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2)
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #24 #96
Number of SCCs: 10, DPs: 50, edges: 224
	SCC { #36 #67 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: (/ 1 2)
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2) + x1
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: x1
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #36 #67
Number of SCCs: 9, DPs: 48, edges: 220
	SCC { #7 #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: (/ 1 2)
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: x2
NUMERAL(x1)	weight: (/ 1 2)
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #7 #8
Number of SCCs: 8, DPs: 46, edges: 216
	SCC { #21 #26 #59 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2) + x1
  #eq(x1,x2)	weight: x2
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #21 #26 #59
Number of SCCs: 7, DPs: 43, edges: 207
	SCC { #70 #71 #91 #92 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: x2
NUMERAL(x1)	weight: (/ 1 2)
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #70 #71 #91 #92
Number of SCCs: 6, DPs: 39, edges: 191
	SCC { #13 #14 #30 #31 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: x2
NUMERAL(x1)	weight: (/ 1 2)
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #13 #14 #30 #31
Number of SCCs: 5, DPs: 35, edges: 175
	SCC { #38 #64 #84 #85 #98 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: x2
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2) + x1
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #38 #64 #84 #85 #98
Number of SCCs: 4, DPs: 30, edges: 150
	SCC { #5 #58 #78 #82 #94 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2) + x1
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: x2
    Usable rules: { }
    Removed DPs: #5 #58 #78 #82 #94
Number of SCCs: 3, DPs: 25, edges: 125
	SCC { #16 #33 #52 #61 #87 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2) + x1
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: x1
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #16 #33 #52 #61 #87
Number of SCCs: 2, DPs: 20, edges: 100
	SCC { #9 #20 #25 #27 #40 #42 #45 #74 #89 #97 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: x1
  #lt(x1,x2)	weight: x1
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2) + x1
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #9 #20 #25 #27 #40 #42 #45 #74 #89 #97
Number of SCCs: 1, DPs: 10, edges: 50
	SCC { #1 #10 #17 #39 #44 #48 #49 #65 #79 #88 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
   ODD(x1)	weight: 0
  BIT1(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
  #lt(x1,x2)	weight: 0
  EVEN(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
     T()	weight: 0
     F()	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
  #ge(x1,x2)	weight: x1
 #exp(x1,x2)	weight: 0
NUMERAL(x1)	weight: (/ 1 2) + x1
  #eq(x1,x2)	weight: 0
  mult(x1,x2)	weight: 0
 #ODD(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#NUMERAL(x1)	weight: 0
 #SUC(x1)	weight: 0
#BIT0(x1)	weight: 0
  #gt(x1,x2)	weight: x1
   PRE(x1)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#EVEN(x1)	weight: 0
  BIT0(x1)	weight: (/ 1 2) + x1
   exp(x1,x2)	weight: 0
 #PRE(x1)	weight: 0
   SUC(x1)	weight: 0
    lt(x1,x2)	weight: 0
#mult(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1 #10 #17 #39 #44 #48 #49 #65 #79 #88
Number of SCCs: 0, DPs: 0, edges: 0
