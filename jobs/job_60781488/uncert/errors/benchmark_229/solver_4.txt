Input TRS:
    1: lt(0(),s(x)) -> true()
    2: lt(x,0()) -> false()
    3: lt(s(x),s(y)) -> lt(x,y)
    4: times(0(),y) -> 0()
    5: times(s(x),y) -> plus(y,times(x,y))
    6: plus(0(),y) -> y
    7: plus(s(x),y) -> s(plus(x,y))
    8: fac(x) -> loop(x,s(0()),s(0()))
    9: loop(x,c,y) -> if(lt(x,c),x,c,y)
    10: if(false(),x,c,y) -> loop(x,s(c),times(y,s(c)))
    11: if(true(),x,c,y) -> y
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #loop(x,c,y) -> #if(lt(x,c),x,c,y)
   #2: #loop(x,c,y) -> #lt(x,c)
   #3: #plus(s(x),y) -> #plus(x,y)
   #4: #if(false(),x,c,y) -> #loop(x,s(c),times(y,s(c)))
   #5: #if(false(),x,c,y) -> #times(y,s(c))
   #6: #times(s(x),y) -> #plus(y,times(x,y))
   #7: #times(s(x),y) -> #times(x,y)
   #8: #lt(s(x),s(y)) -> #lt(x,y)
   #9: #fac(x) -> #loop(x,s(0()),s(0()))
Number of SCCs: 4, DPs: 5, edges: 5
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: 0
 #fac(x1)	weight: 0
#plus(x1,x2)	weight: x1
 false()	weight: 0
  true()	weight: 0
#times(x1,x2)	weight: 0
#loop(x1,x2,x3)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
 times(x1,x2)	weight: 0
   fac(x1)	weight: 0
  loop(x1,x2,x3)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #3
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: 0
 #fac(x1)	weight: 0
#plus(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#times(x1,x2)	weight: x1
#loop(x1,x2,x3)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
 times(x1,x2)	weight: 0
   fac(x1)	weight: 0
  loop(x1,x2,x3)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #7
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: x2
 #fac(x1)	weight: 0
#plus(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#times(x1,x2)	weight: 0
#loop(x1,x2,x3)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
 times(x1,x2)	weight: 0
   fac(x1)	weight: 0
  loop(x1,x2,x3)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #1 #4 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
