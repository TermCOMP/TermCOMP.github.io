Input TRS:
    1: from(X) -> cons(X)
    2: length() -> 0()
    3: length() -> s(length1())
    4: length1() -> length()
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... removes: 1
     s(x1)	weight: x1
length1()	weight: 0
     0()	weight: 0
  from(x1)	weight: (/ 1 2) + x1
  cons(x1)	weight: x1
length()	weight: 0
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #length() -> #length1()
   #2: #length1() -> #length()
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #1 #2 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #length()	-#1->
  #length1()	--->*
  #length1()	-#2->
  #length()	--->*
  #length()
  Looping with: [ ]
