Input TRS:
    1: minus(0(),y) -> 0()
    2: minus(x,0()) -> x
    3: minus(s(x),s(y)) -> minus(x,y)
    4: plus(0(),y) -> y
    5: plus(s(x),y) -> plus(x,s(y))
    6: zero(s(x)) -> false()
    7: zero(0()) -> true()
    8: p(s(x)) -> x
    9: div(x,y) -> quot(x,y,0())
    10: quot(x,y,z) -> if(zero(x),x,y,plus(z,s(0())))
    11: if(true(),x,y,z) -> p(z)
    12: if(false(),x,s(y),z) -> quot(minus(x,s(y)),s(y),z)
Number of strict rules: 12
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #div(x,y) -> #quot(x,y,0())
   #2: #if(true(),x,y,z) -> #p(z)
   #3: #if(false(),x,s(y),z) -> #quot(minus(x,s(y)),s(y),z)
   #4: #if(false(),x,s(y),z) -> #minus(x,s(y))
   #5: #quot(x,y,z) -> #if(zero(x),x,y,plus(z,s(0())))
   #6: #quot(x,y,z) -> #zero(x)
   #7: #quot(x,y,z) -> #plus(z,s(0()))
   #8: #plus(s(x),y) -> #plus(x,s(y))
   #9: #minus(s(x),s(y)) -> #minus(x,y)
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  zero(x1)	weight: 0
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
#plus(x1,x2)	weight: x1
 false()	weight: 0
   div(x1,x2)	weight: 0
   #p(x1)	weight: 0
  true()	weight: 0
     p(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
  quot(x1,x2,x3)	weight: 0
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
#quot(x1,x2,x3)	weight: 0
#zero(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  zero(x1)	weight: 0
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
 false()	weight: 0
   div(x1,x2)	weight: 0
   #p(x1)	weight: 0
  true()	weight: 0
     p(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
  quot(x1,x2,x3)	weight: 0
#minus(x1,x2)	weight: x1
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
#quot(x1,x2,x3)	weight: 0
#zero(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #9
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #3 #5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
