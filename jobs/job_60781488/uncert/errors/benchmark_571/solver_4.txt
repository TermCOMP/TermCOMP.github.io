Input TRS:
    1: le(0(),Y) -> true()
    2: le(s(X),0()) -> false()
    3: le(s(X),s(Y)) -> le(X,Y)
    4: app(nil(),Y) -> Y
    5: app(cons(N,L),Y) -> cons(N,app(L,Y))
    6: low(N,nil()) -> nil()
    7: low(N,cons(M,L)) -> iflow(le(M,N),N,cons(M,L))
    8: iflow(true(),N,cons(M,L)) -> cons(M,low(N,L))
    9: iflow(false(),N,cons(M,L)) -> low(N,L)
    10: high(N,nil()) -> nil()
    11: high(N,cons(M,L)) -> ifhigh(le(M,N),N,cons(M,L))
    12: ifhigh(true(),N,cons(M,L)) -> high(N,L)
    13: ifhigh(false(),N,cons(M,L)) -> cons(M,high(N,L))
    14: quicksort(nil()) -> nil()
    15: quicksort(cons(N,L)) -> app(quicksort(low(N,L)),cons(N,quicksort(high(N,L))))
Number of strict rules: 15
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #ifhigh(false(),N,cons(M,L)) -> #high(N,L)
   #2: #iflow(false(),N,cons(M,L)) -> #low(N,L)
   #3: #high(N,cons(M,L)) -> #ifhigh(le(M,N),N,cons(M,L))
   #4: #high(N,cons(M,L)) -> #le(M,N)
   #5: #ifhigh(true(),N,cons(M,L)) -> #high(N,L)
   #6: #low(N,cons(M,L)) -> #iflow(le(M,N),N,cons(M,L))
   #7: #low(N,cons(M,L)) -> #le(M,N)
   #8: #app(cons(N,L),Y) -> #app(L,Y)
   #9: #le(s(X),s(Y)) -> #le(X,Y)
   #10: #iflow(true(),N,cons(M,L)) -> #low(N,L)
   #11: #quicksort(cons(N,L)) -> #app(quicksort(low(N,L)),cons(N,quicksort(high(N,L))))
   #12: #quicksort(cons(N,L)) -> #quicksort(low(N,L))
   #13: #quicksort(cons(N,L)) -> #low(N,L)
   #14: #quicksort(cons(N,L)) -> #quicksort(high(N,L))
   #15: #quicksort(cons(N,L)) -> #high(N,L)
Number of SCCs: 5, DPs: 10, edges: 14
	SCC { #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: x2
#quicksort(x1)	weight: 0
#high(x1,x2)	weight: 0
 false()	weight: 0
quicksort(x1)	weight: 0
  true()	weight: 0
#iflow(x1,x2,x3)	weight: 0
     0()	weight: 0
  high(x1,x2)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   low(x1,x2)	weight: 0
 iflow(x1,x2,x3)	weight: 0
ifhigh(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#ifhigh(x1,x2,x3)	weight: 0
 #low(x1,x2)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #9
Number of SCCs: 4, DPs: 9, edges: 13
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2)
  #le(x1,x2)	weight: 0
#quicksort(x1)	weight: 0
#high(x1,x2)	weight: 0
 false()	weight: 0
quicksort(x1)	weight: 0
  true()	weight: 0
#iflow(x1,x2,x3)	weight: 0
     0()	weight: 0
  high(x1,x2)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: x1
   low(x1,x2)	weight: 0
 iflow(x1,x2,x3)	weight: 0
ifhigh(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
#ifhigh(x1,x2,x3)	weight: 0
 #low(x1,x2)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 3, DPs: 8, edges: 12
	SCC { #12 #14 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: (/ 1 4)
     s(x1)	weight: (/ 1 4)
  #le(x1,x2)	weight: 0
#quicksort(x1)	weight: x1
#high(x1,x2)	weight: 0
 false()	weight: 0
quicksort(x1)	weight: 0
  true()	weight: 0
#iflow(x1,x2,x3)	weight: 0
     0()	weight: 0
  high(x1,x2)	weight: (/ 1 4) + x2
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   low(x1,x2)	weight: (/ 1 4) + x2
 iflow(x1,x2,x3)	weight: (/ 1 4) + x3
ifhigh(x1,x2,x3)	weight: (/ 1 4) + x3
  cons(x1,x2)	weight: (/ 1 2) + x1 + x2
#ifhigh(x1,x2,x3)	weight: 0
 #low(x1,x2)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { 1..3 6..13 }
    Removed DPs: #12 #14
Number of SCCs: 2, DPs: 6, edges: 8
	SCC { #2 #6 #10 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: (/ 1 4)
     s(x1)	weight: (/ 1 4)
  #le(x1,x2)	weight: 0
#quicksort(x1)	weight: x1
#high(x1,x2)	weight: 0
 false()	weight: 0
quicksort(x1)	weight: 0
  true()	weight: 0
#iflow(x1,x2,x3)	weight: x3
     0()	weight: 0
  high(x1,x2)	weight: (/ 1 4) + x2
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   low(x1,x2)	weight: (/ 1 4) + x2
 iflow(x1,x2,x3)	weight: (/ 1 4) + x3
ifhigh(x1,x2,x3)	weight: (/ 1 4) + x3
  cons(x1,x2)	weight: (/ 1 2) + x1 + x2
#ifhigh(x1,x2,x3)	weight: 0
 #low(x1,x2)	weight: (/ 1 4) + x2
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2 #6 #10
Number of SCCs: 1, DPs: 3, edges: 4
	SCC { #1 #3 #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: (/ 1 4)
     s(x1)	weight: (/ 1 4)
  #le(x1,x2)	weight: 0
#quicksort(x1)	weight: x1
#high(x1,x2)	weight: (/ 1 4) + x2
 false()	weight: 0
quicksort(x1)	weight: 0
  true()	weight: 0
#iflow(x1,x2,x3)	weight: 0
     0()	weight: 0
  high(x1,x2)	weight: (/ 1 4) + x2
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   low(x1,x2)	weight: (/ 1 4) + x2
 iflow(x1,x2,x3)	weight: (/ 1 4) + x3
ifhigh(x1,x2,x3)	weight: (/ 1 4) + x3
  cons(x1,x2)	weight: (/ 1 2) + x1 + x2
#ifhigh(x1,x2,x3)	weight: x3
 #low(x1,x2)	weight: (/ 1 4)
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1 #3 #5
Number of SCCs: 0, DPs: 0, edges: 0
