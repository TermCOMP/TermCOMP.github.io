Input TRS:
    1: f(g(X),Y) -> f(X,f(g(X),Y))
Number of strict rules: 1
Direct Order(PosReal,>,Poly) ... failed.
Freezing f
1: f❆1_g(X,Y) -> f(X,f❆1_g(X,Y))
2: f(g(_1),_2) ->= f❆1_g(_1,_2)
Number of strict rules: 1
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #f(g(_1),_2) ->? #f❆1_g(_1,_2)
   #2: #f❆1_g(X,Y) -> #f(X,f❆1_g(X,Y))
   #3: #f❆1_g(X,Y) -> #f❆1_g(X,Y)
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #1..3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#f❆1_g(x1,x2)	weight: (/ 1 4) + x1
f❆1_g(x1,x2)	weight: (/ 1 4) + x2
     f(x1,x2)	weight: (/ 1 2)
   #f(x1,x2)	weight: x1
     g(x1)	weight: (/ 1 2) + x1
    Usable rules: { }
    Removed DPs: #1 #2
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #f❆1_g(X_{1},Y_{1})	-#3->
  #f❆1_g(X_{1},Y_{1})	--->*
  #f❆1_g(X_{1},Y_{1})
  Looping with: [ Y_{1} := Y_{1}; X_{1} := X_{1}; ]
