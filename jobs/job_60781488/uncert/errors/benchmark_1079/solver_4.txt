Input TRS:
    1: f(X) -> if(X,c(),n__f(true()))
    2: if(true(),X,Y) -> X
    3: if(false(),X,Y) -> activate(Y)
    4: f(X) -> n__f(X)
    5: activate(n__f(X)) -> f(X)
    6: activate(X) -> X
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... removes: 4 6 2
activate(x1)	weight: (/ 1 4) + 2 * x1
 false()	weight: 0
     c()	weight: 0
  true()	weight: 0
     f(x1)	weight: (/ 3 4) + x1
    if(x1,x2,x3)	weight: (/ 1 4) + x1 + x2 + 2 * x3
  n__f(x1)	weight: (/ 1 4) + x1
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #activate(n__f(X)) -> #f(X)
   #2: #if(false(),X,Y) -> #activate(Y)
   #3: #f(X) -> #if(X,c(),n__f(true()))
Number of SCCs: 1, DPs: 3, edges: 3
	SCC { #1..3 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
activate(x1)	weight: 0
#activate(x1)	weight: max{0, (/ 1 8) + x1}
 false()	weight: (/ 1 2)
     c()	weight: (/ 1 8)
  true()	weight: (/ 1 8)
     f(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
  n__f(x1)	weight: max{0, (/ 1 4) + x1}
   #f(x1)	weight: max{0, (/ 1 4) + x1}
  #if(x1,x2,x3)	weight: max{0, (- (/ 1 4)) + x3 + x1}
    Usable rules: { }
    Removed DPs: #1..3
Number of SCCs: 0, DPs: 0, edges: 0
