Input TRS:
    1: +(x,0()) -> x
    2: +(0(),x) -> x
    3: +(s(x),s(y)) -> s(s(+(x,y)))
    4: *(x,0()) -> 0()
    5: *(0(),x) -> 0()
    6: *(s(x),s(y)) -> s(+(*(x,y),+(x,y)))
    7: sum(nil()) -> 0()
    8: sum(cons(x,l)) -> +(x,sum(l))
    9: prod(nil()) -> s(0())
    10: prod(cons(x,l)) -> *(x,prod(l))
Number of strict rules: 10
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #*(s(x),s(y)) -> #+(*(x,y),+(x,y))
   #2: #*(s(x),s(y)) -> #*(x,y)
   #3: #*(s(x),s(y)) -> #+(x,y)
   #4: #prod(cons(x,l)) -> #*(x,prod(l))
   #5: #prod(cons(x,l)) -> #prod(l)
   #6: #+(s(x),s(y)) -> #+(x,y)
   #7: #sum(cons(x,l)) -> #+(x,sum(l))
   #8: #sum(cons(x,l)) -> #sum(l)
Number of SCCs: 4, DPs: 4, edges: 4
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  prod(x1)	weight: 0
     s(x1)	weight: 0
#prod(x1)	weight: x1
   #*(x1,x2)	weight: 0
   sum(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
     +(x1,x2)	weight: 0
 #sum(x1)	weight: 0
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5
Number of SCCs: 3, DPs: 3, edges: 3
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  prod(x1)	weight: 0
     s(x1)	weight: 0
#prod(x1)	weight: 0
   #*(x1,x2)	weight: 0
   sum(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
     +(x1,x2)	weight: 0
 #sum(x1)	weight: x1
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  prod(x1)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
#prod(x1)	weight: 0
   #*(x1,x2)	weight: 0
   sum(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
  cons(x1,x2)	weight: (/ 1 2)
     +(x1,x2)	weight: 0
 #sum(x1)	weight: 0
   #+(x1,x2)	weight: x2
     *(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  prod(x1)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
#prod(x1)	weight: 0
   #*(x1,x2)	weight: x2
   sum(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
  cons(x1,x2)	weight: (/ 1 2)
     +(x1,x2)	weight: 0
 #sum(x1)	weight: 0
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2
Number of SCCs: 0, DPs: 0, edges: 0
