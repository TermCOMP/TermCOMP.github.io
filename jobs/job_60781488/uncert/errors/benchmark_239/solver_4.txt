Input TRS:
    1: gt(s(x),0()) -> true()
    2: gt(0(),y) -> false()
    3: gt(s(x),s(y)) -> gt(x,y)
    4: divides(x,y) -> div(x,y,y)
    5: div(0(),0(),z) -> true()
    6: div(0(),s(x),z) -> false()
    7: div(s(x),0(),s(z)) -> div(s(x),s(z),s(z))
    8: div(s(x),s(y),z) -> div(x,y,z)
    9: prime(x) -> test(x,s(s(0())))
    10: test(x,y) -> if1(gt(x,y),x,y)
    11: if1(true(),x,y) -> if2(divides(x,y),x,y)
    12: if1(false(),x,y) -> true()
    13: if2(true(),x,y) -> false()
    14: if2(false(),x,y) -> test(x,s(y))
Number of strict rules: 14
Direct Order(PosReal,>,Poly) ... failed.
Freezing div
1: gt(s(x),0()) -> true()
2: gt(0(),y) -> false()
3: gt(s(x),s(y)) -> gt(x,y)
4: divides(x,y) -> div(x,y,y)
5: div❆1_0(0(),z) -> true()
6: div❆1_0(s(x),z) -> false()
7: div❆1_s(x,0(),s(z)) -> div❆1_s(x,s(z),s(z))
8: div❆1_s(x,s(y),z) -> div(x,y,z)
9: prime(x) -> test(x,s(s(0())))
10: test(x,y) -> if1(gt(x,y),x,y)
11: if1(true(),x,y) -> if2(divides(x,y),x,y)
12: if1(false(),x,y) -> true()
13: if2(true(),x,y) -> false()
14: if2(false(),x,y) -> test(x,s(y))
15: div(0(),_2,_3) ->= div❆1_0(_2,_3)
16: div(s(_1),_3,_4) ->= div❆1_s(_1,_3,_4)
Number of strict rules: 14
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #prime(x) -> #test(x,s(s(0())))
   #2: #if1(true(),x,y) -> #if2(divides(x,y),x,y)
   #3: #if1(true(),x,y) -> #divides(x,y)
   #4: #if2(false(),x,y) -> #test(x,s(y))
   #5: #div❆1_s(x,0(),s(z)) -> #div❆1_s(x,s(z),s(z))
   #6: #test(x,y) -> #if1(gt(x,y),x,y)
   #7: #test(x,y) -> #gt(x,y)
   #8: #div(s(_1),_3,_4) ->? #div❆1_s(_1,_3,_4)
   #9: #gt(s(x),s(y)) -> #gt(x,y)
   #10: #div❆1_s(x,s(y),z) -> #div(x,y,z)
   #11: #div(0(),_2,_3) ->? #div❆1_0(_2,_3)
   #12: #divides(x,y) -> #div(x,y,y)
Number of SCCs: 3, DPs: 7, edges: 8
	SCC { #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2,x3)	weight: 0
  test(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
    gt(x1,x2)	weight: 0
 prime(x1)	weight: 0
   if1(x1,x2,x3)	weight: 0
 false()	weight: 0
   div(x1,x2,x3)	weight: 0
div❆1_0(x1,x2)	weight: 0
  true()	weight: 0
#prime(x1)	weight: 0
 #if1(x1,x2,x3)	weight: 0
   if2(x1,x2,x3)	weight: 0
     0()	weight: 0
#div❆1_s(x1,x2,x3)	weight: 0
  #gt(x1,x2)	weight: x2
div❆1_s(x1,x2,x3)	weight: 0
#test(x1,x2)	weight: 0
#divides(x1,x2)	weight: 0
#div❆1_0(x1,x2)	weight: 0
divides(x1,x2)	weight: 0
 #if2(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #9
Number of SCCs: 2, DPs: 6, edges: 7
	SCC { #2 #4 #6 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
