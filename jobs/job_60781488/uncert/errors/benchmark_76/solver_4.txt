Input TRS:
    1: app(app(app(consif(),true()),x),ys) -> app(app(cons(),x),ys)
    2: app(app(app(consif(),false()),x),ys) -> ys
    3: app(app(filter(),f),nil()) -> nil()
    4: app(app(filter(),f),app(app(cons(),x),xs)) -> app(app(app(consif(),app(f,x)),x),app(app(filter(),f),xs))
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... failed.
Freezing app
1: app❆3_consif(true(),x,ys) -> app❆2_cons(x,ys)
2: app❆3_consif(false(),x,ys) -> ys
3: app❆2_filter(f,nil()) -> nil()
4: app❆2_filter(f,app❆2_cons(x,xs)) -> app❆3_consif(app(f,x),x,app❆2_filter(f,xs))
5: app(cons(),_1) ->= app❆1_cons(_1)
6: app(app❆1_cons(_1),_2) ->= app❆2_cons(_1,_2)
7: app(filter(),_1) ->= app❆1_filter(_1)
8: app(app❆1_filter(_1),_2) ->= app❆2_filter(_1,_2)
9: app(consif(),_1) ->= app❆1_consif(_1)
10: app(app❆1_consif(_1),_2) ->= app❆2_consif(_1,_2)
11: app(app❆2_consif(_1,_2),_3) ->= app❆3_consif(_1,_2,_3)
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #app(app❆2_consif(_1,_2),_3) ->? #app❆3_consif(_1,_2,_3)
   #2: #app(app❆1_filter(_1),_2) ->? #app❆2_filter(_1,_2)
   #3: #app❆2_filter(f,app❆2_cons(x,xs)) -> #app❆3_consif(app(f,x),x,app❆2_filter(f,xs))
   #4: #app❆2_filter(f,app❆2_cons(x,xs)) -> #app(f,x)
   #5: #app❆2_filter(f,app❆2_cons(x,xs)) -> #app❆2_filter(f,xs)
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #2 #4 #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#app❆3_consif(x1,x2,x3)	weight: 0
 false()	weight: 0
app❆3_consif(x1,x2,x3)	weight: 0
  true()	weight: 0
app❆2_filter(x1,x2)	weight: 0
app❆2_consif(x1,x2)	weight: 0
   nil()	weight: 0
app❆1_filter(x1)	weight: (/ 1 2) + x1
app❆1_consif(x1)	weight: 0
 #app(x1,x2)	weight: x1
consif()	weight: 0
#app❆2_filter(x1,x2)	weight: (/ 1 4) + x1
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 1 4)
filter()	weight: 0
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2 #4
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#app❆3_consif(x1,x2,x3)	weight: 0
 false()	weight: 0
app❆3_consif(x1,x2,x3)	weight: 0
  true()	weight: 0
app❆2_filter(x1,x2)	weight: 0
app❆2_consif(x1,x2)	weight: 0
   nil()	weight: 0
app❆1_filter(x1)	weight: (/ 1 2)
app❆1_consif(x1)	weight: 0
 #app(x1,x2)	weight: 0
consif()	weight: 0
#app❆2_filter(x1,x2)	weight: (/ 1 4) + x2
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 1 4) + x2
filter()	weight: 0
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5
Number of SCCs: 0, DPs: 0, edges: 0
