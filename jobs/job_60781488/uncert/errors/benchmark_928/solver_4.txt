Input TRS:
    1: active(p(0())) -> mark(0())
    2: active(p(s(X))) -> mark(X)
    3: active(leq(0(),Y)) -> mark(true())
    4: active(leq(s(X),0())) -> mark(false())
    5: active(leq(s(X),s(Y))) -> mark(leq(X,Y))
    6: active(if(true(),X,Y)) -> mark(X)
    7: active(if(false(),X,Y)) -> mark(Y)
    8: active(diff(X,Y)) -> mark(if(leq(X,Y),0(),s(diff(p(X),Y))))
    9: active(p(X)) -> p(active(X))
    10: active(s(X)) -> s(active(X))
    11: active(leq(X1,X2)) -> leq(active(X1),X2)
    12: active(leq(X1,X2)) -> leq(X1,active(X2))
    13: active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
    14: active(diff(X1,X2)) -> diff(active(X1),X2)
    15: active(diff(X1,X2)) -> diff(X1,active(X2))
    16: p(mark(X)) -> mark(p(X))
    17: s(mark(X)) -> mark(s(X))
    18: leq(mark(X1),X2) -> mark(leq(X1,X2))
    19: leq(X1,mark(X2)) -> mark(leq(X1,X2))
    20: if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
    21: diff(mark(X1),X2) -> mark(diff(X1,X2))
    22: diff(X1,mark(X2)) -> mark(diff(X1,X2))
    23: proper(p(X)) -> p(proper(X))
    24: proper(0()) -> ok(0())
    25: proper(s(X)) -> s(proper(X))
    26: proper(leq(X1,X2)) -> leq(proper(X1),proper(X2))
    27: proper(true()) -> ok(true())
    28: proper(false()) -> ok(false())
    29: proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
    30: proper(diff(X1,X2)) -> diff(proper(X1),proper(X2))
    31: p(ok(X)) -> ok(p(X))
    32: s(ok(X)) -> ok(s(X))
    33: leq(ok(X1),ok(X2)) -> ok(leq(X1,X2))
    34: if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
    35: diff(ok(X1),ok(X2)) -> ok(diff(X1,X2))
    36: top(mark(X)) -> top(proper(X))
    37: top(ok(X)) -> top(active(X))
Number of strict rules: 37
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #proper(if(X1,X2,X3)) -> #if(proper(X1),proper(X2),proper(X3))
   #2: #proper(if(X1,X2,X3)) -> #proper(X1)
   #3: #proper(if(X1,X2,X3)) -> #proper(X2)
   #4: #proper(if(X1,X2,X3)) -> #proper(X3)
   #5: #diff(ok(X1),ok(X2)) -> #diff(X1,X2)
   #6: #top(ok(X)) -> #top(active(X))
   #7: #top(ok(X)) -> #active(X)
   #8: #active(if(X1,X2,X3)) -> #if(active(X1),X2,X3)
   #9: #active(if(X1,X2,X3)) -> #active(X1)
   #10: #active(p(X)) -> #p(active(X))
   #11: #active(p(X)) -> #active(X)
   #12: #active(leq(X1,X2)) -> #leq(active(X1),X2)
   #13: #active(leq(X1,X2)) -> #active(X1)
   #14: #proper(p(X)) -> #p(proper(X))
   #15: #proper(p(X)) -> #proper(X)
   #16: #active(leq(X1,X2)) -> #leq(X1,active(X2))
   #17: #active(leq(X1,X2)) -> #active(X2)
   #18: #p(ok(X)) -> #p(X)
   #19: #active(diff(X1,X2)) -> #diff(active(X1),X2)
   #20: #active(diff(X1,X2)) -> #active(X1)
   #21: #proper(diff(X1,X2)) -> #diff(proper(X1),proper(X2))
   #22: #proper(diff(X1,X2)) -> #proper(X1)
   #23: #proper(diff(X1,X2)) -> #proper(X2)
   #24: #proper(s(X)) -> #s(proper(X))
   #25: #proper(s(X)) -> #proper(X)
   #26: #if(mark(X1),X2,X3) -> #if(X1,X2,X3)
   #27: #active(s(X)) -> #s(active(X))
   #28: #active(s(X)) -> #active(X)
   #29: #leq(ok(X1),ok(X2)) -> #leq(X1,X2)
   #30: #active(leq(s(X),s(Y))) -> #leq(X,Y)
   #31: #diff(X1,mark(X2)) -> #diff(X1,X2)
   #32: #if(ok(X1),ok(X2),ok(X3)) -> #if(X1,X2,X3)
   #33: #s(mark(X)) -> #s(X)
   #34: #s(ok(X)) -> #s(X)
   #35: #leq(X1,mark(X2)) -> #leq(X1,X2)
   #36: #proper(leq(X1,X2)) -> #leq(proper(X1),proper(X2))
   #37: #proper(leq(X1,X2)) -> #proper(X1)
   #38: #proper(leq(X1,X2)) -> #proper(X2)
   #39: #top(mark(X)) -> #top(proper(X))
   #40: #top(mark(X)) -> #proper(X)
   #41: #diff(mark(X1),X2) -> #diff(X1,X2)
   #42: #p(mark(X)) -> #p(X)
   #43: #active(diff(X,Y)) -> #if(leq(X,Y),0(),s(diff(p(X),Y)))
   #44: #active(diff(X,Y)) -> #leq(X,Y)
   #45: #active(diff(X,Y)) -> #s(diff(p(X),Y))
   #46: #active(diff(X,Y)) -> #diff(p(X),Y)
   #47: #active(diff(X,Y)) -> #p(X)
   #48: #active(diff(X1,X2)) -> #diff(X1,active(X2))
   #49: #active(diff(X1,X2)) -> #active(X2)
   #50: #leq(mark(X1),X2) -> #leq(X1,X2)
Number of SCCs: 8, DPs: 30, edges: 164
	SCC { #18 #42 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  diff(x1,x2)	weight: 0
     s(x1)	weight: 0
   top(x1)	weight: 0
 false()	weight: 0
 #top(x1)	weight: 0
   #p(x1)	weight: x1
   leq(x1,x2)	weight: 0
  true()	weight: 0
 #leq(x1,x2)	weight: 0
     p(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
   #s(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#diff(x1,x2)	weight: 0
#proper(x1)	weight: 0
active(x1)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #18 #42
Number of SCCs: 7, DPs: 28, edges: 160
	SCC { #33 #34 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  diff(x1,x2)	weight: 0
     s(x1)	weight: 0
   top(x1)	weight: 0
 false()	weight: 0
 #top(x1)	weight: 0
   #p(x1)	weight: 0
   leq(x1,x2)	weight: 0
  true()	weight: 0
 #leq(x1,x2)	weight: 0
     p(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
   #s(x1)	weight: x1
  mark(x1)	weight: (/ 1 2) + x1
#diff(x1,x2)	weight: 0
#proper(x1)	weight: 0
active(x1)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #33 #34
Number of SCCs: 6, DPs: 26, edges: 156
	SCC { #6 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
