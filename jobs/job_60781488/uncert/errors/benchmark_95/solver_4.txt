Input TRS:
    1: app(app(map_1(),f),app(app(cons(),h),t)) -> app(app(cons(),app(f,h)),app(app(map_1(),f),t))
    2: app(app(app(map_2(),f),c),app(app(cons(),h),t)) -> app(app(cons(),app(app(f,h),c)),app(app(app(map_2(),f),c),t))
    3: app(app(app(app(map_3(),f),g()),c),app(app(cons(),h),t)) -> app(app(cons(),app(app(app(f,g()),h),c)),app(app(app(app(map_3(),f),g()),c),t))
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... failed.
Freezing app
1: app❆2_map_1(f,app❆2_cons(h,t)) -> app❆2_cons(app(f,h),app❆2_map_1(f,t))
2: app❆3_map_2(f,c,app❆2_cons(h,t)) -> app❆2_cons(app(app(f,h),c),app❆3_map_2(f,c,t))
3: app❆4_map_3(f,g(),c,app❆2_cons(h,t)) -> app❆2_cons(app(app(app(f,g()),h),c),app❆4_map_3(f,g(),c,t))
4: app(map_2(),_1) ->= app❆1_map_2(_1)
5: app(app❆1_map_2(_1),_2) ->= app❆2_map_2(_1,_2)
6: app(app❆2_map_2(_1,_2),_3) ->= app❆3_map_2(_1,_2,_3)
7: app(cons(),_1) ->= app❆1_cons(_1)
8: app(app❆1_cons(_1),_2) ->= app❆2_cons(_1,_2)
9: app(map_3(),_1) ->= app❆1_map_3(_1)
10: app(app❆1_map_3(_1),_2) ->= app❆2_map_3(_1,_2)
11: app(app❆2_map_3(_1,_2),_3) ->= app❆3_map_3(_1,_2,_3)
12: app(app❆3_map_3(_1,_2,_3),_4) ->= app❆4_map_3(_1,_2,_3,_4)
13: app(map_1(),_1) ->= app❆1_map_1(_1)
14: app(app❆1_map_1(_1),_2) ->= app❆2_map_1(_1,_2)
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #app❆3_map_2(f,c,app❆2_cons(h,t)) -> #app(app(f,h),c)
   #2: #app❆3_map_2(f,c,app❆2_cons(h,t)) -> #app(f,h)
   #3: #app❆3_map_2(f,c,app❆2_cons(h,t)) -> #app❆3_map_2(f,c,t)
   #4: #app(app❆2_map_2(_1,_2),_3) ->? #app❆3_map_2(_1,_2,_3)
   #5: #app(app❆3_map_3(_1,_2,_3),_4) ->? #app❆4_map_3(_1,_2,_3,_4)
   #6: #app(app❆1_map_1(_1),_2) ->? #app❆2_map_1(_1,_2)
   #7: #app❆4_map_3(f,g(),c,app❆2_cons(h,t)) -> #app(app(app(f,g()),h),c)
   #8: #app❆4_map_3(f,g(),c,app❆2_cons(h,t)) -> #app(app(f,g()),h)
   #9: #app❆4_map_3(f,g(),c,app❆2_cons(h,t)) -> #app(f,g())
   #10: #app❆4_map_3(f,g(),c,app❆2_cons(h,t)) -> #app❆4_map_3(f,g(),c,t)
   #11: #app❆2_map_1(f,app❆2_cons(h,t)) -> #app(f,h)
   #12: #app❆2_map_1(f,app❆2_cons(h,t)) -> #app❆2_map_1(f,t)
Number of SCCs: 1, DPs: 12, edges: 35
	SCC { #1..12 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
 map_2()	weight: 0
app❆2_map_3(x1,x2)	weight: max{0, (/ 3 8) + x2 + x1}
app❆1_map_2(x1)	weight: max{0, (/ 3 16) + x1}
app❆3_map_3(x1,x2,x3)	weight: max{0, (/ 9 16) + x3 + x2 + x1}
#app❆3_map_2(x1,x2,x3)	weight: max{0, (- (/ 1 8)) + x3 + x2 + x1}
#app❆2_map_1(x1,x2)	weight: max{0, (- (/ 1 16)) + x2 + x1}
 map_1()	weight: (/ 3 16)
app❆2_map_1(x1,x2)	weight: max{0, (/ 1 4) + x2 + x1}
app❆4_map_3(x1,x2,x3,x4)	weight: max{0, (/ 5 8) + x4 + x3 + x1}
app❆2_map_2(x1,x2)	weight: max{0, (/ 3 8) + x2 + x1}
 #app(x1,x2)	weight: max{0, (- (/ 5 16)) + x2 + x1}
#app❆4_map_3(x1,x2,x3,x4)	weight: max{0, (/ 3 16) + x4 + x3 + x1}
 map_3()	weight: 0
  cons()	weight: (/ 5 16)
app❆2_cons(x1,x2)	weight: max{0, x1, (/ 11 16) + x2}
app❆1_cons(x1)	weight: max{0, (/ 1 2) + x1}
app❆1_map_3(x1)	weight: max{0, (/ 3 16) + x1}
     g()	weight: (/ 1 16)
app❆1_map_1(x1)	weight: max{0, (/ 3 8) + x1}
app❆3_map_2(x1,x2,x3)	weight: max{0, (/ 3 8) + x3 + x2 + x1}
   app(x1,x2)	weight: max{0, (/ 3 16) + x2 + x1}
    Usable rules: { 1..14 }
    Removed DPs: #2..12
Number of SCCs: 0, DPs: 0, edges: 0
