Input TRS:
    1: active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
    2: active(sqr(0())) -> mark(0())
    3: active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
    4: active(dbl(0())) -> mark(0())
    5: active(dbl(s(X))) -> mark(s(s(dbl(X))))
    6: active(add(0(),X)) -> mark(X)
    7: active(add(s(X),Y)) -> mark(s(add(X,Y)))
    8: active(first(0(),X)) -> mark(nil())
    9: active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
    10: active(half(0())) -> mark(0())
    11: active(half(s(0()))) -> mark(0())
    12: active(half(s(s(X)))) -> mark(s(half(X)))
    13: active(half(dbl(X))) -> mark(X)
    14: mark(terms(X)) -> active(terms(mark(X)))
    15: mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
    16: mark(recip(X)) -> active(recip(mark(X)))
    17: mark(sqr(X)) -> active(sqr(mark(X)))
    18: mark(s(X)) -> active(s(mark(X)))
    19: mark(0()) -> active(0())
    20: mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
    21: mark(dbl(X)) -> active(dbl(mark(X)))
    22: mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
    23: mark(nil()) -> active(nil())
    24: mark(half(X)) -> active(half(mark(X)))
    25: terms(mark(X)) -> terms(X)
    26: terms(active(X)) -> terms(X)
    27: cons(mark(X1),X2) -> cons(X1,X2)
    28: cons(X1,mark(X2)) -> cons(X1,X2)
    29: cons(active(X1),X2) -> cons(X1,X2)
    30: cons(X1,active(X2)) -> cons(X1,X2)
    31: recip(mark(X)) -> recip(X)
    32: recip(active(X)) -> recip(X)
    33: sqr(mark(X)) -> sqr(X)
    34: sqr(active(X)) -> sqr(X)
    35: s(mark(X)) -> s(X)
    36: s(active(X)) -> s(X)
    37: add(mark(X1),X2) -> add(X1,X2)
    38: add(X1,mark(X2)) -> add(X1,X2)
    39: add(active(X1),X2) -> add(X1,X2)
    40: add(X1,active(X2)) -> add(X1,X2)
    41: dbl(mark(X)) -> dbl(X)
    42: dbl(active(X)) -> dbl(X)
    43: first(mark(X1),X2) -> first(X1,X2)
    44: first(X1,mark(X2)) -> first(X1,X2)
    45: first(active(X1),X2) -> first(X1,X2)
    46: first(X1,active(X2)) -> first(X1,X2)
    47: half(mark(X)) -> half(X)
    48: half(active(X)) -> half(X)
Number of strict rules: 48
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(sqr(0())) -> #mark(0())
   #2: #first(mark(X1),X2) -> #first(X1,X2)
   #3: #cons(active(X1),X2) -> #cons(X1,X2)
   #4: #s(mark(X)) -> #s(X)
   #5: #first(X1,active(X2)) -> #first(X1,X2)
   #6: #dbl(active(X)) -> #dbl(X)
   #7: #dbl(mark(X)) -> #dbl(X)
   #8: #add(mark(X1),X2) -> #add(X1,X2)
   #9: #half(mark(X)) -> #half(X)
   #10: #half(active(X)) -> #half(X)
   #11: #add(X1,mark(X2)) -> #add(X1,X2)
   #12: #active(add(0(),X)) -> #mark(X)
   #13: #add(X1,active(X2)) -> #add(X1,X2)
   #14: #active(half(dbl(X))) -> #mark(X)
   #15: #active(first(s(X),cons(Y,Z))) -> #mark(cons(Y,first(X,Z)))
   #16: #active(first(s(X),cons(Y,Z))) -> #cons(Y,first(X,Z))
   #17: #active(first(s(X),cons(Y,Z))) -> #first(X,Z)
   #18: #active(half(s(0()))) -> #mark(0())
   #19: #mark(half(X)) -> #active(half(mark(X)))
   #20: #mark(half(X)) -> #half(mark(X))
   #21: #mark(half(X)) -> #mark(X)
   #22: #mark(nil()) -> #active(nil())
   #23: #first(active(X1),X2) -> #first(X1,X2)
   #24: #active(half(s(s(X)))) -> #mark(s(half(X)))
   #25: #active(half(s(s(X)))) -> #s(half(X))
   #26: #active(half(s(s(X)))) -> #half(X)
   #27: #recip(mark(X)) -> #recip(X)
   #28: #mark(terms(X)) -> #active(terms(mark(X)))
   #29: #mark(terms(X)) -> #terms(mark(X))
   #30: #mark(terms(X)) -> #mark(X)
   #31: #cons(X1,active(X2)) -> #cons(X1,X2)
   #32: #terms(mark(X)) -> #terms(X)
   #33: #mark(add(X1,X2)) -> #active(add(mark(X1),mark(X2)))
   #34: #mark(add(X1,X2)) -> #add(mark(X1),mark(X2))
   #35: #mark(add(X1,X2)) -> #mark(X1)
   #36: #mark(add(X1,X2)) -> #mark(X2)
   #37: #active(add(s(X),Y)) -> #mark(s(add(X,Y)))
   #38: #active(add(s(X),Y)) -> #s(add(X,Y))
   #39: #active(add(s(X),Y)) -> #add(X,Y)
   #40: #add(active(X1),X2) -> #add(X1,X2)
   #41: #active(half(0())) -> #mark(0())
   #42: #sqr(mark(X)) -> #sqr(X)
   #43: #active(dbl(s(X))) -> #mark(s(s(dbl(X))))
   #44: #active(dbl(s(X))) -> #s(s(dbl(X)))
   #45: #active(dbl(s(X))) -> #s(dbl(X))
   #46: #active(dbl(s(X))) -> #dbl(X)
   #47: #first(X1,mark(X2)) -> #first(X1,X2)
   #48: #cons(X1,mark(X2)) -> #cons(X1,X2)
   #49: #mark(first(X1,X2)) -> #active(first(mark(X1),mark(X2)))
   #50: #mark(first(X1,X2)) -> #first(mark(X1),mark(X2))
   #51: #mark(first(X1,X2)) -> #mark(X1)
   #52: #mark(first(X1,X2)) -> #mark(X2)
   #53: #sqr(active(X)) -> #sqr(X)
   #54: #cons(mark(X1),X2) -> #cons(X1,X2)
   #55: #mark(sqr(X)) -> #active(sqr(mark(X)))
   #56: #mark(sqr(X)) -> #sqr(mark(X))
   #57: #mark(sqr(X)) -> #mark(X)
   #58: #recip(active(X)) -> #recip(X)
   #59: #mark(0()) -> #active(0())
   #60: #terms(active(X)) -> #terms(X)
   #61: #s(active(X)) -> #s(X)
   #62: #mark(dbl(X)) -> #active(dbl(mark(X)))
   #63: #mark(dbl(X)) -> #dbl(mark(X))
   #64: #mark(dbl(X)) -> #mark(X)
   #65: #mark(recip(X)) -> #active(recip(mark(X)))
   #66: #mark(recip(X)) -> #recip(mark(X))
   #67: #mark(recip(X)) -> #mark(X)
   #68: #active(sqr(s(X))) -> #mark(s(add(sqr(X),dbl(X))))
   #69: #active(sqr(s(X))) -> #s(add(sqr(X),dbl(X)))
   #70: #active(sqr(s(X))) -> #add(sqr(X),dbl(X))
   #71: #active(sqr(s(X))) -> #sqr(X)
   #72: #active(sqr(s(X))) -> #dbl(X)
   #73: #active(terms(N)) -> #mark(cons(recip(sqr(N)),terms(s(N))))
   #74: #active(terms(N)) -> #cons(recip(sqr(N)),terms(s(N)))
   #75: #active(terms(N)) -> #recip(sqr(N))
   #76: #active(terms(N)) -> #sqr(N)
   #77: #active(terms(N)) -> #terms(s(N))
   #78: #active(terms(N)) -> #s(N)
   #79: #active(first(0(),X)) -> #mark(nil())
   #80: #mark(cons(X1,X2)) -> #active(cons(mark(X1),X2))
   #81: #mark(cons(X1,X2)) -> #cons(mark(X1),X2)
   #82: #mark(cons(X1,X2)) -> #mark(X1)
   #83: #active(dbl(0())) -> #mark(0())
   #84: #mark(s(X)) -> #active(s(mark(X)))
   #85: #mark(s(X)) -> #s(mark(X))
   #86: #mark(s(X)) -> #mark(X)
Number of SCCs: 10, DPs: 49, edges: 307
	SCC { #9 #10 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: x1
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #9 #10
Number of SCCs: 9, DPs: 47, edges: 303
	SCC { #4 #61 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: x1
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #4 #61
Number of SCCs: 8, DPs: 45, edges: 299
	SCC { #27 #58 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: x1
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #27 #58
Number of SCCs: 7, DPs: 43, edges: 295
	SCC { #6 #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: x1
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #6 #7
Number of SCCs: 6, DPs: 41, edges: 291
	SCC { #42 #53 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: x1
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #42 #53
Number of SCCs: 5, DPs: 39, edges: 287
	SCC { #32 #60 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: x1
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #32 #60
Number of SCCs: 4, DPs: 37, edges: 283
	SCC { #2 #5 #23 #47 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: x2
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #5 #47
Number of SCCs: 4, DPs: 35, edges: 271
	SCC { #2 #23 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: x1
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #2 #23
Number of SCCs: 3, DPs: 33, edges: 267
	SCC { #3 #31 #48 #54 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: x1
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #3 #54
Number of SCCs: 4, DPs: 31, edges: 255
	SCC { #31 #48 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: x2
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #31 #48
Number of SCCs: 3, DPs: 29, edges: 251
	SCC { #8 #11 #13 #40 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: x2
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #11 #13
Number of SCCs: 4, DPs: 27, edges: 239
	SCC { #8 #40 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
 recip(x1)	weight: 0
#recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: x1
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #8 #40
Number of SCCs: 3, DPs: 25, edges: 235
	SCC { #12 #14 #15 #19 #21 #24 #28 #30 #33 #35..37 #43 #49 #51 #52 #55 #57 #62 #64 #67 #68 #73 #82 #86 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: x1
 recip(x1)	weight: (/ 1 4) + x1
#recip(x1)	weight: 0
   dbl(x1)	weight: (/ 154201 4) + x1
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: (/ 145861 4) + x1
 #sqr(x1)	weight: 0
#mark(x1)	weight: x1
     0()	weight: (/ 1 4)
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: (/ 3 4)
  mark(x1)	weight: x1
 first(x1,x2)	weight: max{(/ 1 2) + x2, (/ 129143 4) + x1}
active(x1)	weight: x1
  cons(x1,x2)	weight: max{0, (/ 1 4) + x1}
#active(x1)	weight: x1
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: max{(/ 33461 4) + x2, x1}
   sqr(x1)	weight: (/ 187663 4) + x1
 terms(x1)	weight: (/ 93833 2) + x1
    Usable rules: { 1..48 }
    Removed DPs: #12 #14 #15 #21 #30 #36 #51 #52 #57 #64 #67 #73 #82
Number of SCCs: 4, DPs: 10, edges: 20
	SCC { #19 #24 #33 #35 #37 #43 #55 #62 #68 #86 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
#cons(x1,x2)	status: [x2]	precedence above:
     s(x1)	status: [x1]	precedence above: half #mark
 recip(x1)	status: [x1]	precedence above: 0 mark active
#recip(x1)	status: []	precedence above:
   dbl(x1)	status: [x1]	precedence above: s half #mark 0 add sqr
 #dbl(x1)	status: []	precedence above:
#terms(x1)	status: []	precedence above:
#half(x1)	status: []	precedence above:
  half(x1)	status: [x1]	precedence above: s #mark
 #sqr(x1)	status: []	precedence above:
#mark(x1)	status: [x1]	precedence above: s half
     0()	status: []	precedence above:
   #s(x1)	status: []	precedence above:
#first(x1,x2)	status: [x1]	precedence above:
   nil()	status: []	precedence above:
  mark(x1)	status: x1
 first(x1,x2)	status: [x2]	precedence above: nil
active(x1)	status: x1
  cons(x1,x2)	status: x2
#active(x1)	status: x1
 #add(x1,x2)	status: [x2]	precedence above:
   add(x1,x2)	status: [x2,x1]	precedence above: s half #mark
   sqr(x1)	status: [x1]	precedence above: s dbl half #mark 0 add
 terms(x1)	status: []	precedence above:
    Usable rules: { 1..48 }
    Removed DPs: #19 #33 #35 #37 #43 #55 #62 #68 #86
Number of SCCs: 3, DPs: 0, edges: 0
