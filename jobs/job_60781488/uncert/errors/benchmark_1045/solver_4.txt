Input TRS:
    1: minus(n__0(),Y) -> 0()
    2: minus(n__s(X),n__s(Y)) -> minus(activate(X),activate(Y))
    3: geq(X,n__0()) -> true()
    4: geq(n__0(),n__s(Y)) -> false()
    5: geq(n__s(X),n__s(Y)) -> geq(activate(X),activate(Y))
    6: div(0(),n__s(Y)) -> 0()
    7: div(s(X),n__s(Y)) -> if(geq(X,activate(Y)),n__s(n__div(n__minus(X,activate(Y)),n__s(activate(Y)))),n__0())
    8: if(true(),X,Y) -> activate(X)
    9: if(false(),X,Y) -> activate(Y)
    10: 0() -> n__0()
    11: s(X) -> n__s(X)
    12: div(X1,X2) -> n__div(X1,X2)
    13: minus(X1,X2) -> n__minus(X1,X2)
    14: activate(n__0()) -> 0()
    15: activate(n__s(X)) -> s(activate(X))
    16: activate(n__div(X1,X2)) -> div(activate(X1),X2)
    17: activate(n__minus(X1,X2)) -> minus(X1,X2)
    18: activate(X) -> X
Number of strict rules: 18
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #minus(n__s(X),n__s(Y)) -> #minus(activate(X),activate(Y))
   #2: #minus(n__s(X),n__s(Y)) -> #activate(X)
   #3: #minus(n__s(X),n__s(Y)) -> #activate(Y)
   #4: #if(false(),X,Y) -> #activate(Y)
   #5: #activate(n__0()) -> #0()
   #6: #div(s(X),n__s(Y)) -> #if(geq(X,activate(Y)),n__s(n__div(n__minus(X,activate(Y)),n__s(activate(Y)))),n__0())
   #7: #div(s(X),n__s(Y)) -> #geq(X,activate(Y))
   #8: #div(s(X),n__s(Y)) -> #activate(Y)
   #9: #div(s(X),n__s(Y)) -> #activate(Y)
   #10: #div(s(X),n__s(Y)) -> #activate(Y)
   #11: #geq(n__s(X),n__s(Y)) -> #geq(activate(X),activate(Y))
   #12: #geq(n__s(X),n__s(Y)) -> #activate(X)
   #13: #geq(n__s(X),n__s(Y)) -> #activate(Y)
   #14: #activate(n__minus(X1,X2)) -> #minus(X1,X2)
   #15: #activate(n__div(X1,X2)) -> #div(activate(X1),X2)
   #16: #activate(n__div(X1,X2)) -> #activate(X1)
   #17: #minus(n__0(),Y) -> #0()
   #18: #if(true(),X,Y) -> #activate(X)
   #19: #activate(n__s(X)) -> #s(activate(X))
   #20: #activate(n__s(X)) -> #activate(X)
Number of SCCs: 1, DPs: 17, edges: 63
	SCC { #1..4 #6..16 #18 #20 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
   #0()	weight: 0
 #div(x1,x2)	weight: max{(/ 3 4) + x2, (/ 1 2) + x1}
     s(x1)	weight: x1
 minus(x1,x2)	weight: max{(/ 1 8) + x2, x1}
n__minus(x1,x2)	weight: max{(/ 1 8) + x2, x1}
activate(x1)	weight: x1
 #geq(x1,x2)	weight: max{(/ 1 4) + x2, (/ 3 8) + x1}
#activate(x1)	weight: (/ 1 8) + x1
 false()	weight: (/ 1 8)
   div(x1,x2)	weight: max{(/ 5 8) + x2, (/ 3 8) + x1}
   geq(x1,x2)	weight: 0
  true()	weight: (/ 1 8)
  n__s(x1)	weight: x1
n__div(x1,x2)	weight: max{(/ 5 8) + x2, (/ 3 8) + x1}
     0()	weight: (/ 1 2)
    if(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, x2}
   #s(x1)	weight: 0
  n__0()	weight: (/ 1 2)
#minus(x1,x2)	weight: max{(/ 1 4) + x2, (/ 1 8) + x1}
  #if(x1,x2,x3)	weight: max{0, (/ 1 4) + x3, (/ 1 8) + x2}
    Usable rules: { 1 2 6..18 }
    Removed DPs: #3 #4 #7..10 #12 #13 #16
Number of SCCs: 2, DPs: 8, edges: 16
	SCC { #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0()	weight: 0
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4) + x1
 minus(x1,x2)	weight: 0
n__minus(x1,x2)	weight: 0
activate(x1)	weight: x1
 #geq(x1,x2)	weight: x2
#activate(x1)	weight: 0
 false()	weight: 0
   div(x1,x2)	weight: (/ 1 4) + x1
   geq(x1,x2)	weight: (/ 1 4)
  true()	weight: 0
  n__s(x1)	weight: (/ 1 4) + x1
n__div(x1,x2)	weight: (/ 1 4) + x1
     0()	weight: 0
    if(x1,x2,x3)	weight: x2 + x3
   #s(x1)	weight: 0
  n__0()	weight: 0
#minus(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
    Usable rules: { 1 2 6..18 }
    Removed DPs: #11
Number of SCCs: 1, DPs: 7, edges: 15
	SCC { #1 #2 #6 #14 #15 #18 #20 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0()	weight: 0
 #div(x1,x2)	weight: (/ 1 2) + x1
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: x1
n__minus(x1,x2)	weight: x1
activate(x1)	weight: x1
 #geq(x1,x2)	weight: x2
#activate(x1)	weight: (/ 1 4) + x1
 false()	weight: 0
   div(x1,x2)	weight: (/ 1 4) + x1
   geq(x1,x2)	weight: (/ 1 4)
  true()	weight: 0
  n__s(x1)	weight: (/ 1 2) + x1
n__div(x1,x2)	weight: (/ 1 4) + x1
     0()	weight: 0
    if(x1,x2,x3)	weight: x2 + x3
   #s(x1)	weight: 0
  n__0()	weight: 0
#minus(x1,x2)	weight: x1
  #if(x1,x2,x3)	weight: (/ 1 4) + x2
    Usable rules: { 1 2 6..18 }
    Removed DPs: #1 #2 #14 #20
Number of SCCs: 1, DPs: 3, edges: 3
	SCC { #6 #15 #18 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0()	weight: 0
 #div(x1,x2)	weight: (/ 1 4) + x1 + x2
     s(x1)	weight: (/ 1 8)
 minus(x1,x2)	weight: (/ 1 8)
n__minus(x1,x2)	weight: (/ 1 8)
activate(x1)	weight: x1
 #geq(x1,x2)	weight: x2
#activate(x1)	weight: (/ 1 8) + x1
 false()	weight: 0
   div(x1,x2)	weight: (/ 1 4) + x1 + x2
   geq(x1,x2)	weight: (/ 1 8)
  true()	weight: 0
  n__s(x1)	weight: (/ 1 8)
n__div(x1,x2)	weight: (/ 1 4) + x1 + x2
     0()	weight: 0
    if(x1,x2,x3)	weight: x2 + x3
   #s(x1)	weight: 0
  n__0()	weight: 0
#minus(x1,x2)	weight: x1
  #if(x1,x2,x3)	weight: (/ 1 4) + x2
    Usable rules: { 1 2 6..18 }
    Removed DPs: #6 #15 #18
Number of SCCs: 0, DPs: 0, edges: 0
