Input TRS:
    1: from(X) -> cons(X,n__from(n__s(X)))
    2: first(0(),Z) -> nil()
    3: first(s(X),cons(Y,Z)) -> cons(Y,n__first(X,activate(Z)))
    4: sel(0(),cons(X,Z)) -> X
    5: sel(s(X),cons(Y,Z)) -> sel(X,activate(Z))
    6: from(X) -> n__from(X)
    7: s(X) -> n__s(X)
    8: first(X1,X2) -> n__first(X1,X2)
    9: activate(n__from(X)) -> from(activate(X))
    10: activate(n__s(X)) -> s(activate(X))
    11: activate(n__first(X1,X2)) -> first(activate(X1),activate(X2))
    12: activate(X) -> X
Number of strict rules: 12
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #activate(n__from(X)) -> #from(activate(X))
   #2: #activate(n__from(X)) -> #activate(X)
   #3: #activate(n__first(X1,X2)) -> #first(activate(X1),activate(X2))
   #4: #activate(n__first(X1,X2)) -> #activate(X1)
   #5: #activate(n__first(X1,X2)) -> #activate(X2)
   #6: #activate(n__s(X)) -> #s(activate(X))
   #7: #activate(n__s(X)) -> #activate(X)
   #8: #sel(s(X),cons(Y,Z)) -> #sel(X,activate(Z))
   #9: #sel(s(X),cons(Y,Z)) -> #activate(Z)
   #10: #first(s(X),cons(Y,Z)) -> #activate(Z)
Number of SCCs: 2, DPs: 7, edges: 27
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 4) + x1
n__first(x1,x2)	weight: (/ 3 4) + x1
activate(x1)	weight: (/ 1 4)
n__from(x1)	weight: (/ 3 4)
#activate(x1)	weight: 0
  n__s(x1)	weight: (/ 1 2)
     0()	weight: 0
 #sel(x1,x2)	weight: x1
  from(x1)	weight: (/ 1 2)
   sel(x1,x2)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
 first(x1,x2)	weight: (/ 1 2)
#from(x1)	weight: 0
  cons(x1,x2)	weight: (/ 3 4)
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 1, DPs: 6, edges: 26
	SCC { #2..5 #7 #10 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: x1
n__first(x1,x2)	weight: (/ 1 2) + x1 + x2
activate(x1)	weight: x1
n__from(x1)	weight: (/ 1 4) + x1
#activate(x1)	weight: x1
  n__s(x1)	weight: x1
     0()	weight: 0
 #sel(x1,x2)	weight: 0
  from(x1)	weight: (/ 1 4) + x1
   sel(x1,x2)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: (/ 1 4) + x2
   nil()	weight: 0
 first(x1,x2)	weight: (/ 1 2) + x1 + x2
#from(x1)	weight: 0
  cons(x1,x2)	weight: x2
    Usable rules: { 1..3 6..12 }
    Removed DPs: #2..5 #10
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 4) + x1
n__first(x1,x2)	weight: x1 + x2
activate(x1)	weight: x1
n__from(x1)	weight: (/ 1 4) + x1
#activate(x1)	weight: x1
  n__s(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
 #sel(x1,x2)	weight: 0
  from(x1)	weight: (/ 1 4) + x1
   sel(x1,x2)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: (/ 1 4) + x2
   nil()	weight: 0
 first(x1,x2)	weight: x1 + x2
#from(x1)	weight: 0
  cons(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #7
Number of SCCs: 0, DPs: 0, edges: 0
