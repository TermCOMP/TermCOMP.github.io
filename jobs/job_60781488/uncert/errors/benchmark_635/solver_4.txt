Input TRS:
    1: min(0(),y) -> 0()
    2: min(x,0()) -> 0()
    3: min(s(x),s(y)) -> s(min(x,y))
    4: max(0(),y) -> y
    5: max(x,0()) -> x
    6: max(s(x),s(y)) -> s(max(x,y))
    7: p(s(x)) -> x
    8: f(s(x),s(y),s(z)) -> f(max(s(x),max(s(y),s(z))),p(min(s(x),max(s(y),s(z)))),min(s(x),min(s(y),s(z))))
    9: f(0(),y,z) -> max(y,z)
    10: f(x,0(),z) -> max(x,z)
    11: f(x,y,0()) -> max(x,y)
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #max(s(x),s(y)) -> #max(x,y)
   #2: #f(0(),y,z) -> #max(y,z)
   #3: #f(x,y,0()) -> #max(x,y)
   #4: #f(x,0(),z) -> #max(x,z)
   #5: #min(s(x),s(y)) -> #min(x,y)
   #6: #f(s(x),s(y),s(z)) -> #f(max(s(x),max(s(y),s(z))),p(min(s(x),max(s(y),s(z)))),min(s(x),min(s(y),s(z))))
   #7: #f(s(x),s(y),s(z)) -> #max(s(x),max(s(y),s(z)))
   #8: #f(s(x),s(y),s(z)) -> #max(s(y),s(z))
   #9: #f(s(x),s(y),s(z)) -> #p(min(s(x),max(s(y),s(z))))
   #10: #f(s(x),s(y),s(z)) -> #min(s(x),max(s(y),s(z)))
   #11: #f(s(x),s(y),s(z)) -> #max(s(y),s(z))
   #12: #f(s(x),s(y),s(z)) -> #min(s(x),min(s(y),s(z)))
   #13: #f(s(x),s(y),s(z)) -> #min(s(y),s(z))
Number of SCCs: 3, DPs: 3, edges: 3
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
 #min(x1,x2)	weight: 0
   #p(x1)	weight: 0
     f(x1,x2,x3)	weight: 0
     p(x1)	weight: 0
     0()	weight: 0
   max(x1,x2)	weight: 0
 #max(x1,x2)	weight: x2
   #f(x1,x2,x3)	weight: 0
   min(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
 #min(x1,x2)	weight: x2
   #p(x1)	weight: 0
     f(x1,x2,x3)	weight: 0
     p(x1)	weight: 0
     0()	weight: 0
   max(x1,x2)	weight: 0
 #max(x1,x2)	weight: 0
   #f(x1,x2,x3)	weight: 0
   min(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
