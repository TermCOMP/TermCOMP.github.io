Input TRS:
    1: f(X) -> if(X,c(),f(true()))
    2: if(true(),X,Y) -> X
    3: if(false(),X,Y) -> Y
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #f(X) -> #if(X,c(),f(true()))
   #2: #f(X) -> #f(true())
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #f(X)	-#2->
  #f(true())	--->*
  #f(true())
  Looping with: [ X := true(); ]
