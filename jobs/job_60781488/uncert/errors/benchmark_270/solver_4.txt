Input TRS:
    1: minus(s(x),y) -> if(gt(s(x),y),x,y)
    2: if(true(),x,y) -> s(minus(x,y))
    3: if(false(),x,y) -> 0()
    4: gcd(x,y) -> if1(ge(x,y),x,y)
    5: if1(true(),x,y) -> if2(gt(y,0()),x,y)
    6: if1(false(),x,y) -> gcd(y,x)
    7: if2(true(),x,y) -> gcd(minus(x,y),y)
    8: if2(false(),x,y) -> x
    9: gt(0(),y) -> false()
    10: gt(s(x),0()) -> true()
    11: gt(s(x),s(y)) -> gt(x,y)
    12: ge(x,0()) -> true()
    13: ge(0(),s(x)) -> false()
    14: ge(s(x),s(y)) -> ge(x,y)
Number of strict rules: 14
Direct Order(PosReal,>,Poly) ... failed.
Freezing gt
1: minus(s(x),y) -> if(gt❆1_s(x,y),x,y)
2: if(true(),x,y) -> s(minus(x,y))
3: if(false(),x,y) -> 0()
4: gcd(x,y) -> if1(ge(x,y),x,y)
5: if1(true(),x,y) -> if2(gt(y,0()),x,y)
6: if1(false(),x,y) -> gcd(y,x)
7: if2(true(),x,y) -> gcd(minus(x,y),y)
8: if2(false(),x,y) -> x
9: gt❆1_0(y) -> false()
10: gt❆1_s(x,0()) -> true()
11: gt❆1_s(x,s(y)) -> gt(x,y)
12: ge(x,0()) -> true()
13: ge(0(),s(x)) -> false()
14: ge(s(x),s(y)) -> ge(x,y)
15: gt(0(),_1) ->= gt❆1_0(_1)
16: gt(s(_1),_2) ->= gt❆1_s(_1,_2)
Number of strict rules: 14
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #if(true(),x,y) -> #minus(x,y)
   #2: #if1(false(),x,y) -> #gcd(y,x)
   #3: #gt❆1_s(x,s(y)) -> #gt(x,y)
   #4: #ge(s(x),s(y)) -> #ge(x,y)
   #5: #if2(true(),x,y) -> #gcd(minus(x,y),y)
   #6: #if2(true(),x,y) -> #minus(x,y)
   #7: #if1(true(),x,y) -> #if2(gt(y,0()),x,y)
   #8: #if1(true(),x,y) -> #gt(y,0())
   #9: #gt(s(_1),_2) ->? #gt❆1_s(_1,_2)
   #10: #minus(s(x),y) -> #if(gt❆1_s(x,y),x,y)
   #11: #minus(s(x),y) -> #gt❆1_s(x,y)
   #12: #gt(0(),_1) ->? #gt❆1_0(_1)
   #13: #gcd(x,y) -> #if1(ge(x,y),x,y)
   #14: #gcd(x,y) -> #ge(x,y)
Number of SCCs: 4, DPs: 9, edges: 10
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
gt❆1_0(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
   gcd(x1,x2)	weight: 0
   if1(x1,x2,x3)	weight: 0
 false()	weight: 0
  #ge(x1,x2)	weight: x2
  true()	weight: 0
 #if1(x1,x2,x3)	weight: 0
   if2(x1,x2,x3)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
    ge(x1,x2)	weight: 0
#gt❆1_0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
#gt❆1_s(x1,x2)	weight: 0
#minus(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
gt❆1_s(x1,x2)	weight: 0
 #if2(x1,x2,x3)	weight: 0
 #gcd(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 3, DPs: 8, edges: 9
	SCC { #3 #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
gt❆1_0(x1)	weight: 0
    gt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
   gcd(x1,x2)	weight: 0
   if1(x1,x2,x3)	weight: 0
 false()	weight: 0
  #ge(x1,x2)	weight: 0
  true()	weight: 0
 #if1(x1,x2,x3)	weight: 0
   if2(x1,x2,x3)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
    ge(x1,x2)	weight: 0
#gt❆1_0(x1)	weight: 0
  #gt(x1,x2)	weight: x1
#gt❆1_s(x1,x2)	weight: (/ 1 4) + x1
#minus(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
gt❆1_s(x1,x2)	weight: 0
 #if2(x1,x2,x3)	weight: 0
 #gcd(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #3 #9
Number of SCCs: 2, DPs: 6, edges: 7
	SCC { #1 #10 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
gt❆1_0(x1)	weight: (/ 1 4)
    gt(x1,x2)	weight: x1 + x2
 minus(x1,x2)	weight: 0
   gcd(x1,x2)	weight: 0
   if1(x1,x2,x3)	weight: 0
 false()	weight: 0
  #ge(x1,x2)	weight: 0
  true()	weight: 0
 #if1(x1,x2,x3)	weight: 0
   if2(x1,x2,x3)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
    ge(x1,x2)	weight: 0
#gt❆1_0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
#gt❆1_s(x1,x2)	weight: (/ 1 4)
#minus(x1,x2)	weight: x1
  #if(x1,x2,x3)	weight: (/ 1 4) + x2
gt❆1_s(x1,x2)	weight: (/ 3 4)
 #if2(x1,x2,x3)	weight: 0
 #gcd(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1 #10
Number of SCCs: 1, DPs: 4, edges: 5
	SCC { #2 #5 #7 #13 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
