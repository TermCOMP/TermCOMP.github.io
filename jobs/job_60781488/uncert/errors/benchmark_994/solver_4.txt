Input TRS:
    1: active(fst(0(),Z)) -> mark(nil())
    2: active(fst(s(X),cons(Y,Z))) -> mark(cons(Y,fst(X,Z)))
    3: active(from(X)) -> mark(cons(X,from(s(X))))
    4: active(add(0(),X)) -> mark(X)
    5: active(add(s(X),Y)) -> mark(s(add(X,Y)))
    6: active(len(nil())) -> mark(0())
    7: active(len(cons(X,Z))) -> mark(s(len(Z)))
    8: mark(fst(X1,X2)) -> active(fst(mark(X1),mark(X2)))
    9: mark(0()) -> active(0())
    10: mark(nil()) -> active(nil())
    11: mark(s(X)) -> active(s(X))
    12: mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
    13: mark(from(X)) -> active(from(mark(X)))
    14: mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
    15: mark(len(X)) -> active(len(mark(X)))
    16: fst(mark(X1),X2) -> fst(X1,X2)
    17: fst(X1,mark(X2)) -> fst(X1,X2)
    18: fst(active(X1),X2) -> fst(X1,X2)
    19: fst(X1,active(X2)) -> fst(X1,X2)
    20: s(mark(X)) -> s(X)
    21: s(active(X)) -> s(X)
    22: cons(mark(X1),X2) -> cons(X1,X2)
    23: cons(X1,mark(X2)) -> cons(X1,X2)
    24: cons(active(X1),X2) -> cons(X1,X2)
    25: cons(X1,active(X2)) -> cons(X1,X2)
    26: from(mark(X)) -> from(X)
    27: from(active(X)) -> from(X)
    28: add(mark(X1),X2) -> add(X1,X2)
    29: add(X1,mark(X2)) -> add(X1,X2)
    30: add(active(X1),X2) -> add(X1,X2)
    31: add(X1,active(X2)) -> add(X1,X2)
    32: len(mark(X)) -> len(X)
    33: len(active(X)) -> len(X)
Number of strict rules: 33
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(fst(s(X),cons(Y,Z))) -> #mark(cons(Y,fst(X,Z)))
   #2: #active(fst(s(X),cons(Y,Z))) -> #cons(Y,fst(X,Z))
   #3: #active(fst(s(X),cons(Y,Z))) -> #fst(X,Z)
   #4: #add(X1,mark(X2)) -> #add(X1,X2)
   #5: #active(len(nil())) -> #mark(0())
   #6: #mark(from(X)) -> #active(from(mark(X)))
   #7: #mark(from(X)) -> #from(mark(X))
   #8: #mark(from(X)) -> #mark(X)
   #9: #mark(0()) -> #active(0())
   #10: #mark(s(X)) -> #active(s(X))
   #11: #cons(active(X1),X2) -> #cons(X1,X2)
   #12: #cons(X1,mark(X2)) -> #cons(X1,X2)
   #13: #mark(cons(X1,X2)) -> #active(cons(mark(X1),X2))
   #14: #mark(cons(X1,X2)) -> #cons(mark(X1),X2)
   #15: #mark(cons(X1,X2)) -> #mark(X1)
   #16: #add(X1,active(X2)) -> #add(X1,X2)
   #17: #mark(add(X1,X2)) -> #active(add(mark(X1),mark(X2)))
   #18: #mark(add(X1,X2)) -> #add(mark(X1),mark(X2))
   #19: #mark(add(X1,X2)) -> #mark(X1)
   #20: #mark(add(X1,X2)) -> #mark(X2)
   #21: #add(active(X1),X2) -> #add(X1,X2)
   #22: #cons(X1,active(X2)) -> #cons(X1,X2)
   #23: #s(mark(X)) -> #s(X)
   #24: #active(len(cons(X,Z))) -> #mark(s(len(Z)))
   #25: #active(len(cons(X,Z))) -> #s(len(Z))
   #26: #active(len(cons(X,Z))) -> #len(Z)
   #27: #mark(nil()) -> #active(nil())
   #28: #len(active(X)) -> #len(X)
   #29: #active(add(s(X),Y)) -> #mark(s(add(X,Y)))
   #30: #active(add(s(X),Y)) -> #s(add(X,Y))
   #31: #active(add(s(X),Y)) -> #add(X,Y)
   #32: #add(mark(X1),X2) -> #add(X1,X2)
   #33: #cons(mark(X1),X2) -> #cons(X1,X2)
   #34: #from(active(X)) -> #from(X)
   #35: #fst(X1,mark(X2)) -> #fst(X1,X2)
   #36: #len(mark(X)) -> #len(X)
   #37: #fst(X1,active(X2)) -> #fst(X1,X2)
   #38: #from(mark(X)) -> #from(X)
   #39: #s(active(X)) -> #s(X)
   #40: #fst(mark(X1),X2) -> #fst(X1,X2)
   #41: #active(from(X)) -> #mark(cons(X,from(s(X))))
   #42: #active(from(X)) -> #cons(X,from(s(X)))
   #43: #active(from(X)) -> #from(s(X))
   #44: #active(from(X)) -> #s(X)
   #45: #active(fst(0(),Z)) -> #mark(nil())
   #46: #mark(fst(X1,X2)) -> #active(fst(mark(X1),mark(X2)))
   #47: #mark(fst(X1,X2)) -> #fst(mark(X1),mark(X2))
   #48: #mark(fst(X1,X2)) -> #mark(X1)
   #49: #mark(fst(X1,X2)) -> #mark(X2)
   #50: #mark(len(X)) -> #active(len(mark(X)))
   #51: #mark(len(X)) -> #len(mark(X))
   #52: #mark(len(X)) -> #mark(X)
   #53: #active(add(0(),X)) -> #mark(X)
   #54: #fst(active(X1),X2) -> #fst(X1,X2)
Number of SCCs: 7, DPs: 31, edges: 145
	SCC { #28 #36 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #len(x1)	weight: x1
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   fst(x1,x2)	weight: 0
 #fst(x1,x2)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   len(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #28 #36
Number of SCCs: 6, DPs: 29, edges: 141
	SCC { #34 #38 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #len(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   fst(x1,x2)	weight: 0
 #fst(x1,x2)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#from(x1)	weight: x1
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   len(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #34 #38
Number of SCCs: 5, DPs: 27, edges: 137
	SCC { #23 #39 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #len(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   fst(x1,x2)	weight: 0
 #fst(x1,x2)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: x1
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   len(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #23 #39
Number of SCCs: 4, DPs: 25, edges: 133
	SCC { #35 #37 #40 #54 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #len(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   fst(x1,x2)	weight: 0
 #fst(x1,x2)	weight: x1
#mark(x1)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   len(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #40 #54
Number of SCCs: 4, DPs: 23, edges: 121
	SCC { #35 #37 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #len(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   fst(x1,x2)	weight: 0
 #fst(x1,x2)	weight: x2
#mark(x1)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   len(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #35 #37
Number of SCCs: 3, DPs: 21, edges: 117
	SCC { #11 #12 #22 #33 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #len(x1)	weight: 0
#cons(x1,x2)	weight: x2
     s(x1)	weight: 0
   fst(x1,x2)	weight: 0
 #fst(x1,x2)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   len(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #12 #22
Number of SCCs: 4, DPs: 19, edges: 105
	SCC { #11 #33 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #len(x1)	weight: 0
#cons(x1,x2)	weight: x1
     s(x1)	weight: 0
   fst(x1,x2)	weight: 0
 #fst(x1,x2)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   len(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #11 #33
Number of SCCs: 3, DPs: 17, edges: 101
	SCC { #4 #16 #21 #32 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #len(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   fst(x1,x2)	weight: 0
 #fst(x1,x2)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: x2
   add(x1,x2)	weight: 0
   len(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #4 #16
Number of SCCs: 4, DPs: 15, edges: 89
	SCC { #21 #32 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #len(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   fst(x1,x2)	weight: 0
 #fst(x1,x2)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: x1
   add(x1,x2)	weight: 0
   len(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #21 #32
Number of SCCs: 3, DPs: 13, edges: 85
	SCC { #1 #6 #8 #15 #17 #19 #20 #41 #46 #48 #49 #52 #53 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #len(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 8)
   fst(x1,x2)	weight: (/ 1 8) + x1 + x2
 #fst(x1,x2)	weight: 0
#mark(x1)	weight: (/ 1 8) + x1
     0()	weight: 0
  from(x1)	weight: (/ 3 8) + x1
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
#from(x1)	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: (/ 1 8) + x1
#active(x1)	weight: x1
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: (/ 1 4) + x1 + x2
   len(x1)	weight: (/ 1 8) + x1
    Usable rules: { 1..33 }
    Removed DPs: #1 #6 #8 #15 #17 #19 #20 #41 #46 #48 #49 #52 #53
Number of SCCs: 3, DPs: 0, edges: 0
