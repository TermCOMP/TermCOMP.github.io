Input TRS:
    1: f(0(),1(),g(x,y),z) -> f(g(x,y),g(x,y),g(x,y),h(x))
    2: g(0(),1()) -> 0()
    3: g(0(),1()) -> 1()
    4: h(g(x,y)) -> h(x)
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #f(0(),1(),g(x,y),z) -> #f(g(x,y),g(x,y),g(x,y),h(x))
   #2: #f(0(),1(),g(x,y),z) -> #h(x)
   #3: #h(g(x,y)) -> #h(x)
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     h(x1)	weight: 0
     1()	weight: 0
     f(x1,x2,x3,x4)	weight: 0
     0()	weight: 0
   #h(x1)	weight: x1
   #f(x1,x2,x3,x4)	weight: 0
   #g(x1,x2)	weight: 0
     g(x1,x2)	weight: (/ 1 2) + x1
    Usable rules: { }
    Removed DPs: #3
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #f(0(),1(),g(0(),1()),z)	-#1->
  #f(g(0(),1()),g(0(),1()),g(0(),1()),h(0()))	--->*
  #f(0(),1(),g(0(),1()),h(0()))
  Looping with: [ z := h(0()); ]
