Input TRS:
    1: from(X) -> cons(X,n__from(s(X)))
    2: 2ndspos(0(),Z) -> rnil()
    3: 2ndspos(s(N),cons(X,n__cons(Y,Z))) -> rcons(posrecip(activate(Y)),2ndsneg(N,activate(Z)))
    4: 2ndsneg(0(),Z) -> rnil()
    5: 2ndsneg(s(N),cons(X,n__cons(Y,Z))) -> rcons(negrecip(activate(Y)),2ndspos(N,activate(Z)))
    6: pi(X) -> 2ndspos(X,from(0()))
    7: plus(0(),Y) -> Y
    8: plus(s(X),Y) -> s(plus(X,Y))
    9: times(0(),Y) -> 0()
    10: times(s(X),Y) -> plus(Y,times(X,Y))
    11: square(X) -> times(X,X)
    12: from(X) -> n__from(X)
    13: cons(X1,X2) -> n__cons(X1,X2)
    14: activate(n__from(X)) -> from(X)
    15: activate(n__cons(X1,X2)) -> cons(X1,X2)
    16: activate(X) -> X
Number of strict rules: 16
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #pi(X) -> #2ndspos(X,from(0()))
   #2: #pi(X) -> #from(0())
   #3: #square(X) -> #times(X,X)
   #4: #activate(n__from(X)) -> #from(X)
   #5: #times(s(X),Y) -> #plus(Y,times(X,Y))
   #6: #times(s(X),Y) -> #times(X,Y)
   #7: #2ndsneg(s(N),cons(X,n__cons(Y,Z))) -> #activate(Y)
   #8: #2ndsneg(s(N),cons(X,n__cons(Y,Z))) -> #2ndspos(N,activate(Z))
   #9: #2ndsneg(s(N),cons(X,n__cons(Y,Z))) -> #activate(Z)
   #10: #2ndspos(s(N),cons(X,n__cons(Y,Z))) -> #activate(Y)
   #11: #2ndspos(s(N),cons(X,n__cons(Y,Z))) -> #2ndsneg(N,activate(Z))
   #12: #2ndspos(s(N),cons(X,n__cons(Y,Z))) -> #activate(Z)
   #13: #from(X) -> #cons(X,n__from(s(X)))
   #14: #plus(s(X),Y) -> #plus(X,Y)
   #15: #activate(n__cons(X1,X2)) -> #cons(X1,X2)
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #14 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
negrecip(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
2ndspos(x1,x2)	weight: 0
activate(x1)	weight: 0
  rnil()	weight: 0
#plus(x1,x2)	weight: x1
n__from(x1)	weight: 0
square(x1)	weight: 0
#activate(x1)	weight: 0
#square(x1)	weight: 0
    pi(x1)	weight: 0
 rcons(x1,x2)	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
 times(x1,x2)	weight: 0
n__cons(x1,x2)	weight: 0
2ndsneg(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#2ndspos(x1,x2)	weight: 0
#from(x1)	weight: 0
  cons(x1,x2)	weight: 0
  #pi(x1)	weight: 0
#2ndsneg(x1,x2)	weight: 0
posrecip(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #14
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
negrecip(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
2ndspos(x1,x2)	weight: 0
activate(x1)	weight: 0
  rnil()	weight: 0
#plus(x1,x2)	weight: 0
n__from(x1)	weight: 0
square(x1)	weight: 0
#activate(x1)	weight: 0
#square(x1)	weight: 0
    pi(x1)	weight: 0
 rcons(x1,x2)	weight: 0
#times(x1,x2)	weight: x1
     0()	weight: 0
  from(x1)	weight: 0
 times(x1,x2)	weight: 0
n__cons(x1,x2)	weight: 0
2ndsneg(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#2ndspos(x1,x2)	weight: 0
#from(x1)	weight: 0
  cons(x1,x2)	weight: 0
  #pi(x1)	weight: 0
#2ndsneg(x1,x2)	weight: 0
posrecip(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #8 #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
negrecip(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4)
2ndspos(x1,x2)	weight: 0
activate(x1)	weight: (/ 1 4) + x1
  rnil()	weight: 0
#plus(x1,x2)	weight: 0
n__from(x1)	weight: (/ 1 4)
square(x1)	weight: 0
#activate(x1)	weight: 0
#square(x1)	weight: 0
    pi(x1)	weight: 0
 rcons(x1,x2)	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
  from(x1)	weight: (/ 1 2)
 times(x1,x2)	weight: 0
n__cons(x1,x2)	weight: (/ 1 4) + x2
2ndsneg(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
#2ndspos(x1,x2)	weight: x2
#from(x1)	weight: 0
  cons(x1,x2)	weight: (/ 1 4) + x2
  #pi(x1)	weight: 0
#2ndsneg(x1,x2)	weight: x2
posrecip(x1)	weight: 0
    Usable rules: { 1 12..16 }
    Removed DPs: #8 #11
Number of SCCs: 0, DPs: 0, edges: 0
