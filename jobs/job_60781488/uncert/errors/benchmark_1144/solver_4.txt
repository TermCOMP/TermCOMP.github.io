Input TRS:
    1: a__incr(nil()) -> nil()
    2: a__incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
    3: a__adx(nil()) -> nil()
    4: a__adx(cons(X,L)) -> a__incr(cons(mark(X),adx(L)))
    5: a__nats() -> a__adx(a__zeros())
    6: a__zeros() -> cons(0(),zeros())
    7: a__head(cons(X,L)) -> mark(X)
    8: a__tail(cons(X,L)) -> mark(L)
    9: mark(incr(X)) -> a__incr(mark(X))
    10: mark(adx(X)) -> a__adx(mark(X))
    11: mark(nats()) -> a__nats()
    12: mark(zeros()) -> a__zeros()
    13: mark(head(X)) -> a__head(mark(X))
    14: mark(tail(X)) -> a__tail(mark(X))
    15: mark(nil()) -> nil()
    16: mark(cons(X1,X2)) -> cons(mark(X1),X2)
    17: mark(s(X)) -> s(mark(X))
    18: mark(0()) -> 0()
    19: a__incr(X) -> incr(X)
    20: a__adx(X) -> adx(X)
    21: a__nats() -> nats()
    22: a__zeros() -> zeros()
    23: a__head(X) -> head(X)
    24: a__tail(X) -> tail(X)
Number of strict rules: 24
Direct Order(PosReal,>,Poly) ... removes: 8 7
  incr(x1)	weight: x1
     s(x1)	weight: x1
a__incr(x1)	weight: x1
a__nats()	weight: 0
   adx(x1)	weight: x1
 zeros()	weight: 0
  tail(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
a__adx(x1)	weight: x1
  nats()	weight: 0
  head(x1)	weight: (/ 1 4) + x1
  cons(x1,x2)	weight: x1 + x2
a__tail(x1)	weight: (/ 1 4) + x1
a__zeros()	weight: 0
a__head(x1)	weight: (/ 1 4) + x1
Number of strict rules: 22
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #a__incr(cons(X,L)) -> #mark(X)
   #2: #mark(head(X)) -> #a__head(mark(X))
   #3: #mark(head(X)) -> #mark(X)
   #4: #mark(incr(X)) -> #a__incr(mark(X))
   #5: #mark(incr(X)) -> #mark(X)
   #6: #mark(nats()) -> #a__nats()
   #7: #mark(zeros()) -> #a__zeros()
   #8: #mark(tail(X)) -> #a__tail(mark(X))
   #9: #mark(tail(X)) -> #mark(X)
   #10: #mark(adx(X)) -> #a__adx(mark(X))
   #11: #mark(adx(X)) -> #mark(X)
   #12: #a__nats() -> #a__adx(a__zeros())
   #13: #a__nats() -> #a__zeros()
   #14: #mark(s(X)) -> #mark(X)
   #15: #mark(cons(X1,X2)) -> #mark(X1)
   #16: #a__adx(cons(X,L)) -> #a__incr(cons(mark(X),adx(L)))
   #17: #a__adx(cons(X,L)) -> #mark(X)
Number of SCCs: 1, DPs: 13, edges: 79
	SCC { #1 #3..6 #9..12 #14..17 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  incr(x1)	weight: x1
     s(x1)	weight: x1
#a__head(x1)	weight: 0
a__incr(x1)	weight: x1
a__nats()	weight: 0
   adx(x1)	weight: x1
 zeros()	weight: 0
#a__adx(x1)	weight: x1
  tail(x1)	weight: (/ 1 2) + x1
#mark(x1)	weight: x1
     0()	weight: 0
#a__zeros()	weight: 0
   nil()	weight: 0
#a__nats()	weight: 0
  mark(x1)	weight: x1
a__adx(x1)	weight: x1
  nats()	weight: 0
#a__incr(x1)	weight: x1
  head(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: x1
a__tail(x1)	weight: (/ 1 2) + x1
#a__tail(x1)	weight: 0
a__zeros()	weight: 0
a__head(x1)	weight: (/ 1 2) + x1
    Usable rules: { 1..6 9..24 }
    Removed DPs: #3 #9
Number of SCCs: 1, DPs: 11, edges: 49
	SCC { #1 #4..6 #10..12 #14..17 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
  incr(x1)	weight: x1
     s(x1)	weight: x1
#a__head(x1)	weight: 0
a__incr(x1)	weight: x1
a__nats()	weight: (/ 3 8)
   adx(x1)	weight: (/ 1 16) + x1
 zeros()	weight: (/ 5 16)
#a__adx(x1)	weight: (/ 1 8) + x1
  tail(x1)	weight: (/ 1 16)
#mark(x1)	weight: (/ 3 16) + x1
     0()	weight: (/ 1 16)
#a__zeros()	weight: 0
   nil()	weight: (/ 1 16)
#a__nats()	weight: (/ 1 2)
  mark(x1)	weight: x1
a__adx(x1)	weight: (/ 1 16) + x1
  nats()	weight: (/ 3 8)
#a__incr(x1)	weight: x1
  head(x1)	weight: (/ 1 16)
  cons(x1,x2)	weight: max{x2, (/ 1 4) + x1}
a__tail(x1)	weight: (/ 1 16)
#a__tail(x1)	weight: 0
a__zeros()	weight: (/ 5 16)
a__head(x1)	weight: (/ 1 16)
    Usable rules: { 1..6 9..24 }
    Removed DPs: #1 #4 #6 #10..12 #15..17
Number of SCCs: 1, DPs: 2, edges: 4
	SCC { #5 #14 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  incr(x1)	weight: (/ 3 4) + x1
     s(x1)	weight: (/ 1 4) + x1
#a__head(x1)	weight: 0
a__incr(x1)	weight: (/ 1 2)
a__nats()	weight: 0
   adx(x1)	weight: (/ 1 2) + x1
 zeros()	weight: 0
#a__adx(x1)	weight: 0
  tail(x1)	weight: (/ 1 4)
#mark(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
#a__zeros()	weight: 0
   nil()	weight: 0
#a__nats()	weight: 0
  mark(x1)	weight: (/ 1 4) + x1
a__adx(x1)	weight: (/ 1 4)
  nats()	weight: 0
#a__incr(x1)	weight: (/ 1 4)
  head(x1)	weight: (/ 1 4) + x1
  cons(x1,x2)	weight: (/ 3 4)
a__tail(x1)	weight: (/ 1 2) + x1
#a__tail(x1)	weight: 0
a__zeros()	weight: 0
a__head(x1)	weight: (/ 3 4)
    Usable rules: { }
    Removed DPs: #5 #14
Number of SCCs: 0, DPs: 0, edges: 0
