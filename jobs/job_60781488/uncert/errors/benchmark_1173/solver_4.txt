Input TRS:
    1: terms(N) -> cons(recip(sqr(N)),n__terms(n__s(N)))
    2: sqr(0()) -> 0()
    3: sqr(s(X)) -> s(add(sqr(X),dbl(X)))
    4: dbl(0()) -> 0()
    5: dbl(s(X)) -> s(s(dbl(X)))
    6: add(0(),X) -> X
    7: add(s(X),Y) -> s(add(X,Y))
    8: first(0(),X) -> nil()
    9: first(s(X),cons(Y,Z)) -> cons(Y,n__first(X,activate(Z)))
    10: half(0()) -> 0()
    11: half(s(0())) -> 0()
    12: half(s(s(X))) -> s(half(X))
    13: half(dbl(X)) -> X
    14: terms(X) -> n__terms(X)
    15: s(X) -> n__s(X)
    16: first(X1,X2) -> n__first(X1,X2)
    17: activate(n__terms(X)) -> terms(activate(X))
    18: activate(n__s(X)) -> s(activate(X))
    19: activate(n__first(X1,X2)) -> first(activate(X1),activate(X2))
    20: activate(X) -> X
Number of strict rules: 20
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #first(s(X),cons(Y,Z)) -> #activate(Z)
   #2: #half(s(s(X))) -> #s(half(X))
   #3: #half(s(s(X))) -> #half(X)
   #4: #add(s(X),Y) -> #s(add(X,Y))
   #5: #add(s(X),Y) -> #add(X,Y)
   #6: #dbl(s(X)) -> #s(s(dbl(X)))
   #7: #dbl(s(X)) -> #s(dbl(X))
   #8: #dbl(s(X)) -> #dbl(X)
   #9: #activate(n__terms(X)) -> #terms(activate(X))
   #10: #activate(n__terms(X)) -> #activate(X)
   #11: #activate(n__first(X1,X2)) -> #first(activate(X1),activate(X2))
   #12: #activate(n__first(X1,X2)) -> #activate(X1)
   #13: #activate(n__first(X1,X2)) -> #activate(X2)
   #14: #sqr(s(X)) -> #s(add(sqr(X),dbl(X)))
   #15: #sqr(s(X)) -> #add(sqr(X),dbl(X))
   #16: #sqr(s(X)) -> #sqr(X)
   #17: #sqr(s(X)) -> #dbl(X)
   #18: #terms(N) -> #sqr(N)
   #19: #activate(n__s(X)) -> #s(activate(X))
   #20: #activate(n__s(X)) -> #activate(X)
Number of SCCs: 5, DPs: 10, edges: 30
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
n__first(x1,x2)	weight: 0
 recip(x1)	weight: 0
activate(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: x1
#terms(x1)	weight: 0
#activate(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
  n__s(x1)	weight: 0
 #sqr(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
 first(x1,x2)	weight: 0
n__terms(x1)	weight: 0
  cons(x1,x2)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 4, DPs: 9, edges: 29
	SCC { #16 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
n__first(x1,x2)	weight: 0
 recip(x1)	weight: 0
activate(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#activate(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
  n__s(x1)	weight: 0
 #sqr(x1)	weight: x1
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
 first(x1,x2)	weight: 0
n__terms(x1)	weight: 0
  cons(x1,x2)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #16
Number of SCCs: 3, DPs: 8, edges: 28
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 4) + x1
n__first(x1,x2)	weight: 0
 recip(x1)	weight: 0
activate(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#activate(x1)	weight: 0
#half(x1)	weight: x1
  half(x1)	weight: 0
  n__s(x1)	weight: 0
 #sqr(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
 first(x1,x2)	weight: 0
n__terms(x1)	weight: 0
  cons(x1,x2)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #3
Number of SCCs: 2, DPs: 7, edges: 27
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
n__first(x1,x2)	weight: 0
 recip(x1)	weight: 0
activate(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#activate(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
  n__s(x1)	weight: 0
 #sqr(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
 first(x1,x2)	weight: 0
n__terms(x1)	weight: 0
  cons(x1,x2)	weight: 0
 #add(x1,x2)	weight: x1
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #5
Number of SCCs: 1, DPs: 6, edges: 26
	SCC { #1 #10..13 #20 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: x1
n__first(x1,x2)	weight: (/ 1 2) + x1 + x2
 recip(x1)	weight: (/ 1 4)
activate(x1)	weight: x1
   dbl(x1)	weight: (/ 1 4)
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#activate(x1)	weight: x1
#half(x1)	weight: 0
  half(x1)	weight: 0
  n__s(x1)	weight: x1
 #sqr(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: (/ 1 4) + x2
   nil()	weight: 0
 first(x1,x2)	weight: (/ 1 2) + x1 + x2
n__terms(x1)	weight: (/ 1 4) + x1
  cons(x1,x2)	weight: x2
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: (/ 1 2)
   sqr(x1)	weight: (/ 1 4) + x1
 terms(x1)	weight: (/ 1 4) + x1
    Usable rules: { 1 8 9 14..20 }
    Removed DPs: #1 #10..13
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #20 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 4) + x1
n__first(x1,x2)	weight: (/ 1 2) + x1 + x2
 recip(x1)	weight: (/ 1 4)
activate(x1)	weight: x1
   dbl(x1)	weight: (/ 1 4)
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#activate(x1)	weight: x1
#half(x1)	weight: 0
  half(x1)	weight: 0
  n__s(x1)	weight: (/ 1 4) + x1
 #sqr(x1)	weight: 0
     0()	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: (/ 1 4) + x2
   nil()	weight: 0
 first(x1,x2)	weight: (/ 1 2) + x1 + x2
n__terms(x1)	weight: (/ 1 4)
  cons(x1,x2)	weight: x2
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: (/ 1 4) + x1
   sqr(x1)	weight: (/ 1 4)
 terms(x1)	weight: (/ 1 4)
    Usable rules: { }
    Removed DPs: #20
Number of SCCs: 0, DPs: 0, edges: 0
