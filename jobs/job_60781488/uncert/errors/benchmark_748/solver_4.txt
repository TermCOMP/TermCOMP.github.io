Input TRS:
    1: int(0(),0()) -> .(0(),nil())
    2: int(0(),s(y)) -> .(0(),int(s(0()),s(y)))
    3: int(s(x),0()) -> nil()
    4: int(s(x),s(y)) -> int_list(int(x,y))
    5: int_list(nil()) -> nil()
    6: int_list(.(x,y)) -> .(s(x),int_list(y))
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... removes: 1 3
     s(x1)	weight: x1
     0()	weight: 0
int_list(x1)	weight: x1
   nil()	weight: 0
   int(x1,x2)	weight: (/ 1 4) + x1 + 2 * x2
     .(x1,x2)	weight: 2 * x1 + x2
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... failed.
Freezing int
2: int❆1_0(s(y)) -> .(0(),int❆1_s(0(),s(y)))
4: int❆1_s(x,s(y)) -> int_list(int(x,y))
5: int_list(nil()) -> nil()
6: int_list(.(x,y)) -> .(s(x),int_list(y))
7: int(0(),_1) ->= int❆1_0(_1)
8: int(s(_1),_2) ->= int❆1_s(_1,_2)
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... removes: 8
     s(x1)	weight: 19265 + 2 * x1
int❆1_0(x1)	weight: 19265 + 2 * x1
int❆1_s(x1,x2)	weight: 2 * x1 + 2 * x2
     0()	weight: 0
int_list(x1)	weight: 2 * x1
   nil()	weight: 0
   int(x1,x2)	weight: 19265 + x1 + 2 * x2
     .(x1,x2)	weight: 19265 + x1 + x2
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #int❆1_0(s(y)) -> #int❆1_s(0(),s(y))
   #2: #int_list(.(x,y)) -> #int_list(y)
   #3: #int(0(),_1) ->? #int❆1_0(_1)
   #4: #int❆1_s(x,s(y)) -> #int_list(int(x,y))
   #5: #int❆1_s(x,s(y)) -> #int(x,y)
Number of SCCs: 2, DPs: 4, edges: 4
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: 0
int❆1_0(x1)	weight: 0
int❆1_s(x1,x2)	weight: 0
#int_list(x1)	weight: x1
#int❆1_0(x1)	weight: 0
#int❆1_s(x1,x2)	weight: 0
     0()	weight: 0
int_list(x1)	weight: 0
   nil()	weight: 0
   int(x1,x2)	weight: 0
     .(x1,x2)	weight: (/ 1 2) + x2
 #int(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2
Number of SCCs: 1, DPs: 3, edges: 3
	SCC { #1 #3 #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 3 4) + x1
int❆1_0(x1)	weight: 0
int❆1_s(x1,x2)	weight: 0
#int_list(x1)	weight: 0
#int❆1_0(x1)	weight: (/ 1 4) + x1
#int❆1_s(x1,x2)	weight: x2
     0()	weight: 0
int_list(x1)	weight: 0
   nil()	weight: 0
   int(x1,x2)	weight: 0
     .(x1,x2)	weight: (/ 1 4)
 #int(x1,x2)	weight: (/ 1 2) + x2
    Usable rules: { }
    Removed DPs: #1 #3 #5
Number of SCCs: 0, DPs: 0, edges: 0
