Input TRS:
    1: c() -> f(n__g(n__c()))
    2: f(n__g(X)) -> g(activate(X))
    3: g(X) -> n__g(X)
    4: c() -> n__c()
    5: activate(n__g(X)) -> g(X)
    6: activate(n__c()) -> c()
    7: activate(X) -> X
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Freezing f
1: c() -> f❆1_n__g(n__c())
2: f❆1_n__g(X) -> g(activate(X))
3: g(X) -> n__g(X)
4: c() -> n__c()
5: activate(n__g(X)) -> g(X)
6: activate(n__c()) -> c()
7: activate(X) -> X
8: f(n__g(_1)) ->= f❆1_n__g(_1)
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... removes: 8
f❆1_n__g(x1)	weight: 2 * x1
activate(x1)	weight: x1
  n__c()	weight: 0
     c()	weight: 0
     f(x1)	weight: (/ 1 2) + 2 * x1
  n__g(x1)	weight: x1
     g(x1)	weight: x1
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #f❆1_n__g(X) -> #g(activate(X))
   #2: #f❆1_n__g(X) -> #activate(X)
   #3: #activate(n__c()) -> #c()
   #4: #activate(n__g(X)) -> #g(X)
   #5: #c() -> #f❆1_n__g(n__c())
Number of SCCs: 1, DPs: 3, edges: 3
	SCC { #2 #3 #5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #activate(n__c())	-#3->
  #c()	--->*
  #c()	-#5->
  #f❆1_n__g(n__c())	--->*
  #f❆1_n__g(n__c())	-#2->
  #activate(n__c())	--->*
  #activate(n__c())
  Looping with: [ ]
