Input TRS:
    1: while(true(),s(s(s(s(s(i)))))) -> while(gt(s(s(s(s(s(i))))),0()),f(s(s(s(s(s(i)))))))
    2: f(i) -> if(eq(mod2(i),0()),i)
    3: gt(s(x),s(y)) -> gt(x,y)
    4: gt(s(x),0()) -> true()
    5: gt(0(),y) -> false()
    6: if(true(),i) -> plus(i,s(0()))
    7: if(false(),i) -> plus(i,s(s(s(0()))))
    8: mod2(s(s(x))) -> mod2(x)
    9: mod2(s(0())) -> s(0())
    10: mod2(0()) -> 0()
    11: eq(s(x),s(y)) -> eq(x,y)
    12: eq(0(),0()) -> true()
    13: eq(0(),s(y)) -> false()
    14: eq(s(x),0()) -> false()
    15: plus(s(x),y) -> plus(x,s(y))
    16: plus(0(),y) -> y
Number of strict rules: 16
Direct Order(PosReal,>,Poly) ... failed.
Freezing gt
1: while(true(),s(s(s(s(s(i)))))) -> while(gt❆1_s(s(s(s(s(i)))),0()),f(s(s(s(s(s(i)))))))
2: f(i) -> if(eq(mod2(i),0()),i)
3: gt❆1_s(x,s(y)) -> gt(x,y)
4: gt❆1_s(x,0()) -> true()
5: gt❆1_0(y) -> false()
6: if(true(),i) -> plus(i,s(0()))
7: if(false(),i) -> plus(i,s(s(s(0()))))
8: mod2(s(s(x))) -> mod2(x)
9: mod2(s(0())) -> s(0())
10: mod2(0()) -> 0()
11: eq(s(x),s(y)) -> eq(x,y)
12: eq(0(),0()) -> true()
13: eq(0(),s(y)) -> false()
14: eq(s(x),0()) -> false()
15: plus(s(x),y) -> plus(x,s(y))
16: plus(0(),y) -> y
17: gt(0(),_1) ->= gt❆1_0(_1)
18: gt(s(_1),_2) ->= gt❆1_s(_1,_2)
Number of strict rules: 16
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #f(i) -> #if(eq(mod2(i),0()),i)
   #2: #f(i) -> #eq(mod2(i),0())
   #3: #f(i) -> #mod2(i)
   #4: #if(true(),i) -> #plus(i,s(0()))
   #5: #eq(s(x),s(y)) -> #eq(x,y)
   #6: #if(false(),i) -> #plus(i,s(s(s(0()))))
   #7: #gt(0(),_1) ->? #gt❆1_0(_1)
   #8: #gt❆1_s(x,s(y)) -> #gt(x,y)
   #9: #while(true(),s(s(s(s(s(i)))))) -> #while(gt❆1_s(s(s(s(s(i)))),0()),f(s(s(s(s(s(i)))))))
   #10: #while(true(),s(s(s(s(s(i)))))) -> #gt❆1_s(s(s(s(s(i)))),0())
   #11: #while(true(),s(s(s(s(s(i)))))) -> #f(s(s(s(s(s(i))))))
   #12: #mod2(s(s(x))) -> #mod2(x)
   #13: #plus(s(x),y) -> #plus(x,s(y))
   #14: #gt(s(_1),_2) ->? #gt❆1_s(_1,_2)
Number of SCCs: 5, DPs: 6, edges: 6
	SCC { #12 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#mod2(x1)	weight: x1
     s(x1)	weight: (/ 1 4) + x1
gt❆1_0(x1)	weight: 0
    gt(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
#while(x1,x2)	weight: 0
  true()	weight: 0
     f(x1)	weight: 0
  #eq(x1,x2)	weight: 0
     0()	weight: 0
    if(x1,x2)	weight: 0
 while(x1,x2)	weight: 0
#gt❆1_0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   #f(x1)	weight: 0
#gt❆1_s(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2)	weight: 0
  mod2(x1)	weight: 0
gt❆1_s(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #12
Number of SCCs: 4, DPs: 5, edges: 5
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#mod2(x1)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
gt❆1_0(x1)	weight: 0
    gt(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
#while(x1,x2)	weight: 0
  true()	weight: 0
     f(x1)	weight: 0
  #eq(x1,x2)	weight: x2
     0()	weight: 0
    if(x1,x2)	weight: 0
 while(x1,x2)	weight: 0
#gt❆1_0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   #f(x1)	weight: 0
#gt❆1_s(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2)	weight: 0
  mod2(x1)	weight: 0
gt❆1_s(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #13 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#mod2(x1)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
gt❆1_0(x1)	weight: 0
    gt(x1,x2)	weight: 0
#plus(x1,x2)	weight: x1
    eq(x1,x2)	weight: 0
 false()	weight: 0
#while(x1,x2)	weight: 0
  true()	weight: 0
     f(x1)	weight: 0
  #eq(x1,x2)	weight: 0
     0()	weight: 0
    if(x1,x2)	weight: 0
 while(x1,x2)	weight: 0
#gt❆1_0(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   #f(x1)	weight: 0
#gt❆1_s(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2)	weight: 0
  mod2(x1)	weight: 0
gt❆1_s(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #13
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #8 #14 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#mod2(x1)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
gt❆1_0(x1)	weight: 0
    gt(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
#while(x1,x2)	weight: 0
  true()	weight: 0
     f(x1)	weight: 0
  #eq(x1,x2)	weight: 0
     0()	weight: 0
    if(x1,x2)	weight: 0
 while(x1,x2)	weight: 0
#gt❆1_0(x1)	weight: 0
  #gt(x1,x2)	weight: (/ 1 4) + x2
   #f(x1)	weight: 0
#gt❆1_s(x1,x2)	weight: x2
  plus(x1,x2)	weight: 0
  #if(x1,x2)	weight: 0
  mod2(x1)	weight: 0
gt❆1_s(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8 #14
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #9 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
