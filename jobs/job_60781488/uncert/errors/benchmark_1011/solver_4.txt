Input TRS:
    1: a__app(nil(),YS) -> mark(YS)
    2: a__app(cons(X,XS),YS) -> cons(mark(X),app(XS,YS))
    3: a__from(X) -> cons(mark(X),from(s(X)))
    4: a__zWadr(nil(),YS) -> nil()
    5: a__zWadr(XS,nil()) -> nil()
    6: a__zWadr(cons(X,XS),cons(Y,YS)) -> cons(a__app(mark(Y),cons(mark(X),nil())),zWadr(XS,YS))
    7: a__prefix(L) -> cons(nil(),zWadr(L,prefix(L)))
    8: mark(app(X1,X2)) -> a__app(mark(X1),mark(X2))
    9: mark(from(X)) -> a__from(mark(X))
    10: mark(zWadr(X1,X2)) -> a__zWadr(mark(X1),mark(X2))
    11: mark(prefix(X)) -> a__prefix(mark(X))
    12: mark(nil()) -> nil()
    13: mark(cons(X1,X2)) -> cons(mark(X1),X2)
    14: mark(s(X)) -> s(mark(X))
    15: a__app(X1,X2) -> app(X1,X2)
    16: a__from(X) -> from(X)
    17: a__zWadr(X1,X2) -> zWadr(X1,X2)
    18: a__prefix(X) -> prefix(X)
Number of strict rules: 18
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #a__app(cons(X,XS),YS) -> #mark(X)
   #2: #a__zWadr(cons(X,XS),cons(Y,YS)) -> #a__app(mark(Y),cons(mark(X),nil()))
   #3: #a__zWadr(cons(X,XS),cons(Y,YS)) -> #mark(Y)
   #4: #a__zWadr(cons(X,XS),cons(Y,YS)) -> #mark(X)
   #5: #mark(cons(X1,X2)) -> #mark(X1)
   #6: #mark(from(X)) -> #a__from(mark(X))
   #7: #mark(from(X)) -> #mark(X)
   #8: #mark(prefix(X)) -> #a__prefix(mark(X))
   #9: #mark(prefix(X)) -> #mark(X)
   #10: #mark(s(X)) -> #mark(X)
   #11: #mark(zWadr(X1,X2)) -> #a__zWadr(mark(X1),mark(X2))
   #12: #mark(zWadr(X1,X2)) -> #mark(X1)
   #13: #mark(zWadr(X1,X2)) -> #mark(X2)
   #14: #a__from(X) -> #mark(X)
   #15: #a__app(nil(),YS) -> #mark(YS)
   #16: #mark(app(X1,X2)) -> #a__app(mark(X1),mark(X2))
   #17: #mark(app(X1,X2)) -> #mark(X1)
   #18: #mark(app(X1,X2)) -> #mark(X2)
Number of SCCs: 1, DPs: 17, edges: 151
	SCC { #1..7 #9..18 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#a__zWadr(x1,x2)	weight: (/ 1 4) + x1 + x2
     s(x1)	weight: (/ 1 4) + x1
#a__from(x1)	weight: (/ 1 4) + x1
a__prefix(x1)	weight: (/ 1 4) + x1
a__from(x1)	weight: (/ 1 2) + x1
prefix(x1)	weight: (/ 1 4) + x1
#a__app(x1,x2)	weight: (/ 1 4) + x1 + x2
a__app(x1,x2)	weight: (/ 1 2) + x1 + x2
 zWadr(x1,x2)	weight: (/ 1 2) + x1 + x2
a__zWadr(x1,x2)	weight: (/ 1 2) + x1 + x2
#a__prefix(x1)	weight: 0
#mark(x1)	weight: x1
  from(x1)	weight: (/ 1 2) + x1
   nil()	weight: 0
  mark(x1)	weight: x1
  cons(x1,x2)	weight: (/ 1 4) + x1
   app(x1,x2)	weight: (/ 1 2) + x1 + x2
    Usable rules: { 1..18 }
    Removed DPs: #1..7 #9..18
Number of SCCs: 0, DPs: 0, edges: 0
