Input TRS:
    1: active(zeros()) -> mark(cons(0(),zeros()))
    2: active(U11(tt(),V1)) -> mark(U12(isNatList(V1)))
    3: active(U12(tt())) -> mark(tt())
    4: active(U21(tt(),V1)) -> mark(U22(isNat(V1)))
    5: active(U22(tt())) -> mark(tt())
    6: active(U31(tt(),V)) -> mark(U32(isNatList(V)))
    7: active(U32(tt())) -> mark(tt())
    8: active(U41(tt(),V1,V2)) -> mark(U42(isNat(V1),V2))
    9: active(U42(tt(),V2)) -> mark(U43(isNatIList(V2)))
    10: active(U43(tt())) -> mark(tt())
    11: active(U51(tt(),V1,V2)) -> mark(U52(isNat(V1),V2))
    12: active(U52(tt(),V2)) -> mark(U53(isNatList(V2)))
    13: active(U53(tt())) -> mark(tt())
    14: active(U61(tt(),V1,V2)) -> mark(U62(isNat(V1),V2))
    15: active(U62(tt(),V2)) -> mark(U63(isNatIList(V2)))
    16: active(U63(tt())) -> mark(tt())
    17: active(U71(tt(),L)) -> mark(s(length(L)))
    18: active(U81(tt())) -> mark(nil())
    19: active(U91(tt(),IL,M,N)) -> mark(cons(N,take(M,IL)))
    20: active(and(tt(),X)) -> mark(X)
    21: active(isNat(0())) -> mark(tt())
    22: active(isNat(length(V1))) -> mark(U11(isNatIListKind(V1),V1))
    23: active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1))
    24: active(isNatIList(V)) -> mark(U31(isNatIListKind(V),V))
    25: active(isNatIList(zeros())) -> mark(tt())
    26: active(isNatIList(cons(V1,V2))) -> mark(U41(and(isNatKind(V1),isNatIListKind(V2)),V1,V2))
    27: active(isNatIListKind(nil())) -> mark(tt())
    28: active(isNatIListKind(zeros())) -> mark(tt())
    29: active(isNatIListKind(cons(V1,V2))) -> mark(and(isNatKind(V1),isNatIListKind(V2)))
    30: active(isNatIListKind(take(V1,V2))) -> mark(and(isNatKind(V1),isNatIListKind(V2)))
    31: active(isNatKind(0())) -> mark(tt())
    32: active(isNatKind(length(V1))) -> mark(isNatIListKind(V1))
    33: active(isNatKind(s(V1))) -> mark(isNatKind(V1))
    34: active(isNatList(nil())) -> mark(tt())
    35: active(isNatList(cons(V1,V2))) -> mark(U51(and(isNatKind(V1),isNatIListKind(V2)),V1,V2))
    36: active(isNatList(take(V1,V2))) -> mark(U61(and(isNatKind(V1),isNatIListKind(V2)),V1,V2))
    37: active(length(nil())) -> mark(0())
    38: active(length(cons(N,L))) -> mark(U71(and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L))
    39: active(take(0(),IL)) -> mark(U81(and(isNatIList(IL),isNatIListKind(IL))))
    40: active(take(s(M),cons(N,IL))) -> mark(U91(and(and(isNatIList(IL),isNatIListKind(IL)),and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))),IL,M,N))
    41: active(cons(X1,X2)) -> cons(active(X1),X2)
    42: active(U11(X1,X2)) -> U11(active(X1),X2)
    43: active(U12(X)) -> U12(active(X))
    44: active(U21(X1,X2)) -> U21(active(X1),X2)
    45: active(U22(X)) -> U22(active(X))
    46: active(U31(X1,X2)) -> U31(active(X1),X2)
    47: active(U32(X)) -> U32(active(X))
    48: active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3)
    49: active(U42(X1,X2)) -> U42(active(X1),X2)
    50: active(U43(X)) -> U43(active(X))
    51: active(U51(X1,X2,X3)) -> U51(active(X1),X2,X3)
    52: active(U52(X1,X2)) -> U52(active(X1),X2)
    53: active(U53(X)) -> U53(active(X))
    54: active(U61(X1,X2,X3)) -> U61(active(X1),X2,X3)
    55: active(U62(X1,X2)) -> U62(active(X1),X2)
    56: active(U63(X)) -> U63(active(X))
    57: active(U71(X1,X2)) -> U71(active(X1),X2)
    58: active(s(X)) -> s(active(X))
    59: active(length(X)) -> length(active(X))
    60: active(U81(X)) -> U81(active(X))
    61: active(U91(X1,X2,X3,X4)) -> U91(active(X1),X2,X3,X4)
    62: active(take(X1,X2)) -> take(active(X1),X2)
    63: active(take(X1,X2)) -> take(X1,active(X2))
    64: active(and(X1,X2)) -> and(active(X1),X2)
    65: cons(mark(X1),X2) -> mark(cons(X1,X2))
    66: U11(mark(X1),X2) -> mark(U11(X1,X2))
    67: U12(mark(X)) -> mark(U12(X))
    68: U21(mark(X1),X2) -> mark(U21(X1,X2))
    69: U22(mark(X)) -> mark(U22(X))
    70: U31(mark(X1),X2) -> mark(U31(X1,X2))
    71: U32(mark(X)) -> mark(U32(X))
    72: U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3))
    73: U42(mark(X1),X2) -> mark(U42(X1,X2))
    74: U43(mark(X)) -> mark(U43(X))
    75: U51(mark(X1),X2,X3) -> mark(U51(X1,X2,X3))
    76: U52(mark(X1),X2) -> mark(U52(X1,X2))
    77: U53(mark(X)) -> mark(U53(X))
    78: U61(mark(X1),X2,X3) -> mark(U61(X1,X2,X3))
    79: U62(mark(X1),X2) -> mark(U62(X1,X2))
    80: U63(mark(X)) -> mark(U63(X))
    81: U71(mark(X1),X2) -> mark(U71(X1,X2))
    82: s(mark(X)) -> mark(s(X))
    83: length(mark(X)) -> mark(length(X))
    84: U81(mark(X)) -> mark(U81(X))
    85: U91(mark(X1),X2,X3,X4) -> mark(U91(X1,X2,X3,X4))
    86: take(mark(X1),X2) -> mark(take(X1,X2))
    87: take(X1,mark(X2)) -> mark(take(X1,X2))
    88: and(mark(X1),X2) -> mark(and(X1,X2))
    89: proper(zeros()) -> ok(zeros())
    90: proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
    91: proper(0()) -> ok(0())
    92: proper(U11(X1,X2)) -> U11(proper(X1),proper(X2))
    93: proper(tt()) -> ok(tt())
    94: proper(U12(X)) -> U12(proper(X))
    95: proper(isNatList(X)) -> isNatList(proper(X))
    96: proper(U21(X1,X2)) -> U21(proper(X1),proper(X2))
    97: proper(U22(X)) -> U22(proper(X))
    98: proper(isNat(X)) -> isNat(proper(X))
    99: proper(U31(X1,X2)) -> U31(proper(X1),proper(X2))
    100: proper(U32(X)) -> U32(proper(X))
    101: proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3))
    102: proper(U42(X1,X2)) -> U42(proper(X1),proper(X2))
    103: proper(U43(X)) -> U43(proper(X))
    104: proper(isNatIList(X)) -> isNatIList(proper(X))
    105: proper(U51(X1,X2,X3)) -> U51(proper(X1),proper(X2),proper(X3))
    106: proper(U52(X1,X2)) -> U52(proper(X1),proper(X2))
    107: proper(U53(X)) -> U53(proper(X))
    108: proper(U61(X1,X2,X3)) -> U61(proper(X1),proper(X2),proper(X3))
    109: proper(U62(X1,X2)) -> U62(proper(X1),proper(X2))
    110: proper(U63(X)) -> U63(proper(X))
    111: proper(U71(X1,X2)) -> U71(proper(X1),proper(X2))
    112: proper(s(X)) -> s(proper(X))
    113: proper(length(X)) -> length(proper(X))
    114: proper(U81(X)) -> U81(proper(X))
    115: proper(nil()) -> ok(nil())
    116: proper(U91(X1,X2,X3,X4)) -> U91(proper(X1),proper(X2),proper(X3),proper(X4))
    117: proper(take(X1,X2)) -> take(proper(X1),proper(X2))
    118: proper(and(X1,X2)) -> and(proper(X1),proper(X2))
    119: proper(isNatIListKind(X)) -> isNatIListKind(proper(X))
    120: proper(isNatKind(X)) -> isNatKind(proper(X))
    121: cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
    122: U11(ok(X1),ok(X2)) -> ok(U11(X1,X2))
    123: U12(ok(X)) -> ok(U12(X))
    124: isNatList(ok(X)) -> ok(isNatList(X))
    125: U21(ok(X1),ok(X2)) -> ok(U21(X1,X2))
    126: U22(ok(X)) -> ok(U22(X))
    127: isNat(ok(X)) -> ok(isNat(X))
    128: U31(ok(X1),ok(X2)) -> ok(U31(X1,X2))
    129: U32(ok(X)) -> ok(U32(X))
    130: U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3))
    131: U42(ok(X1),ok(X2)) -> ok(U42(X1,X2))
    132: U43(ok(X)) -> ok(U43(X))
    133: isNatIList(ok(X)) -> ok(isNatIList(X))
    134: U51(ok(X1),ok(X2),ok(X3)) -> ok(U51(X1,X2,X3))
    135: U52(ok(X1),ok(X2)) -> ok(U52(X1,X2))
    136: U53(ok(X)) -> ok(U53(X))
    137: U61(ok(X1),ok(X2),ok(X3)) -> ok(U61(X1,X2,X3))
    138: U62(ok(X1),ok(X2)) -> ok(U62(X1,X2))
    139: U63(ok(X)) -> ok(U63(X))
    140: U71(ok(X1),ok(X2)) -> ok(U71(X1,X2))
    141: s(ok(X)) -> ok(s(X))
    142: length(ok(X)) -> ok(length(X))
    143: U81(ok(X)) -> ok(U81(X))
    144: U91(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U91(X1,X2,X3,X4))
    145: take(ok(X1),ok(X2)) -> ok(take(X1,X2))
    146: and(ok(X1),ok(X2)) -> ok(and(X1,X2))
    147: isNatIListKind(ok(X)) -> ok(isNatIListKind(X))
    148: isNatKind(ok(X)) -> ok(isNatKind(X))
    149: top(mark(X)) -> top(proper(X))
    150: top(ok(X)) -> top(active(X))
Number of strict rules: 150
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(U11(tt(),V1)) -> #U12(isNatList(V1))
   #2: #active(U11(tt(),V1)) -> #isNatList(V1)
   #3: #take(mark(X1),X2) -> #take(X1,X2)
   #4: #active(U12(X)) -> #U12(active(X))
   #5: #active(U12(X)) -> #active(X)
   #6: #active(isNatIListKind(cons(V1,V2))) -> #and(isNatKind(V1),isNatIListKind(V2))
   #7: #active(isNatIListKind(cons(V1,V2))) -> #isNatKind(V1)
   #8: #active(isNatIListKind(cons(V1,V2))) -> #isNatIListKind(V2)
   #9: #active(isNatList(cons(V1,V2))) -> #U51(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)
   #10: #active(isNatList(cons(V1,V2))) -> #and(isNatKind(V1),isNatIListKind(V2))
   #11: #active(isNatList(cons(V1,V2))) -> #isNatKind(V1)
   #12: #active(isNatList(cons(V1,V2))) -> #isNatIListKind(V2)
   #13: #length(mark(X)) -> #length(X)
   #14: #U11(mark(X1),X2) -> #U11(X1,X2)
   #15: #active(U31(X1,X2)) -> #U31(active(X1),X2)
   #16: #active(U31(X1,X2)) -> #active(X1)
   #17: #active(U11(X1,X2)) -> #U11(active(X1),X2)
   #18: #active(U11(X1,X2)) -> #active(X1)
   #19: #top(mark(X)) -> #top(proper(X))
   #20: #top(mark(X)) -> #proper(X)
   #21: #proper(isNatList(X)) -> #isNatList(proper(X))
   #22: #proper(isNatList(X)) -> #proper(X)
   #23: #active(cons(X1,X2)) -> #cons(active(X1),X2)
   #24: #active(cons(X1,X2)) -> #active(X1)
   #25: #proper(U81(X)) -> #U81(proper(X))
   #26: #proper(U81(X)) -> #proper(X)
   #27: #proper(U31(X1,X2)) -> #U31(proper(X1),proper(X2))
   #28: #proper(U31(X1,X2)) -> #proper(X1)
   #29: #proper(U31(X1,X2)) -> #proper(X2)
   #30: #proper(U22(X)) -> #U22(proper(X))
   #31: #proper(U22(X)) -> #proper(X)
   #32: #U42(mark(X1),X2) -> #U42(X1,X2)
   #33: #active(U32(X)) -> #U32(active(X))
   #34: #active(U32(X)) -> #active(X)
   #35: #active(U53(X)) -> #U53(active(X))
   #36: #active(U53(X)) -> #active(X)
   #37: #U32(mark(X)) -> #U32(X)
   #38: #isNatIListKind(ok(X)) -> #isNatIListKind(X)
   #39: #U63(ok(X)) -> #U63(X)
   #40: #active(U41(X1,X2,X3)) -> #U41(active(X1),X2,X3)
   #41: #active(U41(X1,X2,X3)) -> #active(X1)
   #42: #U12(ok(X)) -> #U12(X)
   #43: #U51(mark(X1),X2,X3) -> #U51(X1,X2,X3)
   #44: #proper(s(X)) -> #s(proper(X))
   #45: #proper(s(X)) -> #proper(X)
   #46: #U43(mark(X)) -> #U43(X)
   #47: #active(s(X)) -> #s(active(X))
   #48: #active(s(X)) -> #active(X)
   #49: #U62(ok(X1),ok(X2)) -> #U62(X1,X2)
   #50: #proper(length(X)) -> #length(proper(X))
   #51: #proper(length(X)) -> #proper(X)
   #52: #active(U91(X1,X2,X3,X4)) -> #U91(active(X1),X2,X3,X4)
   #53: #active(U91(X1,X2,X3,X4)) -> #active(X1)
   #54: #active(length(cons(N,L))) -> #U71(and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L)
   #55: #active(length(cons(N,L))) -> #and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N)))
   #56: #active(length(cons(N,L))) -> #and(isNatList(L),isNatIListKind(L))
   #57: #active(length(cons(N,L))) -> #isNatList(L)
   #58: #active(length(cons(N,L))) -> #isNatIListKind(L)
   #59: #active(length(cons(N,L))) -> #and(isNat(N),isNatKind(N))
   #60: #active(length(cons(N,L))) -> #isNat(N)
   #61: #active(length(cons(N,L))) -> #isNatKind(N)
   #62: #proper(U91(X1,X2,X3,X4)) -> #U91(proper(X1),proper(X2),proper(X3),proper(X4))
   #63: #proper(U91(X1,X2,X3,X4)) -> #proper(X1)
   #64: #proper(U91(X1,X2,X3,X4)) -> #proper(X2)
   #65: #proper(U91(X1,X2,X3,X4)) -> #proper(X3)
   #66: #proper(U91(X1,X2,X3,X4)) -> #proper(X4)
   #67: #active(U31(tt(),V)) -> #U32(isNatList(V))
   #68: #active(U31(tt(),V)) -> #isNatList(V)
   #69: #active(length(X)) -> #length(active(X))
   #70: #active(length(X)) -> #active(X)
   #71: #proper(U63(X)) -> #U63(proper(X))
   #72: #proper(U63(X)) -> #proper(X)
   #73: #U43(ok(X)) -> #U43(X)
   #74: #active(U62(X1,X2)) -> #U62(active(X1),X2)
   #75: #active(U62(X1,X2)) -> #active(X1)
   #76: #U12(mark(X)) -> #U12(X)
   #77: #active(take(s(M),cons(N,IL))) -> #U91(and(and(isNatIList(IL),isNatIListKind(IL)),and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))),IL,M,N)
   #78: #active(take(s(M),cons(N,IL))) -> #and(and(isNatIList(IL),isNatIListKind(IL)),and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))))
   #79: #active(take(s(M),cons(N,IL))) -> #and(isNatIList(IL),isNatIListKind(IL))
   #80: #active(take(s(M),cons(N,IL))) -> #isNatIList(IL)
   #81: #active(take(s(M),cons(N,IL))) -> #isNatIListKind(IL)
   #82: #active(take(s(M),cons(N,IL))) -> #and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
   #83: #active(take(s(M),cons(N,IL))) -> #and(isNat(M),isNatKind(M))
   #84: #active(take(s(M),cons(N,IL))) -> #isNat(M)
   #85: #active(take(s(M),cons(N,IL))) -> #isNatKind(M)
   #86: #active(take(s(M),cons(N,IL))) -> #and(isNat(N),isNatKind(N))
   #87: #active(take(s(M),cons(N,IL))) -> #isNat(N)
   #88: #active(take(s(M),cons(N,IL))) -> #isNatKind(N)
   #89: #proper(cons(X1,X2)) -> #cons(proper(X1),proper(X2))
   #90: #proper(cons(X1,X2)) -> #proper(X1)
   #91: #proper(cons(X1,X2)) -> #proper(X2)
   #92: #and(ok(X1),ok(X2)) -> #and(X1,X2)
   #93: #proper(U53(X)) -> #U53(proper(X))
   #94: #proper(U53(X)) -> #proper(X)
   #95: #active(U51(X1,X2,X3)) -> #U51(active(X1),X2,X3)
   #96: #active(U51(X1,X2,X3)) -> #active(X1)
   #97: #active(U42(tt(),V2)) -> #U43(isNatIList(V2))
   #98: #active(U42(tt(),V2)) -> #isNatIList(V2)
   #99: #active(U51(tt(),V1,V2)) -> #U52(isNat(V1),V2)
   #100: #active(U51(tt(),V1,V2)) -> #isNat(V1)
   #101: #proper(isNat(X)) -> #isNat(proper(X))
   #102: #proper(isNat(X)) -> #proper(X)
   #103: #active(U71(X1,X2)) -> #U71(active(X1),X2)
   #104: #active(U71(X1,X2)) -> #active(X1)
   #105: #U52(mark(X1),X2) -> #U52(X1,X2)
   #106: #proper(U62(X1,X2)) -> #U62(proper(X1),proper(X2))
   #107: #proper(U62(X1,X2)) -> #proper(X1)
   #108: #proper(U62(X1,X2)) -> #proper(X2)
   #109: #proper(U12(X)) -> #U12(proper(X))
   #110: #proper(U12(X)) -> #proper(X)
   #111: #active(isNatIList(V)) -> #U31(isNatIListKind(V),V)
   #112: #active(isNatIList(V)) -> #isNatIListKind(V)
   #113: #U51(ok(X1),ok(X2),ok(X3)) -> #U51(X1,X2,X3)
   #114: #U31(mark(X1),X2) -> #U31(X1,X2)
   #115: #active(isNat(s(V1))) -> #U21(isNatKind(V1),V1)
   #116: #active(isNat(s(V1))) -> #isNatKind(V1)
   #117: #U31(ok(X1),ok(X2)) -> #U31(X1,X2)
   #118: #U71(mark(X1),X2) -> #U71(X1,X2)
   #119: #proper(and(X1,X2)) -> #and(proper(X1),proper(X2))
   #120: #proper(and(X1,X2)) -> #proper(X1)
   #121: #proper(and(X1,X2)) -> #proper(X2)
   #122: #U61(mark(X1),X2,X3) -> #U61(X1,X2,X3)
   #123: #active(U22(X)) -> #U22(active(X))
   #124: #active(U22(X)) -> #active(X)
   #125: #proper(U21(X1,X2)) -> #U21(proper(X1),proper(X2))
   #126: #proper(U21(X1,X2)) -> #proper(X1)
   #127: #proper(U21(X1,X2)) -> #proper(X2)
   #128: #U22(mark(X)) -> #U22(X)
   #129: #proper(U41(X1,X2,X3)) -> #U41(proper(X1),proper(X2),proper(X3))
   #130: #proper(U41(X1,X2,X3)) -> #proper(X1)
   #131: #proper(U41(X1,X2,X3)) -> #proper(X2)
   #132: #proper(U41(X1,X2,X3)) -> #proper(X3)
   #133: #active(U52(tt(),V2)) -> #U53(isNatList(V2))
   #134: #active(U52(tt(),V2)) -> #isNatList(V2)
   #135: #U62(mark(X1),X2) -> #U62(X1,X2)
   #136: #active(U63(X)) -> #U63(active(X))
   #137: #active(U63(X)) -> #active(X)
   #138: #isNatIList(ok(X)) -> #isNatIList(X)
   #139: #s(mark(X)) -> #s(X)
   #140: #proper(U71(X1,X2)) -> #U71(proper(X1),proper(X2))
   #141: #proper(U71(X1,X2)) -> #proper(X1)
   #142: #proper(U71(X1,X2)) -> #proper(X2)
   #143: #active(U61(tt(),V1,V2)) -> #U62(isNat(V1),V2)
   #144: #active(U61(tt(),V1,V2)) -> #isNat(V1)
   #145: #proper(U52(X1,X2)) -> #U52(proper(X1),proper(X2))
   #146: #proper(U52(X1,X2)) -> #proper(X1)
   #147: #proper(U52(X1,X2)) -> #proper(X2)
   #148: #active(take(X1,X2)) -> #take(active(X1),X2)
   #149: #active(take(X1,X2)) -> #active(X1)
   #150: #active(isNatIListKind(take(V1,V2))) -> #and(isNatKind(V1),isNatIListKind(V2))
   #151: #active(isNatIListKind(take(V1,V2))) -> #isNatKind(V1)
   #152: #active(isNatIListKind(take(V1,V2))) -> #isNatIListKind(V2)
   #153: #active(U52(X1,X2)) -> #U52(active(X1),X2)
   #154: #active(U52(X1,X2)) -> #active(X1)
   #155: #active(U42(X1,X2)) -> #U42(active(X1),X2)
   #156: #active(U42(X1,X2)) -> #active(X1)
   #157: #U41(ok(X1),ok(X2),ok(X3)) -> #U41(X1,X2,X3)
   #158: #proper(U61(X1,X2,X3)) -> #U61(proper(X1),proper(X2),proper(X3))
   #159: #proper(U61(X1,X2,X3)) -> #proper(X1)
   #160: #proper(U61(X1,X2,X3)) -> #proper(X2)
   #161: #proper(U61(X1,X2,X3)) -> #proper(X3)
   #162: #U32(ok(X)) -> #U32(X)
   #163: #U22(ok(X)) -> #U22(X)
   #164: #and(mark(X1),X2) -> #and(X1,X2)
   #165: #active(take(0(),IL)) -> #U81(and(isNatIList(IL),isNatIListKind(IL)))
   #166: #active(take(0(),IL)) -> #and(isNatIList(IL),isNatIListKind(IL))
   #167: #active(take(0(),IL)) -> #isNatIList(IL)
   #168: #active(take(0(),IL)) -> #isNatIListKind(IL)
   #169: #U53(ok(X)) -> #U53(X)
   #170: #proper(U11(X1,X2)) -> #U11(proper(X1),proper(X2))
   #171: #proper(U11(X1,X2)) -> #proper(X1)
   #172: #proper(U11(X1,X2)) -> #proper(X2)
   #173: #proper(isNatIListKind(X)) -> #isNatIListKind(proper(X))
   #174: #proper(isNatIListKind(X)) -> #proper(X)
   #175: #active(and(X1,X2)) -> #and(active(X1),X2)
   #176: #active(and(X1,X2)) -> #active(X1)
   #177: #active(isNatKind(s(V1))) -> #isNatKind(V1)
   #178: #U41(mark(X1),X2,X3) -> #U41(X1,X2,X3)
   #179: #proper(isNatKind(X)) -> #isNatKind(proper(X))
   #180: #proper(isNatKind(X)) -> #proper(X)
   #181: #active(U21(X1,X2)) -> #U21(active(X1),X2)
   #182: #active(U21(X1,X2)) -> #active(X1)
   #183: #cons(mark(X1),X2) -> #cons(X1,X2)
   #184: #isNatKind(ok(X)) -> #isNatKind(X)
   #185: #active(isNat(length(V1))) -> #U11(isNatIListKind(V1),V1)
   #186: #active(isNat(length(V1))) -> #isNatIListKind(V1)
   #187: #isNat(ok(X)) -> #isNat(X)
   #188: #U81(mark(X)) -> #U81(X)
   #189: #take(X1,mark(X2)) -> #take(X1,X2)
   #190: #U61(ok(X1),ok(X2),ok(X3)) -> #U61(X1,X2,X3)
   #191: #U91(ok(X1),ok(X2),ok(X3),ok(X4)) -> #U91(X1,X2,X3,X4)
   #192: #length(ok(X)) -> #length(X)
   #193: #top(ok(X)) -> #top(active(X))
   #194: #top(ok(X)) -> #active(X)
   #195: #active(U81(X)) -> #U81(active(X))
   #196: #active(U81(X)) -> #active(X)
   #197: #proper(take(X1,X2)) -> #take(proper(X1),proper(X2))
   #198: #proper(take(X1,X2)) -> #proper(X1)
   #199: #proper(take(X1,X2)) -> #proper(X2)
   #200: #active(U71(tt(),L)) -> #s(length(L))
   #201: #active(U71(tt(),L)) -> #length(L)
   #202: #active(isNatKind(length(V1))) -> #isNatIListKind(V1)
   #203: #active(U91(tt(),IL,M,N)) -> #cons(N,take(M,IL))
   #204: #active(U91(tt(),IL,M,N)) -> #take(M,IL)
   #205: #U81(ok(X)) -> #U81(X)
   #206: #U21(ok(X1),ok(X2)) -> #U21(X1,X2)
   #207: #active(take(X1,X2)) -> #take(X1,active(X2))
   #208: #active(take(X1,X2)) -> #active(X2)
   #209: #U52(ok(X1),ok(X2)) -> #U52(X1,X2)
   #210: #proper(U51(X1,X2,X3)) -> #U51(proper(X1),proper(X2),proper(X3))
   #211: #proper(U51(X1,X2,X3)) -> #proper(X1)
   #212: #proper(U51(X1,X2,X3)) -> #proper(X2)
   #213: #proper(U51(X1,X2,X3)) -> #proper(X3)
   #214: #active(isNatIList(cons(V1,V2))) -> #U41(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)
   #215: #active(isNatIList(cons(V1,V2))) -> #and(isNatKind(V1),isNatIListKind(V2))
   #216: #active(isNatIList(cons(V1,V2))) -> #isNatKind(V1)
   #217: #active(isNatIList(cons(V1,V2))) -> #isNatIListKind(V2)
   #218: #proper(U32(X)) -> #U32(proper(X))
   #219: #proper(U32(X)) -> #proper(X)
   #220: #U91(mark(X1),X2,X3,X4) -> #U91(X1,X2,X3,X4)
   #221: #U11(ok(X1),ok(X2)) -> #U11(X1,X2)
   #222: #U21(mark(X1),X2) -> #U21(X1,X2)
   #223: #U42(ok(X1),ok(X2)) -> #U42(X1,X2)
   #224: #active(isNatList(take(V1,V2))) -> #U61(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)
   #225: #active(isNatList(take(V1,V2))) -> #and(isNatKind(V1),isNatIListKind(V2))
   #226: #active(isNatList(take(V1,V2))) -> #isNatKind(V1)
   #227: #active(isNatList(take(V1,V2))) -> #isNatIListKind(V2)
   #228: #U53(mark(X)) -> #U53(X)
   #229: #active(zeros()) -> #cons(0(),zeros())
   #230: #U71(ok(X1),ok(X2)) -> #U71(X1,X2)
   #231: #isNatList(ok(X)) -> #isNatList(X)
   #232: #active(U61(X1,X2,X3)) -> #U61(active(X1),X2,X3)
   #233: #active(U61(X1,X2,X3)) -> #active(X1)
   #234: #active(U41(tt(),V1,V2)) -> #U42(isNat(V1),V2)
   #235: #active(U41(tt(),V1,V2)) -> #isNat(V1)
   #236: #s(ok(X)) -> #s(X)
   #237: #cons(ok(X1),ok(X2)) -> #cons(X1,X2)
   #238: #active(U62(tt(),V2)) -> #U63(isNatIList(V2))
   #239: #active(U62(tt(),V2)) -> #isNatIList(V2)
   #240: #take(ok(X1),ok(X2)) -> #take(X1,X2)
   #241: #proper(U42(X1,X2)) -> #U42(proper(X1),proper(X2))
   #242: #proper(U42(X1,X2)) -> #proper(X1)
   #243: #proper(U42(X1,X2)) -> #proper(X2)
   #244: #proper(U43(X)) -> #U43(proper(X))
   #245: #proper(U43(X)) -> #proper(X)
   #246: #active(U21(tt(),V1)) -> #U22(isNat(V1))
   #247: #active(U21(tt(),V1)) -> #isNat(V1)
   #248: #proper(isNatIList(X)) -> #isNatIList(proper(X))
   #249: #proper(isNatIList(X)) -> #proper(X)
   #250: #U63(mark(X)) -> #U63(X)
   #251: #active(U43(X)) -> #U43(active(X))
   #252: #active(U43(X)) -> #active(X)
Number of SCCs: 31, DPs: 125, edges: 2891
	SCC { #138 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: 0
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: x1
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #138
Number of SCCs: 30, DPs: 124, edges: 2890
	SCC { #184 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: 0
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: x1
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #184
Number of SCCs: 29, DPs: 123, edges: 2889
	SCC { #38 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: x1
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: 0
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #38
Number of SCCs: 28, DPs: 122, edges: 2888
	SCC { #187 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: x1
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: 0
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #187
Number of SCCs: 27, DPs: 121, edges: 2887
	SCC { #231 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: x1
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: 0
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #231
Number of SCCs: 26, DPs: 120, edges: 2886
	SCC { #46 #73 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: x1
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #46 #73
Number of SCCs: 25, DPs: 118, edges: 2882
	SCC { #37 #162 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: x1
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #37 #162
Number of SCCs: 24, DPs: 116, edges: 2878
	SCC { #42 #76 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: x1
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #42 #76
Number of SCCs: 23, DPs: 114, edges: 2874
	SCC { #169 #228 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: x1
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #169 #228
Number of SCCs: 22, DPs: 112, edges: 2870
	SCC { #39 #250 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: x1
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #39 #250
Number of SCCs: 21, DPs: 110, edges: 2866
	SCC { #13 #192 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: x1
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #13 #192
Number of SCCs: 20, DPs: 108, edges: 2862
	SCC { #139 #236 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: x1
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #139 #236
Number of SCCs: 19, DPs: 106, edges: 2858
	SCC { #128 #163 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: x1
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #128 #163
Number of SCCs: 18, DPs: 104, edges: 2854
	SCC { #188 #205 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
   U42(x1,x2)	weight: 0
   U91(x1,x2,x3,x4)	weight: 0
  take(x1,x2)	weight: 0
   U71(x1,x2)	weight: 0
   top(x1)	weight: 0
 #U81(x1)	weight: x1
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
   U63(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
 #U62(x1,x2)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
isNatIListKind(x1)	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U91(x1,x2,x3,x4)	weight: 0
 #U61(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #188 #205
Number of SCCs: 17, DPs: 102, edges: 2850
	SCC { #19 #193 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
