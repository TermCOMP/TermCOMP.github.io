Input TRS:
    1: f(g(X),Y) -> f(X,n__f(g(X),activate(Y)))
    2: f(X1,X2) -> n__f(X1,X2)
    3: activate(n__f(X1,X2)) -> f(X1,X2)
    4: activate(X) -> X
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #activate(n__f(X1,X2)) -> #f(X1,X2)
   #2: #f(g(X),Y) -> #f(X,n__f(g(X),activate(Y)))
   #3: #f(g(X),Y) -> #activate(Y)
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #1..3 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #activate(n__f(g(g(X_{2})),Y_{1}))	-#1->
  #f(g(g(X_{2})),Y_{1})	--->*
  #f(g(g(X_{2})),Y_{1})	-#2->
  #f(g(X_{2}),n__f(g(g(X_{2})),activate(Y_{1})))	--->*
  #f(g(X_{2}),n__f(g(g(X_{2})),activate(Y_{1})))	-#3->
  #activate(n__f(g(g(X_{2})),activate(Y_{1})))	--->*
  #activate(n__f(g(g(X_{2})),activate(Y_{1})))
  Looping with: [ Y_{1} := activate(Y_{1}); X_{2} := X_{2}; ]
