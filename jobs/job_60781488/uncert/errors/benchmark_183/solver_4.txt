Input TRS:
    1: minus(x,x) -> 0()
    2: minus(0(),x) -> 0()
    3: minus(x,0()) -> x
    4: minus(s(x),s(y)) -> minus(x,y)
    5: le(0(),y) -> true()
    6: le(s(x),0()) -> false()
    7: le(s(x),s(y)) -> le(x,y)
    8: quot(x,y) -> if_quot(minus(x,y),y,le(y,0()),le(y,x))
    9: if_quot(x,y,true(),z) -> divByZeroError()
    10: if_quot(x,y,false(),true()) -> s(quot(x,y))
    11: if_quot(x,y,false(),false()) -> 0()
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #le(s(x),s(y)) -> #le(x,y)
   #2: #if_quot(x,y,false(),true()) -> #quot(x,y)
   #3: #quot(x,y) -> #if_quot(minus(x,y),y,le(y,0()),le(y,x))
   #4: #quot(x,y) -> #minus(x,y)
   #5: #quot(x,y) -> #le(y,0())
   #6: #quot(x,y) -> #le(y,x)
   #7: #minus(s(x),s(y)) -> #minus(x,y)
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: x2
divByZeroError()	weight: 0
 minus(x1,x2)	weight: 0
#if_quot(x1,x2,x3,x4)	weight: 0
 false()	weight: 0
  true()	weight: 0
     0()	weight: 0
  quot(x1,x2)	weight: 0
#minus(x1,x2)	weight: 0
if_quot(x1,x2,x3,x4)	weight: 0
#quot(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
divByZeroError()	weight: 0
 minus(x1,x2)	weight: 0
#if_quot(x1,x2,x3,x4)	weight: 0
 false()	weight: 0
  true()	weight: 0
     0()	weight: 0
  quot(x1,x2)	weight: 0
#minus(x1,x2)	weight: x2
if_quot(x1,x2,x3,x4)	weight: 0
#quot(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #7
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #2 #3 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
