Input TRS:
    1: ge(x,0()) -> true()
    2: ge(0(),s(y)) -> false()
    3: ge(s(x),s(y)) -> ge(x,y)
    4: minus(x,0()) -> x
    5: minus(0(),y) -> 0()
    6: minus(s(x),s(y)) -> minus(x,y)
    7: id_inc(x) -> x
    8: id_inc(x) -> s(x)
    9: div(x,y) -> if(ge(y,s(0())),ge(x,y),x,y)
    10: if(false(),b,x,y) -> div_by_zero()
    11: if(true(),false(),x,y) -> 0()
    12: if(true(),true(),x,y) -> id_inc(div(minus(x,y),y))
Number of strict rules: 12
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #minus(s(x),s(y)) -> #minus(x,y)
   #2: #div(x,y) -> #if(ge(y,s(0())),ge(x,y),x,y)
   #3: #div(x,y) -> #ge(y,s(0()))
   #4: #div(x,y) -> #ge(x,y)
   #5: #if(true(),true(),x,y) -> #id_inc(div(minus(x,y),y))
   #6: #if(true(),true(),x,y) -> #div(minus(x,y),y)
   #7: #if(true(),true(),x,y) -> #minus(x,y)
   #8: #ge(s(x),s(y)) -> #ge(x,y)
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
div_by_zero()	weight: 0
 false()	weight: 0
   div(x1,x2)	weight: 0
  #ge(x1,x2)	weight: 0
  true()	weight: 0
#id_inc(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
    ge(x1,x2)	weight: 0
#minus(x1,x2)	weight: x2
id_inc(x1)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
div_by_zero()	weight: 0
 false()	weight: 0
   div(x1,x2)	weight: 0
  #ge(x1,x2)	weight: x2
  true()	weight: 0
#id_inc(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
    ge(x1,x2)	weight: 0
#minus(x1,x2)	weight: 0
id_inc(x1)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #2 #6 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
