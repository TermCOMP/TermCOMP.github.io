Input TRS:
    1: f(true(),x,y,z) -> f(gt(x,plus(y,z)),x,s(y),z)
    2: f(true(),x,y,z) -> f(gt(x,plus(y,z)),x,y,s(z))
    3: plus(n,0()) -> n
    4: plus(n,s(m)) -> s(plus(n,m))
    5: gt(0(),v) -> false()
    6: gt(s(u),0()) -> true()
    7: gt(s(u),s(v)) -> gt(u,v)
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #f(true(),x,y,z) -> #f(gt(x,plus(y,z)),x,y,s(z))
   #2: #f(true(),x,y,z) -> #gt(x,plus(y,z))
   #3: #f(true(),x,y,z) -> #plus(y,z)
   #4: #gt(s(u),s(v)) -> #gt(u,v)
   #5: #f(true(),x,y,z) -> #f(gt(x,plus(y,z)),x,s(y),z)
   #6: #f(true(),x,y,z) -> #gt(x,plus(y,z))
   #7: #f(true(),x,y,z) -> #plus(y,z)
   #8: #plus(n,s(m)) -> #plus(n,m)
Number of SCCs: 3, DPs: 4, edges: 6
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
    gt(x1,x2)	weight: 0
#plus(x1,x2)	weight: x2
 false()	weight: 0
  true()	weight: 0
     f(x1,x2,x3,x4)	weight: 0
     0()	weight: 0
  #gt(x1,x2)	weight: 0
   #f(x1,x2,x3,x4)	weight: 0
  plus(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 2, DPs: 3, edges: 5
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
    gt(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
     f(x1,x2,x3,x4)	weight: 0
     0()	weight: 0
  #gt(x1,x2)	weight: x2
   #f(x1,x2,x3,x4)	weight: 0
  plus(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 1, DPs: 2, edges: 4
	SCC { #1 #5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
