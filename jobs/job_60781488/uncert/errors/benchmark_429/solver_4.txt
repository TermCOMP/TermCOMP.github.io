Input TRS:
    1: minus(x,y) -> cond(equal(min(x,y),y),x,y)
    2: cond(true(),x,y) -> s(minus(x,s(y)))
    3: min(0(),v) -> 0()
    4: min(u,0()) -> 0()
    5: min(s(u),s(v)) -> s(min(u,v))
    6: equal(0(),0()) -> true()
    7: equal(s(x),0()) -> false()
    8: equal(0(),s(y)) -> false()
    9: equal(s(x),s(y)) -> equal(x,y)
Number of strict rules: 9
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #cond(true(),x,y) -> #minus(x,s(y))
   #2: #equal(s(x),s(y)) -> #equal(x,y)
   #3: #min(s(u),s(v)) -> #min(u,v)
   #4: #minus(x,y) -> #cond(equal(min(x,y),y),x,y)
   #5: #minus(x,y) -> #equal(min(x,y),y)
   #6: #minus(x,y) -> #min(x,y)
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
#equal(x1,x2)	weight: x2
 false()	weight: 0
 #min(x1,x2)	weight: 0
  true()	weight: 0
#cond(x1,x2,x3)	weight: 0
     0()	weight: 0
#minus(x1,x2)	weight: 0
   min(x1,x2)	weight: 0
 equal(x1,x2)	weight: 0
  cond(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #2
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
#equal(x1,x2)	weight: 0
 false()	weight: 0
 #min(x1,x2)	weight: x2
  true()	weight: 0
#cond(x1,x2,x3)	weight: 0
     0()	weight: 0
#minus(x1,x2)	weight: 0
   min(x1,x2)	weight: 0
 equal(x1,x2)	weight: 0
  cond(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #3
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #1 #4 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
