Input TRS:
    1: a____(__(X,Y),Z) -> a____(mark(X),a____(mark(Y),mark(Z)))
    2: a____(X,nil()) -> mark(X)
    3: a____(nil(),X) -> mark(X)
    4: a__U11(tt(),V) -> a__U12(a__isNeList(V))
    5: a__U12(tt()) -> tt()
    6: a__U21(tt(),V1,V2) -> a__U22(a__isList(V1),V2)
    7: a__U22(tt(),V2) -> a__U23(a__isList(V2))
    8: a__U23(tt()) -> tt()
    9: a__U31(tt(),V) -> a__U32(a__isQid(V))
    10: a__U32(tt()) -> tt()
    11: a__U41(tt(),V1,V2) -> a__U42(a__isList(V1),V2)
    12: a__U42(tt(),V2) -> a__U43(a__isNeList(V2))
    13: a__U43(tt()) -> tt()
    14: a__U51(tt(),V1,V2) -> a__U52(a__isNeList(V1),V2)
    15: a__U52(tt(),V2) -> a__U53(a__isList(V2))
    16: a__U53(tt()) -> tt()
    17: a__U61(tt(),V) -> a__U62(a__isQid(V))
    18: a__U62(tt()) -> tt()
    19: a__U71(tt(),V) -> a__U72(a__isNePal(V))
    20: a__U72(tt()) -> tt()
    21: a__and(tt(),X) -> mark(X)
    22: a__isList(V) -> a__U11(a__isPalListKind(V),V)
    23: a__isList(nil()) -> tt()
    24: a__isList(__(V1,V2)) -> a__U21(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2)
    25: a__isNeList(V) -> a__U31(a__isPalListKind(V),V)
    26: a__isNeList(__(V1,V2)) -> a__U41(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2)
    27: a__isNeList(__(V1,V2)) -> a__U51(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2)
    28: a__isNePal(V) -> a__U61(a__isPalListKind(V),V)
    29: a__isNePal(__(I,__(P,I))) -> a__and(a__and(a__isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
    30: a__isPal(V) -> a__U71(a__isPalListKind(V),V)
    31: a__isPal(nil()) -> tt()
    32: a__isPalListKind(a()) -> tt()
    33: a__isPalListKind(e()) -> tt()
    34: a__isPalListKind(i()) -> tt()
    35: a__isPalListKind(nil()) -> tt()
    36: a__isPalListKind(o()) -> tt()
    37: a__isPalListKind(u()) -> tt()
    38: a__isPalListKind(__(V1,V2)) -> a__and(a__isPalListKind(V1),isPalListKind(V2))
    39: a__isQid(a()) -> tt()
    40: a__isQid(e()) -> tt()
    41: a__isQid(i()) -> tt()
    42: a__isQid(o()) -> tt()
    43: a__isQid(u()) -> tt()
    44: mark(__(X1,X2)) -> a____(mark(X1),mark(X2))
    45: mark(U11(X1,X2)) -> a__U11(mark(X1),X2)
    46: mark(U12(X)) -> a__U12(mark(X))
    47: mark(isNeList(X)) -> a__isNeList(X)
    48: mark(U21(X1,X2,X3)) -> a__U21(mark(X1),X2,X3)
    49: mark(U22(X1,X2)) -> a__U22(mark(X1),X2)
    50: mark(isList(X)) -> a__isList(X)
    51: mark(U23(X)) -> a__U23(mark(X))
    52: mark(U31(X1,X2)) -> a__U31(mark(X1),X2)
    53: mark(U32(X)) -> a__U32(mark(X))
    54: mark(isQid(X)) -> a__isQid(X)
    55: mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3)
    56: mark(U42(X1,X2)) -> a__U42(mark(X1),X2)
    57: mark(U43(X)) -> a__U43(mark(X))
    58: mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3)
    59: mark(U52(X1,X2)) -> a__U52(mark(X1),X2)
    60: mark(U53(X)) -> a__U53(mark(X))
    61: mark(U61(X1,X2)) -> a__U61(mark(X1),X2)
    62: mark(U62(X)) -> a__U62(mark(X))
    63: mark(U71(X1,X2)) -> a__U71(mark(X1),X2)
    64: mark(U72(X)) -> a__U72(mark(X))
    65: mark(isNePal(X)) -> a__isNePal(X)
    66: mark(and(X1,X2)) -> a__and(mark(X1),X2)
    67: mark(isPalListKind(X)) -> a__isPalListKind(X)
    68: mark(isPal(X)) -> a__isPal(X)
    69: mark(nil()) -> nil()
    70: mark(tt()) -> tt()
    71: mark(a()) -> a()
    72: mark(e()) -> e()
    73: mark(i()) -> i()
    74: mark(o()) -> o()
    75: mark(u()) -> u()
    76: a____(X1,X2) -> __(X1,X2)
    77: a__U11(X1,X2) -> U11(X1,X2)
    78: a__U12(X) -> U12(X)
    79: a__isNeList(X) -> isNeList(X)
    80: a__U21(X1,X2,X3) -> U21(X1,X2,X3)
    81: a__U22(X1,X2) -> U22(X1,X2)
    82: a__isList(X) -> isList(X)
    83: a__U23(X) -> U23(X)
    84: a__U31(X1,X2) -> U31(X1,X2)
    85: a__U32(X) -> U32(X)
    86: a__isQid(X) -> isQid(X)
    87: a__U41(X1,X2,X3) -> U41(X1,X2,X3)
    88: a__U42(X1,X2) -> U42(X1,X2)
    89: a__U43(X) -> U43(X)
    90: a__U51(X1,X2,X3) -> U51(X1,X2,X3)
    91: a__U52(X1,X2) -> U52(X1,X2)
    92: a__U53(X) -> U53(X)
    93: a__U61(X1,X2) -> U61(X1,X2)
    94: a__U62(X) -> U62(X)
    95: a__U71(X1,X2) -> U71(X1,X2)
    96: a__U72(X) -> U72(X)
    97: a__isNePal(X) -> isNePal(X)
    98: a__and(X1,X2) -> and(X1,X2)
    99: a__isPalListKind(X) -> isPalListKind(X)
    100: a__isPal(X) -> isPal(X)
Number of strict rules: 100
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #a____(X,nil()) -> #mark(X)
   #2: #a__isNePal(__(I,__(P,I))) -> #a__and(a__and(a__isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
   #3: #a__isNePal(__(I,__(P,I))) -> #a__and(a__isQid(I),isPalListKind(I))
   #4: #a__isNePal(__(I,__(P,I))) -> #a__isQid(I)
   #5: #mark(and(X1,X2)) -> #a__and(mark(X1),X2)
   #6: #mark(and(X1,X2)) -> #mark(X1)
   #7: #mark(U12(X)) -> #a__U12(mark(X))
   #8: #mark(U12(X)) -> #mark(X)
   #9: #mark(isNeList(X)) -> #a__isNeList(X)
   #10: #mark(U32(X)) -> #a__U32(mark(X))
   #11: #mark(U32(X)) -> #mark(X)
   #12: #mark(U21(X1,X2,X3)) -> #a__U21(mark(X1),X2,X3)
   #13: #mark(U21(X1,X2,X3)) -> #mark(X1)
   #14: #mark(U51(X1,X2,X3)) -> #a__U51(mark(X1),X2,X3)
   #15: #mark(U51(X1,X2,X3)) -> #mark(X1)
   #16: #mark(U61(X1,X2)) -> #a__U61(mark(X1),X2)
   #17: #mark(U61(X1,X2)) -> #mark(X1)
   #18: #a__isPalListKind(__(V1,V2)) -> #a__and(a__isPalListKind(V1),isPalListKind(V2))
   #19: #a__isPalListKind(__(V1,V2)) -> #a__isPalListKind(V1)
   #20: #a__U21(tt(),V1,V2) -> #a__U22(a__isList(V1),V2)
   #21: #a__U21(tt(),V1,V2) -> #a__isList(V1)
   #22: #mark(U52(X1,X2)) -> #a__U52(mark(X1),X2)
   #23: #mark(U52(X1,X2)) -> #mark(X1)
   #24: #mark(U41(X1,X2,X3)) -> #a__U41(mark(X1),X2,X3)
   #25: #mark(U41(X1,X2,X3)) -> #mark(X1)
   #26: #mark(isPalListKind(X)) -> #a__isPalListKind(X)
   #27: #mark(U23(X)) -> #a__U23(mark(X))
   #28: #mark(U23(X)) -> #mark(X)
   #29: #a__U31(tt(),V) -> #a__U32(a__isQid(V))
   #30: #a__U31(tt(),V) -> #a__isQid(V)
   #31: #a__U41(tt(),V1,V2) -> #a__U42(a__isList(V1),V2)
   #32: #a__U41(tt(),V1,V2) -> #a__isList(V1)
   #33: #mark(U43(X)) -> #a__U43(mark(X))
   #34: #mark(U43(X)) -> #mark(X)
   #35: #a__isList(__(V1,V2)) -> #a__U21(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2)
   #36: #a__isList(__(V1,V2)) -> #a__and(a__isPalListKind(V1),isPalListKind(V2))
   #37: #a__isList(__(V1,V2)) -> #a__isPalListKind(V1)
   #38: #mark(U11(X1,X2)) -> #a__U11(mark(X1),X2)
   #39: #mark(U11(X1,X2)) -> #mark(X1)
   #40: #a__U42(tt(),V2) -> #a__U43(a__isNeList(V2))
   #41: #a__U42(tt(),V2) -> #a__isNeList(V2)
   #42: #mark(U42(X1,X2)) -> #a__U42(mark(X1),X2)
   #43: #mark(U42(X1,X2)) -> #mark(X1)
   #44: #a__U51(tt(),V1,V2) -> #a__U52(a__isNeList(V1),V2)
   #45: #a__U51(tt(),V1,V2) -> #a__isNeList(V1)
   #46: #mark(U62(X)) -> #a__U62(mark(X))
   #47: #mark(U62(X)) -> #mark(X)
   #48: #a__isPal(V) -> #a__U71(a__isPalListKind(V),V)
   #49: #a__isPal(V) -> #a__isPalListKind(V)
   #50: #mark(U31(X1,X2)) -> #a__U31(mark(X1),X2)
   #51: #mark(U31(X1,X2)) -> #mark(X1)
   #52: #mark(U22(X1,X2)) -> #a__U22(mark(X1),X2)
   #53: #mark(U22(X1,X2)) -> #mark(X1)
   #54: #a__isNeList(V) -> #a__U31(a__isPalListKind(V),V)
   #55: #a__isNeList(V) -> #a__isPalListKind(V)
   #56: #a__U22(tt(),V2) -> #a__U23(a__isList(V2))
   #57: #a__U22(tt(),V2) -> #a__isList(V2)
   #58: #mark(U72(X)) -> #a__U72(mark(X))
   #59: #mark(U72(X)) -> #mark(X)
   #60: #mark(__(X1,X2)) -> #a____(mark(X1),mark(X2))
   #61: #mark(__(X1,X2)) -> #mark(X1)
   #62: #mark(__(X1,X2)) -> #mark(X2)
   #63: #mark(isNePal(X)) -> #a__isNePal(X)
   #64: #a__isNePal(V) -> #a__U61(a__isPalListKind(V),V)
   #65: #a__isNePal(V) -> #a__isPalListKind(V)
   #66: #a__isList(V) -> #a__U11(a__isPalListKind(V),V)
   #67: #a__isList(V) -> #a__isPalListKind(V)
   #68: #a__isNeList(__(V1,V2)) -> #a__U51(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2)
   #69: #a__isNeList(__(V1,V2)) -> #a__and(a__isPalListKind(V1),isPalListKind(V2))
   #70: #a__isNeList(__(V1,V2)) -> #a__isPalListKind(V1)
   #71: #mark(U53(X)) -> #a__U53(mark(X))
   #72: #mark(U53(X)) -> #mark(X)
   #73: #a__U61(tt(),V) -> #a__U62(a__isQid(V))
   #74: #a__U61(tt(),V) -> #a__isQid(V)
   #75: #a__U71(tt(),V) -> #a__U72(a__isNePal(V))
   #76: #a__U71(tt(),V) -> #a__isNePal(V)
   #77: #mark(U71(X1,X2)) -> #a__U71(mark(X1),X2)
   #78: #mark(U71(X1,X2)) -> #mark(X1)
   #79: #a__isNeList(__(V1,V2)) -> #a__U41(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2)
   #80: #a__isNeList(__(V1,V2)) -> #a__and(a__isPalListKind(V1),isPalListKind(V2))
   #81: #a__isNeList(__(V1,V2)) -> #a__isPalListKind(V1)
   #82: #mark(isPal(X)) -> #a__isPal(X)
   #83: #a__and(tt(),X) -> #mark(X)
   #84: #a____(nil(),X) -> #mark(X)
   #85: #a____(__(X,Y),Z) -> #a____(mark(X),a____(mark(Y),mark(Z)))
   #86: #a____(__(X,Y),Z) -> #mark(X)
   #87: #a____(__(X,Y),Z) -> #a____(mark(Y),mark(Z))
   #88: #a____(__(X,Y),Z) -> #mark(Y)
   #89: #a____(__(X,Y),Z) -> #mark(Z)
   #90: #mark(isQid(X)) -> #a__isQid(X)
   #91: #a__U52(tt(),V2) -> #a__U53(a__isList(V2))
   #92: #a__U52(tt(),V2) -> #a__isList(V2)
   #93: #a__U11(tt(),V) -> #a__U12(a__isNeList(V))
   #94: #a__U11(tt(),V) -> #a__isNeList(V)
   #95: #mark(isList(X)) -> #a__isList(X)
Number of SCCs: 1, DPs: 73, edges: 1039
	SCC { #1..3 #5 #6 #8 #9 #11..15 #17..26 #28 #31 #32 #34..39 #41..45 #47..49 #51..53 #55 #57 #59..63 #65..70 #72 #76..89 #92 #94 #95 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a()	weight: 0
#a__isNePal(x1)	weight: (/ 1 8) + x1
   U21(x1,x2,x3)	weight: x1 + x2 + x3
#a__U72(x1)	weight: 0
#a__U71(x1,x2)	weight: (/ 1 4) + x2
   U11(x1,x2)	weight: x1 + x2
#a__U31(x1,x2)	weight: 0
#a__isNeList(x1)	weight: 0
isNeList(x1)	weight: x1
#a__U23(x1)	weight: 0
 isPal(x1)	weight: (/ 1 2) + x1
   U42(x1,x2)	weight: (/ 1 8) + x1 + x2
     u()	weight: 0
   U71(x1,x2)	weight: (/ 3 8) + x1 + x2
a__U62(x1)	weight: (/ 1 8) + x1
   and(x1,x2)	weight: x1 + x2
#a__U43(x1)	weight: 0
#a__isPal(x1)	weight: (/ 3 8) + x1
   U43(x1)	weight: (/ 1 8) + x1
#a__U51(x1,x2,x3)	weight: 0
   U23(x1)	weight: x1
a__U22(x1,x2)	weight: x1 + x2
isNePal(x1)	weight: (/ 1 4) + x1
   U72(x1)	weight: (/ 1 8) + x1
#a__U11(x1,x2)	weight: 0
a__U31(x1,x2)	weight: x1 + x2
a__U51(x1,x2,x3)	weight: (/ 1 8) + x1 + x2 + x3
#a____(x1,x2)	weight: x1 + x2
#a__U53(x1)	weight: 0
   U12(x1)	weight: x1
a__U43(x1)	weight: (/ 1 8) + x1
 isQid(x1)	weight: 0
#a__U62(x1)	weight: 0
 a____(x1,x2)	weight: (/ 1 4) + x1 + x2
#a__U42(x1,x2)	weight: 0
a__U41(x1,x2,x3)	weight: (/ 1 8) + x1 + x2 + x3
a__isList(x1)	weight: x1
a__isNeList(x1)	weight: x1
#a__U12(x1)	weight: 0
     o()	weight: 0
#a__U21(x1,x2,x3)	weight: 0
#a__U61(x1,x2)	weight: 0
#mark(x1)	weight: x1
isList(x1)	weight: x1
#a__and(x1,x2)	weight: x2
a__U21(x1,x2,x3)	weight: x1 + x2 + x3
a__U32(x1)	weight: x1
   nil()	weight: 0
   U62(x1)	weight: (/ 1 8) + x1
#a__isQid(x1)	weight: 0
#a__U52(x1,x2)	weight: 0
  mark(x1)	weight: x1
a__U72(x1)	weight: (/ 1 8) + x1
a__isNePal(x1)	weight: (/ 1 4) + x1
a__U11(x1,x2)	weight: x1 + x2
a__isPalListKind(x1)	weight: 0
   U32(x1)	weight: x1
a__U53(x1)	weight: (/ 1 8) + x1
a__U42(x1,x2)	weight: (/ 1 8) + x1 + x2
a__U52(x1,x2)	weight: (/ 1 8) + x1 + x2
a__U12(x1)	weight: x1
     i()	weight: 0
   U52(x1,x2)	weight: (/ 1 8) + x1 + x2
   U61(x1,x2)	weight: (/ 1 8) + x1
     e()	weight: 0
#a__U22(x1,x2)	weight: 0
#a__isPalListKind(x1)	weight: 0
   U31(x1,x2)	weight: x1 + x2
a__U71(x1,x2)	weight: (/ 3 8) + x1 + x2
a__isPal(x1)	weight: (/ 1 2) + x1
a__U61(x1,x2)	weight: (/ 1 8) + x1
#a__U41(x1,x2,x3)	weight: 0
    tt()	weight: 0
a__isQid(x1)	weight: 0
a__U23(x1)	weight: x1
#a__isList(x1)	weight: 0
   U22(x1,x2)	weight: x1 + x2
   U51(x1,x2,x3)	weight: (/ 1 8) + x1 + x2 + x3
a__and(x1,x2)	weight: x1 + x2
isPalListKind(x1)	weight: 0
   U53(x1)	weight: (/ 1 8) + x1
   U41(x1,x2,x3)	weight: (/ 1 8) + x1 + x2 + x3
#a__U32(x1)	weight: 0
    __(x1,x2)	weight: (/ 1 4) + x1 + x2
    Usable rules: { 1..100 }
    Removed DPs: #2 #3 #14 #15 #17 #22..25 #34 #42 #43 #47..49 #59..63 #65 #72 #76..78 #82 #86..89
Number of SCCs: 2, DPs: 41, edges: 222
	SCC { #85 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a()	weight: 0
#a__isNePal(x1)	weight: (/ 1 8)
   U21(x1,x2,x3)	weight: x1 + x2 + x3
#a__U72(x1)	weight: 0
#a__U71(x1,x2)	weight: (/ 1 4)
   U11(x1,x2)	weight: x1 + x2
#a__U31(x1,x2)	weight: 0
#a__isNeList(x1)	weight: 0
isNeList(x1)	weight: x1
#a__U23(x1)	weight: 0
 isPal(x1)	weight: (/ 1 2) + x1
   U42(x1,x2)	weight: (/ 1 8) + x1 + x2
     u()	weight: 0
   U71(x1,x2)	weight: (/ 3 8) + x1 + x2
a__U62(x1)	weight: (/ 1 8) + x1
   and(x1,x2)	weight: x1 + x2
#a__U43(x1)	weight: 0
#a__isPal(x1)	weight: (/ 3 8)
   U43(x1)	weight: (/ 1 8) + x1
#a__U51(x1,x2,x3)	weight: 0
   U23(x1)	weight: x1
a__U22(x1,x2)	weight: x1 + x2
isNePal(x1)	weight: (/ 1 4) + x1
   U72(x1)	weight: (/ 1 8) + x1
#a__U11(x1,x2)	weight: 0
a__U31(x1,x2)	weight: x1 + x2
a__U51(x1,x2,x3)	weight: (/ 1 8) + x1 + x2 + x3
#a____(x1,x2)	weight: x1
#a__U53(x1)	weight: 0
   U12(x1)	weight: x1
a__U43(x1)	weight: (/ 1 8) + x1
 isQid(x1)	weight: 0
#a__U62(x1)	weight: 0
 a____(x1,x2)	weight: (/ 1 8) + x1 + x2
#a__U42(x1,x2)	weight: 0
a__U41(x1,x2,x3)	weight: (/ 1 8) + x1 + x2 + x3
a__isList(x1)	weight: x1
a__isNeList(x1)	weight: x1
#a__U12(x1)	weight: 0
     o()	weight: 0
#a__U21(x1,x2,x3)	weight: 0
#a__U61(x1,x2)	weight: 0
#mark(x1)	weight: 0
isList(x1)	weight: x1
#a__and(x1,x2)	weight: 0
a__U21(x1,x2,x3)	weight: x1 + x2 + x3
a__U32(x1)	weight: x1
   nil()	weight: 0
   U62(x1)	weight: (/ 1 8) + x1
#a__isQid(x1)	weight: 0
#a__U52(x1,x2)	weight: 0
  mark(x1)	weight: x1
a__U72(x1)	weight: (/ 1 8) + x1
a__isNePal(x1)	weight: (/ 1 4) + x1
a__U11(x1,x2)	weight: x1 + x2
a__isPalListKind(x1)	weight: 0
   U32(x1)	weight: x1
a__U53(x1)	weight: (/ 1 8) + x1
a__U42(x1,x2)	weight: (/ 1 8) + x1 + x2
a__U52(x1,x2)	weight: (/ 1 8) + x1 + x2
a__U12(x1)	weight: x1
     i()	weight: 0
   U52(x1,x2)	weight: (/ 1 8) + x1 + x2
   U61(x1,x2)	weight: (/ 1 8) + x1
     e()	weight: 0
#a__U22(x1,x2)	weight: 0
#a__isPalListKind(x1)	weight: 0
   U31(x1,x2)	weight: x1 + x2
a__U71(x1,x2)	weight: (/ 3 8) + x1 + x2
a__isPal(x1)	weight: (/ 1 2) + x1
a__U61(x1,x2)	weight: (/ 1 8) + x1
#a__U41(x1,x2,x3)	weight: 0
    tt()	weight: 0
a__isQid(x1)	weight: 0
a__U23(x1)	weight: x1
#a__isList(x1)	weight: 0
   U22(x1,x2)	weight: x1 + x2
   U51(x1,x2,x3)	weight: (/ 1 8) + x1 + x2 + x3
a__and(x1,x2)	weight: x1 + x2
isPalListKind(x1)	weight: 0
   U53(x1)	weight: (/ 1 8) + x1
   U41(x1,x2,x3)	weight: (/ 1 8) + x1 + x2 + x3
#a__U32(x1)	weight: 0
    __(x1,x2)	weight: (/ 1 8) + x1 + x2
    Usable rules: { 1..100 }
    Removed DPs: #85
Number of SCCs: 1, DPs: 40, edges: 221
	SCC { #5 #6 #8 #9 #11..13 #18..21 #26 #28 #31 #32 #35..39 #41 #44 #45 #51..53 #55 #57 #66..70 #79..81 #83 #92 #94 #95 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a()	weight: 0
#a__isNePal(x1)	weight: (/ 1 8)
   U21(x1,x2,x3)	weight: (/ 1 8) + x1
#a__U72(x1)	weight: 0
#a__U71(x1,x2)	weight: (/ 1 4)
   U11(x1,x2)	weight: (/ 1 8) + x1
#a__U31(x1,x2)	weight: 0
#a__isNeList(x1)	weight: (/ 1 8)
isNeList(x1)	weight: (/ 1 8)
#a__U23(x1)	weight: 0
 isPal(x1)	weight: x1
   U42(x1,x2)	weight: x1 + x2
     u()	weight: 0
   U71(x1,x2)	weight: (/ 3 8) + x1 + x2
a__U62(x1)	weight: (/ 3 8)
   and(x1,x2)	weight: (/ 1 8) + x1 + x2
#a__U43(x1)	weight: 0
#a__isPal(x1)	weight: (/ 3 8)
   U43(x1)	weight: x1
#a__U51(x1,x2,x3)	weight: (/ 1 8)
   U23(x1)	weight: (/ 1 4) + x1
a__U22(x1,x2)	weight: (/ 1 4) + x1 + x2
isNePal(x1)	weight: x1
   U72(x1)	weight: (/ 1 4) + x1
#a__U11(x1,x2)	weight: (/ 1 8)
a__U31(x1,x2)	weight: (/ 3 8) + x1 + x2
a__U51(x1,x2,x3)	weight: (/ 1 2) + x1 + x2 + x3
#a____(x1,x2)	weight: 0
#a__U53(x1)	weight: 0
   U12(x1)	weight: (/ 1 4) + x1
a__U43(x1)	weight: (/ 1 4) + x1
 isQid(x1)	weight: 0
#a__U62(x1)	weight: 0
 a____(x1,x2)	weight: (/ 1 4)
#a__U42(x1,x2)	weight: (/ 1 8)
a__U41(x1,x2,x3)	weight: (/ 5 8) + x2 + x3
a__isList(x1)	weight: (/ 1 8)
a__isNeList(x1)	weight: (/ 1 2)
#a__U12(x1)	weight: 0
     o()	weight: 0
#a__U21(x1,x2,x3)	weight: (/ 1 8)
#a__U61(x1,x2)	weight: 0
#mark(x1)	weight: x1
isList(x1)	weight: (/ 1 8) + x1
#a__and(x1,x2)	weight: x2
a__U21(x1,x2,x3)	weight: x1 + x2 + x3
a__U32(x1)	weight: (/ 1 8) + x1
   nil()	weight: 0
   U62(x1)	weight: x1
#a__isQid(x1)	weight: 0
#a__U52(x1,x2)	weight: (/ 1 8)
  mark(x1)	weight: (/ 1 8)
a__U72(x1)	weight: (/ 1 8) + x1
a__isNePal(x1)	weight: (/ 1 4) + x1
a__U11(x1,x2)	weight: x1
a__isPalListKind(x1)	weight: (/ 1 8)
   U32(x1)	weight: (/ 1 8) + x1
a__U53(x1)	weight: (/ 1 8) + x1
a__U42(x1,x2)	weight: (/ 5 8) + x1 + x2
a__U52(x1,x2)	weight: (/ 1 8) + x1 + x2
a__U12(x1)	weight: (/ 1 8) + x1
     i()	weight: 0
   U52(x1,x2)	weight: x1 + x2
   U61(x1,x2)	weight: x1 + x2
     e()	weight: 0
#a__U22(x1,x2)	weight: (/ 1 8)
#a__isPalListKind(x1)	weight: (/ 1 8)
   U31(x1,x2)	weight: (/ 1 8) + x1 + x2
a__U71(x1,x2)	weight: (/ 1 4) + x1 + x2
a__isPal(x1)	weight: (/ 1 4) + x1
a__U61(x1,x2)	weight: (/ 1 4) + x1
#a__U41(x1,x2,x3)	weight: (/ 1 8)
    tt()	weight: 0
a__isQid(x1)	weight: (/ 1 4) + x1
a__U23(x1)	weight: (/ 1 8) + x1
#a__isList(x1)	weight: (/ 1 8)
   U22(x1,x2)	weight: (/ 1 8) + x1
   U51(x1,x2,x3)	weight: x1 + x2 + x3
a__and(x1,x2)	weight: (/ 1 8)
isPalListKind(x1)	weight: (/ 1 8)
   U53(x1)	weight: x1
   U41(x1,x2,x3)	weight: x1 + x2 + x3
#a__U32(x1)	weight: 0
    __(x1,x2)	weight: (/ 1 8)
    Usable rules: { }
    Removed DPs: #5 #6 #8 #11 #13 #28 #39 #51 #53
Number of SCCs: 1, DPs: 31, edges: 91
	SCC { #9 #12 #18..21 #26 #31 #32 #35..38 #41 #44 #45 #52 #55 #57 #66..70 #79..81 #83 #92 #94 #95 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a()	weight: 0
#a__isNePal(x1)	weight: (/ 1 16)
   U21(x1,x2,x3)	weight: (/ 3 16) + x1
#a__U72(x1)	weight: 0
#a__U71(x1,x2)	weight: (/ 1 8)
   U11(x1,x2)	weight: (/ 3 16) + x1
#a__U31(x1,x2)	weight: 0
#a__isNeList(x1)	weight: (/ 1 8)
isNeList(x1)	weight: (/ 3 16)
#a__U23(x1)	weight: 0
 isPal(x1)	weight: x1
   U42(x1,x2)	weight: x1 + x2
     u()	weight: 0
   U71(x1,x2)	weight: (/ 3 16) + x1 + x2
a__U62(x1)	weight: (/ 1 4)
   and(x1,x2)	weight: (/ 1 16) + x1 + x2
#a__U43(x1)	weight: 0
#a__isPal(x1)	weight: (/ 3 16)
   U43(x1)	weight: x1
#a__U51(x1,x2,x3)	weight: (/ 1 8)
   U23(x1)	weight: (/ 1 8) + x1
a__U22(x1,x2)	weight: (/ 1 4) + x1 + x2
isNePal(x1)	weight: x1
   U72(x1)	weight: (/ 1 8) + x1
#a__U11(x1,x2)	weight: (/ 1 8)
a__U31(x1,x2)	weight: (/ 5 16) + x1 + x2
a__U51(x1,x2,x3)	weight: (/ 3 8) + x1 + x2 + x3
#a____(x1,x2)	weight: 0
#a__U53(x1)	weight: 0
   U12(x1)	weight: (/ 1 8) + x1
a__U43(x1)	weight: (/ 1 16) + x1
 isQid(x1)	weight: 0
#a__U62(x1)	weight: 0
 a____(x1,x2)	weight: (/ 1 4)
#a__U42(x1,x2)	weight: (/ 1 8)
a__U41(x1,x2,x3)	weight: (/ 9 16) + x2 + x3
a__isList(x1)	weight: (/ 3 16)
a__isNeList(x1)	weight: (/ 1 2)
#a__U12(x1)	weight: 0
     o()	weight: 0
#a__U21(x1,x2,x3)	weight: (/ 1 8)
#a__U61(x1,x2)	weight: 0
#mark(x1)	weight: x1
isList(x1)	weight: (/ 3 16) + x1
#a__and(x1,x2)	weight: x2
a__U21(x1,x2,x3)	weight: x1 + x2 + x3
a__U32(x1)	weight: (/ 1 16) + x1
   nil()	weight: 0
   U62(x1)	weight: x1
#a__isQid(x1)	weight: 0
#a__U52(x1,x2)	weight: (/ 1 8)
  mark(x1)	weight: (/ 3 16)
a__U72(x1)	weight: (/ 1 16) + x1
a__isNePal(x1)	weight: (/ 1 4) + x1
a__U11(x1,x2)	weight: x1
a__isPalListKind(x1)	weight: (/ 3 16)
   U32(x1)	weight: (/ 1 16) + x1
a__U53(x1)	weight: (/ 1 16) + x1
a__U42(x1,x2)	weight: (/ 7 16) + x1 + x2
a__U52(x1,x2)	weight: (/ 1 16) + x1 + x2
a__U12(x1)	weight: (/ 1 16) + x1
     i()	weight: 0
   U52(x1,x2)	weight: x1 + x2
   U61(x1,x2)	weight: x1 + x2
     e()	weight: 0
#a__U22(x1,x2)	weight: (/ 1 8)
#a__isPalListKind(x1)	weight: (/ 1 16)
   U31(x1,x2)	weight: (/ 1 16) + x1 + x2
a__U71(x1,x2)	weight: (/ 1 8) + x1 + x2
a__isPal(x1)	weight: (/ 1 4) + x1
a__U61(x1,x2)	weight: (/ 1 8) + x1
#a__U41(x1,x2,x3)	weight: (/ 1 8)
    tt()	weight: 0
a__isQid(x1)	weight: (/ 1 4) + x1
a__U23(x1)	weight: (/ 1 16) + x1
#a__isList(x1)	weight: (/ 1 8)
   U22(x1,x2)	weight: (/ 3 16) + x1
   U51(x1,x2,x3)	weight: x1 + x2 + x3
a__and(x1,x2)	weight: (/ 3 16)
isPalListKind(x1)	weight: (/ 1 16)
   U53(x1)	weight: x1
   U41(x1,x2,x3)	weight: x1 + x2 + x3
#a__U32(x1)	weight: 0
    __(x1,x2)	weight: (/ 1 16)
    Usable rules: { }
    Removed DPs: #9 #12 #36..38 #52 #55 #67 #69 #70 #80 #81 #95
Number of SCCs: 2, DPs: 18, edges: 30
	SCC { #18 #19 #26 #83 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a()	weight: 0
#a__isNePal(x1)	weight: (/ 1 16)
   U21(x1,x2,x3)	weight: (/ 3 16) + x1
#a__U72(x1)	weight: 0
#a__U71(x1,x2)	weight: (/ 1 8)
   U11(x1,x2)	weight: (/ 3 16) + x1
#a__U31(x1,x2)	weight: 0
#a__isNeList(x1)	weight: (/ 1 8)
isNeList(x1)	weight: (/ 3 16)
#a__U23(x1)	weight: 0
 isPal(x1)	weight: x1
   U42(x1,x2)	weight: x1 + x2
     u()	weight: 0
   U71(x1,x2)	weight: (/ 3 16) + x1 + x2
a__U62(x1)	weight: (/ 1 4)
   and(x1,x2)	weight: (/ 1 16) + x1 + x2
#a__U43(x1)	weight: 0
#a__isPal(x1)	weight: (/ 3 16)
   U43(x1)	weight: x1
#a__U51(x1,x2,x3)	weight: (/ 1 8)
   U23(x1)	weight: (/ 1 8) + x1
a__U22(x1,x2)	weight: (/ 1 4) + x1 + x2
isNePal(x1)	weight: 0
   U72(x1)	weight: (/ 1 8) + x1
#a__U11(x1,x2)	weight: (/ 1 8)
a__U31(x1,x2)	weight: (/ 5 16) + x1 + x2
a__U51(x1,x2,x3)	weight: (/ 3 8) + x1 + x2 + x3
#a____(x1,x2)	weight: 0
#a__U53(x1)	weight: 0
   U12(x1)	weight: (/ 1 8) + x1
a__U43(x1)	weight: (/ 1 16) + x1
 isQid(x1)	weight: 0
#a__U62(x1)	weight: 0
 a____(x1,x2)	weight: (/ 1 4)
#a__U42(x1,x2)	weight: (/ 1 8)
a__U41(x1,x2,x3)	weight: (/ 9 16) + x2 + x3
a__isList(x1)	weight: (/ 3 16)
a__isNeList(x1)	weight: (/ 1 2)
#a__U12(x1)	weight: 0
     o()	weight: 0
#a__U21(x1,x2,x3)	weight: (/ 1 8)
#a__U61(x1,x2)	weight: 0
#mark(x1)	weight: x1
isList(x1)	weight: (/ 3 16) + x1
#a__and(x1,x2)	weight: (/ 1 16) + x2
a__U21(x1,x2,x3)	weight: x1 + x2 + x3
a__U32(x1)	weight: (/ 1 16) + x1
   nil()	weight: 0
   U62(x1)	weight: x1
#a__isQid(x1)	weight: 0
#a__U52(x1,x2)	weight: (/ 1 8)
  mark(x1)	weight: (/ 3 16)
a__U72(x1)	weight: (/ 1 16) + x1
a__isNePal(x1)	weight: (/ 1 4)
a__U11(x1,x2)	weight: x1
a__isPalListKind(x1)	weight: (/ 3 16)
   U32(x1)	weight: (/ 1 16) + x1
a__U53(x1)	weight: (/ 1 16) + x1
a__U42(x1,x2)	weight: (/ 7 16) + x1 + x2
a__U52(x1,x2)	weight: (/ 1 16) + x1 + x2
a__U12(x1)	weight: (/ 1 16) + x1
     i()	weight: 0
   U52(x1,x2)	weight: x1 + x2
   U61(x1,x2)	weight: x1 + x2
     e()	weight: 0
#a__U22(x1,x2)	weight: (/ 1 8)
#a__isPalListKind(x1)	weight: x1
   U31(x1,x2)	weight: (/ 1 16) + x1 + x2
a__U71(x1,x2)	weight: (/ 1 8) + x1 + x2
a__isPal(x1)	weight: (/ 1 4) + x1
a__U61(x1,x2)	weight: (/ 1 8) + x1
#a__U41(x1,x2,x3)	weight: (/ 1 8)
    tt()	weight: 0
a__isQid(x1)	weight: (/ 1 4) + x1
a__U23(x1)	weight: (/ 1 16) + x1
#a__isList(x1)	weight: (/ 1 8)
   U22(x1,x2)	weight: (/ 3 16) + x1
   U51(x1,x2,x3)	weight: x1 + x2 + x3
a__and(x1,x2)	weight: (/ 3 16)
isPalListKind(x1)	weight: (/ 1 16) + x1
   U53(x1)	weight: x1
   U41(x1,x2,x3)	weight: x1 + x2 + x3
#a__U32(x1)	weight: 0
    __(x1,x2)	weight: (/ 3 16) + x1 + x2
    Usable rules: { }
    Removed DPs: #18 #19 #26 #83
Number of SCCs: 1, DPs: 14, edges: 24
	SCC { #20 #21 #31 #32 #35 #41 #44 #45 #57 #66 #68 #79 #92 #94 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a()	weight: 0
#a__isNePal(x1)	weight: (/ 1 8)
   U21(x1,x2,x3)	weight: (/ 3 8) + x1
#a__U72(x1)	weight: 0
#a__U71(x1,x2)	weight: (/ 1 4)
   U11(x1,x2)	weight: (/ 3 8) + x1
#a__U31(x1,x2)	weight: 0
#a__isNeList(x1)	weight: x1
isNeList(x1)	weight: (/ 3 8)
#a__U23(x1)	weight: 0
 isPal(x1)	weight: x1
   U42(x1,x2)	weight: x1 + x2
     u()	weight: 0
   U71(x1,x2)	weight: (/ 3 8) + x1 + x2
a__U62(x1)	weight: (/ 3 8)
   and(x1,x2)	weight: (/ 1 8) + x1 + x2
#a__U43(x1)	weight: 0
#a__isPal(x1)	weight: (/ 3 8)
   U43(x1)	weight: x1
#a__U51(x1,x2,x3)	weight: (/ 1 2) + x2 + x3
   U23(x1)	weight: (/ 1 4) + x1
a__U22(x1,x2)	weight: (/ 1 4) + x1 + x2
isNePal(x1)	weight: 0
   U72(x1)	weight: (/ 1 4) + x1
#a__U11(x1,x2)	weight: (/ 1 8) + x2
a__U31(x1,x2)	weight: (/ 3 8) + x1 + x2
a__U51(x1,x2,x3)	weight: (/ 1 2) + x1 + x2 + x3
#a____(x1,x2)	weight: 0
#a__U53(x1)	weight: 0
   U12(x1)	weight: (/ 1 4) + x1
a__U43(x1)	weight: (/ 1 4) + x1
 isQid(x1)	weight: 0
#a__U62(x1)	weight: 0
 a____(x1,x2)	weight: (/ 5 8)
#a__U42(x1,x2)	weight: (/ 1 4) + x2
a__U41(x1,x2,x3)	weight: (/ 5 8) + x2 + x3
a__isList(x1)	weight: (/ 1 8)
a__isNeList(x1)	weight: (/ 1 2)
#a__U12(x1)	weight: 0
     o()	weight: 0
#a__U21(x1,x2,x3)	weight: (/ 1 2) + x2 + x3
#a__U61(x1,x2)	weight: 0
#mark(x1)	weight: 0
isList(x1)	weight: (/ 1 8) + x1
#a__and(x1,x2)	weight: (/ 1 8)
a__U21(x1,x2,x3)	weight: x1 + x2 + x3
a__U32(x1)	weight: (/ 1 8) + x1
   nil()	weight: 0
   U62(x1)	weight: x1
#a__isQid(x1)	weight: 0
#a__U52(x1,x2)	weight: (/ 3 8) + x2
  mark(x1)	weight: (/ 1 8)
a__U72(x1)	weight: (/ 1 8) + x1
a__isNePal(x1)	weight: (/ 1 4)
a__U11(x1,x2)	weight: x1
a__isPalListKind(x1)	weight: (/ 1 8)
   U32(x1)	weight: (/ 1 8) + x1
a__U53(x1)	weight: (/ 1 8) + x1
a__U42(x1,x2)	weight: (/ 5 8) + x1 + x2
a__U52(x1,x2)	weight: (/ 1 8) + x1 + x2
a__U12(x1)	weight: (/ 1 8) + x1
     i()	weight: 0
   U52(x1,x2)	weight: x1 + x2
   U61(x1,x2)	weight: x1 + x2
     e()	weight: 0
#a__U22(x1,x2)	weight: (/ 3 8) + x2
#a__isPalListKind(x1)	weight: 0
   U31(x1,x2)	weight: (/ 1 8) + x1 + x2
a__U71(x1,x2)	weight: (/ 1 4) + x1 + x2
a__isPal(x1)	weight: (/ 1 4) + x1
a__U61(x1,x2)	weight: (/ 1 4) + x1
#a__U41(x1,x2,x3)	weight: (/ 3 8) + x2 + x3
    tt()	weight: 0
a__isQid(x1)	weight: (/ 1 4) + x1
a__U23(x1)	weight: (/ 1 8) + x1
#a__isList(x1)	weight: (/ 1 4) + x1
   U22(x1,x2)	weight: (/ 1 4) + x1
   U51(x1,x2,x3)	weight: x1 + x2 + x3
a__and(x1,x2)	weight: (/ 1 8)
isPalListKind(x1)	weight: (/ 1 8) + x1
   U53(x1)	weight: x1
   U41(x1,x2,x3)	weight: x1 + x2 + x3
#a__U32(x1)	weight: 0
    __(x1,x2)	weight: (/ 5 8) + x1 + x2
    Usable rules: { }
    Removed DPs: #20 #21 #31 #32 #35 #41 #44 #45 #57 #66 #68 #79 #92 #94
Number of SCCs: 0, DPs: 0, edges: 0
