Input TRS:
    1: half(0()) -> 0()
    2: half(s(0())) -> 0()
    3: half(s(s(x))) -> s(half(x))
    4: le(0(),y) -> true()
    5: le(s(x),0()) -> false()
    6: le(s(x),s(y)) -> le(x,y)
    7: inc(0()) -> 0()
    8: inc(s(x)) -> s(inc(x))
    9: log(x) -> log2(x,0())
    10: log2(x,y) -> if(le(x,s(0())),x,inc(y))
    11: if(true(),x,s(y)) -> y
    12: if(false(),x,y) -> log2(half(x),y)
Number of strict rules: 12
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #le(s(x),s(y)) -> #le(x,y)
   #2: #log(x) -> #log2(x,0())
   #3: #if(false(),x,y) -> #log2(half(x),y)
   #4: #if(false(),x,y) -> #half(x)
   #5: #log2(x,y) -> #if(le(x,s(0())),x,inc(y))
   #6: #log2(x,y) -> #le(x,s(0()))
   #7: #log2(x,y) -> #inc(y)
   #8: #half(s(s(x))) -> #half(x)
   #9: #inc(s(x)) -> #inc(x)
Number of SCCs: 4, DPs: 5, edges: 5
	SCC { #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
#log2(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
 false()	weight: 0
 #log(x1)	weight: 0
#half(x1)	weight: 0
 #inc(x1)	weight: x1
   inc(x1)	weight: 0
  true()	weight: 0
  half(x1)	weight: 0
   log(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
  #if(x1,x2,x3)	weight: 0
  log2(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #9
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
#log2(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4) + x1
  #le(x1,x2)	weight: 0
 false()	weight: 0
 #log(x1)	weight: 0
#half(x1)	weight: x1
 #inc(x1)	weight: 0
   inc(x1)	weight: 0
  true()	weight: 0
  half(x1)	weight: 0
   log(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
  #if(x1,x2,x3)	weight: 0
  log2(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
#log2(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: x2
 false()	weight: 0
 #log(x1)	weight: 0
#half(x1)	weight: 0
 #inc(x1)	weight: 0
   inc(x1)	weight: 0
  true()	weight: 0
  half(x1)	weight: 0
   log(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
  #if(x1,x2,x3)	weight: 0
  log2(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #3 #5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
    le(x1,x2)	weight: max{0, (- (/ 1 16)) + x1}
#log2(x1,x2)	weight: max{0, (/ 1 8) + x1}
     s(x1)	weight: max{0, (/ 1 4) + x1}
  #le(x1,x2)	weight: 0
 false()	weight: (/ 1 16)
 #log(x1)	weight: 0
#half(x1)	weight: 0
 #inc(x1)	weight: 0
   inc(x1)	weight: max{0, (- (/ 1 16)) + x1}
  true()	weight: 0
  half(x1)	weight: max{0, (- (/ 3 16)) + x1}
   log(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
  #if(x1,x2,x3)	weight: max{0, (/ 1 8) + x1, (/ 1 16) + x2}
  log2(x1,x2)	weight: 0
    Usable rules: { 1..6 }
    Removed DPs: #3
Number of SCCs: 0, DPs: 0, edges: 0
