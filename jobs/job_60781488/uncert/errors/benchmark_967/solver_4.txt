Input TRS:
    1: f(X,n__g(X),Y) -> f(activate(Y),activate(Y),activate(Y))
    2: g(b()) -> c()
    3: b() -> c()
    4: g(X) -> n__g(X)
    5: activate(n__g(X)) -> g(X)
    6: activate(X) -> X
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #activate(n__g(X)) -> #g(X)
   #2: #f(X,n__g(X),Y) -> #f(activate(Y),activate(Y),activate(Y))
   #3: #f(X,n__g(X),Y) -> #activate(Y)
   #4: #f(X,n__g(X),Y) -> #activate(Y)
   #5: #f(X,n__g(X),Y) -> #activate(Y)
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
