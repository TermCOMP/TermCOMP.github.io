Input TRS:
    1: 0(\#()) -> \#()
    2: +(x,\#()) -> x
    3: +(\#(),x) -> x
    4: +(0(x),0(y)) -> 0(+(x,y))
    5: +(0(x),1(y)) -> 1(+(x,y))
    6: +(1(x),0(y)) -> 1(+(x,y))
    7: +(1(x),1(y)) -> 0(+(+(x,y),1(\#())))
    8: *(\#(),x) -> \#()
    9: *(0(x),y) -> 0(*(x,y))
    10: *(1(x),y) -> +(0(*(x,y)),y)
    11: sum(nil()) -> 0(\#())
    12: sum(cons(x,l)) -> +(x,sum(l))
    13: prod(nil()) -> 1(\#())
    14: prod(cons(x,l)) -> *(x,prod(l))
Number of strict rules: 14
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #+(1(x),0(y)) -> #+(x,y)
   #2: #*(0(x),y) -> #0(*(x,y))
   #3: #*(0(x),y) -> #*(x,y)
   #4: #sum(nil()) -> #0(\#())
   #5: #sum(cons(x,l)) -> #+(x,sum(l))
   #6: #sum(cons(x,l)) -> #sum(l)
   #7: #prod(cons(x,l)) -> #*(x,prod(l))
   #8: #prod(cons(x,l)) -> #prod(l)
   #9: #+(1(x),1(y)) -> #0(+(+(x,y),1(\#())))
   #10: #+(1(x),1(y)) -> #+(+(x,y),1(\#()))
   #11: #+(1(x),1(y)) -> #+(x,y)
   #12: #*(1(x),y) -> #+(0(*(x,y)),y)
   #13: #*(1(x),y) -> #0(*(x,y))
   #14: #*(1(x),y) -> #*(x,y)
   #15: #+(0(x),1(y)) -> #+(x,y)
   #16: #+(0(x),0(y)) -> #0(+(x,y))
   #17: #+(0(x),0(y)) -> #+(x,y)
Number of SCCs: 4, DPs: 9, edges: 29
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0(x1)	weight: 0
     1(x1)	weight: 0
  prod(x1)	weight: 0
#prod(x1)	weight: 0
   #*(x1,x2)	weight: 0
     \#()	weight: 0
   sum(x1)	weight: 0
     0(x1)	weight: 0
   nil()	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
     +(x1,x2)	weight: 0
 #sum(x1)	weight: x1
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 3, DPs: 8, edges: 28
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0(x1)	weight: 0
     1(x1)	weight: 0
  prod(x1)	weight: 0
#prod(x1)	weight: x1
   #*(x1,x2)	weight: 0
     \#()	weight: 0
   sum(x1)	weight: 0
     0(x1)	weight: 0
   nil()	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
     +(x1,x2)	weight: 0
 #sum(x1)	weight: 0
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 2, DPs: 7, edges: 27
	SCC { #3 #14 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0(x1)	weight: 0
     1(x1)	weight: (/ 1 2) + x1
  prod(x1)	weight: 0
#prod(x1)	weight: 0
   #*(x1,x2)	weight: x1
     \#()	weight: 0
   sum(x1)	weight: 0
     0(x1)	weight: (/ 1 2) + x1
   nil()	weight: 0
  cons(x1,x2)	weight: (/ 1 2)
     +(x1,x2)	weight: 0
 #sum(x1)	weight: 0
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #3 #14
Number of SCCs: 1, DPs: 5, edges: 23
	SCC { #1 #10 #11 #15 #17 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0(x1)	weight: 0
     1(x1)	weight: (/ 1 2) + x1
  prod(x1)	weight: 0
#prod(x1)	weight: 0
   #*(x1,x2)	weight: 0
     \#()	weight: 0
   sum(x1)	weight: 0
     0(x1)	weight: (/ 1 2) + x1
   nil()	weight: 0
  cons(x1,x2)	weight: (/ 1 2)
     +(x1,x2)	weight: (/ 1 2)
 #sum(x1)	weight: 0
   #+(x1,x2)	weight: x2
     *(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1 #11 #15 #17
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #10 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0(x1)	weight: 0
     1(x1)	weight: (/ 1 2) + x1
  prod(x1)	weight: 0
#prod(x1)	weight: 0
   #*(x1,x2)	weight: 0
     \#()	weight: 0
   sum(x1)	weight: 0
     0(x1)	weight: x1
   nil()	weight: 0
  cons(x1,x2)	weight: (/ 1 2)
     +(x1,x2)	weight: x1 + x2
 #sum(x1)	weight: 0
   #+(x1,x2)	weight: x1 + x2
     *(x1,x2)	weight: 0
    Usable rules: { 1..7 }
    Removed DPs: #10
Number of SCCs: 0, DPs: 0, edges: 0
