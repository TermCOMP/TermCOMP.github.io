Input TRS:
    1: cond(true(),x) -> cond(odd(x),p(x))
    2: odd(0()) -> false()
    3: odd(s(0())) -> true()
    4: odd(s(s(x))) -> odd(x)
    5: p(0()) -> 0()
    6: p(s(x)) -> x
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #cond(true(),x) -> #cond(odd(x),p(x))
   #2: #cond(true(),x) -> #odd(x)
   #3: #cond(true(),x) -> #p(x)
   #4: #odd(s(s(x))) -> #odd(x)
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 4) + x1
 false()	weight: 0
   #p(x1)	weight: 0
  true()	weight: 0
     p(x1)	weight: 0
#cond(x1,x2)	weight: 0
     0()	weight: 0
 #odd(x1)	weight: x1
   odd(x1)	weight: 0
  cond(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
     s(x1)	weight: max{0, (/ 3 8) + x1}
 false()	weight: (/ 1 8)
   #p(x1)	weight: 0
  true()	weight: (/ 1 2)
     p(x1)	weight: max{0, (- (/ 1 4)) + x1}
#cond(x1,x2)	weight: max{0, (- (/ 1 4)) + x1, (/ 1 8) + x2}
     0()	weight: 0
 #odd(x1)	weight: 0
   odd(x1)	weight: max{0, (/ 1 8) + x1}
  cond(x1,x2)	weight: 0
    Usable rules: { 2..6 }
    Removed DPs: #1
Number of SCCs: 0, DPs: 0, edges: 0
