Input TRS:
    1: U101(tt(),M,N) -> U102(isNatKind(activate(M)),activate(M),activate(N))
    2: U102(tt(),M,N) -> U103(isNat(activate(N)),activate(M),activate(N))
    3: U103(tt(),M,N) -> U104(isNatKind(activate(N)),activate(M),activate(N))
    4: U104(tt(),M,N) -> plus(x(activate(N),activate(M)),activate(N))
    5: U11(tt(),V1,V2) -> U12(isNatKind(activate(V1)),activate(V1),activate(V2))
    6: U12(tt(),V1,V2) -> U13(isNatKind(activate(V2)),activate(V1),activate(V2))
    7: U13(tt(),V1,V2) -> U14(isNatKind(activate(V2)),activate(V1),activate(V2))
    8: U14(tt(),V1,V2) -> U15(isNat(activate(V1)),activate(V2))
    9: U15(tt(),V2) -> U16(isNat(activate(V2)))
    10: U16(tt()) -> tt()
    11: U21(tt(),V1) -> U22(isNatKind(activate(V1)),activate(V1))
    12: U22(tt(),V1) -> U23(isNat(activate(V1)))
    13: U23(tt()) -> tt()
    14: U31(tt(),V1,V2) -> U32(isNatKind(activate(V1)),activate(V1),activate(V2))
    15: U32(tt(),V1,V2) -> U33(isNatKind(activate(V2)),activate(V1),activate(V2))
    16: U33(tt(),V1,V2) -> U34(isNatKind(activate(V2)),activate(V1),activate(V2))
    17: U34(tt(),V1,V2) -> U35(isNat(activate(V1)),activate(V2))
    18: U35(tt(),V2) -> U36(isNat(activate(V2)))
    19: U36(tt()) -> tt()
    20: U41(tt(),V2) -> U42(isNatKind(activate(V2)))
    21: U42(tt()) -> tt()
    22: U51(tt()) -> tt()
    23: U61(tt(),V2) -> U62(isNatKind(activate(V2)))
    24: U62(tt()) -> tt()
    25: U71(tt(),N) -> U72(isNatKind(activate(N)),activate(N))
    26: U72(tt(),N) -> activate(N)
    27: U81(tt(),M,N) -> U82(isNatKind(activate(M)),activate(M),activate(N))
    28: U82(tt(),M,N) -> U83(isNat(activate(N)),activate(M),activate(N))
    29: U83(tt(),M,N) -> U84(isNatKind(activate(N)),activate(M),activate(N))
    30: U84(tt(),M,N) -> s(plus(activate(N),activate(M)))
    31: U91(tt(),N) -> U92(isNatKind(activate(N)))
    32: U92(tt()) -> 0()
    33: isNat(n__0()) -> tt()
    34: isNat(n__plus(V1,V2)) -> U11(isNatKind(activate(V1)),activate(V1),activate(V2))
    35: isNat(n__s(V1)) -> U21(isNatKind(activate(V1)),activate(V1))
    36: isNat(n__x(V1,V2)) -> U31(isNatKind(activate(V1)),activate(V1),activate(V2))
    37: isNatKind(n__0()) -> tt()
    38: isNatKind(n__plus(V1,V2)) -> U41(isNatKind(activate(V1)),activate(V2))
    39: isNatKind(n__s(V1)) -> U51(isNatKind(activate(V1)))
    40: isNatKind(n__x(V1,V2)) -> U61(isNatKind(activate(V1)),activate(V2))
    41: plus(N,0()) -> U71(isNat(N),N)
    42: plus(N,s(M)) -> U81(isNat(M),M,N)
    43: x(N,0()) -> U91(isNat(N),N)
    44: x(N,s(M)) -> U101(isNat(M),M,N)
    45: 0() -> n__0()
    46: plus(X1,X2) -> n__plus(X1,X2)
    47: s(X) -> n__s(X)
    48: x(X1,X2) -> n__x(X1,X2)
    49: activate(n__0()) -> 0()
    50: activate(n__plus(X1,X2)) -> plus(X1,X2)
    51: activate(n__s(X)) -> s(X)
    52: activate(n__x(X1,X2)) -> x(X1,X2)
    53: activate(X) -> X
Number of strict rules: 53
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #U102(tt(),M,N) -> #U103(isNat(activate(N)),activate(M),activate(N))
   #2: #U102(tt(),M,N) -> #isNat(activate(N))
   #3: #U102(tt(),M,N) -> #activate(N)
   #4: #U102(tt(),M,N) -> #activate(M)
   #5: #U102(tt(),M,N) -> #activate(N)
   #6: #x(N,0()) -> #U91(isNat(N),N)
   #7: #x(N,0()) -> #isNat(N)
   #8: #U83(tt(),M,N) -> #U84(isNatKind(activate(N)),activate(M),activate(N))
   #9: #U83(tt(),M,N) -> #isNatKind(activate(N))
   #10: #U83(tt(),M,N) -> #activate(N)
   #11: #U83(tt(),M,N) -> #activate(M)
   #12: #U83(tt(),M,N) -> #activate(N)
   #13: #isNat(n__s(V1)) -> #U21(isNatKind(activate(V1)),activate(V1))
   #14: #isNat(n__s(V1)) -> #isNatKind(activate(V1))
   #15: #isNat(n__s(V1)) -> #activate(V1)
   #16: #isNat(n__s(V1)) -> #activate(V1)
   #17: #plus(N,s(M)) -> #U81(isNat(M),M,N)
   #18: #plus(N,s(M)) -> #isNat(M)
   #19: #plus(N,0()) -> #U71(isNat(N),N)
   #20: #plus(N,0()) -> #isNat(N)
   #21: #isNatKind(n__plus(V1,V2)) -> #U41(isNatKind(activate(V1)),activate(V2))
   #22: #isNatKind(n__plus(V1,V2)) -> #isNatKind(activate(V1))
   #23: #isNatKind(n__plus(V1,V2)) -> #activate(V1)
   #24: #isNatKind(n__plus(V1,V2)) -> #activate(V2)
   #25: #U12(tt(),V1,V2) -> #U13(isNatKind(activate(V2)),activate(V1),activate(V2))
   #26: #U12(tt(),V1,V2) -> #isNatKind(activate(V2))
   #27: #U12(tt(),V1,V2) -> #activate(V2)
   #28: #U12(tt(),V1,V2) -> #activate(V1)
   #29: #U12(tt(),V1,V2) -> #activate(V2)
   #30: #isNatKind(n__x(V1,V2)) -> #U61(isNatKind(activate(V1)),activate(V2))
   #31: #isNatKind(n__x(V1,V2)) -> #isNatKind(activate(V1))
   #32: #isNatKind(n__x(V1,V2)) -> #activate(V1)
   #33: #isNatKind(n__x(V1,V2)) -> #activate(V2)
   #34: #activate(n__s(X)) -> #s(X)
   #35: #U15(tt(),V2) -> #U16(isNat(activate(V2)))
   #36: #U15(tt(),V2) -> #isNat(activate(V2))
   #37: #U15(tt(),V2) -> #activate(V2)
   #38: #U21(tt(),V1) -> #U22(isNatKind(activate(V1)),activate(V1))
   #39: #U21(tt(),V1) -> #isNatKind(activate(V1))
   #40: #U21(tt(),V1) -> #activate(V1)
   #41: #U21(tt(),V1) -> #activate(V1)
   #42: #U61(tt(),V2) -> #U62(isNatKind(activate(V2)))
   #43: #U61(tt(),V2) -> #isNatKind(activate(V2))
   #44: #U61(tt(),V2) -> #activate(V2)
   #45: #U22(tt(),V1) -> #U23(isNat(activate(V1)))
   #46: #U22(tt(),V1) -> #isNat(activate(V1))
   #47: #U22(tt(),V1) -> #activate(V1)
   #48: #U91(tt(),N) -> #U92(isNatKind(activate(N)))
   #49: #U91(tt(),N) -> #isNatKind(activate(N))
   #50: #U91(tt(),N) -> #activate(N)
   #51: #U31(tt(),V1,V2) -> #U32(isNatKind(activate(V1)),activate(V1),activate(V2))
   #52: #U31(tt(),V1,V2) -> #isNatKind(activate(V1))
   #53: #U31(tt(),V1,V2) -> #activate(V1)
   #54: #U31(tt(),V1,V2) -> #activate(V1)
   #55: #U31(tt(),V1,V2) -> #activate(V2)
   #56: #U84(tt(),M,N) -> #s(plus(activate(N),activate(M)))
   #57: #U84(tt(),M,N) -> #plus(activate(N),activate(M))
   #58: #U84(tt(),M,N) -> #activate(N)
   #59: #U84(tt(),M,N) -> #activate(M)
   #60: #activate(n__x(X1,X2)) -> #x(X1,X2)
   #61: #activate(n__0()) -> #0()
   #62: #U71(tt(),N) -> #U72(isNatKind(activate(N)),activate(N))
   #63: #U71(tt(),N) -> #isNatKind(activate(N))
   #64: #U71(tt(),N) -> #activate(N)
   #65: #U71(tt(),N) -> #activate(N)
   #66: #U41(tt(),V2) -> #U42(isNatKind(activate(V2)))
   #67: #U41(tt(),V2) -> #isNatKind(activate(V2))
   #68: #U41(tt(),V2) -> #activate(V2)
   #69: #U13(tt(),V1,V2) -> #U14(isNatKind(activate(V2)),activate(V1),activate(V2))
   #70: #U13(tt(),V1,V2) -> #isNatKind(activate(V2))
   #71: #U13(tt(),V1,V2) -> #activate(V2)
   #72: #U13(tt(),V1,V2) -> #activate(V1)
   #73: #U13(tt(),V1,V2) -> #activate(V2)
   #74: #isNatKind(n__s(V1)) -> #U51(isNatKind(activate(V1)))
   #75: #isNatKind(n__s(V1)) -> #isNatKind(activate(V1))
   #76: #isNatKind(n__s(V1)) -> #activate(V1)
   #77: #U11(tt(),V1,V2) -> #U12(isNatKind(activate(V1)),activate(V1),activate(V2))
   #78: #U11(tt(),V1,V2) -> #isNatKind(activate(V1))
   #79: #U11(tt(),V1,V2) -> #activate(V1)
   #80: #U11(tt(),V1,V2) -> #activate(V1)
   #81: #U11(tt(),V1,V2) -> #activate(V2)
   #82: #x(N,s(M)) -> #U101(isNat(M),M,N)
   #83: #x(N,s(M)) -> #isNat(M)
   #84: #U82(tt(),M,N) -> #U83(isNat(activate(N)),activate(M),activate(N))
   #85: #U82(tt(),M,N) -> #isNat(activate(N))
   #86: #U82(tt(),M,N) -> #activate(N)
   #87: #U82(tt(),M,N) -> #activate(M)
   #88: #U82(tt(),M,N) -> #activate(N)
   #89: #isNat(n__plus(V1,V2)) -> #U11(isNatKind(activate(V1)),activate(V1),activate(V2))
   #90: #isNat(n__plus(V1,V2)) -> #isNatKind(activate(V1))
   #91: #isNat(n__plus(V1,V2)) -> #activate(V1)
   #92: #isNat(n__plus(V1,V2)) -> #activate(V1)
   #93: #isNat(n__plus(V1,V2)) -> #activate(V2)
   #94: #U81(tt(),M,N) -> #U82(isNatKind(activate(M)),activate(M),activate(N))
   #95: #U81(tt(),M,N) -> #isNatKind(activate(M))
   #96: #U81(tt(),M,N) -> #activate(M)
   #97: #U81(tt(),M,N) -> #activate(M)
   #98: #U81(tt(),M,N) -> #activate(N)
   #99: #U34(tt(),V1,V2) -> #U35(isNat(activate(V1)),activate(V2))
   #100: #U34(tt(),V1,V2) -> #isNat(activate(V1))
   #101: #U34(tt(),V1,V2) -> #activate(V1)
   #102: #U34(tt(),V1,V2) -> #activate(V2)
   #103: #U92(tt()) -> #0()
   #104: #U72(tt(),N) -> #activate(N)
   #105: #isNat(n__x(V1,V2)) -> #U31(isNatKind(activate(V1)),activate(V1),activate(V2))
   #106: #isNat(n__x(V1,V2)) -> #isNatKind(activate(V1))
   #107: #isNat(n__x(V1,V2)) -> #activate(V1)
   #108: #isNat(n__x(V1,V2)) -> #activate(V1)
   #109: #isNat(n__x(V1,V2)) -> #activate(V2)
   #110: #U33(tt(),V1,V2) -> #U34(isNatKind(activate(V2)),activate(V1),activate(V2))
   #111: #U33(tt(),V1,V2) -> #isNatKind(activate(V2))
   #112: #U33(tt(),V1,V2) -> #activate(V2)
   #113: #U33(tt(),V1,V2) -> #activate(V1)
   #114: #U33(tt(),V1,V2) -> #activate(V2)
   #115: #U103(tt(),M,N) -> #U104(isNatKind(activate(N)),activate(M),activate(N))
   #116: #U103(tt(),M,N) -> #isNatKind(activate(N))
   #117: #U103(tt(),M,N) -> #activate(N)
   #118: #U103(tt(),M,N) -> #activate(M)
   #119: #U103(tt(),M,N) -> #activate(N)
   #120: #U101(tt(),M,N) -> #U102(isNatKind(activate(M)),activate(M),activate(N))
   #121: #U101(tt(),M,N) -> #isNatKind(activate(M))
   #122: #U101(tt(),M,N) -> #activate(M)
   #123: #U101(tt(),M,N) -> #activate(M)
   #124: #U101(tt(),M,N) -> #activate(N)
   #125: #U14(tt(),V1,V2) -> #U15(isNat(activate(V1)),activate(V2))
   #126: #U14(tt(),V1,V2) -> #isNat(activate(V1))
   #127: #U14(tt(),V1,V2) -> #activate(V1)
   #128: #U14(tt(),V1,V2) -> #activate(V2)
   #129: #U32(tt(),V1,V2) -> #U33(isNatKind(activate(V2)),activate(V1),activate(V2))
   #130: #U32(tt(),V1,V2) -> #isNatKind(activate(V2))
   #131: #U32(tt(),V1,V2) -> #activate(V2)
   #132: #U32(tt(),V1,V2) -> #activate(V1)
   #133: #U32(tt(),V1,V2) -> #activate(V2)
   #134: #U104(tt(),M,N) -> #plus(x(activate(N),activate(M)),activate(N))
   #135: #U104(tt(),M,N) -> #x(activate(N),activate(M))
   #136: #U104(tt(),M,N) -> #activate(N)
   #137: #U104(tt(),M,N) -> #activate(M)
   #138: #U104(tt(),M,N) -> #activate(N)
   #139: #activate(n__plus(X1,X2)) -> #plus(X1,X2)
   #140: #U35(tt(),V2) -> #U36(isNat(activate(V2)))
   #141: #U35(tt(),V2) -> #isNat(activate(V2))
   #142: #U35(tt(),V2) -> #activate(V2)
Number of SCCs: 1, DPs: 131, edges: 619
	SCC { #1..33 #36..41 #43 #44 #46 #47 #49..55 #57..60 #62..65 #67..73 #75..102 #104..139 #141 #142 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
   #0()	weight: 0
 #U72(x1,x2)	weight: max{0, x2}
 #U32(x1,x2,x3)	weight: max{x3, x2, (/ 1 8) + x1}
isNatKind(x1)	weight: (/ 1 8)
   U16(x1)	weight: (/ 1 2)
   U21(x1,x2)	weight: 0
 #U83(x1,x2,x3)	weight: max{0, x3, x2}
   U11(x1,x2,x3)	weight: max{(/ 1 8) + x3, (/ 1 8) + x2, x1}
     s(x1)	weight: x1
#isNat(x1)	weight: x1
   U42(x1)	weight: (/ 1 8)
   U91(x1,x2)	weight: 0
 #U35(x1,x2)	weight: max{0, x2}
#U101(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
activate(x1)	weight: x1
 #U82(x1,x2,x3)	weight: max{0, x3, x2}
#U104(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
   U71(x1,x2)	weight: max{0, x2}
 #U81(x1,x2,x3)	weight: max{0, x3, x2}
 #U92(x1)	weight: 0
#plus(x1,x2)	weight: max{x2, x1}
  U101(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
#activate(x1)	weight: x1
  U103(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
 #U23(x1)	weight: 0
   U84(x1,x2,x3)	weight: max{0, x3, x2}
   U23(x1)	weight: (/ 1 8) + x1
   U35(x1,x2)	weight: max{(/ 7 8) + x2, (/ 5 8) + x1}
   U72(x1,x2)	weight: max{0, x2}
 #U13(x1,x2,x3)	weight: max{0, x3, x2}
   U34(x1,x2,x3)	weight: max{0, (/ 1 2) + x2}
#U103(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
   U12(x1,x2,x3)	weight: 0
 #U33(x1,x2,x3)	weight: max{0, x3, x2}
     x(x1,x2)	weight: max{(/ 3 8) + x2, x1}
 #U16(x1)	weight: 0
  n__s(x1)	weight: x1
  U104(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
 #U42(x1)	weight: 0
 #U12(x1,x2,x3)	weight: max{0, x3, x2}
 #U62(x1)	weight: 0
   U83(x1,x2,x3)	weight: max{0, x3, x2}
     0()	weight: 0
 #U14(x1,x2,x3)	weight: max{0, x3, x2}
 #U36(x1)	weight: 0
   U36(x1)	weight: (/ 7 8)
#U102(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
   #x(x1,x2)	weight: max{(/ 3 8) + x2, x1}
   #s(x1)	weight: 0
   U62(x1)	weight: (/ 1 8)
n__plus(x1,x2)	weight: max{x2, x1}
 #U15(x1,x2)	weight: max{0, x2}
   U32(x1,x2,x3)	weight: max{0, (/ 1 4) + x2, (/ 1 8) + x1}
   U33(x1,x2,x3)	weight: max{0, (/ 1 2) + x3, (/ 1 4) + x1}
  n__0()	weight: 0
 #U34(x1,x2,x3)	weight: max{0, x3, x2}
   U14(x1,x2,x3)	weight: max{0, x3, (/ 1 8) + x2}
 isNat(x1)	weight: 0
  n__x(x1,x2)	weight: max{(/ 3 8) + x2, x1}
  plus(x1,x2)	weight: max{x2, x1}
   U15(x1,x2)	weight: max{(/ 1 2) + x2, (/ 1 4) + x1}
   U61(x1,x2)	weight: max{0, x1}
 #U51(x1)	weight: 0
 #U11(x1,x2,x3)	weight: max{0, x3, x2}
   U31(x1,x2,x3)	weight: max{0, (/ 1 8) + x2}
   U92(x1)	weight: 0
 #U41(x1,x2)	weight: max{0, x2}
  U102(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
 #U21(x1,x2)	weight: max{0, x2}
   U81(x1,x2,x3)	weight: max{0, x3, x2}
   U82(x1,x2,x3)	weight: max{0, x3, x2}
 #U22(x1,x2)	weight: max{0, x2}
    tt()	weight: (/ 1 8)
 #U84(x1,x2,x3)	weight: max{0, x3, x2}
 #U71(x1,x2)	weight: max{0, x2}
   U13(x1,x2,x3)	weight: max{0, (/ 1 8) + x2, x1}
   U22(x1,x2)	weight: 0
   U51(x1)	weight: (/ 1 8)
#isNatKind(x1)	weight: x1
   U41(x1,x2)	weight: max{0, x1}
 #U31(x1,x2,x3)	weight: max{(/ 1 8) + x3, x2, (/ 1 4) + x1}
 #U91(x1,x2)	weight: max{0, x2}
 #U61(x1,x2)	weight: max{x2, x1}
    Usable rules: { 1..4 20..32 37..53 }
    Removed DPs: #4 #30 #33 #55 #83 #109 #118 #121..123 #137
Number of SCCs: 1, DPs: 118, edges: 508
	SCC { #1..3 #5..29 #31 #32 #36..41 #46 #47 #49..54 #57..60 #62..65 #67..73 #75..82 #84..102 #104..108 #110..117 #119 #120 #124..136 #138 #139 #141 #142 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
   #0()	weight: 0
 #U72(x1,x2)	weight: max{0, (/ 1 8) + x2}
 #U32(x1,x2,x3)	weight: max{(/ 3 8) + x3, (/ 1 8) + x2, (/ 3 8) + x1}
isNatKind(x1)	weight: (/ 1 8)
   U16(x1)	weight: (/ 1 2)
   U21(x1,x2)	weight: 0
 #U83(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 8) + x2}
   U11(x1,x2,x3)	weight: max{(/ 1 8) + x3, (/ 1 8) + x2, x1}
     s(x1)	weight: x1
#isNat(x1)	weight: (/ 1 8) + x1
   U42(x1)	weight: (/ 1 8)
   U91(x1,x2)	weight: 0
 #U35(x1,x2)	weight: max{0, (/ 1 4) + x2}
#U101(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 2) + x2}
activate(x1)	weight: x1
 #U82(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 8) + x2}
#U104(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 2) + x2}
   U71(x1,x2)	weight: max{0, x2}
 #U81(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 8) + x2}
 #U92(x1)	weight: 0
#plus(x1,x2)	weight: max{(/ 1 8) + x2, (/ 1 8) + x1}
  U101(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
#activate(x1)	weight: (/ 1 8) + x1
  U103(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
 #U23(x1)	weight: 0
   U84(x1,x2,x3)	weight: max{0, x3, x2}
   U23(x1)	weight: (/ 1 8) + x1
   U35(x1,x2)	weight: max{(/ 7 8) + x2, (/ 5 8) + x1}
   U72(x1,x2)	weight: max{0, x2}
 #U13(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 8) + x2}
   U34(x1,x2,x3)	weight: max{0, (/ 1 2) + x2}
#U103(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 2) + x2}
   U12(x1,x2,x3)	weight: 0
 #U33(x1,x2,x3)	weight: max{0, (/ 3 8) + x3, (/ 1 8) + x2}
     x(x1,x2)	weight: max{(/ 3 8) + x2, x1}
 #U16(x1)	weight: 0
  n__s(x1)	weight: x1
  U104(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
 #U42(x1)	weight: 0
 #U12(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 8) + x2}
 #U62(x1)	weight: 0
   U83(x1,x2,x3)	weight: max{0, x3, x2}
     0()	weight: 0
 #U14(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 8) + x2}
 #U36(x1)	weight: 0
   U36(x1)	weight: (/ 7 8)
#U102(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 2) + x2}
   #x(x1,x2)	weight: max{(/ 1 2) + x2, (/ 1 8) + x1}
   #s(x1)	weight: 0
   U62(x1)	weight: (/ 1 8)
n__plus(x1,x2)	weight: max{x2, x1}
 #U15(x1,x2)	weight: max{0, (/ 1 8) + x2}
   U32(x1,x2,x3)	weight: max{0, (/ 1 4) + x2, (/ 1 8) + x1}
   U33(x1,x2,x3)	weight: max{0, (/ 1 2) + x3, (/ 1 4) + x1}
  n__0()	weight: 0
 #U34(x1,x2,x3)	weight: max{0, (/ 3 8) + x3, (/ 1 8) + x2}
   U14(x1,x2,x3)	weight: max{0, x3, (/ 1 8) + x2}
 isNat(x1)	weight: 0
  n__x(x1,x2)	weight: max{(/ 3 8) + x2, x1}
  plus(x1,x2)	weight: max{x2, x1}
   U15(x1,x2)	weight: max{(/ 1 2) + x2, (/ 1 4) + x1}
   U61(x1,x2)	weight: max{0, x1}
 #U51(x1)	weight: 0
 #U11(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 8) + x2}
   U31(x1,x2,x3)	weight: max{0, (/ 1 8) + x2}
   U92(x1)	weight: 0
 #U41(x1,x2)	weight: max{0, (/ 1 8) + x2}
  U102(x1,x2,x3)	weight: max{0, x3, (/ 3 8) + x2}
 #U21(x1,x2)	weight: max{0, (/ 1 8) + x2}
   U81(x1,x2,x3)	weight: max{0, x3, x2}
   U82(x1,x2,x3)	weight: max{0, x3, x2}
 #U22(x1,x2)	weight: max{0, (/ 1 8) + x2}
    tt()	weight: (/ 1 8)
 #U84(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 8) + x2}
 #U71(x1,x2)	weight: max{0, (/ 1 8) + x2}
   U13(x1,x2,x3)	weight: max{0, (/ 1 8) + x2, x1}
   U22(x1,x2)	weight: 0
   U51(x1)	weight: (/ 1 8)
#isNatKind(x1)	weight: (/ 1 8) + x1
   U41(x1,x2)	weight: max{0, x1}
 #U31(x1,x2,x3)	weight: max{(/ 1 2) + x3, (/ 1 8) + x2, (/ 3 8) + x1}
 #U91(x1,x2)	weight: max{0, (/ 1 8) + x2}
 #U61(x1,x2)	weight: max{x2, x1}
    Usable rules: { 1..4 20..32 37..53 }
    Removed DPs: #99 #102 #111 #112 #114 #130 #131 #133 #141 #142
Number of SCCs: 1, DPs: 108, edges: 457
	SCC { #1..3 #5..29 #31 #32 #36..41 #46 #47 #49..54 #57..60 #62..65 #67..73 #75..82 #84..98 #100 #101 #104..108 #110 #113 #115..117 #119 #120 #124..129 #132 #134..136 #138 #139 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
   #0()	weight: 0
 #U72(x1,x2)	weight: max{0, (/ 1 16) + x2}
 #U32(x1,x2,x3)	weight: max{(/ 1 2) + x3, (/ 1 4) + x2, (/ 5 16) + x1}
isNatKind(x1)	weight: (/ 1 16)
   U16(x1)	weight: (/ 1 4)
   U21(x1,x2)	weight: 0
 #U83(x1,x2,x3)	weight: max{0, (/ 1 16) + x3, (/ 1 16) + x2}
   U11(x1,x2,x3)	weight: max{(/ 1 16) + x3, (/ 1 16) + x2, x1}
     s(x1)	weight: x1
#isNat(x1)	weight: (/ 1 16) + x1
   U42(x1)	weight: (/ 1 16)
   U91(x1,x2)	weight: 0
 #U35(x1,x2)	weight: max{0, (/ 1 8) + x2}
#U101(x1,x2,x3)	weight: max{0, (/ 5 8) + x3, (/ 3 4) + x2}
activate(x1)	weight: x1
 #U82(x1,x2,x3)	weight: max{0, (/ 1 16) + x3, (/ 1 16) + x2}
#U104(x1,x2,x3)	weight: max{0, (/ 5 8) + x3, (/ 3 4) + x2}
   U71(x1,x2)	weight: max{0, x2}
 #U81(x1,x2,x3)	weight: max{0, (/ 1 16) + x3, (/ 1 16) + x2}
 #U92(x1)	weight: 0
#plus(x1,x2)	weight: max{(/ 1 16) + x2, (/ 1 16) + x1}
  U101(x1,x2,x3)	weight: max{0, (/ 9 16) + x3, (/ 11 16) + x2}
#activate(x1)	weight: (/ 1 16) + x1
  U103(x1,x2,x3)	weight: max{0, (/ 9 16) + x3, (/ 11 16) + x2}
 #U23(x1)	weight: 0
   U84(x1,x2,x3)	weight: max{0, x3, x2}
   U23(x1)	weight: (/ 1 16) + x1
   U35(x1,x2)	weight: max{(/ 7 16) + x2, (/ 5 16) + x1}
   U72(x1,x2)	weight: max{0, x2}
 #U13(x1,x2,x3)	weight: max{0, (/ 1 16) + x3, (/ 1 16) + x2}
   U34(x1,x2,x3)	weight: max{0, (/ 1 4) + x2}
#U103(x1,x2,x3)	weight: max{0, (/ 5 8) + x3, (/ 3 4) + x2}
   U12(x1,x2,x3)	weight: 0
 #U33(x1,x2,x3)	weight: max{0, (/ 5 16) + x3, (/ 3 16) + x2}
     x(x1,x2)	weight: max{(/ 11 16) + x2, (/ 9 16) + x1}
 #U16(x1)	weight: 0
  n__s(x1)	weight: x1
  U104(x1,x2,x3)	weight: max{0, (/ 9 16) + x3, (/ 11 16) + x2}
 #U42(x1)	weight: 0
 #U12(x1,x2,x3)	weight: max{0, (/ 1 16) + x3, (/ 1 16) + x2}
 #U62(x1)	weight: 0
   U83(x1,x2,x3)	weight: max{0, x3, x2}
     0()	weight: 0
 #U14(x1,x2,x3)	weight: max{0, (/ 1 16) + x3, (/ 1 16) + x2}
 #U36(x1)	weight: 0
   U36(x1)	weight: (/ 7 16)
#U102(x1,x2,x3)	weight: max{0, (/ 5 8) + x3, (/ 3 4) + x2}
   #x(x1,x2)	weight: max{(/ 3 4) + x2, (/ 5 8) + x1}
   #s(x1)	weight: 0
   U62(x1)	weight: (/ 1 16)
n__plus(x1,x2)	weight: max{x2, x1}
 #U15(x1,x2)	weight: max{0, (/ 1 16) + x2}
   U32(x1,x2,x3)	weight: max{0, (/ 1 8) + x2, (/ 1 16) + x1}
   U33(x1,x2,x3)	weight: max{0, (/ 1 4) + x3, (/ 1 8) + x1}
  n__0()	weight: 0
 #U34(x1,x2,x3)	weight: max{0, (/ 1 4) + x3, (/ 1 8) + x2}
   U14(x1,x2,x3)	weight: max{0, x3, (/ 1 16) + x2}
 isNat(x1)	weight: 0
  n__x(x1,x2)	weight: max{(/ 11 16) + x2, (/ 9 16) + x1}
  plus(x1,x2)	weight: max{x2, x1}
   U15(x1,x2)	weight: max{(/ 1 4) + x2, (/ 1 8) + x1}
   U61(x1,x2)	weight: max{0, x1}
 #U51(x1)	weight: 0
 #U11(x1,x2,x3)	weight: max{0, (/ 1 16) + x3, (/ 1 16) + x2}
   U31(x1,x2,x3)	weight: max{0, (/ 1 16) + x2}
   U92(x1)	weight: 0
 #U41(x1,x2)	weight: max{0, (/ 1 16) + x2}
  U102(x1,x2,x3)	weight: max{0, (/ 9 16) + x3, (/ 11 16) + x2}
 #U21(x1,x2)	weight: max{0, (/ 1 16) + x2}
   U81(x1,x2,x3)	weight: max{0, x3, x2}
   U82(x1,x2,x3)	weight: max{0, x3, x2}
 #U22(x1,x2)	weight: max{0, (/ 1 16) + x2}
    tt()	weight: (/ 1 16)
 #U84(x1,x2,x3)	weight: max{0, (/ 1 16) + x3, (/ 1 16) + x2}
 #U71(x1,x2)	weight: max{0, (/ 1 16) + x2}
   U13(x1,x2,x3)	weight: max{0, (/ 1 16) + x2, x1}
   U22(x1,x2)	weight: 0
   U51(x1)	weight: (/ 1 16)
#isNatKind(x1)	weight: (/ 1 16) + x1
   U41(x1,x2)	weight: max{0, x1}
 #U31(x1,x2,x3)	weight: max{(/ 11 16) + x3, (/ 7 16) + x2, (/ 1 2) + x1}
 #U91(x1,x2)	weight: max{0, (/ 1 8) + x2}
 #U61(x1,x2)	weight: max{x2, x1}
    Usable rules: { 1..4 20..32 37..53 }
    Removed DPs: #2 #3 #5..7 #31 #32 #49..54 #100 #101 #105..108 #110 #113 #116 #117 #119 #124 #129 #132 #136 #138
Number of SCCs: 1, DPs: 79, edges: 273
	SCC { #1 #8..29 #36..41 #46 #47 #57..60 #62..65 #67..73 #75..82 #84..98 #104 #115 #120 #125..128 #134 #135 #139 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
   #0()	weight: 0
 #U72(x1,x2)	weight: max{x2, x1}
 #U32(x1,x2,x3)	weight: 0
isNatKind(x1)	weight: (/ 1 8)
   U16(x1)	weight: (/ 1 8)
   U21(x1,x2)	weight: max{0, x2}
 #U83(x1,x2,x3)	weight: max{0, x3, x2}
   U11(x1,x2,x3)	weight: max{(/ 1 32) + x3, x2, x1}
     s(x1)	weight: x1
#isNat(x1)	weight: x1
   U42(x1)	weight: (/ 1 8)
   U91(x1,x2)	weight: max{0, (/ 11 32) + x2}
 #U35(x1,x2)	weight: 0
#U101(x1,x2,x3)	weight: max{(/ 11 32) + x3, (/ 13 32) + x2, (/ 3 8) + x1}
activate(x1)	weight: x1
 #U82(x1,x2,x3)	weight: max{x3, x2, x1}
#U104(x1,x2,x3)	weight: max{(/ 11 32) + x3, (/ 13 32) + x2, (/ 5 16) + x1}
   U71(x1,x2)	weight: max{0, x2}
 #U81(x1,x2,x3)	weight: max{x3, x2, x1}
 #U92(x1)	weight: 0
#plus(x1,x2)	weight: max{x2, x1}
  U101(x1,x2,x3)	weight: max{(/ 11 32) + x3, (/ 13 32) + x2, (/ 3 8) + x1}
#activate(x1)	weight: x1
  U103(x1,x2,x3)	weight: max{0, (/ 11 32) + x3, (/ 13 32) + x2}
 #U23(x1)	weight: 0
   U84(x1,x2,x3)	weight: max{0, x3, (/ 3 16) + x2}
   U23(x1)	weight: x1
   U35(x1,x2)	weight: max{(/ 5 16) + x2, (/ 5 32) + x1}
   U72(x1,x2)	weight: max{0, x2}
 #U13(x1,x2,x3)	weight: max{x3, x2, x1}
   U34(x1,x2,x3)	weight: max{(/ 5 16) + x3, (/ 9 32) + x2, x1}
#U103(x1,x2,x3)	weight: max{(/ 11 32) + x3, (/ 13 32) + x2, (/ 5 16) + x1}
   U12(x1,x2,x3)	weight: max{0, x2, x1}
 #U33(x1,x2,x3)	weight: 0
     x(x1,x2)	weight: max{(/ 13 32) + x2, (/ 11 32) + x1}
 #U16(x1)	weight: 0
  n__s(x1)	weight: x1
  U104(x1,x2,x3)	weight: max{(/ 11 32) + x3, (/ 13 32) + x2, (/ 9 32) + x1}
 #U42(x1)	weight: 0
 #U12(x1,x2,x3)	weight: max{x3, x2, x1}
 #U62(x1)	weight: 0
   U83(x1,x2,x3)	weight: max{x3, (/ 3 16) + x2, x1}
     0()	weight: (/ 1 8)
 #U14(x1,x2,x3)	weight: max{x3, x2, x1}
 #U36(x1)	weight: 0
   U36(x1)	weight: (/ 5 16)
#U102(x1,x2,x3)	weight: max{(/ 11 32) + x3, (/ 13 32) + x2, (/ 3 8) + x1}
   #x(x1,x2)	weight: max{(/ 13 32) + x2, (/ 11 32) + x1}
   #s(x1)	weight: 0
   U62(x1)	weight: x1
n__plus(x1,x2)	weight: max{(/ 3 16) + x2, x1}
 #U15(x1,x2)	weight: max{x2, x1}
   U32(x1,x2,x3)	weight: max{0, (/ 5 16) + x3, (/ 11 32) + x2}
   U33(x1,x2,x3)	weight: max{0, (/ 5 16) + x3, (/ 5 16) + x2}
  n__0()	weight: (/ 1 8)
 #U34(x1,x2,x3)	weight: 0
   U14(x1,x2,x3)	weight: max{0, x2, x1}
 isNat(x1)	weight: x1
  n__x(x1,x2)	weight: max{(/ 13 32) + x2, (/ 11 32) + x1}
  plus(x1,x2)	weight: max{(/ 3 16) + x2, x1}
   U15(x1,x2)	weight: max{0, x1}
   U61(x1,x2)	weight: max{0, x1}
 #U51(x1)	weight: 0
 #U11(x1,x2,x3)	weight: max{x3, x2, (/ 1 32) + x1}
   U31(x1,x2,x3)	weight: max{(/ 5 16) + x3, (/ 11 32) + x2, (/ 7 32) + x1}
   U92(x1)	weight: x1
 #U41(x1,x2)	weight: max{(/ 1 32) + x2, x1}
  U102(x1,x2,x3)	weight: max{(/ 11 32) + x3, (/ 13 32) + x2, (/ 1 4) + x1}
 #U21(x1,x2)	weight: max{0, x2}
   U81(x1,x2,x3)	weight: max{0, x3, (/ 3 16) + x2}
   U82(x1,x2,x3)	weight: max{x3, (/ 3 16) + x2, (/ 1 16) + x1}
 #U22(x1,x2)	weight: max{0, x2}
    tt()	weight: (/ 1 8)
 #U84(x1,x2,x3)	weight: max{0, x3, x2}
 #U71(x1,x2)	weight: max{x2, x1}
   U13(x1,x2,x3)	weight: max{0, x2, x1}
   U22(x1,x2)	weight: max{0, x2}
   U51(x1)	weight: (/ 1 8)
#isNatKind(x1)	weight: x1
   U41(x1,x2)	weight: max{0, x1}
 #U31(x1,x2,x3)	weight: 0
 #U91(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { 1..53 }
    Removed DPs: #21 #24 #67 #68 #93
Number of SCCs: 1, DPs: 74, edges: 231
	SCC { #1 #8..20 #22 #23 #25..29 #36..41 #46 #47 #57..60 #62..65 #69..73 #75..82 #84..92 #94..98 #104 #115 #120 #125..128 #134 #135 #139 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
   #0()	weight: 0
 #U72(x1,x2)	weight: max{(/ 5 32) + x2, x1}
 #U32(x1,x2,x3)	weight: 0
isNatKind(x1)	weight: (/ 1 8)
   U16(x1)	weight: (/ 1 8)
   U21(x1,x2)	weight: max{0, x2}
 #U83(x1,x2,x3)	weight: max{0, (/ 5 32) + x3, (/ 15 32) + x2}
   U11(x1,x2,x3)	weight: max{(/ 1 32) + x3, x2, x1}
     s(x1)	weight: x1
#isNat(x1)	weight: (/ 5 32) + x1
   U42(x1)	weight: (/ 1 8)
   U91(x1,x2)	weight: max{0, (/ 11 32) + x2}
 #U35(x1,x2)	weight: 0
#U101(x1,x2,x3)	weight: max{(/ 1 2) + x3, (/ 9 16) + x2, (/ 9 16) + x1}
activate(x1)	weight: x1
 #U82(x1,x2,x3)	weight: max{(/ 5 32) + x3, (/ 15 32) + x2, (/ 15 32) + x1}
#U104(x1,x2,x3)	weight: max{(/ 1 2) + x3, (/ 9 16) + x2, (/ 15 32) + x1}
   U71(x1,x2)	weight: max{0, x2}
 #U81(x1,x2,x3)	weight: max{(/ 5 32) + x3, (/ 15 32) + x2, (/ 15 32) + x1}
 #U92(x1)	weight: 0
#plus(x1,x2)	weight: max{(/ 15 32) + x2, (/ 5 32) + x1}
  U101(x1,x2,x3)	weight: max{(/ 11 32) + x3, (/ 13 32) + x2, (/ 3 8) + x1}
#activate(x1)	weight: (/ 5 32) + x1
  U103(x1,x2,x3)	weight: max{0, (/ 11 32) + x3, (/ 13 32) + x2}
 #U23(x1)	weight: 0
   U84(x1,x2,x3)	weight: max{0, x3, (/ 11 32) + x2}
   U23(x1)	weight: x1
   U35(x1,x2)	weight: max{(/ 5 16) + x2, (/ 5 32) + x1}
   U72(x1,x2)	weight: max{0, x2}
 #U13(x1,x2,x3)	weight: max{(/ 1 4) + x3, (/ 5 32) + x2, (/ 5 32) + x1}
   U34(x1,x2,x3)	weight: max{(/ 5 16) + x3, (/ 9 32) + x2, x1}
#U103(x1,x2,x3)	weight: max{(/ 1 2) + x3, (/ 9 16) + x2, (/ 15 32) + x1}
   U12(x1,x2,x3)	weight: max{0, x2, x1}
 #U33(x1,x2,x3)	weight: 0
     x(x1,x2)	weight: max{(/ 13 32) + x2, (/ 11 32) + x1}
 #U16(x1)	weight: 0
  n__s(x1)	weight: x1
  U104(x1,x2,x3)	weight: max{(/ 11 32) + x3, (/ 13 32) + x2, (/ 9 32) + x1}
 #U42(x1)	weight: 0
 #U12(x1,x2,x3)	weight: max{(/ 1 4) + x3, (/ 5 32) + x2, (/ 5 32) + x1}
 #U62(x1)	weight: 0
   U83(x1,x2,x3)	weight: max{x3, (/ 11 32) + x2, x1}
     0()	weight: (/ 1 8)
 #U14(x1,x2,x3)	weight: max{(/ 7 32) + x3, (/ 5 32) + x2, (/ 3 32) + x1}
 #U36(x1)	weight: 0
   U36(x1)	weight: (/ 5 16)
#U102(x1,x2,x3)	weight: max{(/ 1 2) + x3, (/ 9 16) + x2, x1}
   #x(x1,x2)	weight: max{(/ 9 16) + x2, (/ 1 2) + x1}
   #s(x1)	weight: 0
   U62(x1)	weight: x1
n__plus(x1,x2)	weight: max{(/ 11 32) + x2, x1}
 #U15(x1,x2)	weight: max{(/ 3 16) + x2, (/ 1 16) + x1}
   U32(x1,x2,x3)	weight: max{0, (/ 5 16) + x3, (/ 11 32) + x2}
   U33(x1,x2,x3)	weight: max{0, (/ 5 16) + x3, (/ 5 16) + x2}
  n__0()	weight: (/ 1 8)
 #U34(x1,x2,x3)	weight: 0
   U14(x1,x2,x3)	weight: max{0, x2, x1}
 isNat(x1)	weight: x1
  n__x(x1,x2)	weight: max{(/ 13 32) + x2, (/ 11 32) + x1}
  plus(x1,x2)	weight: max{(/ 11 32) + x2, x1}
   U15(x1,x2)	weight: max{0, x1}
   U61(x1,x2)	weight: max{0, x1}
 #U51(x1)	weight: 0
 #U11(x1,x2,x3)	weight: max{(/ 5 16) + x3, (/ 5 32) + x2, (/ 3 16) + x1}
   U31(x1,x2,x3)	weight: max{(/ 5 16) + x3, (/ 11 32) + x2, (/ 7 32) + x1}
   U92(x1)	weight: x1
 #U41(x1,x2)	weight: max{(/ 1 32) + x2, x1}
  U102(x1,x2,x3)	weight: max{(/ 11 32) + x3, (/ 13 32) + x2, (/ 1 4) + x1}
 #U21(x1,x2)	weight: max{0, (/ 5 32) + x2}
   U81(x1,x2,x3)	weight: max{0, x3, (/ 11 32) + x2}
   U82(x1,x2,x3)	weight: max{x3, (/ 11 32) + x2, (/ 7 32) + x1}
 #U22(x1,x2)	weight: max{0, (/ 5 32) + x2}
    tt()	weight: (/ 1 8)
 #U84(x1,x2,x3)	weight: max{0, (/ 5 32) + x3, (/ 15 32) + x2}
 #U71(x1,x2)	weight: max{(/ 5 32) + x2, (/ 5 32) + x1}
   U13(x1,x2,x3)	weight: max{0, x2, x1}
   U22(x1,x2)	weight: max{0, x2}
   U51(x1)	weight: (/ 1 8)
#isNatKind(x1)	weight: (/ 5 32) + x1
   U41(x1,x2)	weight: max{0, x1}
 #U31(x1,x2,x3)	weight: 0
 #U91(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { 1..53 }
    Removed DPs: #11 #18 #26 #27 #29 #36 #37 #59 #70 #71 #73 #81 #87 #95..97 #125 #128
Number of SCCs: 1, DPs: 56, edges: 159
	SCC { #1 #8..10 #12..17 #19 #20 #22 #23 #25 #28 #38..41 #46 #47 #57 #58 #60 #62..65 #69 #72 #75..80 #82 #84..86 #88..92 #94 #98 #104 #115 #120 #126 #127 #134 #135 #139 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
   #0()	status: []	precedence above:
 #U72(x1,x2)	status: x2
 #U32(x1,x2,x3)	status: [x3,x1,x2]	precedence above:
isNatKind(x1)	status: []	precedence above: U11 s #activate U23 U12 n__s U32 isNat #U22 tt U13 U22 U51 U41
   U16(x1)	status: x1
   U21(x1,x2)	status: x1
 #U83(x1,x2,x3)	status: x3
   U11(x1,x2,x3)	status: []	precedence above: isNatKind s #activate U23 U12 n__s U32 isNat #U22 tt U13 U22 U51 U41
     s(x1)	status: [x1]	precedence above: isNatKind U11 #activate U23 U12 n__s U32 isNat #U22 tt U13 U22 U51 U41
#isNat(x1)	status: x1
   U42(x1)	status: x1
   U91(x1,x2)	status: [x1]	precedence above: isNatKind U11 s #activate U23 U12 n__s 0 U32 n__0 isNat U92 #U22 tt U13 U22 U51 U41
 #U35(x1,x2)	status: [x2]	precedence above:
#U101(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 #U104 U71 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
activate(x1)	status: x1
 #U82(x1,x2,x3)	status: x3
#U104(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 #U101 U71 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
   U71(x1,x2)	status: [x2]	precedence above: isNatKind U11 s #activate U23 U72 U12 n__s U32 isNat #U22 tt U13 U22 U51 U41
 #U81(x1,x2,x3)	status: x3
 #U92(x1)	status: []	precedence above:
#plus(x1,x2)	status: x1
  U101(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 #U101 #U104 U71 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
#activate(x1)	status: x1
  U103(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 #U101 #U104 U71 U101 #activate U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
 #U23(x1)	status: []	precedence above:
   U84(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 U71 #activate U23 U72 U12 n__s U83 0 n__plus U32 n__0 isNat plus #U11 U92 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
   U23(x1)	status: []	precedence above: isNatKind U11 s #activate U12 n__s U32 isNat #U22 tt U13 U22 U51 U41
   U35(x1,x2)	status: x1
   U72(x1,x2)	status: [x2]	precedence above:
 #U13(x1,x2,x3)	status: x2
   U34(x1,x2,x3)	status: x1
#U103(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 #U101 #U104 U71 U101 #activate U103 U84 U23 U72 #U13 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
   U12(x1,x2,x3)	status: []	precedence above: isNatKind U11 s #activate U23 n__s U32 isNat #U22 tt U13 U22 U51 U41
 #U33(x1,x2,x3)	status: [x2]	precedence above:
     x(x1,x2)	status: [x2,x1]	precedence above: isNatKind U11 s U91 #U101 #U104 U71 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
 #U16(x1)	status: []	precedence above:
  n__s(x1)	status: [x1]	precedence above: isNatKind U11 s #activate U23 U12 U32 isNat #U22 tt U13 U22 U51 U41
  U104(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 #U101 #U104 U71 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
 #U42(x1)	status: []	precedence above:
 #U12(x1,x2,x3)	status: x2
 #U62(x1)	status: []	precedence above:
   U83(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 U71 #activate U84 U23 U72 U12 n__s 0 n__plus U32 n__0 isNat plus #U11 U92 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
     0()	status: []	precedence above: isNatKind U11 s #activate U23 U12 n__s U32 n__0 isNat #U22 tt U13 U22 U51 U41
 #U14(x1,x2,x3)	status: x2
 #U36(x1)	status: []	precedence above:
   U36(x1)	status: x1
#U102(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 #U101 #U104 U71 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
   #x(x1,x2)	status: [x2,x1]	precedence above: isNatKind U11 s U91 #U101 #U104 U71 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
   #s(x1)	status: []	precedence above:
   U62(x1)	status: x1
n__plus(x1,x2)	status: [x2,x1]	precedence above: isNatKind U11 s U91 U71 #activate U84 U23 U72 U12 n__s U83 0 U32 n__0 isNat plus #U11 U92 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
 #U15(x1,x2)	status: [x2,x1]	precedence above:
   U32(x1,x2,x3)	status: []	precedence above: isNatKind U11 s #activate U23 U12 n__s isNat #U22 tt U13 U22 U51 U41
   U33(x1,x2,x3)	status: x1
  n__0()	status: []	precedence above: isNatKind U11 s #activate U23 U12 n__s 0 U32 isNat #U22 tt U13 U22 U51 U41
 #U34(x1,x2,x3)	status: [x3]	precedence above:
   U14(x1,x2,x3)	status: x1
 isNat(x1)	status: []	precedence above: isNatKind U11 s #activate U23 U12 n__s U32 #U22 tt U13 U22 U51 U41
  n__x(x1,x2)	status: [x2,x1]	precedence above: isNatKind U11 s U91 #U101 #U104 U71 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat plus #U11 U92 U102 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
  plus(x1,x2)	status: [x2,x1]	precedence above: isNatKind U11 s U91 U71 #activate U84 U23 U72 U12 n__s U83 0 n__plus U32 n__0 isNat #U11 U92 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
   U15(x1,x2)	status: x1
   U61(x1,x2)	status: x1
 #U51(x1)	status: []	precedence above:
 #U11(x1,x2,x3)	status: x2
   U31(x1,x2,x3)	status: x1
   U92(x1)	status: []	precedence above: isNatKind U11 s U91 #activate U23 U12 n__s 0 U32 n__0 isNat #U22 tt U13 U22 U51 U41
 #U41(x1,x2)	status: [x1,x2]	precedence above:
  U102(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 #U101 #U104 U71 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U81 U82 #U22 tt U13 U22 U51 #isNatKind U41
 #U21(x1,x2)	status: x2
   U81(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 U71 #activate U84 U23 U72 U12 n__s U83 0 n__plus U32 n__0 isNat plus #U11 U92 U82 #U22 tt U13 U22 U51 #isNatKind U41
   U82(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind U11 s U91 U71 #activate U84 U23 U72 U12 n__s U83 0 n__plus U32 n__0 isNat plus #U11 U92 U81 #U22 tt U13 U22 U51 #isNatKind U41
 #U22(x1,x2)	status: x2
    tt()	status: []	precedence above: isNatKind U11 s #activate U23 U12 n__s U32 isNat #U22 U13 U22 U51 U41
 #U84(x1,x2,x3)	status: x3
 #U71(x1,x2)	status: x2
   U13(x1,x2,x3)	status: []	precedence above: isNatKind U11 s #activate U23 U12 n__s U32 isNat #U22 tt U22 U51 U41
   U22(x1,x2)	status: []	precedence above: isNatKind U11 s #activate U23 U12 n__s U32 isNat #U22 tt U13 U51 U41
   U51(x1)	status: []	precedence above: isNatKind U11 s #activate U23 U12 n__s U32 isNat #U22 tt U13 U22 U41
#isNatKind(x1)	status: x1
   U41(x1,x2)	status: []	precedence above: isNatKind U11 s #activate U23 U12 n__s U32 isNat #U22 tt U13 U22 U51
 #U31(x1,x2,x3)	status: [x1]	precedence above:
 #U91(x1,x2)	status: [x1,x2]	precedence above:
 #U61(x1,x2)	status: [x1,x2]	precedence above:
    Usable rules: { 1..53 }
    Removed DPs: #13..16 #22 #23 #75 #76 #82 #89..92 #134 #135 #139
Number of SCCs: 1, DPs: 5, edges: 5
	SCC { #8 #17 #57 #84 #94 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
   #0()	status: []	precedence above:
 #U72(x1,x2)	status: x2
 #U32(x1,x2,x3)	status: [x3,x1,x2]	precedence above:
isNatKind(x1)	status: []	precedence above: #U83 U11 s #U82 #U81 #activate U23 U12 n__s U32 isNat #U22 tt #U84 U13 U22 U51 U41
   U16(x1)	status: x1
   U21(x1,x2)	status: x1
 #U83(x1,x2,x3)	status: [x2]	precedence above: #U84
   U11(x1,x2,x3)	status: []	precedence above: isNatKind #U83 s #U82 #U81 #activate U23 U12 n__s U32 isNat #U22 tt #U84 U13 U22 U51 U41
     s(x1)	status: [x1]	precedence above: isNatKind #U83 U11 #U82 #U81 #activate U23 U12 n__s U32 isNat #U22 tt #U84 U13 U22 U51 U41
#isNat(x1)	status: x1
   U42(x1)	status: x1
   U91(x1,x2)	status: [x1]	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U12 n__s 0 U32 n__0 isNat U92 #U22 tt #U84 U13 U22 U51 U41
 #U35(x1,x2)	status: [x2]	precedence above:
#U101(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U82 #U104 U71 #U81 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
activate(x1)	status: x1
 #U82(x1,x2,x3)	status: [x2]	precedence above: #U83 #U84
#U104(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U101 #U82 U71 #U81 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
   U71(x1,x2)	status: [x2]	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U72 U12 n__s U32 isNat #U22 tt #U84 U13 U22 U51 U41
 #U81(x1,x2,x3)	status: [x2]	precedence above: isNatKind #U83 U11 s #U82 #activate U23 U12 n__s U32 isNat #U22 tt #U84 U13 U22 U51 U41
 #U92(x1)	status: []	precedence above:
#plus(x1,x2)	status: x2
  U101(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U101 #U82 #U104 U71 #U81 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
#activate(x1)	status: x1
  U103(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U101 #U82 #U104 U71 #U81 U101 #activate U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
 #U23(x1)	status: []	precedence above:
   U84(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U82 U71 #U81 #activate U23 U72 U12 n__s U83 0 n__plus U32 n__0 isNat plus #U11 U92 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
   U23(x1)	status: []	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U12 n__s U32 isNat #U22 tt #U84 U13 U22 U51 U41
   U35(x1,x2)	status: x1
   U72(x1,x2)	status: [x2]	precedence above:
 #U13(x1,x2,x3)	status: x2
   U34(x1,x2,x3)	status: x1
#U103(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U101 #U82 #U104 U71 #U81 U101 #activate U103 U84 U23 U72 #U13 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
   U12(x1,x2,x3)	status: []	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 n__s U32 isNat #U22 tt #U84 U13 U22 U51 U41
 #U33(x1,x2,x3)	status: [x2]	precedence above:
     x(x1,x2)	status: [x2,x1]	precedence above: isNatKind #U83 U11 s U91 #U101 #U82 #U104 U71 #U81 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
 #U16(x1)	status: []	precedence above:
  n__s(x1)	status: [x1]	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U12 U32 isNat #U22 tt #U84 U13 U22 U51 U41
  U104(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U101 #U82 #U104 U71 #U81 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
 #U42(x1)	status: []	precedence above:
 #U12(x1,x2,x3)	status: x2
 #U62(x1)	status: []	precedence above:
   U83(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U82 U71 #U81 #activate U84 U23 U72 U12 n__s 0 n__plus U32 n__0 isNat plus #U11 U92 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
     0()	status: []	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U12 n__s U32 n__0 isNat #U22 tt #U84 U13 U22 U51 U41
 #U14(x1,x2,x3)	status: x2
 #U36(x1)	status: []	precedence above:
   U36(x1)	status: x1
#U102(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U101 #U82 #U104 U71 #U81 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
   #x(x1,x2)	status: [x2,x1]	precedence above: isNatKind #U83 U11 s U91 #U101 #U82 #U104 U71 #U81 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 n__plus U32 n__0 isNat n__x plus #U11 U92 U102 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
   #s(x1)	status: []	precedence above:
   U62(x1)	status: x1
n__plus(x1,x2)	status: [x2,x1]	precedence above: isNatKind #U83 U11 s U91 #U82 U71 #U81 #activate U84 U23 U72 U12 n__s U83 0 U32 n__0 isNat plus #U11 U92 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
 #U15(x1,x2)	status: [x2,x1]	precedence above:
   U32(x1,x2,x3)	status: []	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U12 n__s isNat #U22 tt #U84 U13 U22 U51 U41
   U33(x1,x2,x3)	status: x1
  n__0()	status: []	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U12 n__s 0 U32 isNat #U22 tt #U84 U13 U22 U51 U41
 #U34(x1,x2,x3)	status: [x3]	precedence above:
   U14(x1,x2,x3)	status: x1
 isNat(x1)	status: []	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U12 n__s U32 #U22 tt #U84 U13 U22 U51 U41
  n__x(x1,x2)	status: [x2,x1]	precedence above: isNatKind #U83 U11 s U91 #U101 #U82 #U104 U71 #U81 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat plus #U11 U92 U102 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
  plus(x1,x2)	status: [x2,x1]	precedence above: isNatKind #U83 U11 s U91 #U82 U71 #U81 #activate U84 U23 U72 U12 n__s U83 0 n__plus U32 n__0 isNat #U11 U92 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
   U15(x1,x2)	status: x1
   U61(x1,x2)	status: x1
 #U51(x1)	status: []	precedence above:
 #U11(x1,x2,x3)	status: x2
   U31(x1,x2,x3)	status: x1
   U92(x1)	status: []	precedence above: isNatKind #U83 U11 s U91 #U82 #U81 #activate U23 U12 n__s 0 U32 n__0 isNat #U22 tt #U84 U13 U22 U51 U41
 #U41(x1,x2)	status: [x1,x2]	precedence above:
  U102(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U101 #U82 #U104 U71 #U81 U101 #activate U103 U84 U23 U72 #U13 #U103 U12 x n__s U104 #U12 U83 0 #U102 #x n__plus U32 n__0 isNat n__x plus #U11 U92 U81 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
 #U21(x1,x2)	status: x2
   U81(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U82 U71 #U81 #activate U84 U23 U72 U12 n__s U83 0 n__plus U32 n__0 isNat plus #U11 U92 U82 #U22 tt #U84 U13 U22 U51 #isNatKind U41
   U82(x1,x2,x3)	status: [x2,x3,x1]	precedence above: isNatKind #U83 U11 s U91 #U82 U71 #U81 #activate U84 U23 U72 U12 n__s U83 0 n__plus U32 n__0 isNat plus #U11 U92 U81 #U22 tt #U84 U13 U22 U51 #isNatKind U41
 #U22(x1,x2)	status: x2
    tt()	status: []	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U12 n__s U32 isNat #U22 #U84 U13 U22 U51 U41
 #U84(x1,x2,x3)	status: [x2]	precedence above:
 #U71(x1,x2)	status: x2
   U13(x1,x2,x3)	status: []	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U12 n__s U32 isNat #U22 tt #U84 U22 U51 U41
   U22(x1,x2)	status: []	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U12 n__s U32 isNat #U22 tt #U84 U13 U51 U41
   U51(x1)	status: []	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U12 n__s U32 isNat #U22 tt #U84 U13 U22 U41
#isNatKind(x1)	status: x1
   U41(x1,x2)	status: []	precedence above: isNatKind #U83 U11 s #U82 #U81 #activate U23 U12 n__s U32 isNat #U22 tt #U84 U13 U22 U51
 #U31(x1,x2,x3)	status: [x1]	precedence above:
 #U91(x1,x2)	status: [x1,x2]	precedence above:
 #U61(x1,x2)	status: [x1,x2]	precedence above:
    Usable rules: { 1..53 }
    Removed DPs: #8 #57 #84 #94
Number of SCCs: 0, DPs: 0, edges: 0
