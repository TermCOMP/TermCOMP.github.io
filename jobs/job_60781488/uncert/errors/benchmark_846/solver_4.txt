Input TRS:
    1: from(X) -> cons(X,from(s(X)))
    2: 2ndspos(0(),Z) -> rnil()
    3: 2ndspos(s(N),cons(X,Z)) -> 2ndspos(s(N),cons2(X,Z))
    4: 2ndspos(s(N),cons2(X,cons(Y,Z))) -> rcons(posrecip(Y),2ndsneg(N,Z))
    5: 2ndsneg(0(),Z) -> rnil()
    6: 2ndsneg(s(N),cons(X,Z)) -> 2ndsneg(s(N),cons2(X,Z))
    7: 2ndsneg(s(N),cons2(X,cons(Y,Z))) -> rcons(negrecip(Y),2ndspos(N,Z))
    8: pi(X) -> 2ndspos(X,from(0()))
    9: plus(0(),Y) -> Y
    10: plus(s(X),Y) -> s(plus(X,Y))
    11: times(0(),Y) -> 0()
    12: times(s(X),Y) -> plus(Y,times(X,Y))
    13: square(X) -> times(X,X)
Number of strict rules: 13
Direct Order(PosReal,>,Poly) ... failed.
Freezing 2ndsneg 2ndspos
1: from(X) -> cons(X,from(s(X)))
2: 2ndspos❆1_0(Z) -> rnil()
3: 2ndspos❆1_s(N,cons(X,Z)) -> 2ndspos❆1_s(N,cons2(X,Z))
4: 2ndspos❆1_s(N,cons2(X,cons(Y,Z))) -> rcons(posrecip(Y),2ndsneg(N,Z))
5: 2ndsneg❆1_0(Z) -> rnil()
6: 2ndsneg❆1_s(N,cons(X,Z)) -> 2ndsneg❆1_s(N,cons2(X,Z))
7: 2ndsneg❆1_s(N,cons2(X,cons(Y,Z))) -> rcons(negrecip(Y),2ndspos(N,Z))
8: pi(X) -> 2ndspos(X,from(0()))
9: plus(0(),Y) -> Y
10: plus(s(X),Y) -> s(plus(X,Y))
11: times(0(),Y) -> 0()
12: times(s(X),Y) -> plus(Y,times(X,Y))
13: square(X) -> times(X,X)
14: 2ndspos(0(),_1) ->= 2ndspos❆1_0(_1)
15: 2ndspos(s(_1),_2) ->= 2ndspos❆1_s(_1,_2)
16: 2ndsneg(0(),_1) ->= 2ndsneg❆1_0(_1)
17: 2ndsneg(s(_1),_2) ->= 2ndsneg❆1_s(_1,_2)
Number of strict rules: 13
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #2ndsneg❆1_s(N,cons(X,Z)) -> #2ndsneg❆1_s(N,cons2(X,Z))
   #2: #square(X) -> #times(X,X)
   #3: #times(s(X),Y) -> #plus(Y,times(X,Y))
   #4: #times(s(X),Y) -> #times(X,Y)
   #5: #2ndspos(0(),_1) ->? #2ndspos❆1_0(_1)
   #6: #2ndsneg❆1_s(N,cons2(X,cons(Y,Z))) -> #2ndspos(N,Z)
   #7: #plus(s(X),Y) -> #plus(X,Y)
   #8: #2ndsneg(s(_1),_2) ->? #2ndsneg❆1_s(_1,_2)
   #9: #2ndsneg(0(),_1) ->? #2ndsneg❆1_0(_1)
   #10: #2ndspos❆1_s(N,cons(X,Z)) -> #2ndspos❆1_s(N,cons2(X,Z))
   #11: #from(X) -> #from(s(X))
   #12: #pi(X) -> #2ndspos(X,from(0()))
   #13: #pi(X) -> #from(0())
   #14: #2ndspos(s(_1),_2) ->? #2ndspos❆1_s(_1,_2)
   #15: #2ndspos❆1_s(N,cons2(X,cons(Y,Z))) -> #2ndsneg(N,Z)
Number of SCCs: 4, DPs: 9, edges: 11
	SCC { #11 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #from(X)	-#11->
  #from(s(X))	--->*
  #from(s(X))
  Looping with: [ X := s(X); ]
