Input TRS:
    1: division(x,y) -> div(x,y,0())
    2: div(x,y,z) -> if(lt(x,y),x,y,inc(z))
    3: if(true(),x,y,z) -> z
    4: if(false(),x,s(y),z) -> div(minus(x,s(y)),s(y),z)
    5: minus(x,0()) -> x
    6: minus(s(x),s(y)) -> minus(x,y)
    7: lt(x,0()) -> false()
    8: lt(0(),s(y)) -> true()
    9: lt(s(x),s(y)) -> lt(x,y)
    10: inc(0()) -> s(0())
    11: inc(s(x)) -> s(inc(x))
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #div(x,y,z) -> #if(lt(x,y),x,y,inc(z))
   #2: #div(x,y,z) -> #lt(x,y)
   #3: #div(x,y,z) -> #inc(z)
   #4: #minus(s(x),s(y)) -> #minus(x,y)
   #5: #lt(s(x),s(y)) -> #lt(x,y)
   #6: #inc(s(x)) -> #inc(x)
   #7: #division(x,y) -> #div(x,y,0())
   #8: #if(false(),x,s(y),z) -> #div(minus(x,s(y)),s(y),z)
   #9: #if(false(),x,s(y),z) -> #minus(x,s(y))
Number of SCCs: 4, DPs: 5, edges: 5
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
division(x1,x2)	weight: 0
 #div(x1,x2,x3)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
 false()	weight: 0
   div(x1,x2,x3)	weight: 0
 #inc(x1)	weight: x1
   inc(x1)	weight: 0
  true()	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
#minus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
    lt(x1,x2)	weight: 0
#division(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
division(x1,x2)	weight: 0
 #div(x1,x2,x3)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: x2
 minus(x1,x2)	weight: 0
 false()	weight: 0
   div(x1,x2,x3)	weight: 0
 #inc(x1)	weight: 0
   inc(x1)	weight: 0
  true()	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
#minus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
    lt(x1,x2)	weight: 0
#division(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
division(x1,x2)	weight: 0
 #div(x1,x2,x3)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
 false()	weight: 0
   div(x1,x2,x3)	weight: 0
 #inc(x1)	weight: 0
   inc(x1)	weight: 0
  true()	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
#minus(x1,x2)	weight: x2
  #if(x1,x2,x3,x4)	weight: 0
    lt(x1,x2)	weight: 0
#division(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #1 #8 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
