Input TRS:
    1: a__U11(tt(),N) -> mark(N)
    2: a__U21(tt(),M,N) -> s(a__plus(mark(N),mark(M)))
    3: a__and(tt(),X) -> mark(X)
    4: a__isNat(0()) -> tt()
    5: a__isNat(plus(V1,V2)) -> a__and(a__isNat(V1),isNat(V2))
    6: a__isNat(s(V1)) -> a__isNat(V1)
    7: a__plus(N,0()) -> a__U11(a__isNat(N),N)
    8: a__plus(N,s(M)) -> a__U21(a__and(a__isNat(M),isNat(N)),M,N)
    9: mark(U11(X1,X2)) -> a__U11(mark(X1),X2)
    10: mark(U21(X1,X2,X3)) -> a__U21(mark(X1),X2,X3)
    11: mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2))
    12: mark(and(X1,X2)) -> a__and(mark(X1),X2)
    13: mark(isNat(X)) -> a__isNat(X)
    14: mark(tt()) -> tt()
    15: mark(s(X)) -> s(mark(X))
    16: mark(0()) -> 0()
    17: a__U11(X1,X2) -> U11(X1,X2)
    18: a__U21(X1,X2,X3) -> U21(X1,X2,X3)
    19: a__plus(X1,X2) -> plus(X1,X2)
    20: a__and(X1,X2) -> and(X1,X2)
    21: a__isNat(X) -> isNat(X)
Number of strict rules: 21
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #a__U21(tt(),M,N) -> #a__plus(mark(N),mark(M))
   #2: #a__U21(tt(),M,N) -> #mark(N)
   #3: #a__U21(tt(),M,N) -> #mark(M)
   #4: #a__isNat(s(V1)) -> #a__isNat(V1)
   #5: #mark(isNat(X)) -> #a__isNat(X)
   #6: #mark(U11(X1,X2)) -> #a__U11(mark(X1),X2)
   #7: #mark(U11(X1,X2)) -> #mark(X1)
   #8: #mark(plus(X1,X2)) -> #a__plus(mark(X1),mark(X2))
   #9: #mark(plus(X1,X2)) -> #mark(X1)
   #10: #mark(plus(X1,X2)) -> #mark(X2)
   #11: #mark(and(X1,X2)) -> #a__and(mark(X1),X2)
   #12: #mark(and(X1,X2)) -> #mark(X1)
   #13: #a__plus(N,0()) -> #a__U11(a__isNat(N),N)
   #14: #a__plus(N,0()) -> #a__isNat(N)
   #15: #mark(U21(X1,X2,X3)) -> #a__U21(mark(X1),X2,X3)
   #16: #mark(U21(X1,X2,X3)) -> #mark(X1)
   #17: #a__isNat(plus(V1,V2)) -> #a__and(a__isNat(V1),isNat(V2))
   #18: #a__isNat(plus(V1,V2)) -> #a__isNat(V1)
   #19: #a__and(tt(),X) -> #mark(X)
   #20: #a__U11(tt(),N) -> #mark(N)
   #21: #a__plus(N,s(M)) -> #a__U21(a__and(a__isNat(M),isNat(N)),M,N)
   #22: #a__plus(N,s(M)) -> #a__and(a__isNat(M),isNat(N))
   #23: #a__plus(N,s(M)) -> #a__isNat(M)
   #24: #mark(s(X)) -> #mark(X)
Number of SCCs: 1, DPs: 24, edges: 146
	SCC { #1..24 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
a__plus(x1,x2)	weight: (/ 3 8) + x1 + x2
   U21(x1,x2,x3)	weight: (/ 5 8) + x1 + x2 + x3
   U11(x1,x2)	weight: (/ 1 4) + x1 + x2
     s(x1)	weight: (/ 1 4) + x1
#a__isNat(x1)	weight: 0
   and(x1,x2)	weight: x1 + x2
#a__U11(x1,x2)	weight: (/ 1 8) + x2
#a__U21(x1,x2,x3)	weight: (/ 3 8) + x2 + x3
#a__plus(x1,x2)	weight: (/ 1 4) + x1 + x2
#mark(x1)	weight: x1
     0()	weight: 0
#a__and(x1,x2)	weight: x2
a__U21(x1,x2,x3)	weight: (/ 5 8) + x1 + x2 + x3
  mark(x1)	weight: x1
a__U11(x1,x2)	weight: (/ 1 4) + x1 + x2
 isNat(x1)	weight: 0
  plus(x1,x2)	weight: (/ 3 8) + x1 + x2
    tt()	weight: 0
a__isNat(x1)	weight: 0
a__and(x1,x2)	weight: x1 + x2
    Usable rules: { 1..21 }
    Removed DPs: #1..3 #6..10 #13..16 #20..24
Number of SCCs: 1, DPs: 7, edges: 17
	SCC { #4 #5 #11 #12 #17..19 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
a__plus(x1,x2)	weight: (/ 3 4) + x1 + x2
   U21(x1,x2,x3)	weight: (/ 5 4) + x2 + x3
   U11(x1,x2)	weight: (/ 1 2) + x2
     s(x1)	weight: (/ 1 2) + x1
#a__isNat(x1)	weight: x1
   and(x1,x2)	weight: x1 + x2
#a__U11(x1,x2)	weight: (/ 1 4)
#a__U21(x1,x2,x3)	weight: (/ 3 4)
#a__plus(x1,x2)	weight: (/ 1 2) + x1 + x2
#mark(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
#a__and(x1,x2)	weight: (/ 1 4) + x2
a__U21(x1,x2,x3)	weight: (/ 5 4) + x2 + x3
  mark(x1)	weight: x1
a__U11(x1,x2)	weight: (/ 1 2) + x2
 isNat(x1)	weight: x1
  plus(x1,x2)	weight: (/ 3 4) + x1 + x2
    tt()	weight: 0
a__isNat(x1)	weight: x1
a__and(x1,x2)	weight: x1 + x2
    Usable rules: { 1..21 }
    Removed DPs: #4 #5 #17 #18
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #11 #12 #19 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
a__plus(x1,x2)	weight: x1 + x2
   U21(x1,x2,x3)	weight: (/ 7 8) + x2 + x3
   U11(x1,x2)	weight: (/ 3 8) + x2
     s(x1)	weight: (/ 1 8) + x1
#a__isNat(x1)	weight: 0
   and(x1,x2)	weight: (/ 1 4) + x1 + x2
#a__U11(x1,x2)	weight: (/ 1 8)
#a__U21(x1,x2,x3)	weight: (/ 3 8)
#a__plus(x1,x2)	weight: (/ 1 4)
#mark(x1)	weight: x1
     0()	weight: 0
#a__and(x1,x2)	weight: (/ 1 8) + x2
a__U21(x1,x2,x3)	weight: (/ 3 4) + x1 + x2 + x3
  mark(x1)	weight: (/ 3 8)
a__U11(x1,x2)	weight: (/ 1 4)
 isNat(x1)	weight: x1
  plus(x1,x2)	weight: (/ 1 8) + x1 + x2
    tt()	weight: 0
a__isNat(x1)	weight: (/ 1 2) + x1
a__and(x1,x2)	weight: (/ 1 4) + x1
    Usable rules: { }
    Removed DPs: #11 #12 #19
Number of SCCs: 0, DPs: 0, edges: 0
