Input TRS:
    1: not(x) -> xor(x,true())
    2: or(x,y) -> xor(and(x,y),xor(x,y))
    3: implies(x,y) -> xor(and(x,y),xor(x,true()))
    4: and(x,true()) -> x
    5: and(x,false()) -> false()
    6: and(x,x) -> x
    7: xor(x,false()) -> x
    8: xor(x,x) -> false()
    9: and(xor(x,y),z) -> xor(and(x,z),and(y,z))
Number of strict rules: 9
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #or(x,y) -> #xor(and(x,y),xor(x,y))
   #2: #or(x,y) -> #and(x,y)
   #3: #or(x,y) -> #xor(x,y)
   #4: #and(xor(x,y),z) -> #xor(and(x,z),and(y,z))
   #5: #and(xor(x,y),z) -> #and(x,z)
   #6: #and(xor(x,y),z) -> #and(y,z)
   #7: #implies(x,y) -> #xor(and(x,y),xor(x,true()))
   #8: #implies(x,y) -> #and(x,y)
   #9: #implies(x,y) -> #xor(x,true())
   #10: #not(x) -> #xor(x,true())
Number of SCCs: 1, DPs: 2, edges: 4
	SCC { #5 #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
 #not(x1)	weight: 0
#implies(x1,x2)	weight: 0
    or(x1,x2)	weight: 0
implies(x1,x2)	weight: 0
 #xor(x1,x2)	weight: 0
  #or(x1,x2)	weight: 0
   xor(x1,x2)	weight: (/ 1 2) + x1 + x2
 #and(x1,x2)	weight: x1
   not(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #5 #6
Number of SCCs: 0, DPs: 0, edges: 0
