Input TRS:
    1: cond1(true(),x,y,z) -> cond2(gr(y,z),x,y,z)
    2: cond2(true(),x,y,z) -> cond2(gr(y,z),p(x),p(y),z)
    3: cond2(false(),x,y,z) -> cond1(and(eq(x,y),gr(x,z)),x,y,z)
    4: gr(0(),x) -> false()
    5: gr(s(x),0()) -> true()
    6: gr(s(x),s(y)) -> gr(x,y)
    7: p(0()) -> 0()
    8: p(s(x)) -> x
    9: eq(0(),0()) -> true()
    10: eq(s(x),0()) -> false()
    11: eq(0(),s(x)) -> false()
    12: eq(s(x),s(y)) -> eq(x,y)
    13: and(true(),true()) -> true()
    14: and(false(),x) -> false()
    15: and(x,false()) -> false()
Number of strict rules: 15
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #cond2(true(),x,y,z) -> #cond2(gr(y,z),p(x),p(y),z)
   #2: #cond2(true(),x,y,z) -> #gr(y,z)
   #3: #cond2(true(),x,y,z) -> #p(x)
   #4: #cond2(true(),x,y,z) -> #p(y)
   #5: #gr(s(x),s(y)) -> #gr(x,y)
   #6: #eq(s(x),s(y)) -> #eq(x,y)
   #7: #cond2(false(),x,y,z) -> #cond1(and(eq(x,y),gr(x,z)),x,y,z)
   #8: #cond2(false(),x,y,z) -> #and(eq(x,y),gr(x,z))
   #9: #cond2(false(),x,y,z) -> #eq(x,y)
   #10: #cond2(false(),x,y,z) -> #gr(x,z)
   #11: #cond1(true(),x,y,z) -> #cond2(gr(y,z),x,y,z)
   #12: #cond1(true(),x,y,z) -> #gr(y,z)
Number of SCCs: 3, DPs: 5, edges: 7
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 cond2(x1,x2,x3,x4)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
#cond1(x1,x2,x3,x4)	weight: 0
   and(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
   #p(x1)	weight: 0
  true()	weight: 0
 cond1(x1,x2,x3,x4)	weight: 0
  #eq(x1,x2)	weight: 0
     p(x1)	weight: 0
     0()	weight: 0
  #gr(x1,x2)	weight: x2
#cond2(x1,x2,x3,x4)	weight: 0
    gr(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5
Number of SCCs: 2, DPs: 4, edges: 6
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 cond2(x1,x2,x3,x4)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
#cond1(x1,x2,x3,x4)	weight: 0
   and(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
   #p(x1)	weight: 0
  true()	weight: 0
 cond1(x1,x2,x3,x4)	weight: 0
  #eq(x1,x2)	weight: x2
     p(x1)	weight: 0
     0()	weight: 0
  #gr(x1,x2)	weight: 0
#cond2(x1,x2,x3,x4)	weight: 0
    gr(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #1 #7 #11 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
 cond2(x1,x2,x3,x4)	weight: 0
     s(x1)	weight: max{0, (/ 1 4) + x1}
#cond1(x1,x2,x3,x4)	weight: max{0, (/ 3 16) + x2, (/ 1 8) + x3}
   and(x1,x2)	weight: max{0, (- (/ 3 16)) + x1}
    eq(x1,x2)	weight: max{0, (- (/ 5 8)) + x1, (- (/ 5 16)) + x2}
 false()	weight: (/ 1 8)
   #p(x1)	weight: 0
  true()	weight: (/ 5 16)
 cond1(x1,x2,x3,x4)	weight: 0
  #eq(x1,x2)	weight: 0
     p(x1)	weight: max{0, (- (/ 1 4)) + x1}
     0()	weight: 0
  #gr(x1,x2)	weight: 0
#cond2(x1,x2,x3,x4)	weight: max{0, (- (/ 1 16)) + x1, (/ 3 16) + x2, (/ 1 8) + x3}
    gr(x1,x2)	weight: max{0, (/ 1 8) + x1}
 #and(x1,x2)	weight: 0
    Usable rules: { 4..8 }
    Removed DPs: #1
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #7 #11 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
