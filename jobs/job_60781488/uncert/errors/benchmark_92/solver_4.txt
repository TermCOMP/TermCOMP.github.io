Input TRS:
    1: app(app(app(app(rec(),t),u),v),0()) -> t
    2: app(app(app(app(rec(),t),u),v),app(s(),x)) -> app(app(u,x),app(app(app(app(rec(),t),u),v),x))
    3: app(app(app(app(rec(),t),u),v),app(lim(),f)) -> app(app(v,f),app(app(app(app(rectuv(),t),u),v),app(f,n())))
    4: app(app(app(app(rectuv(),t),u),v),n()) -> app(app(app(app(rec(),t),u),v),n())
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... failed.
Freezing app
1: app❆4_rec(t,u,v,0()) -> t
2: app❆4_rec(t,u,v,app❆1_s(x)) -> app(app(u,x),app❆4_rec(t,u,v,x))
3: app❆4_rec(t,u,v,app❆1_lim(f)) -> app(app(v,f),app❆4_rectuv(t,u,v,app(f,n())))
4: app❆4_rectuv(t,u,v,n()) -> app❆4_rec(t,u,v,n())
5: app(rec(),_1) ->= app❆1_rec(_1)
6: app(app❆1_rec(_1),_2) ->= app❆2_rec(_1,_2)
7: app(app❆2_rec(_1,_2),_3) ->= app❆3_rec(_1,_2,_3)
8: app(app❆3_rec(_1,_2,_3),_4) ->= app❆4_rec(_1,_2,_3,_4)
9: app(rectuv(),_1) ->= app❆1_rectuv(_1)
10: app(app❆1_rectuv(_1),_2) ->= app❆2_rectuv(_1,_2)
11: app(app❆2_rectuv(_1,_2),_3) ->= app❆3_rectuv(_1,_2,_3)
12: app(app❆3_rectuv(_1,_2,_3),_4) ->= app❆4_rectuv(_1,_2,_3,_4)
13: app(s(),_1) ->= app❆1_s(_1)
14: app(lim(),_1) ->= app❆1_lim(_1)
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #app❆4_rec(t,u,v,app❆1_s(x)) -> #app(app(u,x),app❆4_rec(t,u,v,x))
   #2: #app❆4_rec(t,u,v,app❆1_s(x)) -> #app(u,x)
   #3: #app❆4_rec(t,u,v,app❆1_s(x)) -> #app❆4_rec(t,u,v,x)
   #4: #app(app❆3_rectuv(_1,_2,_3),_4) ->? #app❆4_rectuv(_1,_2,_3,_4)
   #5: #app❆4_rec(t,u,v,app❆1_lim(f)) -> #app(app(v,f),app❆4_rectuv(t,u,v,app(f,n())))
   #6: #app❆4_rec(t,u,v,app❆1_lim(f)) -> #app(v,f)
   #7: #app❆4_rec(t,u,v,app❆1_lim(f)) -> #app❆4_rectuv(t,u,v,app(f,n()))
   #8: #app❆4_rec(t,u,v,app❆1_lim(f)) -> #app(f,n())
   #9: #app(app❆3_rec(_1,_2,_3),_4) ->? #app❆4_rec(_1,_2,_3,_4)
   #10: #app❆4_rectuv(t,u,v,n()) -> #app❆4_rec(t,u,v,n())
Number of SCCs: 1, DPs: 7, edges: 17
	SCC { #1..3 #5 #6 #8 #9 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... succeeded.
app❆2_rec(x1,x2)	weight: max{0, x1_1, (/ 1 16) + x2_2, x2_1}; (- (/ 1 4)) + x2_2 + x1_2
app❆4_rec(x1,x2,x3,x4)	weight: max{0, x1_1, x2_1, (/ 1 8) + x3_2, x3_1, (/ 5 16) + x4_2, x4_1}; 0
app❆1_lim(x1)	weight: max{0, x1_1}; 0
     s()	weight: (/ 1 16); (- (/ 1 8))
app❆3_rec(x1,x2,x3)	weight: max{0, x1_1, (/ 1 16) + x2_2, x2_1, (/ 1 8) + x3_2, x3_1}; (- (/ 1 8))
     n()	weight: 0; (- (/ 3 8))
app❆1_rectuv(x1)	weight: max{0, x1_1}; (- (/ 1 8))
rectuv()	weight: (/ 1 16); (- (/ 1 8))
app❆2_rectuv(x1,x2)	weight: max{0, (/ 1 16) + x1_2, x1_1, (/ 1 8) + x2_2, x2_1}; (- (/ 9 16)) + x2_2 + x1_2
     0()	weight: 0; (- (/ 1 16))
app❆3_rectuv(x1,x2,x3)	weight: max{0, (- (/ 1 8)) + x1_2, x1_1, (- (/ 5 16)) + x2_2, x2_1, (/ 3 16) + x3_2, x3_1}; (- (/ 3 8)) + x1_2
   rec()	weight: (/ 1 16); (- (/ 1 4))
app❆1_rec(x1)	weight: max{0, x1_1}; (- (/ 1 8))
 #app(x1,x2)	weight: max{0, (/ 1 4) + x1_2, (/ 5 16) + x2_2}; 0
#app❆4_rec(x1,x2,x3,x4)	weight: max{0, (/ 1 8) + x1_2, (/ 1 16) + x3_2, (/ 5 16) + x4_2}; 0
app❆4_rectuv(x1,x2,x3,x4)	weight: max{0, (- (/ 1 4)) + x1_2, x1_1, (- (/ 1 16)) + x2_2, x2_1, (/ 3 16) + x3_2, x3_1, (- (/ 1 8)) + x4_2}; 0
app❆1_s(x1)	weight: max{0, x1_1}; 0
#app❆4_rectuv(x1,x2,x3,x4)	weight: 0; 0
   lim()	weight: (/ 1 16); (- (/ 1 4))
   app(x1,x2)	weight: max{0, (/ 3 16) + x1_2, x1_1, (/ 5 16) + x2_2, x2_1}; 0
    Usable rules: { 1..14 }
    Removed DPs: #8
Number of SCCs: 1, DPs: 6, edges: 14
	SCC { #1..3 #5 #6 #9 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... succeeded.
app❆2_rec(x1,x2)	weight: max{0, x1_1, (/ 1521 8) + x2_2, x2_1}; (- (/ 3 8))
app❆4_rec(x1,x2,x3,x4)	weight: max{0, (- (/ 1 8)) + x1_2, x1_1, (/ 1 8) + x2_2, x2_1, (- (/ 1 4)) + x3_2, x3_1, (/ 4995 8) + x4_2, x4_1}; x4_2
app❆1_lim(x1)	weight: max{0, x1_1}; 0
     s()	weight: (/ 1 8); (- (/ 3 8))
app❆3_rec(x1,x2,x3)	weight: max{0, x1_1, (/ 1521 8) + x2_2, x2_1, x3_1}; (- (/ 1 8))
     n()	weight: 0; (- (/ 225549 8))
app❆1_rectuv(x1)	weight: max{0, x1_1}; (- (/ 1 8))
rectuv()	weight: (/ 1 8); (- (/ 1 8))
app❆2_rectuv(x1,x2)	weight: max{0, x1_1, (/ 2497 4) + x2_2, x2_1}; (- (/ 3 8))
     0()	weight: 0; 0
app❆3_rectuv(x1,x2,x3)	weight: max{0, (- (/ 1 8)) + x1_2, x1_1, (/ 2497 4) + x2_2, x2_1, x3_1}; (- (/ 3 8))
   rec()	weight: (/ 1 8); (- (/ 3 8))
app❆1_rec(x1)	weight: max{0, x1_1}; (- (/ 1 8))
 #app(x1,x2)	weight: max{0, (/ 5 8) + x1_2, (/ 4999 8) + x2_2}; 0
#app❆4_rec(x1,x2,x3,x4)	weight: max{0, (/ 3 8) + x1_2, (/ 1 8) + x2_2, (/ 1 4) + x3_2, (/ 4999 8) + x4_2}; 0
app❆4_rectuv(x1,x2,x3,x4)	weight: max{0, x1_1, (/ 1 8) + x2_2, x2_1, x3_1, (/ 2497 4) + x4_2}; (- (/ 4995 8))
app❆1_s(x1)	weight: max{0, x1_1}; 0
#app❆4_rectuv(x1,x2,x3,x4)	weight: 0; 0
   lim()	weight: (/ 1 8); (- (/ 1 8))
   app(x1,x2)	weight: max{0, x1_1, (/ 4995 8) + x2_2, x2_1}; 0
    Usable rules: { 1..14 }
    Removed DPs: #5
Number of SCCs: 1, DPs: 5, edges: 11
	SCC { #1..3 #6 #9 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
