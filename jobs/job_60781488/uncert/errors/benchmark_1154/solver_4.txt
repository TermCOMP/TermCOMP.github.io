Input TRS:
    1: active(primes()) -> mark(sieve(from(s(s(0())))))
    2: active(from(X)) -> mark(cons(X,from(s(X))))
    3: active(head(cons(X,Y))) -> mark(X)
    4: active(tail(cons(X,Y))) -> mark(Y)
    5: active(if(true(),X,Y)) -> mark(X)
    6: active(if(false(),X,Y)) -> mark(Y)
    7: active(filter(s(s(X)),cons(Y,Z))) -> mark(if(divides(s(s(X)),Y),filter(s(s(X)),Z),cons(Y,filter(X,sieve(Y)))))
    8: active(sieve(cons(X,Y))) -> mark(cons(X,filter(X,sieve(Y))))
    9: active(sieve(X)) -> sieve(active(X))
    10: active(from(X)) -> from(active(X))
    11: active(s(X)) -> s(active(X))
    12: active(cons(X1,X2)) -> cons(active(X1),X2)
    13: active(head(X)) -> head(active(X))
    14: active(tail(X)) -> tail(active(X))
    15: active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
    16: active(filter(X1,X2)) -> filter(active(X1),X2)
    17: active(filter(X1,X2)) -> filter(X1,active(X2))
    18: active(divides(X1,X2)) -> divides(active(X1),X2)
    19: active(divides(X1,X2)) -> divides(X1,active(X2))
    20: sieve(mark(X)) -> mark(sieve(X))
    21: from(mark(X)) -> mark(from(X))
    22: s(mark(X)) -> mark(s(X))
    23: cons(mark(X1),X2) -> mark(cons(X1,X2))
    24: head(mark(X)) -> mark(head(X))
    25: tail(mark(X)) -> mark(tail(X))
    26: if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
    27: filter(mark(X1),X2) -> mark(filter(X1,X2))
    28: filter(X1,mark(X2)) -> mark(filter(X1,X2))
    29: divides(mark(X1),X2) -> mark(divides(X1,X2))
    30: divides(X1,mark(X2)) -> mark(divides(X1,X2))
    31: proper(primes()) -> ok(primes())
    32: proper(sieve(X)) -> sieve(proper(X))
    33: proper(from(X)) -> from(proper(X))
    34: proper(s(X)) -> s(proper(X))
    35: proper(0()) -> ok(0())
    36: proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
    37: proper(head(X)) -> head(proper(X))
    38: proper(tail(X)) -> tail(proper(X))
    39: proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
    40: proper(true()) -> ok(true())
    41: proper(false()) -> ok(false())
    42: proper(filter(X1,X2)) -> filter(proper(X1),proper(X2))
    43: proper(divides(X1,X2)) -> divides(proper(X1),proper(X2))
    44: sieve(ok(X)) -> ok(sieve(X))
    45: from(ok(X)) -> ok(from(X))
    46: s(ok(X)) -> ok(s(X))
    47: cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
    48: head(ok(X)) -> ok(head(X))
    49: tail(ok(X)) -> ok(tail(X))
    50: if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
    51: filter(ok(X1),ok(X2)) -> ok(filter(X1,X2))
    52: divides(ok(X1),ok(X2)) -> ok(divides(X1,X2))
    53: top(mark(X)) -> top(proper(X))
    54: top(ok(X)) -> top(active(X))
Number of strict rules: 54
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(from(X)) -> #cons(X,from(s(X)))
   #2: #active(from(X)) -> #from(s(X))
   #3: #active(from(X)) -> #s(X)
   #4: #proper(divides(X1,X2)) -> #divides(proper(X1),proper(X2))
   #5: #proper(divides(X1,X2)) -> #proper(X1)
   #6: #proper(divides(X1,X2)) -> #proper(X2)
   #7: #divides(mark(X1),X2) -> #divides(X1,X2)
   #8: #s(ok(X)) -> #s(X)
   #9: #proper(filter(X1,X2)) -> #filter(proper(X1),proper(X2))
   #10: #proper(filter(X1,X2)) -> #proper(X1)
   #11: #proper(filter(X1,X2)) -> #proper(X2)
   #12: #proper(head(X)) -> #head(proper(X))
   #13: #proper(head(X)) -> #proper(X)
   #14: #cons(ok(X1),ok(X2)) -> #cons(X1,X2)
   #15: #top(mark(X)) -> #top(proper(X))
   #16: #top(mark(X)) -> #proper(X)
   #17: #head(ok(X)) -> #head(X)
   #18: #proper(tail(X)) -> #tail(proper(X))
   #19: #proper(tail(X)) -> #proper(X)
   #20: #filter(ok(X1),ok(X2)) -> #filter(X1,X2)
   #21: #active(head(X)) -> #head(active(X))
   #22: #active(head(X)) -> #active(X)
   #23: #active(sieve(X)) -> #sieve(active(X))
   #24: #active(sieve(X)) -> #active(X)
   #25: #active(s(X)) -> #s(active(X))
   #26: #active(s(X)) -> #active(X)
   #27: #head(mark(X)) -> #head(X)
   #28: #cons(mark(X1),X2) -> #cons(X1,X2)
   #29: #from(ok(X)) -> #from(X)
   #30: #active(cons(X1,X2)) -> #cons(active(X1),X2)
   #31: #active(cons(X1,X2)) -> #active(X1)
   #32: #active(tail(X)) -> #tail(active(X))
   #33: #active(tail(X)) -> #active(X)
   #34: #divides(X1,mark(X2)) -> #divides(X1,X2)
   #35: #divides(ok(X1),ok(X2)) -> #divides(X1,X2)
   #36: #tail(ok(X)) -> #tail(X)
   #37: #tail(mark(X)) -> #tail(X)
   #38: #sieve(mark(X)) -> #sieve(X)
   #39: #active(filter(s(s(X)),cons(Y,Z))) -> #if(divides(s(s(X)),Y),filter(s(s(X)),Z),cons(Y,filter(X,sieve(Y))))
   #40: #active(filter(s(s(X)),cons(Y,Z))) -> #divides(s(s(X)),Y)
   #41: #active(filter(s(s(X)),cons(Y,Z))) -> #filter(s(s(X)),Z)
   #42: #active(filter(s(s(X)),cons(Y,Z))) -> #cons(Y,filter(X,sieve(Y)))
   #43: #active(filter(s(s(X)),cons(Y,Z))) -> #filter(X,sieve(Y))
   #44: #active(filter(s(s(X)),cons(Y,Z))) -> #sieve(Y)
   #45: #proper(if(X1,X2,X3)) -> #if(proper(X1),proper(X2),proper(X3))
   #46: #proper(if(X1,X2,X3)) -> #proper(X1)
   #47: #proper(if(X1,X2,X3)) -> #proper(X2)
   #48: #proper(if(X1,X2,X3)) -> #proper(X3)
   #49: #active(from(X)) -> #from(active(X))
   #50: #active(from(X)) -> #active(X)
   #51: #proper(from(X)) -> #from(proper(X))
   #52: #proper(from(X)) -> #proper(X)
   #53: #sieve(ok(X)) -> #sieve(X)
   #54: #filter(X1,mark(X2)) -> #filter(X1,X2)
   #55: #s(mark(X)) -> #s(X)
   #56: #proper(s(X)) -> #s(proper(X))
   #57: #proper(s(X)) -> #proper(X)
   #58: #filter(mark(X1),X2) -> #filter(X1,X2)
   #59: #active(filter(X1,X2)) -> #filter(X1,active(X2))
   #60: #active(filter(X1,X2)) -> #active(X2)
   #61: #proper(sieve(X)) -> #sieve(proper(X))
   #62: #proper(sieve(X)) -> #proper(X)
   #63: #active(divides(X1,X2)) -> #divides(X1,active(X2))
   #64: #active(divides(X1,X2)) -> #active(X2)
   #65: #if(mark(X1),X2,X3) -> #if(X1,X2,X3)
   #66: #proper(cons(X1,X2)) -> #cons(proper(X1),proper(X2))
   #67: #proper(cons(X1,X2)) -> #proper(X1)
   #68: #proper(cons(X1,X2)) -> #proper(X2)
   #69: #from(mark(X)) -> #from(X)
   #70: #active(filter(X1,X2)) -> #filter(active(X1),X2)
   #71: #active(filter(X1,X2)) -> #active(X1)
   #72: #active(primes()) -> #sieve(from(s(s(0()))))
   #73: #active(primes()) -> #from(s(s(0())))
   #74: #active(primes()) -> #s(s(0()))
   #75: #active(primes()) -> #s(0())
   #76: #top(ok(X)) -> #top(active(X))
   #77: #top(ok(X)) -> #active(X)
   #78: #active(sieve(cons(X,Y))) -> #cons(X,filter(X,sieve(Y)))
   #79: #active(sieve(cons(X,Y))) -> #filter(X,sieve(Y))
   #80: #active(sieve(cons(X,Y))) -> #sieve(Y)
   #81: #active(if(X1,X2,X3)) -> #if(active(X1),X2,X3)
   #82: #active(if(X1,X2,X3)) -> #active(X1)
   #83: #if(ok(X1),ok(X2),ok(X3)) -> #if(X1,X2,X3)
   #84: #active(divides(X1,X2)) -> #divides(active(X1),X2)
   #85: #active(divides(X1,X2)) -> #active(X1)
Number of SCCs: 12, DPs: 47, edges: 367
	SCC { #29 #69 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#filter(x1,x2)	weight: 0
   top(x1)	weight: 0
 false()	weight: 0
 #top(x1)	weight: 0
#head(x1)	weight: 0
  true()	weight: 0
  tail(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 sieve(x1)	weight: 0
#proper(x1)	weight: 0
#divides(x1,x2)	weight: 0
#from(x1)	weight: x1
active(x1)	weight: 0
  head(x1)	weight: 0
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
filter(x1,x2)	weight: 0
primes()	weight: 0
#sieve(x1)	weight: 0
divides(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #29 #69
Number of SCCs: 11, DPs: 45, edges: 363
	SCC { #38 #53 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#filter(x1,x2)	weight: 0
   top(x1)	weight: 0
 false()	weight: 0
 #top(x1)	weight: 0
#head(x1)	weight: 0
  true()	weight: 0
  tail(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 sieve(x1)	weight: 0
#proper(x1)	weight: 0
#divides(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: 0
  head(x1)	weight: 0
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
filter(x1,x2)	weight: 0
primes()	weight: 0
#sieve(x1)	weight: x1
divides(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #38 #53
Number of SCCs: 10, DPs: 43, edges: 359
	SCC { #8 #55 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#filter(x1,x2)	weight: 0
   top(x1)	weight: 0
 false()	weight: 0
 #top(x1)	weight: 0
#head(x1)	weight: 0
  true()	weight: 0
  tail(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: x1
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 sieve(x1)	weight: 0
#proper(x1)	weight: 0
#divides(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: 0
  head(x1)	weight: 0
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
filter(x1,x2)	weight: 0
primes()	weight: 0
#sieve(x1)	weight: 0
divides(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8 #55
Number of SCCs: 9, DPs: 41, edges: 355
	SCC { #36 #37 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#filter(x1,x2)	weight: 0
   top(x1)	weight: 0
 false()	weight: 0
 #top(x1)	weight: 0
#head(x1)	weight: 0
  true()	weight: 0
  tail(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#tail(x1)	weight: x1
  mark(x1)	weight: (/ 1 2) + x1
 sieve(x1)	weight: 0
#proper(x1)	weight: 0
#divides(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: 0
  head(x1)	weight: 0
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
filter(x1,x2)	weight: 0
primes()	weight: 0
#sieve(x1)	weight: 0
divides(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #36 #37
Number of SCCs: 8, DPs: 39, edges: 351
	SCC { #17 #27 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#filter(x1,x2)	weight: 0
   top(x1)	weight: 0
 false()	weight: 0
 #top(x1)	weight: 0
#head(x1)	weight: x1
  true()	weight: 0
  tail(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 sieve(x1)	weight: 0
#proper(x1)	weight: 0
#divides(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: 0
  head(x1)	weight: 0
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
filter(x1,x2)	weight: 0
primes()	weight: 0
#sieve(x1)	weight: 0
divides(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #17 #27
Number of SCCs: 7, DPs: 37, edges: 347
	SCC { #15 #76 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
