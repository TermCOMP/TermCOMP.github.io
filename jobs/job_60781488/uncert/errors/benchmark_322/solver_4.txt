Input TRS:
    1: is_empty(nil()) -> true()
    2: is_empty(cons(x,l)) -> false()
    3: hd(cons(x,l)) -> x
    4: tl(cons(x,l)) -> cons(x,l)
    5: append(l1,l2) -> ifappend(l1,l2,is_empty(l1))
    6: ifappend(l1,l2,true()) -> l2
    7: ifappend(l1,l2,false()) -> cons(hd(l1),append(tl(l1),l2))
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #ifappend(l1,l2,false()) -> #hd(l1)
   #2: #ifappend(l1,l2,false()) -> #append(tl(l1),l2)
   #3: #ifappend(l1,l2,false()) -> #tl(l1)
   #4: #append(l1,l2) -> #ifappend(l1,l2,is_empty(l1))
   #5: #append(l1,l2) -> #is_empty(l1)
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #2 #4 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
