Input TRS:
    1: minus(X,s(Y)) -> pred(minus(X,Y))
    2: minus(X,0()) -> X
    3: pred(s(X)) -> X
    4: le(s(X),s(Y)) -> le(X,Y)
    5: le(s(X),0()) -> false()
    6: le(0(),Y) -> true()
    7: gcd(0(),Y) -> 0()
    8: gcd(s(X),0()) -> s(X)
    9: gcd(s(X),s(Y)) -> if(le(Y,X),s(X),s(Y))
    10: if(true(),s(X),s(Y)) -> gcd(minus(X,Y),s(Y))
    11: if(false(),s(X),s(Y)) -> gcd(minus(Y,X),s(X))
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #gcd(s(X),s(Y)) -> #if(le(Y,X),s(X),s(Y))
   #2: #gcd(s(X),s(Y)) -> #le(Y,X)
   #3: #if(false(),s(X),s(Y)) -> #gcd(minus(Y,X),s(X))
   #4: #if(false(),s(X),s(Y)) -> #minus(Y,X)
   #5: #if(true(),s(X),s(Y)) -> #gcd(minus(X,Y),s(Y))
   #6: #if(true(),s(X),s(Y)) -> #minus(X,Y)
   #7: #minus(X,s(Y)) -> #pred(minus(X,Y))
   #8: #minus(X,s(Y)) -> #minus(X,Y)
   #9: #le(s(X),s(Y)) -> #le(X,Y)
Number of SCCs: 3, DPs: 5, edges: 6
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
   gcd(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
  pred(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
#minus(x1,x2)	weight: x2
#pred(x1)	weight: 0
  #if(x1,x2,x3)	weight: 0
 #gcd(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 2, DPs: 4, edges: 5
	SCC { #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: x2
 minus(x1,x2)	weight: 0
   gcd(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
  pred(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
#minus(x1,x2)	weight: 0
#pred(x1)	weight: 0
  #if(x1,x2,x3)	weight: 0
 #gcd(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #9
Number of SCCs: 1, DPs: 3, edges: 4
	SCC { #1 #3 #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: (/ 1 2)
     s(x1)	weight: (/ 3 2) + x1
  #le(x1,x2)	weight: 0
 minus(x1,x2)	weight: (/ 1 2) + x1
   gcd(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
  pred(x1)	weight: x1
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
#minus(x1,x2)	weight: 0
#pred(x1)	weight: 0
  #if(x1,x2,x3)	weight: x2 + x3
 #gcd(x1,x2)	weight: (/ 1 2) + x1 + x2
    Usable rules: { 1..3 }
    Removed DPs: #1 #3 #5
Number of SCCs: 0, DPs: 0, edges: 0
