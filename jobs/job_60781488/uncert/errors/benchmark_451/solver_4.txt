Input TRS:
    1: leq(0(),y) -> true()
    2: leq(s(x),0()) -> false()
    3: leq(s(x),s(y)) -> leq(x,y)
    4: if(true(),x,y) -> x
    5: if(false(),x,y) -> y
    6: -(x,0()) -> x
    7: -(s(x),s(y)) -> -(x,y)
    8: mod(0(),y) -> 0()
    9: mod(s(x),0()) -> 0()
    10: mod(s(x),s(y)) -> if(leq(y,x),mod(-(s(x),s(y)),s(y)),s(x))
Number of strict rules: 10
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #-(s(x),s(y)) -> #-(x,y)
   #2: #mod(s(x),s(y)) -> #if(leq(y,x),mod(-(s(x),s(y)),s(y)),s(x))
   #3: #mod(s(x),s(y)) -> #leq(y,x)
   #4: #mod(s(x),s(y)) -> #mod(-(s(x),s(y)),s(y))
   #5: #mod(s(x),s(y)) -> #-(s(x),s(y))
   #6: #leq(s(x),s(y)) -> #leq(x,y)
Number of SCCs: 3, DPs: 3, edges: 3
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
   mod(x1,x2)	weight: 0
 false()	weight: 0
   leq(x1,x2)	weight: 0
  true()	weight: 0
 #leq(x1,x2)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
     -(x1,x2)	weight: 0
 #mod(x1,x2)	weight: 0
   #-(x1,x2)	weight: x2
  #if(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
   mod(x1,x2)	weight: 0
 false()	weight: 0
   leq(x1,x2)	weight: 0
  true()	weight: 0
 #leq(x1,x2)	weight: x2
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
     -(x1,x2)	weight: 0
 #mod(x1,x2)	weight: 0
   #-(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... succeeded.
     s(x1)	weight: max{0, (/ 3 8) + x1_1}; (- (/ 3 8)) + x1_2
   mod(x1,x2)	weight: 0; 0
 false()	weight: 0; 0
   leq(x1,x2)	weight: 0; 0
  true()	weight: 0; 0
 #leq(x1,x2)	weight: 0; 0
     0()	weight: (/ 1 8); (- (/ 1 8))
    if(x1,x2,x3)	weight: 0; 0
     -(x1,x2)	weight: max{0, (/ 1 8) + x2_2 + x1_1}; 0
 #mod(x1,x2)	weight: max{0, (/ 1 8) + x1_1}; 0
   #-(x1,x2)	weight: 0; 0
  #if(x1,x2,x3)	weight: 0; 0
    Usable rules: { 6 7 }
    Removed DPs: #4
Number of SCCs: 0, DPs: 0, edges: 0
